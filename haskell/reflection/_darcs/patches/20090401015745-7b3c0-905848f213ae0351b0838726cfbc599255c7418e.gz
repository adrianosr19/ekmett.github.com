[minor api change to make a better infix operator out of Reflects
ekmett@gmail.com**20090401015745] {
hunk ./Data/Reflection.hs 26
-      ReflectNum
+      ReflectedNum
hunk ./Data/Reflection.hs 30
-    , ReflectNums
+    , ReflectedNums
hunk ./Data/Reflection.hs 33
-    , ReflectStorable
+    , ReflectedStorable
hunk ./Data/Reflection.hs 37
-    , Reflect
+    , Reflects
hunk ./Data/Reflection.hs 56
-class ReflectNum s where
+class ReflectedNum s where
hunk ./Data/Reflection.hs 59
-instance ReflectNum Zero where
+instance ReflectedNum Zero where
hunk ./Data/Reflection.hs 62
-instance ReflectNum s => ReflectNum (Twice s) where
+instance ReflectedNum s => ReflectedNum (Twice s) where
hunk ./Data/Reflection.hs 65
-instance ReflectNum s => ReflectNum (Succ s) where
+instance ReflectedNum s => ReflectedNum (Succ s) where
hunk ./Data/Reflection.hs 68
-instance ReflectNum s => ReflectNum (Pred s) where
+instance ReflectedNum s => ReflectedNum (Pred s) where
hunk ./Data/Reflection.hs 71
-reifyIntegral :: Integral a => a -> (forall s. ReflectNum s => s -> w) -> w
+reifyIntegral :: Integral a => a -> (forall s. ReflectedNum s => s -> w) -> w
hunk ./Data/Reflection.hs 82
-class ReflectNums ss where
+class ReflectedNums ss where
hunk ./Data/Reflection.hs 85
-instance ReflectNums Nil where
+instance ReflectedNums Nil where
hunk ./Data/Reflection.hs 88
-instance (ReflectNum s, ReflectNums ss) => ReflectNums (Cons s ss) where
+instance (ReflectedNum s, ReflectedNums ss) => ReflectedNums (Cons s ss) where
hunk ./Data/Reflection.hs 91
-reifyIntegrals :: Integral a => [a] -> (forall ss. ReflectNums ss => ss -> w) -> w
+reifyIntegrals :: Integral a => [a] -> (forall ss. ReflectedNums ss => ss -> w) -> w
hunk ./Data/Reflection.hs 100
-class ReflectStorable s where
+class ReflectedStorable s where
hunk ./Data/Reflection.hs 103
-instance ReflectNums s => ReflectStorable (Store s) where
+instance ReflectedNums s => ReflectedStorable (Store s) where
hunk ./Data/Reflection.hs 111
-reifyStorable :: Storable a => a -> (forall s. ReflectStorable s => s a -> w) -> w
+reifyStorable :: Storable a => a -> (forall s. ReflectedStorable s => s a -> w) -> w
hunk ./Data/Reflection.hs 117
-class Reflect s a | s -> a where 
+class Reflects s a | s -> a where 
hunk ./Data/Reflection.hs 123
-instance ReflectStorable s => Reflect (Stable s a) a where
+instance ReflectedStorable s => Reflects (Stable s a) a where
hunk ./Data/Reflection.hs 126
-reify :: a -> (forall s. Reflect s a => s -> w) -> w
+reify :: a -> (forall s. Reflects s a => s -> w) -> w
hunk ./Data/Reflection.hs 132
-instance ReflectStorable s => Reflect (Stable s a) a where
+instance ReflectedStorable s => Reflects (Stable s a) a where
hunk ./Data/Reflection.hs 141
-reify :: a -> (forall s. Reflect s a => s -> w) -> w
+reify :: a -> (forall s. (s `Reflects` a) => s -> w) -> w
hunk ./reflection.cabal 2
-version:	    0.0.0
+version:	    0.1.0
}
