[added missing bits
ekmett@gmail.com**20080428190304] {
addfile ./Makefile
hunk ./Makefile 1
+.PHONY: docs
+
+build: all
+
+
+all:
+	@runhaskell Setup.lhs build
+
+config:
+	@runhaskell Setup.lhs configure
+
+html:
+	@runhaskell Setup.lhs haddock
+
+install:
+	@runhaskell Setup.lhs install
+
+run:
+	$(GHCI) Control.Comonad.State
+
+test:
+	find . -name "*.hs" | egrep -v '_darcs' | xargs qc
+
+tags:
+	find . -name "*.hs" | egrep -v '_darcs' | xargs hasktags -c
addfile ./Setup.lhs
hunk ./Setup.lhs 1
+#!/usr/bin/env runhaskell
+> import Distribution.Simple
+> main = defaultMainWithHooks defaultUserHooks
addfile ./ctl.cabal
hunk ./ctl.cabal 1
+name:			ctl
+category:		Control, Monads, Comonads
+version:		0.1
+license:		BSD3
+license-file:		LICENSE
+build-depends:		base -any, mtl -any
+author:			Edward A. Kmett
+maintainer:		ekmett@gmail.com
+stability:		experimental
+homepage:		http://comonad.com/
+synopsis:		Comonad Transformer Library
+copyright:		Copyright (C) 2008 Edward A. Kmett
+description: 		Defines comonads, a few missing monads and constructive algorithmic morphisms
+
+extensions:		
+	CPP, 
+	EmptyDataDecls, 
+	FlexibleContexts,
+	FlexibleInstances,
+	FunctionalDependencies, 
+	MultiParamTypeClasses, 
+	TypeFamilies, 
+	TypeSynonymInstances,
+	TypeOperators,
+	UndecidableInstances,
+	GADTs
+
+
+exposed-modules:
+--	Control.Arrow.CoKleisli,
+	Control.Bifunctor,
+	Control.Bifunctor.Braided,
+	Control.Bifunctor.Associative,
+	Control.Bifunctor.Instances,
+	Control.Bifunctor.Monoidal,
+	Control.Bifunctor.Composition,
+	Control.Comonad,
+	Control.Comonad.Cofree,
+	Control.Comonad.Identity,
+	Control.Comonad.Instances,
+	Control.Comonad.State,
+	Control.Comonad.State.Class,
+	Control.Comonad.Reader,
+	Control.Comonad.Reader.Class,
+	Control.Functor.Adjunction,
+	Control.Functor.Algebra,
+	Control.Functor.Composition
+	Control.Functor.Extras,
+	Control.Functor.Fix,
+	Control.Functor.Full,
+	Control.Functor.Pointed,
+	Control.Functor.Representable,
+	Control.Monad.Free,
+	Control.Monad.Either,
+	Control.Morphism.Hylo,
+	Control.Morphism.Cata,
+	Control.Morphism.Ana,
+	Control.Morphism.Meta,
+	Control.Morphism.Futu,
+	Control.Morphism.Chrono,
+	Control.Morphism.Para,
+	Control.Morphism.Dyna,
+	Control.Morphism.Apo,
+	Control.Morphism.Zygo,
+	Control.Morphism.Histo
+
+ghc-options:		-O2 -funbox-strict-fields
+hs-source-dirs:		src
addfile ./src/Control/Bifunctor/Instances.hs
hunk ./src/Control/Bifunctor/Instances.hs 1
+{-# OPTIONS -fglasgow-exts #-}
+-----------------------------------------------------------------------------
+-- |
+-- Module      :  Control.Bifunctor.Instances
+-- Copyright   :  (C) 2008 Edward Kmett
+-- License     :  BSD-style (see the file LICENSE)
+--
+-- Maintainer  :  Edward Kmett <ekmett@gmail.com>
+-- Stability   :  experimental
+-- Portability :  portable
+--
+----------------------------------------------------------------------------
+module Control.Bifunctor.Instances where
+
+import Control.Bifunctor
+import Control.Arrow ((***), (+++))
+
+instance Bifunctor (,) where
+        bimap = (***)
+
+instance Bifunctor Either where
+	bimap = (+++)
}
