[cleanup of Elgot
ekmett@gmail.com**20080520033501] {
hunk ./src/Control/Functor/Algebra/Elgot.hs 16
+-- 
+-- Elgot coalgebras are defined in:
+-- <http://comonad.com/reader/2008/elgot-coalgebras/>
hunk ./src/Control/Functor/Algebra/Elgot.hs 23
---	, g_elgot
---	, g_coelgot
hunk ./src/Control/Functor/Algebra/Elgot.hs 27
--- import Control.Functor.Extras
--- import Control.Comonad
--- import Control.Monad
hunk ./src/Control/Functor/Algebra/Elgot.hs 28
+-- | Elgot algebra
hunk ./src/Control/Functor/Algebra/Elgot.hs 32
+-- | Elgot coalgebra
hunk ./src/Control/Functor/Algebra/Elgot.hs 36
--- ideally this would have b -> Either a (f b)
--- g_elgot :: (Comonad w, Functor f) => Dist f w -> GAlgebra f w a -> (b -> Either (w a) (f b)) -> b -> a
--- g_elgot k phi psi = extract . h where 
--- 	h = (id ||| liftW phi . k . fmap (duplicate . h)) . psi
-
--- g_coelgot :: (Monad m, Functor f) => Dist m f -> ((m a, f b) -> b) -> GCoalgebra f m a -> a -> b
--- g_coelgot k phi psi = h . return where
---	h = phi . (id &&& fmap (h . join) . k . liftM psi)
-
}
