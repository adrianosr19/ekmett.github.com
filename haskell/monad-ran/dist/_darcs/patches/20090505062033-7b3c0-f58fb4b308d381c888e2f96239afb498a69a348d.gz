[auto
ekmett@gmail.com**20090505062033
 Ignore-this: 422fc15eac3fd69bd8ae36fa6b911d4b
] {
hunk ./doc/html/monad-ran/Control-Functor-Pointed.html 295
+> ((-&gt;) e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Functor-Pointed.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Functor-Pointed.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 226
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AreturnRanCodensity"
+>returnRanCodensity</A
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m) =&gt; a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AbindRanCodensity"
+>bindRanCodensity</A
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; (a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m b) -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m b</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AapRanCodensity"
+>apRanCodensity</A
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m (a -&gt; b) -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m b</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AranCodensity"
+>ranCodensity</A
+> ::  <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f) a -&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AcodensityRan"
+>codensityRan</A
+> ::  <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f) a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AliftRanCodensity"
+>liftRanCodensity</A
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m)) =&gt; <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AlowerRanCodensity"
+>lowerRanCodensity</A
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m)) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AliftRanWorld"
+>liftRanWorld</A
+> :: (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ World w, <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m ~ World w) =&gt; (<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w -&gt; (#<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w, a#)) -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AlowerRanWorld"
+>lowerRanWorld</A
+> :: (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ World w, <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m ~ World w) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w -&gt; (#<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w, a#)</TD
+></TR
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1008
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO-Error.html#t%3AIOError"
+>IOError</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
+>IO</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1034
+> e (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> ((-&gt;) e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1066
+> s (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1098
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w))</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1126
+> ((-&gt;) e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1182
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1246
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
+>IO</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AError"
+>Error</A
+> e =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST.html#t%3AST"
+>ST</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1310
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
+>IO</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1370
+> ((-&gt;) e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1414
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1480
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1532
+> ((-&gt;) e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Functor-Pointed.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Functor-Pointed.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1590
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> b) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
+>Identity</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> b) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
+>Identity</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> b) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
+>Identity</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> b) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
+>Identity</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> ((-&gt;) e) m)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1869
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AreturnRanCodensity"
+></A
+><B
+>returnRanCodensity</B
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m) =&gt; a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#returnRanCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AbindRanCodensity"
+></A
+><B
+>bindRanCodensity</B
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; (a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m b) -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m b</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#bindRanCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AapRanCodensity"
+></A
+><B
+>apRanCodensity</B
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m (a -&gt; b) -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m b</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#apRanCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AranCodensity"
+></A
+><B
+>ranCodensity</B
+> ::  <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f) a -&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#ranCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AcodensityRan"
+></A
+><B
+>codensityRan</B
+> ::  <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f) a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#codensityRan"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AliftRanCodensity"
+></A
+><B
+>liftRanCodensity</B
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m)) =&gt; <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m a -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#liftRanCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AlowerRanCodensity"
+></A
+><B
+>lowerRanCodensity</B
+> :: (RanIso m, <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m)) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; <A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#lowerRanCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AliftRanWorld"
+></A
+><B
+>liftRanWorld</B
+> :: (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ World w, <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m ~ World w) =&gt; (<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w -&gt; (#<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w, a#)) -&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#liftRanWorld"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AlowerRanWorld"
+></A
+><B
+>lowerRanWorld</B
+> :: (<A HREF="Control-Monad-Ran.html#t%3AG"
+>G</A
+> m ~ World w, <A HREF="Control-Monad-Ran.html#t%3AH"
+>H</A
+> m ~ World w) =&gt; <A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m a -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w -&gt; (#<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AState%23"
+>State#</A
+> w, a#)</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#lowerRanWorld"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monad-ran/Control-Monad-Yoneda.html 123
-><A HREF="#v%3ArunYoneda"
->runYoneda</A
+><A HREF="#v%3AlowerYoneda"
+>lowerYoneda</A
hunk ./doc/html/monad-ran/Control-Monad-Yoneda.html 379
-><A NAME="v%3ArunYoneda"
+><A NAME="v%3AlowerYoneda"
hunk ./doc/html/monad-ran/Control-Monad-Yoneda.html 382
->runYoneda</B
+>lowerYoneda</B
hunk ./doc/html/monad-ran/Control-Monad-Yoneda.html 387
-><A HREF="src/Control-Monad-Yoneda.html#runYoneda"
+><A HREF="src/Control-Monad-Yoneda.html#lowerYoneda"
hunk ./doc/html/monad-ran/doc-index.html 49
+><TD CLASS="indexentry"
+>apRanCodensity</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AapRanCodensity"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>bindRanCodensity</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AbindRanCodensity"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
hunk ./doc/html/monad-ran/doc-index.html 90
+>codensityRan</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AcodensityRan"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 158
+>liftRanCodensity</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AliftRanCodensity"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>liftRanWorld</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AliftRanWorld"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 205
+><TD CLASS="indexentry"
+>lowerRanCodensity</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AlowerRanCodensity"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>lowerRanWorld</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#v%3AlowerRanWorld"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>lowerYoneda</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Yoneda.html#v%3AlowerYoneda"
+>Control.Monad.Yoneda</A
+></TD
+></TR
+><TR CLASS="indexrow"
hunk ./doc/html/monad-ran/doc-index.html 294
->RMonad</TD
+>ranCodensity</TD
hunk ./doc/html/monad-ran/doc-index.html 296
-><A HREF="Control-Monad-Ran.html#t%3ARMonad"
+><A HREF="Control-Monad-Ran.html#v%3AranCodensity"
hunk ./doc/html/monad-ran/doc-index.html 302
->runYoneda</TD
+>returnRanCodensity</TD
hunk ./doc/html/monad-ran/doc-index.html 304
-><A HREF="Control-Monad-Yoneda.html#v%3ArunYoneda"
->Control.Monad.Yoneda</A
+><A HREF="Control-Monad-Ran.html#v%3AreturnRanCodensity"
+>Control.Monad.Ran</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>RMonad</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-Ran.html#t%3ARMonad"
+>Control.Monad.Ran</A
binary ./doc/html/monad-ran/monad-ran.haddock
oldhex
*0d0cface000400000000000009a600000000000007461800000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000300000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000004000000000000000b0000000000000000000000000000000400
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000505000000000000000000000000000000010000000000040000
*000000000000000000000000000100000000000000020000000000000003040000000000000000
*000000000000000100000000000000020000000000000003000000000000000000000000000000
*02000108000000700000006f000000720000007400000061000000620000006c00000065010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c011f0000004500000064000000770000006100000072000000640000002000
*00004b0000006d000000650000007400000074000000200000003c000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d0000003e00020000000000000004000000000000000502000000
*000000000400000000000000050000000000000000000000000000000300000000000400000000
*000000060000000000000007000000000000000800000000000000090400000000000000060000
*000000000007000000000000000800000000000000090000000000000000000000000000000400
*00000001000000000000000a030102200000005400000068000000650000002000000043000000
*6f00000064000000650000006e00000073000000690000007400000079000000200000006d0000
*006f0000006e0000006100000064000000200000006f0000006600000020000000610000002000
*000066000000750000006e00000063000000740000006f000000720102010000002f021d000000
*6d0000006f0000006e00000061000000640000002000000067000000650000006e000000650000
*007200000061000000740000006500000064000000200000006200000079000000200000006100
*00002000000066000000750000006e00000063000000740000006f000000720000000a06000000
*000000000a000000000000000b000000000000000c000000000000000d000000000000000e0000
*00000000000f06000000000000000a000000000000000b000000000000000c000000000000000d
*000000000000000e000000000000000f0000000000000000000000000000000500000000010000
*00000000001503022e000000410000002000000072000000690000006700000068000000740000
*00200000004b000000610000006e00000020000000650000007800000074000000650000006e00
*000073000000690000006f0000006e000000200000007400000072000000610000006e00000073
*000000660000006f000000720000006d000000650000007200000020000000660000006f000000
*720000002000000061000000200000006d0000006f0000006e00000061000000640000000a0e00
*0000000000000600000000000000070000000000000008000000000000000a000000000000000b
*000000000000000c00000000000000100000000000000011000000000000001200000000000000
*1300000000000000140000000000000015000000000000001600000000000000170e0000000000
*00000600000000000000070000000000000008000000000000000a000000000000000b00000000
*0000000c0000000000000015000000000000001600000000000000170000000000000010000000
*000000001100000000000000120000000000000013000000000000001400000000000000180000
*000000000000000000000000000103000000000000000600000000000000000000000000000001
*010000000000000006000000000000000000000000000000010000000000000000070000000000
*000000000000000000000100000000000000000800000000000000000000000000000002030000
*0000000000090000000000000000000000000000000200000000000000000a0000000000000000
*000000000000000303000000000000000b00000000000000000000000000000003010000000000
*00000b0000000000000000000000000000000300000000000000000c0000000000000000000000
*000000000300000000000000000d0000000000000000000000000000000403000000000000000e
*0000000000000000000000000000000401000000000000000e0000000000000000000000000000
*000400000000000000000f00000000000000000000000000000004000000000000000010000000
*000000000000000000000000040000000000000000110000000000000000000000000000000400
*000000000000001200000000000000000000000000000005030000000000000013000000000000
*000000000000000000050300000000000000140000000000000000000000000000000503000000
*000000001500000000000000000000000000000005000000000000000016000000000000000000
*000000000000050000000000000000170000000000000000000000000000000503000000000000
*001800000000000000000000000000000005010000000000000018000000000000000000000000
*00000005000000000000000019000000000000001a000000000000000f6d6f6e61642d72616e2d
*302e302e370000000000000017436f6e74726f6c2e4d6f6e61642e4350532e4d61796265000000
*0000000017436f6e74726f6c2e46756e63746f722e506f696e7465640000000000000014436f6e
*74726f6c2e4d6f6e61642e596f6e6564610000000000000017436f6e74726f6c2e4d6f6e61642e
*436f64656e736974790000000000000011436f6e74726f6c2e4d6f6e61642e52616e0000000000
*0000064d617962652700000000000000096765744d617962652700000000000000066d61796265
*270000000000000007506f696e7465640000000000000005706f696e740000000000000006596f
*6e6564610000000000000009676574596f6e656461000000000000000972756e596f6e65646100
*00000000000009436f64656e73697479000000000000000c676574436f64656e73697479000000
*000000000e6c6f776572436f64656e7369747900000000000000116c6f776572436f64656e7369
*747941707000000000000000156c6f776572436f64656e73697479506f696e7465640000000000
*000006524d6f6e616400000000000000014700000000000000014800000000000000076c696674
*52616e00000000000000086c6f77657252616e000000000000000352616e000000000000000667
*657452616e
newhex
*0d0cface00040000000000000bef00000000000008ae2100000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000300000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000004000000000000000b0000000000000000000000000000000400
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000005000000000000001d0000000000000000000000000000
*0005000000000000001e00000000000000000000000000000005000000000000001f0000000000
*000000000000000000000500000000000000200000000000000000000000000000000505000000
*000000000000000000000000010000000000040000000000000000000000000000000100000000
*000000020000000000000003040000000000000000000000000000000100000000000000020000
*00000000000300000000000000000000000000000002000108000000700000006f000000720000
*007400000061000000620000006c00000065010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c011f0000004500000064
*00000077000000610000007200000064000000200000004b0000006d0000006500000074000000
*74000000200000003c000000650000006b0000006d000000650000007400000074000000400000
*00670000006d00000061000000690000006c0000002e000000630000006f0000006d0000003e00
*020000000000000004000000000000000502000000000000000400000000000000050000000000
*000000000000000000000300000000000400000000000000060000000000000007000000000000
*000800000000000000090400000000000000060000000000000007000000000000000800000000
*00000009000000000000000000000000000000040000000001000000000000000a030102200000
*0054000000680000006500000020000000430000006f00000064000000650000006e0000007300
*0000690000007400000079000000200000006d0000006f0000006e000000610000006400000020
*0000006f0000006600000020000000610000002000000066000000750000006e00000063000000
*740000006f000000720102010000002f021d0000006d0000006f0000006e000000610000006400
*00002000000067000000650000006e000000650000007200000061000000740000006500000064
*00000020000000620000007900000020000000610000002000000066000000750000006e000000
*63000000740000006f000000720000000a06000000000000000a000000000000000b0000000000
*00000c000000000000000d000000000000000e000000000000000f06000000000000000a000000
*000000000b000000000000000c000000000000000d000000000000000e000000000000000f0000
*00000000000000000000000000050000000001000000000000001503022e000000410000002000
*00007200000069000000670000006800000074000000200000004b000000610000006e00000020
*000000650000007800000074000000650000006e00000073000000690000006f0000006e000000
*200000007400000072000000610000006e00000073000000660000006f000000720000006d0000
*00650000007200000020000000660000006f000000720000002000000061000000200000006d00
*00006f0000006e00000061000000640000000a1700000000000000060000000000000007000000
*0000000008000000000000000a000000000000000b000000000000000c00000000000000100000
*000000000011000000000000001200000000000000130000000000000014000000000000001500
*00000000000016000000000000001700000000000000180000000000000019000000000000001a
*000000000000001b000000000000001c000000000000001d000000000000001e00000000000000
*1f0000000000000020170000000000000006000000000000000700000000000000080000000000
*00000a000000000000000b000000000000000c0000000000000015000000000000001600000000
*000000170000000000000010000000000000001100000000000000120000000000000013000000
*000000001400000000000000180000000000000019000000000000001a000000000000001d0000
*00000000001e000000000000001b000000000000001c000000000000001f000000000000002000
*000000000000210000000000000000000000000000000103000000000000000600000000000000
*000000000000000001010000000000000006000000000000000000000000000000010000000000
*000000070000000000000000000000000000000100000000000000000800000000000000000000
*000000000002030000000000000009000000000000000000000000000000020000000000000000
*0a0000000000000000000000000000000303000000000000000b00000000000000000000000000
*00000301000000000000000b0000000000000000000000000000000300000000000000000c0000
*000000000000000000000000000300000000000000000d00000000000000000000000000000004
*03000000000000000e0000000000000000000000000000000401000000000000000e0000000000
*000000000000000000000400000000000000000f00000000000000000000000000000004000000
*000000000010000000000000000000000000000000040000000000000000110000000000000000
*000000000000000400000000000000001200000000000000000000000000000005030000000000
*000013000000000000000000000000000000050300000000000000140000000000000000000000
*000000000503000000000000001500000000000000000000000000000005000000000000000016
*000000000000000000000000000000050000000000000000170000000000000000000000000000
*000503000000000000001800000000000000000000000000000005010000000000000018000000
*000000000000000000000000050000000000000000190000000000000000000000000000000500
*000000000000001a0000000000000000000000000000000500000000000000001b000000000000
*0000000000000000000500000000000000001c0000000000000000000000000000000500000000
*000000001d0000000000000000000000000000000500000000000000001e000000000000000000
*0000000000000500000000000000001f0000000000000000000000000000000500000000000000
*002000000000000000000000000000000005000000000000000021000000000000000000000000
*000000050000000000000000220000000000000023000000000000000f6d6f6e61642d72616e2d
*302e302e370000000000000017436f6e74726f6c2e4d6f6e61642e4350532e4d61796265000000
*0000000017436f6e74726f6c2e46756e63746f722e506f696e7465640000000000000014436f6e
*74726f6c2e4d6f6e61642e596f6e6564610000000000000017436f6e74726f6c2e4d6f6e61642e
*436f64656e736974790000000000000011436f6e74726f6c2e4d6f6e61642e52616e0000000000
*0000064d617962652700000000000000096765744d617962652700000000000000066d61796265
*270000000000000007506f696e7465640000000000000005706f696e740000000000000006596f
*6e6564610000000000000009676574596f6e656461000000000000000b6c6f776572596f6e6564
*610000000000000009436f64656e73697479000000000000000c676574436f64656e7369747900
*0000000000000e6c6f776572436f64656e7369747900000000000000116c6f776572436f64656e
*7369747941707000000000000000156c6f776572436f64656e73697479506f696e746564000000
*0000000006524d6f6e616400000000000000014700000000000000014800000000000000076c69
*667452616e00000000000000086c6f77657252616e000000000000000352616e00000000000000
*0667657452616e000000000000001272657475726e52616e436f64656e73697479000000000000
*001062696e6452616e436f64656e73697479000000000000000e617052616e436f64656e736974
*7900000000000000106c69667452616e436f64656e7369747900000000000000116c6f77657252
*616e436f64656e73697479000000000000000c72616e436f64656e73697479000000000000000c
*636f64656e7369747952616e000000000000000c6c69667452616e576f726c6400000000000000
*0d6c6f77657252616e576f726c64
hunk ./doc/html/monad-ran/src/Control-Monad-Codensity.html 80
-<a name="line-72"></a><span class='hs-comment'>--    Codensity f `catchError` h = catchError . run</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadTrans</span> <span class='hs-conid'>Codensity</span> <span class='hs-keyword'>where</span>
-<a name="line-75"></a>    <span class='hs-varid'>lift</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><a name="lowerCodensity"></a><span class='hs-definition'>lowerCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-78"></a><span class='hs-definition'>lowerCodensity</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>return</span>
-<a name="line-79"></a>
-<a name="line-80"></a><a name="lowerCodensityApp"></a><span class='hs-definition'>lowerCodensityApp</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-81"></a><span class='hs-definition'>lowerCodensityApp</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>pure</span>
-<a name="line-82"></a>
-<a name="line-83"></a><a name="lowerCodensityPointed"></a><span class='hs-definition'>lowerCodensityPointed</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-84"></a><span class='hs-definition'>lowerCodensityPointed</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>pure</span>
-<a name="line-85"></a>
+<a name="line-72"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>lowerCodensity</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span>
+<a name="line-73"></a><span class='hs-comment'>--    Codensity f `catchError` h = catchError . run</span>
+<a name="line-74"></a>
+<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadTrans</span> <span class='hs-conid'>Codensity</span> <span class='hs-keyword'>where</span>
+<a name="line-76"></a>    <span class='hs-varid'>lift</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>
+<a name="line-78"></a><a name="lowerCodensity"></a><span class='hs-definition'>lowerCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-79"></a><span class='hs-definition'>lowerCodensity</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>return</span>
+<a name="line-80"></a>
+<a name="line-81"></a><a name="lowerCodensityApp"></a><span class='hs-definition'>lowerCodensityApp</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-82"></a><span class='hs-definition'>lowerCodensityApp</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>pure</span>
+<a name="line-83"></a>
+<a name="line-84"></a><a name="lowerCodensityPointed"></a><span class='hs-definition'>lowerCodensityPointed</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-85"></a><span class='hs-definition'>lowerCodensityPointed</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>pure</span>
+<a name="line-86"></a>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 9
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE RankNTypes, FlexibleInstances, FlexibleContexts, TypeFamilies, MultiParamTypeClasses, MagicHash, UnboxedTuples, UndecidableInstances  #-}</span>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE RankNTypes, FlexibleInstances, FlexibleContexts, TypeFamilies, MultiParamTypeClasses, MagicHash, UnboxedTuples, UndecidableInstances, TypeSynonymInstances  #-}</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 26
-<a name="line-18"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybe</span><span class='hs-layout'>)</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Yoneda</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
-<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span>
-<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
-<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>IOBase</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span><span class='hs-layout'>)</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Conc</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="Ran"></a><span class='hs-comment'>-- | A right Kan extension transformer for a monad</span>
-<a name="line-41"></a><a name="Ran"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
-<a name="line-42"></a>
-<a name="line-43"></a><a name="Functor"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-varid'>f</span>    <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-45"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-varid'>f</span>    <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-46"></a>    <span class='hs-varid'>liftRan</span>       <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-47"></a>    <span class='hs-varid'>lowerRan</span>      <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>ranCodensity</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>codensityRan</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanCodensity</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanWorld</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRanWorld</span>
+<a name="line-27"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybe</span><span class='hs-layout'>)</span>
+<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
+<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Yoneda</span>
+<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
+<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span>
+<a name="line-43"></a>
+<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>IOBase</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span><span class='hs-layout'>)</span>
+<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Conc</span>
+<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 57
-<a name="line-49"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-50"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Read</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span><span class='hs-layout'>)</span>
+<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Show</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 60
-<a name="line-52"></a><a name="returnCodensity"></a><span class='hs-definition'>returnCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-53"></a><span class='hs-definition'>returnCodensity</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-52"></a><a name="Ran"></a><span class='hs-comment'>-- | A right Kan extension transformer for a monad</span>
+<a name="line-53"></a><a name="Ran"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 63
-<a name="line-55"></a><a name="bindCodensity"></a><span class='hs-definition'>bindCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
-<a name="line-56"></a><span class='hs-definition'>bindCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-57"></a>
-<a name="line-58"></a><a name="apCodensity"></a><span class='hs-definition'>apCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
-<a name="line-59"></a><span class='hs-definition'>apCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-55"></a><a name="Functor"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
+<a name="line-56"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-57"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-58"></a>    <span class='hs-varid'>liftRan</span>  <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-59"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 69
-<a name="line-61"></a><a name="RMonad"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span> 
-<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span>
+<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-62"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 72
-<a name="line-64"></a><a name="RApplicative"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span> 
-<a name="line-65"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span>
+<a name="line-64"></a><a name="returnRanCodensity"></a><span class='hs-definition'>returnRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-65"></a><span class='hs-definition'>returnRanCodensity</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 75
-<a name="line-67"></a><span class='hs-comment'>-- The codensity monad as a right Kan extension of a functor along itself</span>
-<a name="line-68"></a><span class='hs-comment'>-- Many state-like monads can be CPS transformed into a codensity monad.</span>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
-<a name="line-71"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
-<a name="line-72"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span>
-<a name="line-73"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span>
-<a name="line-74"></a>
-<a name="line-75"></a><a name="ranCodensity"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-76"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-77"></a>
-<a name="line-78"></a><a name="codensityRan"></a><span class='hs-definition'>codensityRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-79"></a><span class='hs-definition'>codensityRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
-<a name="line-80"></a>
-<a name="line-81"></a><a name="liftRanCodensity"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-82"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="lowerRanCodensity"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
-<a name="line-85"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>return</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-89"></a>
-<a name="line-90"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-91"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-92"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apCodensity</span>
-<a name="line-93"></a>
-<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-95"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-96"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindCodensity</span>
-<a name="line-97"></a>
-<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-99"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-100"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-101"></a>    
-<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-103"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-104"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-105"></a>
-<a name="line-106"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-107"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-108"></a>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>
-<a name="line-113"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-114"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> 
-<a name="line-115"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-116"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-117"></a>
-<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>ask</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-120"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-121"></a>
-<a name="line-122"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-123"></a>    
-<a name="line-124"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-125"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-126"></a>
-<a name="line-127"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-128"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-129"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-130"></a>
-<a name="line-131"></a><span class='hs-comment'>-- TODO: the other instances for Ran (Codensity f)</span>
-<a name="line-132"></a><span class='hs-comment'>-- MonadIO, MonadState, etc.</span>
-<a name="line-133"></a>
-<a name="line-134"></a><span class='hs-comment'>-- Yoneda Identity a ~ Codensity Identity a ~ forall o. (a -&gt; o) -&gt; o</span>
-<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Identity</span> <span class='hs-keyword'>where</span>
-<a name="line-136"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-137"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-138"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-139"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getRan</span> <span class='hs-conid'>Identity</span>
-<a name="line-140"></a>
-<a name="line-141"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-142"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-143"></a>
-<a name="line-144"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-145"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-146"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apCodensity</span>
-<a name="line-147"></a>
-<a name="line-148"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-149"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-150"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindCodensity</span>
-<a name="line-151"></a>
-<a name="line-152"></a><a name="World"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-153"></a>
-<a name="line-154"></a><a name="STret'"></a><span class='hs-comment'>-- homegrown STret with flopped arguments</span>
-<a name="line-155"></a><a name="STret'"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-67"></a><a name="bindRanCodensity"></a><span class='hs-definition'>bindRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
+<a name="line-68"></a><span class='hs-definition'>bindRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-69"></a>
+<a name="line-70"></a><a name="apRanCodensity"></a><span class='hs-definition'>apRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
+<a name="line-71"></a><span class='hs-definition'>apRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f'</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-72"></a>
+<a name="line-73"></a><a name="liftRanCodensity"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-74"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-75"></a>
+<a name="line-76"></a><a name="lowerRanCodensity"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> 
+<a name="line-77"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>return</span>
+<a name="line-78"></a>
+<a name="line-79"></a><a name="mfixRanCodensity"></a><span class='hs-definition'>mfixRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-80"></a><span class='hs-definition'>mfixRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-81"></a>
+<a name="line-82"></a><a name="mfixRan"></a><span class='hs-definition'>mfixRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-83"></a><span class='hs-definition'>mfixRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-84"></a>
+<a name="line-85"></a><a name="RMonad"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span> 
+<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span>
+<a name="line-87"></a>
+<a name="line-88"></a><a name="RApplicative"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span> 
+<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span>
+<a name="line-90"></a>
+<a name="line-91"></a><span class='hs-comment'>-- The codensity monad as a right Kan extension of a functor along itself</span>
+<a name="line-92"></a><span class='hs-comment'>-- Many state-like monads can be CPS transformed into a codensity monad.</span>
+<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-94"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
+<a name="line-95"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
+<a name="line-96"></a>    <span class='hs-varid'>liftRan</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>codensityRan</span>
+<a name="line-97"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>ranCodensity</span>
+<a name="line-98"></a>
+<a name="line-99"></a><a name="ranCodensity"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-100"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span>
+<a name="line-101"></a>
+<a name="line-102"></a><a name="codensityRan"></a><span class='hs-definition'>codensityRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-103"></a><span class='hs-definition'>codensityRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span>
+<a name="line-104"></a>
+<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-106"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-107"></a>
+<a name="line-108"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-109"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-110"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-111"></a>
+<a name="line-112"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-113"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-114"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-115"></a>
+<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-117"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
+<a name="line-118"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-119"></a>
+<a name="line-120"></a><span class='hs-comment'>{-
+<a name="line-121"></a>instance MonadPlus f =&gt; Alternative (Ran (Codensity f)) where
+<a name="line-122"></a>    empty = liftRan mzero
+<a name="line-123"></a>    m &lt;|&gt; n = liftRan (lowerRan m `mplus` lowerRan n)
+<a name="line-124"></a>-}</span>
+<a name="line-125"></a>    
+<a name="line-126"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-127"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-128"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-129"></a>
+<a name="line-130"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-131"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-132"></a>
+<a name="line-133"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-134"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-135"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-136"></a>
+<a name="line-137"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-138"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> 
+<a name="line-139"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-140"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-141"></a>
+<a name="line-142"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-143"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>ask</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-144"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-145"></a>
+<a name="line-146"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-147"></a>    
+<a name="line-148"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-149"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-150"></a>
+<a name="line-151"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-152"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-153"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-154"></a>
+<a name="line-155"></a><span class='hs-comment'>-- TODO: any other instances for Ran (Codensity f)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 165
-<a name="line-157"></a><a name="liftRanWorld"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-158"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>World</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w'</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-159"></a>
-<a name="line-160"></a><span class='hs-comment'>-- viewpatterned to eliminate named temporaries:</span>
-<a name="line-161"></a><span class='hs-comment'>-- liftRanWorld f = Ran (\k -&gt; World (\(f -&gt; (# w, (runWorld . k -&gt; j) #)) -&gt; j w))</span>
-<a name="line-162"></a>
-<a name="line-163"></a><a name="lowerRanWorld"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-164"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>World</span> <span class='hs-varop'>.</span> <span class='hs-conid'>STret'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> 
-<a name="line-165"></a>    <span class='hs-conid'>STret'</span> <span class='hs-varid'>b</span> <span class='hs-varid'>w''</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w''</span><span class='hs-layout'>,</span> <span class='hs-varid'>b</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-157"></a><span class='hs-comment'>-- Yoneda Identity a ~ Codensity Identity a ~ forall o. (a -&gt; o) -&gt; o</span>
+<a name="line-158"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Identity</span> <span class='hs-keyword'>where</span>
+<a name="line-159"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-160"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-161"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-162"></a>    <span class='hs-varid'>lowerRan</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getRan</span> <span class='hs-conid'>Identity</span>
+<a name="line-163"></a>
+<a name="line-164"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-165"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 175
-<a name="line-167"></a><span class='hs-comment'>-- Represent IO as the codensity of the RealWorld</span>
-<a name="line-168"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>IO</span> <span class='hs-keyword'>where</span>
-<a name="line-169"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-170"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-171"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
-<a name="line-172"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IO</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-173"></a>
-<a name="line-174"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-175"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-176"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apCodensity</span>
+<a name="line-167"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-168"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-169"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-170"></a>
+<a name="line-171"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-172"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-173"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-174"></a>
+<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-176"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 186
-<a name="line-178"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-179"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-180"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindCodensity</span>
-<a name="line-181"></a>
-<a name="line-182"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-183"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
-<a name="line-184"></a>
-<a name="line-185"></a><span class='hs-comment'>-- Represent ST s as the codensity of the world s</span>
-<a name="line-186"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-187"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
-<a name="line-188"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
-<a name="line-189"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
-<a name="line-190"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-191"></a>
-<a name="line-192"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-193"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-194"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apCodensity</span>
-<a name="line-195"></a>
-<a name="line-196"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-197"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-198"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindCodensity</span>
-<a name="line-199"></a>
-<a name="line-200"></a><span class='hs-comment'>-- todo make a MonadST class</span>
+<a name="line-178"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-179"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span>
+<a name="line-180"></a>
+<a name="line-181"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-182"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-183"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"return "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-184"></a>    
+<a name="line-185"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-186"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-187"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"return"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-188"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-189"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-190"></a>
+<a name="line-191"></a><span class='hs-comment'>-- Codensity (Reader s)</span>
+<a name="line-192"></a><span class='hs-comment'>-- forall o. (a -&gt; s -&gt; o) -&gt; s -&gt; o</span>
+<a name="line-193"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-194"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
+<a name="line-195"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
+<a name="line-196"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>uncurry</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-197"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>(,)</span><span class='hs-layout'>)</span>
+<a name="line-198"></a>
+<a name="line-199"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-200"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 210
-<a name="line-202"></a><span class='hs-comment'>-- Represent STM as the codensity of the RealWorld</span>
-<a name="line-203"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>STM</span> <span class='hs-keyword'>where</span>
-<a name="line-204"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-205"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-206"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
-<a name="line-207"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STM</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-208"></a>
-<a name="line-209"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-210"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-211"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apCodensity</span>
-<a name="line-212"></a>
-<a name="line-213"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-214"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnCodensity</span>
-<a name="line-215"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindCodensity</span>
-<a name="line-216"></a>
-<a name="line-217"></a><span class='hs-comment'>-- TODO: make a MonadSTM class</span>
-<a name="line-218"></a>
-<a name="line-219"></a><span class='hs-comment'>-- Yoneda Endo a ~ forall o. (a -&gt; o) -&gt; o -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; Endo o</span>
-<a name="line-220"></a><span class='hs-comment'>-- note Endo is not a Hask Functor and Maybe is not a Codensity monad, so this is trickier</span>
-<a name="line-221"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyword'>where</span>
-<a name="line-222"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-223"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
-<a name="line-224"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybe</span> <span class='hs-varid'>mzero</span> <span class='hs-varid'>return</span>
-<a name="line-225"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>mzero</span>
-<a name="line-226"></a>
-<a name="line-227"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-228"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-229"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-230"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
-<a name="line-231"></a>
-<a name="line-232"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-233"></a>    <span class='hs-varid'>pure</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-234"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-235"></a>
-<a name="line-236"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-237"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-238"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-202"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-203"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-204"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-205"></a>
+<a name="line-206"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-207"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-208"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-209"></a>
+<a name="line-210"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-211"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-212"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-213"></a>
+<a name="line-214"></a><span class='hs-comment'>-- embedded as CPS'd State rather than directly to avoid superfluous 'mappend mempty' calls for expensive monoids</span>
+<a name="line-215"></a><span class='hs-comment'>-- forall o. (a -&gt; w -&gt; o) -&gt; w -&gt; o</span>
+<a name="line-216"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-217"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span>
+<a name="line-218"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span>
+<a name="line-219"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-220"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>(,)</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-221"></a>
+<a name="line-222"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-223"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-224"></a>
+<a name="line-225"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-226"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-227"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-228"></a>
+<a name="line-229"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-230"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-231"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-232"></a>
+<a name="line-233"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-234"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w'</span>        <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-235"></a>    <span class='hs-varid'>listen</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-236"></a>    <span class='hs-varid'>pass</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-237"></a>
+<a name="line-238"></a><a name="World"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 248
-<a name="line-240"></a><span class='hs-comment'>-- as per Maybe, this Monoid turns a semigroup into a monoid</span>
-<a name="line-241"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-242"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
-<a name="line-243"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-244"></a>
-<a name="line-245"></a><span class='hs-keyword'>type</span> <span class='hs-layout'>(</span><span class='hs-conop'>:-&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span>
-<a name="line-246"></a>
-<a name="line-247"></a><a name="ErrorH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>o</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span> 
-<a name="line-248"></a><a name="ErrorTH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
-<a name="line-249"></a>
-<a name="line-250"></a>
-<a name="line-251"></a><span class='hs-comment'>-- Yoneda (ErrorH e) ~ forall o. (a -&gt; o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; ErrorH e o</span>
-<a name="line-252"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-253"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-254"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span>
-<a name="line-255"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Right</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-256"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Left</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-257"></a>    <span class='hs-varid'>lowerRan</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>eitherRan</span> <span class='hs-conid'>Left</span> <span class='hs-conid'>Right</span>
-<a name="line-258"></a>
-<a name="line-259"></a><a name="eitherRan"></a><span class='hs-definition'>eitherRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-260"></a><span class='hs-definition'>eitherRan</span> <span class='hs-varid'>f</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span>
-<a name="line-261"></a>
-<a name="line-262"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-263"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-264"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varop'>.</span> <span class='hs-varid'>strMsg</span>
-<a name="line-265"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-266"></a>
-<a name="line-267"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-268"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-269"></a><span class='hs-comment'>--  catchError f h = Ran (\k -&gt; ErrorH (\e -&gt; getErrorH (getRan f k) e))</span>
-<a name="line-270"></a><span class='hs-comment'>--  catchError :: Ran (Either e) a -&gt; (e -&gt; Ran (Either e) a -&gt; Ran (Either e) a</span>
-<a name="line-271"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-272"></a>
-<a name="line-273"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-274"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varid'>noMsg</span>
-<a name="line-275"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-276"></a>        
-<a name="line-277"></a><span class='hs-comment'>{-
-<a name="line-278"></a>-- Yoneda (ErrorTH b m)
-<a name="line-279"></a>-- forall o. (a -&gt; G m o) -&gt; (b -&gt; G m o) -&gt; H m o
-<a name="line-280"></a>-- forall o. (a -&gt; G m o) -&gt; H m ((b -&gt; G m o) -&gt; o) ?
-<a name="line-281"></a>instance (RMonad m, Error b) =&gt; RMonad (ErrorT b m) where
-<a name="line-282"></a>    type G (ErrorT b m) = G m 
-<a name="line-283"></a>    type H (ErrorT b m) = ErrorTH b m
-<a name="line-284"></a>
-<a name="line-285"></a>
-<a name="line-286"></a>-- Codensity f
-<a name="line-287"></a>-- forall o. (a -&gt; f o) -&gt; f o 
-<a name="line-288"></a>instance RMonad (Codensity f) where
-<a name="line-289"></a>    type G (Codensity f) = f
-<a name="line-290"></a>    type H (Codensity f) = f
-<a name="line-291"></a>    liftRan (Codensity f) = Ran f
-<a name="line-292"></a>    lowerRan (Ran f) = Codensity f
-<a name="line-293"></a>
-<a name="line-294"></a>-- Yoneda (Reader r)
-<a name="line-295"></a>-- forall o. (a -&gt; o) -&gt; r -&gt; o
-<a name="line-296"></a>instance RMonad (Reader e) where
-<a name="line-297"></a>    type G (Reader e) = Identity
-<a name="line-298"></a>    type H (Reader e) = Reader e
-<a name="line-299"></a>    liftRan m = Ran (\f -&gt; liftM (runIdentity . f) m)
-<a name="line-300"></a>    lowerRan (Ran f) = f Identity
+<a name="line-240"></a><a name="STret'"></a><span class='hs-comment'>-- homegrown STret with flopped arguments</span>
+<a name="line-241"></a><a name="STret'"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-242"></a>
+<a name="line-243"></a><a name="liftRanWorld"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-244"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>World</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w'</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-245"></a>
+<a name="line-246"></a><span class='hs-comment'>-- viewpatterned to eliminate named temporaries:</span>
+<a name="line-247"></a><span class='hs-comment'>-- liftRanWorld f = Ran (\k -&gt; World (\(f -&gt; (# w, (runWorld . k -&gt; j) #)) -&gt; j w))</span>
+<a name="line-248"></a>
+<a name="line-249"></a><a name="lowerRanWorld"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-250"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>World</span> <span class='hs-varop'>.</span> <span class='hs-conid'>STret'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> 
+<a name="line-251"></a>    <span class='hs-conid'>STret'</span> <span class='hs-varid'>b</span> <span class='hs-varid'>w''</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w''</span><span class='hs-layout'>,</span> <span class='hs-varid'>b</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-252"></a>
+<a name="line-253"></a><span class='hs-comment'>-- Represent IO as the codensity of the RealWorld</span>
+<a name="line-254"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>IO</span> <span class='hs-keyword'>where</span>
+<a name="line-255"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-256"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-257"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>a</span>
+<a name="line-258"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>a</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IO</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-259"></a>
+<a name="line-260"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-261"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-262"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-263"></a>
+<a name="line-264"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-265"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-266"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-267"></a>
+<a name="line-268"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-269"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
+<a name="line-270"></a>
+<a name="line-271"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-272"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftIO</span> <span class='hs-varid'>mzero</span>
+<a name="line-273"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>const</span> <span class='hs-varid'>n</span>
+<a name="line-274"></a>
+<a name="line-275"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-conid'>IOError</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-276"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftIO</span> <span class='hs-varop'>.</span> <span class='hs-varid'>ioError</span>
+<a name="line-277"></a>    <span class='hs-varid'>catchError</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catch`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-278"></a>
+<a name="line-279"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-280"></a>    <span class='hs-varid'>mfix</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mfixRan</span>
+<a name="line-281"></a>
+<a name="line-282"></a><span class='hs-comment'>-- Represent ST s as the codensity of the world s</span>
+<a name="line-283"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-284"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
+<a name="line-285"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
+<a name="line-286"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
+<a name="line-287"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-288"></a>
+<a name="line-289"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-290"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-291"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-292"></a>
+<a name="line-293"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-294"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-295"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-296"></a>
+<a name="line-297"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-298"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fixST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-299"></a>
+<a name="line-300"></a><span class='hs-comment'>-- todo make a MonadST class</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 310
-<a name="line-302"></a>-- embedded as CPS'd State to avoid superfluous 'mappend mempty' calls
-<a name="line-303"></a>-- specialized Codensity (Reader w)
-<a name="line-304"></a>-- forall o. (a -&gt; w -&gt; o) -&gt; w -&gt; o
-<a name="line-305"></a>instance Monoid w =&gt; RMonad (Writer w) where
-<a name="line-306"></a>    type G (Writer w) = (-&gt;) w
-<a name="line-307"></a>    type H (Writer w) = (-&gt;) w
-<a name="line-308"></a>    liftRan (Writer (a,w'))  = Ran (\f w -&gt; f a (w `mappend` w'))
-<a name="line-309"></a>    lowerRan (Ran f) = Writer (f (,) mempty)
-<a name="line-310"></a>    -- forall o. (a -&gt; w -&gt; o) -&gt; o
-<a name="line-311"></a>    -- type H (Writer w) = Identity
+<a name="line-302"></a><span class='hs-comment'>-- Represent STM as the codensity of the RealWorld</span>
+<a name="line-303"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>STM</span> <span class='hs-keyword'>where</span>
+<a name="line-304"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-305"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-306"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
+<a name="line-307"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STM</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-308"></a>
+<a name="line-309"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-310"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-311"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 321
-<a name="line-313"></a>-- Codensity (Reader s)
-<a name="line-314"></a>-- forall o. (a -&gt; s -&gt; o) -&gt; s -&gt; o
-<a name="line-315"></a>instance RMonad (State s) where
-<a name="line-316"></a>    type G (State s) = (-&gt;) s
-<a name="line-317"></a>    type H (State s) = (-&gt;) s
-<a name="line-318"></a>    liftRan (State g)  = Ran (\f -&gt; uncurry f . g)
-<a name="line-319"></a>    lowerRan (Ran f)  = State (f (,))
-<a name="line-320"></a>
-<a name="line-321"></a>-- Codensity (Const r)
-<a name="line-322"></a>-- (a -&gt; r) -&gt; r
-<a name="line-323"></a>instance RMonad (Cont r) where
-<a name="line-324"></a>    type G (Cont r) = Const r
-<a name="line-325"></a>    type H (Cont r) = Const r
-<a name="line-326"></a>
-<a name="line-327"></a>-- forall o. (a -&gt; G m o) -&gt; r -&gt; H m o 
-<a name="line-328"></a>instance RMonad m =&gt; RMonad (ReaderT e m) where
-<a name="line-329"></a>    type G (ReaderT e m) = G m
-<a name="line-330"></a>    type H (ReaderT e m) = e :-&gt; H m
-<a name="line-331"></a>
-<a name="line-332"></a>-- forall o. (a -&gt; w -&gt; G m o) -&gt; H m o
-<a name="line-333"></a>-- forall o. (a -&gt; G m (w -&gt; o)) -&gt; H m (w -&gt; o) ?
-<a name="line-334"></a>instance (Monoid w, RMonad m) =&gt; RMonad (WriterT w m) where
-<a name="line-335"></a>    type G (WriterT w m) = w :-&gt; G m
-<a name="line-336"></a>    type H (WriterT w m) = H m
-<a name="line-337"></a>
-<a name="line-338"></a>-- forall o. (a -&gt; s -&gt; G m o) -&gt; s -&gt; H m o 
-<a name="line-339"></a>-- forall o. (a -&gt; G m (s -&gt; o)) -&gt; H m (s -&gt; o) ?
-<a name="line-340"></a>instance RMonad m =&gt; RMonad (StateT s m) where
-<a name="line-341"></a>    type G (StateT s m) = s :-&gt; G m
-<a name="line-342"></a>    type H (StateT s m) = s :-&gt; H m
-<a name="line-343"></a>
-<a name="line-344"></a>-- (a -&gt; G m r) -&gt; H m r
-<a name="line-345"></a>data ConstT r f a = ConstT { getConstT :: f r } 
-<a name="line-346"></a>instance RMonad m =&gt; RMonad (ContT r m) where
-<a name="line-347"></a>    type G (ContT r m) = ConstT r (G m)
-<a name="line-348"></a>    type H (ContT r m) = ConstT r (H m)
-<a name="line-349"></a>-}</span>
-<a name="line-350"></a>
-<a name="line-351"></a>
+<a name="line-313"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-314"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-315"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-316"></a>
+<a name="line-317"></a><span class='hs-comment'>-- why is there no MonadFix instance for STM?</span>
+<a name="line-318"></a><span class='hs-comment'>-- TODO: make a MonadSTM class</span>
+<a name="line-319"></a>
+<a name="line-320"></a><span class='hs-comment'>-- Yoneda Endo a ~ forall o. (a -&gt; o) -&gt; o -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; Endo o</span>
+<a name="line-321"></a><span class='hs-comment'>-- note Endo is not a Hask Functor and Maybe is not a Codensity monad, so this is trickier</span>
+<a name="line-322"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyword'>where</span>
+<a name="line-323"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-324"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
+<a name="line-325"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybe</span> <span class='hs-varid'>mzero</span> <span class='hs-varid'>return</span>
+<a name="line-326"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>mzero</span>
+<a name="line-327"></a>
+<a name="line-328"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-329"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-330"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-331"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
+<a name="line-332"></a>
+<a name="line-333"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-334"></a>    <span class='hs-varid'>pure</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-335"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-336"></a>
+<a name="line-337"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-338"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-339"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-340"></a>
+<a name="line-341"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-342"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
+<a name="line-343"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-344"></a>
+<a name="line-345"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-346"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-347"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>unJust</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-348"></a>        <span class='hs-varid'>unJust</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"mfix (Ran Maybe): Nothing"</span><span class='hs-layout'>)</span>
+<a name="line-349"></a>
+<a name="line-350"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-351"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 361
-<a name="line-353"></a><span class='hs-comment'>-- Yoneda lemma as a right Kan extension along the identity functor</span>
-<a name="line-354"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-355"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-356"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
-<a name="line-357"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-358"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-359"></a>
-<a name="line-360"></a><a name="ranYoneda"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-361"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-362"></a>
-<a name="line-363"></a><a name="yonedaRan"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-364"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
+<a name="line-353"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-354"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
+<a name="line-355"></a>
+<a name="line-356"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-357"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-358"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"liftRan "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-359"></a>    
+<a name="line-360"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-361"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-362"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"liftRan "</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-363"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-364"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 374
-<a name="line-366"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-367"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
-<a name="line-368"></a>
-<a name="line-369"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-370"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
-<a name="line-371"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-372"></a>
-<a name="line-373"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-374"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
-<a name="line-375"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> 
-<a name="line-376"></a>
-<a name="line-377"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-378"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-379"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-366"></a><span class='hs-keyword'>type</span> <span class='hs-layout'>(</span><span class='hs-conop'>:-&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span>
+<a name="line-367"></a>
+<a name="line-368"></a><a name="ErrorH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>o</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span> 
+<a name="line-369"></a>
+<a name="line-370"></a><span class='hs-comment'>-- Yoneda (ErrorH e) ~ forall o. (a -&gt; o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; ErrorH e o</span>
+<a name="line-371"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-372"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-373"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span>
+<a name="line-374"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Right</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-375"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Left</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-376"></a>    <span class='hs-varid'>lowerRan</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>eitherRan</span> <span class='hs-conid'>Left</span> <span class='hs-conid'>Right</span>
+<a name="line-377"></a>
+<a name="line-378"></a><a name="eitherRan"></a><span class='hs-definition'>eitherRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-379"></a><span class='hs-definition'>eitherRan</span> <span class='hs-varid'>f</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 389
-<a name="line-381"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-382"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-383"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-384"></a>
-<a name="line-385"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-386"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>ask</span>
-<a name="line-387"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-388"></a>
-<a name="line-389"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-390"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
-<a name="line-391"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-392"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-393"></a>
-<a name="line-394"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-395"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>get</span>
-<a name="line-396"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
-<a name="line-397"></a>
-<a name="line-398"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-399"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-381"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-382"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-383"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varop'>.</span> <span class='hs-varid'>strMsg</span>
+<a name="line-384"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-385"></a>
+<a name="line-386"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-387"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-388"></a><span class='hs-comment'>--  catchError f h = Ran (\k -&gt; ErrorH (\e -&gt; getErrorH (getRan f k) e))</span>
+<a name="line-389"></a><span class='hs-comment'>--  catchError :: Ran (Either e) a -&gt; (e -&gt; Ran (Either e) a -&gt; Ran (Either e) a</span>
+<a name="line-390"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-391"></a>
+<a name="line-392"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-393"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varid'>noMsg</span>
+<a name="line-394"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-395"></a>
+<a name="line-396"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-397"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-398"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromRight</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-399"></a>        <span class='hs-varid'>fromRight</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"mfix (Ran (Either e)): empty mfix argument"</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 409
-<a name="line-401"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-402"></a>
-<a name="line-403"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-404"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>throwError</span>
-<a name="line-405"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varop'>`catchError`</span> <span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-401"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-402"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
+<a name="line-403"></a>
+<a name="line-404"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-405"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 415
-<a name="line-407"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-408"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-407"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-408"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-409"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"liftRan "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-410"></a>    
+<a name="line-411"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-412"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-413"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"liftRan "</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-414"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-415"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-416"></a>
+<a name="line-417"></a>
+<a name="line-418"></a><span class='hs-comment'>-- Yoneda (Reader r) ~ forall o. (a -&gt; o) -&gt; r -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; r -&gt; o</span>
+<a name="line-419"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-420"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-421"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span>
+<a name="line-422"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-423"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span>
+<a name="line-424"></a>
+<a name="line-425"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-426"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-427"></a>
+<a name="line-428"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-429"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-430"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-431"></a>
+<a name="line-432"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-433"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-434"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-435"></a>    
+<a name="line-436"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-437"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-438"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-439"></a>
+<a name="line-440"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-441"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
+<a name="line-442"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-443"></a>
+<a name="line-444"></a>
+<a name="line-445"></a>
+<a name="line-446"></a>
+<a name="line-447"></a>
+<a name="line-448"></a><span class='hs-comment'>{-
+<a name="line-449"></a>data ErrorTH e m o = ErrorTH { getErrorTH :: (e -&gt; G m o) -&gt; H m o }
+<a name="line-450"></a>-- Yoneda (ErrorTH b m)
+<a name="line-451"></a>-- forall o. (a -&gt; G m o) -&gt; (b -&gt; G m o) -&gt; H m o
+<a name="line-452"></a>-- forall o. (a -&gt; G m o) -&gt; H m ((b -&gt; G m o) -&gt; o) ?
+<a name="line-453"></a>instance (RMonad m, Error b) =&gt; RMonad (ErrorT b m) where
+<a name="line-454"></a>    type G (ErrorT b m) = G m 
+<a name="line-455"></a>    type H (ErrorT b m) = ErrorTH b m
+<a name="line-456"></a>
+<a name="line-457"></a>
+<a name="line-458"></a>
+<a name="line-459"></a>-- (a -&gt; r) -&gt; r
+<a name="line-460"></a>instance RMonad (Cont r) where
+<a name="line-461"></a>    type G (Cont r) = Const r
+<a name="line-462"></a>    type H (Cont r) = Const r
+<a name="line-463"></a>
+<a name="line-464"></a>-- forall o. (a -&gt; G m o) -&gt; r -&gt; H m o 
+<a name="line-465"></a>instance RMonad m =&gt; RMonad (ReaderT e m) where
+<a name="line-466"></a>    type G (ReaderT e m) = G m
+<a name="line-467"></a>    type H (ReaderT e m) = e :-&gt; H m
+<a name="line-468"></a>
+<a name="line-469"></a>-- forall o. (a -&gt; w -&gt; G m o) -&gt; H m o
+<a name="line-470"></a>-- forall o. (a -&gt; G m (w -&gt; o)) -&gt; H m (w -&gt; o) ?
+<a name="line-471"></a>instance (Monoid w, RMonad m) =&gt; RMonad (WriterT w m) where
+<a name="line-472"></a>    type G (WriterT w m) = w :-&gt; G m
+<a name="line-473"></a>    type H (WriterT w m) = H m
+<a name="line-474"></a>
+<a name="line-475"></a>-- forall o. (a -&gt; s -&gt; G m o) -&gt; s -&gt; H m o 
+<a name="line-476"></a>-- forall o. (a -&gt; G m (s -&gt; o)) -&gt; H m (s -&gt; o) ?
+<a name="line-477"></a>instance RMonad m =&gt; RMonad (StateT s m) where
+<a name="line-478"></a>    type G (StateT s m) = s :-&gt; G m
+<a name="line-479"></a>    type H (StateT s m) = s :-&gt; H m
+<a name="line-480"></a>
+<a name="line-481"></a>-- (a -&gt; G m r) -&gt; H m r
+<a name="line-482"></a>data ConstT r f a = ConstT { getConstT :: f r } 
+<a name="line-483"></a>instance RMonad m =&gt; RMonad (ContT r m) where
+<a name="line-484"></a>    type G (ContT r m) = ConstT r (G m)
+<a name="line-485"></a>    type H (ContT r m) = ConstT r (H m)
+<a name="line-486"></a>-}</span>
+<a name="line-487"></a>
+<a name="line-488"></a>
+<a name="line-489"></a>
+<a name="line-490"></a><span class='hs-comment'>-- Yoneda lemma as a right Kan extension along the identity functor</span>
+<a name="line-491"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-492"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-493"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
+<a name="line-494"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-495"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-496"></a>
+<a name="line-497"></a><a name="ranYoneda"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-498"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-499"></a>
+<a name="line-500"></a><a name="yonedaRan"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-501"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
+<a name="line-502"></a>
+<a name="line-503"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-504"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
+<a name="line-505"></a>
+<a name="line-506"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-507"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
+<a name="line-508"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-509"></a>
+<a name="line-510"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-511"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
+<a name="line-512"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> 
+<a name="line-513"></a>
+<a name="line-514"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-515"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-516"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-517"></a>
+<a name="line-518"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-519"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-520"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-521"></a>
+<a name="line-522"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-523"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>ask</span>
+<a name="line-524"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-525"></a>
+<a name="line-526"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-527"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
+<a name="line-528"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-529"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-530"></a>
+<a name="line-531"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-532"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>get</span>
+<a name="line-533"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
+<a name="line-534"></a>
+<a name="line-535"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-536"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-537"></a>
+<a name="line-538"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-539"></a>
+<a name="line-540"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-541"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>throwError</span>
+<a name="line-542"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varop'>`catchError`</span> <span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-543"></a>
+<a name="line-544"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-545"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Yoneda.html 15
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runYoneda</span>
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerYoneda</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Yoneda.html 61
-<a name="line-53"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runYoneda</span> 
+<a name="line-53"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerYoneda</span> 
hunk ./doc/html/monad-ran/src/Control-Monad-Yoneda.html 65
-<a name="line-57"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runYoneda</span>
-<a name="line-58"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runYoneda</span>
+<a name="line-57"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerYoneda</span>
+<a name="line-58"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerYoneda</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Yoneda.html 79
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>    
-<a name="line-74"></a><a name="runYoneda"></a><span class='hs-definition'>runYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
-<a name="line-75"></a><span class='hs-definition'>runYoneda</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>id</span>
-<a name="line-76"></a>
+<a name="line-71"></a>    <span class='hs-varid'>catchError</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>lowerYoneda</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerYoneda</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span>
+<a name="line-72"></a>
+<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-74"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerYoneda</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-75"></a>    
+<a name="line-76"></a><a name="lowerYoneda"></a><span class='hs-definition'>lowerYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
+<a name="line-77"></a><span class='hs-definition'>lowerYoneda</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>id</span>
+<a name="line-78"></a>
}
