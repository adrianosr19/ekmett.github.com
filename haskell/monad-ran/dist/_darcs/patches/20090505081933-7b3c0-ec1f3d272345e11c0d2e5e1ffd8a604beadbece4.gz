[auto
ekmett@gmail.com**20090505081933
 Ignore-this: 67e065d66464574632bdf52b11846696
] {
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 22
->monad-ran-0.0.7: Fast implementations of monads and monad transformers using right Kan extensions</TD
+>monad-ran-0.0.8: Fast implementations of monads and monad transformers using right Kan extensions</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 69
->The Yoneda Lemma
+>A right Kan extension monad transformer
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 74
->The codensity monad of a functor
+>Representing monads as right Kan extensions
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 79
->A right Kan extension monad transformer
+>Ran Monad Transformers
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 84
->Representing monads as right Kan extensions
+>Default definitions for common extension patterns
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 89
->Ran Monad Transformers
+>IO, ST s, STM
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 94
->Default definitions for common extension patterns
+>Pointed Functors
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 99
->IO, ST s, STM
+>The Yoneda Lemma
+</A
+></DT
+><DT
+><A HREF="#8"
+>The codensity monad of a functor
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 136
->  <A HREF="#t%3AYoneda"
->Yoneda</A
-> f a = <A HREF="#v%3AYoneda"
->Yoneda</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetYoneda"
->getYoneda</A
-> :: <SPAN CLASS="keyword"
->forall</SPAN
-> b.  (a -&gt; b) -&gt; f b</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3ACodensity"
->Codensity</A
-> f a = <A HREF="#v%3ACodensity"
->Codensity</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetCodensity"
->getCodensity</A
-> :: <SPAN CLASS="keyword"
->forall</SPAN
-> b.  (a -&gt; f b) -&gt; f b</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 468
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 469
-><TD CLASS="section1"
-><A NAME="1"
->The Yoneda Lemma
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
+><TD CLASS="s8"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 473
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 475
->data</SPAN
->  <A NAME="t%3AYoneda"
-></A
-><B
->Yoneda</B
-> f a </TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Yoneda.html#Yoneda"
->Source</A
-></TD
-></TR
-></TABLE
+>class</SPAN
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> f =&gt; <A HREF="#t%3APointed"
+>Pointed</A
+> f  <SPAN CLASS="keyword"
+>where</SPAN
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 488
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AYoneda"
-></A
-><B
->Yoneda</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetYoneda"
-></A
-><B
->getYoneda</B
-> :: <SPAN CLASS="keyword"
->forall</SPAN
-> b.  (a -&gt; b) -&gt; f b</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
+><TD CLASS="decl"
+><A HREF="#v%3Apoint"
+>point</A
+> ::  a -&gt; f a</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 497
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Yoneda')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Yoneda" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadTrans"
->MonadTrans</A
-> <A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
+><TD CLASS="s8"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 502
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
->MonadRWS</A
-> r w s f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
->MonadRWS</A
-> r w s (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
->MonadError</A
-> e f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
->MonadError</A
-> e (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
->MonadReader</A
-> r f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
->MonadReader</A
-> r (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
->MonadState</A
-> s f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
->MonadState</A
-> s (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
->MonadWriter</A
-> w f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
->MonadWriter</A
-> w (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
->MonadFix</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
->MonadFix</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
->MonadIO</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
->MonadIO</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3AYoneda"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 506
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
->Pointed</A
-> f =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
->Pointed</A
-> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+> f a = <A HREF="#v%3AYoneda"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 508
-> f)</TD
-></TR
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 510
-><TD CLASS="decl"
->RanIso (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
->Yoneda</A
-> f)</TD
-></TR
-></TABLE
-></DIV
-></TD
+><TD CLASS="recfield"
+><A HREF="#v%3AgetYoneda"
+>getYoneda</A
+> :: <SPAN CLASS="keyword"
+>forall</SPAN
+> b.  (a -&gt; b) -&gt; f b</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 518
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->The codensity monad of a functor
-</A
-></TD
+>}</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 521
-><TD CLASS="s15"
+><TD CLASS="s8"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 525
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 528
->  <A NAME="t%3ACodensity"
-></A
-><B
->Codensity</B
-> f a </TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Codensity.html#Codensity"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The Codensity monad of a functor/monad generated by a functor
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ACodensity"
-></A
-><B
->Codensity</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+>  <A HREF="#t%3ACodensity"
+>Codensity</A
+> f a = <A HREF="#v%3ACodensity"
+>Codensity</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 534
-><TD CLASS="arg"
-><A NAME="v%3AgetCodensity"
-></A
-><B
->getCodensity</B
+><TD CLASS="recfield"
+><A HREF="#v%3AgetCodensity"
+>getCodensity</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 540
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 542
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Codensity')" ALT="show/hide"
-> Instances</TD
+>}</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 545
-><TD CLASS="body"
-><DIV ID="i:Codensity" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadTrans"
->MonadTrans</A
-> <A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
+><TD CLASS="s8"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 550
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
->MonadRWS</A
-> r w s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
->MonadRWS</A
-> r w s (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
->MonadError</A
-> e m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
->MonadError</A
-> e (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
->MonadReader</A
-> r m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
->MonadReader</A
-> r (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
->MonadState</A
-> s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
->MonadState</A
-> s (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
->MonadWriter</A
-> w m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
->MonadWriter</A
-> w (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+><A HREF="#v%3AlowerCodensity"
+>lowerCodensity</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 554
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 556
-> k)</TD
+> m a -&gt; m a</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 559
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m)</TD
+><TD CLASS="s8"
+></TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 564
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+><A HREF="#v%3AlowerCodensityApp"
+>lowerCodensityApp</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 568
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
->MonadIO</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
->MonadIO</A
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 570
-> m)</TD
+> f a -&gt; f a</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 573
-><TD CLASS="decl"
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
->Pointed</A
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> f)</TD
+><TD CLASS="s8"
+></TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 578
->RanIso (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+><A HREF="#v%3AlowerCodensityPointed"
+>lowerCodensityPointed</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 584
-> f)</TD
+> f a -&gt; f a</TD
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 587
-></DIV
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 589
-></TABLE
+><TR
+><TD CLASS="s15"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 599
-><A NAME="3"
+><A NAME="1"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 689
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m))</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 731
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
->MonadRWS</A
-> r w s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
->MonadRWS</A
-> r w s (<A HREF="Control-Monad-Ran.html#t%3ARan"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> e m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> e (<A HREF="Control-Monad-Ran.html#t%3ARan"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 769
-> e m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
->MonadError</A
-> e (<A HREF="Control-Monad-Ran.html#t%3ARan"
->Ran</A
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
->MonadError</A
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 779
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
+> r m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
+> r (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m))</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 851
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
->MonadReader</A
-> r m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
->MonadReader</A
-> r (<A HREF="Control-Monad-Ran.html#t%3ARan"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
+> s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
+> s (<A HREF="Control-Monad-Ran.html#t%3ARan"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 919
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
->MonadState</A
-> s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
->MonadState</A
-> s (<A HREF="Control-Monad-Ran.html#t%3ARan"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w (<A HREF="Control-Monad-Ran.html#t%3ARan"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 989
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
->MonadWriter</A
-> w m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
->MonadWriter</A
-> w (<A HREF="Control-Monad-Ran.html#t%3ARan"
->Ran</A
-> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
->Codensity</A
-> m))</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1585
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1595
-> w =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
+> w =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1605
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1615
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1627
-> m =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1641
-> e) =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
+> e) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1651
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1661
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1663
-> f =&gt; <A HREF="Control-Functor-Pointed.html#t%3APointed"
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1673
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1709
+>(RanIso m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a b))) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error.html#t%3AErrorT"
+>ErrorT</A
+> a m) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1763
+>(RanIso m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a b))) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error.html#t%3AErrorT"
+>ErrorT</A
+> a m) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1817
+>(RanIso m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a b))) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error.html#t%3AErrorT"
+>ErrorT</A
+> a m) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1871
+>(RanIso m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a b))) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error.html#t%3AErrorT"
+>ErrorT</A
+> a m) b)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 1944
-><A NAME="4"
+><A NAME="2"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 2039
-><A NAME="5"
+><A NAME="3"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 2287
-><A NAME="6"
+><A NAME="4"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 2514
-><A NAME="7"
+><A NAME="5"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 2588
+><TD CLASS="section1"
+><A NAME="6"
+>Pointed Functors
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> f =&gt; <A NAME="t%3APointed"
+></A
+><B
+>Pointed</B
+> f  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#Pointed"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>A pointed functor is a functor with a discriminated family of f-coalgebras
+</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Apoint"
+></A
+><B
+>point</B
+> ::  a -&gt; f a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#point"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Pointed')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Pointed" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> []</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
+>Identity</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> ((-&gt;) r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3ACont"
+>Cont</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriter"
+>Writer</A
+> w)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AState"
+>State</A
+> w)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> w)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReader"
+>Reader</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-List.html#t%3AListT"
+>ListT</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> ((-&gt;) e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
+>Writer</A
+> w))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
+>State</A
+> s))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReader"
+>Reader</A
+> e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3ARMonad"
+>RMonad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
+>ReaderT</A
+> e m))</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Control-Monad-Ran.html#t%3ARMonad"
+>RMonad</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AError"
+>Error</A
+> e) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error.html#t%3AErrorT"
+>ErrorT</A
+> e m))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
+>Identity</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ARan"
+>Ran</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3AContT"
+>ContT</A
+> r m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriterT"
+>WriterT</A
+> w m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriterT"
+>WriterT</A
+> w m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AStateT"
+>StateT</A
+> w m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AStateT"
+>StateT</A
+> w m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
+>ReaderT</A
+> r m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AError"
+>Error</A
+> e, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error.html#t%3AErrorT"
+>ErrorT</A
+> e m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWS"
+>RWS</A
+> r w s)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWS"
+>RWS</A
+> r w s)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWST"
+>RWST</A
+> r w s m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWST"
+>RWST</A
+> r w s m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="7"
+>The Yoneda Lemma
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AYoneda"
+></A
+><B
+>Yoneda</B
+> f a </TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#Yoneda"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The Covariant Yoneda lemma applied to a functor. Note that <TT
+>f</TT
+> need not be a Hask <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+></TT
+>!
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AYoneda"
+></A
+><B
+>Yoneda</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetYoneda"
+></A
+><B
+>getYoneda</B
+> :: <SPAN CLASS="keyword"
+>forall</SPAN
+> b.  (a -&gt; b) -&gt; f b</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Yoneda')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Yoneda" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadTrans"
+>MonadTrans</A
+> <A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> e f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> e (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
+> r f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
+> r (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
+> s f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
+> s (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
+>MonadIO</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
+>MonadIO</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>RanIso (<A HREF="Control-Monad-Ran.html#t%3AYoneda"
+>Yoneda</A
+> f)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="8"
+>The codensity monad of a functor
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3ACodensity"
+></A
+><B
+>Codensity</B
+> f a </TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#Codensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The Codensity monad of a functor/monad generated by a functor
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ACodensity"
+></A
+><B
+>Codensity</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetCodensity"
+></A
+><B
+>getCodensity</B
+> :: <SPAN CLASS="keyword"
+>forall</SPAN
+> b.  (a -&gt; f b) -&gt; f b</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Codensity')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Codensity" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadTrans"
+>MonadTrans</A
+> <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> e m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Error-Class.html#t%3AMonadError"
+>MonadError</A
+> e (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
+> r m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader-Class.html#t%3AMonadReader"
+>MonadReader</A
+> r (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
+> s m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Class.html#t%3AMonadState"
+>MonadState</A
+> s (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Class.html#t%3AMonadWriter"
+>MonadWriter</A
+> w (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> k)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-Fix.html#t%3AMonadFix"
+>MonadFix</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
+>MonadIO</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Trans.html#t%3AMonadIO"
+>MonadIO</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Pointed</A
+> (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>RanIso (<A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AlowerCodensity"
+></A
+><B
+>lowerCodensity</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> m a -&gt; m a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#lowerCodensity"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AlowerCodensityApp"
+></A
+><B
+>lowerCodensityApp</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f a -&gt; f a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#lowerCodensityApp"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AlowerCodensityPointed"
+></A
+><B
+>lowerCodensityPointed</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+>Codensity</A
+> f a -&gt; f a</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-Ran.html#lowerCodensityPointed"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monad-ran/doc-index.html 7
->monad-ran-0.0.7: Fast implementations of monads and monad transformers using right Kan extensions (Index)</TITLE
+>monad-ran-0.0.8: Fast implementations of monads and monad transformers using right Kan extensions (Index)</TITLE
hunk ./doc/html/monad-ran/doc-index.html 22
->monad-ran-0.0.7: Fast implementations of monads and monad transformers using right Kan extensions</TD
+>monad-ran-0.0.8: Fast implementations of monads and monad transformers using right Kan extensions</TD
hunk ./doc/html/monad-ran/doc-index.html 72
-><A HREF="Control-Monad-Codensity.html#t%3ACodensity"
->Control.Monad.Codensity</A
->, <A HREF="Control-Monad-Ran.html#t%3ACodensity"
+><A HREF="Control-Monad-Ran.html#t%3ACodensity"
hunk ./doc/html/monad-ran/doc-index.html 80
-><A HREF="Control-Monad-Codensity.html#v%3ACodensity"
->Control.Monad.Codensity</A
->, <A HREF="Control-Monad-Ran.html#v%3ACodensity"
+><A HREF="Control-Monad-Ran.html#v%3ACodensity"
hunk ./doc/html/monad-ran/doc-index.html 104
-><A HREF="Control-Monad-Codensity.html#v%3AgetCodensity"
->Control.Monad.Codensity</A
->, <A HREF="Control-Monad-Ran.html#v%3AgetCodensity"
+><A HREF="Control-Monad-Ran.html#v%3AgetCodensity"
hunk ./doc/html/monad-ran/doc-index.html 110
->getMaybe'</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Maybe.html#v%3AgetMaybe%27"
->Control.Monad.CPS.Maybe</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 120
-><A HREF="Control-Monad-Yoneda.html#v%3AgetYoneda"
->Control.Monad.Yoneda</A
->, <A HREF="Control-Monad-Ran.html#v%3AgetYoneda"
+><A HREF="Control-Monad-Ran.html#v%3AgetYoneda"
hunk ./doc/html/monad-ran/doc-index.html 176
-><A HREF="Control-Monad-Codensity.html#v%3AlowerCodensity"
->Control.Monad.Codensity</A
+><A HREF="Control-Monad-Ran.html#v%3AlowerCodensity"
+>Control.Monad.Ran</A
hunk ./doc/html/monad-ran/doc-index.html 184
-><A HREF="Control-Monad-Codensity.html#v%3AlowerCodensityApp"
->Control.Monad.Codensity</A
+><A HREF="Control-Monad-Ran.html#v%3AlowerCodensityApp"
+>Control.Monad.Ran</A
hunk ./doc/html/monad-ran/doc-index.html 192
-><A HREF="Control-Monad-Codensity.html#v%3AlowerCodensityPointed"
->Control.Monad.Codensity</A
+><A HREF="Control-Monad-Ran.html#v%3AlowerCodensityPointed"
+>Control.Monad.Ran</A
hunk ./doc/html/monad-ran/doc-index.html 222
->lowerYoneda</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Yoneda.html#v%3AlowerYoneda"
->Control.Monad.Yoneda</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Maybe'</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Maybe.html#t%3AMaybe%27"
->Control.Monad.CPS.Maybe</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Maybe.html#v%3AMaybe%27"
->Control.Monad.CPS.Maybe</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->maybe'</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Maybe.html#v%3Amaybe%27"
->Control.Monad.CPS.Maybe</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 232
-><A HREF="Control-Functor-Pointed.html#v%3Apoint"
->Control.Functor.Pointed</A
+><A HREF="Control-Monad-Ran.html#v%3Apoint"
+>Control.Monad.Ran</A
hunk ./doc/html/monad-ran/doc-index.html 240
-><A HREF="Control-Functor-Pointed.html#t%3APointed"
->Control.Functor.Pointed</A
+><A HREF="Control-Monad-Ran.html#t%3APointed"
+>Control.Monad.Ran</A
hunk ./doc/html/monad-ran/doc-index.html 304
-><A HREF="Control-Monad-Yoneda.html#t%3AYoneda"
->Control.Monad.Yoneda</A
->, <A HREF="Control-Monad-Ran.html#t%3AYoneda"
+><A HREF="Control-Monad-Ran.html#t%3AYoneda"
hunk ./doc/html/monad-ran/doc-index.html 312
-><A HREF="Control-Monad-Yoneda.html#v%3AYoneda"
->Control.Monad.Yoneda</A
->, <A HREF="Control-Monad-Ran.html#v%3AYoneda"
+><A HREF="Control-Monad-Ran.html#v%3AYoneda"
hunk ./doc/html/monad-ran/index.html 7
->monad-ran-0.0.7: Fast implementations of monads and monad transformers using right Kan extensions</TITLE
+>monad-ran-0.0.8: Fast implementations of monads and monad transformers using right Kan extensions</TITLE
hunk ./doc/html/monad-ran/index.html 22
->monad-ran-0.0.7: Fast implementations of monads and monad transformers using right Kan extensions</TD
+>monad-ran-0.0.8: Fast implementations of monads and monad transformers using right Kan extensions</TD
hunk ./doc/html/monad-ran/index.html 37
->monad-ran-0.0.7: Fast implementations of monads and monad transformers using right Kan extensions</TD
+>monad-ran-0.0.8: Fast implementations of monads and monad transformers using right Kan extensions</TD
hunk ./doc/html/monad-ran/index.html 66
->Functor</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Control-Functor-Pointed.html"
->Control.Functor.Pointed</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:2')" ALT="show/hide"
hunk ./doc/html/monad-ran/index.html 74
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:2" STYLE="display:block;"
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:3')" ALT="show/hide"
->CPS</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:3" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Control-Monad-CPS-Maybe.html"
->Control.Monad.CPS.Maybe</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Control-Monad-Codensity.html"
->Control.Monad.Codensity</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
hunk ./doc/html/monad-ran/index.html 85
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Control-Monad-Yoneda.html"
->Control.Monad.Yoneda</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
binary ./doc/html/monad-ran/monad-ran.haddock
oldhex
*0d0cface00040000000000000cf3000000000000094e2500000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000300000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000004000000000000000b0000000000000000000000000000000400
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000005000000000000001d0000000000000000000000000000
*0005000000000000001e00000000000000000000000000000005000000000000001f0000000000
*000000000000000000000500000000000000200000000000000000000000000000000500000000
*000000210000000000000000000000000000000500000000000000220000000000000000000000
*000000000500000000000000230000000000000000000000000000000500000000000000240000
*000000000000000000000000000505000000000000000000000000000000010000000000040000
*000000000000000000000000000100000000000000020000000000000003040000000000000000
*000000000000000100000000000000020000000000000003000000000000000000000000000000
*02000108000000700000006f000000720000007400000061000000620000006c00000065010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c011f0000004500000064000000770000006100000072000000640000002000
*00004b0000006d000000650000007400000074000000200000003c000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d0000003e00020000000000000004000000000000000502000000
*000000000400000000000000050000000000000000000000000000000300000000000400000000
*000000060000000000000007000000000000000800000000000000090400000000000000060000
*000000000007000000000000000800000000000000090000000000000000000000000000000400
*00000001000000000000000a030102200000005400000068000000650000002000000043000000
*6f00000064000000650000006e00000073000000690000007400000079000000200000006d0000
*006f0000006e0000006100000064000000200000006f0000006600000020000000610000002000
*000066000000750000006e00000063000000740000006f000000720102010000002f021d000000
*6d0000006f0000006e00000061000000640000002000000067000000650000006e000000650000
*007200000061000000740000006500000064000000200000006200000079000000200000006100
*00002000000066000000750000006e00000063000000740000006f000000720000000a06000000
*000000000a000000000000000b000000000000000c000000000000000d000000000000000e0000
*00000000000f06000000000000000a000000000000000b000000000000000c000000000000000d
*000000000000000e000000000000000f0000000000000000000000000000000500000000010000
*00000000001903022e000000410000002000000072000000690000006700000068000000740000
*00200000004b000000610000006e00000020000000650000007800000074000000650000006e00
*000073000000690000006f0000006e000000200000007400000072000000610000006e00000073
*000000660000006f000000720000006d000000650000007200000020000000660000006f000000
*720000002000000061000000200000006d0000006f0000006e00000061000000640000000a1b00
*0000000000000600000000000000070000000000000008000000000000000a000000000000000b
*000000000000000c00000000000000100000000000000011000000000000001200000000000000
*130000000000000014000000000000001500000000000000160000000000000017000000000000
*00180000000000000019000000000000001a000000000000001b000000000000001c0000000000
*00001d000000000000001e000000000000001f0000000000000020000000000000002100000000
*00000022000000000000002300000000000000241b000000000000000600000000000000070000
*000000000008000000000000000a000000000000000b000000000000000c000000000000001900
*0000000000001a000000000000001b000000000000001000000000000000150000000000000016
*000000000000001700000000000000180000000000000011000000000000001200000000000000
*130000000000000014000000000000001c000000000000001d000000000000001e000000000000
*00210000000000000022000000000000001f000000000000002000000000000000230000000000
*000024000000000000002500000000000000000000000000000001030000000000000006000000
*000000000000000000000000010100000000000000060000000000000000000000000000000100
*000000000000000700000000000000000000000000000001000000000000000008000000000000
*000000000000000000020300000000000000090000000000000000000000000000000200000000
*000000000a0000000000000000000000000000000303000000000000000b000000000000000000
*0000000000000301000000000000000b0000000000000000000000000000000300000000000000
*000c0000000000000000000000000000000300000000000000000d000000000000000000000000
*0000000403000000000000000e0000000000000000000000000000000401000000000000000e00
*00000000000000000000000000000400000000000000000f000000000000000000000000000000
*040000000000000000100000000000000000000000000000000400000000000000001100000000
*000000000000000000000004000000000000000012000000000000000000000000000000050300
*000000000000130000000000000000000000000000000503000000000000001400000000000000
*000000000000000005000000000000000015000000000000000000000000000000050000000000
*000000160000000000000000000000000000000500000000000000001700000000000000000000
*000000000005030000000000000018000000000000000000000000000000050300000000000000
*190000000000000000000000000000000500000000000000001a00000000000000000000000000
*00000500000000000000001b0000000000000000000000000000000503000000000000001c0000
*000000000000000000000000000501000000000000001c00000000000000000000000000000005
*00000000000000001d0000000000000000000000000000000500000000000000001e0000000000
*000000000000000000000500000000000000001f00000000000000000000000000000005000000
*000000000020000000000000000000000000000000050000000000000000210000000000000000
*000000000000000500000000000000002200000000000000000000000000000005000000000000
*000023000000000000000000000000000000050000000000000000240000000000000000000000
*000000000500000000000000002500000000000000000000000000000005000000000000000026
*0000000000000027000000000000000f6d6f6e61642d72616e2d302e302e370000000000000017
*436f6e74726f6c2e4d6f6e61642e4350532e4d617962650000000000000017436f6e74726f6c2e
*46756e63746f722e506f696e7465640000000000000014436f6e74726f6c2e4d6f6e61642e596f
*6e6564610000000000000017436f6e74726f6c2e4d6f6e61642e436f64656e7369747900000000
*00000011436f6e74726f6c2e4d6f6e61642e52616e00000000000000064d617962652700000000
*000000096765744d617962652700000000000000066d61796265270000000000000007506f696e
*7465640000000000000005706f696e740000000000000006596f6e656461000000000000000967
*6574596f6e656461000000000000000b6c6f776572596f6e6564610000000000000009436f6465
*6e73697479000000000000000c676574436f64656e73697479000000000000000e6c6f77657243
*6f64656e7369747900000000000000116c6f776572436f64656e73697479417070000000000000
*00156c6f776572436f64656e73697479506f696e7465640000000000000006524d6f6e61640000
*00000000000852616e5472616e7300000000000000086c69667452616e5400000000000000066f
*757452616e0000000000000005696e52616e000000000000000147000000000000000148000000
*00000000076c69667452616e00000000000000086c6f77657252616e000000000000000352616e
*000000000000000667657452616e000000000000001272657475726e52616e436f64656e736974
*79000000000000001062696e6452616e436f64656e73697479000000000000000e617052616e43
*6f64656e7369747900000000000000106c69667452616e436f64656e7369747900000000000000
*116c6f77657252616e436f64656e73697479000000000000000c72616e436f64656e7369747900
*0000000000000c636f64656e7369747952616e000000000000000c6c69667452616e576f726c64
*000000000000000d6c6f77657252616e576f726c64
newhex
*0d0cface00040000000000000dc00000000000000a662000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000001000000000000000d0000000000000000
*0000000000000001000000000000000e0000000000000000000000000000000100000000000000
*0f0000000000000000000000000000000100000000000000100000000000000000000000000000
*000100000000000000110000000000000000000000000000000100000000000000120000000000
*000000000000000000000100000000000000130000000000000000000000000000000100000000
*000000140000000000000000000000000000000100000000000000150000000000000000000000
*000000000100000000000000160000000000000000000000000000000100000000000000170000
*000000000000000000000000000100000000000000180000000000000000000000000000000100
*0000000000001900000000000000000000000000000001000000000000001a0000000000000000
*0000000000000001000000000000001b0000000000000000000000000000000100000000000000
*1c00000000000000000000000000000001000000000000001d0000000000000000000000000000
*0001000000000000001e00000000000000000000000000000001000000000000001f0000000000
*000000000000000000000101000000000000000000000000000000010000000005000000000000
*00000301023b00000054000000680000006500000020000000430000006f000000760000006100
*00007200000069000000610000006e0000007400000020000000590000006f0000006e00000065
*0000006400000061000000200000006c000000650000006d0000006d0000006100000020000000
*6100000070000000700000006c00000069000000650000006400000020000000740000006f0000
*0020000000610000002000000066000000750000006e00000063000000740000006f0000007200
*00002e000000200000004e0000006f000000740000006500000020000000740000006800000061
*00000074000000200107020100000066010214000000200000006e000000650000006500000064
*000000200000006e0000006f000000740000002000000062000000650000002000000061000000
*200000004800000061000000730000006b00000020010401000000000000000020000000000000
*000200000000000000030202000000210000000a00000000000000030301022000000054000000
*680000006500000020000000430000006f00000064000000650000006e00000073000000690000
*007400000079000000200000006d0000006f0000006e0000006100000064000000200000006f00
*00006600000020000000610000002000000066000000750000006e00000063000000740000006f
*000000720102010000002f021d0000006d0000006f0000006e0000006100000064000000200000
*0067000000650000006e0000006500000072000000610000007400000065000000640000002000
*0000620000007900000020000000610000002000000066000000750000006e0000006300000074
*0000006f000000720000000a000000000000000603024b0000004100000020000000700000006f
*000000690000006e0000007400000065000000640000002000000066000000750000006e000000
*63000000740000006f000000720000002000000069000000730000002000000061000000200000
*0066000000750000006e00000063000000740000006f0000007200000020000000770000006900
*000074000000680000002000000061000000200000006400000069000000730000006300000072
*000000690000006d000000690000006e0000006100000074000000650000006400000020000000
*66000000610000006d000000690000006c00000079000000200000006f00000066000000200000
*00660000002d000000630000006f000000610000006c0000006700000065000000620000007200
*000061000000730000000a00000000000000210b022c0000004500000072000000720000006f00
*000072000000540000002000000065000000200000002800000052000000610000006e0000005f
*000000670000002000000068000000290000002000000061000000200000003d00000020000000
*52000000610000006e0000005f0000006700000020000000280000004500000072000000720000
*006f00000072000000540000004800000020000000650000002000000068000000290000002000
*000061000000000000001103022e00000041000000200000007200000069000000670000006800
*000074000000200000004b000000610000006e0000002000000065000000780000007400000065
*0000006e00000073000000690000006f0000006e00000020000000740000007200000061000000
*6e00000073000000660000006f000000720000006d000000650000007200000020000000660000
*006f000000720000002000000061000000200000006d0000006f0000006e000000610000006400
*00000a200000000000000000000000000000000100000000000000020000000000000003000000
*000000000400000000000000050000000000000006000000000000000700000000000000080000
*000000000009000000000000000a000000000000000b000000000000000c000000000000000d00
*0000000000000e000000000000000f000000000000001000000000000000110000000000000012
*000000000000001300000000000000140000000000000015000000000000001600000000000000
*1700000000000000180000000000000019000000000000001a000000000000001b000000000000
*001c000000000000001d000000000000001e000000000000001f20000000000000001100000000
*0000001200000000000000130000000000000008000000000000000d000000000000000e000000
*000000000f00000000000000100000000000000009000000000000000a000000000000000b0000
*00000000000c000000000000001400000000000000150000000000000016000000000000001e00
*0000000000001f000000000000001700000000000000180000000000000019000000000000001a
*000000000000000600000000000000070000000000000000000000000000000100000000000000
*02000000000000000300000000000000040000000000000005000000000000001b000000000000
*001c000000000000001d0000000000000022000000000000000000000000000000010300000000
*000000040000000000000000000000000000000101000000000000000400000000000000000000
*000000000001000000000000000005000000000000000000000000000000010300000000000000
*060000000000000000000000000000000101000000000000000600000000000000000000000000
*000001000000000000000007000000000000000000000000000000010300000000000000080000
*000000000000000000000000000100000000000000000900000000000000000000000000000001
*03000000000000000a0000000000000000000000000000000103000000000000000b0000000000
*000000000000000000000100000000000000000c00000000000000000000000000000001000000
*00000000000d0000000000000000000000000000000100000000000000000e0000000000000000
*000000000000000103000000000000000f00000000000000000000000000000001030000000000
*000010000000000000000000000000000000010000000000000000110000000000000000000000
*000000000100000000000000001200000000000000000000000000000001030000000000000013
*000000000000000000000000000000010100000000000000130000000000000000000000000000
*000100000000000000001400000000000000000000000000000001000000000000000015000000
*000000000000000000000000010000000000000000160000000000000000000000000000000100
*000000000000001700000000000000000000000000000001000000000000000018000000000000
*000000000000000000010000000000000000190000000000000000000000000000000100000000
*000000001a0000000000000000000000000000000100000000000000001b000000000000000000
*0000000000000100000000000000001c0000000000000000000000000000000100000000000000
*001d0000000000000000000000000000000100000000000000001e000000000000000000000000
*0000000100000000000000001f0000000000000000000000000000000100000000000000002000
*000000000000020000000000000021030000000000000022000000000000000000000000000000
*010300000000000000230000000000000024000000000000000f6d6f6e61642d72616e2d302e30
*2e380000000000000011436f6e74726f6c2e4d6f6e61642e52616e000000000000000462617365
*000000000000000d436f6e74726f6c2e4d6f6e61640000000000000006596f6e65646100000000
*00000009676574596f6e6564610000000000000009436f64656e73697479000000000000000c67
*6574436f64656e736974790000000000000007506f696e7465640000000000000005706f696e74
*0000000000000006524d6f6e6164000000000000000852616e5472616e7300000000000000086c
*69667452616e5400000000000000066f757452616e0000000000000005696e52616e0000000000
*0000014700000000000000014800000000000000076c69667452616e00000000000000086c6f77
*657252616e000000000000000352616e000000000000000667657452616e000000000000001272
*657475726e52616e436f64656e73697479000000000000001062696e6452616e436f64656e7369
*7479000000000000000e617052616e436f64656e7369747900000000000000106c69667452616e
*436f64656e7369747900000000000000116c6f77657252616e436f64656e736974790000000000
*00000c6c69667452616e576f726c64000000000000000d6c6f77657252616e576f726c64000000
*000000000e6c6f776572436f64656e7369747900000000000000116c6f776572436f64656e7369
*747941707000000000000000156c6f776572436f64656e73697479506f696e7465640000000000
*00000c72616e436f64656e73697479000000000000000c636f64656e7369747952616e00000000
*000000084748432e42617365000000000000000746756e63746f7200000000000000074572726f
*725448
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 13
-<a name="line-5"></a>    <span class='hs-layout'>(</span> 
-<a name="line-6"></a>      <span class='hs-comment'>-- * The Yoneda Lemma</span>
-<a name="line-7"></a>      <span class='hs-conid'>Yoneda</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
-<a name="line-8"></a>      <span class='hs-comment'>-- * The codensity monad of a functor</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Codensity</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>      <span class='hs-comment'>-- * A right Kan extension monad transformer</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Ran</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
-<a name="line-12"></a>      <span class='hs-comment'>-- * Representing monads as right Kan extensions</span>
-<a name="line-13"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RMonad</span>
-<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>G</span>
-<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>H</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRan</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-18"></a>      <span class='hs-comment'>-- * Ran Monad Transformers</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RanTrans</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanT</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>outRan</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>inRan</span>
-<a name="line-23"></a>      <span class='hs-comment'>-- * Default definitions for common extension patterns</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>apRanCodensity</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>ranCodensity</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>codensityRan</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanCodensity</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-31"></a>      <span class='hs-comment'>-- * IO, ST s, STM</span>
-<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanWorld</span>
-<a name="line-33"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRanWorld</span>
-<a name="line-34"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybe</span><span class='hs-layout'>)</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Yoneda</span>
-<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
+<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-comment'>-- * A right Kan extension monad transformer</span>
+<a name="line-6"></a>      <span class='hs-conid'>Ran</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-7"></a>      <span class='hs-comment'>-- * Representing monads as right Kan extensions</span>
+<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RMonad</span>
+<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>G</span>
+<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>H</span>
+<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRan</span>
+<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-13"></a>      <span class='hs-comment'>-- * Ran Monad Transformers</span>
+<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RanTrans</span>
+<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanT</span>
+<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>outRan</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>inRan</span>
+<a name="line-18"></a>      <span class='hs-comment'>-- * Default definitions for common extension patterns</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>ranCodensity</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>codensityRan</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanCodensity</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-26"></a>      <span class='hs-comment'>-- * IO, ST s, STM</span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>liftRanWorld</span>
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerRanWorld</span>
+<a name="line-29"></a>      <span class='hs-comment'>-- * Pointed Functors</span>
+<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Pointed</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>      <span class='hs-comment'>-- * The Yoneda Lemma</span>
+<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Yoneda</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-33"></a>      <span class='hs-comment'>-- * The codensity monad of a functor</span>
+<a name="line-34"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Codensity</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerCodensity</span>
+<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerCodensityApp</span>
+<a name="line-37"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>lowerCodensityPointed</span>
+<a name="line-38"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-39"></a>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 54
-<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
-<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
-<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>IOBase</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span><span class='hs-layout'>)</span>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Conc</span>
-<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span>
+<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span>
+<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
+<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
+<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SW</span>
+<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SS</span>
+<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SR</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 64
-<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Read</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span><span class='hs-layout'>)</span>
-<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Show</span>
+<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybe</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 67
-<a name="line-59"></a><a name="Ran"></a><span class='hs-comment'>-- | A right Kan extension transformer for a monad</span>
-<a name="line-60"></a><a name="Ran"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
-<a name="line-61"></a>
-<a name="line-62"></a><a name="Ran"></a><span class='hs-keyword'>class</span> <span class='hs-comment'>{- Functor (G f) =&gt; -}</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-63"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-64"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-65"></a>    <span class='hs-varid'>liftRan</span>  <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-66"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-67"></a>
-<a name="line-68"></a><a name="Ran"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>RanTrans</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>liftRanT</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-70"></a>    <span class='hs-varid'>outRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-71"></a>    <span class='hs-varid'>inRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-74"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-59"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-60"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>IOBase</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span><span class='hs-layout'>)</span>
+<a name="line-61"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Conc</span>
+<a name="line-62"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span>
+<a name="line-63"></a>
+<a name="line-64"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Read</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span><span class='hs-layout'>,</span> <span class='hs-varid'>lift</span><span class='hs-layout'>)</span>
+<a name="line-65"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Show</span>
+<a name="line-66"></a>
+<a name="line-67"></a><a name="Ran"></a><span class='hs-comment'>-- | A right Kan extension transformer for a monad</span>
+<a name="line-68"></a><a name="Ran"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
+<a name="line-69"></a>
+<a name="line-70"></a><a name="Ran"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
+<a name="line-71"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-72"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-73"></a>    <span class='hs-varid'>liftRan</span>  <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-74"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 84
-<a name="line-76"></a><span class='hs-comment'>-- Codensity-like embeddings</span>
-<a name="line-77"></a>
-<a name="line-78"></a><a name="returnRanCodensity"></a><span class='hs-definition'>returnRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-79"></a><span class='hs-definition'>returnRanCodensity</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-76"></a><a name="Ran"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>RanTrans</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>where</span>
+<a name="line-77"></a>    <span class='hs-varid'>liftRanT</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-78"></a>    <span class='hs-varid'>outRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-79"></a>    <span class='hs-varid'>inRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 89
-<a name="line-81"></a><a name="bindRanCodensity"></a><span class='hs-definition'>bindRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
-<a name="line-82"></a><span class='hs-definition'>bindRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-82"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 92
-<a name="line-84"></a><a name="apRanCodensity"></a><span class='hs-definition'>apRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
-<a name="line-85"></a><span class='hs-definition'>apRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f'</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-84"></a><a name="RMonad"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span> 
+<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 95
-<a name="line-87"></a><a name="liftRanCodensity"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-88"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-87"></a><a name="RApplicative"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span> 
+<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 98
-<a name="line-90"></a><a name="lowerRanCodensity"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> 
-<a name="line-91"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>return</span>
+<a name="line-90"></a><a name="returnRanCodensity"></a><span class='hs-definition'>returnRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-91"></a><span class='hs-definition'>returnRanCodensity</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 101
-<a name="line-93"></a><a name="mfixRanCodensity"></a><span class='hs-definition'>mfixRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-94"></a><span class='hs-definition'>mfixRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-93"></a><a name="bindRanCodensity"></a><span class='hs-definition'>bindRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
+<a name="line-94"></a><span class='hs-definition'>bindRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 104
-<a name="line-96"></a><a name="mfixRan"></a><span class='hs-definition'>mfixRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-97"></a><span class='hs-definition'>mfixRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-96"></a><a name="apRanCodensity"></a><span class='hs-definition'>apRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
+<a name="line-97"></a><span class='hs-definition'>apRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f'</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 107
-<a name="line-99"></a><a name="RMonad"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span> 
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>f</span>
+<a name="line-99"></a><a name="liftRanCodensity"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-100"></a><span class='hs-definition'>liftRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 110
-<a name="line-102"></a><a name="RApplicative"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span> 
-<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RApplicative</span> <span class='hs-varid'>f</span>
+<a name="line-102"></a><a name="lowerRanCodensity"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> 
+<a name="line-103"></a><span class='hs-definition'>lowerRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>return</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 113
-<a name="line-105"></a><span class='hs-comment'>-- The codensity monad as a right Kan extension of a functor along itself</span>
-<a name="line-106"></a><span class='hs-comment'>-- Many state-like monads can be CPS transformed into a codensity monad.</span>
-<a name="line-107"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-108"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
-<a name="line-109"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
-<a name="line-110"></a>    <span class='hs-varid'>liftRan</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>codensityRan</span>
-<a name="line-111"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>ranCodensity</span>
-<a name="line-112"></a>
-<a name="line-113"></a><a name="ranCodensity"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-114"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span>
-<a name="line-115"></a>
-<a name="line-116"></a><a name="codensityRan"></a><span class='hs-definition'>codensityRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-117"></a><span class='hs-definition'>codensityRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span>
-<a name="line-118"></a>
-<a name="line-119"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-120"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-121"></a>
-<a name="line-122"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-123"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-124"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
-<a name="line-125"></a>
-<a name="line-126"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-127"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-128"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-129"></a>
-<a name="line-130"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-131"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
-<a name="line-132"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-133"></a>
-<a name="line-134"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-135"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-136"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-137"></a>
-<a name="line-138"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-139"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-140"></a>
-<a name="line-141"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-142"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-143"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-105"></a><a name="mfixRanCodensity"></a><span class='hs-definition'>mfixRanCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-106"></a><span class='hs-definition'>mfixRanCodensity</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-107"></a>
+<a name="line-108"></a><a name="mfixRan"></a><span class='hs-definition'>mfixRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-109"></a><span class='hs-definition'>mfixRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-110"></a>
+<a name="line-111"></a><span class='hs-comment'>-- | Yoneda Identity a ~ Codensity Identity a ~ forall o. (a -&gt; o) -&gt; o</span>
+<a name="line-112"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Identity</span> <span class='hs-keyword'>where</span>
+<a name="line-113"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-114"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-115"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-116"></a>    <span class='hs-varid'>lowerRan</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getRan</span> <span class='hs-conid'>Identity</span>
+<a name="line-117"></a>
+<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-119"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-120"></a>
+<a name="line-121"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-122"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-123"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-124"></a>
+<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-126"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-127"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-128"></a>
+<a name="line-129"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-130"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span>
+<a name="line-131"></a>
+<a name="line-132"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-133"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span>
+<a name="line-134"></a>
+<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-136"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-137"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"return "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-138"></a>    
+<a name="line-139"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-140"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-141"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"return"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-142"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-143"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 153
-<a name="line-145"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-146"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> 
-<a name="line-147"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-148"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-149"></a>
-<a name="line-150"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-151"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>ask</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-152"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
-<a name="line-153"></a>
-<a name="line-154"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-155"></a>    
-<a name="line-156"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-157"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-145"></a><span class='hs-comment'>-- State s a ~ Codensity (Reader s) a ~ forall o. (a -&gt; s -&gt; o) -&gt; s -&gt; o</span>
+<a name="line-146"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-147"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
+<a name="line-148"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
+<a name="line-149"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>uncurry</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-150"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>(,)</span><span class='hs-layout'>)</span>
+<a name="line-151"></a>
+<a name="line-152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-153"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-154"></a>
+<a name="line-155"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-156"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-157"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 167
-<a name="line-159"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-160"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-161"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-159"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-160"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-161"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 171
-<a name="line-163"></a><span class='hs-comment'>-- TODO: any other instances for Ran (Codensity f)</span>
-<a name="line-164"></a>
-<a name="line-165"></a><span class='hs-comment'>-- Yoneda Identity a ~ Codensity Identity a ~ forall o. (a -&gt; o) -&gt; o</span>
-<a name="line-166"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Identity</span> <span class='hs-keyword'>where</span>
-<a name="line-167"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-168"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Identity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-169"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
-<a name="line-170"></a>    <span class='hs-varid'>lowerRan</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getRan</span> <span class='hs-conid'>Identity</span>
-<a name="line-171"></a>
-<a name="line-172"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-173"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-163"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-164"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-165"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-166"></a>
+<a name="line-167"></a><span class='hs-comment'>-- Embedded into CPS'd State rather than directly to avoid superfluous 'mappend mempty' calls for expensive monoids</span>
+<a name="line-168"></a><span class='hs-comment'>-- forall o. (a -&gt; w -&gt; o) -&gt; w -&gt; o</span>
+<a name="line-169"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-170"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span>
+<a name="line-171"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span>
+<a name="line-172"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-173"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>(,)</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 183
-<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-176"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-177"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
-<a name="line-178"></a>
-<a name="line-179"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-180"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-181"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-182"></a>
-<a name="line-183"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-184"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span>
+<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-176"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-177"></a>
+<a name="line-178"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-179"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-180"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-181"></a>
+<a name="line-182"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-183"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-184"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 194
-<a name="line-186"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-187"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span>
-<a name="line-188"></a>
-<a name="line-189"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-190"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
-<a name="line-191"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"return "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-192"></a>    
-<a name="line-193"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-194"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
-<a name="line-195"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"return"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
-<a name="line-196"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
-<a name="line-197"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-186"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-187"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w'</span>        <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-188"></a>    <span class='hs-varid'>listen</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-189"></a>    <span class='hs-varid'>pass</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-190"></a>
+<a name="line-191"></a><a name="World"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-192"></a>
+<a name="line-193"></a><a name="liftRanWorld"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-194"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>World</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w'</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-195"></a>
+<a name="line-196"></a><a name="STret'"></a><span class='hs-comment'>-- homegrown STret with flopped arguments</span>
+<a name="line-197"></a><a name="STret'"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 207
-<a name="line-199"></a><span class='hs-comment'>-- Codensity (Reader s)</span>
-<a name="line-200"></a><span class='hs-comment'>-- forall o. (a -&gt; s -&gt; o) -&gt; s -&gt; o</span>
-<a name="line-201"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-202"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
-<a name="line-203"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
-<a name="line-204"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>uncurry</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
-<a name="line-205"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>(,)</span><span class='hs-layout'>)</span>
-<a name="line-206"></a>
-<a name="line-207"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-208"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-199"></a><a name="lowerRanWorld"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-200"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>World</span> <span class='hs-varop'>.</span> <span class='hs-conid'>STret'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> 
+<a name="line-201"></a>    <span class='hs-conid'>STret'</span> <span class='hs-varid'>b</span> <span class='hs-varid'>w''</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w''</span><span class='hs-layout'>,</span> <span class='hs-varid'>b</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-202"></a>
+<a name="line-203"></a><span class='hs-comment'>-- Represent IO as the codensity of the RealWorld</span>
+<a name="line-204"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>IO</span> <span class='hs-keyword'>where</span>
+<a name="line-205"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-206"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-207"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>a</span>
+<a name="line-208"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>a</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IO</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 218
-<a name="line-210"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-210"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 222
-<a name="line-214"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-214"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 226
-<a name="line-218"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-219"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-220"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-221"></a>
-<a name="line-222"></a><span class='hs-comment'>-- embedded as CPS'd State rather than directly to avoid superfluous 'mappend mempty' calls for expensive monoids</span>
-<a name="line-223"></a><span class='hs-comment'>-- forall o. (a -&gt; w -&gt; o) -&gt; w -&gt; o</span>
-<a name="line-224"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-225"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span>
-<a name="line-226"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span>
-<a name="line-227"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-228"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>(,)</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-229"></a>
-<a name="line-230"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-231"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-232"></a>
-<a name="line-233"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-234"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-235"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
-<a name="line-236"></a>
-<a name="line-237"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-238"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-239"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-240"></a>
-<a name="line-241"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-242"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w'</span>        <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-243"></a>    <span class='hs-varid'>listen</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-244"></a>    <span class='hs-varid'>pass</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-245"></a>
-<a name="line-246"></a><a name="World"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-247"></a>
-<a name="line-248"></a>
-<a name="line-249"></a><a name="liftRanWorld"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-250"></a><span class='hs-definition'>liftRanWorld</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>World</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>f</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w'</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-218"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-219"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
+<a name="line-220"></a>
+<a name="line-221"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-222"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftIO</span> <span class='hs-varid'>mzero</span>
+<a name="line-223"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>const</span> <span class='hs-varid'>n</span>
+<a name="line-224"></a>
+<a name="line-225"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-conid'>IOError</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-226"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftIO</span> <span class='hs-varop'>.</span> <span class='hs-varid'>ioError</span>
+<a name="line-227"></a>    <span class='hs-varid'>catchError</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catch`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-228"></a>
+<a name="line-229"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-230"></a>    <span class='hs-varid'>mfix</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mfixRan</span>
+<a name="line-231"></a>
+<a name="line-232"></a><span class='hs-comment'>-- Represent ST s as the codensity of the world s</span>
+<a name="line-233"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-234"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
+<a name="line-235"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
+<a name="line-236"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
+<a name="line-237"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-238"></a>
+<a name="line-239"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-240"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-241"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-242"></a>
+<a name="line-243"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-244"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-245"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-246"></a>
+<a name="line-247"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-248"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fixST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-249"></a>
+<a name="line-250"></a><span class='hs-comment'>-- todo make a MonadST class</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 260
-<a name="line-252"></a><a name="STret'"></a><span class='hs-comment'>-- homegrown STret with flopped arguments</span>
-<a name="line-253"></a><a name="STret'"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STret'</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-254"></a>
-<a name="line-255"></a><a name="lowerRanWorld"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>World</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-conid'>State</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-256"></a><span class='hs-definition'>lowerRanWorld</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>runWorld</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>World</span> <span class='hs-varop'>.</span> <span class='hs-conid'>STret'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyword'>of</span> 
-<a name="line-257"></a>    <span class='hs-conid'>STret'</span> <span class='hs-varid'>b</span> <span class='hs-varid'>w''</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>w''</span><span class='hs-layout'>,</span> <span class='hs-varid'>b</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-252"></a><span class='hs-comment'>-- Represent STM as the codensity of the RealWorld</span>
+<a name="line-253"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>STM</span> <span class='hs-keyword'>where</span>
+<a name="line-254"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-255"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
+<a name="line-256"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
+<a name="line-257"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STM</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 267
-<a name="line-259"></a><span class='hs-comment'>-- Represent IO as the codensity of the RealWorld</span>
-<a name="line-260"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>IO</span> <span class='hs-keyword'>where</span>
-<a name="line-261"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-262"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>IO</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-263"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>a</span>
-<a name="line-264"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>a</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IO</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-265"></a>
-<a name="line-266"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-267"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-268"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-259"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-260"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-261"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-262"></a>
+<a name="line-263"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-264"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-265"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-266"></a>
+<a name="line-267"></a><span class='hs-comment'>-- why is there no MonadFix instance for STM?</span>
+<a name="line-268"></a><span class='hs-comment'>-- TODO: make a MonadSTM class</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 278
-<a name="line-270"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-271"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-272"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-273"></a>
-<a name="line-274"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-275"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
-<a name="line-276"></a>
-<a name="line-277"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-278"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftIO</span> <span class='hs-varid'>mzero</span>
-<a name="line-279"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>const</span> <span class='hs-varid'>n</span>
-<a name="line-280"></a>
-<a name="line-281"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-conid'>IOError</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-282"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftIO</span> <span class='hs-varop'>.</span> <span class='hs-varid'>ioError</span>
-<a name="line-283"></a>    <span class='hs-varid'>catchError</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catch`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-270"></a><span class='hs-comment'>-- Yoneda-like embeddings</span>
+<a name="line-271"></a>
+<a name="line-272"></a><span class='hs-comment'>-- Yoneda lemma as a right Kan extension along the identity functor</span>
+<a name="line-273"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-274"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-275"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
+<a name="line-276"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-277"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-278"></a>
+<a name="line-279"></a><a name="ranYoneda"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-280"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-281"></a>
+<a name="line-282"></a><a name="yonedaRan"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-283"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 293
-<a name="line-285"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>IO</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-286"></a>    <span class='hs-varid'>mfix</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mfixRan</span>
+<a name="line-285"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-286"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 296
-<a name="line-288"></a><span class='hs-comment'>-- Represent ST s as the codensity of the world s</span>
-<a name="line-289"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-290"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
-<a name="line-291"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-varid'>s</span>
-<a name="line-292"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
-<a name="line-293"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-294"></a>
-<a name="line-295"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-296"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-297"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
-<a name="line-298"></a>
-<a name="line-299"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-300"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-301"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-302"></a>
-<a name="line-303"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-304"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fixST</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-305"></a>
-<a name="line-306"></a><span class='hs-comment'>-- todo make a MonadST class</span>
+<a name="line-288"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-289"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
+<a name="line-290"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-291"></a>
+<a name="line-292"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-293"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
+<a name="line-294"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> 
+<a name="line-295"></a>
+<a name="line-296"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-297"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-298"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-299"></a>
+<a name="line-300"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-301"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-302"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-303"></a>
+<a name="line-304"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-305"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>ask</span>
+<a name="line-306"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 316
-<a name="line-308"></a><span class='hs-comment'>-- Represent STM as the codensity of the RealWorld</span>
-<a name="line-309"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>STM</span> <span class='hs-keyword'>where</span>
-<a name="line-310"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-311"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>STM</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>World</span> <span class='hs-conid'>RealWorld</span>
-<a name="line-312"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanWorld</span> <span class='hs-varid'>s</span>
-<a name="line-313"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>STM</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanWorld</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-314"></a>
-<a name="line-315"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-316"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-317"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
-<a name="line-318"></a>
-<a name="line-319"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>STM</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-320"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
-<a name="line-321"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
-<a name="line-322"></a>
-<a name="line-323"></a><span class='hs-comment'>-- why is there no MonadFix instance for STM?</span>
-<a name="line-324"></a><span class='hs-comment'>-- TODO: make a MonadSTM class</span>
+<a name="line-308"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-309"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
+<a name="line-310"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-311"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
+<a name="line-312"></a>
+<a name="line-313"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-314"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>get</span>
+<a name="line-315"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
+<a name="line-316"></a>
+<a name="line-317"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-318"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-319"></a>
+<a name="line-320"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-321"></a>
+<a name="line-322"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-323"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>throwError</span>
+<a name="line-324"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varop'>`catchError`</span> <span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 334
-<a name="line-326"></a><span class='hs-comment'>-- Yoneda-like embeddings</span>
-<a name="line-327"></a>
-<a name="line-328"></a><span class='hs-comment'>-- Yoneda lemma as a right Kan extension along the identity functor</span>
-<a name="line-329"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-330"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-331"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
-<a name="line-332"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-333"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-334"></a>
-<a name="line-335"></a><a name="ranYoneda"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-336"></a><span class='hs-definition'>ranYoneda</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-337"></a>
-<a name="line-338"></a><a name="yonedaRan"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
-<a name="line-339"></a><span class='hs-definition'>yonedaRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span>
-<a name="line-340"></a>
-<a name="line-341"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-342"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
-<a name="line-343"></a>
-<a name="line-344"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-345"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
-<a name="line-346"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-347"></a>
-<a name="line-348"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-349"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
-<a name="line-350"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> 
-<a name="line-351"></a>
-<a name="line-352"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-353"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-354"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
-<a name="line-355"></a>
-<a name="line-356"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-357"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-358"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-359"></a>
-<a name="line-360"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-361"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>ask</span>
-<a name="line-362"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-363"></a>
-<a name="line-364"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-365"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
-<a name="line-366"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-367"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRan</span>
-<a name="line-368"></a>
-<a name="line-369"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-370"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>get</span>
-<a name="line-371"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
-<a name="line-372"></a>
-<a name="line-373"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-374"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
-<a name="line-375"></a>
-<a name="line-376"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-377"></a>
-<a name="line-378"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-379"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>throwError</span>
-<a name="line-380"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varop'>`catchError`</span> <span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
-<a name="line-381"></a>
-<a name="line-382"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-383"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-384"></a>
-<a name="line-385"></a><span class='hs-comment'>-- Yoneda Endo a ~ forall o. (a -&gt; o) -&gt; o -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; Endo o</span>
-<a name="line-386"></a><span class='hs-comment'>-- note Endo is not a Hask Functor and Maybe is not a Codensity monad, so this is trickier</span>
-<a name="line-387"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyword'>where</span>
-<a name="line-388"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-389"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
-<a name="line-390"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybe</span> <span class='hs-varid'>mzero</span> <span class='hs-varid'>return</span>
-<a name="line-391"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>mzero</span>
-<a name="line-392"></a>
-<a name="line-393"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-394"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-395"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-396"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
-<a name="line-397"></a>
-<a name="line-398"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-399"></a>    <span class='hs-varid'>pure</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-400"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-401"></a>
-<a name="line-402"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-403"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-404"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-405"></a>
-<a name="line-406"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-407"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
-<a name="line-408"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-326"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-327"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-328"></a>
+<a name="line-329"></a><span class='hs-comment'>-- Yoneda Endo a ~ forall o. (a -&gt; o) -&gt; o -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; Endo o</span>
+<a name="line-330"></a><span class='hs-comment'>-- note Endo is not a Hask Functor and Maybe is not a Codensity monad, so this is trickier</span>
+<a name="line-331"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyword'>where</span>
+<a name="line-332"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-333"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
+<a name="line-334"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybe</span> <span class='hs-varid'>mzero</span> <span class='hs-varid'>return</span>
+<a name="line-335"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>mzero</span>
+<a name="line-336"></a>
+<a name="line-337"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-338"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-339"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-340"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
+<a name="line-341"></a>
+<a name="line-342"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-343"></a>    <span class='hs-varid'>pure</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-344"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-345"></a>
+<a name="line-346"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-347"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-348"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-349"></a>
+<a name="line-350"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-351"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
+<a name="line-352"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-353"></a>
+<a name="line-354"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-355"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-356"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>unJust</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-357"></a>        <span class='hs-varid'>unJust</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"mfix (Ran Maybe): Nothing"</span><span class='hs-layout'>)</span>
+<a name="line-358"></a>
+<a name="line-359"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-360"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
+<a name="line-361"></a>
+<a name="line-362"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-363"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
+<a name="line-364"></a>
+<a name="line-365"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-366"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-367"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"liftRan "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-368"></a>    
+<a name="line-369"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-370"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-371"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"liftRan"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-372"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-373"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-374"></a>
+<a name="line-375"></a><span class='hs-keyword'>type</span> <span class='hs-layout'>(</span><span class='hs-conop'>:-&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span>
+<a name="line-376"></a>
+<a name="line-377"></a><a name="ErrorH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>o</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span> 
+<a name="line-378"></a>
+<a name="line-379"></a><span class='hs-comment'>-- Yoneda (ErrorH e) ~ forall o. (a -&gt; o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; ErrorH e o</span>
+<a name="line-380"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-381"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-382"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span>
+<a name="line-383"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Right</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-384"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Left</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-385"></a>    <span class='hs-varid'>lowerRan</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>eitherRan</span> <span class='hs-conid'>Left</span> <span class='hs-conid'>Right</span>
+<a name="line-386"></a>
+<a name="line-387"></a><a name="eitherRan"></a><span class='hs-definition'>eitherRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-388"></a><span class='hs-definition'>eitherRan</span> <span class='hs-varid'>f</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span>
+<a name="line-389"></a>
+<a name="line-390"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-391"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-392"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varop'>.</span> <span class='hs-varid'>strMsg</span>
+<a name="line-393"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-394"></a>
+<a name="line-395"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-396"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-397"></a><span class='hs-comment'>--  catchError f h = Ran (\k -&gt; ErrorH (\e -&gt; getErrorH (getRan f k) e))</span>
+<a name="line-398"></a><span class='hs-comment'>--  catchError :: Ran (Either e) a -&gt; (e -&gt; Ran (Either e) a -&gt; Ran (Either e) a</span>
+<a name="line-399"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-400"></a>
+<a name="line-401"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-402"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varid'>noMsg</span>
+<a name="line-403"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-404"></a>
+<a name="line-405"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-406"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-407"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromRight</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-408"></a>        <span class='hs-varid'>fromRight</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"mfix (Ran (Either e)): empty mfix argument"</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 418
-<a name="line-410"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-411"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-412"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>unJust</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-413"></a>        <span class='hs-varid'>unJust</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"mfix (Ran Maybe): Nothing"</span><span class='hs-layout'>)</span>
-<a name="line-414"></a>
-<a name="line-415"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-416"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
-<a name="line-417"></a>
-<a name="line-418"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-419"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
-<a name="line-420"></a>
-<a name="line-421"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-422"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
-<a name="line-423"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"liftRan "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-424"></a>    
-<a name="line-425"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-426"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
-<a name="line-427"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"liftRan "</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
-<a name="line-428"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
-<a name="line-429"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-430"></a>
-<a name="line-431"></a><span class='hs-keyword'>type</span> <span class='hs-layout'>(</span><span class='hs-conop'>:-&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span>
-<a name="line-432"></a>
-<a name="line-433"></a><a name="ErrorH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>o</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span> 
-<a name="line-434"></a>
-<a name="line-435"></a><span class='hs-comment'>-- Yoneda (ErrorH e) ~ forall o. (a -&gt; o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; (e -&gt; o) -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; ErrorH e o</span>
-<a name="line-436"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-437"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-438"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorH</span> <span class='hs-varid'>e</span>
-<a name="line-439"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Right</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-440"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Left</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-441"></a>    <span class='hs-varid'>lowerRan</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>eitherRan</span> <span class='hs-conid'>Left</span> <span class='hs-conid'>Right</span>
-<a name="line-442"></a>
-<a name="line-443"></a><a name="eitherRan"></a><span class='hs-definition'>eitherRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-444"></a><span class='hs-definition'>eitherRan</span> <span class='hs-varid'>f</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span>
-<a name="line-445"></a>
-<a name="line-446"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-447"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-448"></a>    <span class='hs-varid'>fail</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varop'>.</span> <span class='hs-varid'>strMsg</span>
-<a name="line-449"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-450"></a>
-<a name="line-451"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-452"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-453"></a><span class='hs-comment'>--  catchError f h = Ran (\k -&gt; ErrorH (\e -&gt; getErrorH (getRan f k) e))</span>
-<a name="line-454"></a><span class='hs-comment'>--  catchError :: Ran (Either e) a -&gt; (e -&gt; Ran (Either e) a -&gt; Ran (Either e) a</span>
-<a name="line-455"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-456"></a>
-<a name="line-457"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-458"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>throwError</span> <span class='hs-varid'>noMsg</span>
-<a name="line-459"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-410"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-411"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
+<a name="line-412"></a>
+<a name="line-413"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-414"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
+<a name="line-415"></a>
+<a name="line-416"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-417"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-418"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"liftRan "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-419"></a>    
+<a name="line-420"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-421"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-422"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"liftRan"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-423"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-424"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-425"></a>
+<a name="line-426"></a>
+<a name="line-427"></a><span class='hs-comment'>-- Yoneda (Reader r) ~ forall o. (a -&gt; o) -&gt; r -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; r -&gt; o</span>
+<a name="line-428"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-429"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-430"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span>
+<a name="line-431"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-432"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span>
+<a name="line-433"></a>
+<a name="line-434"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-435"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-436"></a>
+<a name="line-437"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-438"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-439"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-440"></a>
+<a name="line-441"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-442"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-443"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-444"></a>    
+<a name="line-445"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-446"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-447"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-448"></a>
+<a name="line-449"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-450"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
+<a name="line-451"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-452"></a>
+<a name="line-453"></a>
+<a name="line-454"></a><span class='hs-comment'>-- Yoneda (Reader r) ~ forall o. (a -&gt; o) -&gt; r -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; r -&gt; o</span>
+<a name="line-455"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-456"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-457"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span>
+<a name="line-458"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-459"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 469
-<a name="line-461"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-462"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-463"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromRight</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-464"></a>        <span class='hs-varid'>fromRight</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getErrorH</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"mfix (Ran (Either e)): empty mfix argument"</span><span class='hs-layout'>)</span>
-<a name="line-465"></a>
-<a name="line-466"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-467"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
-<a name="line-468"></a>
-<a name="line-469"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-470"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>g</span>
-<a name="line-471"></a>
-<a name="line-472"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-473"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
-<a name="line-474"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"liftRan "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-475"></a>    
-<a name="line-476"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-477"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
-<a name="line-478"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"liftRan "</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
-<a name="line-479"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
-<a name="line-480"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-481"></a>
+<a name="line-461"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-462"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-463"></a>
+<a name="line-464"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-465"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-466"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-467"></a>
+<a name="line-468"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-469"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-470"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReader</span><span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-471"></a>    
+<a name="line-472"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-473"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-474"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-475"></a>
+<a name="line-476"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-477"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
+<a name="line-478"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-479"></a>
+<a name="line-480"></a>
+<a name="line-481"></a><span class='hs-comment'>-- Ran Transformers</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 491
-<a name="line-483"></a><span class='hs-comment'>-- Yoneda (Reader r) ~ forall o. (a -&gt; o) -&gt; r -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; r -&gt; o</span>
-<a name="line-484"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-485"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-486"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span>
-<a name="line-487"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-488"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span>
+<a name="line-483"></a><span class='hs-comment'>-- ReaderT m a ~ forall o. (a -&gt; G m o) -&gt; ReaderT r (H m) o</span>
+<a name="line-484"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-485"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span>
+<a name="line-486"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span> <span class='hs-conop'>:-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span>
+<a name="line-487"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-488"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReaderT</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 498
-<a name="line-490"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-491"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-492"></a>
-<a name="line-493"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-494"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-495"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-496"></a>
-<a name="line-497"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-498"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-499"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-500"></a>    
-<a name="line-501"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-502"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-503"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-504"></a>
-<a name="line-505"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-506"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-507"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-508"></a>
+<a name="line-490"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanTrans</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-491"></a>    <span class='hs-varid'>liftRanT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varop'>.</span> <span class='hs-varid'>const</span> <span class='hs-varop'>.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-492"></a>    <span class='hs-varid'>outRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReaderT</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-493"></a>    <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-494"></a>
+<a name="line-495"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-496"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-497"></a>
+<a name="line-498"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-499"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-500"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`ap`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-501"></a>
+<a name="line-502"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-503"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-504"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-505"></a>
+<a name="line-506"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-507"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-508"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 518
-<a name="line-510"></a><span class='hs-comment'>-- Yoneda (Reader r) ~ forall o. (a -&gt; o) -&gt; r -&gt; o ~ forall o. (a -&gt; Identity o) -&gt; r -&gt; o</span>
-<a name="line-511"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-512"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-<a name="line-513"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span>
-<a name="line-514"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-515"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span>
-<a name="line-516"></a>
-<a name="line-517"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-518"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-519"></a>
-<a name="line-520"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-521"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-522"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-523"></a>
-<a name="line-524"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-525"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-526"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReader</span><span class='hs-layout'>(</span><span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-527"></a>    
-<a name="line-528"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-529"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-530"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-531"></a>
-<a name="line-532"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-533"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-534"></a>    <span class='hs-conid'>Ran</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>runReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-510"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-511"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>get</span>
+<a name="line-512"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
+<a name="line-513"></a>    
+<a name="line-514"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-515"></a>    <span class='hs-varid'>ask</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span>
+<a name="line-516"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
+<a name="line-517"></a>
+<a name="line-518"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-519"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
+<a name="line-520"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
+<a name="line-521"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
+<a name="line-522"></a>
+<a name="line-523"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-524"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-525"></a>
+<a name="line-526"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-527"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-528"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-529"></a>
+<a name="line-530"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-531"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-532"></a>
+<a name="line-533"></a><span class='hs-comment'>-- TODO: instance MonadError (ReaderT e m), MonadCont (ReaderT e m), MonadFix (ReaderT e m), ...</span>
+<a name="line-534"></a><span class='hs-comment'>-- MonadPlus (ReaderT e m), MonadFix (ReaderT e m)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 545
-<a name="line-537"></a><span class='hs-comment'>-- Ran Transformers</span>
+<a name="line-537"></a><span class='hs-comment'>-- | @ErrorT e (Ran_g h) a = Ran_g (ErrorTH e h) a@</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 547
-<a name="line-539"></a><span class='hs-comment'>-- ReaderT m a ~ forall o. (a -&gt; G m o) -&gt; ReaderT r (H m) o</span>
-<a name="line-540"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-541"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span>
-<a name="line-542"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span> <span class='hs-conop'>:-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span>
-<a name="line-543"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-544"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReaderT</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-545"></a>
-<a name="line-546"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanTrans</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-547"></a>    <span class='hs-varid'>liftRanT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varop'>.</span> <span class='hs-varid'>const</span> <span class='hs-varop'>.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-548"></a>    <span class='hs-varid'>outRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runReaderT</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-549"></a>    <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ReaderT</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-550"></a>
-<a name="line-551"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-552"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-553"></a>
-<a name="line-554"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-555"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-556"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`ap`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-539"></a><a name="ErrorTH"></a><span class='hs-comment'>-- m (Either a b) ~ (Either a b -&gt; G m o) -&gt; H m o ~ forall o. (a -&gt; G m o) -&gt; (b -&gt; G m o) -&gt; H m o</span>
+<a name="line-540"></a><a name="ErrorTH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-541"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-542"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> 
+<a name="line-543"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span>
+<a name="line-544"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-545"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorT</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Right</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Left</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-546"></a>
+<a name="line-547"></a><a name="unwrapErrorT"></a><span class='hs-definition'>unwrapErrorT</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-548"></a><span class='hs-definition'>unwrapErrorT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Right</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Left</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-549"></a>
+<a name="line-550"></a><a name="wrapErrorT"></a><span class='hs-definition'>wrapErrorT</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span>
+<a name="line-551"></a><span class='hs-definition'>wrapErrorT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-552"></a>
+<a name="line-553"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanTrans</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-554"></a>    <span class='hs-varid'>liftRanT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-555"></a>    <span class='hs-varid'>outRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Right</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Left</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-556"></a>    <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 566
-<a name="line-558"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-559"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-560"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
-<a name="line-561"></a>
-<a name="line-562"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-563"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-564"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-565"></a>
-<a name="line-566"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-567"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>get</span>
-<a name="line-568"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
-<a name="line-569"></a>    
-<a name="line-570"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-571"></a>    <span class='hs-varid'>ask</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span>
-<a name="line-572"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
-<a name="line-573"></a>
-<a name="line-574"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-575"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
-<a name="line-576"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
-<a name="line-577"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
-<a name="line-578"></a>
-<a name="line-579"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-580"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
-<a name="line-581"></a>
-<a name="line-582"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-583"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-584"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-558"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-559"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-560"></a>
+<a name="line-561"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-562"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-563"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`ap`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-564"></a>
+<a name="line-565"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-566"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-567"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-568"></a>
+<a name="line-569"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-570"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
+<a name="line-571"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-572"></a>
+<a name="line-573"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-574"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>get</span>
+<a name="line-575"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
+<a name="line-576"></a>    
+<a name="line-577"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-578"></a>    <span class='hs-varid'>ask</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>ask</span>
+<a name="line-579"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
+<a name="line-580"></a>
+<a name="line-581"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-582"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
+<a name="line-583"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
+<a name="line-584"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 594
-<a name="line-586"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-587"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-588"></a>
-<a name="line-589"></a><span class='hs-comment'>-- TODO: instance MonadError (ReaderT e m), MonadCont (ReaderT e m), MonadFix (ReaderT e m), ...</span>
-<a name="line-590"></a><span class='hs-comment'>-- MonadPlus (ReaderT e m), MonadFix (ReaderT e m)</span>
-<a name="line-591"></a>
-<a name="line-592"></a><a name="unwrapErrorT"></a><span class='hs-definition'>unwrapErrorT</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-593"></a><span class='hs-definition'>unwrapErrorT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Right</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Left</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-594"></a>
-<a name="line-595"></a><a name="wrapErrorT"></a><span class='hs-definition'>wrapErrorT</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span>
-<a name="line-596"></a><span class='hs-definition'>wrapErrorT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-597"></a>
-<a name="line-598"></a><a name="ErrorTH"></a><span class='hs-comment'>-- m (Either a b) ~ (Either a b -&gt; G m o) -&gt; H m o ~ forall o. (a -&gt; G m o) -&gt; (b -&gt; G m o) -&gt; H m o</span>
-<a name="line-599"></a><a name="ErrorTH"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-varid'>m</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
-<a name="line-600"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-601"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>G</span> <span class='hs-varid'>m</span> 
-<a name="line-602"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span>
-<a name="line-603"></a>    <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftRan</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-604"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorT</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Right</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Left</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-605"></a>
-<a name="line-606"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanTrans</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-607"></a>    <span class='hs-varid'>liftRanT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-608"></a>    <span class='hs-varid'>outRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ErrorT</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getErrorTH</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Right</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Left</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-609"></a>    <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ErrorTH</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-610"></a>
-<a name="line-611"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-612"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-613"></a>
-<a name="line-614"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-615"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-616"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`ap`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
-<a name="line-617"></a>
-<a name="line-618"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-619"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>mzero</span>
-<a name="line-620"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>outRan</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
+<a name="line-586"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-587"></a>
+<a name="line-588"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-589"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-590"></a>
+<a name="line-591"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-592"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-593"></a>
+<a name="line-594"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-595"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unwrapErrorT</span> <span class='hs-varid'>f</span> <span class='hs-varop'>==</span> <span class='hs-varid'>unwrapErrorT</span> <span class='hs-varid'>g</span>
+<a name="line-596"></a>
+<a name="line-597"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-598"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unwrapErrorT</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>unwrapErrorT</span> <span class='hs-varid'>g</span>
+<a name="line-599"></a>
+<a name="line-600"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-601"></a>    <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-602"></a>        <span class='hs-varid'>showString</span> <span class='hs-str'>"wrapErrorT "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showsPrec</span> <span class='hs-num'>11</span> <span class='hs-layout'>(</span><span class='hs-varid'>unwrapErrorT</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-603"></a>
+<a name="line-604"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RanIso</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-605"></a>    <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-606"></a>        <span class='hs-conid'>Ident</span> <span class='hs-str'>"wrapErrorT"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-607"></a>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>step</span> <span class='hs-varid'>readPrec</span>
+<a name="line-608"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>wrapErrorT</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-609"></a>
+<a name="line-610"></a><span class='hs-comment'>{-
+<a name="line-611"></a>-- (a -&gt; r) -&gt; r
+<a name="line-612"></a>instance RMonad (Cont r) where
+<a name="line-613"></a>    type G (Cont r) = Const r
+<a name="line-614"></a>    type H (Cont r) = Const r
+<a name="line-615"></a>
+<a name="line-616"></a>-- forall o. (a -&gt; w -&gt; G m o) -&gt; H m o
+<a name="line-617"></a>-- forall o. (a -&gt; G m (w -&gt; o)) -&gt; H m (w -&gt; o) ?
+<a name="line-618"></a>instance (Monoid w, RMonad m) =&gt; RMonad (WriterT w m) where
+<a name="line-619"></a>    type G (WriterT w m) = w :-&gt; G m
+<a name="line-620"></a>    type H (WriterT w m) = H m
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 630
-<a name="line-622"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-623"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span>
-<a name="line-624"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-625"></a>
-<a name="line-626"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-627"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>get</span>
-<a name="line-628"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
-<a name="line-629"></a>    
-<a name="line-630"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-631"></a>    <span class='hs-varid'>ask</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varid'>ask</span>
-<a name="line-632"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
-<a name="line-633"></a>
-<a name="line-634"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-635"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
-<a name="line-636"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
-<a name="line-637"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>outRan</span>
-<a name="line-638"></a>
-<a name="line-639"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-640"></a>
-<a name="line-641"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-642"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
-<a name="line-643"></a>
-<a name="line-644"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RMonad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-645"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>inRan</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>outRan</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-646"></a><span class='hs-comment'>{-
-<a name="line-647"></a>-- (a -&gt; r) -&gt; r
-<a name="line-648"></a>instance RMonad (Cont r) where
-<a name="line-649"></a>    type G (Cont r) = Const r
-<a name="line-650"></a>    type H (Cont r) = Const r
-<a name="line-651"></a>
-<a name="line-652"></a>-- forall o. (a -&gt; G m o) -&gt; r -&gt; H m o 
-<a name="line-653"></a>instance RMonad m =&gt; RMonad (ReaderT e m) where
-<a name="line-654"></a>    type G (ReaderT e m) = G m
-<a name="line-655"></a>    type H (ReaderT e m) = e :-&gt; H m
-<a name="line-656"></a>
-<a name="line-657"></a>-- forall o. (a -&gt; w -&gt; G m o) -&gt; H m o
-<a name="line-658"></a>-- forall o. (a -&gt; G m (w -&gt; o)) -&gt; H m (w -&gt; o) ?
-<a name="line-659"></a>instance (Monoid w, RMonad m) =&gt; RMonad (WriterT w m) where
-<a name="line-660"></a>    type G (WriterT w m) = w :-&gt; G m
-<a name="line-661"></a>    type H (WriterT w m) = H m
-<a name="line-662"></a>
-<a name="line-663"></a>-- forall o. (a -&gt; s -&gt; G m o) -&gt; s -&gt; H m o 
-<a name="line-664"></a>-- forall o. (a -&gt; G m (s -&gt; o)) -&gt; H m (s -&gt; o) ?
-<a name="line-665"></a>instance RMonad m =&gt; RMonad (StateT s m) where
-<a name="line-666"></a>    type G (StateT s m) = s :-&gt; G m
-<a name="line-667"></a>    type H (StateT s m) = s :-&gt; H m
+<a name="line-622"></a>-- forall o. (a -&gt; s -&gt; G m o) -&gt; s -&gt; H m o 
+<a name="line-623"></a>-- forall o. (a -&gt; G m (s -&gt; o)) -&gt; H m (s -&gt; o) ?
+<a name="line-624"></a>instance RMonad m =&gt; RMonad (StateT s m) where
+<a name="line-625"></a>    type G (StateT s m) = s :-&gt; G m
+<a name="line-626"></a>    type H (StateT s m) = s :-&gt; H m
+<a name="line-627"></a>
+<a name="line-628"></a>-- (a -&gt; G m r) -&gt; H m r
+<a name="line-629"></a>data ConstT r f a = ConstT { getConstT :: f r } 
+<a name="line-630"></a>instance RMonad m =&gt; RMonad (ContT r m) where
+<a name="line-631"></a>    type G (ContT r m) = ConstT r (G m)
+<a name="line-632"></a>    type H (ContT r m) = ConstT r (H m)
+<a name="line-633"></a>-}</span>
+<a name="line-634"></a>
+<a name="line-635"></a>
+<a name="line-636"></a><a name="Pointed"></a><span class='hs-comment'>-- | A pointed functor is a functor with a discriminated family of f-coalgebras</span>
+<a name="line-637"></a><a name="Pointed"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Functor</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
+<a name="line-638"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-639"></a>
+<a name="line-640"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Maybe</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span>
+<a name="line-641"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-642"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-643"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>ContT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-644"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Identity</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
+<a name="line-645"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Right</span>
+<a name="line-646"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Error</span> <span class='hs-varid'>e</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>ErrorT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-647"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-648"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-649"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-650"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>SS</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-651"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-652"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>SS</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-653"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-654"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>SW</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-655"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-656"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>SW</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-657"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-658"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>SR</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-659"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-660"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>SR</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-661"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-662"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>ListT</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-663"></a>
+<a name="line-664"></a>
+<a name="line-665"></a><span class='hs-comment'>-- | The Codensity monad of a functor/monad generated by a functor</span>
+<a name="line-666"></a>
+<a name="line-667"></a><a name="Codensity"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran.html 677
-<a name="line-669"></a>-- (a -&gt; G m r) -&gt; H m r
-<a name="line-670"></a>data ConstT r f a = ConstT { getConstT :: f r } 
-<a name="line-671"></a>instance RMonad m =&gt; RMonad (ContT r m) where
-<a name="line-672"></a>    type G (ContT r m) = ConstT r (G m)
-<a name="line-673"></a>    type H (ContT r m) = ConstT r (H m)
-<a name="line-674"></a>-}</span>
-<a name="line-675"></a>
+<a name="line-669"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-670"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-671"></a>
+<a name="line-672"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-673"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-674"></a>
+<a name="line-675"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-676"></a>    <span class='hs-varid'>pure</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-677"></a>    <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-678"></a>
+<a name="line-679"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-680"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-681"></a>    <span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> 
+<a name="line-682"></a>        <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-683"></a>
+<a name="line-684"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-685"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-686"></a>
+<a name="line-687"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-688"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>)</span>
+<a name="line-689"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerCodensity</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerCodensity</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-690"></a>
+<a name="line-691"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-692"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varid'>ask</span>
+<a name="line-693"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>do</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>ask</span><span class='hs-layout'>;</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCodensity</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>local</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-694"></a>
+<a name="line-695"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-696"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
+<a name="line-697"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerCodensity</span>
+<a name="line-698"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerCodensity</span>
+<a name="line-699"></a>
+<a name="line-700"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-701"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varid'>get</span>
+<a name="line-702"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
+<a name="line-703"></a>
+<a name="line-704"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-705"></a>
+<a name="line-706"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-707"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-708"></a>
+<a name="line-709"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-710"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>throwError</span>
+<a name="line-711"></a>    <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>lowerCodensity</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span>
+<a name="line-712"></a>
+<a name="line-713"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadTrans</span> <span class='hs-conid'>Codensity</span> <span class='hs-keyword'>where</span>
+<a name="line-714"></a>    <span class='hs-varid'>lift</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-715"></a>
+<a name="line-716"></a><a name="lowerCodensity"></a><span class='hs-definition'>lowerCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-717"></a><span class='hs-definition'>lowerCodensity</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>return</span>
+<a name="line-718"></a>
+<a name="line-719"></a><a name="lowerCodensityApp"></a><span class='hs-definition'>lowerCodensityApp</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-720"></a><span class='hs-definition'>lowerCodensityApp</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>pure</span>
+<a name="line-721"></a>
+<a name="line-722"></a><a name="lowerCodensityPointed"></a><span class='hs-definition'>lowerCodensityPointed</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-723"></a><span class='hs-definition'>lowerCodensityPointed</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-varid'>pure</span>
+<a name="line-724"></a>
+<a name="line-725"></a><span class='hs-comment'>-- The codensity monad as a right Kan extension of a functor along itself</span>
+<a name="line-726"></a><span class='hs-comment'>-- Many state-like monads can be CPS transformed into a codensity monad.</span>
+<a name="line-727"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-728"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>G</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
+<a name="line-729"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>H</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span>
+<a name="line-730"></a>    <span class='hs-varid'>liftRan</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>codensityRan</span>
+<a name="line-731"></a>    <span class='hs-varid'>lowerRan</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>ranCodensity</span>
+<a name="line-732"></a>
+<a name="line-733"></a><a name="ranCodensity"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-734"></a><span class='hs-definition'>ranCodensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span>
+<a name="line-735"></a>
+<a name="line-736"></a><a name="codensityRan"></a><span class='hs-definition'>codensityRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-737"></a><span class='hs-definition'>codensityRan</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>f</span>
+<a name="line-738"></a>
+<a name="line-739"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-740"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-741"></a>
+<a name="line-742"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-743"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-744"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>apRanCodensity</span>
+<a name="line-745"></a>
+<a name="line-746"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-747"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>returnRanCodensity</span>
+<a name="line-748"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bindRanCodensity</span>
+<a name="line-749"></a>
+<a name="line-750"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-751"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>empty</span>
+<a name="line-752"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-753"></a>
+<a name="line-754"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-755"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-varid'>mzero</span>
+<a name="line-756"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRan</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRan</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>lowerRan</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-757"></a>
+<a name="line-758"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-759"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftIO</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-760"></a>
+<a name="line-761"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-762"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>get</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-763"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-764"></a>
+<a name="line-765"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-766"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span> 
+<a name="line-767"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-768"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-769"></a>
+<a name="line-770"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-771"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>ask</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-772"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerRanCodensity</span>
+<a name="line-773"></a>
+<a name="line-774"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-775"></a>    
+<a name="line-776"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-777"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-778"></a>
+<a name="line-779"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-780"></a>    <span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-varid'>throwError</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;&gt;=</span><span class='hs-layout'>)</span>
+<a name="line-781"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftRanCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerRanCodensity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-782"></a>
+<a name="line-783"></a>
+<a name="line-784"></a>
+<a name="line-785"></a><span class='hs-comment'>-- | The Covariant Yoneda lemma applied to a functor. Note that @f@ need not be a Hask 'Functor'!</span>
+<a name="line-786"></a>
+<a name="line-787"></a><a name="Yoneda"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
+<a name="line-788"></a>
+<a name="line-789"></a><a name="lowerYoneda"></a><span class='hs-definition'>lowerYoneda</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
+<a name="line-790"></a><span class='hs-definition'>lowerYoneda</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>id</span>
+<a name="line-791"></a>
+<a name="line-792"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-793"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getYoneda</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-794"></a>
+<a name="line-795"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-796"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>point</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-797"></a>
+<a name="line-798"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-799"></a>    <span class='hs-varid'>pure</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-800"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getYoneda</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>.</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>getYoneda</span> <span class='hs-varid'>n</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-801"></a>
+<a name="line-802"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-803"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-varid'>empty</span><span class='hs-layout'>)</span>
+<a name="line-804"></a>    <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>n</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-805"></a>
+<a name="line-806"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-807"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-808"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getYoneda</span> <span class='hs-varid'>m</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getYoneda</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-809"></a>
+<a name="line-810"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-811"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>)</span>
+<a name="line-812"></a>    <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mplus`</span> <span class='hs-conid'>Yoneda</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>n</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-813"></a>
+<a name="line-814"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadTrans</span> <span class='hs-conid'>Yoneda</span> <span class='hs-keyword'>where</span>
+<a name="line-815"></a>    <span class='hs-varid'>lift</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Yoneda</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>liftM</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-816"></a>
+<a name="line-817"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-818"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varid'>ask</span>
+<a name="line-819"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerYoneda</span> 
+<a name="line-820"></a>
+<a name="line-821"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-822"></a>    <span class='hs-varid'>tell</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>tell</span>
+<a name="line-823"></a>    <span class='hs-varid'>listen</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>listen</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerYoneda</span>
+<a name="line-824"></a>    <span class='hs-varid'>pass</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pass</span> <span class='hs-varop'>.</span> <span class='hs-varid'>lowerYoneda</span>
+<a name="line-825"></a>
+<a name="line-826"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-827"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varid'>get</span>
+<a name="line-828"></a>    <span class='hs-varid'>put</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>put</span>
+<a name="line-829"></a>
+<a name="line-830"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadIO</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadIO</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-831"></a>    <span class='hs-varid'>liftIO</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftIO</span>
+<a name="line-832"></a>
+<a name="line-833"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-834"></a>
+<a name="line-835"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadError</span> <span class='hs-varid'>e</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-836"></a>    <span class='hs-varid'>throwError</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>.</span> <span class='hs-varid'>throwError</span>
+<a name="line-837"></a>    <span class='hs-varid'>catchError</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>lowerYoneda</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`catchError`</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerYoneda</span> <span class='hs-varop'>.</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span>
+<a name="line-838"></a>
+<a name="line-839"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadFix</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadFix</span> <span class='hs-layout'>(</span><span class='hs-conid'>Yoneda</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-840"></a>    <span class='hs-varid'>mfix</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mfix</span> <span class='hs-layout'>(</span><span class='hs-varid'>lowerYoneda</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-841"></a>    
+<a name="line-842"></a>
}
