[added better docs
ekmett@gmail.com**20090407034131
 Ignore-this: 493d628fe4a9c3856044ac2bc6bd4f31
] {
hunk ./doc/html/unboxed-containers/Data-Set-Unboxed.html 22
->unboxed-containers-0.0.0: Self-optimizing unboxed sets using view patterns and data families</TD
+>unboxed-containers-0.0.1: Self-optimizing unboxed sets using view patterns and data families</TD
hunk ./doc/html/unboxed-containers/doc-index.html 7
->unboxed-containers-0.0.0: Self-optimizing unboxed sets using view patterns and data families (Index)</TITLE
+>unboxed-containers-0.0.1: Self-optimizing unboxed sets using view patterns and data families (Index)</TITLE
hunk ./doc/html/unboxed-containers/doc-index.html 22
->unboxed-containers-0.0.0: Self-optimizing unboxed sets using view patterns and data families</TD
+>unboxed-containers-0.0.1: Self-optimizing unboxed sets using view patterns and data families</TD
hunk ./doc/html/unboxed-containers/index.html 7
->unboxed-containers-0.0.0: Self-optimizing unboxed sets using view patterns and data families</TITLE
+>unboxed-containers-0.0.1: Self-optimizing unboxed sets using view patterns and data families</TITLE
hunk ./doc/html/unboxed-containers/index.html 22
->unboxed-containers-0.0.0: Self-optimizing unboxed sets using view patterns and data families</TD
+>unboxed-containers-0.0.1: Self-optimizing unboxed sets using view patterns and data families</TD
hunk ./doc/html/unboxed-containers/index.html 37
->unboxed-containers-0.0.0: Self-optimizing unboxed sets using view patterns and data families</TD
+>unboxed-containers-0.0.1: Self-optimizing unboxed sets using view patterns and data families</TD
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 9
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, CPP, ViewPatterns, MagicHash, UnboxedTuples, PatternGuards #-}</span>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, CPP, ViewPatterns, MagicHash, UnboxedTuples, PatternGuards, FlexibleContexts, FlexibleInstances #-}</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 48
-<a name="line-40"></a>-----------------------------------------------------------------------------
-<a name="line-41"></a>-}</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-conid'>Unboxed</span> <span class='hs-layout'>(</span> 
-<a name="line-44"></a>            <span class='hs-comment'>-- * Set type</span>
-<a name="line-45"></a>              <span class='hs-conid'>USet</span>          <span class='hs-comment'>-- instance Eq,Ord,Show,Read,Data,Typeable</span>
-<a name="line-46"></a>            <span class='hs-layout'>,</span> <span class='hs-conid'>US</span>
-<a name="line-47"></a>            <span class='hs-layout'>,</span> <span class='hs-conid'>Boxed</span><span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span><span class='hs-layout'>)</span>
-<a name="line-48"></a>
-<a name="line-49"></a>            <span class='hs-comment'>-- * Operators</span>
-<a name="line-50"></a>            <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>\\</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>
-<a name="line-52"></a>            <span class='hs-comment'>-- * Query</span>
-<a name="line-53"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>null</span>
-<a name="line-54"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>size</span>
-<a name="line-55"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>member</span>
-<a name="line-56"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>notMember</span>
-<a name="line-57"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>isSubsetOf</span>
-<a name="line-58"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>isProperSubsetOf</span>
-<a name="line-59"></a>            
-<a name="line-60"></a>            <span class='hs-comment'>-- * Construction</span>
-<a name="line-61"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>empty</span>
-<a name="line-62"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>singleton</span>
-<a name="line-63"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>insert</span>
-<a name="line-64"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>delete</span>
-<a name="line-65"></a>            
-<a name="line-66"></a>            <span class='hs-comment'>-- * Combine</span>
-<a name="line-67"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>union</span><span class='hs-layout'>,</span> <span class='hs-varid'>unions</span>
-<a name="line-68"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>difference</span>
-<a name="line-69"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>intersection</span>
-<a name="line-70"></a>            
-<a name="line-71"></a>            <span class='hs-comment'>-- * Filter</span>
-<a name="line-72"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
-<a name="line-73"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>partition</span>
-<a name="line-74"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>split</span>
-<a name="line-75"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>splitMember</span>
-<a name="line-76"></a>
-<a name="line-77"></a>            <span class='hs-comment'>-- * Map</span>
-<a name="line-78"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>map</span>
-<a name="line-79"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>mapMonotonic</span>
-<a name="line-80"></a>
-<a name="line-81"></a>            <span class='hs-comment'>-- * Fold</span>
-<a name="line-82"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fold</span>
-<a name="line-83"></a>
-<a name="line-84"></a>            <span class='hs-comment'>-- * Min\/Max</span>
-<a name="line-85"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>findMin</span>
-<a name="line-86"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>findMax</span>
-<a name="line-87"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteMin</span>
-<a name="line-88"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteMax</span>
-<a name="line-89"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteFindMin</span>
-<a name="line-90"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteFindMax</span>
-<a name="line-91"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>maxView</span>
-<a name="line-92"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>minView</span>
-<a name="line-93"></a>
-<a name="line-94"></a>            <span class='hs-comment'>-- * Conversion</span>
-<a name="line-95"></a>
-<a name="line-96"></a>            <span class='hs-comment'>-- ** List</span>
-<a name="line-97"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>elems</span>
-<a name="line-98"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>toList</span>
-<a name="line-99"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fromList</span>
-<a name="line-100"></a>            
-<a name="line-101"></a>            <span class='hs-comment'>-- ** Ordered list</span>
-<a name="line-102"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>toAscList</span>
-<a name="line-103"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fromAscList</span>
-<a name="line-104"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fromDistinctAscList</span>
-<a name="line-105"></a>                        
-<a name="line-106"></a>            <span class='hs-comment'>-- * Debugging</span>
-<a name="line-107"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>showTree</span>
-<a name="line-108"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>showTreeWith</span>
-<a name="line-109"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>valid</span>
-<a name="line-110"></a>            <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-111"></a>
-<a name="line-112"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>filter</span><span class='hs-layout'>,</span><span class='hs-varid'>foldr</span><span class='hs-layout'>,</span><span class='hs-varid'>null</span><span class='hs-layout'>,</span><span class='hs-varid'>map</span><span class='hs-layout'>)</span>
-<a name="line-113"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>List</span>
-<a name="line-114"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-115"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span>
-<a name="line-116"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Int</span>
-<a name="line-117"></a>
-<a name="line-118"></a><span class='hs-comment'>{-
-<a name="line-119"></a>-- just for testing
-<a name="line-120"></a>import Test.QuickCheck 
-<a name="line-121"></a>import Data.List (nub,sort)
-<a name="line-122"></a>import qualified Data.List as List
-<a name="line-123"></a>-}</span>
-<a name="line-124"></a>
-<a name="line-125"></a><span class='hs-cpp'>#if __GLASGOW_HASKELL__</span>
-<a name="line-126"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Read</span>
-<a name="line-127"></a><span class='hs-cpp'>#endif</span>
-<a name="line-128"></a>
-<a name="line-129"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-130"></a>  Operators
-<a name="line-131"></a>--------------------------------------------------------------------}</span>
-<a name="line-132"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>9</span> <span class='hs-varop'>\\</span> <span class='hs-comment'>--</span>
-<a name="line-133"></a>
-<a name="line-134"></a><a name="\\"></a><span class='hs-comment'>-- | /O(n+m)/. See 'difference'.</span>
-<a name="line-135"></a><span class='hs-layout'>(</span><span class='hs-varop'>\\</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-136"></a><a name="m1"></a><span class='hs-definition'>m1</span> <span class='hs-varop'>\\</span> <span class='hs-varid'>m2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>difference</span> <span class='hs-varid'>m1</span> <span class='hs-varid'>m2</span>
-<a name="line-137"></a>
-<a name="line-138"></a><a name="Size"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-139"></a>  Sets are size balanced trees
-<a name="line-140"></a>--------------------------------------------------------------------}</span>
-<a name="line-141"></a><a name="Size"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>Size</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-142"></a>
-<a name="line-143"></a><a name="Set"></a><span class='hs-comment'>-- | A set of values @a@.</span>
-<a name="line-144"></a><a name="Set"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Set</span> <span class='hs-varid'>a</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span> 
-<a name="line-145"></a>              <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-varop'>!</span><span class='hs-varid'>a</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
-<a name="line-146"></a>
-<a name="line-147"></a><a name="US"></a><span class='hs-comment'>-- smart unboxed types</span>
+<a name="line-40"></a>--
+<a name="line-41"></a>-----------------------------------------------------------------------------
+<a name="line-42"></a>-}</span>
+<a name="line-43"></a>
+<a name="line-44"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-conid'>Unboxed</span> <span class='hs-layout'>(</span> 
+<a name="line-45"></a>            <span class='hs-comment'>-- * Set type</span>
+<a name="line-46"></a>              <span class='hs-conid'>USet</span>          <span class='hs-comment'>-- instance Eq,Ord,Show,Read,Data,Typeable</span>
+<a name="line-47"></a>            <span class='hs-layout'>,</span> <span class='hs-conid'>US</span>
+<a name="line-48"></a>            <span class='hs-layout'>,</span> <span class='hs-conid'>Boxed</span><span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span><span class='hs-layout'>)</span>
+<a name="line-49"></a>
+<a name="line-50"></a>            <span class='hs-comment'>-- * Operators</span>
+<a name="line-51"></a>            <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>\\</span><span class='hs-layout'>)</span>
+<a name="line-52"></a>
+<a name="line-53"></a>            <span class='hs-comment'>-- * Query</span>
+<a name="line-54"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>null</span>
+<a name="line-55"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>size</span>
+<a name="line-56"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>member</span>
+<a name="line-57"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>notMember</span>
+<a name="line-58"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>isSubsetOf</span>
+<a name="line-59"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>isProperSubsetOf</span>
+<a name="line-60"></a>            
+<a name="line-61"></a>            <span class='hs-comment'>-- * Construction</span>
+<a name="line-62"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>empty</span>
+<a name="line-63"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>singleton</span>
+<a name="line-64"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>insert</span>
+<a name="line-65"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>delete</span>
+<a name="line-66"></a>            
+<a name="line-67"></a>            <span class='hs-comment'>-- * Combine</span>
+<a name="line-68"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>union</span><span class='hs-layout'>,</span> <span class='hs-varid'>unions</span>
+<a name="line-69"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>difference</span>
+<a name="line-70"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>intersection</span>
+<a name="line-71"></a>            
+<a name="line-72"></a>            <span class='hs-comment'>-- * Filter</span>
+<a name="line-73"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
+<a name="line-74"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>partition</span>
+<a name="line-75"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>split</span>
+<a name="line-76"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>splitMember</span>
+<a name="line-77"></a>
+<a name="line-78"></a>            <span class='hs-comment'>-- * Map</span>
+<a name="line-79"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>map</span>
+<a name="line-80"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>mapMonotonic</span>
+<a name="line-81"></a>
+<a name="line-82"></a>            <span class='hs-comment'>-- * Fold</span>
+<a name="line-83"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fold</span>
+<a name="line-84"></a>
+<a name="line-85"></a>            <span class='hs-comment'>-- * Min\/Max</span>
+<a name="line-86"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>findMin</span>
+<a name="line-87"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>findMax</span>
+<a name="line-88"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteMin</span>
+<a name="line-89"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteMax</span>
+<a name="line-90"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteFindMin</span>
+<a name="line-91"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>deleteFindMax</span>
+<a name="line-92"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>maxView</span>
+<a name="line-93"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>minView</span>
+<a name="line-94"></a>
+<a name="line-95"></a>            <span class='hs-comment'>-- * Conversion</span>
+<a name="line-96"></a>
+<a name="line-97"></a>            <span class='hs-comment'>-- ** List</span>
+<a name="line-98"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>elems</span>
+<a name="line-99"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>toList</span>
+<a name="line-100"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fromList</span>
+<a name="line-101"></a>            
+<a name="line-102"></a>            <span class='hs-comment'>-- ** Ordered list</span>
+<a name="line-103"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>toAscList</span>
+<a name="line-104"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fromAscList</span>
+<a name="line-105"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>fromDistinctAscList</span>
+<a name="line-106"></a>                        
+<a name="line-107"></a>            <span class='hs-comment'>-- * Debugging</span>
+<a name="line-108"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>showTree</span>
+<a name="line-109"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>showTreeWith</span>
+<a name="line-110"></a>            <span class='hs-layout'>,</span> <span class='hs-varid'>valid</span>
+<a name="line-111"></a>            <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-112"></a>
+<a name="line-113"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>filter</span><span class='hs-layout'>,</span><span class='hs-varid'>foldr</span><span class='hs-layout'>,</span><span class='hs-varid'>null</span><span class='hs-layout'>,</span><span class='hs-varid'>map</span><span class='hs-layout'>)</span>
+<a name="line-114"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>List</span>
+<a name="line-115"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-116"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span>
+<a name="line-117"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Int</span>
+<a name="line-118"></a>
+<a name="line-119"></a><span class='hs-comment'>{-
+<a name="line-120"></a>-- just for testing
+<a name="line-121"></a>import Test.QuickCheck 
+<a name="line-122"></a>import Data.List (nub,sort)
+<a name="line-123"></a>import qualified Data.List as List
+<a name="line-124"></a>-}</span>
+<a name="line-125"></a>
+<a name="line-126"></a><span class='hs-cpp'>#if __GLASGOW_HASKELL__</span>
+<a name="line-127"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Read</span>
+<a name="line-128"></a><span class='hs-cpp'>#endif</span>
+<a name="line-129"></a>
+<a name="line-130"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-131"></a>  Operators
+<a name="line-132"></a>--------------------------------------------------------------------}</span>
+<a name="line-133"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>9</span> <span class='hs-varop'>\\</span> <span class='hs-comment'>--</span>
+<a name="line-134"></a>
+<a name="line-135"></a><a name="\\"></a><span class='hs-comment'>-- | /O(n+m)/. See 'difference'.</span>
+<a name="line-136"></a><span class='hs-layout'>(</span><span class='hs-varop'>\\</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-137"></a><a name="m1"></a><span class='hs-definition'>m1</span> <span class='hs-varop'>\\</span> <span class='hs-varid'>m2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>difference</span> <span class='hs-varid'>m1</span> <span class='hs-varid'>m2</span>
+<a name="line-138"></a>
+<a name="line-139"></a><a name="Size"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-140"></a>  Sets are size balanced trees
+<a name="line-141"></a>--------------------------------------------------------------------}</span>
+<a name="line-142"></a><a name="Size"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>Size</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-143"></a>
+<a name="line-144"></a><a name="Set"></a><span class='hs-comment'>-- | A set of values @a@.</span>
+<a name="line-145"></a><a name="Set"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Set</span> <span class='hs-varid'>a</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span> 
+<a name="line-146"></a>              <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-varop'>!</span><span class='hs-varid'>a</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-147"></a>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 159
-<a name="line-151"></a>    <span class='hs-comment'>-- | Extract and rebox the specialized node format</span>
-<a name="line-152"></a>    <span class='hs-varid'>view</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Set</span> <span class='hs-varid'>a</span>
-<a name="line-153"></a>
-<a name="line-154"></a>    <span class='hs-comment'>-- | Apply the view to tip and bin continuations</span>
-<a name="line-155"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Size</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-156"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
-<a name="line-157"></a>        <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-158"></a>        <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span>
-<a name="line-159"></a>
-<a name="line-160"></a>    <span class='hs-comment'>-- | View just the value and left and right child of a bin</span>
-<a name="line-161"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-162"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span> 
-<a name="line-163"></a>        <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-164"></a>        <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"viewBin"</span>
-<a name="line-165"></a>
-<a name="line-166"></a>    <span class='hs-comment'>-- | /O(1)/. The number of elements in the set.</span>
-<a name="line-167"></a>    <span class='hs-varid'>size</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Size</span>
-<a name="line-168"></a>    <span class='hs-varid'>size</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-num'>0</span> <span class='hs-varid'>size'</span> <span class='hs-keyword'>where</span> 
-<a name="line-169"></a>        <span class='hs-varid'>size'</span> <span class='hs-varid'>s</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-170"></a>
-<a name="line-171"></a>    <span class='hs-comment'>-- | /O(1)/. Is this the empty set?</span>
-<a name="line-172"></a>    <span class='hs-varid'>null</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-173"></a>
-<a name="line-174"></a>    <span class='hs-comment'>-- | Smart tip constructor</span>
-<a name="line-175"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-176"></a>
-<a name="line-177"></a>    <span class='hs-comment'>-- | Smart bin constructor</span>
-<a name="line-178"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Size</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-179"></a>
-<a name="line-180"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-181"></a>    <span class='hs-varid'>mempty</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
-<a name="line-182"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>union</span>
-<a name="line-183"></a>    <span class='hs-varid'>mconcat</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unions</span>
-<a name="line-184"></a>
-<a name="line-185"></a><span class='hs-comment'>{-
-<a name="line-186"></a>instance US a =&gt; Generator (USet a) where
-<a name="line-187"></a>    type Elem (USet a) = a
-<a name="line-188"></a>    mapReduce _ (null -&gt; True) = mempty
-<a name="line-189"></a>    mapReduce f (view -&gt; Bin _s k l r) = mapReduce f l `mappend` f k `mappend` mapReduce f r
-<a name="line-190"></a>-}</span>
-<a name="line-191"></a>
-<a name="line-192"></a><a name="member"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-193"></a>  Query
-<a name="line-194"></a>--------------------------------------------------------------------}</span>
-<a name="line-195"></a><span class='hs-comment'>-- | /O(log n)/. Is the element in the set?</span>
-<a name="line-196"></a><span class='hs-definition'>member</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-197"></a><span class='hs-definition'>member</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
-<a name="line-198"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-conid'>False</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
-<a name="line-199"></a>            <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>go</span> <span class='hs-varid'>l</span>
-<a name="line-200"></a>            <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>go</span> <span class='hs-varid'>r</span>
-<a name="line-201"></a>            <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>
-<a name="line-202"></a>
-<a name="line-203"></a><a name="notMember"></a><span class='hs-comment'>-- | /O(log n)/. Is the element not in the set?</span>
-<a name="line-204"></a><span class='hs-definition'>notMember</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-205"></a><span class='hs-definition'>notMember</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>$</span> <span class='hs-varid'>member</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-151"></a>
+<a name="line-152"></a>    <span class='hs-comment'>-- | Extract and rebox the specialized node format</span>
+<a name="line-153"></a>    <span class='hs-varid'>view</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Set</span> <span class='hs-varid'>a</span>
+<a name="line-154"></a>
+<a name="line-155"></a>    <span class='hs-comment'>-- | Apply the view to tip and bin continuations</span>
+<a name="line-156"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Size</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-157"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
+<a name="line-158"></a>        <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-159"></a>        <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span>
+<a name="line-160"></a>
+<a name="line-161"></a>    <span class='hs-comment'>-- | View just the value and left and right child of a bin</span>
+<a name="line-162"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-163"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span> 
+<a name="line-164"></a>        <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
+<a name="line-165"></a>        <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.viewBin"</span>
+<a name="line-166"></a>
+<a name="line-167"></a>    <span class='hs-comment'>-- | /O(1)/. The number of elements in the set.</span>
+<a name="line-168"></a>    <span class='hs-varid'>size</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Size</span>
+<a name="line-169"></a>    <span class='hs-varid'>size</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-num'>0</span> <span class='hs-varid'>size'</span> <span class='hs-keyword'>where</span> 
+<a name="line-170"></a>        <span class='hs-varid'>size'</span> <span class='hs-varid'>s</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
+<a name="line-171"></a>
+<a name="line-172"></a>    <span class='hs-comment'>-- | /O(1)/. Is this the empty set?</span>
+<a name="line-173"></a>    <span class='hs-varid'>null</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-174"></a>    <span class='hs-varid'>null</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>x</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span>
+<a name="line-175"></a>
+<a name="line-176"></a>    <span class='hs-comment'>-- | Smart tip constructor</span>
+<a name="line-177"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-178"></a>
+<a name="line-179"></a>    <span class='hs-comment'>-- | Smart bin constructor</span>
+<a name="line-180"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Size</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-181"></a>
+<a name="line-182"></a>    <span class='hs-comment'>-- | Balance the tree</span>
+<a name="line-183"></a>    <span class='hs-varid'>balance</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-184"></a>    <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-185"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>sizeL</span> <span class='hs-varop'>+</span> <span class='hs-varid'>sizeR</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>1</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sizeX</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-186"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>sizeR</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeL</span>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>viewBin</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>of</span>
+<a name="line-187"></a>            <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>v</span><span class='hs-layout'>,</span> <span class='hs-varid'>ly</span><span class='hs-layout'>,</span> <span class='hs-varid'>ry</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> 
+<a name="line-188"></a>                <span class='hs-keyglyph'>|</span> <span class='hs-varid'>size</span> <span class='hs-varid'>ly</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>ratio</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>ry</span>        <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>v</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>ly</span><span class='hs-layout'>)</span> <span class='hs-varid'>ry</span>
+<a name="line-189"></a>                <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>x3</span><span class='hs-layout'>,</span> <span class='hs-varid'>t2</span><span class='hs-layout'>,</span> <span class='hs-varid'>t3</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>viewBin</span> <span class='hs-varid'>ly</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x3</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>v</span> <span class='hs-varid'>t3</span> <span class='hs-varid'>ry</span><span class='hs-layout'>)</span>
+<a name="line-190"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>sizeL</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeR</span>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>viewBin</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>of</span>
+<a name="line-191"></a>            <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>v</span><span class='hs-layout'>,</span> <span class='hs-varid'>ly</span><span class='hs-layout'>,</span> <span class='hs-varid'>ry</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> 
+<a name="line-192"></a>                <span class='hs-keyglyph'>|</span> <span class='hs-varid'>size</span> <span class='hs-varid'>ry</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>ratio</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>ly</span>        <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>v</span> <span class='hs-varid'>ly</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>ry</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-193"></a>                <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>x3</span><span class='hs-layout'>,</span> <span class='hs-varid'>t2</span><span class='hs-layout'>,</span> <span class='hs-varid'>t3</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>viewBin</span> <span class='hs-varid'>ry</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x3</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>v</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t3</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-194"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>             <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sizeX</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-195"></a>        <span class='hs-keyword'>where</span>
+<a name="line-196"></a>            <span class='hs-varid'>sizeL</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>l</span>
+<a name="line-197"></a>            <span class='hs-varid'>sizeR</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span>
+<a name="line-198"></a>            <span class='hs-varid'>sizeX</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>sizeL</span> <span class='hs-varop'>+</span> <span class='hs-varid'>sizeR</span> <span class='hs-varop'>+</span> <span class='hs-num'>1</span>
+<a name="line-199"></a>        
+<a name="line-200"></a>
+<a name="line-201"></a>
+<a name="line-202"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-203"></a>    <span class='hs-varid'>mempty</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
+<a name="line-204"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>union</span>
+<a name="line-205"></a>    <span class='hs-varid'>mconcat</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unions</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 215
-<a name="line-207"></a><a name="empty"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-208"></a>  Construction
-<a name="line-209"></a>--------------------------------------------------------------------}</span>
-<a name="line-210"></a><span class='hs-comment'>-- | /O(1)/. The empty set.</span>
-<a name="line-211"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-212"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-207"></a><span class='hs-comment'>{-
+<a name="line-208"></a>instance US a =&gt; Generator (USet a) where
+<a name="line-209"></a>    type Elem (USet a) = a
+<a name="line-210"></a>    mapReduce _ (null -&gt; True) = mempty
+<a name="line-211"></a>    mapReduce f (view -&gt; Bin _s k l r) = mapReduce f l `mappend` f k `mappend` mapReduce f r
+<a name="line-212"></a>-}</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 222
-<a name="line-214"></a><a name="singleton"></a><span class='hs-comment'>-- | /O(1)/. Create a singleton set.</span>
-<a name="line-215"></a><span class='hs-definition'>singleton</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-216"></a><span class='hs-definition'>singleton</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-num'>1</span> <span class='hs-varid'>x</span> <span class='hs-varid'>tip</span> <span class='hs-varid'>tip</span>
-<a name="line-217"></a>
-<a name="line-218"></a><a name="insert"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-219"></a>  Insertion, Deletion
-<a name="line-220"></a>--------------------------------------------------------------------}</span>
-<a name="line-221"></a><span class='hs-comment'>-- | /O(log n)/. Insert an element in a set.</span>
-<a name="line-222"></a><span class='hs-comment'>-- If the set already contains an element equal to the given value,</span>
-<a name="line-223"></a><span class='hs-comment'>-- it is replaced with the new value.</span>
-<a name="line-224"></a><span class='hs-definition'>insert</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-225"></a><span class='hs-definition'>insert</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
-<a name="line-226"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>sz</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
-<a name="line-227"></a>        <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-228"></a>        <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-229"></a>        <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sz</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-230"></a><span class='hs-comment'>{-# SPECIALIZE INLINE insert :: Int -&gt; USet Int -&gt; USet Int #-}</span>
-<a name="line-231"></a>
-<a name="line-232"></a><a name="delete"></a><span class='hs-comment'>-- | /O(log n)/. Delete an element from a set.</span>
-<a name="line-233"></a><span class='hs-definition'>delete</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-234"></a><span class='hs-definition'>delete</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
-<a name="line-235"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-varid'>tip</span> <span class='hs-varop'>$</span> <span class='hs-keyglyph'>\</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
-<a name="line-236"></a>        <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-237"></a>        <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-238"></a>        <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>glue</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-239"></a>
-<a name="line-240"></a><a name="isProperSubsetOf"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-241"></a>  Subset
-<a name="line-242"></a>--------------------------------------------------------------------}</span>
-<a name="line-243"></a><span class='hs-comment'>-- | /O(n+m)/. Is this a proper subset? (ie. a subset but not equal).</span>
-<a name="line-244"></a><span class='hs-definition'>isProperSubsetOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-245"></a><span class='hs-definition'>isProperSubsetOf</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>s2</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>s1</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>size</span> <span class='hs-varid'>s2</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSubsetOf</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>s2</span><span class='hs-layout'>)</span>
-<a name="line-246"></a>
-<a name="line-247"></a><a name="isSubsetOf"></a><span class='hs-comment'>-- | /O(n+m)/. Is this a subset?</span>
-<a name="line-248"></a><span class='hs-comment'>-- @(s1 `isSubsetOf` s2)@ tells whether @s1@ is a subset of @s2@.</span>
-<a name="line-249"></a><span class='hs-definition'>isSubsetOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-250"></a><span class='hs-definition'>isSubsetOf</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>t1</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSubsetOfX</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span>
-<a name="line-251"></a>
-<a name="line-252"></a><a name="isSubsetOfX"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-253"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-254"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyword'>_</span>        <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-255"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>t</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>found</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>isSubsetOfX</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lt</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>isSubsetOfX</span> <span class='hs-varid'>r</span> <span class='hs-varid'>gt</span>
-<a name="line-256"></a>  <span class='hs-keyword'>where</span>
-<a name="line-257"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitMember</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
-<a name="line-258"></a>
+<a name="line-214"></a><a name="member"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-215"></a>  Query
+<a name="line-216"></a>--------------------------------------------------------------------}</span>
+<a name="line-217"></a><span class='hs-comment'>-- | /O(log n)/. Is the element in the set?</span>
+<a name="line-218"></a><span class='hs-definition'>member</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-219"></a><span class='hs-definition'>member</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
+<a name="line-220"></a>    <span class='hs-varid'>cmpx</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span>
+<a name="line-221"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-conid'>False</span> <span class='hs-varop'>$</span> <span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
+<a name="line-222"></a>        <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>go</span> <span class='hs-varid'>l</span>
+<a name="line-223"></a>        <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>go</span> <span class='hs-varid'>r</span>
+<a name="line-224"></a>        <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span>
+<a name="line-225"></a>
+<a name="line-226"></a><a name="notMember"></a><span class='hs-comment'>-- | /O(log n)/. Is the element not in the set?</span>
+<a name="line-227"></a><span class='hs-definition'>notMember</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-228"></a><span class='hs-definition'>notMember</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>$</span> <span class='hs-varid'>member</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-229"></a>
+<a name="line-230"></a><a name="empty"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-231"></a>  Construction
+<a name="line-232"></a>--------------------------------------------------------------------}</span>
+<a name="line-233"></a><span class='hs-comment'>-- | /O(1)/. The empty set.</span>
+<a name="line-234"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-235"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-236"></a>
+<a name="line-237"></a><a name="singleton"></a><span class='hs-comment'>-- | /O(1)/. Create a singleton set.</span>
+<a name="line-238"></a><span class='hs-definition'>singleton</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-239"></a><span class='hs-definition'>singleton</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-num'>1</span> <span class='hs-varid'>x</span> <span class='hs-varid'>tip</span> <span class='hs-varid'>tip</span>
+<a name="line-240"></a>
+<a name="line-241"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-242"></a>  Deletion
+<a name="line-243"></a>--------------------------------------------------------------------}</span>
+<a name="line-244"></a>
+<a name="line-245"></a><a name="delete"></a><span class='hs-comment'>-- | /O(log n)/. Delete an element from a set.</span>
+<a name="line-246"></a><span class='hs-definition'>delete</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-247"></a><span class='hs-definition'>delete</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
+<a name="line-248"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-varid'>tip</span> <span class='hs-varop'>$</span> <span class='hs-keyglyph'>\</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
+<a name="line-249"></a>        <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-250"></a>        <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-251"></a>        <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>glue</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-252"></a>
+<a name="line-253"></a><a name="isProperSubsetOf"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-254"></a>  Subset
+<a name="line-255"></a>--------------------------------------------------------------------}</span>
+<a name="line-256"></a><span class='hs-comment'>-- | /O(n+m)/. Is this a proper subset? (ie. a subset but not equal).</span>
+<a name="line-257"></a><span class='hs-definition'>isProperSubsetOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-258"></a><span class='hs-definition'>isProperSubsetOf</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>s2</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>s1</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>size</span> <span class='hs-varid'>s2</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSubsetOf</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>s2</span><span class='hs-layout'>)</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 268
-<a name="line-260"></a><a name="findMin"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-261"></a>  Minimal, Maximal
-<a name="line-262"></a>--------------------------------------------------------------------}</span>
-<a name="line-263"></a><span class='hs-comment'>-- | /O(log n)/. The minimal element of a set.</span>
-<a name="line-264"></a><span class='hs-definition'>findMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-265"></a><span class='hs-definition'>findMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
-<a name="line-266"></a><span class='hs-definition'>findMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>findMin</span> <span class='hs-varid'>l</span>
-<a name="line-267"></a><span class='hs-definition'>findMin</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Set.findMin: empty set has no minimal element"</span>
-<a name="line-268"></a>
-<a name="line-269"></a><a name="findMax"></a><span class='hs-comment'>-- | /O(log n)/. The maximal element of a set.</span>
-<a name="line-270"></a><span class='hs-definition'>findMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-271"></a><span class='hs-definition'>findMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
-<a name="line-272"></a><span class='hs-definition'>findMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>findMax</span> <span class='hs-varid'>r</span>
-<a name="line-273"></a><span class='hs-definition'>findMax</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Set.findMax: empty set has no maximal element"</span>
-<a name="line-274"></a>
-<a name="line-275"></a><a name="deleteMin"></a><span class='hs-comment'>-- | /O(log n)/. Delete the minimal element.</span>
-<a name="line-276"></a><span class='hs-definition'>deleteMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-277"></a><span class='hs-definition'>deleteMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span>
-<a name="line-278"></a><span class='hs-definition'>deleteMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteMin</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-279"></a><span class='hs-definition'>deleteMin</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-280"></a>
-<a name="line-281"></a><a name="deleteMax"></a><span class='hs-comment'>-- | /O(log n)/. Delete the maximal element.</span>
-<a name="line-282"></a><span class='hs-definition'>deleteMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-283"></a><span class='hs-definition'>deleteMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>l</span>
-<a name="line-284"></a><span class='hs-definition'>deleteMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteMax</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-285"></a><span class='hs-definition'>deleteMax</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-286"></a>
-<a name="line-287"></a><a name="unions"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-288"></a>  Union. 
-<a name="line-289"></a>--------------------------------------------------------------------}</span>
-<a name="line-290"></a><span class='hs-comment'>-- | The union of a list of sets: (@'unions' == 'foldl' 'union' 'empty'@).</span>
-<a name="line-291"></a><span class='hs-definition'>unions</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-292"></a><span class='hs-definition'>unions</span> <span class='hs-varid'>ts</span>
-<a name="line-293"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldlStrict</span> <span class='hs-varid'>union</span> <span class='hs-varid'>empty</span> <span class='hs-varid'>ts</span>
-<a name="line-294"></a>
-<a name="line-295"></a>
-<a name="line-296"></a><a name="union"></a><span class='hs-comment'>-- | /O(n+m)/. The union of two sets, preferring the first set when</span>
-<a name="line-297"></a><span class='hs-comment'>-- equal elements are encountered.</span>
-<a name="line-298"></a><span class='hs-comment'>-- The implementation uses the efficient /hedge-union/ algorithm.</span>
-<a name="line-299"></a><span class='hs-comment'>-- Hedge-union is more efficient on (bigset `union` smallset).</span>
-<a name="line-300"></a><span class='hs-definition'>union</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-301"></a><span class='hs-definition'>union</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>t2</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t2</span>
-<a name="line-302"></a><span class='hs-definition'>union</span> <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t1</span>
-<a name="line-303"></a><span class='hs-definition'>union</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>hedgeUnion</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>LT</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>GT</span><span class='hs-layout'>)</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span>
-<a name="line-304"></a>
-<a name="line-305"></a><a name="hedgeUnion"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-306"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-keyword'>_</span>     <span class='hs-keyword'>_</span>     <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t1</span>
-<a name="line-307"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-308"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>t2</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeUnion</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeUnion</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-309"></a>  <span class='hs-keyword'>where</span>
-<a name="line-310"></a>    <span class='hs-varid'>cmpx</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span>
-<a name="line-311"></a>
-<a name="line-312"></a><a name="difference"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-313"></a>  Difference
-<a name="line-314"></a>--------------------------------------------------------------------}</span>
-<a name="line-315"></a><span class='hs-comment'>-- | /O(n+m)/. Difference of two sets. </span>
-<a name="line-316"></a><span class='hs-comment'>-- The implementation uses an efficient /hedge/ algorithm comparable with /hedge-union/.</span>
-<a name="line-317"></a><span class='hs-definition'>difference</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-318"></a><span class='hs-definition'>difference</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-319"></a><span class='hs-definition'>difference</span> <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t1</span>
-<a name="line-320"></a><span class='hs-definition'>difference</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>hedgeDiff</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>LT</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>GT</span><span class='hs-layout'>)</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span>
-<a name="line-321"></a>
-<a name="line-322"></a><a name="hedgeDiff"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-323"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-324"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-325"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeDiff</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeDiff</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-326"></a>  <span class='hs-keyword'>where</span>
-<a name="line-327"></a>    <span class='hs-varid'>cmpx</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span>
-<a name="line-328"></a>
-<a name="line-329"></a><a name="intersection"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-330"></a>  Intersection
-<a name="line-331"></a>--------------------------------------------------------------------}</span>
-<a name="line-332"></a><span class='hs-comment'>-- | /O(n+m)/. The intersection of two sets.</span>
-<a name="line-333"></a><span class='hs-comment'>-- Elements of the result come from the first set, so for example</span>
-<a name="line-334"></a><span class='hs-comment'>--</span>
-<a name="line-335"></a><span class='hs-comment'>-- &gt; import qualified Data.Set as S</span>
-<a name="line-336"></a><span class='hs-comment'>-- &gt; data AB = A | B deriving Show</span>
-<a name="line-337"></a><span class='hs-comment'>-- &gt; instance Ord AB where compare _ _ = EQ</span>
-<a name="line-338"></a><span class='hs-comment'>-- &gt; instance Eq AB where _ == _ = True</span>
-<a name="line-339"></a><span class='hs-comment'>-- &gt; main = print (S.singleton A `S.intersection` S.singleton B,</span>
-<a name="line-340"></a><span class='hs-comment'>-- &gt;               S.singleton B `S.intersection` S.singleton A)</span>
-<a name="line-341"></a><span class='hs-comment'>--</span>
-<a name="line-342"></a><span class='hs-comment'>-- prints @(fromList [A],fromList [B])@.</span>
-<a name="line-343"></a><span class='hs-definition'>intersection</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-344"></a><span class='hs-definition'>intersection</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-345"></a><span class='hs-definition'>intersection</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-346"></a><span class='hs-definition'>intersection</span> <span class='hs-varid'>t1</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>r1</span><span class='hs-layout'>)</span> <span class='hs-varid'>t2</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s2</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>l2</span> <span class='hs-varid'>r2</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span>
-<a name="line-347"></a>   <span class='hs-keyword'>if</span> <span class='hs-varid'>s1</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>s2</span> <span class='hs-keyword'>then</span>
-<a name="line-348"></a>      <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t1</span>
-<a name="line-349"></a>          <span class='hs-varid'>tl</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>lt</span> <span class='hs-varid'>l2</span>
-<a name="line-350"></a>          <span class='hs-varid'>tr</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>gt</span> <span class='hs-varid'>r2</span>
-<a name="line-351"></a>      <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>found</span> <span class='hs-keyword'>of</span>
-<a name="line-352"></a>      <span class='hs-conid'>Just</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
-<a name="line-353"></a>      <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
-<a name="line-354"></a>   <span class='hs-keyword'>else</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitMember</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t2</span>
-<a name="line-355"></a>            <span class='hs-varid'>tl</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>lt</span>
-<a name="line-356"></a>            <span class='hs-varid'>tr</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>r1</span> <span class='hs-varid'>gt</span>
-<a name="line-357"></a>        <span class='hs-keyword'>in</span> <span class='hs-keyword'>if</span> <span class='hs-varid'>found</span> <span class='hs-keyword'>then</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
-<a name="line-358"></a>           <span class='hs-keyword'>else</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
-<a name="line-359"></a>
-<a name="line-360"></a><a name="filter"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-361"></a>  Filter and partition
-<a name="line-362"></a>--------------------------------------------------------------------}</span>
-<a name="line-363"></a><span class='hs-comment'>-- | /O(n)/. Filter all elements that satisfy the predicate.</span>
-<a name="line-364"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-365"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
-<a name="line-366"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-varid'>tip</span> 
-<a name="line-367"></a>        <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> 
-<a name="line-368"></a>            <span class='hs-keyword'>if</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> 
-<a name="line-369"></a>            <span class='hs-keyword'>then</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> 
-<a name="line-370"></a>            <span class='hs-keyword'>else</span> <span class='hs-varid'>merge</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-371"></a>        <span class='hs-layout'>)</span> 
+<a name="line-260"></a><a name="isSubsetOf"></a><span class='hs-comment'>-- | /O(n+m)/. Is this a subset?</span>
+<a name="line-261"></a><span class='hs-comment'>-- @(s1 `isSubsetOf` s2)@ tells whether @s1@ is a subset of @s2@.</span>
+<a name="line-262"></a><span class='hs-definition'>isSubsetOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-263"></a><span class='hs-definition'>isSubsetOf</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>t1</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSubsetOfX</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span>
+<a name="line-264"></a>
+<a name="line-265"></a><a name="isSubsetOfX"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-266"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
+<a name="line-267"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyword'>_</span>        <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
+<a name="line-268"></a><span class='hs-definition'>isSubsetOfX</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>t</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>found</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>isSubsetOfX</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lt</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>isSubsetOfX</span> <span class='hs-varid'>r</span> <span class='hs-varid'>gt</span>
+<a name="line-269"></a>  <span class='hs-keyword'>where</span>
+<a name="line-270"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitMember</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-271"></a>
+<a name="line-272"></a>
+<a name="line-273"></a><a name="findMin"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-274"></a>  Minimal, Maximal
+<a name="line-275"></a>--------------------------------------------------------------------}</span>
+<a name="line-276"></a><span class='hs-comment'>-- | /O(log n)/. The minimal element of a set.</span>
+<a name="line-277"></a><span class='hs-definition'>findMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
+<a name="line-278"></a><span class='hs-definition'>findMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
+<a name="line-279"></a><span class='hs-definition'>findMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>findMin</span> <span class='hs-varid'>l</span>
+<a name="line-280"></a><span class='hs-definition'>findMin</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.findMin: empty set has no minimal element"</span>
+<a name="line-281"></a>
+<a name="line-282"></a><a name="findMax"></a><span class='hs-comment'>-- | /O(log n)/. The maximal element of a set.</span>
+<a name="line-283"></a><span class='hs-definition'>findMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
+<a name="line-284"></a><span class='hs-definition'>findMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
+<a name="line-285"></a><span class='hs-definition'>findMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>findMax</span> <span class='hs-varid'>r</span>
+<a name="line-286"></a><span class='hs-definition'>findMax</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.findMax: empty set has no maximal element"</span>
+<a name="line-287"></a>
+<a name="line-288"></a><a name="deleteMin"></a><span class='hs-comment'>-- | /O(log n)/. Delete the minimal element.</span>
+<a name="line-289"></a><span class='hs-definition'>deleteMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-290"></a><span class='hs-definition'>deleteMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span>
+<a name="line-291"></a><span class='hs-definition'>deleteMin</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteMin</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-292"></a><span class='hs-definition'>deleteMin</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-293"></a>
+<a name="line-294"></a><a name="deleteMax"></a><span class='hs-comment'>-- | /O(log n)/. Delete the maximal element.</span>
+<a name="line-295"></a><span class='hs-definition'>deleteMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-296"></a><span class='hs-definition'>deleteMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>l</span>
+<a name="line-297"></a><span class='hs-definition'>deleteMax</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteMax</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-298"></a><span class='hs-definition'>deleteMax</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-299"></a>
+<a name="line-300"></a><a name="unions"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-301"></a>  Union. 
+<a name="line-302"></a>--------------------------------------------------------------------}</span>
+<a name="line-303"></a><span class='hs-comment'>-- | The union of a list of sets: (@'unions' == 'foldl' 'union' 'empty'@).</span>
+<a name="line-304"></a><span class='hs-definition'>unions</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-305"></a><span class='hs-definition'>unions</span> <span class='hs-varid'>ts</span>
+<a name="line-306"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldlStrict</span> <span class='hs-varid'>union</span> <span class='hs-varid'>empty</span> <span class='hs-varid'>ts</span>
+<a name="line-307"></a>
+<a name="line-308"></a>
+<a name="line-309"></a><a name="union"></a><span class='hs-comment'>-- | /O(n+m)/. The union of two sets, preferring the first set when</span>
+<a name="line-310"></a><span class='hs-comment'>-- equal elements are encountered.</span>
+<a name="line-311"></a><span class='hs-comment'>-- The implementation uses the efficient /hedge-union/ algorithm.</span>
+<a name="line-312"></a><span class='hs-comment'>-- Hedge-union is more efficient on (bigset `union` smallset).</span>
+<a name="line-313"></a><span class='hs-definition'>union</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-314"></a><span class='hs-definition'>union</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>t2</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t2</span>
+<a name="line-315"></a><span class='hs-definition'>union</span> <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t1</span>
+<a name="line-316"></a><span class='hs-definition'>union</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>hedgeUnion</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>LT</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>GT</span><span class='hs-layout'>)</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span>
+<a name="line-317"></a>
+<a name="line-318"></a><a name="hedgeUnion"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-319"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-keyword'>_</span>     <span class='hs-keyword'>_</span>     <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t1</span>
+<a name="line-320"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-321"></a><span class='hs-definition'>hedgeUnion</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>t2</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeUnion</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeUnion</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-322"></a>  <span class='hs-keyword'>where</span>
+<a name="line-323"></a>    <span class='hs-varid'>cmpx</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span>
+<a name="line-324"></a>
+<a name="line-325"></a><a name="difference"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-326"></a>  Difference
+<a name="line-327"></a>--------------------------------------------------------------------}</span>
+<a name="line-328"></a><span class='hs-comment'>-- | /O(n+m)/. Difference of two sets. </span>
+<a name="line-329"></a><span class='hs-comment'>-- The implementation uses an efficient /hedge/ algorithm comparable with /hedge-union/.</span>
+<a name="line-330"></a><span class='hs-definition'>difference</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-331"></a><span class='hs-definition'>difference</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-332"></a><span class='hs-definition'>difference</span> <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t1</span>
+<a name="line-333"></a><span class='hs-definition'>difference</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>hedgeDiff</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>LT</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>GT</span><span class='hs-layout'>)</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span>
+<a name="line-334"></a>
+<a name="line-335"></a><a name="hedgeDiff"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-336"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-337"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-338"></a><span class='hs-definition'>hedgeDiff</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeDiff</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hedgeDiff</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-layout'>(</span><span class='hs-varid'>trim</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-339"></a>  <span class='hs-keyword'>where</span>
+<a name="line-340"></a>    <span class='hs-varid'>cmpx</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span>
+<a name="line-341"></a>
+<a name="line-342"></a><a name="intersection"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-343"></a>  Intersection
+<a name="line-344"></a>--------------------------------------------------------------------}</span>
+<a name="line-345"></a><span class='hs-comment'>-- | /O(n+m)/. The intersection of two sets.</span>
+<a name="line-346"></a><span class='hs-comment'>-- Elements of the result come from the first set, so for example</span>
+<a name="line-347"></a><span class='hs-comment'>--</span>
+<a name="line-348"></a><span class='hs-comment'>-- &gt; import qualified Data.Set as S</span>
+<a name="line-349"></a><span class='hs-comment'>-- &gt; data AB = A | B deriving Show</span>
+<a name="line-350"></a><span class='hs-comment'>-- &gt; instance Ord AB where compare _ _ = EQ</span>
+<a name="line-351"></a><span class='hs-comment'>-- &gt; instance Eq AB where _ == _ = True</span>
+<a name="line-352"></a><span class='hs-comment'>-- &gt; main = print (S.singleton A `S.intersection` S.singleton B,</span>
+<a name="line-353"></a><span class='hs-comment'>-- &gt;               S.singleton B `S.intersection` S.singleton A)</span>
+<a name="line-354"></a><span class='hs-comment'>--</span>
+<a name="line-355"></a><span class='hs-comment'>-- prints @(fromList [A],fromList [B])@.</span>
+<a name="line-356"></a><span class='hs-definition'>intersection</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-357"></a><span class='hs-definition'>intersection</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-358"></a><span class='hs-definition'>intersection</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-359"></a><span class='hs-definition'>intersection</span> <span class='hs-varid'>t1</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>r1</span><span class='hs-layout'>)</span> <span class='hs-varid'>t2</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s2</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>l2</span> <span class='hs-varid'>r2</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span>
+<a name="line-360"></a>   <span class='hs-keyword'>if</span> <span class='hs-varid'>s1</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>s2</span> <span class='hs-keyword'>then</span>
+<a name="line-361"></a>      <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t1</span>
+<a name="line-362"></a>          <span class='hs-varid'>tl</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>lt</span> <span class='hs-varid'>l2</span>
+<a name="line-363"></a>          <span class='hs-varid'>tr</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>gt</span> <span class='hs-varid'>r2</span>
+<a name="line-364"></a>      <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>found</span> <span class='hs-keyword'>of</span>
+<a name="line-365"></a>      <span class='hs-conid'>Just</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
+<a name="line-366"></a>      <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
+<a name="line-367"></a>   <span class='hs-keyword'>else</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitMember</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t2</span>
+<a name="line-368"></a>            <span class='hs-varid'>tl</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>lt</span>
+<a name="line-369"></a>            <span class='hs-varid'>tr</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>intersection</span> <span class='hs-varid'>r1</span> <span class='hs-varid'>gt</span>
+<a name="line-370"></a>        <span class='hs-keyword'>in</span> <span class='hs-keyword'>if</span> <span class='hs-varid'>found</span> <span class='hs-keyword'>then</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
+<a name="line-371"></a>           <span class='hs-keyword'>else</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>tl</span> <span class='hs-varid'>tr</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 381
-<a name="line-373"></a><a name="partition"></a><span class='hs-comment'>-- | /O(n)/. Partition the set into two sets, one with all elements that satisfy</span>
-<a name="line-374"></a><span class='hs-comment'>-- the predicate and one with all elements that don't satisfy the predicate.</span>
-<a name="line-375"></a><span class='hs-comment'>-- See also 'split'.</span>
-<a name="line-376"></a><span class='hs-definition'>partition</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-377"></a><span class='hs-definition'>partition</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
-<a name="line-378"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-layout'>(</span><span class='hs-varid'>tip</span><span class='hs-layout'>,</span><span class='hs-varid'>tip</span><span class='hs-layout'>)</span> 
-<a name="line-379"></a>        <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> 
-<a name="line-380"></a>            <span class='hs-keyword'>let</span> 
-<a name="line-381"></a>                <span class='hs-layout'>(</span><span class='hs-varid'>l1</span><span class='hs-layout'>,</span><span class='hs-varid'>l2</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-varid'>l</span>
-<a name="line-382"></a>                <span class='hs-layout'>(</span><span class='hs-varid'>r1</span><span class='hs-layout'>,</span><span class='hs-varid'>r2</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-varid'>r</span>
-<a name="line-383"></a>            <span class='hs-keyword'>in</span> <span class='hs-keyword'>if</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> 
-<a name="line-384"></a>            <span class='hs-keyword'>then</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>r1</span><span class='hs-layout'>,</span><span class='hs-varid'>merge</span> <span class='hs-varid'>l2</span> <span class='hs-varid'>r2</span><span class='hs-layout'>)</span>
-<a name="line-385"></a>            <span class='hs-keyword'>else</span> <span class='hs-layout'>(</span><span class='hs-varid'>merge</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>r1</span><span class='hs-layout'>,</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l2</span> <span class='hs-varid'>r2</span><span class='hs-layout'>)</span>
-<a name="line-386"></a>        <span class='hs-layout'>)</span>
-<a name="line-387"></a>
-<a name="line-388"></a><span class='hs-comment'>{----------------------------------------------------------------------
-<a name="line-389"></a>  Map
-<a name="line-390"></a>----------------------------------------------------------------------}</span>
-<a name="line-391"></a>
-<a name="line-392"></a><span class='hs-comment'>-- | /O(n*log n)/. </span>
-<a name="line-393"></a><span class='hs-comment'>-- @'map' f s@ is the set obtained by applying @f@ to each element of @s@.</span>
-<a name="line-394"></a><span class='hs-comment'>-- </span>
-<a name="line-395"></a><span class='hs-comment'>-- It's worth noting that the size of the result may be smaller if,</span>
-<a name="line-396"></a><span class='hs-comment'>-- for some @(x,y)@, @x \/= y &amp;&amp; f x == f y@</span>
-<a name="line-397"></a>
-<a name="line-398"></a><a name="map"></a><span class='hs-definition'>map</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>US</span> <span class='hs-varid'>b</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>b</span>
-<a name="line-399"></a><span class='hs-definition'>map</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromList</span> <span class='hs-varop'>.</span> <span class='hs-conid'>List</span><span class='hs-varop'>.</span><span class='hs-varid'>map</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toList</span>
+<a name="line-373"></a><a name="filter"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-374"></a>  Filter and partition
+<a name="line-375"></a>--------------------------------------------------------------------}</span>
+<a name="line-376"></a><span class='hs-comment'>-- | /O(n)/. Filter all elements that satisfy the predicate.</span>
+<a name="line-377"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-378"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
+<a name="line-379"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-varid'>tip</span> 
+<a name="line-380"></a>        <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> 
+<a name="line-381"></a>            <span class='hs-keyword'>if</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> 
+<a name="line-382"></a>            <span class='hs-keyword'>then</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> 
+<a name="line-383"></a>            <span class='hs-keyword'>else</span> <span class='hs-varid'>merge</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-384"></a>        <span class='hs-layout'>)</span> 
+<a name="line-385"></a>
+<a name="line-386"></a><a name="partition"></a><span class='hs-comment'>-- | /O(n)/. Partition the set into two sets, one with all elements that satisfy</span>
+<a name="line-387"></a><span class='hs-comment'>-- the predicate and one with all elements that don't satisfy the predicate.</span>
+<a name="line-388"></a><span class='hs-comment'>-- See also 'split'.</span>
+<a name="line-389"></a><span class='hs-definition'>partition</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-390"></a><span class='hs-definition'>partition</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
+<a name="line-391"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-layout'>(</span><span class='hs-varid'>tip</span><span class='hs-layout'>,</span><span class='hs-varid'>tip</span><span class='hs-layout'>)</span> 
+<a name="line-392"></a>        <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> 
+<a name="line-393"></a>            <span class='hs-keyword'>let</span> 
+<a name="line-394"></a>                <span class='hs-layout'>(</span><span class='hs-varid'>l1</span><span class='hs-layout'>,</span><span class='hs-varid'>l2</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-varid'>l</span>
+<a name="line-395"></a>                <span class='hs-layout'>(</span><span class='hs-varid'>r1</span><span class='hs-layout'>,</span><span class='hs-varid'>r2</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-varid'>r</span>
+<a name="line-396"></a>            <span class='hs-keyword'>in</span> <span class='hs-keyword'>if</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> 
+<a name="line-397"></a>            <span class='hs-keyword'>then</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>r1</span><span class='hs-layout'>,</span><span class='hs-varid'>merge</span> <span class='hs-varid'>l2</span> <span class='hs-varid'>r2</span><span class='hs-layout'>)</span>
+<a name="line-398"></a>            <span class='hs-keyword'>else</span> <span class='hs-layout'>(</span><span class='hs-varid'>merge</span> <span class='hs-varid'>l1</span> <span class='hs-varid'>r1</span><span class='hs-layout'>,</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l2</span> <span class='hs-varid'>r2</span><span class='hs-layout'>)</span>
+<a name="line-399"></a>        <span class='hs-layout'>)</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 409
-<a name="line-401"></a><span class='hs-comment'>-- | /O(n)/. The </span>
-<a name="line-402"></a><span class='hs-comment'>--</span>
-<a name="line-403"></a><span class='hs-comment'>-- @'mapMonotonic' f s == 'map' f s@, but works only when @f@ is monotonic.</span>
-<a name="line-404"></a><span class='hs-comment'>-- /The precondition is not checked./</span>
-<a name="line-405"></a><span class='hs-comment'>-- Semi-formally, we have:</span>
-<a name="line-406"></a><span class='hs-comment'>-- </span>
-<a name="line-407"></a><span class='hs-comment'>-- &gt; and [x &lt; y ==&gt; f x &lt; f y | x &lt;- ls, y &lt;- ls] </span>
-<a name="line-408"></a><span class='hs-comment'>-- &gt;                     ==&gt; mapMonotonic f s == map f s</span>
-<a name="line-409"></a><span class='hs-comment'>-- &gt;     where ls = toList s</span>
+<a name="line-401"></a><span class='hs-comment'>{----------------------------------------------------------------------
+<a name="line-402"></a>  Map
+<a name="line-403"></a>----------------------------------------------------------------------}</span>
+<a name="line-404"></a>
+<a name="line-405"></a><span class='hs-comment'>-- | /O(n*log n)/. </span>
+<a name="line-406"></a><span class='hs-comment'>-- @'map' f s@ is the set obtained by applying @f@ to each element of @s@.</span>
+<a name="line-407"></a><span class='hs-comment'>-- </span>
+<a name="line-408"></a><span class='hs-comment'>-- It's worth noting that the size of the result may be smaller if,</span>
+<a name="line-409"></a><span class='hs-comment'>-- for some @(x,y)@, @x \/= y &amp;&amp; f x == f y@</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 419
-<a name="line-411"></a><a name="mapMonotonic"></a><span class='hs-definition'>mapMonotonic</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>US</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>b</span>
-<a name="line-412"></a><span class='hs-definition'>mapMonotonic</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sz</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sz</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapMonotonic</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapMonotonic</span> <span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-413"></a><span class='hs-definition'>mapMonotonic</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-414"></a>
-<a name="line-415"></a>
-<a name="line-416"></a><a name="fold"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-417"></a>  Fold
-<a name="line-418"></a>--------------------------------------------------------------------}</span>
-<a name="line-419"></a><span class='hs-comment'>-- | /O(n)/. Fold over the elements of a set in an unspecified order.</span>
-<a name="line-420"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-421"></a><span class='hs-definition'>fold</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>s</span>
-<a name="line-422"></a>
-<a name="line-423"></a><a name="foldr"></a><span class='hs-comment'>-- | /O(n)/. Post-order fold.</span>
-<a name="line-424"></a><span class='hs-definition'>foldr</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-425"></a><span class='hs-comment'>--foldr f z (view -&gt; Bin _ x l r) = foldr f (f x (foldr f z r)) l</span>
-<a name="line-426"></a><span class='hs-comment'>--foldr _ z _ = z</span>
+<a name="line-411"></a><a name="map"></a><span class='hs-definition'>map</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>US</span> <span class='hs-varid'>b</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>b</span>
+<a name="line-412"></a><span class='hs-definition'>map</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromList</span> <span class='hs-varop'>.</span> <span class='hs-conid'>List</span><span class='hs-varop'>.</span><span class='hs-varid'>map</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toList</span>
+<a name="line-413"></a>
+<a name="line-414"></a><span class='hs-comment'>-- | /O(n)/. The </span>
+<a name="line-415"></a><span class='hs-comment'>--</span>
+<a name="line-416"></a><span class='hs-comment'>-- @'mapMonotonic' f s == 'map' f s@, but works only when @f@ is monotonic.</span>
+<a name="line-417"></a><span class='hs-comment'>-- /The precondition is not checked./</span>
+<a name="line-418"></a><span class='hs-comment'>-- Semi-formally, we have:</span>
+<a name="line-419"></a><span class='hs-comment'>-- </span>
+<a name="line-420"></a><span class='hs-comment'>-- &gt; and [x &lt; y ==&gt; f x &lt; f y | x &lt;- ls, y &lt;- ls] </span>
+<a name="line-421"></a><span class='hs-comment'>-- &gt;                     ==&gt; mapMonotonic f s == map f s</span>
+<a name="line-422"></a><span class='hs-comment'>-- &gt;     where ls = toList s</span>
+<a name="line-423"></a>
+<a name="line-424"></a><a name="mapMonotonic"></a><span class='hs-definition'>mapMonotonic</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>US</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>b</span>
+<a name="line-425"></a><span class='hs-definition'>mapMonotonic</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sz</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sz</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapMonotonic</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapMonotonic</span> <span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-426"></a><span class='hs-definition'>mapMonotonic</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 436
-<a name="line-428"></a><span class='hs-definition'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>null</span> <span class='hs-varid'>x</span>                     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>z</span>
-<a name="line-429"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>viewBin</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> 
-<a name="line-430"></a><span class='hs-comment'>{-# INLINE foldr #-}</span>
-<a name="line-431"></a>
-<a name="line-432"></a><a name="elems"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-433"></a>  List variations 
-<a name="line-434"></a>--------------------------------------------------------------------}</span>
-<a name="line-435"></a><span class='hs-comment'>-- | /O(n)/. The elements of a set.</span>
-<a name="line-436"></a><span class='hs-definition'>elems</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-437"></a><span class='hs-definition'>elems</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>toList</span> <span class='hs-varid'>x</span>
-<a name="line-438"></a>
-<a name="line-439"></a><a name="toList"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-440"></a>  Lists 
-<a name="line-441"></a>--------------------------------------------------------------------}</span>
-<a name="line-442"></a><span class='hs-comment'>-- | /O(n)/. Convert the set to a list of elements.</span>
-<a name="line-443"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-444"></a><span class='hs-definition'>toList</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>toAscList</span> <span class='hs-varid'>x</span>
-<a name="line-445"></a><span class='hs-comment'>{-# INLINE toList #-}</span>
-<a name="line-446"></a>
-<a name="line-447"></a><a name="toAscList"></a><span class='hs-comment'>-- | /O(n)/. Convert the set to an ascending list of elements.</span>
-<a name="line-448"></a><span class='hs-definition'>toAscList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-449"></a><span class='hs-definition'>toAscList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span>
+<a name="line-428"></a>
+<a name="line-429"></a><a name="fold"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-430"></a>  Fold
+<a name="line-431"></a>--------------------------------------------------------------------}</span>
+<a name="line-432"></a><span class='hs-comment'>-- | /O(n)/. Fold over the elements of a set in an unspecified order.</span>
+<a name="line-433"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-434"></a><span class='hs-definition'>fold</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>s</span>
+<a name="line-435"></a>
+<a name="line-436"></a><a name="foldr"></a><span class='hs-comment'>-- | /O(n)/. Post-order fold.</span>
+<a name="line-437"></a><span class='hs-definition'>foldr</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-438"></a><span class='hs-comment'>--foldr f z (view -&gt; Bin _ x l r) = foldr f (f x (foldr f z r)) l</span>
+<a name="line-439"></a><span class='hs-comment'>--foldr _ z _ = z</span>
+<a name="line-440"></a>
+<a name="line-441"></a><span class='hs-definition'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>null</span> <span class='hs-varid'>x</span>                     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>z</span>
+<a name="line-442"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>viewBin</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldr</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> 
+<a name="line-443"></a>
+<a name="line-444"></a><a name="elems"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-445"></a>  List variations 
+<a name="line-446"></a>--------------------------------------------------------------------}</span>
+<a name="line-447"></a><span class='hs-comment'>-- | /O(n)/. The elements of a set.</span>
+<a name="line-448"></a><span class='hs-definition'>elems</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-449"></a><span class='hs-definition'>elems</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>toList</span> <span class='hs-varid'>x</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 459
-<a name="line-451"></a>
-<a name="line-452"></a><a name="fromList"></a><span class='hs-comment'>-- | /O(n*log n)/. Create a set from a list of elements.</span>
-<a name="line-453"></a><span class='hs-definition'>fromList</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
-<a name="line-454"></a><span class='hs-definition'>fromList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldlStrict</span> <span class='hs-varid'>ins</span> <span class='hs-varid'>empty</span>
-<a name="line-455"></a>  <span class='hs-keyword'>where</span>
-<a name="line-456"></a>    <span class='hs-varid'>ins</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>insert</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-451"></a><a name="toList"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-452"></a>  Lists 
+<a name="line-453"></a>--------------------------------------------------------------------}</span>
+<a name="line-454"></a><span class='hs-comment'>-- | /O(n)/. Convert the set to a list of elements.</span>
+<a name="line-455"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-456"></a><span class='hs-definition'>toList</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>toAscList</span> <span class='hs-varid'>x</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 466
-<a name="line-458"></a><a name="fromAscList"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-459"></a>  Building trees from ascending/descending lists can be done in linear time.
-<a name="line-460"></a>  
-<a name="line-461"></a>  Note that if [xs] is ascending that: 
-<a name="line-462"></a>    fromAscList xs == fromList xs
-<a name="line-463"></a>--------------------------------------------------------------------}</span>
-<a name="line-464"></a><span class='hs-comment'>-- | /O(n)/. Build a set from an ascending list in linear time.</span>
-<a name="line-465"></a><span class='hs-comment'>-- /The precondition (input list is ascending) is not checked./</span>
-<a name="line-466"></a><span class='hs-definition'>fromAscList</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
-<a name="line-467"></a><span class='hs-definition'>fromAscList</span> <span class='hs-varid'>xs</span>
-<a name="line-468"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromDistinctAscList</span> <span class='hs-layout'>(</span><span class='hs-varid'>combineEq</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span>
-<a name="line-469"></a>  <span class='hs-keyword'>where</span>
-<a name="line-470"></a>  <span class='hs-comment'>-- [combineEq xs] combines equal elements with [const] in an ordered list [xs]</span>
-<a name="line-471"></a>  <span class='hs-varid'>combineEq</span> <span class='hs-varid'>xs'</span>
-<a name="line-472"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>of</span>
-<a name="line-473"></a>        <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>[]</span>
-<a name="line-474"></a>        <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-475"></a>        <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>xx</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xx</span>
-<a name="line-476"></a>
-<a name="line-477"></a>  <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>z</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
-<a name="line-478"></a>  <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>xs'</span><span class='hs-layout'>)</span>
-<a name="line-479"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>z</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span>   <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>z</span> <span class='hs-varid'>xs'</span>
-<a name="line-480"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>z</span><span class='hs-conop'>:</span><span class='hs-varid'>combineEq'</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs'</span>
-<a name="line-481"></a>
-<a name="line-482"></a>
-<a name="line-483"></a><a name="fromDistinctAscList"></a><span class='hs-comment'>-- | /O(n)/. Build a set from an ascending list of distinct elements in linear time.</span>
-<a name="line-484"></a><span class='hs-comment'>-- /The precondition (input list is strictly ascending) is not checked./</span>
-<a name="line-485"></a><span class='hs-definition'>fromDistinctAscList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
-<a name="line-486"></a><span class='hs-definition'>fromDistinctAscList</span> <span class='hs-varid'>xs</span>
-<a name="line-487"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>build</span> <span class='hs-varid'>const</span> <span class='hs-layout'>(</span><span class='hs-varid'>length</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varid'>xs</span>
-<a name="line-488"></a>  <span class='hs-keyword'>where</span>
-<a name="line-489"></a>    <span class='hs-comment'>-- 1) use continutations so that we use heap space instead of stack space.</span>
-<a name="line-490"></a>    <span class='hs-comment'>-- 2) special case for n==5 to build bushier trees. </span>
-<a name="line-491"></a>    <span class='hs-varid'>build</span> <span class='hs-varid'>c</span> <span class='hs-num'>0</span> <span class='hs-varid'>xs'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span> <span class='hs-varid'>tip</span> <span class='hs-varid'>xs'</span>
-<a name="line-492"></a>    <span class='hs-varid'>build</span> <span class='hs-varid'>c</span> <span class='hs-num'>5</span> <span class='hs-varid'>xs'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>of</span>
-<a name="line-493"></a>                       <span class='hs-layout'>(</span><span class='hs-varid'>x1</span><span class='hs-conop'>:</span><span class='hs-varid'>x2</span><span class='hs-conop'>:</span><span class='hs-varid'>x3</span><span class='hs-conop'>:</span><span class='hs-varid'>x4</span><span class='hs-conop'>:</span><span class='hs-varid'>x5</span><span class='hs-conop'>:</span><span class='hs-varid'>xx</span><span class='hs-layout'>)</span> 
-<a name="line-494"></a>                            <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x4</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x2</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x1</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x3</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x5</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>xx</span>
-<a name="line-495"></a>                       <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"fromDistinctAscList build 5"</span>
-<a name="line-496"></a>    <span class='hs-varid'>build</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span> <span class='hs-varid'>xs'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>seq</span> <span class='hs-varid'>nr</span> <span class='hs-varop'>$</span> <span class='hs-varid'>build</span> <span class='hs-layout'>(</span><span class='hs-varid'>buildR</span> <span class='hs-varid'>nr</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>nl</span> <span class='hs-varid'>xs'</span>
-<a name="line-497"></a>                   <span class='hs-keyword'>where</span>
-<a name="line-498"></a>                     <span class='hs-varid'>nl</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`div`</span> <span class='hs-num'>2</span>
-<a name="line-499"></a>                     <span class='hs-varid'>nr</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>n</span> <span class='hs-comment'>-</span> <span class='hs-varid'>nl</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span>
-<a name="line-500"></a>
-<a name="line-501"></a>    <span class='hs-varid'>buildR</span> <span class='hs-varid'>n</span> <span class='hs-varid'>c</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>ys</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>build</span> <span class='hs-layout'>(</span><span class='hs-varid'>buildB</span> <span class='hs-varid'>l</span> <span class='hs-varid'>x</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span> <span class='hs-varid'>ys</span>
-<a name="line-502"></a>    <span class='hs-varid'>buildR</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"fromDistinctAscList buildR []"</span>
-<a name="line-503"></a>    <span class='hs-varid'>buildB</span> <span class='hs-varid'>l</span> <span class='hs-varid'>x</span> <span class='hs-varid'>c</span> <span class='hs-varid'>r</span> <span class='hs-varid'>zs</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>zs</span>
-<a name="line-504"></a>
-<a name="line-505"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-506"></a>  Eq converts the set to a list. In a lazy setting, this 
-<a name="line-507"></a>  actually seems one of the faster methods to compare two trees 
-<a name="line-508"></a>  and it is certainly the simplest :-)
-<a name="line-509"></a>--------------------------------------------------------------------}</span>
-<a name="line-510"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-511"></a>  <span class='hs-varid'>t1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>t2</span>  <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>t1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>size</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>toAscList</span> <span class='hs-varid'>t1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>toAscList</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span>
-<a name="line-512"></a>
-<a name="line-513"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-514"></a>  Ord 
-<a name="line-515"></a>--------------------------------------------------------------------}</span>
-<a name="line-516"></a>
-<a name="line-517"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-518"></a>    <span class='hs-varid'>compare</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>s2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-layout'>(</span><span class='hs-varid'>toAscList</span> <span class='hs-varid'>s1</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>toAscList</span> <span class='hs-varid'>s2</span><span class='hs-layout'>)</span> 
-<a name="line-519"></a>
-<a name="line-520"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-521"></a>  Show
-<a name="line-522"></a>--------------------------------------------------------------------}</span>
-<a name="line-523"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-524"></a>  <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>p</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
-<a name="line-525"></a>    <span class='hs-varid'>showString</span> <span class='hs-str'>"fromList "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-layout'>(</span><span class='hs-varid'>toList</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span>
-<a name="line-526"></a>
-<a name="line-527"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-528"></a>  Read
-<a name="line-529"></a>--------------------------------------------------------------------}</span>
-<a name="line-530"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-531"></a><span class='hs-cpp'>#ifdef __GLASGOW_HASKELL__</span>
-<a name="line-532"></a>  <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
-<a name="line-533"></a>    <span class='hs-conid'>Ident</span> <span class='hs-str'>"fromList"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
-<a name="line-534"></a>    <span class='hs-varid'>fromList</span> <span class='hs-varop'>`fmap`</span> <span class='hs-varid'>readPrec</span>
-<a name="line-535"></a>
-<a name="line-536"></a>  <span class='hs-varid'>readListPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>readListPrecDefault</span>
-<a name="line-537"></a><span class='hs-cpp'>#else</span>
-<a name="line-538"></a>  <span class='hs-varid'>readsPrec</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>readParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-keyglyph'>\</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>do</span>
-<a name="line-539"></a>    <span class='hs-layout'>(</span><span class='hs-str'>"fromList"</span><span class='hs-layout'>,</span><span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lex</span> <span class='hs-varid'>r</span>
-<a name="line-540"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>xs</span><span class='hs-layout'>,</span><span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>reads</span> <span class='hs-varid'>s</span>
-<a name="line-541"></a>    <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromList</span> <span class='hs-varid'>xs</span><span class='hs-layout'>,</span><span class='hs-varid'>t</span><span class='hs-layout'>)</span>
-<a name="line-542"></a><span class='hs-cpp'>#endif</span>
-<a name="line-543"></a>
-<a name="line-544"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-545"></a>  Utility functions that return sub-ranges of the original
-<a name="line-546"></a>  tree. Some functions take a comparison function as argument to
-<a name="line-547"></a>  allow comparisons against infinite values. A function [cmplo x]
-<a name="line-548"></a>  should be read as [compare lo x].
-<a name="line-549"></a>
-<a name="line-550"></a>  [trim cmplo cmphi t]  A tree that is either empty or where [cmplo x == LT]
-<a name="line-551"></a>                        and [cmphi x == GT] for the value [x] of the root.
-<a name="line-552"></a>  [filterGt cmp t]      A tree where for all values [k]. [cmp k == LT]
-<a name="line-553"></a>  [filterLt cmp t]      A tree where for all values [k]. [cmp k == GT]
+<a name="line-458"></a><a name="toAscList"></a><span class='hs-comment'>-- | /O(n)/. Convert the set to an ascending list of elements.</span>
+<a name="line-459"></a><span class='hs-definition'>toAscList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-460"></a><span class='hs-definition'>toAscList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span>
+<a name="line-461"></a>
+<a name="line-462"></a>
+<a name="line-463"></a><a name="fromList"></a><span class='hs-comment'>-- | /O(n*log n)/. Create a set from a list of elements.</span>
+<a name="line-464"></a><span class='hs-definition'>fromList</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
+<a name="line-465"></a><span class='hs-definition'>fromList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldlStrict</span> <span class='hs-varid'>ins</span> <span class='hs-varid'>empty</span>
+<a name="line-466"></a>  <span class='hs-keyword'>where</span>
+<a name="line-467"></a>    <span class='hs-varid'>ins</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>insert</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-468"></a>
+<a name="line-469"></a><a name="fromAscList"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-470"></a>  Building trees from ascending/descending lists can be done in linear time.
+<a name="line-471"></a>  
+<a name="line-472"></a>  Note that if [xs] is ascending that: 
+<a name="line-473"></a>    fromAscList xs == fromList xs
+<a name="line-474"></a>--------------------------------------------------------------------}</span>
+<a name="line-475"></a><span class='hs-comment'>-- | /O(n)/. Build a set from an ascending list in linear time.</span>
+<a name="line-476"></a><span class='hs-comment'>-- /The precondition (input list is ascending) is not checked./</span>
+<a name="line-477"></a><span class='hs-definition'>fromAscList</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
+<a name="line-478"></a><span class='hs-definition'>fromAscList</span> <span class='hs-varid'>xs</span>
+<a name="line-479"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromDistinctAscList</span> <span class='hs-layout'>(</span><span class='hs-varid'>combineEq</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span>
+<a name="line-480"></a>  <span class='hs-keyword'>where</span>
+<a name="line-481"></a>  <span class='hs-comment'>-- [combineEq xs] combines equal elements with [const] in an ordered list [xs]</span>
+<a name="line-482"></a>  <span class='hs-varid'>combineEq</span> <span class='hs-varid'>xs'</span>
+<a name="line-483"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>of</span>
+<a name="line-484"></a>        <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>[]</span>
+<a name="line-485"></a>        <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-486"></a>        <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>xx</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xx</span>
+<a name="line-487"></a>
+<a name="line-488"></a>  <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>z</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
+<a name="line-489"></a>  <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>xs'</span><span class='hs-layout'>)</span>
+<a name="line-490"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>z</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span>   <span class='hs-varid'>combineEq'</span> <span class='hs-varid'>z</span> <span class='hs-varid'>xs'</span>
+<a name="line-491"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>z</span><span class='hs-conop'>:</span><span class='hs-varid'>combineEq'</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs'</span>
+<a name="line-492"></a>
+<a name="line-493"></a>
+<a name="line-494"></a><a name="fromDistinctAscList"></a><span class='hs-comment'>-- | /O(n)/. Build a set from an ascending list of distinct elements in linear time.</span>
+<a name="line-495"></a><span class='hs-comment'>-- /The precondition (input list is strictly ascending) is not checked./</span>
+<a name="line-496"></a><span class='hs-definition'>fromDistinctAscList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
+<a name="line-497"></a><span class='hs-definition'>fromDistinctAscList</span> <span class='hs-varid'>xs</span>
+<a name="line-498"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>build</span> <span class='hs-varid'>const</span> <span class='hs-layout'>(</span><span class='hs-varid'>length</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varid'>xs</span>
+<a name="line-499"></a>  <span class='hs-keyword'>where</span>
+<a name="line-500"></a>    <span class='hs-comment'>-- 1) use continutations so that we use heap space instead of stack space.</span>
+<a name="line-501"></a>    <span class='hs-comment'>-- 2) special case for n==5 to build bushier trees. </span>
+<a name="line-502"></a>    <span class='hs-varid'>build</span> <span class='hs-varid'>c</span> <span class='hs-num'>0</span> <span class='hs-varid'>xs'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span> <span class='hs-varid'>tip</span> <span class='hs-varid'>xs'</span>
+<a name="line-503"></a>    <span class='hs-varid'>build</span> <span class='hs-varid'>c</span> <span class='hs-num'>5</span> <span class='hs-varid'>xs'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>of</span>
+<a name="line-504"></a>                       <span class='hs-layout'>(</span><span class='hs-varid'>x1</span><span class='hs-conop'>:</span><span class='hs-varid'>x2</span><span class='hs-conop'>:</span><span class='hs-varid'>x3</span><span class='hs-conop'>:</span><span class='hs-varid'>x4</span><span class='hs-conop'>:</span><span class='hs-varid'>x5</span><span class='hs-conop'>:</span><span class='hs-varid'>xx</span><span class='hs-layout'>)</span> 
+<a name="line-505"></a>                            <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x4</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x2</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x1</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x3</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x5</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>xx</span>
+<a name="line-506"></a>                       <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.fromDistinctAscList build 5"</span>
+<a name="line-507"></a>    <span class='hs-varid'>build</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span> <span class='hs-varid'>xs'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>seq</span> <span class='hs-varid'>nr</span> <span class='hs-varop'>$</span> <span class='hs-varid'>build</span> <span class='hs-layout'>(</span><span class='hs-varid'>buildR</span> <span class='hs-varid'>nr</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>nl</span> <span class='hs-varid'>xs'</span>
+<a name="line-508"></a>                   <span class='hs-keyword'>where</span>
+<a name="line-509"></a>                     <span class='hs-varid'>nl</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`div`</span> <span class='hs-num'>2</span>
+<a name="line-510"></a>                     <span class='hs-varid'>nr</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>n</span> <span class='hs-comment'>-</span> <span class='hs-varid'>nl</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span>
+<a name="line-511"></a>
+<a name="line-512"></a>    <span class='hs-varid'>buildR</span> <span class='hs-varid'>n</span> <span class='hs-varid'>c</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>ys</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>build</span> <span class='hs-layout'>(</span><span class='hs-varid'>buildB</span> <span class='hs-varid'>l</span> <span class='hs-varid'>x</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span> <span class='hs-varid'>ys</span>
+<a name="line-513"></a>    <span class='hs-varid'>buildR</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.fromDistinctAscList buildR []"</span>
+<a name="line-514"></a>    <span class='hs-varid'>buildB</span> <span class='hs-varid'>l</span> <span class='hs-varid'>x</span> <span class='hs-varid'>c</span> <span class='hs-varid'>r</span> <span class='hs-varid'>zs</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>zs</span>
+<a name="line-515"></a>
+<a name="line-516"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-517"></a>  Eq converts the set to a list. In a lazy setting, this 
+<a name="line-518"></a>  actually seems one of the faster methods to compare two trees 
+<a name="line-519"></a>  and it is certainly the simplest :-)
+<a name="line-520"></a>--------------------------------------------------------------------}</span>
+<a name="line-521"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-522"></a>  <span class='hs-varid'>t1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>t2</span>  <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>t1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>size</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>toAscList</span> <span class='hs-varid'>t1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>toAscList</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span>
+<a name="line-523"></a>
+<a name="line-524"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-525"></a>  Ord 
+<a name="line-526"></a>--------------------------------------------------------------------}</span>
+<a name="line-527"></a>
+<a name="line-528"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-529"></a>    <span class='hs-varid'>compare</span> <span class='hs-varid'>s1</span> <span class='hs-varid'>s2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-layout'>(</span><span class='hs-varid'>toAscList</span> <span class='hs-varid'>s1</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>toAscList</span> <span class='hs-varid'>s2</span><span class='hs-layout'>)</span> 
+<a name="line-530"></a>
+<a name="line-531"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-532"></a>  Show
+<a name="line-533"></a>--------------------------------------------------------------------}</span>
+<a name="line-534"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-535"></a>  <span class='hs-varid'>showsPrec</span> <span class='hs-varid'>p</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span>
+<a name="line-536"></a>    <span class='hs-varid'>showString</span> <span class='hs-str'>"fromList "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-layout'>(</span><span class='hs-varid'>toList</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span>
+<a name="line-537"></a>
+<a name="line-538"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-539"></a>  Read
+<a name="line-540"></a>--------------------------------------------------------------------}</span>
+<a name="line-541"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Read</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Read</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-542"></a><span class='hs-cpp'>#ifdef __GLASGOW_HASKELL__</span>
+<a name="line-543"></a>  <span class='hs-varid'>readPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parens</span> <span class='hs-varop'>$</span> <span class='hs-varid'>prec</span> <span class='hs-num'>10</span> <span class='hs-varop'>$</span> <span class='hs-keyword'>do</span>
+<a name="line-544"></a>    <span class='hs-conid'>Ident</span> <span class='hs-str'>"fromList"</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lexP</span>
+<a name="line-545"></a>    <span class='hs-varid'>fromList</span> <span class='hs-varop'>`fmap`</span> <span class='hs-varid'>readPrec</span>
+<a name="line-546"></a>
+<a name="line-547"></a>  <span class='hs-varid'>readListPrec</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>readListPrecDefault</span>
+<a name="line-548"></a><span class='hs-cpp'>#else</span>
+<a name="line-549"></a>  <span class='hs-varid'>readsPrec</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>readParen</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varop'>&gt;</span> <span class='hs-num'>10</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-keyglyph'>\</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>do</span>
+<a name="line-550"></a>    <span class='hs-layout'>(</span><span class='hs-str'>"fromList"</span><span class='hs-layout'>,</span><span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>lex</span> <span class='hs-varid'>r</span>
+<a name="line-551"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>xs</span><span class='hs-layout'>,</span><span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>reads</span> <span class='hs-varid'>s</span>
+<a name="line-552"></a>    <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromList</span> <span class='hs-varid'>xs</span><span class='hs-layout'>,</span><span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-553"></a><span class='hs-cpp'>#endif</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 563
-<a name="line-555"></a>  [split k t]           Returns two trees [l] and [r] where all values
-<a name="line-556"></a>                        in [l] are &lt;[k] and all keys in [r] are &gt;[k].
-<a name="line-557"></a>  [splitMember k t]     Just like [split] but also returns whether [k]
-<a name="line-558"></a>                        was found in the tree.
-<a name="line-559"></a>--------------------------------------------------------------------}</span>
+<a name="line-555"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-556"></a>  Utility functions that return sub-ranges of the original
+<a name="line-557"></a>  tree. Some functions take a comparison function as argument to
+<a name="line-558"></a>  allow comparisons against infinite values. A function [cmplo x]
+<a name="line-559"></a>  should be read as [compare lo x].
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 569
-<a name="line-561"></a><a name="trim"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-562"></a>  [trim lo hi t] trims away all subtrees that surely contain no
-<a name="line-563"></a>  values between the range [lo] to [hi]. The returned tree is either
-<a name="line-564"></a>  empty or the key of the root is between @lo@ and @hi@.
-<a name="line-565"></a>--------------------------------------------------------------------}</span>
-<a name="line-566"></a><span class='hs-definition'>trim</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-567"></a><span class='hs-definition'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-568"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
-<a name="line-569"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
-<a name="line-570"></a>              <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span>
-<a name="line-571"></a>              <span class='hs-keyword'>_</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>l</span>
-<a name="line-572"></a>      <span class='hs-keyword'>_</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span>
-<a name="line-573"></a><span class='hs-definition'>trim</span> <span class='hs-keyword'>_</span>     <span class='hs-keyword'>_</span>     <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-574"></a>
-<a name="line-575"></a><a name="filterGt"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-576"></a>  [filterGt x t] filter all values &gt;[x] from tree [t]
-<a name="line-577"></a>  [filterLt x t] filter all values &lt;[x] from tree [t]
-<a name="line-578"></a>--------------------------------------------------------------------}</span>
-<a name="line-579"></a><span class='hs-definition'>filterGt</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-580"></a><span class='hs-definition'>filterGt</span> <span class='hs-varid'>cmp</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-581"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
-<a name="line-582"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-583"></a>      <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>r</span>
-<a name="line-584"></a>      <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
-<a name="line-585"></a><span class='hs-definition'>filterGt</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-586"></a>      
-<a name="line-587"></a><a name="filterLt"></a><span class='hs-definition'>filterLt</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-588"></a><span class='hs-definition'>filterLt</span> <span class='hs-varid'>cmp</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-589"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
-<a name="line-590"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>l</span>
-<a name="line-591"></a>      <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-592"></a>      <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>l</span>
-<a name="line-593"></a><span class='hs-definition'>filterLt</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
-<a name="line-594"></a>
-<a name="line-595"></a>
-<a name="line-596"></a><a name="split"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-597"></a>  Split
-<a name="line-598"></a>--------------------------------------------------------------------}</span>
-<a name="line-599"></a><span class='hs-comment'>-- | /O(log n)/. The expression (@'split' x set@) is a pair @(set1,set2)@</span>
-<a name="line-600"></a><span class='hs-comment'>-- where @set1@ comprises the elements of @set@ less than @x@ and @set2@</span>
-<a name="line-601"></a><span class='hs-comment'>-- comprises the elements of @set@ greater than @x@.</span>
-<a name="line-602"></a><span class='hs-definition'>split</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-603"></a><span class='hs-definition'>split</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-604"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
-<a name="line-605"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>split</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>gt</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-606"></a>      <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>split</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span>
-<a name="line-607"></a>      <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-608"></a><span class='hs-definition'>split</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>tip</span><span class='hs-layout'>,</span><span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
-<a name="line-609"></a>
-<a name="line-610"></a><a name="splitMember"></a><span class='hs-comment'>-- | /O(log n)/. Performs a 'split' but also returns whether the pivot</span>
-<a name="line-611"></a><span class='hs-comment'>-- element was found in the original set.</span>
-<a name="line-612"></a><span class='hs-definition'>splitMember</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Bool</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-613"></a><span class='hs-definition'>splitMember</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>in</span>
-<a name="line-614"></a>     <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>maybe</span> <span class='hs-conid'>False</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-615"></a>
-<a name="line-616"></a><a name="splitLookup"></a><span class='hs-comment'>-- | /O(log n)/. Performs a 'split' but also returns the pivot</span>
-<a name="line-617"></a><span class='hs-comment'>-- element that was found in the original set.</span>
-<a name="line-618"></a><span class='hs-definition'>splitLookup</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-619"></a><span class='hs-definition'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-620"></a>   <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
-<a name="line-621"></a>       <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>gt</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-622"></a>       <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span>
-<a name="line-623"></a>       <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-conid'>Just</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-624"></a><span class='hs-definition'>splitLookup</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>tip</span><span class='hs-layout'>,</span><span class='hs-conid'>Nothing</span><span class='hs-layout'>,</span><span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
-<a name="line-625"></a>
-<a name="line-626"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-627"></a>  Utility functions that maintain the balance properties of the tree.
-<a name="line-628"></a>  All constructors assume that all values in [l] &lt; [x] and all values
-<a name="line-629"></a>  in [r] &gt; [x], and that [l] and [r] are valid trees.
-<a name="line-630"></a>  
-<a name="line-631"></a>  In order of sophistication:
-<a name="line-632"></a>    [Bin sz x l r]    The type constructor.
-<a name="line-633"></a>    [bin_ x l r]      Maintains the correct size, assumes that both [l]
-<a name="line-634"></a>                      and [r] are balanced with respect to each other.
-<a name="line-635"></a>    [balance x l r]   Restores the balance and size.
-<a name="line-636"></a>                      Assumes that the original tree was balanced and
-<a name="line-637"></a>                      that [l] or [r] has changed by at most one element.
-<a name="line-638"></a>    [join x l r]      Restores balance and size. 
-<a name="line-639"></a>
-<a name="line-640"></a>  Furthermore, we can construct a new tree from two trees. Both operations
-<a name="line-641"></a>  assume that all values in [l] &lt; all values in [r] and that [l] and [r]
-<a name="line-642"></a>  are valid:
-<a name="line-643"></a>    [glue l r]        Glues [l] and [r] together. Assumes that [l] and
-<a name="line-644"></a>                      [r] are already balanced with respect to each other.
-<a name="line-645"></a>    [merge l r]       Merges two trees and restores balance.
-<a name="line-646"></a>
-<a name="line-647"></a>  Note: in contrast to Adam's paper, we use (&lt;=) comparisons instead
-<a name="line-648"></a>  of (&lt;) comparisons in [join], [merge] and [balance]. 
-<a name="line-649"></a>  Quickcheck (on [difference]) showed that this was necessary in order 
-<a name="line-650"></a>  to maintain the invariants. It is quite unsatisfactory that I haven't 
-<a name="line-651"></a>  been able to find out why this is actually the case! Fortunately, it 
-<a name="line-652"></a>  doesn't hurt to be a bit more conservative.
-<a name="line-653"></a>--------------------------------------------------------------------}</span>
-<a name="line-654"></a>
-<a name="line-655"></a><a name="join"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-656"></a>  Join 
-<a name="line-657"></a>--------------------------------------------------------------------}</span>
-<a name="line-658"></a><span class='hs-definition'>join</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-659"></a><span class='hs-definition'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>insertMin</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span>
-<a name="line-660"></a><span class='hs-definition'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>insertMax</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span>
-<a name="line-661"></a><span class='hs-definition'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeL</span> <span class='hs-varid'>y</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeR</span> <span class='hs-varid'>z</span> <span class='hs-varid'>lz</span> <span class='hs-varid'>rz</span><span class='hs-layout'>)</span>
-<a name="line-662"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeL</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeR</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lz</span><span class='hs-layout'>)</span> <span class='hs-varid'>rz</span>
-<a name="line-663"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeR</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeL</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>ly</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>ry</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-664"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>             <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-561"></a>  [trim cmplo cmphi t]  A tree that is either empty or where [cmplo x == LT]
+<a name="line-562"></a>                        and [cmphi x == GT] for the value [x] of the root.
+<a name="line-563"></a>  [filterGt cmp t]      A tree where for all values [k]. [cmp k == LT]
+<a name="line-564"></a>  [filterLt cmp t]      A tree where for all values [k]. [cmp k == GT]
+<a name="line-565"></a>
+<a name="line-566"></a>  [split k t]           Returns two trees [l] and [r] where all values
+<a name="line-567"></a>                        in [l] are &lt;[k] and all keys in [r] are &gt;[k].
+<a name="line-568"></a>  [splitMember k t]     Just like [split] but also returns whether [k]
+<a name="line-569"></a>                        was found in the tree.
+<a name="line-570"></a>--------------------------------------------------------------------}</span>
+<a name="line-571"></a>
+<a name="line-572"></a><a name="trim"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-573"></a>  [trim lo hi t] trims away all subtrees that surely contain no
+<a name="line-574"></a>  values between the range [lo] to [hi]. The returned tree is either
+<a name="line-575"></a>  empty or the key of the root is between @lo@ and @hi@.
+<a name="line-576"></a>--------------------------------------------------------------------}</span>
+<a name="line-577"></a><span class='hs-definition'>trim</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-578"></a><span class='hs-definition'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>t</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-579"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
+<a name="line-580"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
+<a name="line-581"></a>              <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span>
+<a name="line-582"></a>              <span class='hs-keyword'>_</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>l</span>
+<a name="line-583"></a>      <span class='hs-keyword'>_</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>trim</span> <span class='hs-varid'>cmplo</span> <span class='hs-varid'>cmphi</span> <span class='hs-varid'>r</span>
+<a name="line-584"></a><span class='hs-definition'>trim</span> <span class='hs-keyword'>_</span>     <span class='hs-keyword'>_</span>     <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-585"></a>
+<a name="line-586"></a><a name="filterGt"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-587"></a>  [filterGt x t] filter all values &gt;[x] from tree [t]
+<a name="line-588"></a>  [filterLt x t] filter all values &lt;[x] from tree [t]
+<a name="line-589"></a>--------------------------------------------------------------------}</span>
+<a name="line-590"></a><span class='hs-definition'>filterGt</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-591"></a><span class='hs-definition'>filterGt</span> <span class='hs-varid'>cmp</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-592"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
+<a name="line-593"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-594"></a>      <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>filterGt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>r</span>
+<a name="line-595"></a>      <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
+<a name="line-596"></a><span class='hs-definition'>filterGt</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-597"></a>      
+<a name="line-598"></a><a name="filterLt"></a><span class='hs-definition'>filterLt</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Ordering</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-599"></a><span class='hs-definition'>filterLt</span> <span class='hs-varid'>cmp</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-600"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>of</span>
+<a name="line-601"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>l</span>
+<a name="line-602"></a>      <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>filterLt</span> <span class='hs-varid'>cmp</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-603"></a>      <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>l</span>
+<a name="line-604"></a><span class='hs-definition'>filterLt</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>tip</span>
+<a name="line-605"></a>
+<a name="line-606"></a>
+<a name="line-607"></a><a name="split"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-608"></a>  Split
+<a name="line-609"></a>--------------------------------------------------------------------}</span>
+<a name="line-610"></a><span class='hs-comment'>-- | /O(log n)/. The expression (@'split' x set@) is a pair @(set1,set2)@</span>
+<a name="line-611"></a><span class='hs-comment'>-- where @set1@ comprises the elements of @set@ less than @x@ and @set2@</span>
+<a name="line-612"></a><span class='hs-comment'>-- comprises the elements of @set@ greater than @x@.</span>
+<a name="line-613"></a><span class='hs-definition'>split</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-614"></a><span class='hs-definition'>split</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-615"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
+<a name="line-616"></a>      <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>split</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>gt</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-617"></a>      <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>split</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span>
+<a name="line-618"></a>      <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-619"></a><span class='hs-definition'>split</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>tip</span><span class='hs-layout'>,</span><span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
+<a name="line-620"></a>
+<a name="line-621"></a><a name="splitMember"></a><span class='hs-comment'>-- | /O(log n)/. Performs a 'split' but also returns whether the pivot</span>
+<a name="line-622"></a><span class='hs-comment'>-- element was found in the original set.</span>
+<a name="line-623"></a><span class='hs-definition'>splitMember</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Bool</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-624"></a><span class='hs-definition'>splitMember</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>in</span>
+<a name="line-625"></a>     <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>maybe</span> <span class='hs-conid'>False</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-626"></a>
+<a name="line-627"></a><a name="splitLookup"></a><span class='hs-comment'>-- | /O(log n)/. Performs a 'split' but also returns the pivot</span>
+<a name="line-628"></a><span class='hs-comment'>-- element that was found in the original set.</span>
+<a name="line-629"></a><span class='hs-definition'>splitLookup</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-630"></a><span class='hs-definition'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-631"></a>   <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
+<a name="line-632"></a>       <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>gt</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-633"></a>       <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>splitLookup</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lt</span><span class='hs-layout'>,</span><span class='hs-varid'>found</span><span class='hs-layout'>,</span><span class='hs-varid'>gt</span><span class='hs-layout'>)</span>
+<a name="line-634"></a>       <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-conid'>Just</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-635"></a><span class='hs-definition'>splitLookup</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>tip</span><span class='hs-layout'>,</span><span class='hs-conid'>Nothing</span><span class='hs-layout'>,</span><span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
+<a name="line-636"></a>
+<a name="line-637"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-638"></a>  Utility functions that maintain the balance properties of the tree.
+<a name="line-639"></a>  All constructors assume that all values in [l] &lt; [x] and all values
+<a name="line-640"></a>  in [r] &gt; [x], and that [l] and [r] are valid trees.
+<a name="line-641"></a>  
+<a name="line-642"></a>  In order of sophistication:
+<a name="line-643"></a>    [Bin sz x l r]    The type constructor.
+<a name="line-644"></a>    [bin_ x l r]      Maintains the correct size, assumes that both [l]
+<a name="line-645"></a>                      and [r] are balanced with respect to each other.
+<a name="line-646"></a>    [balance x l r]   Restores the balance and size.
+<a name="line-647"></a>                      Assumes that the original tree was balanced and
+<a name="line-648"></a>                      that [l] or [r] has changed by at most one element.
+<a name="line-649"></a>    [join x l r]      Restores balance and size. 
+<a name="line-650"></a>
+<a name="line-651"></a>  Furthermore, we can construct a new tree from two trees. Both operations
+<a name="line-652"></a>  assume that all values in [l] &lt; all values in [r] and that [l] and [r]
+<a name="line-653"></a>  are valid:
+<a name="line-654"></a>    [glue l r]        Glues [l] and [r] together. Assumes that [l] and
+<a name="line-655"></a>                      [r] are already balanced with respect to each other.
+<a name="line-656"></a>    [merge l r]       Merges two trees and restores balance.
+<a name="line-657"></a>
+<a name="line-658"></a>  Note: in contrast to Adam's paper, we use (&lt;=) comparisons instead
+<a name="line-659"></a>  of (&lt;) comparisons in [join], [merge] and [balance]. 
+<a name="line-660"></a>  Quickcheck (on [difference]) showed that this was necessary in order 
+<a name="line-661"></a>  to maintain the invariants. It is quite unsatisfactory that I haven't 
+<a name="line-662"></a>  been able to find out why this is actually the case! Fortunately, it 
+<a name="line-663"></a>  doesn't hurt to be a bit more conservative.
+<a name="line-664"></a>--------------------------------------------------------------------}</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 674
-<a name="line-666"></a>
-<a name="line-667"></a><a name="insertMax"></a><span class='hs-comment'>-- insertMin and insertMax don't perform potentially expensive comparisons.</span>
-<a name="line-668"></a><span class='hs-definition'>insertMax</span><span class='hs-layout'>,</span><span class='hs-varid'>insertMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
-<a name="line-669"></a><span class='hs-definition'>insertMax</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
-<a name="line-670"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-671"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>insertMax</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-672"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>x</span>
-<a name="line-673"></a>             
-<a name="line-674"></a><a name="insertMin"></a><span class='hs-definition'>insertMin</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
-<a name="line-675"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-676"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>insertMin</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-677"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>x</span>
-<a name="line-678"></a>             
-<a name="line-679"></a><a name="merge"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-680"></a>  [merge l r]: merges two trees.
-<a name="line-681"></a>--------------------------------------------------------------------}</span>
-<a name="line-682"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-683"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span>
-<a name="line-684"></a><span class='hs-definition'>merge</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>l</span>
-<a name="line-685"></a><span class='hs-definition'>merge</span> <span class='hs-varid'>l</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeL</span> <span class='hs-varid'>x</span> <span class='hs-varid'>lx</span> <span class='hs-varid'>rx</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeR</span> <span class='hs-varid'>y</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span><span class='hs-layout'>)</span>
-<a name="line-686"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeL</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeR</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>merge</span> <span class='hs-varid'>l</span> <span class='hs-varid'>ly</span><span class='hs-layout'>)</span> <span class='hs-varid'>ry</span>
-<a name="line-687"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeR</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeL</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>lx</span> <span class='hs-layout'>(</span><span class='hs-varid'>merge</span> <span class='hs-varid'>rx</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-688"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>glue</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-689"></a>
-<a name="line-690"></a><a name="glue"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-691"></a>  [glue l r]: glues two trees together.
-<a name="line-692"></a>  Assumes that [l] and [r] are already balanced with respect to each other.
-<a name="line-693"></a>--------------------------------------------------------------------}</span>
-<a name="line-694"></a><span class='hs-definition'>glue</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-695"></a><span class='hs-definition'>glue</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span>
-<a name="line-696"></a><span class='hs-definition'>glue</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>l</span>
-<a name="line-697"></a><span class='hs-definition'>glue</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>   
-<a name="line-698"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&gt;</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMax</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>m</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>r</span>
-<a name="line-699"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>       <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>r'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMin</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>m</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r'</span>
+<a name="line-666"></a><a name="join"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-667"></a>  Join 
+<a name="line-668"></a>--------------------------------------------------------------------}</span>
+<a name="line-669"></a><span class='hs-definition'>join</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-670"></a><span class='hs-definition'>join</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>insertMin</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span>
+<a name="line-671"></a><span class='hs-definition'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>insertMax</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span>
+<a name="line-672"></a><span class='hs-definition'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeL</span> <span class='hs-varid'>y</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeR</span> <span class='hs-varid'>z</span> <span class='hs-varid'>lz</span> <span class='hs-varid'>rz</span><span class='hs-layout'>)</span>
+<a name="line-673"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeL</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeR</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>lz</span><span class='hs-layout'>)</span> <span class='hs-varid'>rz</span>
+<a name="line-674"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeR</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeL</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>ly</span> <span class='hs-layout'>(</span><span class='hs-varid'>join</span> <span class='hs-varid'>x</span> <span class='hs-varid'>ry</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-675"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>             <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-676"></a>
+<a name="line-677"></a>
+<a name="line-678"></a><a name="insertMax"></a><span class='hs-comment'>-- insertMin and insertMax don't perform potentially expensive comparisons.</span>
+<a name="line-679"></a><span class='hs-definition'>insertMax</span><span class='hs-layout'>,</span><span class='hs-varid'>insertMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> 
+<a name="line-680"></a><span class='hs-definition'>insertMax</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-681"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-682"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>insertMax</span> <span class='hs-varid'>x</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-683"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>x</span>
+<a name="line-684"></a>             
+<a name="line-685"></a><a name="insertMin"></a><span class='hs-definition'>insertMin</span> <span class='hs-varid'>x</span> <span class='hs-varid'>t</span>
+<a name="line-686"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-687"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>insertMin</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-688"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>x</span>
+<a name="line-689"></a>             
+<a name="line-690"></a><a name="merge"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-691"></a>  [merge l r]: merges two trees.
+<a name="line-692"></a>--------------------------------------------------------------------}</span>
+<a name="line-693"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-694"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span>
+<a name="line-695"></a><span class='hs-definition'>merge</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>l</span>
+<a name="line-696"></a><span class='hs-definition'>merge</span> <span class='hs-varid'>l</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeL</span> <span class='hs-varid'>x</span> <span class='hs-varid'>lx</span> <span class='hs-varid'>rx</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-varid'>view</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>sizeR</span> <span class='hs-varid'>y</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span><span class='hs-layout'>)</span>
+<a name="line-697"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeL</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeR</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>merge</span> <span class='hs-varid'>l</span> <span class='hs-varid'>ly</span><span class='hs-layout'>)</span> <span class='hs-varid'>ry</span>
+<a name="line-698"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeR</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>sizeL</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>lx</span> <span class='hs-layout'>(</span><span class='hs-varid'>merge</span> <span class='hs-varid'>rx</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-699"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>glue</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 709
-<a name="line-701"></a>
-<a name="line-702"></a><span class='hs-comment'>-- | /O(log n)/. Delete and find the minimal element.</span>
-<a name="line-703"></a><span class='hs-comment'>-- </span>
-<a name="line-704"></a><span class='hs-comment'>-- &gt; deleteFindMin set = (findMin set, deleteMin set)</span>
-<a name="line-705"></a>
-<a name="line-706"></a><a name="deleteFindMin"></a><span class='hs-definition'>deleteFindMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-707"></a><span class='hs-definition'>deleteFindMin</span> <span class='hs-varid'>t</span> 
-<a name="line-708"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-709"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-710"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>   <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMin</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-711"></a>      <span class='hs-conid'>Tip</span>           <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"Set.deleteFindMin: can not return the minimal element of an empty set"</span><span class='hs-layout'>,</span> <span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
+<a name="line-701"></a><a name="glue"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-702"></a>  [glue l r]: glues two trees together.
+<a name="line-703"></a>  Assumes that [l] and [r] are already balanced with respect to each other.
+<a name="line-704"></a>--------------------------------------------------------------------}</span>
+<a name="line-705"></a><span class='hs-definition'>glue</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-706"></a><span class='hs-definition'>glue</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span>
+<a name="line-707"></a><span class='hs-definition'>glue</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>l</span>
+<a name="line-708"></a><span class='hs-definition'>glue</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>   
+<a name="line-709"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&gt;</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMax</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>m</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>r</span>
+<a name="line-710"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>       <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>r'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMin</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>m</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r'</span>
+<a name="line-711"></a>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 721
-<a name="line-713"></a><a name="deleteFindMax"></a><span class='hs-comment'>-- | /O(log n)/. Delete and find the maximal element.</span>
+<a name="line-713"></a><span class='hs-comment'>-- | /O(log n)/. Delete and find the minimal element.</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 723
-<a name="line-715"></a><span class='hs-comment'>-- &gt; deleteFindMax set = (findMax set, deleteMax set)</span>
-<a name="line-716"></a><span class='hs-definition'>deleteFindMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-717"></a><span class='hs-definition'>deleteFindMax</span> <span class='hs-varid'>t</span>
-<a name="line-718"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-719"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>l</span><span class='hs-layout'>)</span>
-<a name="line-720"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>   <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>r'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMax</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
-<a name="line-721"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"Set.deleteFindMax: can not return the maximal element of an empty set"</span><span class='hs-layout'>,</span> <span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
-<a name="line-722"></a>
-<a name="line-723"></a><a name="minView"></a><span class='hs-comment'>-- | /O(log n)/. Retrieves the minimal key of the set, and the set</span>
-<a name="line-724"></a><span class='hs-comment'>-- stripped of that element, or 'Nothing' if passed an empty set.</span>
-<a name="line-725"></a><span class='hs-definition'>minView</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-726"></a><span class='hs-definition'>minView</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-727"></a><span class='hs-definition'>minView</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteFindMin</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-728"></a>
-<a name="line-729"></a><a name="maxView"></a><span class='hs-comment'>-- | /O(log n)/. Retrieves the maximal key of the set, and the set</span>
-<a name="line-730"></a><span class='hs-comment'>-- stripped of that element, or 'Nothing' if passed an empty set.</span>
-<a name="line-731"></a><span class='hs-definition'>maxView</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-732"></a><span class='hs-definition'>maxView</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-733"></a><span class='hs-definition'>maxView</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteFindMax</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-734"></a>
-<a name="line-735"></a><a name="delta"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-736"></a>  [balance x l r] balances two trees with value x.
-<a name="line-737"></a>  The sizes of the trees should balance after decreasing the
-<a name="line-738"></a>  size of one of them. (a rotation).
+<a name="line-715"></a><span class='hs-comment'>-- &gt; deleteFindMin set = (findMin set, deleteMin set)</span>
+<a name="line-716"></a>
+<a name="line-717"></a><a name="deleteFindMin"></a><span class='hs-definition'>deleteFindMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-718"></a><span class='hs-definition'>deleteFindMin</span> <span class='hs-varid'>t</span> 
+<a name="line-719"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-720"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-721"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>   <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMin</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-722"></a>      <span class='hs-conid'>Tip</span>           <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.deleteFindMin: can not return the minimal element of an empty set"</span><span class='hs-layout'>,</span> <span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
+<a name="line-723"></a>
+<a name="line-724"></a><a name="deleteFindMax"></a><span class='hs-comment'>-- | /O(log n)/. Delete and find the maximal element.</span>
+<a name="line-725"></a><span class='hs-comment'>-- </span>
+<a name="line-726"></a><span class='hs-comment'>-- &gt; deleteFindMax set = (findMax set, deleteMax set)</span>
+<a name="line-727"></a><span class='hs-definition'>deleteFindMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-728"></a><span class='hs-definition'>deleteFindMax</span> <span class='hs-varid'>t</span>
+<a name="line-729"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-730"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>l</span><span class='hs-layout'>)</span>
+<a name="line-731"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>   <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>r'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>deleteFindMax</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>in</span> <span class='hs-layout'>(</span><span class='hs-varid'>xm</span><span class='hs-layout'>,</span><span class='hs-varid'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
+<a name="line-732"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>error</span> <span class='hs-str'>"Data.Set.Unboxed.deleteFindMax: can not return the maximal element of an empty set"</span><span class='hs-layout'>,</span> <span class='hs-varid'>tip</span><span class='hs-layout'>)</span>
+<a name="line-733"></a>
+<a name="line-734"></a><a name="minView"></a><span class='hs-comment'>-- | /O(log n)/. Retrieves the minimal key of the set, and the set</span>
+<a name="line-735"></a><span class='hs-comment'>-- stripped of that element, or 'Nothing' if passed an empty set.</span>
+<a name="line-736"></a><span class='hs-definition'>minView</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-737"></a><span class='hs-definition'>minView</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
+<a name="line-738"></a><span class='hs-definition'>minView</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteFindMin</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 748
-<a name="line-740"></a>  [delta] is the maximal relative difference between the sizes of
-<a name="line-741"></a>          two trees, it corresponds with the [w] in Adams' paper,
-<a name="line-742"></a>          or equivalently, [1/delta] corresponds with the $\alpha$
-<a name="line-743"></a>          in Nievergelt's paper. Adams shows that [delta] should
-<a name="line-744"></a>          be larger than 3.745 in order to garantee that the
-<a name="line-745"></a>          rotations can always restore balance.         
-<a name="line-746"></a>
-<a name="line-747"></a>  [ratio] is the ratio between an outer and inner sibling of the
-<a name="line-748"></a>          heavier subtree in an unbalanced setting. It determines
-<a name="line-749"></a>          whether a double or single rotation should be performed
-<a name="line-750"></a>          to restore balance. It is correspondes with the inverse
-<a name="line-751"></a>          of $\alpha$ in Adam's article.
-<a name="line-752"></a>
-<a name="line-753"></a>  Note that:
-<a name="line-754"></a>  - [delta] should be larger than 4.646 with a [ratio] of 2.
-<a name="line-755"></a>  - [delta] should be larger than 3.745 with a [ratio] of 1.534.
-<a name="line-756"></a>  
-<a name="line-757"></a>  - A lower [delta] leads to a more 'perfectly' balanced tree.
-<a name="line-758"></a>  - A higher [delta] performs less rebalancing.
-<a name="line-759"></a>
-<a name="line-760"></a>  - Balancing is automatic for random data and a balancing
-<a name="line-761"></a>    scheme is only necessary to avoid pathological worst cases.
-<a name="line-762"></a>    Almost any choice will do in practice
-<a name="line-763"></a>    
-<a name="line-764"></a>  - Allthough it seems that a rather large [delta] may perform better 
-<a name="line-765"></a>    than smaller one, measurements have shown that the smallest [delta]
-<a name="line-766"></a>    of 4 is actually the fastest on a wide range of operations. It
-<a name="line-767"></a>    especially improves performance on worst-case scenarios like
-<a name="line-768"></a>    a sequence of ordered insertions.
-<a name="line-769"></a>
-<a name="line-770"></a>  Note: in contrast to Adams' paper, we use a ratio of (at least) 2
-<a name="line-771"></a>  to decide whether a single or double rotation is needed. Allthough
-<a name="line-772"></a>  he actually proves that this ratio is needed to maintain the
-<a name="line-773"></a>  invariants, his implementation uses a (invalid) ratio of 1. 
-<a name="line-774"></a>  He is aware of the problem though since he has put a comment in his 
-<a name="line-775"></a>  original source code that he doesn't care about generating a 
-<a name="line-776"></a>  slightly inbalanced tree since it doesn't seem to matter in practice. 
-<a name="line-777"></a>  However (since we use quickcheck :-) we will stick to strictly balanced 
-<a name="line-778"></a>  trees.
-<a name="line-779"></a>--------------------------------------------------------------------}</span>
-<a name="line-780"></a><span class='hs-definition'>delta</span><span class='hs-layout'>,</span><span class='hs-varid'>ratio</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span>
-<a name="line-781"></a><span class='hs-definition'>delta</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>4</span>
-<a name="line-782"></a><a name="ratio"></a><span class='hs-definition'>ratio</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>2</span>
-<a name="line-783"></a>
-<a name="line-784"></a><a name="balance"></a><span class='hs-definition'>balance</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-785"></a><span class='hs-definition'>balance</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-786"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>sizeL</span> <span class='hs-varop'>+</span> <span class='hs-varid'>sizeR</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>1</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sizeX</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-787"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>sizeR</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeL</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>rotateL</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-788"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>sizeL</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>sizeR</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>rotateR</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-789"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>             <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sizeX</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-790"></a>  <span class='hs-keyword'>where</span>
-<a name="line-791"></a>    <span class='hs-varid'>sizeL</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>l</span>
-<a name="line-792"></a>    <span class='hs-varid'>sizeR</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span>
-<a name="line-793"></a>    <span class='hs-varid'>sizeX</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>sizeL</span> <span class='hs-varop'>+</span> <span class='hs-varid'>sizeR</span> <span class='hs-varop'>+</span> <span class='hs-num'>1</span>
-<a name="line-794"></a><span class='hs-comment'>{-# SPECIALIZE balance :: Int -&gt; USet Int -&gt; USet Int -&gt; USet Int #-}</span>
+<a name="line-740"></a><a name="maxView"></a><span class='hs-comment'>-- | /O(log n)/. Retrieves the maximal key of the set, and the set</span>
+<a name="line-741"></a><span class='hs-comment'>-- stripped of that element, or 'Nothing' if passed an empty set.</span>
+<a name="line-742"></a><span class='hs-definition'>maxView</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-743"></a><span class='hs-definition'>maxView</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
+<a name="line-744"></a><span class='hs-definition'>maxView</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>deleteFindMax</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-745"></a>
+<a name="line-746"></a><a name="delta"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-747"></a>  [balance x l r] balances two trees with value x.
+<a name="line-748"></a>  The sizes of the trees should balance after decreasing the
+<a name="line-749"></a>  size of one of them. (a rotation).
+<a name="line-750"></a>
+<a name="line-751"></a>  [delta] is the maximal relative difference between the sizes of
+<a name="line-752"></a>          two trees, it corresponds with the [w] in Adams' paper,
+<a name="line-753"></a>          or equivalently, [1/delta] corresponds with the $\alpha$
+<a name="line-754"></a>          in Nievergelt's paper. Adams shows that [delta] should
+<a name="line-755"></a>          be larger than 3.745 in order to garantee that the
+<a name="line-756"></a>          rotations can always restore balance.         
+<a name="line-757"></a>
+<a name="line-758"></a>  [ratio] is the ratio between an outer and inner sibling of the
+<a name="line-759"></a>          heavier subtree in an unbalanced setting. It determines
+<a name="line-760"></a>          whether a double or single rotation should be performed
+<a name="line-761"></a>          to restore balance. It is correspondes with the inverse
+<a name="line-762"></a>          of $\alpha$ in Adam's article.
+<a name="line-763"></a>
+<a name="line-764"></a>  Note that:
+<a name="line-765"></a>  - [delta] should be larger than 4.646 with a [ratio] of 2.
+<a name="line-766"></a>  - [delta] should be larger than 3.745 with a [ratio] of 1.534.
+<a name="line-767"></a>  
+<a name="line-768"></a>  - A lower [delta] leads to a more 'perfectly' balanced tree.
+<a name="line-769"></a>  - A higher [delta] performs less rebalancing.
+<a name="line-770"></a>
+<a name="line-771"></a>  - Balancing is automatic for random data and a balancing
+<a name="line-772"></a>    scheme is only necessary to avoid pathological worst cases.
+<a name="line-773"></a>    Almost any choice will do in practice
+<a name="line-774"></a>    
+<a name="line-775"></a>  - Allthough it seems that a rather large [delta] may perform better 
+<a name="line-776"></a>    than smaller one, measurements have shown that the smallest [delta]
+<a name="line-777"></a>    of 4 is actually the fastest on a wide range of operations. It
+<a name="line-778"></a>    especially improves performance on worst-case scenarios like
+<a name="line-779"></a>    a sequence of ordered insertions.
+<a name="line-780"></a>
+<a name="line-781"></a>  Note: in contrast to Adams' paper, we use a ratio of (at least) 2
+<a name="line-782"></a>  to decide whether a single or double rotation is needed. Allthough
+<a name="line-783"></a>  he actually proves that this ratio is needed to maintain the
+<a name="line-784"></a>  invariants, his implementation uses a (invalid) ratio of 1. 
+<a name="line-785"></a>  He is aware of the problem though since he has put a comment in his 
+<a name="line-786"></a>  original source code that he doesn't care about generating a 
+<a name="line-787"></a>  slightly inbalanced tree since it doesn't seem to matter in practice. 
+<a name="line-788"></a>  However (since we use quickcheck :-) we will stick to strictly balanced 
+<a name="line-789"></a>  trees.
+<a name="line-790"></a>--------------------------------------------------------------------}</span>
+<a name="line-791"></a><span class='hs-definition'>delta</span><span class='hs-layout'>,</span><span class='hs-varid'>ratio</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span>
+<a name="line-792"></a><span class='hs-definition'>delta</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>4</span>
+<a name="line-793"></a><a name="ratio"></a><span class='hs-definition'>ratio</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>2</span>
+<a name="line-794"></a>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 804
-<a name="line-796"></a><a name="rotateL"></a><span class='hs-comment'>-- rotate</span>
-<a name="line-797"></a><span class='hs-definition'>rotateL</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-798"></a><span class='hs-definition'>rotateL</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>viewBin</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>v</span><span class='hs-layout'>,</span> <span class='hs-varid'>ly</span><span class='hs-layout'>,</span> <span class='hs-varid'>ry</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-799"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>size</span> <span class='hs-varid'>ly</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>ratio</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>ry</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleL</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>v</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span>
-<a name="line-800"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>doubleL</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>v</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span>
-<a name="line-801"></a>
-<a name="line-802"></a><a name="rotateR"></a><span class='hs-definition'>rotateR</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-803"></a><span class='hs-definition'>rotateR</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>viewBin</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>v</span><span class='hs-layout'>,</span> <span class='hs-varid'>ly</span><span class='hs-layout'>,</span> <span class='hs-varid'>ry</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-804"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>size</span> <span class='hs-varid'>ry</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>ratio</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>ly</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleR</span> <span class='hs-varid'>x</span> <span class='hs-varid'>v</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span> <span class='hs-varid'>r</span>
-<a name="line-805"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>doubleR</span> <span class='hs-varid'>x</span> <span class='hs-varid'>v</span> <span class='hs-varid'>ly</span> <span class='hs-varid'>ry</span> <span class='hs-varid'>r</span>
+<a name="line-796"></a>
+<a name="line-797"></a><a name="foldlStrict"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-798"></a>  Utilities
+<a name="line-799"></a>--------------------------------------------------------------------}</span>
+<a name="line-800"></a><span class='hs-definition'>foldlStrict</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
+<a name="line-801"></a><span class='hs-definition'>foldlStrict</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>xs</span>
+<a name="line-802"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>of</span>
+<a name="line-803"></a>      <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>z</span>
+<a name="line-804"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>xx</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>z'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>in</span> <span class='hs-varid'>seq</span> <span class='hs-varid'>z'</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldlStrict</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z'</span> <span class='hs-varid'>xx</span><span class='hs-layout'>)</span>
+<a name="line-805"></a>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 815
-<a name="line-807"></a><a name="singleL"></a><span class='hs-definition'>singleL</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-808"></a><span class='hs-definition'>singleL</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t2</span> <span class='hs-varid'>t3</span> 
-<a name="line-809"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x2</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-varid'>t3</span>
-<a name="line-810"></a>
-<a name="line-811"></a><a name="singleR"></a><span class='hs-definition'>singleR</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-812"></a><span class='hs-definition'>singleR</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span> <span class='hs-varid'>t3</span> 
-<a name="line-813"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t2</span> <span class='hs-varid'>t3</span><span class='hs-layout'>)</span>
-<a name="line-814"></a>
-<a name="line-815"></a><a name="doubleL"></a><span class='hs-definition'>doubleL</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-816"></a><span class='hs-definition'>doubleL</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>x2</span> <span class='hs-layout'>(</span><span class='hs-varid'>viewBin</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>x3</span><span class='hs-layout'>,</span> <span class='hs-varid'>t2</span><span class='hs-layout'>,</span> <span class='hs-varid'>t3</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>t4</span> 
-<a name="line-817"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x3</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t3</span> <span class='hs-varid'>t4</span><span class='hs-layout'>)</span>
-<a name="line-818"></a>
-<a name="line-819"></a><a name="doubleR"></a><span class='hs-definition'>doubleR</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-820"></a><span class='hs-definition'>doubleR</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t1</span> <span class='hs-layout'>(</span><span class='hs-varid'>viewBin</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>x3</span><span class='hs-layout'>,</span> <span class='hs-varid'>t2</span><span class='hs-layout'>,</span> <span class='hs-varid'>t3</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>t4</span> 
-<a name="line-821"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin_</span> <span class='hs-varid'>x3</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x2</span> <span class='hs-varid'>t1</span> <span class='hs-varid'>t2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>bin_</span> <span class='hs-varid'>x1</span> <span class='hs-varid'>t3</span> <span class='hs-varid'>t4</span><span class='hs-layout'>)</span>
-<a name="line-822"></a>
-<a name="line-823"></a><a name="bin_"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-824"></a>  The bin constructor maintains the size of the tree
-<a name="line-825"></a>--------------------------------------------------------------------}</span>
-<a name="line-826"></a><span class='hs-definition'>bin_</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
-<a name="line-827"></a><span class='hs-definition'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-828"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>+</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-829"></a><span class='hs-comment'>{-# INLINE bin_ #-}</span>
-<a name="line-830"></a>
-<a name="line-831"></a>
-<a name="line-832"></a><a name="foldlStrict"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-833"></a>  Utilities
-<a name="line-834"></a>--------------------------------------------------------------------}</span>
-<a name="line-835"></a><span class='hs-definition'>foldlStrict</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-836"></a><span class='hs-definition'>foldlStrict</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>xs</span>
-<a name="line-837"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>of</span>
-<a name="line-838"></a>      <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>z</span>
-<a name="line-839"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-conop'>:</span><span class='hs-varid'>xx</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>z'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z</span> <span class='hs-varid'>x</span> <span class='hs-keyword'>in</span> <span class='hs-varid'>seq</span> <span class='hs-varid'>z'</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldlStrict</span> <span class='hs-varid'>f</span> <span class='hs-varid'>z'</span> <span class='hs-varid'>xx</span><span class='hs-layout'>)</span>
-<a name="line-840"></a>
-<a name="line-841"></a>
-<a name="line-842"></a><a name="showTree"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-843"></a>  Debugging
-<a name="line-844"></a>--------------------------------------------------------------------}</span>
-<a name="line-845"></a><span class='hs-comment'>-- | /O(n)/. Show the tree that implements the set. The tree is shown</span>
-<a name="line-846"></a><span class='hs-comment'>-- in a compressed, hanging format.</span>
-<a name="line-847"></a><span class='hs-definition'>showTree</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-848"></a><span class='hs-definition'>showTree</span> <span class='hs-varid'>s</span>
-<a name="line-849"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showTreeWith</span> <span class='hs-conid'>True</span> <span class='hs-conid'>False</span> <span class='hs-varid'>s</span>
+<a name="line-807"></a><a name="showTree"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-808"></a>  Debugging
+<a name="line-809"></a>--------------------------------------------------------------------}</span>
+<a name="line-810"></a><span class='hs-comment'>-- | /O(n)/. Show the tree that implements the set. The tree is shown</span>
+<a name="line-811"></a><span class='hs-comment'>-- in a compressed, hanging format.</span>
+<a name="line-812"></a><span class='hs-definition'>showTree</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
+<a name="line-813"></a><span class='hs-definition'>showTree</span> <span class='hs-varid'>s</span>
+<a name="line-814"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showTreeWith</span> <span class='hs-conid'>True</span> <span class='hs-conid'>False</span> <span class='hs-varid'>s</span>
+<a name="line-815"></a>
+<a name="line-816"></a>
+<a name="line-817"></a><a name="showTreeWith"></a><span class='hs-comment'>{- | /O(n)/. The expression (@showTreeWith hang wide map@) shows
+<a name="line-818"></a> the tree that implements the set. If @hang@ is
+<a name="line-819"></a> @True@, a /hanging/ tree is shown otherwise a rotated tree is shown. If
+<a name="line-820"></a> @wide@ is 'True', an extra wide version is shown.
+<a name="line-821"></a>
+<a name="line-822"></a>&gt; Set&gt; putStrLn $ showTreeWith True False $ fromDistinctAscList [1..5]
+<a name="line-823"></a>&gt; 4
+<a name="line-824"></a>&gt; +--2
+<a name="line-825"></a>&gt; |  +--1
+<a name="line-826"></a>&gt; |  +--3
+<a name="line-827"></a>&gt; +--5
+<a name="line-828"></a>&gt; 
+<a name="line-829"></a>&gt; Set&gt; putStrLn $ showTreeWith True True $ fromDistinctAscList [1..5]
+<a name="line-830"></a>&gt; 4
+<a name="line-831"></a>&gt; |
+<a name="line-832"></a>&gt; +--2
+<a name="line-833"></a>&gt; |  |
+<a name="line-834"></a>&gt; |  +--1
+<a name="line-835"></a>&gt; |  |
+<a name="line-836"></a>&gt; |  +--3
+<a name="line-837"></a>&gt; |
+<a name="line-838"></a>&gt; +--5
+<a name="line-839"></a>&gt; 
+<a name="line-840"></a>&gt; Set&gt; putStrLn $ showTreeWith False True $ fromDistinctAscList [1..5]
+<a name="line-841"></a>&gt; +--5
+<a name="line-842"></a>&gt; |
+<a name="line-843"></a>&gt; 4
+<a name="line-844"></a>&gt; |
+<a name="line-845"></a>&gt; |  +--3
+<a name="line-846"></a>&gt; |  |
+<a name="line-847"></a>&gt; +--2
+<a name="line-848"></a>&gt;    |
+<a name="line-849"></a>&gt;    +--1
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 859
-<a name="line-851"></a>
-<a name="line-852"></a><a name="showTreeWith"></a><span class='hs-comment'>{- | /O(n)/. The expression (@showTreeWith hang wide map@) shows
-<a name="line-853"></a> the tree that implements the set. If @hang@ is
-<a name="line-854"></a> @True@, a /hanging/ tree is shown otherwise a rotated tree is shown. If
-<a name="line-855"></a> @wide@ is 'True', an extra wide version is shown.
+<a name="line-851"></a>-}</span>
+<a name="line-852"></a><span class='hs-definition'>showTreeWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
+<a name="line-853"></a><span class='hs-definition'>showTreeWith</span> <span class='hs-varid'>hang</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>t</span>
+<a name="line-854"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>hang</span>      <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-str'>""</span>
+<a name="line-855"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-conid'>[]</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-str'>""</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 865
-<a name="line-857"></a>&gt; Set&gt; putStrLn $ showTreeWith True False $ fromDistinctAscList [1..5]
-<a name="line-858"></a>&gt; 4
-<a name="line-859"></a>&gt; +--2
-<a name="line-860"></a>&gt; |  +--1
-<a name="line-861"></a>&gt; |  +--3
-<a name="line-862"></a>&gt; +--5
-<a name="line-863"></a>&gt; 
-<a name="line-864"></a>&gt; Set&gt; putStrLn $ showTreeWith True True $ fromDistinctAscList [1..5]
-<a name="line-865"></a>&gt; 4
-<a name="line-866"></a>&gt; |
-<a name="line-867"></a>&gt; +--2
-<a name="line-868"></a>&gt; |  |
-<a name="line-869"></a>&gt; |  +--1
-<a name="line-870"></a>&gt; |  |
-<a name="line-871"></a>&gt; |  +--3
-<a name="line-872"></a>&gt; |
-<a name="line-873"></a>&gt; +--5
-<a name="line-874"></a>&gt; 
-<a name="line-875"></a>&gt; Set&gt; putStrLn $ showTreeWith False True $ fromDistinctAscList [1..5]
-<a name="line-876"></a>&gt; +--5
-<a name="line-877"></a>&gt; |
-<a name="line-878"></a>&gt; 4
-<a name="line-879"></a>&gt; |
-<a name="line-880"></a>&gt; |  +--3
-<a name="line-881"></a>&gt; |  |
-<a name="line-882"></a>&gt; +--2
-<a name="line-883"></a>&gt;    |
-<a name="line-884"></a>&gt;    +--1
-<a name="line-885"></a>
-<a name="line-886"></a>-}</span>
-<a name="line-887"></a><span class='hs-definition'>showTreeWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-888"></a><span class='hs-definition'>showTreeWith</span> <span class='hs-varid'>hang</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>t</span>
-<a name="line-889"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>hang</span>      <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-str'>""</span>
-<a name="line-890"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-conid'>[]</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-str'>""</span>
-<a name="line-891"></a>
-<a name="line-892"></a><a name="showsTree"></a><span class='hs-definition'>showsTree</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ShowS</span>
-<a name="line-893"></a><span class='hs-definition'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>lbars</span> <span class='hs-varid'>rbars</span> <span class='hs-varid'>t</span>
-<a name="line-894"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-895"></a>      <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"|\n"</span>
-<a name="line-896"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>
-<a name="line-897"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> 
-<a name="line-898"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-899"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withBar</span> <span class='hs-varid'>rbars</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>withEmpty</span> <span class='hs-varid'>rbars</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-varop'>.</span>
-<a name="line-900"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>rbars</span> <span class='hs-varop'>.</span>
-<a name="line-901"></a>             <span class='hs-varid'>showsBars</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> <span class='hs-varop'>.</span>
-<a name="line-902"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span>
-<a name="line-903"></a>             <span class='hs-varid'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withEmpty</span> <span class='hs-varid'>lbars</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>withBar</span> <span class='hs-varid'>lbars</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span>
-<a name="line-904"></a>
-<a name="line-905"></a><a name="showsTreeHang"></a><span class='hs-definition'>showsTreeHang</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ShowS</span>
-<a name="line-906"></a><span class='hs-definition'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> <span class='hs-varid'>t</span>
-<a name="line-907"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-908"></a>      <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"|\n"</span> 
-<a name="line-909"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> 
-<a name="line-910"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> 
-<a name="line-911"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-912"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> <span class='hs-varop'>.</span> 
-<a name="line-913"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span>
-<a name="line-914"></a>             <span class='hs-varid'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withBar</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varop'>.</span>
-<a name="line-915"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span>
-<a name="line-916"></a>             <span class='hs-varid'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withEmpty</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-857"></a><a name="showsTree"></a><span class='hs-definition'>showsTree</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ShowS</span>
+<a name="line-858"></a><span class='hs-definition'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>lbars</span> <span class='hs-varid'>rbars</span> <span class='hs-varid'>t</span>
+<a name="line-859"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-860"></a>      <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"|\n"</span>
+<a name="line-861"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span>
+<a name="line-862"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> 
+<a name="line-863"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-864"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withBar</span> <span class='hs-varid'>rbars</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>withEmpty</span> <span class='hs-varid'>rbars</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span> <span class='hs-varop'>.</span>
+<a name="line-865"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>rbars</span> <span class='hs-varop'>.</span>
+<a name="line-866"></a>             <span class='hs-varid'>showsBars</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> <span class='hs-varop'>.</span>
+<a name="line-867"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>lbars</span> <span class='hs-varop'>.</span>
+<a name="line-868"></a>             <span class='hs-varid'>showsTree</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withEmpty</span> <span class='hs-varid'>lbars</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>withBar</span> <span class='hs-varid'>lbars</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span>
+<a name="line-869"></a>
+<a name="line-870"></a><a name="showsTreeHang"></a><span class='hs-definition'>showsTreeHang</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ShowS</span>
+<a name="line-871"></a><span class='hs-definition'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> <span class='hs-varid'>t</span>
+<a name="line-872"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-873"></a>      <span class='hs-conid'>Tip</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"|\n"</span> 
+<a name="line-874"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> 
+<a name="line-875"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> 
+<a name="line-876"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-877"></a>          <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showsBars</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span> <span class='hs-varid'>shows</span> <span class='hs-varid'>x</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"\n"</span> <span class='hs-varop'>.</span> 
+<a name="line-878"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span>
+<a name="line-879"></a>             <span class='hs-varid'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withBar</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varop'>.</span>
+<a name="line-880"></a>             <span class='hs-varid'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> <span class='hs-varop'>.</span>
+<a name="line-881"></a>             <span class='hs-varid'>showsTreeHang</span> <span class='hs-varid'>wide</span> <span class='hs-layout'>(</span><span class='hs-varid'>withEmpty</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-882"></a>
+<a name="line-883"></a><a name="showWide"></a><span class='hs-definition'>showWide</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
+<a name="line-884"></a><span class='hs-definition'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> 
+<a name="line-885"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>wide</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showString</span> <span class='hs-layout'>(</span><span class='hs-varid'>concat</span> <span class='hs-layout'>(</span><span class='hs-varid'>reverse</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"|\n"</span> 
+<a name="line-886"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>id</span>
+<a name="line-887"></a>
+<a name="line-888"></a><a name="showsBars"></a><span class='hs-definition'>showsBars</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ShowS</span>
+<a name="line-889"></a><span class='hs-definition'>showsBars</span> <span class='hs-varid'>bars</span>
+<a name="line-890"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>bars</span> <span class='hs-keyword'>of</span>
+<a name="line-891"></a>      <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>id</span>
+<a name="line-892"></a>      <span class='hs-keyword'>_</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showString</span> <span class='hs-layout'>(</span><span class='hs-varid'>concat</span> <span class='hs-layout'>(</span><span class='hs-varid'>reverse</span> <span class='hs-layout'>(</span><span class='hs-varid'>tail</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-varid'>node</span>
+<a name="line-893"></a>
+<a name="line-894"></a><a name="node"></a><span class='hs-definition'>node</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span>
+<a name="line-895"></a><span class='hs-definition'>node</span>           <span class='hs-keyglyph'>=</span> <span class='hs-str'>"+--"</span>
+<a name="line-896"></a>
+<a name="line-897"></a><a name="withBar"></a><span class='hs-definition'>withBar</span><span class='hs-layout'>,</span> <span class='hs-varid'>withEmpty</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span>
+<a name="line-898"></a><span class='hs-definition'>withBar</span> <span class='hs-varid'>bars</span>   <span class='hs-keyglyph'>=</span> <span class='hs-str'>"|  "</span><span class='hs-conop'>:</span><span class='hs-varid'>bars</span>
+<a name="line-899"></a><a name="withEmpty"></a><span class='hs-definition'>withEmpty</span> <span class='hs-varid'>bars</span> <span class='hs-keyglyph'>=</span> <span class='hs-str'>"   "</span><span class='hs-conop'>:</span><span class='hs-varid'>bars</span>
+<a name="line-900"></a>
+<a name="line-901"></a><a name="valid"></a><span class='hs-comment'>{--------------------------------------------------------------------
+<a name="line-902"></a>  Assertions
+<a name="line-903"></a>--------------------------------------------------------------------}</span>
+<a name="line-904"></a><span class='hs-comment'>-- | /O(n)/. Test if the internal set structure is valid.</span>
+<a name="line-905"></a><span class='hs-definition'>valid</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-906"></a><span class='hs-definition'>valid</span> <span class='hs-varid'>t</span>
+<a name="line-907"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balanced</span> <span class='hs-varid'>t</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>ordered</span> <span class='hs-varid'>t</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>validsize</span> <span class='hs-varid'>t</span>
+<a name="line-908"></a>
+<a name="line-909"></a><a name="ordered"></a><span class='hs-definition'>ordered</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-910"></a><span class='hs-definition'>ordered</span> <span class='hs-varid'>t</span>
+<a name="line-911"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bounded</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>t</span>
+<a name="line-912"></a>  <span class='hs-keyword'>where</span>
+<a name="line-913"></a>    <span class='hs-varid'>bounded</span> <span class='hs-varid'>lo</span> <span class='hs-varid'>hi</span> <span class='hs-varid'>t'</span>
+<a name="line-914"></a>      <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t'</span> <span class='hs-keyword'>of</span>
+<a name="line-915"></a>          <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>lo</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>hi</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>bounded</span> <span class='hs-varid'>lo</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>bounded</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>hi</span> <span class='hs-varid'>r</span>
+<a name="line-916"></a>          <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 926
-<a name="line-918"></a><a name="showWide"></a><span class='hs-definition'>showWide</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Bool</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-919"></a><span class='hs-definition'>showWide</span> <span class='hs-varid'>wide</span> <span class='hs-varid'>bars</span> 
-<a name="line-920"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>wide</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showString</span> <span class='hs-layout'>(</span><span class='hs-varid'>concat</span> <span class='hs-layout'>(</span><span class='hs-varid'>reverse</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-str'>"|\n"</span> 
-<a name="line-921"></a>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>id</span>
-<a name="line-922"></a>
-<a name="line-923"></a><a name="showsBars"></a><span class='hs-definition'>showsBars</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ShowS</span>
-<a name="line-924"></a><span class='hs-definition'>showsBars</span> <span class='hs-varid'>bars</span>
-<a name="line-925"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>bars</span> <span class='hs-keyword'>of</span>
-<a name="line-926"></a>      <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>id</span>
-<a name="line-927"></a>      <span class='hs-keyword'>_</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>showString</span> <span class='hs-layout'>(</span><span class='hs-varid'>concat</span> <span class='hs-layout'>(</span><span class='hs-varid'>reverse</span> <span class='hs-layout'>(</span><span class='hs-varid'>tail</span> <span class='hs-varid'>bars</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>showString</span> <span class='hs-varid'>node</span>
-<a name="line-928"></a>
-<a name="line-929"></a><a name="node"></a><span class='hs-definition'>node</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span>
-<a name="line-930"></a><span class='hs-definition'>node</span>           <span class='hs-keyglyph'>=</span> <span class='hs-str'>"+--"</span>
-<a name="line-931"></a>
-<a name="line-932"></a><a name="withBar"></a><span class='hs-definition'>withBar</span><span class='hs-layout'>,</span> <span class='hs-varid'>withEmpty</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span>
-<a name="line-933"></a><span class='hs-definition'>withBar</span> <span class='hs-varid'>bars</span>   <span class='hs-keyglyph'>=</span> <span class='hs-str'>"|  "</span><span class='hs-conop'>:</span><span class='hs-varid'>bars</span>
-<a name="line-934"></a><a name="withEmpty"></a><span class='hs-definition'>withEmpty</span> <span class='hs-varid'>bars</span> <span class='hs-keyglyph'>=</span> <span class='hs-str'>"   "</span><span class='hs-conop'>:</span><span class='hs-varid'>bars</span>
+<a name="line-918"></a><a name="balanced"></a><span class='hs-definition'>balanced</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-919"></a><span class='hs-definition'>balanced</span> <span class='hs-varid'>t</span>
+<a name="line-920"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
+<a name="line-921"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>1</span> <span class='hs-varop'>||</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span>
+<a name="line-922"></a>                     <span class='hs-varid'>balanced</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>balanced</span> <span class='hs-varid'>r</span>
+<a name="line-923"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span>
+<a name="line-924"></a>
+<a name="line-925"></a><a name="validsize"></a><span class='hs-definition'>validsize</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-926"></a><span class='hs-definition'>validsize</span> <span class='hs-varid'>t</span>
+<a name="line-927"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>realsize</span> <span class='hs-varid'>t</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-928"></a>  <span class='hs-keyword'>where</span>
+<a name="line-929"></a>    <span class='hs-varid'>realsize</span> <span class='hs-varid'>t'</span>
+<a name="line-930"></a>      <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t'</span> <span class='hs-keyword'>of</span>
+<a name="line-931"></a>          <span class='hs-conid'>Bin</span> <span class='hs-varid'>sz</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-layout'>(</span><span class='hs-varid'>realsize</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>realsize</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>of</span>
+<a name="line-932"></a>                            <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-conid'>Just</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>n</span><span class='hs-varop'>+</span><span class='hs-varid'>m</span><span class='hs-varop'>+</span><span class='hs-num'>1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>sz</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>sz</span>
+<a name="line-933"></a>                            <span class='hs-keyword'>_</span>                <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Nothing</span>
+<a name="line-934"></a>          <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Just</span> <span class='hs-num'>0</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 944
-<a name="line-936"></a><a name="valid"></a><span class='hs-comment'>{--------------------------------------------------------------------
-<a name="line-937"></a>  Assertions
-<a name="line-938"></a>--------------------------------------------------------------------}</span>
-<a name="line-939"></a><span class='hs-comment'>-- | /O(n)/. Test if the internal set structure is valid.</span>
-<a name="line-940"></a><span class='hs-definition'>valid</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-941"></a><span class='hs-definition'>valid</span> <span class='hs-varid'>t</span>
-<a name="line-942"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>balanced</span> <span class='hs-varid'>t</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>ordered</span> <span class='hs-varid'>t</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>validsize</span> <span class='hs-varid'>t</span>
-<a name="line-943"></a>
-<a name="line-944"></a><a name="ordered"></a><span class='hs-definition'>ordered</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-945"></a><span class='hs-definition'>ordered</span> <span class='hs-varid'>t</span>
-<a name="line-946"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bounded</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varid'>t</span>
-<a name="line-947"></a>  <span class='hs-keyword'>where</span>
-<a name="line-948"></a>    <span class='hs-varid'>bounded</span> <span class='hs-varid'>lo</span> <span class='hs-varid'>hi</span> <span class='hs-varid'>t'</span>
-<a name="line-949"></a>      <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t'</span> <span class='hs-keyword'>of</span>
-<a name="line-950"></a>          <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>lo</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-layout'>(</span><span class='hs-varid'>hi</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>bounded</span> <span class='hs-varid'>lo</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>bounded</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>hi</span> <span class='hs-varid'>r</span>
-<a name="line-951"></a>          <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span>
-<a name="line-952"></a>
-<a name="line-953"></a><a name="balanced"></a><span class='hs-definition'>balanced</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-954"></a><span class='hs-definition'>balanced</span> <span class='hs-varid'>t</span>
-<a name="line-955"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>of</span>
-<a name="line-956"></a>      <span class='hs-conid'>Bin</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>1</span> <span class='hs-varop'>||</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>delta</span><span class='hs-varop'>*</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span>
-<a name="line-957"></a>                     <span class='hs-varid'>balanced</span> <span class='hs-varid'>l</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>balanced</span> <span class='hs-varid'>r</span>
-<a name="line-958"></a>      <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>True</span>
-<a name="line-959"></a>
-<a name="line-960"></a><a name="validsize"></a><span class='hs-definition'>validsize</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-961"></a><span class='hs-definition'>validsize</span> <span class='hs-varid'>t</span>
-<a name="line-962"></a>  <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>realsize</span> <span class='hs-varid'>t</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-963"></a>  <span class='hs-keyword'>where</span>
-<a name="line-964"></a>    <span class='hs-varid'>realsize</span> <span class='hs-varid'>t'</span>
-<a name="line-965"></a>      <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>view</span> <span class='hs-varid'>t'</span> <span class='hs-keyword'>of</span>
-<a name="line-966"></a>          <span class='hs-conid'>Bin</span> <span class='hs-varid'>sz</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-layout'>(</span><span class='hs-varid'>realsize</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span><span class='hs-varid'>realsize</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>of</span>
-<a name="line-967"></a>                            <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-conid'>Just</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>|</span> <span class='hs-varid'>n</span><span class='hs-varop'>+</span><span class='hs-varid'>m</span><span class='hs-varop'>+</span><span class='hs-num'>1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>sz</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>sz</span>
-<a name="line-968"></a>                            <span class='hs-keyword'>_</span>                <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Nothing</span>
-<a name="line-969"></a>          <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Just</span> <span class='hs-num'>0</span>
-<a name="line-970"></a>
-<a name="line-971"></a><span class='hs-comment'>{-
-<a name="line-972"></a>{--------------------------------------------------------------------
-<a name="line-973"></a>  Testing
-<a name="line-974"></a>--------------------------------------------------------------------}
-<a name="line-975"></a>testTree :: [Int] -&gt; USet Int
-<a name="line-976"></a>testTree xs   = fromList xs
-<a name="line-977"></a>test1 = testTree [1..20]
-<a name="line-978"></a>test2 = testTree [30,29..10]
-<a name="line-979"></a>test3 = testTree [1,4,6,89,2323,53,43,234,5,79,12,9,24,9,8,423,8,42,4,8,9,3]
-<a name="line-980"></a>
-<a name="line-981"></a>{--------------------------------------------------------------------
-<a name="line-982"></a>  QuickCheck
-<a name="line-983"></a>--------------------------------------------------------------------}
+<a name="line-936"></a><span class='hs-comment'>{-
+<a name="line-937"></a>{--------------------------------------------------------------------
+<a name="line-938"></a>  Testing
+<a name="line-939"></a>--------------------------------------------------------------------}
+<a name="line-940"></a>testTree :: [Int] -&gt; USet Int
+<a name="line-941"></a>testTree xs   = fromList xs
+<a name="line-942"></a>test1 = testTree [1..20]
+<a name="line-943"></a>test2 = testTree [30,29..10]
+<a name="line-944"></a>test3 = testTree [1,4,6,89,2323,53,43,234,5,79,12,9,24,9,8,423,8,42,4,8,9,3]
+<a name="line-945"></a>
+<a name="line-946"></a>{--------------------------------------------------------------------
+<a name="line-947"></a>  QuickCheck
+<a name="line-948"></a>--------------------------------------------------------------------}
+<a name="line-949"></a>
+<a name="line-950"></a>{-
+<a name="line-951"></a>qcheck prop
+<a name="line-952"></a>  = check config prop
+<a name="line-953"></a>  where
+<a name="line-954"></a>    config = Config
+<a name="line-955"></a>      { configMaxTest = 500
+<a name="line-956"></a>      , configMaxFail = 5000
+<a name="line-957"></a>      , configSize    = \n -&gt; (div n 2 + 3)
+<a name="line-958"></a>      , configEvery   = \n args -&gt; let s = show n in s ++ [ '\b' | _ &lt;- s ]
+<a name="line-959"></a>      }
+<a name="line-960"></a>-}
+<a name="line-961"></a>
+<a name="line-962"></a>
+<a name="line-963"></a>{--------------------------------------------------------------------
+<a name="line-964"></a>  Arbitrary, reasonably balanced trees
+<a name="line-965"></a>--------------------------------------------------------------------}
+<a name="line-966"></a>instance (US a, Enum a) =&gt; Arbitrary (USet a) where
+<a name="line-967"></a>  arbitrary = sized (arbtree 0 maxkey)
+<a name="line-968"></a>            where maxkey  = 10000
+<a name="line-969"></a>
+<a name="line-970"></a>arbtree :: (US a, Enum a) =&gt; Int -&gt; Int -&gt; Int -&gt; Gen (USet a)
+<a name="line-971"></a>arbtree lo hi n
+<a name="line-972"></a>  | n &lt;= 0        = return tip
+<a name="line-973"></a>  | lo &gt;= hi      = return tip
+<a name="line-974"></a>  | otherwise     = do{ i  &lt;- choose (lo,hi)
+<a name="line-975"></a>                      ; m  &lt;- choose (1,30)
+<a name="line-976"></a>                      ; let (ml,mr)  | m==(1::Int)= (1,2)
+<a name="line-977"></a>                                     | m==2       = (2,1)
+<a name="line-978"></a>                                     | m==3       = (1,1)
+<a name="line-979"></a>                                     | otherwise  = (2,2)
+<a name="line-980"></a>                      ; l  &lt;- arbtree lo (i-1) (n `div` ml)
+<a name="line-981"></a>                      ; r  &lt;- arbtree (i+1) hi (n `div` mr)
+<a name="line-982"></a>                      ; return (bin_ (toEnum i) l r)
+<a name="line-983"></a>                      }  
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 993
-<a name="line-985"></a>{-
-<a name="line-986"></a>qcheck prop
-<a name="line-987"></a>  = check config prop
-<a name="line-988"></a>  where
-<a name="line-989"></a>    config = Config
-<a name="line-990"></a>      { configMaxTest = 500
-<a name="line-991"></a>      , configMaxFail = 5000
-<a name="line-992"></a>      , configSize    = \n -&gt; (div n 2 + 3)
-<a name="line-993"></a>      , configEvery   = \n args -&gt; let s = show n in s ++ [ '\b' | _ &lt;- s ]
-<a name="line-994"></a>      }
-<a name="line-995"></a>-}
-<a name="line-996"></a>
-<a name="line-997"></a>
-<a name="line-998"></a>{--------------------------------------------------------------------
-<a name="line-999"></a>  Arbitrary, reasonably balanced trees
-<a name="line-1000"></a>--------------------------------------------------------------------}
-<a name="line-1001"></a>instance (US a, Enum a) =&gt; Arbitrary (USet a) where
-<a name="line-1002"></a>  arbitrary = sized (arbtree 0 maxkey)
-<a name="line-1003"></a>            where maxkey  = 10000
-<a name="line-1004"></a>
-<a name="line-1005"></a>arbtree :: (US a, Enum a) =&gt; Int -&gt; Int -&gt; Int -&gt; Gen (USet a)
-<a name="line-1006"></a>arbtree lo hi n
-<a name="line-1007"></a>  | n &lt;= 0        = return tip
-<a name="line-1008"></a>  | lo &gt;= hi      = return tip
-<a name="line-1009"></a>  | otherwise     = do{ i  &lt;- choose (lo,hi)
-<a name="line-1010"></a>                      ; m  &lt;- choose (1,30)
-<a name="line-1011"></a>                      ; let (ml,mr)  | m==(1::Int)= (1,2)
-<a name="line-1012"></a>                                     | m==2       = (2,1)
-<a name="line-1013"></a>                                     | m==3       = (1,1)
-<a name="line-1014"></a>                                     | otherwise  = (2,2)
-<a name="line-1015"></a>                      ; l  &lt;- arbtree lo (i-1) (n `div` ml)
-<a name="line-1016"></a>                      ; r  &lt;- arbtree (i+1) hi (n `div` mr)
-<a name="line-1017"></a>                      ; return (bin_ (toEnum i) l r)
-<a name="line-1018"></a>                      }  
-<a name="line-1019"></a>
-<a name="line-1020"></a>
-<a name="line-1021"></a>{--------------------------------------------------------------------
-<a name="line-1022"></a>  Valid tree's
-<a name="line-1023"></a>--------------------------------------------------------------------}
-<a name="line-1024"></a>forValid :: (US a, Enum a,Show a,Testable b) =&gt; (USet a -&gt; b) -&gt; Property
-<a name="line-1025"></a>forValid f
-<a name="line-1026"></a>  = forAll arbitrary $ \t -&gt; 
-<a name="line-1027"></a>--    classify (balanced t) "balanced" $
-<a name="line-1028"></a>    classify (size t == 0) "empty" $
-<a name="line-1029"></a>    classify (size t &gt; 0  &amp;&amp; size t &lt;= 10) "small" $
-<a name="line-1030"></a>    classify (size t &gt; 10 &amp;&amp; size t &lt;= 64) "medium" $
-<a name="line-1031"></a>    classify (size t &gt; 64) "large" $
-<a name="line-1032"></a>    balanced t ==&gt; f t
-<a name="line-1033"></a>
-<a name="line-1034"></a>forValidIntTree :: Testable a =&gt; (USet Int -&gt; a) -&gt; Property
-<a name="line-1035"></a>forValidIntTree f
-<a name="line-1036"></a>  = forValid f
-<a name="line-1037"></a>
-<a name="line-1038"></a>forValidUnitTree :: Testable a =&gt; (USet Int -&gt; a) -&gt; Property
-<a name="line-1039"></a>forValidUnitTree f
-<a name="line-1040"></a>  = forValid f
-<a name="line-1041"></a>
-<a name="line-1042"></a>
-<a name="line-1043"></a>prop_Valid 
-<a name="line-1044"></a>  = forValidUnitTree $ \t -&gt; valid t
+<a name="line-985"></a>
+<a name="line-986"></a>{--------------------------------------------------------------------
+<a name="line-987"></a>  Valid tree's
+<a name="line-988"></a>--------------------------------------------------------------------}
+<a name="line-989"></a>forValid :: (US a, Enum a,Show a,Testable b) =&gt; (USet a -&gt; b) -&gt; Property
+<a name="line-990"></a>forValid f
+<a name="line-991"></a>  = forAll arbitrary $ \t -&gt; 
+<a name="line-992"></a>--    classify (balanced t) "balanced" $
+<a name="line-993"></a>    classify (size t == 0) "empty" $
+<a name="line-994"></a>    classify (size t &gt; 0  &amp;&amp; size t &lt;= 10) "small" $
+<a name="line-995"></a>    classify (size t &gt; 10 &amp;&amp; size t &lt;= 64) "medium" $
+<a name="line-996"></a>    classify (size t &gt; 64) "large" $
+<a name="line-997"></a>    balanced t ==&gt; f t
+<a name="line-998"></a>
+<a name="line-999"></a>forValidIntTree :: Testable a =&gt; (USet Int -&gt; a) -&gt; Property
+<a name="line-1000"></a>forValidIntTree f
+<a name="line-1001"></a>  = forValid f
+<a name="line-1002"></a>
+<a name="line-1003"></a>forValidUnitTree :: Testable a =&gt; (USet Int -&gt; a) -&gt; Property
+<a name="line-1004"></a>forValidUnitTree f
+<a name="line-1005"></a>  = forValid f
+<a name="line-1006"></a>
+<a name="line-1007"></a>
+<a name="line-1008"></a>prop_Valid 
+<a name="line-1009"></a>  = forValidUnitTree $ \t -&gt; valid t
+<a name="line-1010"></a>
+<a name="line-1011"></a>{--------------------------------------------------------------------
+<a name="line-1012"></a>  Single, Insert, Delete
+<a name="line-1013"></a>--------------------------------------------------------------------}
+<a name="line-1014"></a>prop_Single :: Int -&gt; Bool
+<a name="line-1015"></a>prop_Single x
+<a name="line-1016"></a>  = (insert x empty == singleton x)
+<a name="line-1017"></a>
+<a name="line-1018"></a>prop_InsertValid :: Int -&gt; Property
+<a name="line-1019"></a>prop_InsertValid k
+<a name="line-1020"></a>  = forValidUnitTree $ \t -&gt; valid (insert k t)
+<a name="line-1021"></a>
+<a name="line-1022"></a>prop_InsertDelete :: Int -&gt; USet Int -&gt; Property
+<a name="line-1023"></a>prop_InsertDelete k t
+<a name="line-1024"></a>  = not (member k t) ==&gt; delete k (insert k t) == t
+<a name="line-1025"></a>
+<a name="line-1026"></a>prop_DeleteValid :: Int -&gt; Property
+<a name="line-1027"></a>prop_DeleteValid k
+<a name="line-1028"></a>  = forValidUnitTree $ \t -&gt; 
+<a name="line-1029"></a>    valid (delete k (insert k t))
+<a name="line-1030"></a>
+<a name="line-1031"></a>{--------------------------------------------------------------------
+<a name="line-1032"></a>  Balance
+<a name="line-1033"></a>--------------------------------------------------------------------}
+<a name="line-1034"></a>prop_Join :: Int -&gt; Property 
+<a name="line-1035"></a>prop_Join x
+<a name="line-1036"></a>  = forValidUnitTree $ \t -&gt;
+<a name="line-1037"></a>    let (l,r) = split x t
+<a name="line-1038"></a>    in valid (join x l r)
+<a name="line-1039"></a>
+<a name="line-1040"></a>prop_Merge :: Int -&gt; Property 
+<a name="line-1041"></a>prop_Merge x
+<a name="line-1042"></a>  = forValidUnitTree $ \t -&gt;
+<a name="line-1043"></a>    let (l,r) = split x t
+<a name="line-1044"></a>    in valid (merge l r)
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 1054
-<a name="line-1046"></a>{--------------------------------------------------------------------
-<a name="line-1047"></a>  Single, Insert, Delete
-<a name="line-1048"></a>--------------------------------------------------------------------}
-<a name="line-1049"></a>prop_Single :: Int -&gt; Bool
-<a name="line-1050"></a>prop_Single x
-<a name="line-1051"></a>  = (insert x empty == singleton x)
-<a name="line-1052"></a>
-<a name="line-1053"></a>prop_InsertValid :: Int -&gt; Property
-<a name="line-1054"></a>prop_InsertValid k
-<a name="line-1055"></a>  = forValidUnitTree $ \t -&gt; valid (insert k t)
-<a name="line-1056"></a>
-<a name="line-1057"></a>prop_InsertDelete :: Int -&gt; USet Int -&gt; Property
-<a name="line-1058"></a>prop_InsertDelete k t
-<a name="line-1059"></a>  = not (member k t) ==&gt; delete k (insert k t) == t
-<a name="line-1060"></a>
-<a name="line-1061"></a>prop_DeleteValid :: Int -&gt; Property
-<a name="line-1062"></a>prop_DeleteValid k
-<a name="line-1063"></a>  = forValidUnitTree $ \t -&gt; 
-<a name="line-1064"></a>    valid (delete k (insert k t))
-<a name="line-1065"></a>
-<a name="line-1066"></a>{--------------------------------------------------------------------
-<a name="line-1067"></a>  Balance
-<a name="line-1068"></a>--------------------------------------------------------------------}
-<a name="line-1069"></a>prop_Join :: Int -&gt; Property 
-<a name="line-1070"></a>prop_Join x
-<a name="line-1071"></a>  = forValidUnitTree $ \t -&gt;
-<a name="line-1072"></a>    let (l,r) = split x t
-<a name="line-1073"></a>    in valid (join x l r)
-<a name="line-1074"></a>
-<a name="line-1075"></a>prop_Merge :: Int -&gt; Property 
-<a name="line-1076"></a>prop_Merge x
-<a name="line-1077"></a>  = forValidUnitTree $ \t -&gt;
-<a name="line-1078"></a>    let (l,r) = split x t
-<a name="line-1079"></a>    in valid (merge l r)
-<a name="line-1080"></a>
-<a name="line-1081"></a>
-<a name="line-1082"></a>{--------------------------------------------------------------------
-<a name="line-1083"></a>  Union
-<a name="line-1084"></a>--------------------------------------------------------------------}
-<a name="line-1085"></a>prop_UnionValid :: Property
-<a name="line-1086"></a>prop_UnionValid
-<a name="line-1087"></a>  = forValidUnitTree $ \t1 -&gt;
-<a name="line-1088"></a>    forValidUnitTree $ \t2 -&gt;
-<a name="line-1089"></a>    valid (union t1 t2)
-<a name="line-1090"></a>
-<a name="line-1091"></a>prop_UnionInsert :: Int -&gt; USet Int -&gt; Bool
-<a name="line-1092"></a>prop_UnionInsert x t
-<a name="line-1093"></a>  = union t (singleton x) == insert x t
-<a name="line-1094"></a>
-<a name="line-1095"></a>prop_UnionAssoc :: USet Int -&gt; USet Int -&gt; USet Int -&gt; Bool
-<a name="line-1096"></a>prop_UnionAssoc t1 t2 t3
-<a name="line-1097"></a>  = union t1 (union t2 t3) == union (union t1 t2) t3
-<a name="line-1098"></a>
-<a name="line-1099"></a>prop_UnionComm :: USet Int -&gt; USet Int -&gt; Bool
-<a name="line-1100"></a>prop_UnionComm t1 t2
-<a name="line-1101"></a>  = (union t1 t2 == union t2 t1)
-<a name="line-1102"></a>
-<a name="line-1103"></a>
-<a name="line-1104"></a>prop_DiffValid
-<a name="line-1105"></a>  = forValidUnitTree $ \t1 -&gt;
-<a name="line-1106"></a>    forValidUnitTree $ \t2 -&gt;
-<a name="line-1107"></a>    valid (difference t1 t2)
-<a name="line-1108"></a>
-<a name="line-1109"></a>prop_Diff :: [Int] -&gt; [Int] -&gt; Bool
-<a name="line-1110"></a>prop_Diff xs ys
-<a name="line-1111"></a>  =  toAscList (difference (fromList xs) (fromList ys))
-<a name="line-1112"></a>    == List.sort ((List.\\) (nub xs)  (nub ys))
-<a name="line-1113"></a>
-<a name="line-1114"></a>prop_IntValid
-<a name="line-1115"></a>  = forValidUnitTree $ \t1 -&gt;
-<a name="line-1116"></a>    forValidUnitTree $ \t2 -&gt;
-<a name="line-1117"></a>    valid (intersection t1 t2)
-<a name="line-1118"></a>
-<a name="line-1119"></a>prop_Int :: [Int] -&gt; [Int] -&gt; Bool
-<a name="line-1120"></a>prop_Int xs ys
-<a name="line-1121"></a>  =  toAscList (intersection (fromList xs) (fromList ys))
-<a name="line-1122"></a>    == List.sort (nub ((List.intersect) (xs)  (ys)))
-<a name="line-1123"></a>
-<a name="line-1124"></a>{--------------------------------------------------------------------
-<a name="line-1125"></a>  Lists
-<a name="line-1126"></a>--------------------------------------------------------------------}
-<a name="line-1127"></a>prop_Ordered
-<a name="line-1128"></a>  = forAll (choose (5,100)) $ \n -&gt;
-<a name="line-1129"></a>    let xs = [0..n::Int]
-<a name="line-1130"></a>    in fromAscList xs == fromList xs
-<a name="line-1131"></a>
-<a name="line-1132"></a>prop_List :: [Int] -&gt; Bool
-<a name="line-1133"></a>prop_List xs
-<a name="line-1134"></a>  = (sort (nub xs) == toList (fromList xs))
-<a name="line-1135"></a>-}</span>
-<a name="line-1136"></a>
-<a name="line-1137"></a>
-<a name="line-1138"></a><a name="Boxed"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-1139"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-1140"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>BoxedBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-1141"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1142"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>BoxedBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1143"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1144"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>BoxedBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1145"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>BoxedBin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1146"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoxedTip</span>
-<a name="line-1147"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoxedBin</span>
-<a name="line-1148"></a>    <span class='hs-varid'>size</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>=</span><span class='hs-num'>0</span>
-<a name="line-1149"></a>    <span class='hs-varid'>size</span> <span class='hs-layout'>(</span><span class='hs-conid'>BoxedBin</span> <span class='hs-varid'>s</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-1150"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1151"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1152"></a>
-<a name="line-1153"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Char</span> <span class='hs-keyword'>where</span>
-<a name="line-1154"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>CharTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>CharBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Char</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span>
-<a name="line-1155"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>CharTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1156"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1157"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>CharTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1158"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1159"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharBin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1160"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>CharTip</span>
-<a name="line-1161"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>CharBin</span>
-<a name="line-1162"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>CharTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1163"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1164"></a>
-<a name="line-1165"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int</span> <span class='hs-keyword'>where</span>
-<a name="line-1166"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>IntBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span>
-<a name="line-1167"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1168"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1169"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1170"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1171"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntBin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1172"></a>    <span class='hs-varid'>size</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>0</span>
-<a name="line-1173"></a>    <span class='hs-varid'>size</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntBin</span> <span class='hs-varid'>s</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-1174"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntTip</span>
-<a name="line-1175"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntBin</span>
-<a name="line-1176"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1177"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1178"></a>
-<a name="line-1179"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Integer</span> <span class='hs-keyword'>where</span>
-<a name="line-1180"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Integer</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntegerTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>IntegerBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Integer</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Integer</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Integer</span><span class='hs-layout'>)</span>
-<a name="line-1181"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>IntegerTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1182"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntegerBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1183"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>IntegerTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1184"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntegerBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1185"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntegerBin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1186"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntegerTip</span>
-<a name="line-1187"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntegerBin</span>
-<a name="line-1188"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>IntegerTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1189"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1190"></a>
-<a name="line-1191"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int8</span> <span class='hs-keyword'>where</span>
-<a name="line-1192"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int8</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int8Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int8Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int8</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int8</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int8</span><span class='hs-layout'>)</span>
-<a name="line-1193"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1194"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int8Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1195"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Int8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1196"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int8Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1197"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int8Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1198"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int8Tip</span>
-<a name="line-1199"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int8Bin</span>
-<a name="line-1200"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Int8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1201"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1202"></a>
-<a name="line-1203"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int16</span> <span class='hs-keyword'>where</span>
-<a name="line-1204"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int16</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int16Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int16Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int16</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int16</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int16</span><span class='hs-layout'>)</span>
-<a name="line-1205"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1206"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int16Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1207"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Int16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1208"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int16Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1209"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int16Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1210"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int16Tip</span>
-<a name="line-1211"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int16Bin</span>
-<a name="line-1212"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Int16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1213"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
+<a name="line-1046"></a>
+<a name="line-1047"></a>{--------------------------------------------------------------------
+<a name="line-1048"></a>  Union
+<a name="line-1049"></a>--------------------------------------------------------------------}
+<a name="line-1050"></a>prop_UnionValid :: Property
+<a name="line-1051"></a>prop_UnionValid
+<a name="line-1052"></a>  = forValidUnitTree $ \t1 -&gt;
+<a name="line-1053"></a>    forValidUnitTree $ \t2 -&gt;
+<a name="line-1054"></a>    valid (union t1 t2)
+<a name="line-1055"></a>
+<a name="line-1056"></a>prop_UnionInsert :: Int -&gt; USet Int -&gt; Bool
+<a name="line-1057"></a>prop_UnionInsert x t
+<a name="line-1058"></a>  = union t (singleton x) == insert x t
+<a name="line-1059"></a>
+<a name="line-1060"></a>prop_UnionAssoc :: USet Int -&gt; USet Int -&gt; USet Int -&gt; Bool
+<a name="line-1061"></a>prop_UnionAssoc t1 t2 t3
+<a name="line-1062"></a>  = union t1 (union t2 t3) == union (union t1 t2) t3
+<a name="line-1063"></a>
+<a name="line-1064"></a>prop_UnionComm :: USet Int -&gt; USet Int -&gt; Bool
+<a name="line-1065"></a>prop_UnionComm t1 t2
+<a name="line-1066"></a>  = (union t1 t2 == union t2 t1)
+<a name="line-1067"></a>
+<a name="line-1068"></a>
+<a name="line-1069"></a>prop_DiffValid
+<a name="line-1070"></a>  = forValidUnitTree $ \t1 -&gt;
+<a name="line-1071"></a>    forValidUnitTree $ \t2 -&gt;
+<a name="line-1072"></a>    valid (difference t1 t2)
+<a name="line-1073"></a>
+<a name="line-1074"></a>prop_Diff :: [Int] -&gt; [Int] -&gt; Bool
+<a name="line-1075"></a>prop_Diff xs ys
+<a name="line-1076"></a>  =  toAscList (difference (fromList xs) (fromList ys))
+<a name="line-1077"></a>    == List.sort ((List.\\) (nub xs)  (nub ys))
+<a name="line-1078"></a>
+<a name="line-1079"></a>prop_IntValid
+<a name="line-1080"></a>  = forValidUnitTree $ \t1 -&gt;
+<a name="line-1081"></a>    forValidUnitTree $ \t2 -&gt;
+<a name="line-1082"></a>    valid (intersection t1 t2)
+<a name="line-1083"></a>
+<a name="line-1084"></a>prop_Int :: [Int] -&gt; [Int] -&gt; Bool
+<a name="line-1085"></a>prop_Int xs ys
+<a name="line-1086"></a>  =  toAscList (intersection (fromList xs) (fromList ys))
+<a name="line-1087"></a>    == List.sort (nub ((List.intersect) (xs)  (ys)))
+<a name="line-1088"></a>
+<a name="line-1089"></a>{--------------------------------------------------------------------
+<a name="line-1090"></a>  Lists
+<a name="line-1091"></a>--------------------------------------------------------------------}
+<a name="line-1092"></a>prop_Ordered
+<a name="line-1093"></a>  = forAll (choose (5,100)) $ \n -&gt;
+<a name="line-1094"></a>    let xs = [0..n::Int]
+<a name="line-1095"></a>    in fromAscList xs == fromList xs
+<a name="line-1096"></a>
+<a name="line-1097"></a>prop_List :: [Int] -&gt; Bool
+<a name="line-1098"></a>prop_List xs
+<a name="line-1099"></a>  = (sort (nub xs) == toList (fromList xs))
+<a name="line-1100"></a>-}</span>
+<a name="line-1101"></a>
+<a name="line-1102"></a><a name="insert"></a><span class='hs-comment'>-- | /O(log n)/. Insert an element in a set.</span>
+<a name="line-1103"></a><span class='hs-comment'>-- If the set already contains an element equal to the given value,</span>
+<a name="line-1104"></a><span class='hs-comment'>-- it is replaced with the new value.</span>
+<a name="line-1105"></a><span class='hs-definition'>insert</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>US</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-1106"></a><span class='hs-definition'>insert</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>go</span> <span class='hs-keyword'>where</span>
+<a name="line-1107"></a>    <span class='hs-varid'>cmpx</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-varid'>x</span>
+<a name="line-1108"></a>    <span class='hs-varid'>go</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewk</span> <span class='hs-layout'>(</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-keyglyph'>\</span><span class='hs-varid'>sz</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cmpx</span> <span class='hs-varid'>y</span> <span class='hs-keyword'>of</span>
+<a name="line-1109"></a>        <span class='hs-conid'>LT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-1110"></a>        <span class='hs-conid'>GT</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>balance</span> <span class='hs-varid'>y</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>go</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-1111"></a>        <span class='hs-conid'>EQ</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>bin</span> <span class='hs-varid'>sz</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1112"></a><span class='hs-comment'>{-
+<a name="line-1113"></a>{-# SPECIALIZE INLINE insert :: Int -&gt; USet Int -&gt; USet Int #-}
+<a name="line-1114"></a>{-# SPECIALIZE INLINE insert :: Integer -&gt; USet Integer -&gt; USet Integer #-}
+<a name="line-1115"></a>{-# SPECIALIZE INLINE insert :: Char -&gt; USet Char -&gt; USet Char #-}
+<a name="line-1116"></a>{-# SPECIALIZE INLINE insert :: Int8 -&gt; USet Int8 -&gt; USet Int8 #-}
+<a name="line-1117"></a>{-# SPECIALIZE INLINE insert :: Int16 -&gt; USet Int16 -&gt; USet Int16 #-}
+<a name="line-1118"></a>{-# SPECIALIZE INLINE insert :: Int32 -&gt; USet Int32 -&gt; USet Int32 #-}
+<a name="line-1119"></a>{-# SPECIALIZE INLINE insert :: Int64 -&gt; USet Int64 -&gt; USet Int64 #-}
+<a name="line-1120"></a>{-# SPECIALIZE INLINE insert :: Word8 -&gt; USet Word8 -&gt; USet Word8 #-}
+<a name="line-1121"></a>{-# SPECIALIZE INLINE insert :: Word16 -&gt; USet Word16 -&gt; USet Word16 #-}
+<a name="line-1122"></a>{-# SPECIALIZE INLINE insert :: Word32 -&gt; USet Word32 -&gt; USet Word32 #-}
+<a name="line-1123"></a>{-# SPECIALIZE INLINE insert :: Word64 -&gt; USet Word64 -&gt; USet Word64 #-}
+<a name="line-1124"></a>{-# SPECIALIZE INLINE insert :: Double -&gt; USet Double -&gt; USet Double #-}
+<a name="line-1125"></a>{-# SPECIALIZE INLINE insert :: Float -&gt; USet Float -&gt; USet Float #-}
+<a name="line-1126"></a>{-# SPECIALIZE INLINE insert :: (Int,Int)-&gt; USet (Int,Int) -&gt; USet (Int,Int) #-}
+<a name="line-1127"></a>-}</span>
+<a name="line-1128"></a>
+<a name="line-1129"></a><a name="bin_"></a><span class='hs-definition'>bin_</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>US</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>USet</span> <span class='hs-varid'>a</span>
+<a name="line-1130"></a><span class='hs-definition'>bin_</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bin</span> <span class='hs-layout'>(</span><span class='hs-varid'>size</span> <span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>size</span> <span class='hs-varid'>r</span> <span class='hs-varop'>+</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1131"></a><span class='hs-comment'>{-
+<a name="line-1132"></a>{-# SPECIALIZE INLINE bin_ :: Int -&gt; USet Int -&gt; USet Int -&gt; USet Int #-}
+<a name="line-1133"></a>{-# SPECIALIZE INLINE bin_ :: Integer -&gt; USet Integer -&gt; USet Integer -&gt; USet Integer #-}
+<a name="line-1134"></a>{-# SPECIALIZE INLINE bin_ :: Char -&gt; USet Char -&gt; USet Char -&gt; USet Char #-}
+<a name="line-1135"></a>{-# SPECIALIZE INLINE bin_ :: Int8 -&gt; USet Int8 -&gt; USet Int8 -&gt; USet Int8 #-}
+<a name="line-1136"></a>{-# SPECIALIZE INLINE bin_ :: Int16 -&gt; USet Int16 -&gt; USet Int16 -&gt; USet Int16 #-}
+<a name="line-1137"></a>{-# SPECIALIZE INLINE bin_ :: Int32 -&gt; USet Int32 -&gt; USet Int32 -&gt; USet Int32 #-}
+<a name="line-1138"></a>{-# SPECIALIZE INLINE bin_ :: Int64 -&gt; USet Int64 -&gt; USet Int64 -&gt; USet Int64 #-}
+<a name="line-1139"></a>{-# SPECIALIZE INLINE bin_ :: Word8 -&gt; USet Word8 -&gt; USet Word8 -&gt; USet Word8 #-}
+<a name="line-1140"></a>{-# SPECIALIZE INLINE bin_ :: Word16 -&gt; USet Word16 -&gt; USet Word16 -&gt; USet Word16 #-}
+<a name="line-1141"></a>{-# SPECIALIZE INLINE bin_ :: Word32 -&gt; USet Word32 -&gt; USet Word32 -&gt; USet Word32 #-}
+<a name="line-1142"></a>{-# SPECIALIZE INLINE bin_ :: Word64 -&gt; USet Word64 -&gt; USet Word64 -&gt; USet Word64 #-}
+<a name="line-1143"></a>{-# SPECIALIZE INLINE bin_ :: Double -&gt; USet Double -&gt; USet Double -&gt; USet Double #-}
+<a name="line-1144"></a>{-# SPECIALIZE INLINE bin_ :: Float -&gt; USet Float -&gt; USet Float -&gt; USet Float #-}
+<a name="line-1145"></a>{-# SPECIALIZE INLINE bin_ :: (Int,Int)-&gt; USet (Int,Int) -&gt; USet (Int,Int) -&gt; USet (Int,Int) #-}
+<a name="line-1146"></a>-}</span>
+<a name="line-1147"></a>
+<a name="line-1148"></a><a name="Boxed"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-1149"></a>
+<a name="line-1150"></a><span class='hs-comment'>{-- everything below this point AUTOMATICALLY GENERATED by instances.pl. Don't edit by hand! --}</span>
+<a name="line-1151"></a>
+<a name="line-1152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int</span> <span class='hs-keyword'>where</span>
+<a name="line-1153"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>IntBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span>
+<a name="line-1154"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>IntTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1155"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1156"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntTip</span>
+<a name="line-1157"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntBin</span>
+<a name="line-1158"></a>
+<a name="line-1159"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Char</span> <span class='hs-keyword'>where</span>
+<a name="line-1160"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>CharTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>CharBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Char</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span>
+<a name="line-1161"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>CharTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1162"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1163"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>CharTip</span>
+<a name="line-1164"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>CharBin</span>
+<a name="line-1165"></a>
+<a name="line-1166"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int8</span> <span class='hs-keyword'>where</span>
+<a name="line-1167"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int8</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int8Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int8Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int8</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int8</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int8</span><span class='hs-layout'>)</span>
+<a name="line-1168"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1169"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int8Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1170"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int8Tip</span>
+<a name="line-1171"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int8Bin</span>
+<a name="line-1172"></a>
+<a name="line-1173"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int16</span> <span class='hs-keyword'>where</span>
+<a name="line-1174"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int16</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int16Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int16Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int16</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int16</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int16</span><span class='hs-layout'>)</span>
+<a name="line-1175"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1176"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int16Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1177"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int16Tip</span>
+<a name="line-1178"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int16Bin</span>
+<a name="line-1179"></a>
+<a name="line-1180"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int32</span> <span class='hs-keyword'>where</span>
+<a name="line-1181"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int32</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int32Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int32Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int32</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int32</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int32</span><span class='hs-layout'>)</span>
+<a name="line-1182"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1183"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int32Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1184"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int32Tip</span>
+<a name="line-1185"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int32Bin</span>
+<a name="line-1186"></a>
+<a name="line-1187"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int64</span> <span class='hs-keyword'>where</span>
+<a name="line-1188"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int64</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int64Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int64Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int64</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int64</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int64</span><span class='hs-layout'>)</span>
+<a name="line-1189"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1190"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int64Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1191"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int64Tip</span>
+<a name="line-1192"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int64Bin</span>
+<a name="line-1193"></a>
+<a name="line-1194"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word8</span> <span class='hs-keyword'>where</span>
+<a name="line-1195"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word8Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word8</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-1196"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1197"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1198"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8Tip</span>
+<a name="line-1199"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8Bin</span>
+<a name="line-1200"></a>
+<a name="line-1201"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word16</span> <span class='hs-keyword'>where</span>
+<a name="line-1202"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word16</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word16Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word16Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word16</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word16</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word16</span><span class='hs-layout'>)</span>
+<a name="line-1203"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1204"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word16Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1205"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word16Tip</span>
+<a name="line-1206"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word16Bin</span>
+<a name="line-1207"></a>
+<a name="line-1208"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word32</span> <span class='hs-keyword'>where</span>
+<a name="line-1209"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word32</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word32Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word32Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word32</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word32</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word32</span><span class='hs-layout'>)</span>
+<a name="line-1210"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1211"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word32Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1212"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word32Tip</span>
+<a name="line-1213"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word32Bin</span>
hunk ./doc/html/unboxed-containers/src/Data-Set-Unboxed.html 1223
-<a name="line-1215"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int32</span> <span class='hs-keyword'>where</span>
-<a name="line-1216"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int32</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int32Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int32Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int32</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int32</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int32</span><span class='hs-layout'>)</span>
-<a name="line-1217"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1218"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int32Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1219"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Int32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1220"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int32Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1221"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int32Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1222"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int32Tip</span>
-<a name="line-1223"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int32Bin</span>
-<a name="line-1224"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Int32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1225"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1226"></a>
-<a name="line-1227"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Int64</span> <span class='hs-keyword'>where</span>
-<a name="line-1228"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Int64</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int64Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Int64Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int64</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int64</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Int64</span><span class='hs-layout'>)</span>
-<a name="line-1229"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Int64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1230"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int64Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1231"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Int64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1232"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int64Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1233"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int64Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1234"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int64Tip</span>
-<a name="line-1235"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int64Bin</span>
-<a name="line-1236"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Int64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1237"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1238"></a>
-<a name="line-1239"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word8</span> <span class='hs-keyword'>where</span>
-<a name="line-1240"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word8Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word8</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-1241"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1242"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1243"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Word8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1244"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1245"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1246"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8Tip</span>
-<a name="line-1247"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8Bin</span>
-<a name="line-1248"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Word8Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1249"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1250"></a>
-<a name="line-1251"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word16</span> <span class='hs-keyword'>where</span>
-<a name="line-1252"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word16</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word16Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word16Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word16</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word16</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word16</span><span class='hs-layout'>)</span>
-<a name="line-1253"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1254"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word16Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1255"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Word16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1256"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word16Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1257"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word16Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1258"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word16Bin</span>
-<a name="line-1259"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word16Tip</span>
-<a name="line-1260"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Word16Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1261"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1262"></a>
-<a name="line-1263"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word32</span> <span class='hs-keyword'>where</span>
-<a name="line-1264"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word32</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word32Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word32Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word32</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word32</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word32</span><span class='hs-layout'>)</span>
-<a name="line-1265"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1266"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word32Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1267"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Word32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1268"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word32Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1269"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word32Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1270"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word32Tip</span>
-<a name="line-1271"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word32Bin</span>
-<a name="line-1272"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Word32Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1273"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1274"></a>
-<a name="line-1275"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word64</span> <span class='hs-keyword'>where</span>
-<a name="line-1276"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word64</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word64Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word64Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word64</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word64</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word64</span><span class='hs-layout'>)</span>
-<a name="line-1277"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1278"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word64Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1279"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Word64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1280"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word64Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1281"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word64Bin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1282"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word64Tip</span>
-<a name="line-1283"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word64Bin</span>
-<a name="line-1284"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>Word64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1285"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1286"></a>
-<a name="line-1287"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Double</span> <span class='hs-keyword'>where</span>
-<a name="line-1288"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Double</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>DoubleTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>DoubleBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Double</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Double</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Double</span><span class='hs-layout'>)</span>
-<a name="line-1289"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>DoubleTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1290"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>DoubleBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1291"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>DoubleTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1292"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>DoubleBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1293"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>DoubleBin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1294"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>DoubleTip</span>
-<a name="line-1295"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>DoubleBin</span>
-<a name="line-1296"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>DoubleTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1297"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1298"></a>
-<a name="line-1299"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Float</span> <span class='hs-keyword'>where</span>
-<a name="line-1300"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Float</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FloatTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>FloatBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Float</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Float</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Float</span><span class='hs-layout'>)</span>
-<a name="line-1301"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>FloatTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
-<a name="line-1302"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>FloatBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1303"></a>    <span class='hs-varid'>viewk</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>FloatTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> 
-<a name="line-1304"></a>    <span class='hs-varid'>viewk</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>FloatBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
-<a name="line-1305"></a>    <span class='hs-varid'>viewBin</span> <span class='hs-layout'>(</span><span class='hs-conid'>FloatBin</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-cpp'>#</span> <span class='hs-varid'>i</span><span class='hs-layout'>,</span> <span class='hs-varid'>l</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-cpp'>#</span><span class='hs-layout'>)</span>
-<a name="line-1306"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FloatTip</span>
-<a name="line-1307"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FloatBin</span>
-<a name="line-1308"></a>    <span class='hs-varid'>null</span> <span class='hs-conid'>FloatTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-1309"></a>    <span class='hs-varid'>null</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-1310"></a>
+<a name="line-1215"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Word64</span> <span class='hs-keyword'>where</span>
+<a name="line-1216"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Word64</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word64Tip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Word64Bin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word64</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word64</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Word64</span><span class='hs-layout'>)</span>
+<a name="line-1217"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>Word64Tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1218"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word64Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1219"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word64Tip</span>
+<a name="line-1220"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word64Bin</span>
+<a name="line-1221"></a>
+<a name="line-1222"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Double</span> <span class='hs-keyword'>where</span>
+<a name="line-1223"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Double</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>DoubleTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>DoubleBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Double</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Double</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Double</span><span class='hs-layout'>)</span>
+<a name="line-1224"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>DoubleTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1225"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>DoubleBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1226"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>DoubleTip</span>
+<a name="line-1227"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>DoubleBin</span>
+<a name="line-1228"></a>
+<a name="line-1229"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Float</span> <span class='hs-keyword'>where</span>
+<a name="line-1230"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Float</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FloatTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>FloatBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Float</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Float</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Float</span><span class='hs-layout'>)</span>
+<a name="line-1231"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>FloatTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1232"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>FloatBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1233"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FloatTip</span>
+<a name="line-1234"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FloatBin</span>
+<a name="line-1235"></a>
+<a name="line-1236"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-conid'>Integer</span> <span class='hs-keyword'>where</span>
+<a name="line-1237"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-conid'>Integer</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntegerTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>IntegerBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Integer</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Integer</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-conid'>Integer</span><span class='hs-layout'>)</span>
+<a name="line-1238"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>IntegerTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1239"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntegerBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1240"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntegerTip</span>
+<a name="line-1241"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntegerBin</span>
+<a name="line-1242"></a>
+<a name="line-1243"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>US</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-1244"></a>    <span class='hs-keyword'>data</span> <span class='hs-conid'>USet</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>BoxedBin</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Size</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>USet</span> <span class='hs-layout'>(</span><span class='hs-conid'>Boxed</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-1245"></a>    <span class='hs-varid'>view</span> <span class='hs-conid'>BoxedTip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tip</span>
+<a name="line-1246"></a>    <span class='hs-varid'>view</span> <span class='hs-layout'>(</span><span class='hs-conid'>BoxedBin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Bin</span> <span class='hs-varid'>s</span> <span class='hs-varid'>i</span> <span class='hs-varid'>l</span> <span class='hs-varid'>r</span>
+<a name="line-1247"></a>    <span class='hs-varid'>tip</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoxedTip</span>
+<a name="line-1248"></a>    <span class='hs-varid'>bin</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoxedBin</span>
+<a name="line-1249"></a>
binary ./doc/html/unboxed-containers/unboxed-containers.haddock
oldhex
*0d0cface0004000000000000561a00000000000050cc2b00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000001000000000000000d0000000000000000
*0000000000000001000000000000000e0000000000000000000000000000000100000000000000
*0f0000000000000000000000000000000100000000000000100000000000000000000000000000
*000100000000000000110000000000000000000000000000000100000000000000120000000000
*000000000000000000000100000000000000130000000000000000000000000000000100000000
*000000140000000000000000000000000000000100000000000000150000000000000000000000
*000000000100000000000000160000000000000000000000000000000100000000000000170000
*000000000000000000000000000100000000000000180000000000000000000000000000000100
*0000000000001900000000000000000000000000000001000000000000001a0000000000000000
*0000000000000001000000000000001b0000000000000000000000000000000100000000000000
*1c00000000000000000000000000000001000000000000001d0000000000000000000000000000
*0001000000000000001e00000000000000000000000000000001000000000000001f0000000000
*000000000000000000000100000000000000200000000000000000000000000000000100000000
*000000210000000000000000000000000000000100000000000000220000000000000000000000
*000000000100000000000000230000000000000000000000000000000100000000000000240000
*000000000000000000000000000100000000000000250000000000000000000000000000000100
*000000000000260000000000000000000000000000000100000000000000270000000000000000
*000000000000000100000000000000280000000000000000000000000000000100000000000000
*2900000000000000000000000000000001000000000000002a0000000000000000000000000000
*00010100000000000000000000000000000001000000002f000000000000002b03022e00000045
*00000078000000740000007200000061000000630000007400000020000000610000006e000000
*64000000200000007200000065000000620000006f000000780000002000000074000000680000
*0065000000200000007300000070000000650000006300000069000000610000006c0000006900
*00007a0000006500000064000000200000006e0000006f00000064000000650000002000000066
*0000006f000000720000006d00000061000000740000000a000000000000002c03022c00000041
*00000070000000700000006c000000790000002000000074000000680000006500000020000000
*7600000069000000650000007700000020000000740000006f0000002000000074000000690000
*007000000020000000610000006e000000640000002000000062000000690000006e0000002000
*0000630000006f0000006e00000074000000690000006e00000075000000610000007400000069
*0000006f0000006e000000730000000a000000000000002d030236000000560000006900000065
*00000077000000200000006a000000750000007300000074000000200000007400000068000000
*650000002000000076000000610000006c000000750000006500000020000000610000006e0000
*0064000000200000006c00000065000000660000007400000020000000610000006e0000006400
*000020000000720000006900000067000000680000007400000020000000630000006800000069
*0000006c00000064000000200000006f0000006600000020000000610000002000000062000000
*690000006e0000000a000000000000000403010602040000004f00000028000000310000002902
*250000002e00000020000000540000006800000065000000200000006e000000750000006d0000
*00620000006500000072000000200000006f0000006600000020000000650000006c0000006500
*00006d000000650000006e000000740000007300000020000000690000006e0000002000000074
*0000006800000065000000200000007300000065000000740000002e0000000a00000000000000
*0503010602040000004f00000028000000310000002902190000002e0000002000000049000000
*730000002000000074000000680000006900000073000000200000007400000068000000650000
*0020000000650000006d0000007000000074000000790000002000000073000000650000007400
*00003f0000000a000000000000002e030216000000530000006d00000061000000720000007400
*00002000000074000000690000007000000020000000630000006f0000006e0000007300000074
*000000720000007500000063000000740000006f000000720000000a000000000000002f030216
*000000530000006d0000006100000072000000740000002000000062000000690000006e000000
*20000000630000006f0000006e0000007300000074000000720000007500000063000000740000
*006f000000720000000a0000000000000030030102100000004100000020000000730000006500
*000074000000200000006f000000660000002000000076000000610000006c0000007500000065
*0000007300000020010702010000006102020000002e0000000a00000000000000060301060206
*0000004f000000280000006e0000002b0000006d000000290102060000002e0000002000000053
*000000650000006500000020010401000000000000000015000000000000000000000000000000
*0102020000002e0000000a000000000000000703010602080000004f000000280000006c000000
*6f00000067000000200000006e00000029021d0000002e00000020000000490000007300000020
*00000074000000680000006500000020000000650000006c000000650000006d00000065000000
*6e0000007400000020000000690000006e00000020000000740000006800000065000000200000
*007300000065000000740000003f0000000a000000000000000803010602080000004f00000028
*0000006c0000006f00000067000000200000006e0000002902210000002e000000200000004900
*0000730000002000000074000000680000006500000020000000650000006c000000650000006d
*000000650000006e00000074000000200000006e0000006f000000740000002000000069000000
*6e00000020000000740000006800000065000000200000007300000065000000740000003f0000
*000a000000000000000903010602040000004f00000028000000310000002902110000002e0000
*002000000054000000680000006500000020000000650000006d00000070000000740000007900
*0000200000007300000065000000740000002e0000000a000000000000000a0301060204000000
*4f000000280000003100000029021a0000002e0000002000000043000000720000006500000061
*000000740000006500000020000000610000002000000073000000690000006e00000067000000
*6c00000065000000740000006f0000006e000000200000007300000065000000740000002e0000
*000a000000000000000b03010602080000004f000000280000006c0000006f0000006700000020
*0000006e0000002901021e0000002e00000020000000490000006e000000730000006500000072
*0000007400000020000000610000006e00000020000000650000006c000000650000006d000000
*650000006e0000007400000020000000690000006e000000200000006100000020000000730000
*0065000000740000002e0000000a01024200000020000000490000006600000020000000740000
*0068000000650000002000000073000000650000007400000020000000610000006c0000007200
*00006500000061000000640000007900000020000000630000006f0000006e0000007400000061
*000000690000006e0000007300000020000000610000006e00000020000000650000006c000000
*650000006d000000650000006e0000007400000020000000650000007100000075000000610000
*006c00000020000000740000006f00000020000000740000006800000065000000200000006700
*00006900000076000000650000006e0000002000000076000000610000006c0000007500000065
*0000002c0000000a02240000002000000069000000740000002000000069000000730000002000
*00007200000065000000700000006c000000610000006300000065000000640000002000000077
*00000069000000740000006800000020000000740000006800000065000000200000006e000000
*65000000770000002000000076000000610000006c00000075000000650000002e0000000a0000
*00000000000c03010602080000004f000000280000006c0000006f00000067000000200000006e
*0000002902200000002e0000002000000044000000650000006c00000065000000740000006500
*000020000000610000006e00000020000000650000006c000000650000006d000000650000006e
*000000740000002000000066000000720000006f0000006d000000200000006100000020000000
*7300000065000000740000002e0000000a000000000000000d03010602060000004f0000002800
*00006e0000002b0000006d0000002902390000002e000000200000004900000073000000200000
*007400000068000000690000007300000020000000610000002000000070000000720000006f00
*000070000000650000007200000020000000730000007500000062000000730000006500000074
*0000003f000000200000002800000069000000650000002e000000200000006100000020000000
*730000007500000062000000730000006500000074000000200000006200000075000000740000
*00200000006e0000006f0000007400000020000000650000007100000075000000610000006c00
*0000290000002e0000000a000000000000000e03010602060000004f000000280000006e000000
*2b0000006d000000290102140000002e0000002000000049000000730000002000000074000000
*680000006900000073000000200000006100000020000000730000007500000062000000730000
*0065000000740000003f0000000a01020100000020010701020400000028000000730000003100
*00002001040100000000000000000e000000000000000000000000000000010204000000200000
*0073000000320000002901020f0000002000000074000000650000006c0000006c000000730000
*002000000077000000680000006500000074000000680000006500000072000000200107020200
*000073000000310102100000002000000069000000730000002000000061000000200000007300
*00007500000062000000730000006500000074000000200000006f000000660000002001070202
*000000730000003202020000002e0000000a000000000000000f03010602080000004f00000028
*0000006c0000006f00000067000000200000006e0000002902200000002e000000200000005400
*00006800000065000000200000006d000000690000006e000000690000006d000000610000006c
*00000020000000650000006c000000650000006d000000650000006e0000007400000020000000
*6f000000660000002000000061000000200000007300000065000000740000002e0000000a0000
*00000000001003010602080000004f000000280000006c0000006f00000067000000200000006e
*0000002902200000002e00000020000000540000006800000065000000200000006d0000006100
*000078000000690000006d000000610000006c00000020000000650000006c000000650000006d
*000000650000006e00000074000000200000006f00000066000000200000006100000020000000
*7300000065000000740000002e0000000a000000000000001103010602080000004f0000002800
*00006c0000006f00000067000000200000006e00000029021e0000002e00000020000000440000
*00650000006c000000650000007400000065000000200000007400000068000000650000002000
*00006d000000690000006e000000690000006d000000610000006c00000020000000650000006c
*000000650000006d000000650000006e000000740000002e0000000a0000000000000012030106
*02080000004f000000280000006c0000006f00000067000000200000006e00000029021e000000
*2e0000002000000044000000650000006c00000065000000740000006500000020000000740000
*006800000065000000200000006d0000006100000078000000690000006d000000610000006c00
*000020000000650000006c000000650000006d000000650000006e000000740000002e0000000a
*00000000000000130301021e00000054000000680000006500000020000000750000006e000000
*690000006f0000006e000000200000006f000000660000002000000061000000200000006c0000
*00690000007300000074000000200000006f000000660000002000000073000000650000007400
*0000730000003a0000002000000028010701040100000000000000001300000000000000000000
*000000000001010204000000200000003d0000003d000000200104010000000000000000310000
*000000000002000000000000000301020100000020010401000000000000000014000000000000
*000000000000000000010102010000002004010000000000000000090000000000000000000000
*00000000010203000000290000002e0000000a000000000000001403010602060000004f000000
*280000006e0000002b0000006d000000290102370000002e000000200000005400000068000000
*6500000020000000750000006e000000690000006f0000006e000000200000006f000000660000
*002000000074000000770000006f00000020000000730000006500000074000000730000002c00
*00002000000070000000720000006500000066000000650000007200000072000000690000006e
*000000670000002000000074000000680000006500000020000000660000006900000072000000
*730000007400000020000000730000006500000074000000200000007700000068000000650000
*006e0000000a01022100000020000000650000007100000075000000610000006c000000200000
*00650000006c000000650000006d000000650000006e0000007400000073000000200000006100
*0000720000006500000020000000650000006e000000630000006f000000750000006e00000074
*000000650000007200000065000000640000002e0000000a010227000000200000005400000068
*0000006500000020000000690000006d000000700000006c000000650000006d00000065000000
*6e000000740000006100000074000000690000006f0000006e0000002000000075000000730000
*006500000073000000200000007400000068000000650000002000000065000000660000006600
*0000690000006300000069000000650000006e00000074000000200106020b0000006800000065
*0000006400000067000000650000002d000000750000006e000000690000006f0000006e01020c
*00000020000000610000006c000000670000006f00000072000000690000007400000068000000
*6d0000002e0000000a01022a000000200000004800000065000000640000006700000065000000
*2d000000750000006e000000690000006f0000006e000000200000006900000073000000200000
*006d0000006f000000720000006500000020000000650000006600000066000000690000006300
*000069000000650000006e00000074000000200000006f0000006e000000200000002800000062
*000000690000006700000073000000650000007400000020010401000000000000000014000000
*00000000000000000000000001020c00000020000000730000006d000000610000006c0000006c
*000000730000006500000074000000290000002e0000000a000000000000001503010602060000
*004f000000280000006e0000002b0000006d0000002901021b0000002e00000020000000440000
*006900000066000000660000006500000072000000650000006e00000063000000650000002000
*00006f000000660000002000000074000000770000006f00000020000000730000006500000074
*000000730000002e000000200000000a0102260000002000000054000000680000006500000020
*000000690000006d000000700000006c000000650000006d000000650000006e00000074000000
*6100000074000000690000006f0000006e00000020000000750000007300000065000000730000
*0020000000610000006e0000002000000065000000660000006600000069000000630000006900
*0000650000006e0000007400000020010602050000006800000065000000640000006700000065
*01021b00000020000000610000006c000000670000006f00000072000000690000007400000068
*0000006d00000020000000630000006f0000006d00000070000000610000007200000061000000
*620000006c000000650000002000000077000000690000007400000068000000200106020b0000
*0068000000650000006400000067000000650000002d000000750000006e000000690000006f00
*00006e02020000002e0000000a00000000000000160103010602060000004f000000280000006e
*0000002b0000006d000000290102200000002e0000002000000054000000680000006500000020
*000000690000006e00000074000000650000007200000073000000650000006300000074000000
*690000006f0000006e000000200000006f000000660000002000000074000000770000006f0000
*0020000000730000006500000074000000730000002e0000000a02400000002000000045000000
*6c000000650000006d000000650000006e0000007400000073000000200000006f000000660000
*002000000074000000680000006500000020000000720000006500000073000000750000006c00
*00007400000020000000630000006f0000006d000000650000002000000066000000720000006f
*0000006d0000002000000074000000680000006500000020000000660000006900000072000000
*7300000074000000200000007300000065000000740000002c00000020000000730000006f0000
*0020000000660000006f00000072000000200000006500000078000000610000006d0000007000
*00006c000000650000000a010b01022000000020000000690000006d000000700000006f000000
*7200000074000000200000007100000075000000610000006c0000006900000066000000690000
*00650000006400000020000000440000006100000074000000610000002e000000530000006500
*00007400000020000000610000007300000020000000530000000a01021f000000200000006400
*0000610000007400000061000000200000004100000042000000200000003d0000002000000041
*000000200000007c00000020000000420000002000000064000000650000007200000069000000
*76000000690000006e000000670000002000000053000000680000006f000000770000000a0102
*2800000020000000690000006e0000007300000074000000610000006e00000063000000650000
*00200000004f000000720000006400000020000000410000004200000020000000770000006800
*000065000000720000006500000020000000630000006f0000006d000000700000006100000072
*00000065000000200000005f000000200000005f000000200000003d0000002000000045000000
*510000000a01022400000020000000690000006e0000007300000074000000610000006e000000
*630000006500000020000000450000007100000020000000410000004200000020000000770000
*0068000000650000007200000065000000200000005f000000200000003d0000003d0000002000
*00005f000000200000003d00000020000000540000007200000075000000650000000a01023d00
*0000200000006d00000061000000690000006e000000200000003d000000200000007000000072
*000000690000006e000000740000002000000028000000530000002e0000007300000069000000
*6e000000670000006c00000065000000740000006f0000006e0000002000000041000000200000
*0060000000530000002e000000690000006e000000740000006500000072000000730000006500
*00006300000074000000690000006f0000006e0000006000000020000000530000002e00000073
*000000690000006e000000670000006c00000065000000740000006f0000006e00000020000000
*420000002c0000000a023d00000020000000200000002000000020000000200000002000000020
*000000200000002000000020000000200000002000000020000000200000002000000053000000
*2e00000073000000690000006e000000670000006c00000065000000740000006f0000006e0000
*0020000000420000002000000060000000530000002e000000690000006e000000740000006500
*00007200000073000000650000006300000074000000690000006f0000006e0000006000000020
*000000530000002e00000073000000690000006e000000670000006c0000006500000074000000
*6f0000006e0000002000000041000000290000000a030102070000007000000072000000690000
*006e000000740000007300000020010701020c0000002800000066000000720000006f0000006d
*0000004c000000690000007300000074000000200000005b000000410102010000005d01020c00
*00002c00000066000000720000006f0000006d0000004c00000069000000730000007400000020
*0000005b000000420102010000005d02010000002902020000002e0000000a0000000000000017
*03010602040000004f000000280000006e0000002902320000002e000000200000004600000069
*0000006c00000074000000650000007200000020000000610000006c0000006c00000020000000
*650000006c000000650000006d000000650000006e000000740000007300000020000000740000
*006800000061000000740000002000000073000000610000007400000069000000730000006600
*000079000000200000007400000068000000650000002000000070000000720000006500000064
*00000069000000630000006100000074000000650000002e0000000a0000000000000018030106
*02040000004f000000280000006e000000290102460000002e0000002000000050000000610000
*0072000000740000006900000074000000690000006f0000006e00000020000000740000006800
*0000650000002000000073000000650000007400000020000000690000006e000000740000006f
*0000002000000074000000770000006f0000002000000073000000650000007400000073000000
*2c000000200000006f0000006e0000006500000020000000770000006900000074000000680000
*0020000000610000006c0000006c00000020000000650000006c000000650000006d0000006500
*00006e000000740000007300000020000000740000006800000061000000740000002000000073
*0000006100000074000000690000007300000066000000790000000a0102310000002000000074
*000000680000006500000020000000700000007200000065000000640000006900000063000000
*61000000740000006500000020000000610000006e00000064000000200000006f0000006e0000
*0065000000200000007700000069000000740000006800000020000000610000006c0000006c00
*000020000000650000006c000000650000006d000000650000006e000000740000007300000020
*0000007400000068000000610000007400000020000000640000006f0000006e01020100000027
*010219000000740000002000000073000000610000007400000069000000730000006600000079
*000000200000007400000068000000650000002000000070000000720000006500000064000000
*69000000630000006100000074000000650000002e0000000a01020a0000002000000053000000
*650000006500000020000000610000006c000000730000006f0000002001040100000000000000
*00220000000000000000000000000000000102020000002e0000000a0000000000000019010301
*06020a0000004f000000280000006e0000002a0000006c0000006f00000067000000200000006e
*000000290102030000002e000000200000000a0102010000002001070104010000000000000000
*190000000000000000000000000000000102040000002000000066000000200000007301022100
*000020000000690000007300000020000000740000006800000065000000200000007300000065
*00000074000000200000006f000000620000007400000061000000690000006e00000065000000
*64000000200000006200000079000000200000006100000070000000700000006c000000790000
*00690000006e0000006700000020010702010000006601021400000020000000740000006f0000
*00200000006500000061000000630000006800000020000000650000006c000000650000006d00
*0000650000006e00000074000000200000006f0000006600000020010702010000007302020000
*002e0000000a0301020200000049000000740102010000002701023e0000007300000020000000
*770000006f000000720000007400000068000000200000006e0000006f00000074000000690000
*006e00000067000000200000007400000068000000610000007400000020000000740000006800
*0000650000002000000073000000690000007a00000065000000200000006f0000006600000020
*00000074000000680000006500000020000000720000006500000073000000750000006c000000
*74000000200000006d000000610000007900000020000000620000006500000020000000730000
*006d000000610000006c0000006c00000065000000720000002000000069000000660000002c00
*00000a01020a00000020000000660000006f0000007200000020000000730000006f0000006d00
*000065000000200107020500000028000000780000002c00000079000000290102020000002c00
*000020010701020200000078000000200102010000002f0102040000003d000000200000007900
*0000200102010000002601020100000026020b0000002000000066000000200000007800000020
*0000003d0000003d0000002000000066000000200000007902010000000a000000000000001a01
*03010602040000004f000000280000006e0000002902070000002e000000200000005400000068
*00000065000000200000000a0103010701040100000000000000001a0000000000000000000000
*000000000101020800000020000000660000002000000073000000200000003d0000003d000000
*200104010000000000000000190000000000000000000000000000000102040000002000000066
*00000020000000730102160000002c000000200000006200000075000000740000002000000077
*0000006f000000720000006b00000073000000200000006f0000006e0000006c00000079000000
*200000007700000068000000650000006e00000020010702010000006601020f00000020000000
*6900000073000000200000006d0000006f0000006e0000006f000000740000006f0000006e0000
*0069000000630000002e0000000a01020100000020010602200000005400000068000000650000
*0020000000700000007200000065000000630000006f0000006e00000064000000690000007400
*0000690000006f0000006e000000200000006900000073000000200000006e0000006f00000074
*00000020000000630000006800000065000000630000006b00000065000000640000002e010201
*0000000a02190000002000000053000000650000006d000000690000002d000000660000006f00
*0000720000006d000000610000006c0000006c000000790000002c000000200000007700000065
*00000020000000680000006100000076000000650000003a0000000a0b01022f00000020000000
*610000006e00000064000000200000005b00000078000000200000003c00000020000000790000
*00200000003d0000003d0000003e00000020000000660000002000000078000000200000003c00
*000020000000660000002000000079000000200000007c0000002000000078000000200000003c
*0000002d000000200000006c000000730000002c0000002000000079000000200000003c000000
*2d000000200000006c000000730000005d000000200000000a0102350000002000000020000000
*200000002000000020000000200000002000000020000000200000002000000020000000200000
*002000000020000000200000002000000020000000200000002000000020000000200000003d00
*00003d0000003e000000200000006d00000061000000700000004d0000006f0000006e0000006f
*000000740000006f0000006e000000690000006300000020000000660000002000000073000000
*200000003d0000003d000000200000006d00000061000000700000002000000066000000200000
*00730000000a021900000020000000200000002000000020000000200000007700000068000000
*650000007200000065000000200000006c00000073000000200000003d00000020000000740000
*006f0000004c00000069000000730000007400000020000000730000000a000000000000001b03
*010602040000004f000000280000006e00000029023b0000002e00000020000000460000006f00
*00006c00000064000000200000006f000000760000006500000072000000200000007400000068
*0000006500000020000000650000006c000000650000006d000000650000006e00000074000000
*73000000200000006f000000660000002000000061000000200000007300000065000000740000
*0020000000690000006e00000020000000610000006e00000020000000750000006e0000007300
*00007000000065000000630000006900000066000000690000006500000064000000200000006f
*000000720000006400000065000000720000002e0000000a000000000000003203010602040000
*004f000000280000006e0000002902130000002e00000020000000500000006f00000073000000
*740000002d0000006f0000007200000064000000650000007200000020000000660000006f0000
*006c000000640000002e0000000a000000000000001c03010602040000004f000000280000006e
*0000002902190000002e0000002000000054000000680000006500000020000000650000006c00
*0000650000006d000000650000006e0000007400000073000000200000006f0000006600000020
*00000061000000200000007300000065000000740000002e0000000a000000000000001d030106
*02040000004f000000280000006e0000002902290000002e00000020000000430000006f000000
*6e0000007600000065000000720000007400000020000000740000006800000065000000200000
*0073000000650000007400000020000000740000006f0000002000000061000000200000006c00
*0000690000007300000074000000200000006f0000006600000020000000650000006c00000065
*0000006d000000650000006e00000074000000730000002e0000000a000000000000001e030106
*02040000004f000000280000006e0000002902340000002e00000020000000430000006f000000
*6e0000007600000065000000720000007400000020000000740000006800000065000000200000
*0073000000650000007400000020000000740000006f00000020000000610000006e0000002000
*0000610000007300000063000000650000006e00000064000000690000006e0000006700000020
*0000006c000000690000007300000074000000200000006f000000660000002000000065000000
*6c000000650000006d000000650000006e00000074000000730000002e0000000a000000000000
*001f030106020a0000004f000000280000006e0000002a0000006c0000006f0000006700000020
*0000006e0000002902280000002e00000020000000430000007200000065000000610000007400
*000065000000200000006100000020000000730000006500000074000000200000006600000072
*0000006f0000006d0000002000000061000000200000006c000000690000007300000074000000
*200000006f0000006600000020000000650000006c000000650000006d000000650000006e0000
*0074000000730000002e0000000a000000000000002003010602040000004f000000280000006e
*000000290102350000002e000000200000004200000075000000690000006c0000006400000020
*00000061000000200000007300000065000000740000002000000066000000720000006f000000
*6d00000020000000610000006e00000020000000610000007300000063000000650000006e0000
*0064000000690000006e00000067000000200000006c0000006900000073000000740000002000
*0000690000006e000000200000006c000000690000006e00000065000000610000007200000020
*00000074000000690000006d000000650000002e0000000a010201000000200106023a00000054
*000000680000006500000020000000700000007200000065000000630000006f0000006e000000
*640000006900000074000000690000006f0000006e0000002000000028000000690000006e0000
*00700000007500000074000000200000006c000000690000007300000074000000200000006900
*00007300000020000000610000007300000063000000650000006e00000064000000690000006e
*0000006700000029000000200000006900000073000000200000006e0000006f00000074000000
*20000000630000006800000065000000630000006b00000065000000640000002e02010000000a
*000000000000002103010602040000004f000000280000006e0000002901024a0000002e000000
*200000004200000075000000690000006c00000064000000200000006100000020000000730000
*0065000000740000002000000066000000720000006f0000006d00000020000000610000006e00
*000020000000610000007300000063000000650000006e00000064000000690000006e00000067
*000000200000006c000000690000007300000074000000200000006f0000006600000020000000
*64000000690000007300000074000000690000006e000000630000007400000020000000650000
*006c000000650000006d000000650000006e000000740000007300000020000000690000006e00
*0000200000006c000000690000006e000000650000006100000072000000200000007400000069
*0000006d000000650000002e0000000a0102010000002001060243000000540000006800000065
*00000020000000700000007200000065000000630000006f0000006e0000006400000069000000
*74000000690000006f0000006e0000002000000028000000690000006e00000070000000750000
*0074000000200000006c0000006900000073000000740000002000000069000000730000002000
*00007300000074000000720000006900000063000000740000006c000000790000002000000061
*0000007300000063000000650000006e00000064000000690000006e0000006700000029000000
*200000006900000073000000200000006e0000006f000000740000002000000063000000680000
*0065000000630000006b00000065000000640000002e02010000000a0000000000000022030106
*02080000004f000000280000006c0000006f00000067000000200000006e000000290102120000
*002e00000020000000540000006800000065000000200000006500000078000000700000007200
*0000650000007300000073000000690000006f0000006e00000020000000280107010401000000
*000000000022000000000000000000000000000000010206000000200000007800000020000000
*73000000650000007401020c000000290000002000000069000000730000002000000061000000
*2000000070000000610000006900000072000000200107020b0000002800000073000000650000
*0074000000310000002c00000073000000650000007400000032000000290102010000000a0102
*070000002000000077000000680000006500000072000000650000002001070204000000730000
*0065000000740000003101021b00000020000000630000006f0000006d00000070000000720000
*006900000073000000650000007300000020000000740000006800000065000000200000006500
*00006c000000650000006d000000650000006e0000007400000073000000200000006f00000066
*000000200107020300000073000000650000007401020b000000200000006c0000006500000073
*00000073000000200000007400000068000000610000006e000000200107020100000078010205
*00000020000000610000006e000000640000002001070204000000730000006500000074000000
*320102010000000a01021b00000020000000630000006f0000006d000000700000007200000069
*000000730000006500000073000000200000007400000068000000650000002000000065000000
*6c000000650000006d000000650000006e0000007400000073000000200000006f000000660000
*00200107020300000073000000650000007401020e000000200000006700000072000000650000
*0061000000740000006500000072000000200000007400000068000000610000006e0000002001
*0702010000007802020000002e0000000a000000000000002303010602080000004f0000002800
*00006c0000006f00000067000000200000006e0000002901020d0000002e000000200000005000
*00006500000072000000660000006f000000720000006d00000073000000200000006100000020
*010401000000000000000022000000000000000000000000000000010102240000002000000062
*000000750000007400000020000000610000006c000000730000006f0000002000000072000000
*650000007400000075000000720000006e00000073000000200000007700000068000000650000
*007400000068000000650000007200000020000000740000006800000065000000200000007000
*000069000000760000006f000000740000000a022800000020000000650000006c000000650000
*006d000000650000006e0000007400000020000000770000006100000073000000200000006600
*00006f000000750000006e0000006400000020000000690000006e000000200000007400000068
*00000065000000200000006f000000720000006900000067000000690000006e00000061000000
*6c000000200000007300000065000000740000002e0000000a0000000000000033030106020800
*00004f000000280000006c0000006f00000067000000200000006e0000002901020d0000002e00
*000020000000500000006500000072000000660000006f000000720000006d0000007300000020
*00000061000000200104010000000000000000220000000000000000000000000000000101021c
*0000002000000062000000750000007400000020000000610000006c000000730000006f000000
*2000000072000000650000007400000075000000720000006e0000007300000020000000740000
*006800000065000000200000007000000069000000760000006f000000740000000a022d000000
*20000000650000006c000000650000006d000000650000006e0000007400000020000000740000
*006800000061000000740000002000000077000000610000007300000020000000660000006f00
*0000750000006e0000006400000020000000690000006e00000020000000740000006800000065
*000000200000006f000000720000006900000067000000690000006e000000610000006c000000
*200000007300000065000000740000002e0000000a00000000000000240103010602080000004f
*000000280000006c0000006f00000067000000200000006e0000002902270000002e0000002000
*000044000000650000006c00000065000000740000006500000020000000610000006e00000064
*0000002000000066000000690000006e0000006400000020000000740000006800000065000000
*200000006d000000690000006e000000690000006d000000610000006c00000020000000650000
*006c000000650000006d000000650000006e000000740000002e0000000a0b0232000000200000
*0064000000650000006c00000065000000740000006500000046000000690000006e0000006400
*00004d000000690000006e00000020000000730000006500000074000000200000003d00000020
*0000002800000066000000690000006e000000640000004d000000690000006e00000020000000
*7300000065000000740000002c0000002000000064000000650000006c00000065000000740000
*00650000004d000000690000006e00000020000000730000006500000074000000290000000a00
*000000000000250103010602080000004f000000280000006c0000006f00000067000000200000
*006e0000002902270000002e0000002000000044000000650000006c0000006500000074000000
*6500000020000000610000006e000000640000002000000066000000690000006e000000640000
*0020000000740000006800000065000000200000006d0000006100000078000000690000006d00
*0000610000006c00000020000000650000006c000000650000006d000000650000006e00000074
*0000002e0000000a0b02320000002000000064000000650000006c000000650000007400000065
*00000046000000690000006e000000640000004d00000061000000780000002000000073000000
*6500000074000000200000003d000000200000002800000066000000690000006e000000640000
*004d0000006100000078000000200000007300000065000000740000002c000000200000006400
*0000650000006c0000006500000074000000650000004d00000061000000780000002000000073
*0000006500000074000000290000000a000000000000002603010602080000004f000000280000
*006c0000006f00000067000000200000006e000000290102340000002e00000020000000520000
*006500000074000000720000006900000065000000760000006500000073000000200000007400
*00006800000065000000200000006d000000690000006e000000690000006d000000610000006c
*000000200000006b0000006500000079000000200000006f000000660000002000000074000000
*6800000065000000200000007300000065000000740000002c00000020000000610000006e0000
*006400000020000000740000006800000065000000200000007300000065000000740000000a01
*021e00000020000000730000007400000072000000690000007000000070000000650000006400
*0000200000006f0000006600000020000000740000006800000061000000740000002000000065
*0000006c000000650000006d000000650000006e000000740000002c000000200000006f000000
*720000002001040100000000000000003400000000000000020000000000000004021900000020
*000000690000006600000020000000700000006100000073000000730000006500000064000000
*20000000610000006e00000020000000650000006d000000700000007400000079000000200000
*007300000065000000740000002e0000000a000000000000002703010602080000004f00000028
*0000006c0000006f00000067000000200000006e000000290102340000002e0000002000000052
*000000650000007400000072000000690000006500000076000000650000007300000020000000
*740000006800000065000000200000006d0000006100000078000000690000006d000000610000
*006c000000200000006b0000006500000079000000200000006f00000066000000200000007400
*00006800000065000000200000007300000065000000740000002c00000020000000610000006e
*000000640000002000000074000000680000006500000020000000730000006500000074000000
*0a01021e0000002000000073000000740000007200000069000000700000007000000065000000
*64000000200000006f000000660000002000000074000000680000006100000074000000200000
*00650000006c000000650000006d000000650000006e000000740000002c000000200000006f00
*000072000000200104010000000000000000340000000000000002000000000000000402190000
*002000000069000000660000002000000070000000610000007300000073000000650000006400
*000020000000610000006e00000020000000650000006d00000070000000740000007900000020
*0000007300000065000000740000002e0000000a000000000000002803010602040000004f0000
*00280000006e0000002901023b0000002e0000002000000053000000680000006f000000770000
*002000000074000000680000006500000020000000740000007200000065000000650000002000
*00007400000068000000610000007400000020000000690000006d000000700000006c00000065
*0000006d000000650000006e000000740000007300000020000000740000006800000065000000
*200000007300000065000000740000002e00000020000000540000006800000065000000200000
*007400000072000000650000006500000020000000690000007300000020000000730000006800
*00006f000000770000006e0000000a022200000020000000690000006e00000020000000610000
*0020000000630000006f0000006d00000070000000720000006500000073000000730000006500
*0000640000002c0000002000000068000000610000006e00000067000000690000006e00000067
*00000020000000660000006f000000720000006d00000061000000740000002e0000000a000000
*00000000290103010602040000004f000000280000006e000000290102120000002e0000002000
*000054000000680000006500000020000000650000007800000070000000720000006500000073
*00000073000000690000006f0000006e00000020000000280107021a0000007300000068000000
*6f0000007700000054000000720000006500000065000000570000006900000074000000680000
*002000000068000000610000006e00000067000000200000007700000069000000640000006500
*0000200000006d0000006100000070010208000000290000002000000073000000680000006f00
*000077000000730000000a01022600000020000000740000006800000065000000200000007400
*000072000000650000006500000020000000740000006800000061000000740000002000000069
*0000006d000000700000006c000000650000006d000000650000006e0000007400000073000000
*20000000740000006800000065000000200000007300000065000000740000002e000000200000
*004900000066000000200107020400000068000000610000006e00000067010204000000200000
*0069000000730000000a0102010000002001070204000000540000007200000075000000650102
*040000002c0000002000000061000000200106020700000068000000610000006e000000670000
*00690000006e000000670102350000002000000074000000720000006500000065000000200000
*0069000000730000002000000073000000680000006f000000770000006e000000200000006f00
*000074000000680000006500000072000000770000006900000073000000650000002000000061
*00000020000000720000006f000000740000006100000074000000650000006400000020000000
*740000007200000065000000650000002000000069000000730000002000000073000000680000
*006f000000770000006e0000002e0000002000000049000000660000000a010201000000200107
*020400000077000000690000006400000065010204000000200000006900000073000000200104
*010000000000000000350000000000000005000000000000000602220000002c00000020000000
*610000006e00000020000000650000007800000074000000720000006100000020000000770000
*006900000064000000650000002000000076000000650000007200000073000000690000006f00
*00006e0000002000000069000000730000002000000073000000680000006f000000770000006e
*0000002e0000000a0b010246000000200000005300000065000000740000003e00000020000000
*7000000075000000740000005300000074000000720000004c0000006e00000020000000240000
*002000000073000000680000006f00000077000000540000007200000065000000650000005700
*000069000000740000006800000020000000540000007200000075000000650000002000000046
*000000610000006c00000073000000650000002000000024000000200000006600000072000000
*6f0000006d00000044000000690000007300000074000000690000006e00000063000000740000
*004100000073000000630000004c000000690000007300000074000000200000005b0000003100
*00002e0000002e000000350000005d0000000a01020300000020000000340000000a0102060000
*00200000002b0000002d0000002d000000320000000a010209000000200000007c000000200000
*00200000002b0000002d0000002d000000310000000a010209000000200000007c000000200000
*00200000002b0000002d0000002d000000330000000a010206000000200000002b0000002d0000
*002d000000350000000a010202000000200000000a010245000000200000005300000065000000
*740000003e000000200000007000000075000000740000005300000074000000720000004c0000
*006e00000020000000240000002000000073000000680000006f00000077000000540000007200
*000065000000650000005700000069000000740000006800000020000000540000007200000075
*000000650000002000000054000000720000007500000065000000200000002400000020000000
*66000000720000006f0000006d00000044000000690000007300000074000000690000006e0000
*0063000000740000004100000073000000630000004c0000006900000073000000740000002000
*00005b000000310000002e0000002e000000350000005d0000000a010203000000200000003400
*00000a010203000000200000007c0000000a010206000000200000002b0000002d0000002d0000
*00320000000a010206000000200000007c00000020000000200000007c0000000a010209000000
*200000007c00000020000000200000002b0000002d0000002d000000310000000a010206000000
*200000007c00000020000000200000007c0000000a010209000000200000007c00000020000000
*200000002b0000002d0000002d000000330000000a010203000000200000007c0000000a010206
*000000200000002b0000002d0000002d000000350000000a010202000000200000000a01024600
*0000200000005300000065000000740000003e0000002000000070000000750000007400000053
*00000074000000720000004c0000006e0000002000000024000000200000007300000068000000
*6f0000007700000054000000720000006500000065000000570000006900000074000000680000
*002000000046000000610000006c00000073000000650000002000000054000000720000007500
*00006500000020000000240000002000000066000000720000006f0000006d0000004400000069
*0000007300000074000000690000006e0000006300000074000000410000007300000063000000
*4c000000690000007300000074000000200000005b000000310000002e0000002e000000350000
*005d0000000a010206000000200000002b0000002d0000002d000000350000000a010203000000
*200000007c0000000a01020300000020000000340000000a010203000000200000007c0000000a
*010209000000200000007c00000020000000200000002b0000002d0000002d000000330000000a
*010206000000200000007c00000020000000200000007c0000000a010206000000200000002b00
*00002d0000002d000000320000000a010206000000200000002000000020000000200000007c00
*00000a0209000000200000002000000020000000200000002b0000002d0000002d000000310000
*000a000000000000002a03010602040000004f000000280000006e00000029022f0000002e0000
*002000000054000000650000007300000074000000200000006900000066000000200000007400
*0000680000006500000020000000690000006e0000007400000065000000720000006e00000061
*0000006c0000002000000073000000650000007400000020000000730000007400000072000000
*750000006300000074000000750000007200000065000000200000006900000073000000200000
*0076000000610000006c00000069000000640000002e0000000a2b000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005000000
*0000000006000000000000000700000000000000080000000000000009000000000000000a0000
*00000000000b000000000000000c000000000000000d000000000000000e000000000000000f00
*000000000000100000000000000011000000000000001200000000000000130000000000000014
*000000000000001500000000000000160000000000000017000000000000001800000000000000
*19000000000000001a000000000000001b000000000000001c000000000000001d000000000000
*001e000000000000001f0000000000000020000000000000002100000000000000220000000000
*000023000000000000002400000000000000250000000000000026000000000000002700000000
*000000280000000000000029000000000000002a2b000000000000000300000000000000020000
*000000000000000000000000000100000000000000060000000000000005000000000000000400
*000000000000070000000000000008000000000000000e000000000000000d0000000000000009
*000000000000000a000000000000000b000000000000000c000000000000001400000000000000
*130000000000000015000000000000001600000000000000170000000000000018000000000000
*002200000000000000230000000000000019000000000000001a000000000000001b0000000000
*00000f000000000000001000000000000000110000000000000012000000000000002400000000
*0000002500000000000000270000000000000026000000000000001c000000000000001d000000
*000000001f000000000000001e0000000000000020000000000000002100000000000000280000
*000000000029000000000000002a00000000000000360000000000000000000000000000000103
*000000000000000700000000000000000000000000000001010000000000000007000000000000
*000000000000000000010300000000000000080000000000000000000000000000000103000000
*00000000090000000000000000000000000000000100000000000000000a000000000000000000
*0000000000000100000000000000000b0000000000000000000000000000000100000000000000
*000c0000000000000000000000000000000100000000000000000d000000000000000000000000
*0000000100000000000000000e0000000000000000000000000000000100000000000000000f00
*000000000000000000000000000001000000000000000010000000000000000000000000000000
*010000000000000000110000000000000000000000000000000100000000000000001200000000
*000000000000000000000001000000000000000013000000000000000000000000000000010000
*000000000000140000000000000000000000000000000100000000000000001500000000000000
*000000000000000001000000000000000016000000000000000000000000000000010000000000
*000000170000000000000000000000000000000100000000000000001800000000000000000000
*000000000001000000000000000019000000000000000000000000000000010000000000000000
*1a0000000000000000000000000000000100000000000000001b00000000000000000000000000
*00000100000000000000001c0000000000000000000000000000000100000000000000001d0000
*000000000000000000000000000100000000000000001e00000000000000000000000000000001
*00000000000000001f000000000000000000000000000000010000000000000000200000000000
*000000000000000000000100000000000000002100000000000000000000000000000001000000
*000000000022000000000000000000000000000000010000000000000000230000000000000000
*000000000000000100000000000000002400000000000000000000000000000001000000000000
*000025000000000000000000000000000000010000000000000000260000000000000000000000
*000000000100000000000000002700000000000000000000000000000001000000000000000028
*000000000000000000000000000000010000000000000000290000000000000000000000000000
*000100000000000000002a0000000000000000000000000000000100000000000000002b000000
*0000000000000000000000000100000000000000002c0000000000000000000000000000000100
*000000000000002d0000000000000000000000000000000100000000000000002e000000000000
*0000000000000000000100000000000000002f0000000000000000000000000000000100000000
*000000003000000000000000000000000000000001000000000000000031000000000000000000
*000000000000010000000000000000320000000000000000000000000000000100000000000000
*003300000000000000000000000000000001000000000000000034000000000000000000000000
*000000010000000000000000350000000000000000000000000000000103000000000000003600
*000000000000020000000000000037000000000000000038000000000000000000000000000000
*010000000000000000390000000000000000000000000000000100000000000000003a00000000
*00000002000000000000000401000000000000003b000000000000000500000000000000060100
*0000000000003c000000000000003d0000000000000018756e626f7865642d636f6e7461696e65
*72732d302e302e300000000000000010446174612e5365742e556e626f78656400000000000000
*04626173650000000000000009446174612e4c697374000000000000000a446174612e4d617962
*6500000000000000086768632d7072696d00000000000000084748432e426f6f6c000000000000
*0005426f7865640000000000000002555300000000000000045553657400000000000000047369
*7a6500000000000000046e756c6c00000000000000025c5c00000000000000066d656d62657200
*000000000000096e6f744d656d6265720000000000000005656d70747900000000000000097369
*6e676c65746f6e0000000000000006696e73657274000000000000000664656c65746500000000
*00000010697350726f7065725375627365744f66000000000000000a69735375627365744f6600
*0000000000000766696e644d696e000000000000000766696e644d617800000000000000096465
*6c6574654d696e000000000000000964656c6574654d61780000000000000006756e696f6e7300
*00000000000005756e696f6e000000000000000a646966666572656e6365000000000000000c69
*6e74657273656374696f6e000000000000000666696c7465720000000000000009706172746974
*696f6e00000000000000036d6170000000000000000c6d61704d6f6e6f746f6e69630000000000
*000004666f6c640000000000000005656c656d730000000000000006746f4c6973740000000000
*000009746f4173634c697374000000000000000866726f6d4c697374000000000000000b66726f
*6d4173634c697374000000000000001366726f6d44697374696e63744173634c69737400000000
*0000000573706c6974000000000000000b73706c69744d656d626572000000000000000d64656c
*65746546696e644d696e000000000000000d64656c65746546696e644d61780000000000000007
*6d696e5669657700000000000000076d617856696577000000000000000873686f775472656500
*0000000000000c73686f775472656557697468000000000000000576616c696400000000000000
*04766965770000000000000005766965776b00000000000000077669657742696e000000000000
*0003746970000000000000000362696e000000000000000353657400000000000000084748432e
*4c6973740000000000000005666f6c646c0000000000000005666f6c6472000000000000000b73
*706c69744c6f6f6b757000000000000000074e6f7468696e67000000000000000454727565
newhex
*0d0cface00040000000000005682000000000000511b2b00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000001000000000000000d0000000000000000
*0000000000000001000000000000000e0000000000000000000000000000000100000000000000
*0f0000000000000000000000000000000100000000000000100000000000000000000000000000
*000100000000000000110000000000000000000000000000000100000000000000120000000000
*000000000000000000000100000000000000130000000000000000000000000000000100000000
*000000140000000000000000000000000000000100000000000000150000000000000000000000
*000000000100000000000000160000000000000000000000000000000100000000000000170000
*000000000000000000000000000100000000000000180000000000000000000000000000000100
*0000000000001900000000000000000000000000000001000000000000001a0000000000000000
*0000000000000001000000000000001b0000000000000000000000000000000100000000000000
*1c00000000000000000000000000000001000000000000001d0000000000000000000000000000
*0001000000000000001e00000000000000000000000000000001000000000000001f0000000000
*000000000000000000000100000000000000200000000000000000000000000000000100000000
*000000210000000000000000000000000000000100000000000000220000000000000000000000
*000000000100000000000000230000000000000000000000000000000100000000000000240000
*000000000000000000000000000100000000000000250000000000000000000000000000000100
*000000000000260000000000000000000000000000000100000000000000270000000000000000
*000000000000000100000000000000280000000000000000000000000000000100000000000000
*2900000000000000000000000000000001000000000000002a0000000000000000000000000000
*000101000000000000000000000000000000010000000030000000000000002b03022e00000045
*00000078000000740000007200000061000000630000007400000020000000610000006e000000
*64000000200000007200000065000000620000006f000000780000002000000074000000680000
*0065000000200000007300000070000000650000006300000069000000610000006c0000006900
*00007a0000006500000064000000200000006e0000006f00000064000000650000002000000066
*0000006f000000720000006d00000061000000740000000a000000000000002c03022c00000041
*00000070000000700000006c000000790000002000000074000000680000006500000020000000
*7600000069000000650000007700000020000000740000006f0000002000000074000000690000
*007000000020000000610000006e000000640000002000000062000000690000006e0000002000
*0000630000006f0000006e00000074000000690000006e00000075000000610000007400000069
*0000006f0000006e000000730000000a000000000000002d030236000000560000006900000065
*00000077000000200000006a000000750000007300000074000000200000007400000068000000
*650000002000000076000000610000006c000000750000006500000020000000610000006e0000
*0064000000200000006c00000065000000660000007400000020000000610000006e0000006400
*000020000000720000006900000067000000680000007400000020000000630000006800000069
*0000006c00000064000000200000006f0000006600000020000000610000002000000062000000
*690000006e0000000a000000000000000403010602040000004f00000028000000310000002902
*250000002e00000020000000540000006800000065000000200000006e000000750000006d0000
*00620000006500000072000000200000006f0000006600000020000000650000006c0000006500
*00006d000000650000006e000000740000007300000020000000690000006e0000002000000074
*0000006800000065000000200000007300000065000000740000002e0000000a00000000000000
*0503010602040000004f00000028000000310000002902190000002e0000002000000049000000
*730000002000000074000000680000006900000073000000200000007400000068000000650000
*0020000000650000006d0000007000000074000000790000002000000073000000650000007400
*00003f0000000a000000000000002e030216000000530000006d00000061000000720000007400
*00002000000074000000690000007000000020000000630000006f0000006e0000007300000074
*000000720000007500000063000000740000006f000000720000000a000000000000002f030216
*000000530000006d0000006100000072000000740000002000000062000000690000006e000000
*20000000630000006f0000006e0000007300000074000000720000007500000063000000740000
*006f000000720000000a000000000000003003021100000042000000610000006c000000610000
*006e00000063000000650000002000000074000000680000006500000020000000740000007200
*000065000000650000000a00000000000000310301021000000041000000200000007300000065
*00000074000000200000006f000000660000002000000076000000610000006c00000075000000
*650000007300000020010702010000006102020000002e0000000a000000000000000603010602
*060000004f000000280000006e0000002b0000006d000000290102060000002e00000020000000
*530000006500000065000000200104010000000000000000140000000000000000000000000000
*000102020000002e0000000a000000000000000703010602080000004f000000280000006c0000
*006f00000067000000200000006e00000029021d0000002e000000200000004900000073000000
*2000000074000000680000006500000020000000650000006c000000650000006d000000650000
*006e0000007400000020000000690000006e000000200000007400000068000000650000002000
*00007300000065000000740000003f0000000a000000000000000803010602080000004f000000
*280000006c0000006f00000067000000200000006e0000002902210000002e0000002000000049
*000000730000002000000074000000680000006500000020000000650000006c00000065000000
*6d000000650000006e00000074000000200000006e0000006f0000007400000020000000690000
*006e00000020000000740000006800000065000000200000007300000065000000740000003f00
*00000a000000000000000903010602040000004f00000028000000310000002902110000002e00
*00002000000054000000680000006500000020000000650000006d000000700000007400000079
*000000200000007300000065000000740000002e0000000a000000000000000a03010602040000
*004f000000280000003100000029021a0000002e00000020000000430000007200000065000000
*61000000740000006500000020000000610000002000000073000000690000006e000000670000
*006c00000065000000740000006f0000006e000000200000007300000065000000740000002e00
*00000a000000000000000b03010602080000004f000000280000006c0000006f00000067000000
*200000006e0000002902200000002e0000002000000044000000650000006c0000006500000074
*0000006500000020000000610000006e00000020000000650000006c000000650000006d000000
*650000006e000000740000002000000066000000720000006f0000006d00000020000000610000
*00200000007300000065000000740000002e0000000a000000000000000c03010602060000004f
*000000280000006e0000002b0000006d0000002902390000002e00000020000000490000007300
*000020000000740000006800000069000000730000002000000061000000200000007000000072
*0000006f0000007000000065000000720000002000000073000000750000006200000073000000
*65000000740000003f000000200000002800000069000000650000002e00000020000000610000
*002000000073000000750000006200000073000000650000007400000020000000620000007500
*000074000000200000006e0000006f000000740000002000000065000000710000007500000061
*0000006c000000290000002e0000000a000000000000000d03010602060000004f000000280000
*006e0000002b0000006d000000290102140000002e000000200000004900000073000000200000
*007400000068000000690000007300000020000000610000002000000073000000750000006200
*00007300000065000000740000003f0000000a0102010000002001070102040000002800000073
*000000310000002001040100000000000000000d00000000000000000000000000000001020400
*00002000000073000000320000002901020f0000002000000074000000650000006c0000006c00
*000073000000200000007700000068000000650000007400000068000000650000007200000020
*010702020000007300000031010210000000200000006900000073000000200000006100000020
*000000730000007500000062000000730000006500000074000000200000006f00000066000000
*2001070202000000730000003202020000002e0000000a000000000000000e0301060208000000
*4f000000280000006c0000006f00000067000000200000006e0000002902200000002e00000020
*000000540000006800000065000000200000006d000000690000006e000000690000006d000000
*610000006c00000020000000650000006c000000650000006d000000650000006e000000740000
*00200000006f000000660000002000000061000000200000007300000065000000740000002e00
*00000a000000000000000f03010602080000004f000000280000006c0000006f00000067000000
*200000006e0000002902200000002e00000020000000540000006800000065000000200000006d
*0000006100000078000000690000006d000000610000006c00000020000000650000006c000000
*650000006d000000650000006e00000074000000200000006f0000006600000020000000610000
*00200000007300000065000000740000002e0000000a000000000000001003010602080000004f
*000000280000006c0000006f00000067000000200000006e00000029021e0000002e0000002000
*000044000000650000006c00000065000000740000006500000020000000740000006800000065
*000000200000006d000000690000006e000000690000006d000000610000006c00000020000000
*650000006c000000650000006d000000650000006e000000740000002e0000000a000000000000
*001103010602080000004f000000280000006c0000006f00000067000000200000006e00000029
*021e0000002e0000002000000044000000650000006c0000006500000074000000650000002000
*0000740000006800000065000000200000006d0000006100000078000000690000006d00000061
*0000006c00000020000000650000006c000000650000006d000000650000006e00000074000000
*2e0000000a00000000000000120301021e00000054000000680000006500000020000000750000
*006e000000690000006f0000006e000000200000006f0000006600000020000000610000002000
*00006c000000690000007300000074000000200000006f00000066000000200000007300000065
*00000074000000730000003a000000200000002801070104010000000000000000120000000000
*0000000000000000000001010204000000200000003d0000003d00000020010401000000000000
*000032000000000000000200000000000000030102010000002001040100000000000000001300
*000000000000000000000000000001010201000000200401000000000000000009000000000000
*000000000000000000010203000000290000002e0000000a000000000000001303010602060000
*004f000000280000006e0000002b0000006d000000290102370000002e00000020000000540000
*00680000006500000020000000750000006e000000690000006f0000006e000000200000006f00
*0000660000002000000074000000770000006f0000002000000073000000650000007400000073
*0000002c0000002000000070000000720000006500000066000000650000007200000072000000
*690000006e00000067000000200000007400000068000000650000002000000066000000690000
*007200000073000000740000002000000073000000650000007400000020000000770000006800
*0000650000006e0000000a01022100000020000000650000007100000075000000610000006c00
*000020000000650000006c000000650000006d000000650000006e000000740000007300000020
*00000061000000720000006500000020000000650000006e000000630000006f00000075000000
*6e00000074000000650000007200000065000000640000002e0000000a01022700000020000000
*54000000680000006500000020000000690000006d000000700000006c000000650000006d0000
*00650000006e000000740000006100000074000000690000006f0000006e000000200000007500
*000073000000650000007300000020000000740000006800000065000000200000006500000066
*00000066000000690000006300000069000000650000006e00000074000000200106020b000000
*68000000650000006400000067000000650000002d000000750000006e000000690000006f0000
*006e01020c00000020000000610000006c000000670000006f0000007200000069000000740000
*00680000006d0000002e0000000a01022a00000020000000480000006500000064000000670000
*00650000002d000000750000006e000000690000006f0000006e00000020000000690000007300
*0000200000006d0000006f00000072000000650000002000000065000000660000006600000069
*0000006300000069000000650000006e00000074000000200000006f0000006e00000020000000
*280000006200000069000000670000007300000065000000740000002001040100000000000000
*001300000000000000000000000000000001020c00000020000000730000006d00000061000000
*6c0000006c000000730000006500000074000000290000002e0000000a00000000000000140301
*0602060000004f000000280000006e0000002b0000006d0000002901021b0000002e0000002000
*0000440000006900000066000000660000006500000072000000650000006e0000006300000065
*000000200000006f000000660000002000000074000000770000006f0000002000000073000000
*6500000074000000730000002e000000200000000a010226000000200000005400000068000000
*6500000020000000690000006d000000700000006c000000650000006d000000650000006e0000
*00740000006100000074000000690000006f0000006e0000002000000075000000730000006500
*00007300000020000000610000006e000000200000006500000066000000660000006900000063
*00000069000000650000006e000000740000002001060205000000680000006500000064000000
*670000006501021b00000020000000610000006c000000670000006f0000007200000069000000
*74000000680000006d00000020000000630000006f0000006d0000007000000061000000720000
*0061000000620000006c0000006500000020000000770000006900000074000000680000002001
*06020b00000068000000650000006400000067000000650000002d000000750000006e00000069
*0000006f0000006e02020000002e0000000a00000000000000150103010602060000004f000000
*280000006e0000002b0000006d000000290102200000002e000000200000005400000068000000
*6500000020000000690000006e0000007400000065000000720000007300000065000000630000
*0074000000690000006f0000006e000000200000006f0000006600000020000000740000007700
*00006f00000020000000730000006500000074000000730000002e0000000a0240000000200000
*00450000006c000000650000006d000000650000006e0000007400000073000000200000006f00
*000066000000200000007400000068000000650000002000000072000000650000007300000075
*0000006c0000007400000020000000630000006f0000006d000000650000002000000066000000
*720000006f0000006d000000200000007400000068000000650000002000000066000000690000
*00720000007300000074000000200000007300000065000000740000002c000000200000007300
*00006f00000020000000660000006f00000072000000200000006500000078000000610000006d
*000000700000006c000000650000000a010b01022000000020000000690000006d000000700000
*006f0000007200000074000000200000007100000075000000610000006c000000690000006600
*000069000000650000006400000020000000440000006100000074000000610000002e00000053
*000000650000007400000020000000610000007300000020000000530000000a01021f00000020
*00000064000000610000007400000061000000200000004100000042000000200000003d000000
*2000000041000000200000007c0000002000000042000000200000006400000065000000720000
*006900000076000000690000006e000000670000002000000053000000680000006f0000007700
*00000a01022800000020000000690000006e0000007300000074000000610000006e0000006300
*000065000000200000004f00000072000000640000002000000041000000420000002000000077
*0000006800000065000000720000006500000020000000630000006f0000006d00000070000000
*610000007200000065000000200000005f000000200000005f000000200000003d000000200000
*0045000000510000000a01022400000020000000690000006e0000007300000074000000610000
*006e00000063000000650000002000000045000000710000002000000041000000420000002000
*00007700000068000000650000007200000065000000200000005f000000200000003d0000003d
*000000200000005f000000200000003d0000002000000054000000720000007500000065000000
*0a01023d000000200000006d00000061000000690000006e000000200000003d00000020000000
*7000000072000000690000006e000000740000002000000028000000530000002e000000730000
*00690000006e000000670000006c00000065000000740000006f0000006e000000200000004100
*00002000000060000000530000002e000000690000006e00000074000000650000007200000073
*000000650000006300000074000000690000006f0000006e000000600000002000000053000000
*2e00000073000000690000006e000000670000006c00000065000000740000006f0000006e0000
*0020000000420000002c0000000a023d0000002000000020000000200000002000000020000000
*200000002000000020000000200000002000000020000000200000002000000020000000200000
*00530000002e00000073000000690000006e000000670000006c00000065000000740000006f00
*00006e00000020000000420000002000000060000000530000002e000000690000006e00000074
*000000650000007200000073000000650000006300000074000000690000006f0000006e000000
*6000000020000000530000002e00000073000000690000006e000000670000006c000000650000
*00740000006f0000006e0000002000000041000000290000000a03010207000000700000007200
*0000690000006e000000740000007300000020010701020c000000280000006600000072000000
*6f0000006d0000004c000000690000007300000074000000200000005b00000041010201000000
*5d01020c0000002c00000066000000720000006f0000006d0000004c0000006900000073000000
*74000000200000005b000000420102010000005d02010000002902020000002e0000000a000000
*000000001603010602040000004f000000280000006e0000002902320000002e00000020000000
*46000000690000006c00000074000000650000007200000020000000610000006c0000006c0000
*0020000000650000006c000000650000006d000000650000006e00000074000000730000002000
*000074000000680000006100000074000000200000007300000061000000740000006900000073
*000000660000007900000020000000740000006800000065000000200000007000000072000000
*650000006400000069000000630000006100000074000000650000002e0000000a000000000000
*001703010602040000004f000000280000006e000000290102460000002e000000200000005000
*00006100000072000000740000006900000074000000690000006f0000006e0000002000000074
*00000068000000650000002000000073000000650000007400000020000000690000006e000000
*740000006f0000002000000074000000770000006f000000200000007300000065000000740000
*00730000002c000000200000006f0000006e000000650000002000000077000000690000007400
*00006800000020000000610000006c0000006c00000020000000650000006c000000650000006d
*000000650000006e00000074000000730000002000000074000000680000006100000074000000
*20000000730000006100000074000000690000007300000066000000790000000a010231000000
*200000007400000068000000650000002000000070000000720000006500000064000000690000
*006300000061000000740000006500000020000000610000006e00000064000000200000006f00
*00006e00000065000000200000007700000069000000740000006800000020000000610000006c
*0000006c00000020000000650000006c000000650000006d000000650000006e00000074000000
*73000000200000007400000068000000610000007400000020000000640000006f0000006e0102
*010000002701021900000074000000200000007300000061000000740000006900000073000000
*660000007900000020000000740000006800000065000000200000007000000072000000650000
*006400000069000000630000006100000074000000650000002e0000000a01020a000000200000
*0053000000650000006500000020000000610000006c000000730000006f000000200104010000
*000000000000210000000000000000000000000000000102020000002e0000000a000000000000
*001801030106020a0000004f000000280000006e0000002a0000006c0000006f00000067000000
*200000006e000000290102030000002e000000200000000a010201000000200107010401000000
*000000000018000000000000000000000000000000010204000000200000006600000020000000
*730102210000002000000069000000730000002000000074000000680000006500000020000000
*730000006500000074000000200000006f000000620000007400000061000000690000006e0000
*006500000064000000200000006200000079000000200000006100000070000000700000006c00
*000079000000690000006e00000067000000200107020100000066010214000000200000007400
*00006f000000200000006500000061000000630000006800000020000000650000006c00000065
*0000006d000000650000006e00000074000000200000006f000000660000002001070201000000
*7302020000002e0000000a0301020200000049000000740102010000002701023e000000730000
*0020000000770000006f000000720000007400000068000000200000006e0000006f0000007400
*0000690000006e0000006700000020000000740000006800000061000000740000002000000074
*00000068000000650000002000000073000000690000007a00000065000000200000006f000000
*660000002000000074000000680000006500000020000000720000006500000073000000750000
*006c00000074000000200000006d00000061000000790000002000000062000000650000002000
*0000730000006d000000610000006c0000006c0000006500000072000000200000006900000066
*0000002c0000000a01020a00000020000000660000006f0000007200000020000000730000006f
*0000006d00000065000000200107020500000028000000780000002c0000007900000029010202
*0000002c00000020010701020200000078000000200102010000002f0102040000003d00000020
*00000079000000200102010000002601020100000026020b000000200000006600000020000000
*78000000200000003d0000003d0000002000000066000000200000007902010000000a00000000
*000000190103010602040000004f000000280000006e0000002902070000002e00000020000000
*540000006800000065000000200000000a01030107010401000000000000000019000000000000
*0000000000000000000101020800000020000000660000002000000073000000200000003d0000
*003d00000020010401000000000000000018000000000000000000000000000000010204000000
*200000006600000020000000730102160000002c00000020000000620000007500000074000000
*20000000770000006f000000720000006b00000073000000200000006f0000006e0000006c0000
*0079000000200000007700000068000000650000006e00000020010702010000006601020f0000
*00200000006900000073000000200000006d0000006f0000006e0000006f000000740000006f00
*00006e00000069000000630000002e0000000a0102010000002001060220000000540000006800
*00006500000020000000700000007200000065000000630000006f0000006e0000006400000069
*00000074000000690000006f0000006e000000200000006900000073000000200000006e000000
*6f0000007400000020000000630000006800000065000000630000006b00000065000000640000
*002e0102010000000a02190000002000000053000000650000006d000000690000002d00000066
*0000006f000000720000006d000000610000006c0000006c000000790000002c00000020000000
*770000006500000020000000680000006100000076000000650000003a0000000a0b01022f0000
*0020000000610000006e00000064000000200000005b00000078000000200000003c0000002000
*000079000000200000003d0000003d0000003e0000002000000066000000200000007800000020
*0000003c00000020000000660000002000000079000000200000007c0000002000000078000000
*200000003c0000002d000000200000006c000000730000002c0000002000000079000000200000
*003c0000002d000000200000006c000000730000005d000000200000000a010235000000200000
*002000000020000000200000002000000020000000200000002000000020000000200000002000
*000020000000200000002000000020000000200000002000000020000000200000002000000020
*0000003d0000003d0000003e000000200000006d00000061000000700000004d0000006f000000
*6e0000006f000000740000006f0000006e00000069000000630000002000000066000000200000
*0073000000200000003d0000003d000000200000006d0000006100000070000000200000006600
*000020000000730000000a02190000002000000020000000200000002000000020000000770000
*0068000000650000007200000065000000200000006c00000073000000200000003d0000002000
*0000740000006f0000004c00000069000000730000007400000020000000730000000a00000000
*0000001a03010602040000004f000000280000006e00000029023b0000002e0000002000000046
*0000006f0000006c00000064000000200000006f00000076000000650000007200000020000000
*74000000680000006500000020000000650000006c000000650000006d000000650000006e0000
*007400000073000000200000006f00000066000000200000006100000020000000730000006500
*00007400000020000000690000006e00000020000000610000006e00000020000000750000006e
*000000730000007000000065000000630000006900000066000000690000006500000064000000
*200000006f000000720000006400000065000000720000002e0000000a00000000000000330301
*0602040000004f000000280000006e0000002902130000002e00000020000000500000006f0000
*0073000000740000002d0000006f00000072000000640000006500000072000000200000006600
*00006f0000006c000000640000002e0000000a000000000000001b03010602040000004f000000
*280000006e0000002902190000002e000000200000005400000068000000650000002000000065
*0000006c000000650000006d000000650000006e0000007400000073000000200000006f000000
*660000002000000061000000200000007300000065000000740000002e0000000a000000000000
*001c03010602040000004f000000280000006e0000002902290000002e00000020000000430000
*006f0000006e000000760000006500000072000000740000002000000074000000680000006500
*00002000000073000000650000007400000020000000740000006f000000200000006100000020
*0000006c000000690000007300000074000000200000006f000000660000002000000065000000
*6c000000650000006d000000650000006e00000074000000730000002e0000000a000000000000
*001d03010602040000004f000000280000006e0000002902340000002e00000020000000430000
*006f0000006e000000760000006500000072000000740000002000000074000000680000006500
*00002000000073000000650000007400000020000000740000006f00000020000000610000006e
*00000020000000610000007300000063000000650000006e00000064000000690000006e000000
*67000000200000006c000000690000007300000074000000200000006f00000066000000200000
*00650000006c000000650000006d000000650000006e00000074000000730000002e0000000a00
*0000000000001e030106020a0000004f000000280000006e0000002a0000006c0000006f000000
*67000000200000006e0000002902280000002e0000002000000043000000720000006500000061
*000000740000006500000020000000610000002000000073000000650000007400000020000000
*66000000720000006f0000006d0000002000000061000000200000006c00000069000000730000
*0074000000200000006f0000006600000020000000650000006c000000650000006d0000006500
*00006e00000074000000730000002e0000000a000000000000001f03010602040000004f000000
*280000006e000000290102350000002e000000200000004200000075000000690000006c000000
*640000002000000061000000200000007300000065000000740000002000000066000000720000
*006f0000006d00000020000000610000006e000000200000006100000073000000630000006500
*00006e00000064000000690000006e00000067000000200000006c000000690000007300000074
*00000020000000690000006e000000200000006c000000690000006e0000006500000061000000
*720000002000000074000000690000006d000000650000002e0000000a01020100000020010602
*3a00000054000000680000006500000020000000700000007200000065000000630000006f0000
*006e000000640000006900000074000000690000006f0000006e00000020000000280000006900
*00006e000000700000007500000074000000200000006c00000069000000730000007400000020
*000000690000007300000020000000610000007300000063000000650000006e00000064000000
*690000006e0000006700000029000000200000006900000073000000200000006e0000006f0000
*007400000020000000630000006800000065000000630000006b00000065000000640000002e02
*010000000a000000000000002003010602040000004f000000280000006e0000002901024a0000
*002e000000200000004200000075000000690000006c0000006400000020000000610000002000
*00007300000065000000740000002000000066000000720000006f0000006d0000002000000061
*0000006e00000020000000610000007300000063000000650000006e0000006400000069000000
*6e00000067000000200000006c000000690000007300000074000000200000006f000000660000
*002000000064000000690000007300000074000000690000006e00000063000000740000002000
*0000650000006c000000650000006d000000650000006e00000074000000730000002000000069
*0000006e000000200000006c000000690000006e00000065000000610000007200000020000000
*74000000690000006d000000650000002e0000000a010201000000200106024300000054000000
*680000006500000020000000700000007200000065000000630000006f0000006e000000640000
*006900000074000000690000006f0000006e0000002000000028000000690000006e0000007000
*00007500000074000000200000006c000000690000007300000074000000200000006900000073
*000000200000007300000074000000720000006900000063000000740000006c00000079000000
*20000000610000007300000063000000650000006e00000064000000690000006e000000670000
*0029000000200000006900000073000000200000006e0000006f00000074000000200000006300
*00006800000065000000630000006b00000065000000640000002e02010000000a000000000000
*002103010602080000004f000000280000006c0000006f00000067000000200000006e00000029
*0102120000002e0000002000000054000000680000006500000020000000650000007800000070
*00000072000000650000007300000073000000690000006f0000006e0000002000000028010701
*040100000000000000002100000000000000000000000000000001020600000020000000780000
*002000000073000000650000007401020c00000029000000200000006900000073000000200000
*00610000002000000070000000610000006900000072000000200107020b000000280000007300
*00006500000074000000310000002c000000730000006500000074000000320000002901020100
*00000a010207000000200000007700000068000000650000007200000065000000200107020400
*00007300000065000000740000003101021b00000020000000630000006f0000006d0000007000
*000072000000690000007300000065000000730000002000000074000000680000006500000020
*000000650000006c000000650000006d000000650000006e000000740000007300000020000000
*6f00000066000000200107020300000073000000650000007401020b000000200000006c000000
*650000007300000073000000200000007400000068000000610000006e00000020010702010000
*007801020500000020000000610000006e00000064000000200107020400000073000000650000
*0074000000320102010000000a01021b00000020000000630000006f0000006d00000070000000
*720000006900000073000000650000007300000020000000740000006800000065000000200000
*00650000006c000000650000006d000000650000006e0000007400000073000000200000006f00
*000066000000200107020300000073000000650000007401020e00000020000000670000007200
*00006500000061000000740000006500000072000000200000007400000068000000610000006e
*00000020010702010000007802020000002e0000000a000000000000002203010602080000004f
*000000280000006c0000006f00000067000000200000006e0000002901020d0000002e00000020
*000000500000006500000072000000660000006f000000720000006d0000007300000020000000
*610000002001040100000000000000002100000000000000000000000000000001010224000000
*2000000062000000750000007400000020000000610000006c000000730000006f000000200000
*0072000000650000007400000075000000720000006e0000007300000020000000770000006800
*000065000000740000006800000065000000720000002000000074000000680000006500000020
*0000007000000069000000760000006f000000740000000a022800000020000000650000006c00
*0000650000006d000000650000006e000000740000002000000077000000610000007300000020
*000000660000006f000000750000006e0000006400000020000000690000006e00000020000000
*740000006800000065000000200000006f000000720000006900000067000000690000006e0000
*00610000006c000000200000007300000065000000740000002e0000000a000000000000003403
*010602080000004f000000280000006c0000006f00000067000000200000006e0000002901020d
*0000002e00000020000000500000006500000072000000660000006f000000720000006d000000
*730000002000000061000000200104010000000000000000210000000000000000000000000000
*000101021c0000002000000062000000750000007400000020000000610000006c000000730000
*006f0000002000000072000000650000007400000075000000720000006e000000730000002000
*0000740000006800000065000000200000007000000069000000760000006f000000740000000a
*022d00000020000000650000006c000000650000006d000000650000006e000000740000002000
*000074000000680000006100000074000000200000007700000061000000730000002000000066
*0000006f000000750000006e0000006400000020000000690000006e0000002000000074000000
*6800000065000000200000006f000000720000006900000067000000690000006e000000610000
*006c000000200000007300000065000000740000002e0000000a00000000000000230103010602
*080000004f000000280000006c0000006f00000067000000200000006e0000002902270000002e
*0000002000000044000000650000006c0000006500000074000000650000002000000061000000
*6e000000640000002000000066000000690000006e000000640000002000000074000000680000
*0065000000200000006d000000690000006e000000690000006d000000610000006c0000002000
*0000650000006c000000650000006d000000650000006e000000740000002e0000000a0b023200
*00002000000064000000650000006c00000065000000740000006500000046000000690000006e
*000000640000004d000000690000006e0000002000000073000000650000007400000020000000
*3d000000200000002800000066000000690000006e000000640000004d000000690000006e0000
*00200000007300000065000000740000002c0000002000000064000000650000006c0000006500
*000074000000650000004d000000690000006e0000002000000073000000650000007400000029
*0000000a00000000000000240103010602080000004f000000280000006c0000006f0000006700
*0000200000006e0000002902270000002e0000002000000044000000650000006c000000650000
*00740000006500000020000000610000006e000000640000002000000066000000690000006e00
*00006400000020000000740000006800000065000000200000006d000000610000007800000069
*0000006d000000610000006c00000020000000650000006c000000650000006d00000065000000
*6e000000740000002e0000000a0b02320000002000000064000000650000006c00000065000000
*740000006500000046000000690000006e000000640000004d0000006100000078000000200000
*00730000006500000074000000200000003d000000200000002800000066000000690000006e00
*0000640000004d0000006100000078000000200000007300000065000000740000002c00000020
*00000064000000650000006c0000006500000074000000650000004d0000006100000078000000
*20000000730000006500000074000000290000000a000000000000002503010602080000004f00
*0000280000006c0000006f00000067000000200000006e000000290102340000002e0000002000
*000052000000650000007400000072000000690000006500000076000000650000007300000020
*000000740000006800000065000000200000006d000000690000006e000000690000006d000000
*610000006c000000200000006b0000006500000079000000200000006f00000066000000200000
*00740000006800000065000000200000007300000065000000740000002c000000200000006100
*00006e000000640000002000000074000000680000006500000020000000730000006500000074
*0000000a01021e0000002000000073000000740000007200000069000000700000007000000065
*00000064000000200000006f000000660000002000000074000000680000006100000074000000
*20000000650000006c000000650000006d000000650000006e000000740000002c000000200000
*006f00000072000000200104010000000000000000350000000000000002000000000000000402
*190000002000000069000000660000002000000070000000610000007300000073000000650000
*006400000020000000610000006e00000020000000650000006d00000070000000740000007900
*0000200000007300000065000000740000002e0000000a00000000000000260301060208000000
*4f000000280000006c0000006f00000067000000200000006e000000290102340000002e000000
*200000005200000065000000740000007200000069000000650000007600000065000000730000
*0020000000740000006800000065000000200000006d0000006100000078000000690000006d00
*0000610000006c000000200000006b0000006500000079000000200000006f0000006600000020
*000000740000006800000065000000200000007300000065000000740000002c00000020000000
*610000006e00000064000000200000007400000068000000650000002000000073000000650000
*00740000000a01021e000000200000007300000074000000720000006900000070000000700000
*006500000064000000200000006f00000066000000200000007400000068000000610000007400
*000020000000650000006c000000650000006d000000650000006e000000740000002c00000020
*0000006f0000007200000020010401000000000000000035000000000000000200000000000000
*040219000000200000006900000066000000200000007000000061000000730000007300000065
*0000006400000020000000610000006e00000020000000650000006d0000007000000074000000
*79000000200000007300000065000000740000002e0000000a0000000000000027030106020400
*00004f000000280000006e0000002901023b0000002e0000002000000053000000680000006f00
*000077000000200000007400000068000000650000002000000074000000720000006500000065
*000000200000007400000068000000610000007400000020000000690000006d00000070000000
*6c000000650000006d000000650000006e00000074000000730000002000000074000000680000
*0065000000200000007300000065000000740000002e0000002000000054000000680000006500
*000020000000740000007200000065000000650000002000000069000000730000002000000073
*000000680000006f000000770000006e0000000a022200000020000000690000006e0000002000
*00006100000020000000630000006f0000006d0000007000000072000000650000007300000073
*00000065000000640000002c0000002000000068000000610000006e0000006700000069000000
*6e0000006700000020000000660000006f000000720000006d00000061000000740000002e0000
*000a00000000000000280103010602040000004f000000280000006e000000290102120000002e
*000000200000005400000068000000650000002000000065000000780000007000000072000000
*650000007300000073000000690000006f0000006e00000020000000280107021a000000730000
*00680000006f000000770000005400000072000000650000006500000057000000690000007400
*0000680000002000000068000000610000006e0000006700000020000000770000006900000064
*00000065000000200000006d000000610000007001020800000029000000200000007300000068
*0000006f00000077000000730000000a0102260000002000000074000000680000006500000020
*000000740000007200000065000000650000002000000074000000680000006100000074000000
*20000000690000006d000000700000006c000000650000006d000000650000006e000000740000
*007300000020000000740000006800000065000000200000007300000065000000740000002e00
*0000200000004900000066000000200107020400000068000000610000006e0000006701020400
*00002000000069000000730000000a010201000000200107020400000054000000720000007500
*0000650102040000002c0000002000000061000000200106020700000068000000610000006e00
*000067000000690000006e00000067010235000000200000007400000072000000650000006500
*00002000000069000000730000002000000073000000680000006f000000770000006e00000020
*0000006f0000007400000068000000650000007200000077000000690000007300000065000000
*200000006100000020000000720000006f00000074000000610000007400000065000000640000
*002000000074000000720000006500000065000000200000006900000073000000200000007300
*0000680000006f000000770000006e0000002e0000002000000049000000660000000a01020100
*000020010702040000007700000069000000640000006501020400000020000000690000007300
*0000200104010000000000000000360000000000000005000000000000000602220000002c0000
*0020000000610000006e0000002000000065000000780000007400000072000000610000002000
*000077000000690000006400000065000000200000007600000065000000720000007300000069
*0000006f0000006e0000002000000069000000730000002000000073000000680000006f000000
*770000006e0000002e0000000a0b010246000000200000005300000065000000740000003e0000
*00200000007000000075000000740000005300000074000000720000004c0000006e0000002000
*0000240000002000000073000000680000006f0000007700000054000000720000006500000065
*000000570000006900000074000000680000002000000054000000720000007500000065000000
*2000000046000000610000006c0000007300000065000000200000002400000020000000660000
*00720000006f0000006d00000044000000690000007300000074000000690000006e0000006300
*0000740000004100000073000000630000004c000000690000007300000074000000200000005b
*000000310000002e0000002e000000350000005d0000000a01020300000020000000340000000a
*010206000000200000002b0000002d0000002d000000320000000a010209000000200000007c00
*000020000000200000002b0000002d0000002d000000310000000a010209000000200000007c00
*000020000000200000002b0000002d0000002d000000330000000a010206000000200000002b00
*00002d0000002d000000350000000a010202000000200000000a01024500000020000000530000
*0065000000740000003e0000002000000070000000750000007400000053000000740000007200
*00004c0000006e00000020000000240000002000000073000000680000006f0000007700000054
*000000720000006500000065000000570000006900000074000000680000002000000054000000
*720000007500000065000000200000005400000072000000750000006500000020000000240000
*002000000066000000720000006f0000006d000000440000006900000073000000740000006900
*00006e00000063000000740000004100000073000000630000004c000000690000007300000074
*000000200000005b000000310000002e0000002e000000350000005d0000000a01020300000020
*000000340000000a010203000000200000007c0000000a010206000000200000002b0000002d00
*00002d000000320000000a010206000000200000007c00000020000000200000007c0000000a01
*0209000000200000007c00000020000000200000002b0000002d0000002d000000310000000a01
*0206000000200000007c00000020000000200000007c0000000a010209000000200000007c0000
*0020000000200000002b0000002d0000002d000000330000000a010203000000200000007c0000
*000a010206000000200000002b0000002d0000002d000000350000000a01020200000020000000
*0a010246000000200000005300000065000000740000003e000000200000007000000075000000
*740000005300000074000000720000004c0000006e000000200000002400000020000000730000
*00680000006f000000770000005400000072000000650000006500000057000000690000007400
*0000680000002000000046000000610000006c0000007300000065000000200000005400000072
*000000750000006500000020000000240000002000000066000000720000006f0000006d000000
*44000000690000007300000074000000690000006e000000630000007400000041000000730000
*00630000004c000000690000007300000074000000200000005b000000310000002e0000002e00
*0000350000005d0000000a010206000000200000002b0000002d0000002d000000350000000a01
*0203000000200000007c0000000a01020300000020000000340000000a01020300000020000000
*7c0000000a010209000000200000007c00000020000000200000002b0000002d0000002d000000
*330000000a010206000000200000007c00000020000000200000007c0000000a01020600000020
*0000002b0000002d0000002d000000320000000a01020600000020000000200000002000000020
*0000007c0000000a0209000000200000002000000020000000200000002b0000002d0000002d00
*0000310000000a000000000000002903010602040000004f000000280000006e00000029022f00
*00002e000000200000005400000065000000730000007400000020000000690000006600000020
*00000074000000680000006500000020000000690000006e000000740000006500000072000000
*6e000000610000006c000000200000007300000065000000740000002000000073000000740000
*007200000075000000630000007400000075000000720000006500000020000000690000007300
*00002000000076000000610000006c00000069000000640000002e0000000a000000000000002a
*03010602080000004f000000280000006c0000006f00000067000000200000006e000000290102
*1e0000002e00000020000000490000006e00000073000000650000007200000074000000200000
*00610000006e00000020000000650000006c000000650000006d000000650000006e0000007400
*000020000000690000006e0000002000000061000000200000007300000065000000740000002e
*0000000a0102420000002000000049000000660000002000000074000000680000006500000020
*00000073000000650000007400000020000000610000006c000000720000006500000061000000
*640000007900000020000000630000006f0000006e0000007400000061000000690000006e0000
*007300000020000000610000006e00000020000000650000006c000000650000006d0000006500
*00006e0000007400000020000000650000007100000075000000610000006c0000002000000074
*0000006f0000002000000074000000680000006500000020000000670000006900000076000000
*650000006e0000002000000076000000610000006c00000075000000650000002c0000000a0224
*000000200000006900000074000000200000006900000073000000200000007200000065000000
*700000006c00000061000000630000006500000064000000200000007700000069000000740000
*006800000020000000740000006800000065000000200000006e00000065000000770000002000
*000076000000610000006c00000075000000650000002e0000000a2b0000000000000000000000
*000000000100000000000000020000000000000003000000000000000400000000000000050000
*000000000006000000000000000700000000000000080000000000000009000000000000000a00
*0000000000000b000000000000000c000000000000000d000000000000000e000000000000000f
*000000000000001000000000000000110000000000000012000000000000001300000000000000
*140000000000000015000000000000001600000000000000170000000000000018000000000000
*0019000000000000001a000000000000001b000000000000001c000000000000001d0000000000
*00001e000000000000001f00000000000000200000000000000021000000000000002200000000
*000000230000000000000024000000000000002500000000000000260000000000000027000000
*00000000280000000000000029000000000000002a2b0000000000000003000000000000000200
*000000000000000000000000000001000000000000000600000000000000050000000000000004
*00000000000000070000000000000008000000000000000d000000000000000c00000000000000
*09000000000000000a000000000000002a000000000000000b0000000000000013000000000000
*001200000000000000140000000000000015000000000000001600000000000000170000000000
*000021000000000000002200000000000000180000000000000019000000000000001a00000000
*0000000e000000000000000f000000000000001000000000000000110000000000000023000000
*000000002400000000000000260000000000000025000000000000001b000000000000001c0000
*00000000001e000000000000001d000000000000001f0000000000000020000000000000002700
*000000000000280000000000000029000000000000003700000000000000000000000000000001
*030000000000000007000000000000000000000000000000010100000000000000070000000000
*000000000000000000000103000000000000000800000000000000000000000000000001030000
*0000000000090000000000000000000000000000000100000000000000000a0000000000000000
*000000000000000100000000000000000b00000000000000000000000000000001000000000000
*00000c0000000000000000000000000000000100000000000000000d0000000000000000000000
*000000000100000000000000000e0000000000000000000000000000000100000000000000000f
*000000000000000000000000000000010000000000000000100000000000000000000000000000
*000100000000000000001100000000000000000000000000000001000000000000000012000000
*000000000000000000000000010000000000000000130000000000000000000000000000000100
*000000000000001400000000000000000000000000000001000000000000000015000000000000
*000000000000000000010000000000000000160000000000000000000000000000000100000000
*000000001700000000000000000000000000000001000000000000000018000000000000000000
*000000000000010000000000000000190000000000000000000000000000000100000000000000
*001a0000000000000000000000000000000100000000000000001b000000000000000000000000
*0000000100000000000000001c0000000000000000000000000000000100000000000000001d00
*00000000000000000000000000000100000000000000001e000000000000000000000000000000
*0100000000000000001f0000000000000000000000000000000100000000000000002000000000
*000000000000000000000001000000000000000021000000000000000000000000000000010000
*000000000000220000000000000000000000000000000100000000000000002300000000000000
*000000000000000001000000000000000024000000000000000000000000000000010000000000
*000000250000000000000000000000000000000100000000000000002600000000000000000000
*000000000001000000000000000027000000000000000000000000000000010000000000000000
*280000000000000000000000000000000100000000000000002900000000000000000000000000
*00000100000000000000002a0000000000000000000000000000000100000000000000002b0000
*000000000000000000000000000100000000000000002c00000000000000000000000000000001
*00000000000000002d0000000000000000000000000000000100000000000000002e0000000000
*000000000000000000000100000000000000002f00000000000000000000000000000001000000
*000000000030000000000000000000000000000000010000000000000000310000000000000000
*000000000000000100000000000000003200000000000000000000000000000001000000000000
*000033000000000000000000000000000000010000000000000000340000000000000000000000
*000000000100000000000000003500000000000000000000000000000001000000000000000036
*000000000000000000000000000000010300000000000000370000000000000002000000000000
*00380000000000000000390000000000000000000000000000000100000000000000003a000000
*0000000000000000000000000100000000000000003b0000000000000002000000000000000401
*000000000000003c0000000000000005000000000000000601000000000000003d000000000000
*003e0000000000000018756e626f7865642d636f6e7461696e6572732d302e302e310000000000
*000010446174612e5365742e556e626f7865640000000000000004626173650000000000000009
*446174612e4c697374000000000000000a446174612e4d6179626500000000000000086768632d
*7072696d00000000000000084748432e426f6f6c0000000000000005426f786564000000000000
*00025553000000000000000455536574000000000000000473697a6500000000000000046e756c
*6c00000000000000025c5c00000000000000066d656d62657200000000000000096e6f744d656d
*6265720000000000000005656d707479000000000000000973696e676c65746f6e000000000000
*000664656c6574650000000000000010697350726f7065725375627365744f6600000000000000
*0a69735375627365744f66000000000000000766696e644d696e000000000000000766696e644d
*6178000000000000000964656c6574654d696e000000000000000964656c6574654d6178000000
*0000000006756e696f6e730000000000000005756e696f6e000000000000000a64696666657265
*6e6365000000000000000c696e74657273656374696f6e000000000000000666696c7465720000
*000000000009706172746974696f6e00000000000000036d6170000000000000000c6d61704d6f
*6e6f746f6e69630000000000000004666f6c640000000000000005656c656d7300000000000000
*06746f4c6973740000000000000009746f4173634c697374000000000000000866726f6d4c6973
*74000000000000000b66726f6d4173634c697374000000000000001366726f6d44697374696e63
*744173634c697374000000000000000573706c6974000000000000000b73706c69744d656d6265
*72000000000000000d64656c65746546696e644d696e000000000000000d64656c65746546696e
*644d617800000000000000076d696e5669657700000000000000076d6178566965770000000000
*00000873686f7754726565000000000000000c73686f7754726565576974680000000000000005
*76616c69640000000000000006696e736572740000000000000004766965770000000000000005
*766965776b00000000000000077669657742696e00000000000000037469700000000000000003
*62696e000000000000000762616c616e6365000000000000000353657400000000000000084748
*432e4c6973740000000000000005666f6c646c0000000000000005666f6c647200000000000000
*0b73706c69744c6f6f6b757000000000000000074e6f7468696e67000000000000000454727565
*
addfile ./unboxed-containers-0.0.1.tar.gz
binary ./unboxed-containers-0.0.1.tar.gz
oldhex
*
newhex
*1f8b0800000000000003ed7d6d7bdb36b2e8f97af82b50b7cf5adc50b225db69ea13652ddb4aa2
*aedfd6b2dbed757c5d4aa22d6e285225295bcea6f7b7df99c12bdf2cb955fb9c736fb4db982406
*03cc6030180c06c02c1c44736f541f4661eafaa11727f5cdc666a3b9f11fabfb6dc2efdb9d1dfa
*0bbffc5f7a6e369b2f5fee6cefec6cc3f7e6d64e73fb3fd8ce0aeb50f99b25a91b43557e2f9e3c
*71ff437eb3aaf63fea1d744ffadd559481fc78b9bd5dd5fead6f77becdb5fff6ce16b4ff9fc2c4
*ffcfdbff209a3ec6fedd3865b5a1cd5a9b9bdfb1eee8c18d47ecef132f4dad4e10304a4f58ec25
*5e7cef8d1a9675ee8dfc248dfdc12cf5a390b9e188cd128ff9214ba2593cf4e8cbc00fddf891dd
*46f12471d8839f8e5914d3df68965a9368e4dffa43171138cc8d3d36f5e2899fa6de884de3e8de
*1fc1433a7653f8c7032441103df8e11d03411df99829c14c165472d7b218fcfecab2b54a58742b
*ab338c461e9b4053031128e684d31d44f79824184048180ba3d41f7a0e40f8090b001fa2310b0d
*47b91a41a1c3c0f5275edca8aa0994687043d604c81ccda076aa32a20aaa4acfaf8cc0a0abc404
*b1a368389b78d0c765836d405b449012b3899b7ab1ef0689e2bbc0424d46990d62148d279e4fd9
*112074271e56ad97b8ee907d1f855e0275d769d416549a2231e418a338810a3cb281871204d444
*cc0b47f0d54361810a4da2d4639c53208323a8e9bdaae02d2473de24d16dfa804224c48b25536f
*88f205597d94ba18252be43296249c8e8bf7bd3eeb9fbebdf8b173de65f07c767efa43efb07bc8
*f67f6217efbbece0f4eca7f3debbf717ecfde9d161f7bccf3a2787f0f5e4e2bcb77f79717adeb7
*d63a7dc8b946099d939f58f79f67e7dd7e9f9d9eb3def1d9510f9001f6f3cec945afdb7758efe4
*e0e8f2b077f2ce6180809d9c5e5847bde3de05805d9c3a5468311b3b7dcb8ebbe707efe1b5b3df
*3bea5dfc44e5bded5d9c60596f4fcfad0e3beb9c5ff40e2e8f3ae7ececf2fcecb4df6548d661af
*7f70d4e91d770f1b503a94c8ba3f744f2e58ff7de7e8284ba575fae349f71cab6e92c8f6bbeca8
*d7d93fea624144e461efbc7b7081d4e8a703601c54efc8b1fa67dd831e3c002fba404be7fc2747
*e0ec77ff71094090c80e3bc79d77405a6d0147a0490e2ecfbbc758656043ff72bf7fd1bbb8bce8
*b277a7a787c4e77ef7fc0718acfaffc58e4efbc4accb7ed7b10e3b171d2a185000a720199ef72f
*fb3de259efe4a27b7e7e7976d13b3db1a1797f04ae401d3b90f590987b7a82a4828c744fcf7f42
*a4c803e2bdc37e7cdf85efe7c84fe2540759d0078e1d5c9860501e30f0c2d234b293eebba3debb
*eec94117534f11cb8fbd7ed786a6eaf511a047c542e343999744323611d4caa24743601d6a48d6
*7bcb3a873ff4b0da02189abedf1362422c3b782fd8ddb00afabf72fcdff7c2e178e2c61f1be3e4
*778e318bc6ffed97dbb9f17fe7db9dcd2fe3ff9ff1f327d3284e59ff3149bd49e31c0686686265
*3f5ec038d24be5c703d4dc51d0e8ce87de9406939a77ef063318446c4b02fd327303d0bea0cf0f
*ddd46df4bd94b909eb5724f7c25440f4aa11342eb9a422d8a56561996cc2e6accda6b3b49fc6ac
*36612f5eb035b666b3376f584a95d6756373db82b177e81de1283a816c02430307cf51cc12ef17
*56030a42486afdefe62ba02504d108617cae71b6b0b9c3c4d3a3cdda6fe44b6deec0fb030c6e7c
*008ff9e73b4054abb9cec076eed6d74d00fc41c21d7c6c2b689d32e0f03a69dd407b0e3803d709
*006b6dec3ae3816d3faf244000f9c7aefd4491083340dc58b6354183a90d1604c107d052770cde
*271ffbe9e81d8ca9db2d850806f3dd5d76050d7a6d7e6bb3d4fd089600ab71fc09bbb3295db7c8
*1a60f262b04ec0a0127487b3c900f4d11a6020e0d44bd27df3e5d27c91cff53abdf6f0dd1209ba
*f6097b5de72dbf061a0fac1ab02ab048943ff95b63dfb07e036d0baa99c06b5415a571e261e558
*f6873927ee94d56e037f0a38045062abcaec2f559b7d14745125c479a96b5343fc970d82005c05
*36caac850a66eb56bb94000d89cd36eb79b9543d2f0db6e5ea59e4da6515dbb235bbcc71eddf75
*4bb6e7e20a094da2d0f69eaa10072ea952b642bd6c85eabf1607d1ffc1bfcaf11f58339bfefeb1
*1f7f0bc6ffcdcd9d97f9f11ffef765fcff337e62bc3d3467787df818784aef7bb7ee2c488fe1ed
*ff29c9fff2c35f65ff2f263486eec00d7e43190bfa7ff3db9739ff6f6b73abb9f5a5ffff193ff4
*ceecfee77fe2b0576c71eb1efe018db04be9241756e00fbd30f1f8a7fdfee196fc52bff5036f17
*3e0acfb1e5ced271140be4c2a9d86908bf222a175eca6e593a7bed7dc4bf7b7700183486d1e48d
*050d35f0033f7de439bcf9d48b7df26905d6389a7853f74e546b9ca6d3dd8d0dc81585ee08736f
*c49e3bf2626b085381bb281628706e61258f61344dfc847fea7bc16d3d8289cdc4ff841685600a
*4c0fd284cd12fc74ef7b0f6ceaa6a9170b17dc08f0b05b7702b5f3126be425c3d8a7b9d1ee8a50
*2a8fe0ae30d873be5ac5d6c1cc0f46f5f471ea7148a1caa9e7d6656b32f6a6dd6cb42c68b941ec
*c68f6018f17c236fea85a3649791a93470130f20d936fbcb5fd86bb6dd6839f45dcb07a66e365a
*20179b1c66b3b1852f16b54e9480304da2d12cf0925d4bf2db9ccbc1c7bbf190780356dc2eabdf
*86511d080aeb11d43570a753604e5df1a57eda0290913f4c93fa70ecb9539806cebde10ce422f0
*94f8025beb03e9bc801250d2ead0bcccf46814487e92623121819466837a014f6f36e87559ae70
*389c98fa2987f94e42348967e420fd833996efff95fa1f4b5ed12220eac3e7adff6d6fbddcf9b2
*fef767fc9e6e7f90bc15c8c0f3db7fa7d9dafcd2fe7fc66f71fb0bcdf33ba6824fda7fcd2df87f
*7efef72dc07fb1fffe8cdfbfeb5fb3a3cec9bbcbcebb2ebb00bbe1adb0391c767076e6b01fc032
*3913c389c38edd3b7ff8de4dc60e1362713103fb025204ccbb199823f0fa36f0e63e8ccae82df6
*e6a9f1a527bcaa09fbbafeab85c59fd2224cffe6ddfb8345e31966813c2bfd59f53afb8cff1cd3
*c0cb0dacdd92a11740f46a3981a01966ae96934d8670b91fc21dba6ec88e3cff5f5e88602d043b
*e296b32c91ac69ac88b28de973de124690beb48579ce8c2d0cc96730a79700bbb8a61dd6a7f409
*e8aba175a84c4b276b7b3aca3a4da9616d8b33a81332eff6d61ffa5004239b522f26e3323b98b2
*0d01daf7d1673e71c347763b0b8704c2d7806b83192d69d3b230d502bfdb6c188044d1ca2de65f
*3b8bbd6036f2d6782eb1f8cdad22e6a3c53c7383e09171cf05d4744f2d16ec39cc6bdcc98abc61
*4c7a37f26b08357446da59a0054b0ef02ef05e40ed8b2c58478875ac205a9123065f3712ff9307
*af01cafb68438600a4b187cc886244c65f20ffc6209a8518f320e0376c2c96cf2506f8f9715794
*cf70f5bd9f7ad331885267e46274c587b58dae6a1f6c8d5de60a4c38bf7087e9c6873587727f1f
*cde2d00db0ccb7a27de0ed2c8eee62773241e8addab6bdbbb3b355df79d972d8e9308dd0fdd9fc
*eebb2d8ee1b5985f3d3c3c3492073f491aaedf98f869c31bcd36fe8f8b35dad8dfdf78d3302bfc
*7d839df81e74ea3b2f48698ad36d1c37d8b9072546c188630632f6399312cf8d8763cd9e3c7724
*35fd5ee798fd4b9304fd633a235f70abd6b45163219ae677df6ec9da9c6040810a2cc9352434df
*46e0ddc20cc2c756dca0e50400f3381055c5452cb77e9c0019f11d455550fc8a1b3cb88f1844e1
*dd7a71cc6319306fe261c48683ae67e8a82e16c8fc1091accf4228741d231dd67d500471bade60
*ec14a998c589e73055158a7c0105128501c54a44031e8b83581e500e3c125fe8ee3ece1ff1d5bf
*77030fbb227427411ca85e980653872597f92ce6ea4266962c3aa6d81ca080022cd6647f58438a
*30ce27a341882e98eb47132865c8f50746a210aa95ea69d0fd420d143b34b34c850b34fc95d674
*b0a65656199b8b1604a9d6f9babf38a7f1c8e98fa307e71c18e560310e0e8aa838336860fcebe7
*3ed0224a8d2fa558c5da9c4e71792b12cb103a5bedc38732f07fcc3c9a989ba0e12c08729f50c3
*e43ef1d58a7cd6283d2efbee27fd1988527a7a5b48008d00552e4d2e56f740adc244610e933799
*a6794a509e032f2dc0f24e90fb3882ce977a0b2b3001f59ae705f52ff127cf781071e8a7d8430a
*9580a1103a6d819662a96ffd202df0f4b6ece3d48d53bf843bc9143a5ed937d15cc5328f61169f
*859f947d398ea0cda3d01f96a0780b0a375f69fc5452981f7ed83876e70512c31124957d2dc0f2
*e62b428bef15f06f4b4b30d20af926ee1c8dd5fc573fa4afa5222b1c62c5c4bf325c22cc0b328c
*0179214aa31240b9e6f8b4f0804a88471e8e134111451a75926105eaea145cc501eb2b2d8378b2
*2eecd01bcceeee7400a1c49a802ebc8031b8e2f38f68b3659360d4f1b3c2250312646c87b0efd8
*d81fe1b056e3fdc5a1300c07759c03e26b574482d0d22d1846449f69dea1bcfb3010f0bfb546c3
*b633e93f46f128f3a117a6b4ba0cf4ff0be3317118c39566648280bb80d7c63f66fef0e3c1d81b
*7e6499fc7c393e9c0d9c04be2d555f1cc1bef66fd9cdcdbba34effdde98f37ef3bfdbf778f8e6e
*6e7491f3b481838ff5b517828a5ad174071a440f40ab40f8abe587b7fe3c60dfb10f1f40862c9a
*46b18dd35af862626f3460f4f5d8bad6b1eb0d0b473a0c0f01e39bb90e4a3f73298e86466497d5
*8b4fd6a489e8272d5c8754b8187c9db456c7993e3ae2d182cbd8ebdcf65c11b3c862ea237afcb5
*19091f71ac83e63a9a6418a804d6d49ebbd7b0c8fbcf7941e017fe94e57af367069632c3f9f3e5
*c959e7e0ef3837665f51115fb9ecab1a67a06d3c59164eb4702a0368758c109525d86dc9109acf
*ac3b4f63983690a51e7b6065715b16c36a41c03f017f420caac67866976b1a9a4842fbea461448
*15cece740ae62be22158b48f8130112b4e1e743f9c91ad9a288c1f11e500b1d58838782815157c
*1ad8b97703cb2dfb48d16243f4f153f173e0ba622a3233613e0b588c393fca1705804d0009b706
*3938b070dd412461fb113168b573be91ab6038f60332ba5d245355094bcc70abf635760bfe2eff
*b2afed4c8622052c43c28d2601d0f9308370e04d2031c880090aa8bbb5bc1ddd10e5ac19544297
*6e6287c6692f0fc9c252d58448c49783103778680e3652560aa48d4a496dd11e9bf4bace055113
*c13f264008feafcd92929af412ee13a089195a9758fadf080e878f6ce9fb5114e824e41f55031e
*da6cd340de9f808546f2a8228aa258acd84c35ca420e21b9991c03deb40be5b580729feb1eee20
*91c3ae504888711126137c9e11dfcf44f6117b417fcfd9eb366b72dd8295c56fff2ccd718e2b55
*6076a5ee5f3902530051e262b317e10fe4ee1ee4ee1104ef11242fafb724628060af1946fc4584
*19a1c50f7bae1fdeb07b56a3bf58afe0d166b90911c705c5cdb7c0606ac17f5b58deebbaaa1b14
*2171cdb70c6469cb166ff798297eb40b7cca507d5ea03af8ad54c739aa8312aae19bac2b80c7f6
*33a98e4ba826a49aec39916d524d6b8f0fbe7046ca5fb57464634cf1c7f926ba5750483a974971
*21e99f22494be70bd654509619899b371da4d527c7385dad09d70c18e8ab26a06057e26a2f7ca3
*1921ff069d77e8a6f21b8f385405d25809e588e854d0992545d1e0de0585a813dba2334289e71e
*6df2b9415b11341034cd453cf3106492a99980bb6535d2eda8ba50a127301601e309de000ad8cf
*829a9f6968d36f26546cadcc610ed5e43e895520fb55598b4174c742a5d495a3cd1856fe6689f8
*cb32d331a70649d90b7054f57791d14cc3c99486cf683245638fcf1f01428e486fdd00c4ff1bf6
*e1863dca41943a3d657c347bfcd10526425e2de7efe4272ddfdd7fc8d6b616d28b6e719366e5b0
*599a6c9d037a37108518bf618a19e9eae420e3ec59054e2d0ecad250e37ac3e28f3402f3ce2806
*3bfebd8de3b3954570107b18f2ef6a3f13c7a45f0d6ce6f8a901e642f735917560005021ab62e0
*21ba3156c7bca27051011e3982857c9127d7e56ce05e9465044bb0456428f428a3f3208fa0ebb0
*42df91bdadac03495305c63bec4bb6d177dee500020231862cdeb9eed0e6c671697593417278ae
*58acc59c581aae2e6e689c62483915f63756f3bd06b60ebd32b94c466e79bb61e57db14b4fa249
*2f1472274d96e084ba46c331bcbde6037302e6c15ffe027549b2a076616eafe9100420c05e0da0
*7fd6997fc6ac7b2cf582204199a1cda27b49738f1939712ab197b4f690c8df4a9eca9736c1c451
*84c1db6b6172a405cafec98171c792f1ed3716fccfe2e0ae0d281a5532c079d01b0d4c63450636
*630b701bcc06f50eb0b7b822866499f06028a7f96f31bbc309baeeb6b5207528b77397a25d61f8
*9bf940b1b2ce74ec87fec40d70196e8e0f7f94f18023c68497a5341e4db849df096f757108a1c9
*994a2ef03ad75037c8ab7915f80df0fec6a65694108182c5996cd5945bc0ecea218f8d5ddc3e9d
*a768ad44d113e19cb75584bbf3270987e402e17971b699a6bc088fff8b6da649079058012f24dd
*9d97919ea5a98c7431c6a5c5a697235c659b6786b5d2b6cc353d99df717506d12f69c2a4a6df35
*0d4e439b7ebdc95b2da5446559a088aa6acf2c5165cd14149ab50d325a99a194a8409185ad6c1b
*b91551ab521e97381f6bb055ea0cec2e34cde39d449ea8c003266a7b7c3d3e5947dfd03aae4704
*eb6a8d7e9d64747d0fc6630e553a5a5cf156b8361a4440a7e8d26cd33a5bd04f637f988a9a70d9
*87e4c2309ba96dfa10513d1d1960806b2774f603452260dfc14000b59caf3d74687e79e110147e
*8acb4d8d8a189659e28929890a24d9187ba33baf4e75d8606e7017c57e3a9e1086f73a89517c4e
*6ce6c46dc103ff0e6bf533c1803500c20c43612a19f8dca5009e29d73161bc47b16b895418d4f3
*a32ba436752ad90744d5254747ae3b30476df9f80e1e09d0b20cb8b2bad6a876b488076d41aee7
*924f4f5064e0e73600ffb78488e28fc83210c01c3588f0dfb19fcf5ddeaddbec5f113994c5fadb
*bb54e0005d253e1da50221f4f3aaa2caed9356b6aab2a43224a452a03f4ccc4f6099d979f0b9ac
*8c06979f103c63e114a6faab9bbae9a88155602c4c11347eb3d39316acecb46e58e8b3466f155c
*a0d83f3ad125d3ab6158d1253eb3471a39f3a6129750180d0c98aace990521d9117d1499b14417
*25b03fae8712fa12a3400e781a6871cf28f8009fdf090b25a5953d7c82d176a21f65b3cd4bfa9c
*4da5668065072bf6389bcfc5ff8c2ed733e3715681b3d0e9a86319a564ba1e02778df03f1c2263
*2f99c1440b88f5e42144c640ecb02432a3fd543cea82d331088696633bfbc0ca0e2e08f1138fe8
*888271f420d048ef344a3a80f22534c979be6ed6fd470eb6fb8b06bd4103e746ce37094e6cf69d
*42af0079ea37b427acc37eee374ceefccccce47d4784d1667e1988a71174648c31959db0bd9ada
*b37fd5b976f4cbfeb58d7e02b39d9ea9b032792b7a7306a6c4695f80499b7b99fe9734d9bcc982
*268b9b3812e6125b6cde62418bc52d40861dc7272fcb9b3626a568c07106e2311ba5f3f4a328fa
*389b229654af9180d1106487dc4c1541548396091c3f017c9742e50430ae6da2178ffb1a94ffee
*7b5cf39e234d427d41e9a9f4dd9d44e918e51552b9fe51891efad72b09930e0852ec66fd9e260d
*589d0d747a92b8b8c99d218a3c603f270e792fc86966e8a11f55dd246765da8d871052b8808e11
*5c056e43cba18e93e504c6cc80a2a013b024925b1e9601538b119ec9e7a1ef80e0ab8755748295
*8e9f32eb7481bb58f1b7f6418c598823d396d03a20ead96f464349b731770d67c18c16cb402920
*0c88c970e84cb25faec2a0e844c6c42b0a850555c9444b848b2b3e52bb3e916f0453cbca26c0cd
*141ec695c370b24e7d64bd612921795ed3889549472c501a689e6aa61ab49303ffd9cb3416f6ec
*c252752d683a01eabaec6a994a8e9b4e2c93b32bc3bc7396377f4db43f695987b73257aa4519a8
*89640295f9b2b0f6ca3615a1cfd39dae28f0dd58d909ffaa5c44e46b5f9fb8d37506430779d3a5
*bc4603da36849b45988bb156a887f76ef7e854457738365d847bc91e4918fed74bd713f600a6c9
*984e9c24c782d81f41fef3acd5238e6ba4f93c1e30794b1600da3b09da437b741ed69ec3f6e6ec
*c3469b3da23ffa9607dcdcb2c73d3c506a6a082ffc3b1022ccff0c8424d7dfe4e3b9e86940f96f
*d197224d8306855736f8f7860ccacdf66eb4f184a141dc53f1d1c446f2f8289e3ab404030cf998
*f01d17b4c50219499e0e9191d8b771c1fbac3a94134170f1668811a3dea8b1c1bbf1c4af53a85c
*8021220f1e1bbbf7deaee4ff1b52135773f61ab8d506e2915daf915b40c01c633b02503f8ffce1
*9a95195cfc87794dda24699c3389cec8edc0808ee6226e61a0552667b681966812b3d0accdf349
*cf4806fcbd0604da749695992b287e027d9df972a3dd8cab1b8131f47d15b8f2236e84617ff7e2
*88d4cc0e2231bae0cc7d168aa34a71cf184e4b61e8c58c868f972bf5818e701ce4c31c29c72dfb
*84ad2dceb3a3b7fc081725699d0a21205e52fcbca2ea758dbf6ade2921b099e11f051fdb30c754
*186ee00bb6e627cbd22073a8ae88d42b15708036df7924940a7334c3a0e68b2ac2562742d483ee
*ddd8e7c1ab2bf5599b0aac20440d8b762594af085cb9d72279aefbf90a27e688ef8fa195efcd48
*d5c006e397f6d64b26342c415225f19264a25e6c8a40062c2c0b7a6632c4f87b180acb8a95b89e
*2859824821aceddaeceada2a1dd275bc8aa722358ac5aae1ae74e1c15c73601a36bbe2e0836cca
*a0336df0e157ce25beff6ab5d142fb78ce0ad914b497939327b9bb811b5c0d4627b4cb7180e755
*87749e7800f68c1bd3a929185f6c3163ff2698875773180f319e4061c11471808db15986cd691c
*546c99af2ab03f234a446aa6190b829427a9d484a8f9e1140c109ec120ce2e1a17268d5a2ebabf
*548b85e6085f902aee1b423f2beda60334f3c474f3416dafccb46b26de92fca213cd77aec85f7b
*2d46bac8d8ee440d67316622e3c79c8a405b7835e385aeaee90ff62e7db2e8d5fc5a7e9cebafb5
*f9ee7c4e639742be0e123d9f5b6679eb300a00d236bbfa749dff8e1892753e3df8cc3eb5db7339
*f8e400659dcdf05918a176b3050390f56c39819e3f12ad9289b57fb6f024d4f3c1865d24457921
*30745b8914e5a18534d1a14a3c1e1ea67e5e7807520022c493b5c6818a376dda4a2c367da462e0
*4c22deb51fe83878864716b164ea0ebdece66577f8917f6e48743087147b53a4c72a6661bbbd83
*ea9c576a304bc63e1a63a8861ae2882b5e5db649f286b2479e09d9ae32794725978866ee579b37
*77e7adddf9d6ee7c7b77be43b258052b657a28c3b2b7e5430b8398542c22f0ca7cddb2b3ef3bf0
*3e9f571572f3d47e8fb2a6e454efac6558104a16e039c961ccbe112935fa738e9f86360b03c5bb
*dcaf182fae7e90a90df87f1ef9f73fb356054c4c30750406d9b174dda068a85e809df631b19508
*f27aed333424b162ec3131f3f0a815a1559e0850a962cf39e4351824ca011bf453c2b81ce9dd06
*60127f4a56379e82ae1c72932529da470dd60bf1d1fd44e1343897170768404e7798f2a333120f
*8d421c61c5ccfed64dd06337f1d271344a109d5c4d40ef171fb81101cc527dd22a4328def543b1
*9b2ba15549d419757b65bb0bb321ff6a44838742087edac4c19dc702a8e0bf762ef84f9b64025c
*bfb756e50082baa049b6aab8deea7d0ff854b21341b69a0cf194ef06f1092a13e3b565af701e24
*d6a87effaf2800885a104f8f05ea714f7272062321fa0c711e8c1fce807a1812a7ec0d6b6edaec
*1be21226a0410c63ed9ab208d75883a340ee88216d8562415b7a5781abc819449d950efa9263d0
*d7feedc82bdf7acc189e8e49ac6be322840703f137645400d3e0491cbadd1ba1eb50716c8ddc51
*defc4cd9dac4b59f6f27eef46785d112d8314d9460be1ef2c385adafd1552b40652372c87c0bb2
*0fdcf52c2a55d3f571125b544978926bf3c449e91ba1657c0488bd74160346632e00502bdf6e7d
*99f2e397e41948c2e12f4a4f66837aec86779e5a528e62ffce0f5d7491a3be6db03e2d2eebdc78
*82be2b7ab49fc0b8af4e5772137d104d8a6c71f136200314d2ef5c141b869bb6433f15bb55c10c
*ea6834573c18804c69e80933b4993c621d967025750981d02d4057d910020c0b8001b543f51733
*349817f05b8278941bdec4439e4759162ae2a38beb4a0389fca21c37c1bebbb8e61bf5d5865b9c
*0448ff7414d126d42b339882ea843f512f5e3e9d59130472d3f5d5c7eb0695c33eea1a5d990118
*bf050d5496d8444b37f049a2a0df390942620cb057c135a737be16e835ea4a06c19480f201f46b
*289e1060b68fde23cd17101926bec1baa9ca88b55655255ad00d7c90309e7e4d0e705a788a453d
*65043fe0a9accc839b88d554b19589247955a3e1aa7a26175b903e2eb0f8061de4c17d24c641cf
*e4cdc1d7f566b107468e381d11664d905f34f6c04b1f3c8fd3495d191a22ba46dbe96aec5f737f
*1d679e384b40f70640a2fa036687c63265980e1113d8f782688f1a756fecefad8a95c48082d7f7
*b9715256b1fbef957a842d357592bd5e4d9ff83e209946bdbc30b5e25b81f2a799dcd0cca95005
*b9c458911cf34a9be1962b8f5bd6ea678ef275ab17de85e4bc419dc5c386502caed2acb6a9c8f5
*ba986b1515fed552d57d5a222a96f985965ddcf0c5662f8b7d337781f186cfa4ca24befb2bd675
*d00b431cc052ecfc4d541dfd76aa3208820c2972f5391bdba78312385581aec31fb1dcd5a713a7
*5681ac62238e3707d391eed8c3907a1eb70054c37474cfe67bbfa6ae1fe37e312f6d3af04fcbde
*13e7d8c140b5875ff7c87801dbc54b0a8b6708b007565e422a1a34e45c2848c4448816e5bd2377
*7bacb2372c3e422fb121321f46c13316b64e3ce605a56c17241717190f6544429188e02613f84c
*22f3484159764696caf3d17d8f3591093783617a46ba6a8113cb7a73f152411e25fb51cebc98ee
*ef04ea654b565a0614bde2df4729ed41109106059340dab96247ae618d3c83fd18e0926d83ccd6
*67ce1b67e2c485b039863630670842b88f60e2f28ddf22b898c7f961d6dfc88e523670a7e612bc
*10f57c062f8e89869c482a72ab04f349c9cc8966650ca216530e5222ac3969ad4655945c052b51
*29012673f551c9b1c06148b388411452fd074fe9e45516d4a472a714dfe09bfa7a82c76d619840
*c0906e1c1883cb3b09ccdd382e63bc1796fd6b9ae148b35ecd0684694f4b1f8eb80716f29b7308
*6c563a8d4db8bcf9f2594f2cc4f0db71c1264a52710b2fbf71e0ca0cd9a0d9c1853cadd7a835f7
*bb5f691fa798dac8a38b79371846314ce553f2c339824ec1b44184eb4341d55cc2a4411dc8456b
*4a30b44c11a70c69a29517591df3e81bacd1b9974065c54020531137d6a8515176c7ac67a69bf2
*999f9be82a01ae0a2caa39c0c6474a7063e3708cf3041e9e057213e13a4fe8e91d7e4484321224
*4f15110502184e2fdfce6264016ec0a2c8225c40552d05aa22c493b6b0e2dc7694d3cd06dbc726
*88e8543871e2d62249cc7d8baf4b050f1149d1133225b7e9ab09f03b3e5f36a4358dee68186964
*f92f402a982c45c40dd04df1f80c51114181ba4ac7f8c19c8ef383cfb2ac27b7072e40ef327160
*59ec2654009ec3bc9e806503fc74e4f255ed75dbceb861c422162081de577b9d4fe48d0ffd9957
*4f3047947d4d6b56741a212ddcb11afa6cf4e6996b9bfc97fad66c30b55056436f08b6129ea9ec
*cbae8f3ea628abb7fc90c25730d080f56806facb0cfd44b39007a7bad8eb1f39ea1e45af61e02a
*201ae02c953617014adcd0cbf0fae587f123af01da7b72d98154020c3a5fb1b7519cce4230c230
*1ace273ca3c84b10e578161343714c63033fe53b0b51a0bdf81eaa72ffdfcfa1f03df6d815558a
*7a7ff9e924a5d3153987caed57662a98e398d2634bcf3d0a7bb004a03bc7740598dbb840e7333d
*e23152311ec5554c3d679f58f089c59f70bcfe9c39334c9cc3706e6e25fea48378211b60fc94cb
*762eb31d99d9a80632a73c1debc9e3abc400c5d7e0354f682d4b11cee3b0a7dcbc6353e8e161ea
*93d0e2d1fa61e2df7b665fc56d2822aba3512e6c36cbe474aaa707fc34446d7f19b61a05dd99a7
*a098289495456bbcc68a70565d5aa624fc96626b26026382bea0d8953954b4b2dee521fd869e5e
*9536e0653cb1b3dee874625b41a1cfd12101b2b2853dbcb8d95e2496f52de02cb4e8bca26fc99e
*57ddb7cc3e2263def5b179153d2bb3b57f2ef3c5f327fb55fb0f3876479b08bb84dd1c89956960
*b152e3e0b79901aba8f8af16557b39a921d082d0a0c808da0b7bcd029982b265e99313d91b7194
*9e9ceb4e9c80ae6fce9c8fcd6767b27d272c58a78e5b6c548524ce23a1f31db348586c8633154f
*9c1a7123a0f4580e15ee9e2d022318dae81353afc6a9e1f80a73b86c8e5286d7f41c380b4df6c5
*933aaf6400458473476958c301c8989ad1ce4b184fa743e25c16128dceb5aeb5359ec1aa7f5850
*55fc4906ed2e99f618b82516114b784c81c1a13e4f65cd61159e9dd206cb1f3952d660ee3cd360
*fcd538ce9d375836c333dacb5d62882a31637873050b9bab20e2ae743d649b0bc43c33b82ed344
*78924d5913959ccfb354139d7b698c57a624999636168b88f1ae68bc844e2da378bfe9d41b7118
*57450f3a74cb88708cacd3d62a98eed114d63c6c4f9c975fde62dcd55453a713db0abca0ba4441
*0a00a38bc96d53cb7695f912840bfefdc184f3eb0396265c8057132e004a0947eb6d858ea9bce3
*43bc9a63288d847cc57c8ee3e885d8db95714f256add5f7a1a6ed14f3ef28630ae26e2c0198ba9
*4d613a826cd2c0c59538e2719c360f0f208be35a6e5093cdc8afa3017bda38f7c15c4b95b5328c
*4945064d16c9ab944ca37024c8c25c570f14664cd721ad8b69b8810137e3cb2b71529c745e3537
*44f54ad17df3c10da663f71b030560d71718c9a97e8397282287b85122f072561a084082021772
*8b8587adc6b7db3b7a4e0ed6c99d1bc304dcd3b7131999256b7980bcb86a48b8279477429bdec8
*7ef2eb28f6d39b62348663cfe4be633fc4abc6127f106013f306358a1e7beebdcf0f2be4cbd862
*df92b2b244a021390e4620e2f10423c20d0c7285c08579d60c5d05b85790a60d8a2e23e244ccc2
*3c937769542496bb2974f37946fbf974b787490590251b550aca3ac6cda4fe30d07e1dbe7d005e
*eab976ccb7de76e3e5f64bb1ab57b11aca683596c8cc9bbe98b9d9d8d9da167eda3aebb0207ac0
*880b812ba020260af5249fc83a32cac3d8eef5eca5050d917decdf8d8dfc53b978416b67b1a7ae
*0723eaebe2f071140174daa80b9d30c6455c804b6753902b5adf2dc623ea86a00228c081b64b6a
*9713d6f61e4f689ebae9380205ef0f41053c447852060ef00977c775027286e29d71c371e40f71
*bf34a8d551844d35c57b087c714d0f272d0800dbec6e8cea8007b3729f254a39924ccc5684e386
*5539b5870e90720f18e36d21b7b1822ec3bb935c8cf8e0eb85e8e4a28e1d1adb61093a51bddc12
*a2b55d707451482d3978a15a0ffe480689a0da543e57146242e189e0757eaf5d1ce1d827aa4c8a
*18b010d3ea64156124bf1bfb5142313b84003713fc3293e706c9ad167cde4e253de9b9542a537a
*2e5da12fd04d09a483e825a94dc1d99003c603a447f76ad197415044ff56bd1a771a78de08ec24
*dd6816aa14cd2c41ad765af29255cebcab92163fa4b3d261e4642c3b1409bd16e483b6352d4df2
*a1be2749751f70ca28463fa8c4000ff0166295d01d86638fbcf6b89b8202efe4c1d4229c5aafde
*45b37888fea19150dd634fb93387342f1da04ff48e9f214ef7f161fe24c0eb21b0c5c34cf715a5
*fba9428222ced940c26bf4094e0fa809dc665ae3194513fea23dc5bb751bbf529fc2e59e8f884c
*6d0c51855b6cb52e15ea220e673e985578e7097d028b68dbe29fdb20532b8c6de02b74fecaae6d
*31f7cee192acde1debd29483eff71bd0ee1837034d7b5913cbd834a24d1abd99496e66d57b9670
*9ef2691df765d166589afffe825f6a39eceb6c8e26e40acfa4963740ad02616e631c456c4b2b53
*8486ca3eab7631f0e8111929478a97bb6c45d82b06957823e8f1a047b113f1ab671a96bc8cca58
*343782c58d7b4828e45b83f3d631afb222235e840324c4dbfcfe5b33b42593132bc5d5fcc49dee
*f1a518286031cdbd5bb68799f16c018bed610df6606ec33604991b598e18ce1b616f1bd1850481
*280111d685ce2b584794eb0e4d77f04e1f5e4b71f599ce6559745fcf1b5477c0a9a3907d53c99b
*6f4a770d5e351b8d9d6b40b30dffbda8d75bf0e733c3a7a67adae2493bf067a9f2e89f258afb9c
*29f273bee4cf990a7c5ebe129cde656a21107e362a6494c8cc1a32fec6440df18e864ca1a5728c
*212ff26c97ac7b3127d739714cc9e547eff4c31d32289b08fa5e41814a82f17d6dcdca6f66d4c0
*0a50c15a3aedc92a5ff11a5ee79f0d12704786952b2a18b8315803f4ef132e2171a31165de4758
*9eaf91d9e6f1f943b8f6b4c72ffb6a4c1c2a71e3b6fa6c295008cb9512644eb591b83491359c05
*006a4ea7cddfbbe496105f62960b54400c3f9201465625af511164d90a3f893da8c49e23815739
*308840a2c47b60880ac9dcd2e25229225a749f2d1f15e2916fb927e5835509c86ae46339540df6
*54d33dd9729a7daaad44533d2d0fcf41ca45420831970042048d5fd6d482b2ac42cb954cea895e
*e9d73659521317f9d4628fe6febc64bba2a5b35ace1f090925c643053315d392a7da458b1bd5cb
*34ed2087ba00f346356955256b30ad0944557375c5fbf52c8b6ed9c3cbc43853e855ffda6c0dc6
*1050c5a2151da6399f23433e5b66837314303caded1259d976c334a6d256666a7612392bfd43ce
*49c159b77f2bdc4078ab3d0fb054775e93a94433c386c5e3e39e3e46926e7b10817496118b00af
*b8b154ceb5e985c0f8b653cb92294ba057487801e2b2f34c486ae6257ba18384177b5ae406ec8c
*42cced5937174828a832c21399709f2c6ec2a027036bedf51c5583f1b1f606bed0860a8df346aa
*47cb522c2a75a713c99a8b8b967b6e542dc5f2e70bb9fc49b7d87dfeac125e9bb7b6413a545843
*1a29818d14960795a97a717ae55b26e68113a91bbb9a4a5320c8f88a3d3029e91db788f19501fe
*9e3bc35a032edb9ec927cd2a82d485058e7a8ced274e2fa05f8d6a15f230db898dca327c3179c1
*b7547f22954649c9a727d1dce43f403eb93a92131a42b74957afad4ac95c88ab7c5781ee570b5d
*79d2d0bdea85a9364ed0aba152e75ca19ac7cc605a13377148189c31b436af29a19549d8da745a
*df351a4d91b895cde56c3b2f9d57df39adadd696b3b3e56c6fc1e3b6b3e37cfb9dd36c3990b00d
*ffbc72b62119ff05f857f061eb7a9517c0c9ab9057178267fdc27d541830cd1501bd82b2bbf5ef
*e45773873b7d6fe3b14df02004e9dfe2fbb13b27f5df663b9b9b22cdd1696f71aca5b47ca2bc9a
*b7cd3e84a46946fe3d0b590b54cd969d83edc2c8fd2861ddf82e917e1bb9e91c32626f642f5eb0
*2bb6fe61b00e1de806b721274cc63bff4a17f3ad6e448d073e4ced63bc7ed27393287407a6636f
*953719170e6608671331a6a95a1437e7bb2a89471ec100029fc86fb1892b831fbdc7ecd19d7c33
*104f41563737b1d12c99c938ea48970f5d119b22fbe71dee1e97abb6323b1f2843b203431c1b36
*65b96db5724f5bc93e23e89b36429727676369609089fecd00161a7b388e22d4c141e48cfde21d
*9efcf75f6c92016e3a5b9bd5b03c4c2770263129e549bb5d6beeee02a1761bb3b6aa72e67e9453
*5ed100395b4ef33939b774cee633721a9ca2322b6b0b74124f8cc6aaf9753cb6421e123309aaf3
*c699bc35ff4593ec149db7e43e5595571c0d4051a3b53422d9f26db567a6e4f72b5d50baaa7efc
*83daaeb1be3a1776fc43cec8e55dc6e1536f071526c56f8b433ef3d769f3dbe3d2478de9d6e237
*d9c4b89545f7ec6fd807ea71688ec38f2e1bf76ff12e5ba5876cb6265fd6c4611c1a4c5b459b00
*47a11995406fb0c74aeb2e253b1033d1f2dc13999a9bd94c2fb721d3c41bf9b3c913b9088a9614
*25903103e0c7b5a696620f7447692928d6ba9ab3422db9e5bc9599158b25c715c465e8ff0efc2a
*77b1000bc7da1bfe9a4954796403cbb9d0eab6a4d2faa10375c789a12362d356d401882c5e8258
*8552c6b99934e7e6b93a0151dc2eda36e39b6dc1245e4fd5ad044ac5ec02ccc765f8298bfec8d2
*6c3987eaba4e5190d9ce65858a0c1fc59403c3d16a1375e2834d223b923066b1742c92289b2379
*9a461366018dd46d04a1a565af301c4adca2be4af9f95e6ccbc8b18119a9f3271940f48b7da9b1
*b96397afff437ec11cbdfd4b4ac1b18c4c2f2f9c27afa8741569bfcaa545bac26995ad41089568
*666552a75573a42959529ada92a98227c6e561b249a810ded92afaa5d62f26ac8c6d152833a7f8
*51ef330f60d5b93b49120db993419750f59c2b99e7e5172ba55b66e94d451aa650f1e28e359362
*cc64a03b882693a76a922b9dc05371a5473b83599787e5376d3902e1dd432b6dbffcfd52b65150
*663eaf1e34110403b3fa47eef1350e8d33d19a6749d9c6db636273bb11cf14c2d3f912bcfea756
*a3e70f1f6851614079f813c14b4d9eae9409b92b6b0c3660c32de002829433217ba3cef3d88014
*0b5e2834361eda85ecc03c2b1c12e8a8ea55aaa053eeb0352de19a9cc4ed38305bb5e9acb2d054
*be742addd566a311d2a4ed5aeadea7cf29e6e5c923594b5ac73c7fb5a6598b7c6cab63bf336d63
*5ba5b7860b2565dc1a4eb117141e8db744a8d86bb5d1469c8b949879f841c078710a00dff9f75e
*c8e38ee996087e7a64ec4d0357edcf4138dca44c507267dd336e27573a33778f49e14632fc685e
*6e9251bed058c9a7fce5e588e10fb9b77c606cb2e75ecfaf59ffac7bd0eb1cf5fe5797f54e8e7a
*275de63f35c2a8e7afa13197c8ef61f8a991aff47d195c076357672cbe2c599d5766d9b9972551
*345f9ad90a6f4b62d96a99f90a6f4b6279b96de62bbc2d83e5c7281e694694bd2d8bc56045f9eb
*b2880c6e94bf2e8bc86048f9eb32880e7970a9cc59feba0ca2b741e4ea3e54f6b60c961a34ad83
*ce3799557d60c52f8810952eb9969eb1bf5b6f60e6bb998b6b602ff028ed058a4496bac0745c42
*a51898965228cb2b188979817a5952d718f57c4ad32ca9760c6c0b94ceb22ac8c0b840012dab8e
*0c8c0b94d1b2aa49625cac9896555326c6854a6a699d65625da8b196566026d685ea6b696d26b1
*2ea5cb96566d12eb62c5b6ac9a93189fa5e4aad51ed8777484d03eee9944cda79ed4fda6b5ee2f
*0e987ae49676f00463679fc71af06900c38099477eb5e4c00b289e184cc969841796762e2f4e8f
*3b17bd83ced1d14fec5df7a47bdeb9e81ee2413b72bd2a694c83067012e3e9bd11d8a1903676c3
*d1572c7bd4362866d480da8ca44d2f4a33b6f15f0c29fb8c0fb8ea8efcbb3c39eb1cfc1da9655f
*d15262fe2366fd4a39686df399cfd2704d5f606e63c89afe5a13e524cc97f72b19af0497522e9e
*9dfba7e932579e314b1ba9cd32e228a14d7f3879f8b4347d945b1085cf76e6451323d1e7699485
*2d24522030a814590b4df8aaaa0d5f71d6bc52adf8ea39cdf8ca68bb5776e625d392af2a9af2d5
*b26df9aad098afcac804cd584127a4b4f95f4569f3e5734805049abce64b3bfb96a1969751422e
*2f71197a09459660ca5ca018b47605c55b2d9e6faba528de6a3d876240a069dc6ad9d9b70cc5bc
*8c128a7989cb504c28b21453e602c530a254500c296dfe5751fc72fb391403024d232e7465de32
*14f3324a28e6252e4331a1c8524c99b314732ba28c629ed2e67f39c5f4b834c51c81a0915eecec
*9ba64c9591a75895b8906289c2a058662e525cd19145525b3c68a29fd197050e8350a3378bd72c
*e1e5fd5917bb14e9f91eadb21789afe8d322a92d1e34f1cfe8d6028741add1b1c56b96f8f2aead
*8b5d8af87ce756d98bc457746f91d4160f9af867f47081c3a0d6e8e3e2354b7c792fd7c52e457c
*be9fabec59e2855d5b46bc486a8b074e3c7f5e9a78814350cbdfecdcaba6511794275e17bb9078
*85c4205e65cf12cf2df032da794a9bffe594d3e3d284730482507ab1b36f9a3855469e6855e242
*9a250a836499b93092910fa0622ca3b4b67c52e319be3c674423347a14c3573bff9e19d7646925
*239b2c7b99b14da0c98e6e0241960f3531f7b14b39a153c5248973821e2bf9a033094ad587922f
*9a46853f4fbb2a6d21e5128541b7cc6c59fff1e5f7e5f7e5f7e5f7e5f7dff4f77f013a75219a00
*d80000
}
