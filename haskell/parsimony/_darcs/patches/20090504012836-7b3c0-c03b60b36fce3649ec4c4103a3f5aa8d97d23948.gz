[bug fixes
ekmett@gmail.com**20090504012836
 Ignore-this: 30ef130289e3cdeafefd57bd2c206246
] {
hunk ./Text/Parsimony/Mode.hs 1
+{-# LANGUAGE TypeOperators #-}
hunk ./Text/Parsimony/Mode.hs 4
+import Control.Applicative
+import Data.Generator
+import Text.Parsimony.Prim
+import Text.Parsimony.Error
+
hunk ./Text/Parsimony/Mode.hs 10
-    parseMap :: (Generator c, Alternative f) => (Elem c -> e) -> (m e `Parser` a) -> c -> Either ParseError (f a)
+    parseMap :: (Generator c, Alternative f) => (Elem c -> e) -> (m e `Parser` a) -> c -> Either (ParseError file) (f a)
hunk ./Text/Parsimony/Mode.hs 12
-    parse :: (Generator c, Alternative f) => (m (Elem c) `Parser` a) -> c -> Either ParseError (f a)
+    parse :: (Generator c, Alternative f) => (m (Elem c) `Parser` a) -> c -> Either (ParseError file) (f a)
hunk ./Text/Parsimony/Parsec.hs 31
-    Skip s      -> recognize s
+    Skip s      -> eval_ s
hunk ./Text/Parsimony/Parsec.hs 33
-recognize :: Parsec.Stream s m Char => Parser (Recognizing Char) e -> Parsec.ParsecT s u m ()
-recognize expr = case expr of 
-    App f x     -> recognize f *> recognize x
+eval_ :: Parsec.Stream s m Char => Parser (Recognizing Char) e -> Parsec.ParsecT s u m ()
+eval_ expr = case expr of 
+    App f x     -> eval_ f *> eval_ x
hunk ./Text/Parsimony/Parsec.hs 37
-    Alt as      -> Parsec.choice (Parsec.try . recognize <$> as) 
-    Greedy as   -> Parsec.choice (recognize <$> as)
+    Alt as      -> Parsec.choice (Parsec.try . eval_ <$> as) 
+    Greedy as   -> Parsec.choice (eval_ <$> as)
hunk ./Text/Parsimony/Parsec.hs 40
-    Name _ n    -> recognize n
-    Labels ls l -> Parsec.labels (recognize l) ls
-    Skip s      -> recognize s -- unexpected Skip in Skip
+    Name _ n    -> eval_ n
+    Labels ls l -> Parsec.labels (eval_ l) ls
+    Skip s      -> eval_ s -- unexpected Skip in Skip
hunk ./parsimony.cabal 47
+    Text.Parsimony.Mode
}
