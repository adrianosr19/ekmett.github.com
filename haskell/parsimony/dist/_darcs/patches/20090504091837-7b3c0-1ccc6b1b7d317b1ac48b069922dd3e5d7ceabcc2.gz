[auto
ekmett@gmail.com**20090504091837
 Ignore-this: acd6ab08121bbc68a785851e6cb98720
] {
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 507
-> <A HREF="Text-Parsimony-Util.html#t%3AMagic"
->Magic</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AAny"
+>Any</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1484
-> <A HREF="Text-Parsimony-Util.html#t%3AMagic"
->Magic</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3AAny"
+>Any</A
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 324
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AMagic"
-></A
-><B
->Magic</B
->  </TD
-><TD CLASS="declbut"
-><A HREF="src/Text-Parsimony-Util.html#Magic"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
hunk ./doc/html/parsimony/doc-index.html 366
->Magic</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Util.html#t%3AMagic"
->Text.Parsimony.Util</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
binary ./doc/html/parsimony/parsimony.haddock
oldhex
*0d0cface0004000000000000509e00000000000046eb6000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000002000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000004000000000000001b0000000000000000000000000000000400000000000000
*1c00000000000000000000000000000004000000000000001d0000000000000000000000000000
*0004000000000000001e00000000000000000000000000000004000000000000001f0000000000
*000000000000000000000400000000000000200000000000000000000000000000000400000000
*000000210000000000000000000000000000000400000000000000220000000000000000000000
*000000000400000000000000230000000000000000000000000000000400000000000000240000
*000000000000000000000000000400000000000000250000000000000000000000000000000400
*000000000000260000000000000000000000000000000400000000000000270000000000000000
*000000000000000400000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0004000000000000002b00000000000000000000000000000005000000000000002c0000000000
*0000000000000000000005000000000000002d0000000000000000000000000000000500000000
*0000002e00000000000000000000000000000005000000000000002f0000000000000000000000
*000000000500000000000000300000000000000000000000000000000500000000000000310000
*000000000000000000000000000500000000000000320000000000000000000000000000000500
*000000000000330000000000000000000000000000000500000000000000340000000000000000
*000000000000000500000000000000350000000000000000000000000000000500000000000000
*360000000000000000000000000000000500000000000000370000000000000000000000000000
*000500000000000000380000000000000000000000000000000500000000000000390000000000
*0000000000000000000005000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000005000000000000003d00000000000000000000000000000006000000000000003e0000
*0000000000000000000000000006000000000000003f0000000000000000000000000000000600
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000600000000000000420000000000000000000000000000000600000000000000
*430000000000000000000000000000000700000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000007000000000000004e0000000000000000
*0000000000000007000000000000004f0000000000000000000000000000000700000000000000
*500000000000000000000000000000000700000000000000510000000000000000000000000000
*000700000000000000520000000000000000000000000000000800000000000000530000000000
*000000000000000000000800000000000000540000000000000000000000000000000800000000
*000000550000000000000000000000000000000800000000000000560000000000000000000000
*000000000800000000000000570000000000000000000000000000000800000000000000580000
*000000000000000000000000000800000000000000590000000000000000000000000000000800
*0000000000005a00000000000000000000000000000008000000000000005b0000000000000000
*0000000000000008000000000000005c0000000000000000000000000000000800000000000000
*5d00000000000000000000000000000008000000000000005e0000000000000000000000000000
*0009000000000000005f000000000000000000000000000000090a000000000000000000000000
*000000010001230000006e0000006f0000006e0000002d000000700000006f0000007200000074
*00000061000000620000006c000000650000002000000028000000740000007900000070000000
*650000002000000066000000610000006d000000690000006c0000006900000065000000730000
*002c00000020000000470000004100000044000000540000007300000029010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c0110000000650000006b0000006d0000006500000074000000740000004000000067000000
*6d00000061000000690000006c0000002e000000630000006f0000006d00060000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*050600000000000000050000000000000004000000000000000100000000000000020000000000
*000003000000000000000000000000000000000000000000000002000000000005000000000000
*0006000000000000000700000000000000080000000000000009000000000000000a0500000000
*0000000600000000000000070000000000000008000000000000000a0000000000000009000000
*0000000000000000000000000300011c0000006e0000006f0000006e0000002d00000070000000
*6f000000720000007400000061000000620000006c0000006500000020000000280000004d0000
*00500000005400000043000000730000002c0000002000000072000000610000006e0000006b00
*00002d0000003200000029010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d0005000000000000000b000000000000000c000000000000000d000000
*000000000e000000000000000f05000000000000000e000000000000000b000000000000000c00
*0000000000000d000000000000000f000000000000000000000000000000040001230000006e00
*00006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c
*000000650000002000000028000000740000007900000070000000650000002000000066000000
*610000006d000000690000006c0000006900000065000000730000002c00000020000000470000
*004100000044000000540000007300000029010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c0110000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d10000000000000001003026100000041000000200000
*00700000006100000072000000730000006500000072000000200000006d0000006f0000006400
*00006500000020000000640000006500000066000000690000006e000000650000007300000020
*00000077000000680000006100000074000000200000006f000000700000007400000069000000
*6d000000690000007a0000006100000074000000690000006f0000006e00000073000000200000
*0061000000720000006500000020000000700000006f0000007300000073000000690000006200
*00006c000000650000002c00000020000000610000006e0000006400000020000000680000006f
*00000077000000200000006d00000075000000630000006800000020000000690000006e000000
*660000006f000000720000006d0000006100000074000000690000006f0000006e000000200000
*006d00000075000000730000007400000020000000620000006500000020000000720000006500
*00007400000061000000690000006e00000065000000640000000a000000000000001401030104
*0100000000000000001400000000000000000000000000000004022c0000002000000069000000
*6e00000076000000610000007200000069000000610000006e0000007400000073000000200000
*0070000000720000006f0000007600000069000000640000006500000064000000200000006200
*00007900000020000000730000006d00000061000000720000007400000020000000630000006f
*0000006e0000007300000074000000720000007500000063000000740000006f00000072000000
*730000003a0000000a0109050302270000002000000061000000200000004e000000610000006d
*00000065000000200000006e000000650000007600000065000000720000002000000063000000
*6f0000006e0000007400000061000000690000006e000000730000002000000061000000200000
*004e000000610000006d0000006500000020000000640000006900000072000000650000006300
*0000740000006c000000790000000a030226000000200000004c00000061000000620000006500
*00006c00000073000000200000006e000000650000007600000065000000720000002000000063
*0000006f0000006e0000007400000061000000690000006e000000200000004c00000061000000
*62000000650000006c000000730000002000000064000000690000007200000065000000630000
*00740000006c000000790000000a03022700000020000000610000006e00000020000000410000
*006c00000074000000200000006e00000065000000760000006500000072000000200000006300
*00006f0000006e0000007400000061000000690000006e0000007300000020000000610000006e
*00000020000000410000006c000000740000002000000064000000690000007200000065000000
*63000000740000006c000000790000000a03022b00000020000000610000002000000047000000
*7200000065000000650000006400000079000000200000006e0000006500000076000000650000
*007200000020000000630000006f0000006e0000007400000061000000690000006e0000007300
*000020000000610000002000000047000000720000006500000065000000640000007900000020
*0000006400000069000000720000006500000063000000740000006c000000790000000a03022b
*000000200000006100000020000000530000006b0000006900000070000000200000006e000000
*6500000076000000650000007200000020000000630000006f0000006e00000074000000610000
*00690000006e00000073000000200000006100000020000000530000006b000000690000007000
*0000200000007400000072000000610000006e0000007300000069000000740000006900000076
*000000650000006c000000790000000a0103023c000000550000006e000000650000006e000000
*660000006f00000072000000630000006500000061000000620000006c00000065000000200000
*00690000006e00000076000000610000007200000069000000610000006e000000740000007300
*000020000000720000006500000071000000750000006900000072000000650000006400000020
*000000660000006f00000072000000200000007400000068000000650000002000000070000000
*6100000072000000610000006c0000006c000000650000006c0000002000000070000000610000
*00720000007300000065000000720000003a000000200000000a09010302370000002000000054
*000000680000006500000020000000730000006500000074000000200000006f00000066000000
*200000006e0000006f0000006e0000002d0000007400000065000000720000006d000000690000
*006e000000610000006c0000007300000020000000750000007300000065000000640000002000
*000062000000790000002000000074000000680000006500000020000000700000006100000072
*000000730000006500000072000000200000006900000073000000200000006600000069000000
*6e0000006900000074000000650000000a000000000000001d0302610000005400000068000000
*690000007300000020000000700000006100000072000000730000006500000072000000200000
*006d0000006100000079000000200000006f0000006e0000006c00000079000000200000006200
*000065000000200000007500000073000000650000006400000020000000740000006f00000020
*0000007200000065000000630000006f000000670000006e000000690000007a00000065000000
*200000006100000020000000740000006f0000006b000000650000006e00000020000000730000
*00740000007200000065000000610000006d000000200000006100000073000000200000006200
*0000650000006c0000006f0000006e00000067000000690000006e000000670000002000000074
*0000006f000000200000006100000020000000630000006f0000006e0000007400000065000000
*78000000740000002d00000066000000720000006500000065000000200000006c000000610000
*006e00000067000000750000006100000067000000650000000a000000000000001e0302490000
*005400000068000000690000007300000020000000700000006100000072000000730000006500
*000072000000200000006900000073000000200000006300000061000000700000006100000062
*0000006c00000065000000200000006f0000006600000020000000700000006100000072000000
*73000000690000006e00000067000000200000006100000020000000740000006f0000006b0000
*00650000006e0000002000000073000000740000007200000065000000610000006d0000002000
*0000610000006e00000064000000200000006f000000620000007400000061000000690000006e
*000000690000006e0000006700000020000000610000006e00000020000000610000006e000000
*730000007700000065000000720000000a000000000000001f0302430000004700000065000000
*6e0000006500000072000000610000007400000065000000200000006100000020000000700000
*006100000072000000730000006500000072000000200000007400000068000000610000007400
*0000200000007200000065000000630000006f000000670000006e000000690000007a00000065
*0000007300000020000000610000002000000073000000690000006e000000670000006c000000
*6500000020000000740000006f0000006b000000650000006e0000002000000075000000730000
*00690000006e000000670000002000000061000000200000007000000072000000650000006400
*000069000000630000006100000074000000650000000a000000000000002003024e0000007400
*0000720000006500000061000000740000002000000061000000200000006e0000006f0000006e
*0000002d0000007200000065000000630000006f000000670000006e000000690000007a000000
*690000006e00000067000000200000007000000061000000720000007300000065000000720000
*002000000061000000730000002000000061000000200000007200000065000000630000006f00
*0000670000006e000000690000007a000000690000006e00000067000000200000006f0000006e
*0000006500000020000000740000006f0000002000000072000000650000006400000075000000
*630000006500000020000000720000006500000064000000750000006e00000064000000610000
*006e000000740000002000000072000000750000006c00000065000000730000000a0000000000
*000021030251000000700000006100000072000000730000006500000072000000200000007400
*000068000000610000007400000020000000610000006300000063000000650000007000000074
*000000730000002000000074000000680000006500000020000000650000006d00000070000000
*740000007900000020000000730000007400000072000000690000006e00000067000000200000
*007500000073000000650000006400000020000000620000007900000020000000520000006500
*0000630000006f000000670000006e000000690000007a000000690000006e0000006700000020
*000000700000006100000072000000730000006500000072000000730000002000000077000000
*68000000650000007200000065000000200000006e000000650000006300000065000000730000
*00730000006100000072000000790000000a0000000000000022030102150000006f0000007000
*000074000000690000006d000000690000007a0000006500000064000000200000007600000065
*0000007200000073000000690000006f0000006e000000200000006f0000006600000020010201
*00000027010201000000280102010000003c010202000000240000002901020100000027020100
*00000a0000000000000023030102150000006f0000007000000074000000690000006d00000069
*0000007a0000006500000064000000200000007600000065000000720000007300000069000000
*6f0000006e000000200000006f000000660000002001020100000027010204000000280000002a
*0000003e000000290102010000002702010000000a0000000000000024030102150000006f0000
*007000000074000000690000006d000000690000007a0000006500000064000000200000007600
*0000650000007200000073000000690000006f0000006e000000200000006f0000006600000020
*01020100000027010201000000280102010000003c0102020000002a0000002901020100000027
*02010000000a000000000000002503024c000000730000006d0000006100000072000000740000
*0020000000630000006f0000006e00000073000000740000007200000075000000630000007400
*00006f0000007200000020000000660000006f00000072000000200000006e000000610000006d
*000000690000006e00000067000000200000007000000061000000720000007300000065000000
*720000007300000020000000660000006f00000072000000200000007000000075000000720000
*00700000006f000000730000006500000073000000200000006f00000066000000200000006400
*00006900000073000000700000006c0000006100000079000000690000006e0000006700000020
*000000740000006800000065000000200000006700000072000000610000006d0000006d000000
*61000000720000000a0000000000000026030236000000730000006d0000006100000072000000
*7400000020000000630000006f0000006e00000073000000740000007200000075000000630000
*00740000006f0000007200000020000000660000006f00000072000000200000006c0000006100
*000062000000650000006c000000690000006e0000006700000020000000740000006800000065
*000000200000006700000072000000610000006d0000006d000000610000007200000020000000
*610000006c00000061000000200000005000000061000000720000007300000065000000630000
*000a0000000000000027030262000000410000006e0000006e0000006f00000074000000610000
*007400000065000000200000006100000020000000700000006100000072000000730000006500
*000072000000200000007700000069000000740000006800000020000000770000006800000061
*000000740000002000000069000000740000002000000073000000680000006f00000075000000
*6c0000006400000020000000730000006100000079000000200000007700000061000000730000
*002000000065000000780000007000000065000000630000007400000065000000640000002000
*000069000000660000002000000074000000680000006500000020000000660000006900000072
*000000730000007400000020000000630000006800000061000000720000006100000063000000
*74000000650000007200000020000000690000006e000000200000006900000074000000200000
*00690000007300000020000000750000006e000000630000006f0000006e000000730000007500
*00006d00000065000000640000000a000000000000002803022c0000004d000000750000006c00
*00007400000069000000700000006c000000650000002000000070000000610000007200000073
*000000650000007200000073000000200000007200000065000000740000007500000072000000
*6e000000690000006e00000067000000200000006d000000750000006c00000074000000690000
*00700000006c0000006500000020000000610000006e0000007300000077000000650000007200
*0000730000000a00000000000000290301025e0000005000000072000000650000006600000065
*000000720000007300000020000000740000006800000065000000200000007200000065000000
*73000000750000006c000000740000002000000066000000720000006f0000006d000000200000
*00740000006800000065000000200000006c000000650000006600000074000000200000007700
*000068000000650000006e0000002000000070000000720000006500000073000000650000006e
*000000740000002e000000200000004f0000006e0000006c000000790000002000000061000000
*630000006300000065000000700000007400000073000000200000007000000061000000720000
*007300000065000000730000002000000066000000720000006f0000006d000000200000007400
*000068000000650000002000000072000000690000006700000068000000740000002000000068
*000000610000006e00000064000000200000007000000061000000720000007300000065000000
*720000000a02240000002000000020000000200000007700000068000000650000006e00000020
*000000740000006800000065000000200000006c00000065000000660000007400000020000000
*68000000610000006e000000640000002000000070000000610000007200000073000000650000
*0072000000200000006600000061000000690000006c000000730000002e0000000a0000000000
*00002a0302570000004d000000750000006c0000007400000069000000700000006c0000006500
*000020000000700000006100000072000000730000006500000072000000730000002000000072
*000000650000007400000075000000720000006e000000690000006e0000006700000020000000
*74000000680000006500000020000000720000006500000073000000750000006c000000740000
*00730000002000000066000000720000006f0000006d0000002000000074000000680000006500
*0000200000006c0000006500000066000000740000002d0000006d0000006f0000007300000074
*000000200000007000000061000000720000007300000065000000720000002000000074000000
*680000006100000074000000200000006d00000061000000740000006300000068000000650000
*007300000020000000610000006e000000790000007400000068000000690000006e0000006700
*00000a1b0000000000000010000000000000001100000000000000120000000000000013000000
*000000001400000000000000150000000000000016000000000000001700000000000000180000
*000000000019000000000000001a000000000000001b000000000000001c000000000000001d00
*0000000000001e000000000000001f000000000000002000000000000000210000000000000022
*000000000000002300000000000000240000000000000025000000000000002600000000000000
*2700000000000000280000000000000029000000000000002a1b000000000000001e0000000000
*00001d000000000000001400000000000000150000000000000016000000000000001700000000
*000000180000000000000019000000000000001a000000000000001b000000000000001c000000
*000000001000000000000000110000000000000012000000000000001f00000000000000130000
*000000000022000000000000002300000000000000240000000000000025000000000000002000
*00000000000026000000000000002700000000000000280000000000000029000000000000002a
*000000000000002100000000000000000000000000000005000108000000700000006f00000072
*0000007400000061000000620000006c00000065010b00000070000000720000006f0000007600
*00006900000073000000690000006f0000006e000000610000006c0110000000650000006b0000
*006d00000065000000740000007400000040000000670000006d00000061000000690000006c00
*00002e000000630000006f0000006d04000000000000002b030102170000005400000068000000
*650000002000000061000000620000007300000074000000720000006100000063000000740000
*002000000064000000610000007400000061000000200000007400000079000000700000006500
*0000200107020a0000005000000061000000720000007300000065000000450000007200000072
*0000006f0000007201021d00000020000000720000006500000070000000720000006500000073
*000000650000006e00000074000000730000002000000070000000610000007200000073000000
*65000000200000006500000072000000720000006f00000072000000730000002e000000200000
*0049000000740000000a01021f0000002000000070000000720000006f00000076000000690000
*006400000065000000730000002000000074000000680000006500000020000000730000006f00
*00007500000072000000630000006500000020000000700000006f000000730000006900000074
*000000690000006f0000006e000000200000002801040101000000000000006001020f00000029
*000000200000006f00000066000000200000007400000068000000650000002000000065000000
*72000000720000006f000000720000000a01021f00000020000000610000006e00000064000000
*2000000061000000200000006c000000690000007300000074000000200000006f000000660000
*00200000006500000072000000720000006f00000072000000200000006d000000650000007300
*00007300000061000000670000006500000073000000200000002801040200000000000000002d
*0000000000000000000000000000000500000000000000002c0000000000000000000000000000
*0005010205000000290000002e0000002000000041000000200107020a00000050000000610000
*007200000073000000650000004500000072000000720000006f000000720102010000000a0102
*210000002000000063000000610000006e00000020000000620000006500000020000000720000
*00650000007400000075000000720000006e000000650000006400000020000000620000007900
*0000200000007400000068000000650000002000000066000000750000006e0000006300000074
*000000690000006f0000006e00000020010219000000540000006500000078000000740000002e
*00000050000000610000007200000073000000690000006d0000006f0000006e00000079000000
*2e0000004d0000006f00000064000000650000002e000000700000006100000072000000730000
*00650102020000002e000000200107020a00000050000000610000007200000073000000650000
*004500000072000000720000006f00000072010207000000200000006900000073000000200000
*00610000006e0000000a01021100000020000000690000006e0000007300000074000000610000
*006e0000006300000065000000200000006f000000660000002000000074000000680000006500
*000020010401000000000000000061000000000000000a000000000000000b0102380000002000
*0000630000006c0000006100000073000000730000002c00000020000000620000007500000074
*00000020000000640000006f0000006500000073000000200000006e0000006f00000074000000
*20000000630000006f0000006d000000700000006c000000790000002000000077000000690000
*007400000068000000200000007400000068000000650000002000000048000000610000007300
*00006b000000650000006c0000006c00000020000000630000006f0000006e0000007600000065
*0000006e00000074000000690000006f0000006e0000000a023c00000020000000740000006800
*000061000000740000002000000053000000680000006f00000077000000200000007300000068
*0000006f000000750000006c00000064000000200000007900000069000000650000006c000000
*6400000020000000610000002000000076000000610000006c0000006900000064000000200000
*00730000006f0000007500000072000000630000006500000020000000630000006f0000006400
*00006500000020000000720000006500000070000000720000006500000073000000650000006e
*000000740000006100000074000000690000006f0000006e0000002e0000000a00000000000000
*2c0103010243000000540000006800000069000000730000002000000061000000620000007300
*000074000000720000006100000063000000740000002000000064000000610000007400000061
*000000200000007400000079000000700000006500000020000000720000006500000070000000
*720000006500000073000000650000006e00000074000000730000002000000070000000610000
*00720000007300000065000000200000006500000072000000720000006f000000720000002000
*00006d000000650000007300000073000000610000006700000065000000730000002e00000020
*000000540000006800000065000000720000006500000020000000610000007200000065000000
*0a021900000020000000660000006f0000007500000072000000200000006b000000690000006e
*0000006400000073000000200000006f00000066000000200000006d0000006500000073000000
*73000000610000006700000065000000730000003a0000000a010b010224000000200000002000
*000064000000610000007400000061000000200000004d00000065000000730000007300000061
*0000006700000065000000200000003d0000002000000053000000790000007300000055000000
*6e0000004500000078000000700000006500000063000000740000002000000053000000740000
*0072000000690000006e000000670000000a010221000000200000002000000020000000200000
*002000000020000000200000002000000020000000200000002000000020000000200000002000
*0000200000007c00000020000000550000006e0000004500000078000000700000006500000063
*0000007400000020000000530000007400000072000000690000006e000000670000000a01021f
*000000200000002000000020000000200000002000000020000000200000002000000020000000
*2000000020000000200000002000000020000000200000007c0000002000000045000000780000
*007000000065000000630000007400000020000000530000007400000072000000690000006e00
*0000670000000a0220000000200000002000000020000000200000002000000020000000200000
*0020000000200000002000000020000000200000002000000020000000200000007c0000002000
*00004d000000650000007300000073000000610000006700000065000000200000005300000074
*00000072000000690000006e000000670000000a01030102440000005400000068000000650000
*002000000066000000690000006e00000065000000200000006400000069000000730000007400
*0000690000006e0000006300000074000000690000006f0000006e000000200000006200000065
*000000740000007700000065000000650000006e00000020000000640000006900000066000000
*660000006500000072000000650000006e00000074000000200000006b000000690000006e0000
*006400000073000000200000006f00000066000000200000007000000061000000720000007300
*000065000000200000006500000072000000720000006f00000072000000730000002000000061
*0000006c0000006c0000006f00000077000000730000000a010243000000200000007400000068
*000000650000002000000073000000790000007300000074000000650000006d00000020000000
*740000006f0000002000000067000000650000006e000000650000007200000061000000740000
*006500000020000000710000007500000069000000740000006500000020000000670000006f00
*00006f00000064000000200000006500000072000000720000006f00000072000000200000006d
*000000650000007300000073000000610000006700000065000000730000002000000066000000
*6f0000007200000020000000740000006800000065000000200000007500000073000000650000
*00720000002e0000002000000049000000740000000a01023c00000020000000610000006c0000
*00730000006f00000020000000610000006c0000006c0000006f00000077000000730000002000
*00006500000072000000720000006f00000072000000200000006d000000650000007300000073
*000000610000006700000065000000730000002000000074000000680000006100000074000000
*2000000061000000720000006500000020000000660000006f000000720000006d000000610000
*007400000074000000650000006400000020000000690000006e00000020000000640000006900
*000066000000660000006500000072000000650000006e000000740000000a0248000000200000
*006c000000610000006e0000006700000075000000610000006700000065000000730000002e00
*00002000000045000000610000006300000068000000200000006b000000690000006e00000064
*000000200000006f00000066000000200000006d00000065000000730000007300000061000000
*67000000650000002000000069000000730000002000000067000000650000006e000000650000
*007200000061000000740000006500000064000000200000006200000079000000200000006400
*00006900000066000000660000006500000072000000650000006e000000740000002000000063
*0000006f0000006d00000062000000690000006e00000061000000740000006f00000072000000
*730000003a0000000a080403010203000000200000004100000020010401000000000000000030
*0000000000000000000000000000000501022b000000200000006d000000650000007300000073
*000000610000006700000065000000200000006900000073000000200000006100000075000000
*740000006f0000006d00000061000000740000006900000063000000610000006c0000006c0000
*00790000002000000067000000650000006e000000650000007200000061000000740000006500
*000064000000200000006200000079000000200000007400000068000000650000000a01020700
*00002000000020000000200000002000000020000000200000002001021e000000540000006500
*000078000000740000002e0000005000000061000000720000007300000065000000630000002e
*000000430000006f0000006d00000062000000690000006e00000061000000740000006f000000
*720000002e00000073000000610000007400000069000000730000006600000079010221000000
*20000000630000006f0000006d00000062000000690000006e00000061000000740000006f0000
*00720000002e000000200000005400000068000000650000002000000061000000720000006700
*0000750000006d000000650000006e000000740000002000000069000000730000002000000074
*00000068000000650000000a021900000020000000200000002000000020000000200000002000
*000020000000750000006e00000065000000780000007000000065000000630000007400000065
*0000006400000020000000690000006e0000007000000075000000740000002e0000000a030102
*0300000020000000410000002001040100000000000000002f0000000000000000000000000000
*000501021d000000200000006d0000006500000073000000730000006100000067000000650000
*002000000069000000730000002000000067000000650000006e00000065000000720000006100
*000074000000650000006400000020000000620000007900000020000000740000006800000065
*0000002001021b000000540000006500000078000000740000002e000000500000006100000072
*0000007300000065000000630000002e0000005000000072000000690000006d0000002e000000
*750000006e00000065000000780000007000000065000000630000007400000065000000640102
*010000000a01022e00000020000000200000002000000020000000200000002000000020000000
*630000006f0000006d00000062000000690000006e00000061000000740000006f000000720000
*002e00000020000000540000006800000065000000200000006100000072000000670000007500
*00006d000000650000006e00000074000000200000006400000065000000730000006300000072
*00000069000000620000006500000073000000200000007400000068000000650000000a021800
*000020000000200000002000000020000000200000002000000020000000750000006e00000065
*000000780000007000000065000000630000007400000065000000640000002000000069000000
*74000000650000006d0000002e0000000a03010203000000200000004100000020010401000000
*00000000002e0000000000000000000000000000000501021d000000200000006d000000650000
*007300000073000000610000006700000065000000200000006900000073000000200000006700
*0000650000006e0000006500000072000000610000007400000065000000640000002000000062
*000000790000002000000074000000680000006500000020010214000000540000006500000078
*000000740000002e0000005000000061000000720000007300000065000000630000002e000000
*5000000072000000690000006d0000002e0000003c0000003f0000003e0102010000000a023d00
*000020000000200000002000000020000000200000002000000020000000630000006f0000006d
*00000062000000690000006e00000061000000740000006f000000720000002e00000020000000
*54000000680000006500000020000000610000007200000067000000750000006d000000650000
*006e00000074000000200000006400000065000000730000006300000072000000690000006200
*000065000000730000002000000074000000680000006500000020000000650000007800000070
*000000650000006300000074000000650000006400000020000000690000007400000065000000
*6d0000002e0000000a0301020300000020000000410000002001040200000000000000002d0000
*000000000000000000000000000500000000000000002c00000000000000000000000000000005
*01021d000000200000006d00000065000000730000007300000061000000670000006500000020
*00000069000000730000002000000067000000650000006e000000650000007200000061000000
*740000006500000064000000200000006200000079000000200000007400000068000000650000
*0020010401000000000000000062000000000000000a000000000000000c0102010000000a0241
*00000020000000200000002000000020000000200000002000000020000000630000006f000000
*6d00000062000000690000006e00000061000000740000006f000000720000002e000000200000
*0054000000680000006500000020000000610000007200000067000000750000006d0000006500
*00006e0000007400000020000000690000007300000020000000730000006f0000006d00000065
*0000002000000067000000650000006e0000006500000072000000610000006c00000020000000
*700000006100000072000000730000006500000072000000200000006d00000065000000730000
*00730000006100000067000000650000002e000000200000000a00000000000000310302320000
*004500000078000000740000007200000061000000630000007400000020000000740000006800
*000065000000200000006d00000065000000730000007300000061000000670000006500000020
*000000730000007400000072000000690000006e00000067000000200000006600000072000000
*6f0000006d00000020000000610000006e000000200000006500000072000000720000006f0000
*0072000000200000006d0000006500000073000000730000006100000067000000650000002000
*00000a000000000000003203023200000045000000780000007400000072000000610000006300
*000074000000730000002000000074000000680000006500000020000000730000006f00000075
*00000072000000630000006500000020000000700000006f000000730000006900000074000000
*690000006f0000006e0000002000000066000000720000006f0000006d00000020000000740000
*006800000065000000200000007000000061000000720000007300000065000000200000006500
*000072000000720000006f000000720000000a12000000000000002b000000000000002c000000
*000000002d000000000000002e000000000000002f000000000000003000000000000000310000
*000000000032000000000000003300000000000000340000000000000035000000000000003600
*0000000000003700000000000000380000000000000039000000000000003a000000000000003b
*000000000000003c12000000000000002c0000000000000030000000000000002f000000000000
*002e000000000000002d0000000000000031000000000000002b00000000000000320000000000
*0000330000000000000034000000000000003c0000000000000036000000000000003500000000
*000000370000000000000038000000000000003a0000000000000039000000000000003b000000
*00000000000000000000000006000000000006000000000000003d000000000000003e00000000
*0000003f00000000000000400000000000000041000000000000004206000000000000003d0000
*00000000003e000000000000003f00000000000000400000000000000041000000000000004200
*00000000000000000000000000000700000000000f000000000000004300000000000000440000
*000000000045000000000000004600000000000000470000000000000048000000000000004900
*0000000000004a000000000000004b000000000000004c000000000000004d000000000000004e
*000000000000004f000000000000005000000000000000510f0000000000000043000000000000
*004400000000000000460000000000000047000000000000004800000000000000450000000000
*000049000000000000004a000000000000004b000000000000004c000000000000005000000000
*00000051000000000000004e000000000000004d000000000000004f0000000000000000000000
*000000000800000000000c00000000000000520000000000000053000000000000005400000000
*000000550000000000000056000000000000005700000000000000580000000000000059000000
*000000005a000000000000005b000000000000005c000000000000005d0c000000000000005200
*000000000000530000000000000054000000000000005500000000000000560000000000000057
*00000000000000580000000000000059000000000000005a000000000000005b00000000000000
*5c000000000000005d0000000000000000000000000000000d0001230000006e0000006f000000
*6e0000002d000000700000006f000000720000007400000061000000620000006c000000650000
*002000000028000000740000007900000070000000650000002000000066000000610000006d00
*0000690000006c0000006900000065000000730000002c00000020000000470000004100000044
*000000540000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d003f0000000000000010000000000000001100000000000000120000
*000000000013000000000000001400000000000000150000000000000016000000000000001700
*000000000000180000000000000019000000000000001a000000000000001b000000000000001c
*000000000000001d000000000000001e000000000000001f000000000000002000000000000000
*210000000000000022000000000000002300000000000000240000000000000025000000000000
*0026000000000000002700000000000000280000000000000029000000000000002a0000000000
*00002b000000000000002c000000000000002d000000000000002e000000000000002f00000000
*000000300000000000000031000000000000003200000000000000330000000000000034000000
*000000003500000000000000360000000000000037000000000000003800000000000000390000
*00000000003a000000000000003b000000000000003c000000000000003d000000000000003e00
*0000000000003f0000000000000040000000000000004100000000000000420000000000000052
*000000000000005300000000000000540000000000000055000000000000005600000000000000
*5700000000000000580000000000000059000000000000005a000000000000005b000000000000
*005c000000000000005d000000000000000000000000000000000900011c0000006e0000006f00
*00006e0000002d000000700000006f000000720000007400000061000000620000006c00000065
*000000200000002800000074000000790000007000000065000000200000006600000061000000
*6d000000690000006c00000069000000650000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011000
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d0002000000000000005e0000000000
*00005f02000000000000005e000000000000005f00000000000000630000000000000000000000
*000000000103000000000000000e0000000000000000000000000000000103000000000000000f
*0000000000000000000000000000000101000000000000000f0000000000000000000000000000
*000100000000000000001000000000000000000000000000000001030000000000000011000000
*000000000000000000000000010300000000000000120000000000000000000000000000000203
*000000000000001300000000000000000000000000000002000000000000000014000000000000
*000000000000000000020000000000000000150000000000000000000000000000000200000000
*000000001600000000000000000000000000000002000000000000000017000000000000000000
*000000000000030300000000000000180000000000000000000000000000000301000000000000
*001800000000000000000000000000000003000000000000000019000000000000000000000000
*0000000300000000000000001a0000000000000000000000000000000300000000000000001b00
*00000000000000000000000000000403000000000000001c000000000000000000000000000000
*0403000000000000001d0000000000000000000000000000000403000000000000001e00000000
*00000000000000000000000400000000000000001f000000000000000000000000000000040300
*000000000000200000000000000000000000000000000401000000000000002100000000000000
*000000000000000004010000000000000022000000000000000000000000000000040100000000
*000000230000000000000000000000000000000401000000000000002400000000000000000000
*000000000004010000000000000025000000000000000000000000000000040100000000000000
*260000000000000000000000000000000401000000000000001d00000000000000000000000000
*000004010000000000000027000000000000000000000000000000040300000000000000280000
*000000000000000000000000000403000000000000002900000000000000000000000000000004
*00000000000000002a0000000000000000000000000000000400000000000000002b0000000000
*000000000000000000000400000000000000002c00000000000000000000000000000004000000
*00000000002d0000000000000000000000000000000400000000000000002e0000000000000000
*000000000000000400000000000000002f00000000000000000000000000000004000000000000
*000030000000000000000000000000000000040000000000000000310000000000000000000000
*000000000400000000000000003200000000000000000000000000000004000000000000000033
*000000000000000000000000000000040000000000000000340000000000000000000000000000
*000400000000000000003500000000000000000000000000000005030000000000000036000000
*000000000000000000000000050300000000000000370000000000000000000000000000000501
*000000000000003700000000000000000000000000000005010000000000000038000000000000
*000000000000000000050100000000000000390000000000000000000000000000000501000000
*000000003a0000000000000000000000000000000500000000000000003b000000000000000000
*0000000000000500000000000000003c0000000000000000000000000000000500000000000000
*003d0000000000000000000000000000000500000000000000003e000000000000000000000000
*0000000500000000000000003f0000000000000000000000000000000500000000000000004000
*000000000000000000000000000005000000000000000041000000000000000000000000000000
*050000000000000000420000000000000000000000000000000500000000000000004300000000
*000000000000000000000005000000000000000044000000000000000000000000000000050000
*000000000000450000000000000000000000000000000500000000000000004600000000000000
*000000000000000006030000000000000047000000000000000000000000000000060000000000
*000000480000000000000000000000000000000600000000000000004900000000000000000000
*00000000000603000000000000004a000000000000000000000000000000060000000000000000
*4b0000000000000000000000000000000600000000000000004c00000000000000000000000000
*00000700000000000000004d0000000000000000000000000000000700000000000000004e0000
*000000000000000000000000000700000000000000004f00000000000000000000000000000007
*000000000000000050000000000000000000000000000000070000000000000000510000000000
*000000000000000000000700000000000000005200000000000000000000000000000007000000
*000000000053000000000000000000000000000000070000000000000000540000000000000000
*000000000000000700000000000000005500000000000000000000000000000007000000000000
*000056000000000000000000000000000000070000000000000000570000000000000000000000
*000000000700000000000000005800000000000000000000000000000007000000000000000059
*0000000000000000000000000000000700000000000000005a0000000000000000000000000000
*000700000000000000005b0000000000000000000000000000000800000000000000005c000000
*0000000000000000000000000800000000000000005d0000000000000000000000000000000800
*000000000000005e0000000000000000000000000000000800000000000000005f000000000000
*000000000000000000080000000000000000600000000000000000000000000000000800000000
*000000006100000000000000000000000000000008000000000000000062000000000000000000
*000000000000080000000000000000630000000000000000000000000000000800000000000000
*006400000000000000000000000000000008000000000000000065000000000000000000000000
*000000080000000000000000660000000000000000000000000000000800000000000000006700
*000000000000000000000000000009000000000000000068000000000000000000000000000000
*09000000000000000069000000000000006a000000000000006b03000000000000006c00000000
*0000000a000000000000006d03000000000000006e000000000000000a000000000000006f0000
*000000000000700000000000000071000000000000000f70617273696d6f6e792d302e302e3100
*00000000000013546578742e50617273696d6f6e792e5574696c0000000000000018546578742e
*50617273696d6f6e792e537461626c654d6170000000000000001c546578742e50617273696d6f
*6e792e4772616d6d61722e4d6f6e61640000000000000013546578742e50617273696d6f6e792e
*5072696d0000000000000014546578742e50617273696d6f6e792e4572726f7200000000000000
*13546578742e50617273696d6f6e792e4d6f6465000000000000001a546578742e50617273696d
*6f6e792e436f6d62696e61746f72730000000000000013546578742e50617273696d6f6e792e43
*6861720000000000000021546578742e50617273696d6f6e792e496e7465727072657465722e50
*61727365630000000000000004626173650000000000000009546578742e53686f770000000000
*00000d436f6e74726f6c2e4d6f6e6164000000000000000e546578742e50617273696d6f6e7900
*000000000000054d6167696300000000000000024964000000000000000572756e496400000000
*0000000c5472697669616c4172726f7700000000000000125472697669616c4170706c69636174
*6976650000000000000009537461626c654d61700000000000000005656d707479000000000000
*0006696e7365727400000000000000066c6f6f6b75700000000000000006757064617465000000
*000000000153000000000000000467657453000000000000000566726573680000000000000004
*72756e5300000000000000044d6f6465000000000000000450757265000000000000000346756e
*0000000000000004736b6970000000000000000650617273657200000000000000064c6162656c
*7300000000000000044e616d650000000000000004536b69700000000000000007536174697366
*7900000000000000064772656564790000000000000003416c7400000000000000034170700000
*00000000000b5265636f676e697a696e67000000000000000750617273696e6700000000000000
*0773617469736679000000000000000b7265636f676e697a696e67000000000000000765707369
*6c6f6e00000000000000033c3c2400000000000000032a3e3e00000000000000033c3c2a000000
*00000000056e616d656400000000000000066c6162656c7300000000000000033c3f3e00000000
*0000000663686f69636500000000000000043c3c7c3e000000000000000c67726565647943686f
*696365000000000000000a50617273654572726f7200000000000000074d657373616765000000
*00000000064578706563740000000000000008556e457870656374000000000000000b53797355
*6e457870656374000000000000000d6d657373616765537472696e67000000000000000d657272
*6f72506f736974696f6e000000000000000d6572726f724d65737361676573000000000000000e
*6572726f724973556e6b6e6f776e000000000000000f6e65774572726f72556e6b6e6f776e0000
*00000000000f6e65774572726f724d657373616765000000000000000f6164644572726f724d65
*737361676500000000000000107365744572726f72506f736974696f6e00000000000000147072
*6570656e644572726f72506f736974696f6e000000000000000f7365744572726f724d65737361
*6765000000000000000a6d657267654572726f72000000000000001173686f774572726f724d65
*737361676573000000000000000d5265636f676e697a654d6f6465000000000000000c7265636f
*676e697a654d617000000000000000097265636f676e697a65000000000000000950617273654d
*6f6465000000000000000870617273654d61700000000000000005706172736500000000000000
*056f6e654f6600000000000000066e6f6e654f6600000000000000056d616e7931000000000000
*0008616e79546f6b656e00000000000000066f7074696f6e0000000000000005636f756e740000
*000000000005656e6442790000000000000006656e644279310000000000000005736570427900
*000000000000067365704279310000000000000009736b69704d616e7931000000000000000873
*6b69704d616e7900000000000000076265747765656e0000000000000008736570456e64427900
*00000000000009736570456e644279310000000000000004636861720000000000000003746162
*00000000000000057370616365000000000000000673706163657300000000000000056c6f7765
*72000000000000000575707065720000000000000008616c7068614e756d00000000000000066c
*65747465720000000000000008686578446967697400000000000000086f637444696769740000
*000000000007616e79436861720000000000000006737472696e6700000000000000046576616c
*00000000000000056576616c5f000000000000000e6d6f6e6f6964732d302e312e333600000000
*00000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e00
*0000000000000e536f75726365506f736974696f6e00000000000000084748432e53686f770000
*00000000000453686f7700000000000000084748432e4261736500000000000000046661696c
newhex
*0d0cface0004000000000000505d00000000000046c35f00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000004000000000000001b0000000000000000000000000000000400000000000000
*1c00000000000000000000000000000004000000000000001d0000000000000000000000000000
*0004000000000000001e00000000000000000000000000000004000000000000001f0000000000
*000000000000000000000400000000000000200000000000000000000000000000000400000000
*000000210000000000000000000000000000000400000000000000220000000000000000000000
*000000000400000000000000230000000000000000000000000000000400000000000000240000
*000000000000000000000000000400000000000000250000000000000000000000000000000400
*000000000000260000000000000000000000000000000400000000000000270000000000000000
*000000000000000400000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0005000000000000002b00000000000000000000000000000005000000000000002c0000000000
*0000000000000000000005000000000000002d0000000000000000000000000000000500000000
*0000002e00000000000000000000000000000005000000000000002f0000000000000000000000
*000000000500000000000000300000000000000000000000000000000500000000000000310000
*000000000000000000000000000500000000000000320000000000000000000000000000000500
*000000000000330000000000000000000000000000000500000000000000340000000000000000
*000000000000000500000000000000350000000000000000000000000000000500000000000000
*360000000000000000000000000000000500000000000000370000000000000000000000000000
*000500000000000000380000000000000000000000000000000500000000000000390000000000
*0000000000000000000005000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000006000000000000003d00000000000000000000000000000006000000000000003e0000
*0000000000000000000000000006000000000000003f0000000000000000000000000000000600
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000600000000000000420000000000000000000000000000000700000000000000
*430000000000000000000000000000000700000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000007000000000000004e0000000000000000
*0000000000000007000000000000004f0000000000000000000000000000000700000000000000
*500000000000000000000000000000000700000000000000510000000000000000000000000000
*000800000000000000520000000000000000000000000000000800000000000000530000000000
*000000000000000000000800000000000000540000000000000000000000000000000800000000
*000000550000000000000000000000000000000800000000000000560000000000000000000000
*000000000800000000000000570000000000000000000000000000000800000000000000580000
*000000000000000000000000000800000000000000590000000000000000000000000000000800
*0000000000005a00000000000000000000000000000008000000000000005b0000000000000000
*0000000000000008000000000000005c0000000000000000000000000000000800000000000000
*5d00000000000000000000000000000009000000000000005e0000000000000000000000000000
*00090a000000000000000000000000000000010001230000006e0000006f0000006e0000002d00
*0000700000006f000000720000007400000061000000620000006c000000650000002000000028
*000000740000007900000070000000650000002000000066000000610000006d00000069000000
*6c0000006900000065000000730000002c00000020000000470000004100000044000000540000
*007300000029010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c0110000000650000006b0000006d0000006500000074
*0000007400000040000000670000006d00000061000000690000006c0000002e00000063000000
*6f0000006d00050000000000000000000000000000000100000000000000020000000000000003
*000000000000000405000000000000000400000000000000030000000000000000000000000000
*000100000000000000020000000000000000000000000000000200000000000500000000000000
*050000000000000006000000000000000700000000000000080000000000000009050000000000
*000005000000000000000600000000000000070000000000000009000000000000000800000000
*00000000000000000000000300011c0000006e0000006f0000006e0000002d000000700000006f
*000000720000007400000061000000620000006c0000006500000020000000280000004d000000
*500000005400000043000000730000002c0000002000000072000000610000006e0000006b0000
*002d0000003200000029010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c0110000000650000006b0000006d00000065
*000000740000007400000040000000670000006d00000061000000690000006c0000002e000000
*630000006f0000006d0005000000000000000a000000000000000b000000000000000c00000000
*0000000d000000000000000e05000000000000000d000000000000000a000000000000000b0000
*00000000000c000000000000000e000000000000000000000000000000040001230000006e0000
*006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c00
*000065000000200000002800000074000000790000007000000065000000200000006600000061
*0000006d000000690000006c0000006900000065000000730000002c0000002000000047000000
*4100000044000000540000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c0110000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d10000000000000000f0302610000004100000020000000
*700000006100000072000000730000006500000072000000200000006d0000006f000000640000
*006500000020000000640000006500000066000000690000006e00000065000000730000002000
*000077000000680000006100000074000000200000006f0000007000000074000000690000006d
*000000690000007a0000006100000074000000690000006f0000006e0000007300000020000000
*61000000720000006500000020000000700000006f000000730000007300000069000000620000
*006c000000650000002c00000020000000610000006e0000006400000020000000680000006f00
*000077000000200000006d00000075000000630000006800000020000000690000006e00000066
*0000006f000000720000006d0000006100000074000000690000006f0000006e00000020000000
*6d0000007500000073000000740000002000000062000000650000002000000072000000650000
*007400000061000000690000006e00000065000000640000000a00000000000000130103010401
*00000000000000001300000000000000000000000000000004022c00000020000000690000006e
*00000076000000610000007200000069000000610000006e000000740000007300000020000000
*70000000720000006f000000760000006900000064000000650000006400000020000000620000
*007900000020000000730000006d00000061000000720000007400000020000000630000006f00
*00006e0000007300000074000000720000007500000063000000740000006f0000007200000073
*0000003a0000000a0109050302270000002000000061000000200000004e000000610000006d00
*000065000000200000006e0000006500000076000000650000007200000020000000630000006f
*0000006e0000007400000061000000690000006e00000073000000200000006100000020000000
*4e000000610000006d000000650000002000000064000000690000007200000065000000630000
*00740000006c000000790000000a030226000000200000004c0000006100000062000000650000
*006c00000073000000200000006e00000065000000760000006500000072000000200000006300
*00006f0000006e0000007400000061000000690000006e000000200000004c0000006100000062
*000000650000006c00000073000000200000006400000069000000720000006500000063000000
*740000006c000000790000000a03022700000020000000610000006e0000002000000041000000
*6c00000074000000200000006e0000006500000076000000650000007200000020000000630000
*006f0000006e0000007400000061000000690000006e0000007300000020000000610000006e00
*000020000000410000006c00000074000000200000006400000069000000720000006500000063
*000000740000006c000000790000000a03022b0000002000000061000000200000004700000072
*00000065000000650000006400000079000000200000006e000000650000007600000065000000
*7200000020000000630000006f0000006e0000007400000061000000690000006e000000730000
*002000000061000000200000004700000072000000650000006500000064000000790000002000
*00006400000069000000720000006500000063000000740000006c000000790000000a03022b00
*0000200000006100000020000000530000006b0000006900000070000000200000006e00000065
*00000076000000650000007200000020000000630000006f0000006e0000007400000061000000
*690000006e00000073000000200000006100000020000000530000006b00000069000000700000
*00200000007400000072000000610000006e000000730000006900000074000000690000007600
*0000650000006c000000790000000a0103023c000000550000006e000000650000006e00000066
*0000006f00000072000000630000006500000061000000620000006c0000006500000020000000
*690000006e00000076000000610000007200000069000000610000006e00000074000000730000
*002000000072000000650000007100000075000000690000007200000065000000640000002000
*0000660000006f0000007200000020000000740000006800000065000000200000007000000061
*00000072000000610000006c0000006c000000650000006c000000200000007000000061000000
*720000007300000065000000720000003a000000200000000a0901030237000000200000005400
*0000680000006500000020000000730000006500000074000000200000006f0000006600000020
*0000006e0000006f0000006e0000002d0000007400000065000000720000006d00000069000000
*6e000000610000006c000000730000002000000075000000730000006500000064000000200000
*006200000079000000200000007400000068000000650000002000000070000000610000007200
*00007300000065000000720000002000000069000000730000002000000066000000690000006e
*0000006900000074000000650000000a000000000000001c030261000000540000006800000069
*000000730000002000000070000000610000007200000073000000650000007200000020000000
*6d0000006100000079000000200000006f0000006e0000006c0000007900000020000000620000
*0065000000200000007500000073000000650000006400000020000000740000006f0000002000
*00007200000065000000630000006f000000670000006e000000690000007a0000006500000020
*0000006100000020000000740000006f0000006b000000650000006e0000002000000073000000
*740000007200000065000000610000006d00000020000000610000007300000020000000620000
*00650000006c0000006f0000006e00000067000000690000006e00000067000000200000007400
*00006f000000200000006100000020000000630000006f0000006e000000740000006500000078
*000000740000002d00000066000000720000006500000065000000200000006c00000061000000
*6e00000067000000750000006100000067000000650000000a000000000000001d030249000000
*540000006800000069000000730000002000000070000000610000007200000073000000650000
*007200000020000000690000007300000020000000630000006100000070000000610000006200
*00006c00000065000000200000006f000000660000002000000070000000610000007200000073
*000000690000006e00000067000000200000006100000020000000740000006f0000006b000000
*650000006e0000002000000073000000740000007200000065000000610000006d000000200000
*00610000006e00000064000000200000006f000000620000007400000061000000690000006e00
*0000690000006e0000006700000020000000610000006e00000020000000610000006e00000073
*0000007700000065000000720000000a000000000000001e03024300000047000000650000006e
*000000650000007200000061000000740000006500000020000000610000002000000070000000
*610000007200000073000000650000007200000020000000740000006800000061000000740000
*00200000007200000065000000630000006f000000670000006e000000690000007a0000006500
*00007300000020000000610000002000000073000000690000006e000000670000006c00000065
*00000020000000740000006f0000006b000000650000006e000000200000007500000073000000
*690000006e00000067000000200000006100000020000000700000007200000065000000640000
*0069000000630000006100000074000000650000000a000000000000001f03024e000000740000
*00720000006500000061000000740000002000000061000000200000006e0000006f0000006e00
*00002d0000007200000065000000630000006f000000670000006e000000690000007a00000069
*0000006e0000006700000020000000700000006100000072000000730000006500000072000000
*2000000061000000730000002000000061000000200000007200000065000000630000006f0000
*00670000006e000000690000007a000000690000006e00000067000000200000006f0000006e00
*00006500000020000000740000006f000000200000007200000065000000640000007500000063
*0000006500000020000000720000006500000064000000750000006e0000006400000061000000
*6e000000740000002000000072000000750000006c00000065000000730000000a000000000000
*002003025100000070000000610000007200000073000000650000007200000020000000740000
*006800000061000000740000002000000061000000630000006300000065000000700000007400
*0000730000002000000074000000680000006500000020000000650000006d0000007000000074
*0000007900000020000000730000007400000072000000690000006e0000006700000020000000
*750000007300000065000000640000002000000062000000790000002000000052000000650000
*00630000006f000000670000006e000000690000007a000000690000006e000000670000002000
*000070000000610000007200000073000000650000007200000073000000200000007700000068
*000000650000007200000065000000200000006e00000065000000630000006500000073000000
*730000006100000072000000790000000a0000000000000021030102150000006f000000700000
*0074000000690000006d000000690000007a000000650000006400000020000000760000006500
*00007200000073000000690000006f0000006e000000200000006f000000660000002001020100
*000027010201000000280102010000003c01020200000024000000290102010000002702010000
*000a0000000000000022030102150000006f0000007000000074000000690000006d0000006900
*00007a00000065000000640000002000000076000000650000007200000073000000690000006f
*0000006e000000200000006f000000660000002001020100000027010204000000280000002a00
*00003e000000290102010000002702010000000a0000000000000023030102150000006f000000
*7000000074000000690000006d000000690000007a000000650000006400000020000000760000
*00650000007200000073000000690000006f0000006e000000200000006f000000660000002001
*020100000027010201000000280102010000003c0102020000002a000000290102010000002702
*010000000a000000000000002403024c000000730000006d000000610000007200000074000000
*20000000630000006f0000006e0000007300000074000000720000007500000063000000740000
*006f0000007200000020000000660000006f00000072000000200000006e000000610000006d00
*0000690000006e0000006700000020000000700000006100000072000000730000006500000072
*0000007300000020000000660000006f0000007200000020000000700000007500000072000000
*700000006f000000730000006500000073000000200000006f0000006600000020000000640000
*006900000073000000700000006c0000006100000079000000690000006e000000670000002000
*0000740000006800000065000000200000006700000072000000610000006d0000006d00000061
*000000720000000a0000000000000025030236000000730000006d000000610000007200000074
*00000020000000630000006f0000006e0000007300000074000000720000007500000063000000
*740000006f0000007200000020000000660000006f00000072000000200000006c000000610000
*0062000000650000006c000000690000006e000000670000002000000074000000680000006500
*0000200000006700000072000000610000006d0000006d00000061000000720000002000000061
*0000006c0000006100000020000000500000006100000072000000730000006500000063000000
*0a0000000000000026030262000000410000006e0000006e0000006f0000007400000061000000
*740000006500000020000000610000002000000070000000610000007200000073000000650000
*007200000020000000770000006900000074000000680000002000000077000000680000006100
*0000740000002000000069000000740000002000000073000000680000006f000000750000006c
*000000640000002000000073000000610000007900000020000000770000006100000073000000
*200000006500000078000000700000006500000063000000740000006500000064000000200000
*006900000066000000200000007400000068000000650000002000000066000000690000007200
*000073000000740000002000000063000000680000006100000072000000610000006300000074
*000000650000007200000020000000690000006e00000020000000690000007400000020000000
*690000007300000020000000750000006e000000630000006f0000006e00000073000000750000
*006d00000065000000640000000a000000000000002703022c0000004d000000750000006c0000
*007400000069000000700000006c00000065000000200000007000000061000000720000007300
*00006500000072000000730000002000000072000000650000007400000075000000720000006e
*000000690000006e00000067000000200000006d000000750000006c0000007400000069000000
*700000006c0000006500000020000000610000006e000000730000007700000065000000720000
*00730000000a00000000000000280301025e000000500000007200000065000000660000006500
*000072000000730000002000000074000000680000006500000020000000720000006500000073
*000000750000006c000000740000002000000066000000720000006f0000006d00000020000000
*740000006800000065000000200000006c00000065000000660000007400000020000000770000
*0068000000650000006e0000002000000070000000720000006500000073000000650000006e00
*0000740000002e000000200000004f0000006e0000006c00000079000000200000006100000063
*000000630000006500000070000000740000007300000020000000700000006100000072000000
*7300000065000000730000002000000066000000720000006f0000006d00000020000000740000
*006800000065000000200000007200000069000000670000006800000074000000200000006800
*0000610000006e0000006400000020000000700000006100000072000000730000006500000072
*0000000a02240000002000000020000000200000007700000068000000650000006e0000002000
*0000740000006800000065000000200000006c0000006500000066000000740000002000000068
*000000610000006e00000064000000200000007000000061000000720000007300000065000000
*72000000200000006600000061000000690000006c000000730000002e0000000a000000000000
*00290302570000004d000000750000006c0000007400000069000000700000006c000000650000
*002000000070000000610000007200000073000000650000007200000073000000200000007200
*0000650000007400000075000000720000006e000000690000006e000000670000002000000074
*000000680000006500000020000000720000006500000073000000750000006c00000074000000
*730000002000000066000000720000006f0000006d000000200000007400000068000000650000
*00200000006c0000006500000066000000740000002d0000006d0000006f000000730000007400
*000020000000700000006100000072000000730000006500000072000000200000007400000068
*0000006100000074000000200000006d0000006100000074000000630000006800000065000000
*7300000020000000610000006e000000790000007400000068000000690000006e000000670000
*000a1b000000000000000f00000000000000100000000000000011000000000000001200000000
*000000130000000000000014000000000000001500000000000000160000000000000017000000
*00000000180000000000000019000000000000001a000000000000001b000000000000001c0000
*00000000001d000000000000001e000000000000001f0000000000000020000000000000002100
*000000000000220000000000000023000000000000002400000000000000250000000000000026
*0000000000000027000000000000002800000000000000291b000000000000001d000000000000
*001c00000000000000130000000000000014000000000000001500000000000000160000000000
*00001700000000000000180000000000000019000000000000001a000000000000001b00000000
*0000000f00000000000000100000000000000011000000000000001e0000000000000012000000
*0000000021000000000000002200000000000000230000000000000024000000000000001f0000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002000000000000000000000000000000005000108000000700000006f0000007200
*00007400000061000000620000006c00000065010b00000070000000720000006f000000760000
*006900000073000000690000006f0000006e000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d04000000000000002a03010217000000540000006800000065
*000000200000006100000062000000730000007400000072000000610000006300000074000000
*200000006400000061000000740000006100000020000000740000007900000070000000650000
*00200107020a000000500000006100000072000000730000006500000045000000720000007200
*00006f0000007201021d0000002000000072000000650000007000000072000000650000007300
*0000650000006e0000007400000073000000200000007000000061000000720000007300000065
*000000200000006500000072000000720000006f00000072000000730000002e00000020000000
*49000000740000000a01021f0000002000000070000000720000006f0000007600000069000000
*6400000065000000730000002000000074000000680000006500000020000000730000006f0000
*007500000072000000630000006500000020000000700000006f00000073000000690000007400
*0000690000006f0000006e000000200000002801040101000000000000005f01020f0000002900
*0000200000006f0000006600000020000000740000006800000065000000200000006500000072
*000000720000006f000000720000000a01021f00000020000000610000006e0000006400000020
*00000061000000200000006c000000690000007300000074000000200000006f00000066000000
*200000006500000072000000720000006f00000072000000200000006d00000065000000730000
*007300000061000000670000006500000073000000200000002801040200000000000000002c00
*00000000000000000000000000000500000000000000002b000000000000000000000000000000
*05010205000000290000002e0000002000000041000000200107020a0000005000000061000000
*7200000073000000650000004500000072000000720000006f000000720102010000000a010221
*0000002000000063000000610000006e0000002000000062000000650000002000000072000000
*650000007400000075000000720000006e00000065000000640000002000000062000000790000
*00200000007400000068000000650000002000000066000000750000006e000000630000007400
*0000690000006f0000006e00000020010219000000540000006500000078000000740000002e00
*000050000000610000007200000073000000690000006d0000006f0000006e000000790000002e
*0000004d0000006f00000064000000650000002e00000070000000610000007200000073000000
*650102020000002e000000200107020a0000005000000061000000720000007300000065000000
*4500000072000000720000006f0000007201020700000020000000690000007300000020000000
*610000006e0000000a01021100000020000000690000006e000000730000007400000061000000
*6e0000006300000065000000200000006f00000066000000200000007400000068000000650000
*0020010401000000000000000060000000000000000a000000000000000b010238000000200000
*00630000006c0000006100000073000000730000002c0000002000000062000000750000007400
*000020000000640000006f0000006500000073000000200000006e0000006f0000007400000020
*000000630000006f0000006d000000700000006c00000079000000200000007700000069000000
*740000006800000020000000740000006800000065000000200000004800000061000000730000
*006b000000650000006c0000006c00000020000000630000006f0000006e000000760000006500
*00006e00000074000000690000006f0000006e0000000a023c0000002000000074000000680000
*0061000000740000002000000053000000680000006f0000007700000020000000730000006800
*00006f000000750000006c00000064000000200000007900000069000000650000006c00000064
*00000020000000610000002000000076000000610000006c000000690000006400000020000000
*730000006f0000007500000072000000630000006500000020000000630000006f000000640000
*006500000020000000720000006500000070000000720000006500000073000000650000006e00
*0000740000006100000074000000690000006f0000006e0000002e0000000a000000000000002b
*010301024300000054000000680000006900000073000000200000006100000062000000730000
*007400000072000000610000006300000074000000200000006400000061000000740000006100
*000020000000740000007900000070000000650000002000000072000000650000007000000072
*0000006500000073000000650000006e0000007400000073000000200000007000000061000000
*720000007300000065000000200000006500000072000000720000006f00000072000000200000
*006d000000650000007300000073000000610000006700000065000000730000002e0000002000
*00005400000068000000650000007200000065000000200000006100000072000000650000000a
*021900000020000000660000006f0000007500000072000000200000006b000000690000006e00
*00006400000073000000200000006f00000066000000200000006d000000650000007300000073
*000000610000006700000065000000730000003a0000000a010b01022400000020000000200000
*0064000000610000007400000061000000200000004d0000006500000073000000730000006100
*00006700000065000000200000003d00000020000000530000007900000073000000550000006e
*000000450000007800000070000000650000006300000074000000200000005300000074000000
*72000000690000006e000000670000000a01022100000020000000200000002000000020000000
*200000002000000020000000200000002000000020000000200000002000000020000000200000
*00200000007c00000020000000550000006e000000450000007800000070000000650000006300
*00007400000020000000530000007400000072000000690000006e000000670000000a01021f00
*000020000000200000002000000020000000200000002000000020000000200000002000000020
*00000020000000200000002000000020000000200000007c000000200000004500000078000000
*7000000065000000630000007400000020000000530000007400000072000000690000006e0000
*00670000000a022000000020000000200000002000000020000000200000002000000020000000
*20000000200000002000000020000000200000002000000020000000200000007c000000200000
*004d00000065000000730000007300000061000000670000006500000020000000530000007400
*000072000000690000006e000000670000000a0103010244000000540000006800000065000000
*2000000066000000690000006e0000006500000020000000640000006900000073000000740000
*00690000006e0000006300000074000000690000006f0000006e00000020000000620000006500
*0000740000007700000065000000650000006e0000002000000064000000690000006600000066
*0000006500000072000000650000006e00000074000000200000006b000000690000006e000000
*6400000073000000200000006f0000006600000020000000700000006100000072000000730000
*0065000000200000006500000072000000720000006f0000007200000073000000200000006100
*00006c0000006c0000006f00000077000000730000000a01024300000020000000740000006800
*0000650000002000000073000000790000007300000074000000650000006d0000002000000074
*0000006f0000002000000067000000650000006e00000065000000720000006100000074000000
*6500000020000000710000007500000069000000740000006500000020000000670000006f0000
*006f00000064000000200000006500000072000000720000006f00000072000000200000006d00
*00006500000073000000730000006100000067000000650000007300000020000000660000006f
*000000720000002000000074000000680000006500000020000000750000007300000065000000
*720000002e0000002000000049000000740000000a01023c00000020000000610000006c000000
*730000006f00000020000000610000006c0000006c0000006f0000007700000073000000200000
*006500000072000000720000006f00000072000000200000006d00000065000000730000007300
*000061000000670000006500000073000000200000007400000068000000610000007400000020
*00000061000000720000006500000020000000660000006f000000720000006d00000061000000
*7400000074000000650000006400000020000000690000006e0000002000000064000000690000
*0066000000660000006500000072000000650000006e000000740000000a024800000020000000
*6c000000610000006e0000006700000075000000610000006700000065000000730000002e0000
*002000000045000000610000006300000068000000200000006b000000690000006e0000006400
*0000200000006f00000066000000200000006d0000006500000073000000730000006100000067
*000000650000002000000069000000730000002000000067000000650000006e00000065000000
*720000006100000074000000650000006400000020000000620000007900000020000000640000
*006900000066000000660000006500000072000000650000006e00000074000000200000006300
*00006f0000006d00000062000000690000006e00000061000000740000006f0000007200000073
*0000003a0000000a08040301020300000020000000410000002001040100000000000000002f00
*00000000000000000000000000000501022b000000200000006d00000065000000730000007300
*000061000000670000006500000020000000690000007300000020000000610000007500000074
*0000006f0000006d00000061000000740000006900000063000000610000006c0000006c000000
*790000002000000067000000650000006e00000065000000720000006100000074000000650000
*0064000000200000006200000079000000200000007400000068000000650000000a0102070000
*002000000020000000200000002000000020000000200000002001021e00000054000000650000
*0078000000740000002e0000005000000061000000720000007300000065000000630000002e00
*0000430000006f0000006d00000062000000690000006e00000061000000740000006f00000072
*0000002e0000007300000061000000740000006900000073000000660000007901022100000020
*000000630000006f0000006d00000062000000690000006e00000061000000740000006f000000
*720000002e00000020000000540000006800000065000000200000006100000072000000670000
*00750000006d000000650000006e00000074000000200000006900000073000000200000007400
*000068000000650000000a02190000002000000020000000200000002000000020000000200000
*0020000000750000006e0000006500000078000000700000006500000063000000740000006500
*00006400000020000000690000006e0000007000000075000000740000002e0000000a03010203
*00000020000000410000002001040100000000000000002e000000000000000000000000000000
*0501021d000000200000006d000000650000007300000073000000610000006700000065000000
*2000000069000000730000002000000067000000650000006e0000006500000072000000610000
*007400000065000000640000002000000062000000790000002000000074000000680000006500
*00002001021b000000540000006500000078000000740000002e00000050000000610000007200
*00007300000065000000630000002e0000005000000072000000690000006d0000002e00000075
*0000006e0000006500000078000000700000006500000063000000740000006500000064010201
*0000000a01022e0000002000000020000000200000002000000020000000200000002000000063
*0000006f0000006d00000062000000690000006e00000061000000740000006f00000072000000
*2e0000002000000054000000680000006500000020000000610000007200000067000000750000
*006d000000650000006e0000007400000020000000640000006500000073000000630000007200
*000069000000620000006500000073000000200000007400000068000000650000000a02180000
*0020000000200000002000000020000000200000002000000020000000750000006e0000006500
*000078000000700000006500000063000000740000006500000064000000200000006900000074
*000000650000006d0000002e0000000a0301020300000020000000410000002001040100000000
*000000002d0000000000000000000000000000000501021d000000200000006d00000065000000
*730000007300000061000000670000006500000020000000690000007300000020000000670000
*00650000006e000000650000007200000061000000740000006500000064000000200000006200
*000079000000200000007400000068000000650000002001021400000054000000650000007800
*0000740000002e0000005000000061000000720000007300000065000000630000002e00000050
*00000072000000690000006d0000002e0000003c0000003f0000003e0102010000000a023d0000
*0020000000200000002000000020000000200000002000000020000000630000006f0000006d00
*000062000000690000006e00000061000000740000006f000000720000002e0000002000000054
*000000680000006500000020000000610000007200000067000000750000006d00000065000000
*6e0000007400000020000000640000006500000073000000630000007200000069000000620000
*006500000073000000200000007400000068000000650000002000000065000000780000007000
*00006500000063000000740000006500000064000000200000006900000074000000650000006d
*0000002e0000000a0301020300000020000000410000002001040200000000000000002c000000
*0000000000000000000000000500000000000000002b0000000000000000000000000000000501
*021d000000200000006d0000006500000073000000730000006100000067000000650000002000
*000069000000730000002000000067000000650000006e00000065000000720000006100000074
*000000650000006400000020000000620000007900000020000000740000006800000065000000
*20010401000000000000000061000000000000000a000000000000000c0102010000000a024100
*000020000000200000002000000020000000200000002000000020000000630000006f0000006d
*00000062000000690000006e00000061000000740000006f000000720000002e00000020000000
*54000000680000006500000020000000610000007200000067000000750000006d000000650000
*006e0000007400000020000000690000007300000020000000730000006f0000006d0000006500
*00002000000067000000650000006e0000006500000072000000610000006c0000002000000070
*0000006100000072000000730000006500000072000000200000006d0000006500000073000000
*730000006100000067000000650000002e000000200000000a0000000000000030030232000000
*450000007800000074000000720000006100000063000000740000002000000074000000680000
*0065000000200000006d0000006500000073000000730000006100000067000000650000002000
*0000730000007400000072000000690000006e000000670000002000000066000000720000006f
*0000006d00000020000000610000006e000000200000006500000072000000720000006f000000
*72000000200000006d000000650000007300000073000000610000006700000065000000200000
*000a00000000000000310302320000004500000078000000740000007200000061000000630000
*0074000000730000002000000074000000680000006500000020000000730000006f0000007500
*000072000000630000006500000020000000700000006f00000073000000690000007400000069
*0000006f0000006e0000002000000066000000720000006f0000006d0000002000000074000000
*680000006500000020000000700000006100000072000000730000006500000020000000650000
*0072000000720000006f000000720000000a12000000000000002a000000000000002b00000000
*0000002c000000000000002d000000000000002e000000000000002f0000000000000030000000
*000000003100000000000000320000000000000033000000000000003400000000000000350000
*000000000036000000000000003700000000000000380000000000000039000000000000003a00
*0000000000003b12000000000000002b000000000000002f000000000000002e00000000000000
*2d000000000000002c0000000000000030000000000000002a0000000000000031000000000000
*00320000000000000033000000000000003b000000000000003500000000000000340000000000
*000036000000000000003700000000000000390000000000000038000000000000003a00000000
*000000000000000000000006000000000006000000000000003c000000000000003d0000000000
*00003e000000000000003f0000000000000040000000000000004106000000000000003c000000
*000000003d000000000000003e000000000000003f000000000000004000000000000000410000
*000000000000000000000000000700000000000f00000000000000420000000000000043000000
*000000004400000000000000450000000000000046000000000000004700000000000000480000
*000000000049000000000000004a000000000000004b000000000000004c000000000000004d00
*0000000000004e000000000000004f00000000000000500f000000000000004200000000000000
*430000000000000045000000000000004600000000000000470000000000000044000000000000
*00480000000000000049000000000000004a000000000000004b000000000000004f0000000000
*000050000000000000004d000000000000004c000000000000004e000000000000000000000000
*0000000800000000000c0000000000000051000000000000005200000000000000530000000000
*000054000000000000005500000000000000560000000000000057000000000000005800000000
*00000059000000000000005a000000000000005b000000000000005c0c00000000000000510000
*000000000052000000000000005300000000000000540000000000000055000000000000005600
*0000000000005700000000000000580000000000000059000000000000005a000000000000005b
*000000000000005c0000000000000000000000000000000d0001230000006e0000006f0000006e
*0000002d000000700000006f000000720000007400000061000000620000006c00000065000000
*2000000028000000740000007900000070000000650000002000000066000000610000006d0000
*00690000006c0000006900000065000000730000002c0000002000000047000000410000004400
*0000540000007300000029010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d003f000000000000000f00000000000000100000000000000011000000
*000000001200000000000000130000000000000014000000000000001500000000000000160000
*00000000001700000000000000180000000000000019000000000000001a000000000000001b00
*0000000000001c000000000000001d000000000000001e000000000000001f0000000000000020
*000000000000002100000000000000220000000000000023000000000000002400000000000000
*250000000000000026000000000000002700000000000000280000000000000029000000000000
*002a000000000000002b000000000000002c000000000000002d000000000000002e0000000000
*00002f000000000000003000000000000000310000000000000032000000000000003300000000
*000000340000000000000035000000000000003600000000000000370000000000000038000000
*0000000039000000000000003a000000000000003b000000000000003c000000000000003d0000
*00000000003e000000000000003f00000000000000400000000000000041000000000000005100
*000000000000520000000000000053000000000000005400000000000000550000000000000056
*000000000000005700000000000000580000000000000059000000000000005a00000000000000
*5b000000000000005c000000000000000000000000000000000900011c0000006e0000006f0000
*006e0000002d000000700000006f000000720000007400000061000000620000006c0000006500
*00002000000028000000740000007900000070000000650000002000000066000000610000006d
*000000690000006c00000069000000650000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d0002000000000000005d000000000000
*005e02000000000000005d000000000000005e0000000000000062000000000000000000000000
*0000000103000000000000000e0000000000000000000000000000000101000000000000000e00
*00000000000000000000000000000100000000000000000f000000000000000000000000000000
*010300000000000000100000000000000000000000000000000103000000000000001100000000
*000000000000000000000002030000000000000012000000000000000000000000000000020000
*000000000000130000000000000000000000000000000200000000000000001400000000000000
*000000000000000002000000000000000015000000000000000000000000000000020000000000
*000000160000000000000000000000000000000303000000000000001700000000000000000000
*000000000003010000000000000017000000000000000000000000000000030000000000000000
*180000000000000000000000000000000300000000000000001900000000000000000000000000
*00000300000000000000001a0000000000000000000000000000000403000000000000001b0000
*000000000000000000000000000403000000000000001c00000000000000000000000000000004
*03000000000000001d0000000000000000000000000000000400000000000000001e0000000000
*000000000000000000000403000000000000001f00000000000000000000000000000004010000
*000000000020000000000000000000000000000000040100000000000000210000000000000000
*000000000000000401000000000000002200000000000000000000000000000004010000000000
*000023000000000000000000000000000000040100000000000000240000000000000000000000
*00000000040100000000000000250000000000000000000000000000000401000000000000001c
*000000000000000000000000000000040100000000000000260000000000000000000000000000
*000403000000000000002700000000000000000000000000000004030000000000000028000000
*000000000000000000000000040000000000000000290000000000000000000000000000000400
*000000000000002a0000000000000000000000000000000400000000000000002b000000000000
*0000000000000000000400000000000000002c0000000000000000000000000000000400000000
*000000002d0000000000000000000000000000000400000000000000002e000000000000000000
*0000000000000400000000000000002f0000000000000000000000000000000400000000000000
*003000000000000000000000000000000004000000000000000031000000000000000000000000
*000000040000000000000000320000000000000000000000000000000400000000000000003300
*000000000000000000000000000004000000000000000034000000000000000000000000000000
*050300000000000000350000000000000000000000000000000503000000000000003600000000
*000000000000000000000005010000000000000036000000000000000000000000000000050100
*000000000000370000000000000000000000000000000501000000000000003800000000000000
*000000000000000005010000000000000039000000000000000000000000000000050000000000
*0000003a0000000000000000000000000000000500000000000000003b00000000000000000000
*00000000000500000000000000003c000000000000000000000000000000050000000000000000
*3d0000000000000000000000000000000500000000000000003e00000000000000000000000000
*00000500000000000000003f000000000000000000000000000000050000000000000000400000
*000000000000000000000000000500000000000000004100000000000000000000000000000005
*000000000000000042000000000000000000000000000000050000000000000000430000000000
*000000000000000000000500000000000000004400000000000000000000000000000005000000
*000000000045000000000000000000000000000000060300000000000000460000000000000000
*000000000000000600000000000000004700000000000000000000000000000006000000000000
*000048000000000000000000000000000000060300000000000000490000000000000000000000
*000000000600000000000000004a0000000000000000000000000000000600000000000000004b
*0000000000000000000000000000000700000000000000004c0000000000000000000000000000
*000700000000000000004d0000000000000000000000000000000700000000000000004e000000
*0000000000000000000000000700000000000000004f0000000000000000000000000000000700
*000000000000005000000000000000000000000000000007000000000000000051000000000000
*000000000000000000070000000000000000520000000000000000000000000000000700000000
*000000005300000000000000000000000000000007000000000000000054000000000000000000
*000000000000070000000000000000550000000000000000000000000000000700000000000000
*005600000000000000000000000000000007000000000000000057000000000000000000000000
*000000070000000000000000580000000000000000000000000000000700000000000000005900
*00000000000000000000000000000700000000000000005a000000000000000000000000000000
*0800000000000000005b0000000000000000000000000000000800000000000000005c00000000
*00000000000000000000000800000000000000005d000000000000000000000000000000080000
*0000000000005e0000000000000000000000000000000800000000000000005f00000000000000
*000000000000000008000000000000000060000000000000000000000000000000080000000000
*000000610000000000000000000000000000000800000000000000006200000000000000000000
*000000000008000000000000000063000000000000000000000000000000080000000000000000
*640000000000000000000000000000000800000000000000006500000000000000000000000000
*000008000000000000000066000000000000000000000000000000090000000000000000670000
*00000000000000000000000000090000000000000000680000000000000069000000000000006a
*03000000000000006b000000000000000a000000000000006c03000000000000006d0000000000
*00000a000000000000006e00000000000000006f0000000000000070000000000000000f706172
*73696d6f6e792d302e302e310000000000000013546578742e50617273696d6f6e792e5574696c
*0000000000000018546578742e50617273696d6f6e792e537461626c654d617000000000000000
*1c546578742e50617273696d6f6e792e4772616d6d61722e4d6f6e616400000000000000135465
*78742e50617273696d6f6e792e5072696d0000000000000014546578742e50617273696d6f6e79
*2e4572726f720000000000000013546578742e50617273696d6f6e792e4d6f6465000000000000
*001a546578742e50617273696d6f6e792e436f6d62696e61746f72730000000000000013546578
*742e50617273696d6f6e792e436861720000000000000021546578742e50617273696d6f6e792e
*496e7465727072657465722e506172736563000000000000000462617365000000000000000954
*6578742e53686f77000000000000000d436f6e74726f6c2e4d6f6e6164000000000000000e5465
*78742e50617273696d6f6e7900000000000000024964000000000000000572756e496400000000
*0000000c5472697669616c4172726f7700000000000000125472697669616c4170706c69636174
*6976650000000000000009537461626c654d61700000000000000005656d707479000000000000
*0006696e7365727400000000000000066c6f6f6b75700000000000000006757064617465000000
*000000000153000000000000000467657453000000000000000566726573680000000000000004
*72756e5300000000000000044d6f6465000000000000000450757265000000000000000346756e
*0000000000000004736b6970000000000000000650617273657200000000000000064c6162656c
*7300000000000000044e616d650000000000000004536b69700000000000000007536174697366
*7900000000000000064772656564790000000000000003416c7400000000000000034170700000
*00000000000b5265636f676e697a696e67000000000000000750617273696e6700000000000000
*0773617469736679000000000000000b7265636f676e697a696e67000000000000000765707369
*6c6f6e00000000000000033c3c2400000000000000032a3e3e00000000000000033c3c2a000000
*00000000056e616d656400000000000000066c6162656c7300000000000000033c3f3e00000000
*0000000663686f69636500000000000000043c3c7c3e000000000000000c67726565647943686f
*696365000000000000000a50617273654572726f7200000000000000074d657373616765000000
*00000000064578706563740000000000000008556e457870656374000000000000000b53797355
*6e457870656374000000000000000d6d657373616765537472696e67000000000000000d657272
*6f72506f736974696f6e000000000000000d6572726f724d65737361676573000000000000000e
*6572726f724973556e6b6e6f776e000000000000000f6e65774572726f72556e6b6e6f776e0000
*00000000000f6e65774572726f724d657373616765000000000000000f6164644572726f724d65
*737361676500000000000000107365744572726f72506f736974696f6e00000000000000147072
*6570656e644572726f72506f736974696f6e000000000000000f7365744572726f724d65737361
*6765000000000000000a6d657267654572726f72000000000000001173686f774572726f724d65
*737361676573000000000000000d5265636f676e697a654d6f6465000000000000000c7265636f
*676e697a654d617000000000000000097265636f676e697a65000000000000000950617273654d
*6f6465000000000000000870617273654d61700000000000000005706172736500000000000000
*056f6e654f6600000000000000066e6f6e654f6600000000000000056d616e7931000000000000
*0008616e79546f6b656e00000000000000066f7074696f6e0000000000000005636f756e740000
*000000000005656e6442790000000000000006656e644279310000000000000005736570427900
*000000000000067365704279310000000000000009736b69704d616e7931000000000000000873
*6b69704d616e7900000000000000076265747765656e0000000000000008736570456e64427900
*00000000000009736570456e644279310000000000000004636861720000000000000003746162
*00000000000000057370616365000000000000000673706163657300000000000000056c6f7765
*72000000000000000575707065720000000000000008616c7068614e756d00000000000000066c
*65747465720000000000000008686578446967697400000000000000086f637444696769740000
*000000000007616e79436861720000000000000006737472696e6700000000000000046576616c
*00000000000000056576616c5f000000000000000e6d6f6e6f6964732d302e312e333600000000
*00000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e00
*0000000000000e536f75726365506f736974696f6e00000000000000084748432e53686f770000
*00000000000453686f7700000000000000084748432e4261736500000000000000046661696c
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 45
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
-<a name="line-41"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
-<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
-<a name="line-43"></a><span class='hs-cpp'>#endif</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="Mode"></a><span class='hs-comment'>-- | This parser is capable of parsing a token stream and obtaining an answer</span>
-<a name="line-46"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span>
-<a name="line-47"></a>
-<a name="line-48"></a><a name="Mode"></a><span class='hs-comment'>-- | This parser may only be used to recognize a token stream as belonging to a context-free language</span>
-<a name="line-49"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-comment'>-- | 'Parser' invariants provided by smart constructors:</span>
-<a name="line-52"></a><span class='hs-comment'>--</span>
-<a name="line-53"></a><span class='hs-comment'>-- (1) a Name never contains a Name directly</span>
-<a name="line-54"></a><span class='hs-comment'>--</span>
-<a name="line-55"></a><span class='hs-comment'>-- (2) Labels never contain Labels directly</span>
-<a name="line-56"></a><span class='hs-comment'>--</span>
-<a name="line-57"></a><span class='hs-comment'>-- (3) an Alt never contains an Alt directly</span>
-<a name="line-58"></a><span class='hs-comment'>--</span>
-<a name="line-59"></a><span class='hs-comment'>-- (4) a Greedy never contains a Greedy directly</span>
-<a name="line-60"></a><span class='hs-comment'>--</span>
-<a name="line-61"></a><span class='hs-comment'>-- (5) a Skip never contains a Skip transitively</span>
-<a name="line-62"></a><span class='hs-comment'>--</span>
-<a name="line-63"></a><span class='hs-comment'>-- Unenforceable invariants required for the parallel parser: </span>
-<a name="line-64"></a><span class='hs-comment'>--</span>
-<a name="line-65"></a><span class='hs-comment'>-- (1) The set of non-terminals used by the parser is finite</span>
-<a name="line-66"></a>
-<a name="line-67"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
-<a name="line-68"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-69"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-70"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-71"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-72"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-73"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
-<a name="line-74"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-75"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-76"></a>
-<a name="line-77"></a><a name="Mode"></a><span class='hs-comment'>-- | A parser mode defines what optimizations are possible, and how much information must be retained</span>
-<a name="line-78"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-79"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-80"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-81"></a>
-<a name="line-82"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-83"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-84"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-85"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
-<a name="line-86"></a>
-<a name="line-87"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-88"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-89"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-91"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>arr</span> <span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
-<a name="line-92"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
-<a name="line-93"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
-<a name="line-94"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-varid'>ss</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>ss</span>
-<a name="line-95"></a>
-<a name="line-96"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
-<a name="line-97"></a>
-<a name="line-98"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
-<a name="line-99"></a>
-<a name="line-100"></a><a name="satisfy"></a><span class='hs-comment'>-- | Generate a parser that recognizes a single token using a predicate</span>
-<a name="line-101"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
-<a name="line-102"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
-<a name="line-103"></a>
-<a name="line-104"></a><a name="recognizing"></a><span class='hs-comment'>-- | treat a non-recognizing parser as a recognizing one to reduce redundant rules</span>
-<a name="line-105"></a><span class='hs-definition'>recognizing</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-106"></a><span class='hs-definition'>recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-107"></a>
-<a name="line-108"></a><span class='hs-comment'>-- | a parser mode that actually parses and retains intermediate results</span>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
-<a name="line-111"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>
-<a name="line-113"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-114"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
-<a name="line-115"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
-<a name="line-116"></a>
-<a name="line-117"></a><span class='hs-comment'>-- | unsafeCoerces parsers to gain additional sharing that cannot be obtained in a general parser</span>
-<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialApplicative</span>
-<a name="line-120"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialArrow</span>
-<a name="line-121"></a>
-<a name="line-122"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-123"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-124"></a>
-<a name="line-125"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
-<a name="line-126"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
-<a name="line-127"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
-<a name="line-128"></a>
-<a name="line-129"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span>
-<a name="line-130"></a>
-<a name="line-131"></a><a name="epsilon"></a><span class='hs-comment'>-- | parser that accepts the empty string used by Recognizing parsers where necessary</span>
-<a name="line-132"></a><span class='hs-definition'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Magic</span> <span class='hs-conid'>()</span>
-<a name="line-133"></a><span class='hs-definition'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span> <span class='hs-varop'>`named`</span> <span class='hs-str'>"epsilon"</span>
-<a name="line-134"></a>
-<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-136"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
-<a name="line-137"></a>
-<a name="line-138"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-139"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
-<a name="line-140"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
-<a name="line-141"></a>
-<a name="line-142"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-143"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
-<a name="line-144"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-145"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-146"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-conop'>:</span><span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-147"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-148"></a>
-<a name="line-149"></a><a name="<<$"></a><span class='hs-comment'>-- | optimized version of '(&lt;$)'</span>
-<a name="line-150"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-151"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
-<a name="line-152"></a>
-<a name="line-153"></a><a name="*>>"></a><span class='hs-comment'>-- | optimized version of '(*&gt;)'</span>
-<a name="line-154"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-155"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-156"></a>
-<a name="line-157"></a><a name="<<*"></a><span class='hs-comment'>-- | optimized version of '(&lt;*)'</span>
-<a name="line-158"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-159"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
-<a name="line-160"></a>
-<a name="line-161"></a><a name="named"></a><span class='hs-comment'>-- | smart constructor for naming parsers for purposes of displaying the grammar</span>
-<a name="line-162"></a><span class='hs-definition'>named</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-163"></a><span class='hs-definition'>named</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span>
-<a name="line-164"></a><span class='hs-definition'>named</span> <span class='hs-varid'>p</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span>
-<a name="line-165"></a>
-<a name="line-166"></a><a name="labels"></a><span class='hs-comment'>-- | smart constructor for labeling the grammar ala Parsec</span>
-<a name="line-167"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-168"></a><span class='hs-definition'>labels</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span>
-<a name="line-169"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>p</span>            <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> 
-<a name="line-170"></a>
-<a name="line-171"></a><a name="<?>"></a><span class='hs-comment'>-- | Annotate a parser with what it should say was expected if the first character in it is unconsumed</span>
-<a name="line-172"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-173"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span>
-<a name="line-174"></a>
-<a name="line-175"></a><a name="choice"></a><span class='hs-comment'>-- | Multiple parsers returning multiple answers</span>
-<a name="line-176"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-177"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
-<a name="line-178"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
-<a name="line-179"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
-<a name="line-180"></a>
-<a name="line-181"></a><a name="<<|>"></a><span class='hs-comment'>-- | Prefers the result from the left when present. Only accepts parses from the right hand parser</span>
-<a name="line-182"></a><span class='hs-comment'>--   when the left hand parser fails.</span>
-<a name="line-183"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-184"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-185"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-186"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-187"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-188"></a>
-<a name="line-189"></a><a name="greedyChoice"></a><span class='hs-comment'>-- | Multiple parsers returning the results from the left-most parser that matches anything</span>
-<a name="line-190"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-191"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
-<a name="line-192"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
-<a name="line-193"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
-<a name="line-194"></a>
-<a name="line-195"></a><span class='hs-comment'>-- | Here rather than in Text.Parsimony.Char to avoid an orphan instance</span>
-<a name="line-196"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
-<a name="line-197"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>String</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-198"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-199"></a><span class='hs-cpp'>#endif</span>
+<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span> <span class='hs-layout'>(</span><span class='hs-conid'>Any</span><span class='hs-layout'>)</span>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
+<a name="line-42"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
+<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
+<a name="line-44"></a><span class='hs-cpp'>#endif</span>
+<a name="line-45"></a>
+<a name="line-46"></a><a name="Mode"></a><span class='hs-comment'>-- | This parser is capable of parsing a token stream and obtaining an answer</span>
+<a name="line-47"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span>
+<a name="line-48"></a>
+<a name="line-49"></a><a name="Mode"></a><span class='hs-comment'>-- | This parser may only be used to recognize a token stream as belonging to a context-free language</span>
+<a name="line-50"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-comment'>-- | 'Parser' invariants provided by smart constructors:</span>
+<a name="line-53"></a><span class='hs-comment'>--</span>
+<a name="line-54"></a><span class='hs-comment'>-- (1) a Name never contains a Name directly</span>
+<a name="line-55"></a><span class='hs-comment'>--</span>
+<a name="line-56"></a><span class='hs-comment'>-- (2) Labels never contain Labels directly</span>
+<a name="line-57"></a><span class='hs-comment'>--</span>
+<a name="line-58"></a><span class='hs-comment'>-- (3) an Alt never contains an Alt directly</span>
+<a name="line-59"></a><span class='hs-comment'>--</span>
+<a name="line-60"></a><span class='hs-comment'>-- (4) a Greedy never contains a Greedy directly</span>
+<a name="line-61"></a><span class='hs-comment'>--</span>
+<a name="line-62"></a><span class='hs-comment'>-- (5) a Skip never contains a Skip transitively</span>
+<a name="line-63"></a><span class='hs-comment'>--</span>
+<a name="line-64"></a><span class='hs-comment'>-- Unenforceable invariants required for the parallel parser: </span>
+<a name="line-65"></a><span class='hs-comment'>--</span>
+<a name="line-66"></a><span class='hs-comment'>-- (1) The set of non-terminals used by the parser is finite</span>
+<a name="line-67"></a>
+<a name="line-68"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
+<a name="line-69"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-70"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-71"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-72"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-73"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-74"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-75"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-76"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-77"></a>
+<a name="line-78"></a><a name="Mode"></a><span class='hs-comment'>-- | A parser mode defines what optimizations are possible, and how much information must be retained</span>
+<a name="line-79"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-80"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-81"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-82"></a>
+<a name="line-83"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-84"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-85"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-86"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-87"></a>
+<a name="line-88"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-89"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-90"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-91"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-92"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>arr</span> <span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-93"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
+<a name="line-94"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
+<a name="line-95"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-varid'>ss</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>ss</span>
+<a name="line-96"></a>
+<a name="line-97"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
+<a name="line-98"></a>
+<a name="line-99"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
+<a name="line-100"></a>
+<a name="line-101"></a><a name="satisfy"></a><span class='hs-comment'>-- | Generate a parser that recognizes a single token using a predicate</span>
+<a name="line-102"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
+<a name="line-103"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
+<a name="line-104"></a>
+<a name="line-105"></a><a name="recognizing"></a><span class='hs-comment'>-- | treat a non-recognizing parser as a recognizing one to reduce redundant rules</span>
+<a name="line-106"></a><span class='hs-definition'>recognizing</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-107"></a><span class='hs-definition'>recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-108"></a>
+<a name="line-109"></a><span class='hs-comment'>-- | a parser mode that actually parses and retains intermediate results</span>
+<a name="line-110"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyword'>where</span>
+<a name="line-111"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-112"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span>
+<a name="line-113"></a>
+<a name="line-114"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-115"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-116"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
+<a name="line-117"></a>
+<a name="line-118"></a><span class='hs-comment'>-- | unsafeCoerces parsers to gain additional sharing that cannot be obtained in a general parser</span>
+<a name="line-119"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyword'>where</span>
+<a name="line-120"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialApplicative</span>
+<a name="line-121"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialArrow</span>
+<a name="line-122"></a>
+<a name="line-123"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-124"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-125"></a>
+<a name="line-126"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
+<a name="line-127"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
+<a name="line-128"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
+<a name="line-129"></a>
+<a name="line-130"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span>
+<a name="line-131"></a>
+<a name="line-132"></a><a name="epsilon"></a><span class='hs-comment'>-- | parser that accepts the empty string used by Recognizing parsers where necessary</span>
+<a name="line-133"></a><span class='hs-definition'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Any</span> <span class='hs-conid'>()</span>
+<a name="line-134"></a><span class='hs-definition'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span> <span class='hs-varop'>`named`</span> <span class='hs-str'>"epsilon"</span>
+<a name="line-135"></a>
+<a name="line-136"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-137"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
+<a name="line-138"></a>
+<a name="line-139"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-140"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
+<a name="line-141"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
+<a name="line-142"></a>
+<a name="line-143"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-144"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
+<a name="line-145"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-146"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-147"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-conop'>:</span><span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-148"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-149"></a>
+<a name="line-150"></a><a name="<<$"></a><span class='hs-comment'>-- | optimized version of '(&lt;$)'</span>
+<a name="line-151"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-152"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
+<a name="line-153"></a>
+<a name="line-154"></a><a name="*>>"></a><span class='hs-comment'>-- | optimized version of '(*&gt;)'</span>
+<a name="line-155"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-156"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-157"></a>
+<a name="line-158"></a><a name="<<*"></a><span class='hs-comment'>-- | optimized version of '(&lt;*)'</span>
+<a name="line-159"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-160"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
+<a name="line-161"></a>
+<a name="line-162"></a><a name="named"></a><span class='hs-comment'>-- | smart constructor for naming parsers for purposes of displaying the grammar</span>
+<a name="line-163"></a><span class='hs-definition'>named</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-164"></a><span class='hs-definition'>named</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span>
+<a name="line-165"></a><span class='hs-definition'>named</span> <span class='hs-varid'>p</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span>
+<a name="line-166"></a>
+<a name="line-167"></a><a name="labels"></a><span class='hs-comment'>-- | smart constructor for labeling the grammar ala Parsec</span>
+<a name="line-168"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-169"></a><span class='hs-definition'>labels</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span>
+<a name="line-170"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>p</span>            <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> 
+<a name="line-171"></a>
+<a name="line-172"></a><a name="<?>"></a><span class='hs-comment'>-- | Annotate a parser with what it should say was expected if the first character in it is unconsumed</span>
+<a name="line-173"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-174"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span>
+<a name="line-175"></a>
+<a name="line-176"></a><a name="choice"></a><span class='hs-comment'>-- | Multiple parsers returning multiple answers</span>
+<a name="line-177"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-178"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-179"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-180"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-181"></a>
+<a name="line-182"></a><a name="<<|>"></a><span class='hs-comment'>-- | Prefers the result from the left when present. Only accepts parses from the right hand parser</span>
+<a name="line-183"></a><span class='hs-comment'>--   when the left hand parser fails.</span>
+<a name="line-184"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-185"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-186"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-187"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-188"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-189"></a>
+<a name="line-190"></a><a name="greedyChoice"></a><span class='hs-comment'>-- | Multiple parsers returning the results from the left-most parser that matches anything</span>
+<a name="line-191"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-192"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-193"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-194"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-195"></a>
+<a name="line-196"></a><span class='hs-comment'>-- | Here rather than in Text.Parsimony.Char to avoid an orphan instance</span>
+<a name="line-197"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
+<a name="line-198"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>String</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-199"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-200"></a><span class='hs-cpp'>#endif</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-StableMap.html 27
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span> <span class='hs-layout'>(</span><span class='hs-conid'>Magic</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>
-<a name="line-22"></a><a name="StableMap"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getStableMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
-<a name="line-23"></a>
-<a name="line-24"></a><a name="empty"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
-<a name="line-25"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="insert"></a><span class='hs-definition'>insert</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
-<a name="line-28"></a><span class='hs-definition'>insert</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-layout'>(</span><span class='hs-varop'>++</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>unsafeCoerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getStableMap</span>
-<a name="line-29"></a>
-<a name="line-30"></a><a name="lookup"></a><span class='hs-definition'>lookup</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-31"></a><span class='hs-definition'>lookup</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>StableMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>do</span>
-<a name="line-32"></a>    <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-33"></a>    <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Prelude</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-34"></a>
-<a name="line-35"></a><a name="update"></a><span class='hs-definition'>update</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
-<a name="line-36"></a><span class='hs-definition'>update</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>adjust</span> <span class='hs-varid'>update'</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getStableMap</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>k'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-conid'>Magic</span>
-<a name="line-38"></a>    <span class='hs-varid'>k'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>k</span>
-<a name="line-39"></a>
-<a name="line-40"></a>    <span class='hs-varid'>v'</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Magic</span>
-<a name="line-41"></a>    <span class='hs-varid'>v'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>v</span>
-<a name="line-42"></a>
-<a name="line-43"></a>    <span class='hs-varid'>update'</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> 
-<a name="line-44"></a>    <span class='hs-varid'>update'</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>k''</span><span class='hs-layout'>,</span><span class='hs-varid'>v''</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>ks</span><span class='hs-layout'>)</span> 
-<a name="line-45"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>k'</span> <span class='hs-varop'>==</span> <span class='hs-varid'>k''</span>  <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k''</span><span class='hs-layout'>,</span><span class='hs-varid'>v'</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>ks</span>
-<a name="line-46"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k''</span><span class='hs-layout'>,</span><span class='hs-varid'>v''</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>update'</span> <span class='hs-varid'>ks</span>
-<a name="line-47"></a>    <span class='hs-varid'>update'</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
+<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span> <span class='hs-layout'>(</span><span class='hs-conid'>Any</span><span class='hs-layout'>)</span>
+<a name="line-20"></a>
+<a name="line-21"></a><a name="StableMap"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getStableMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Any</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Any</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
+<a name="line-22"></a>
+<a name="line-23"></a><a name="empty"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
+<a name="line-24"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
+<a name="line-25"></a>
+<a name="line-26"></a><a name="insert"></a><span class='hs-definition'>insert</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
+<a name="line-27"></a><span class='hs-definition'>insert</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-layout'>(</span><span class='hs-varop'>++</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>unsafeCoerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getStableMap</span>
+<a name="line-28"></a>
+<a name="line-29"></a><a name="lookup"></a><span class='hs-definition'>lookup</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-30"></a><span class='hs-definition'>lookup</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>StableMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>do</span>
+<a name="line-31"></a>    <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
+<a name="line-32"></a>    <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Prelude</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-33"></a>
+<a name="line-34"></a><a name="update"></a><span class='hs-definition'>update</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
+<a name="line-35"></a><span class='hs-definition'>update</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>adjust</span> <span class='hs-varid'>update'</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getStableMap</span> <span class='hs-keyword'>where</span>
+<a name="line-36"></a>    <span class='hs-varid'>k'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-conid'>Any</span> 
+<a name="line-37"></a>    <span class='hs-varid'>k'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>k</span>
+<a name="line-38"></a>
+<a name="line-39"></a>    <span class='hs-varid'>v'</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Any</span>
+<a name="line-40"></a>    <span class='hs-varid'>v'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>v</span>
+<a name="line-41"></a>
+<a name="line-42"></a>    <span class='hs-varid'>update'</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Any</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Any</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Any</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Any</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> 
+<a name="line-43"></a>    <span class='hs-varid'>update'</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>k''</span><span class='hs-layout'>,</span><span class='hs-varid'>v''</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>ks</span><span class='hs-layout'>)</span> 
+<a name="line-44"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>k'</span> <span class='hs-varop'>==</span> <span class='hs-varid'>k''</span>  <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k''</span><span class='hs-layout'>,</span><span class='hs-varid'>v'</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>ks</span>
+<a name="line-45"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k''</span><span class='hs-layout'>,</span><span class='hs-varid'>v''</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>update'</span> <span class='hs-varid'>ks</span>
+<a name="line-46"></a>    <span class='hs-varid'>update'</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Util.html 27
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Magic</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Arrow</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="TrivialApplicative"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-varid'>a</span> 
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-31"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-32"></a>
-<a name="line-33"></a><a name="TrivialArrow"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>TrivialArrow</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-38"></a>    <span class='hs-varid'>id</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arrow</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>arr</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-41"></a>    <span class='hs-varid'>first</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-42"></a>
-<a name="line-43"></a><a name="Id"></a><span class='hs-comment'>-- Control.Monad.Identity may lacks an Applicative definition by default</span>
-<a name="line-44"></a><a name="Id"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runId</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
-<a name="line-50"></a>    <span class='hs-conid'>Id</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>
-<a name="line-52"></a><span class='hs-comment'>-- place holder used when we need a typing dodge</span>
-<a name="line-53"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Magic</span>
+<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Arrow</span>
+<a name="line-24"></a>
+<a name="line-25"></a><a name="TrivialApplicative"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-varid'>a</span> 
+<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-keyword'>where</span>
+<a name="line-27"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-keyword'>where</span>
+<a name="line-29"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-30"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-31"></a>
+<a name="line-32"></a><a name="TrivialArrow"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span>
+<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>TrivialArrow</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-34"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-keyword'>where</span>
+<a name="line-36"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-37"></a>    <span class='hs-varid'>id</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arrow</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-keyword'>where</span>
+<a name="line-39"></a>    <span class='hs-varid'>arr</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-40"></a>    <span class='hs-varid'>first</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-41"></a>
+<a name="line-42"></a><a name="Id"></a><span class='hs-comment'>-- Control.Monad.Identity may lacks an Applicative definition by default</span>
+<a name="line-43"></a><a name="Id"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runId</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
+<a name="line-45"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-49"></a>    <span class='hs-conid'>Id</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-50"></a>
}
