[auto
ekmett@gmail.com**20090504034315
 Ignore-this: a4a7ee8e916df4f22145a724a7d2804a
] {
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 24
+><A HREF="src/Text-Parsimony-Char.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 72
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 91
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#char"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 104
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 121
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#tab"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 134
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 151
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#space"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 164
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 179
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#spaces"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 192
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 209
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#lower"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 222
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 239
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#upper"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 252
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 269
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#alphaNum"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 282
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 299
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#letter"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 312
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 329
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#hexDigit"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 342
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 359
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#octDigit"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 372
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 389
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#anyChar"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 402
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 421
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#string"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 24
+><A HREF="src/Text-Parsimony-Combinators.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 72
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 87
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#oneOf"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 100
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 115
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#noneOf"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 128
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 141
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#anyToken"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 154
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 169
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#option"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 24
+><A HREF="src/Text-Parsimony-Error.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 363
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 374
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#Message"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 548
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 561
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#messageString"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 579
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 590
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#ParseError"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 666
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 677
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#errorPosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 695
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 708
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#errorMessages"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 721
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 734
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#errorIsUnknown"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 747
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 770
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#showErrorMessages"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 783
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 796
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#newErrorMessage"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 809
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 820
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#newErrorUnknown"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 833
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 848
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#addErrorMessage"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 861
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 874
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#setErrorPosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 887
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 902
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#setErrorMessage"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 915
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 928
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#prependErrorPosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 941
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 956
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#mergeError"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 24
+><A HREF="src/Text-Parsimony-Mode.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 72
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 85
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#ParseMode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 108
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 125
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#parseMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 138
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 155
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#parse"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 174
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 187
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#RecognizeMode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 210
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 223
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#recognizeMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 236
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 249
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#recognize"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 24
+><A HREF="src/Text-Parsimony-Parsec.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 103
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 120
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Parsec.html#eval"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 133
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 150
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Parsec.html#eval_"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 24
+><A HREF="src/Text-Parsimony-Prim.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 280
-><A HREF="#v%3AfmapParser"
->fmapParser</A
-> ::  (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3ApureParser"
->pureParser</A
-> ::  a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AappParser"
->appParser</A
-> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 299
-><A HREF="#v%3AfmapParser"
->fmapParser</A
-> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
->Mode</A
-> m =&gt; (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3ApureParser"
->pureParser</A
-> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
->Mode</A
-> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AappParser"
->appParser</A
-> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
->Mode</A
-> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 527
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 538
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Parsing"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 550
+><TD CLASS="ndoc"
+>This parser is capable of parsing a token stream and obtaining an answer
+</TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 583
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 594
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Recognizing"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 606
+><TD CLASS="ndoc"
+>This parser may only be used to recognize a token stream as belonging to a context-free language
+</TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 639
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 652
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Parser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 664
+><TD CLASS="ndoc"
+><P
+><TT
+><A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+></TT
+> invariants provided by smart constructors:
+</P
+><OL
+><LI
+> a Name never contains a Name directly
+  2  Labels never contain Labels directly
+  3  an Alt never contains an Alt directly
+  4  a Greedy never contains a Greedy directly
+  5  a Skip never contains a Skip transitively
+</LI
+></OL
+><P
+>Unenforceable invariants required for the parallel parser: 
+</P
+><OL
+><LI
+> The parse tree is finite
+</LI
+></OL
+></TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 888
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 909
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Mode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 921
+><TD CLASS="ndoc"
+>A parser mode defines what optimizations are possible, and how much information must be retained
+</TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 937
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 948
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Pure"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 961
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 972
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Fun"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 995
-><TD CLASS="decl"
-><A NAME="v%3AfmapParser"
-></A
-><B
->fmapParser</B
-> ::  (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A NAME="v%3ApureParser"
-></A
-><B
->pureParser</B
-> ::  a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 998
-><TD CLASS="decl"
-><A NAME="v%3AappParser"
-></A
-><B
->appParser</B
-> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1010
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#skip"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1062
-><TD CLASS="decl"
-><A NAME="v%3AfmapParser"
-></A
-><B
->fmapParser</B
-> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
->Mode</A
-> m =&gt; (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1065
-><TD CLASS="decl"
-><A NAME="v%3ApureParser"
-></A
-><B
->pureParser</B
-> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
->Mode</A
-> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A NAME="v%3AappParser"
-></A
-><B
->appParser</B
-> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
->Mode</A
-> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> m t b</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1077
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#satisfy"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Generate a parser that recognizes a single token using a predicate
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1095
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1112
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#skip"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1125
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1142
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3C%24"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1160
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1179
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%2A%3E%3E"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1197
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1216
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3C%2A"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1234
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1249
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#named"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1267
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1284
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#recognizing"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>treat a non-recognizing parser as a recognizing one to reduce redundant rules
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1302
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1317
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#labels"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1335
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1350
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3F%3E"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Annotate a parser with what it should say was expected if the first character in it is unconsumed
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1368
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1381
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#choice"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Multiple parsers returning multiple answers
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1399
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1414
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3C%7C%3E"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Prefers the result from the left when present. Only accepts parses from the right hand parser
+   when the left hand parser fails.
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1433
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1446
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#greedyChoice"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Multiple parsers returning the results from the left-most parser that matches anything
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1464
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1479
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#epsilon"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>parser that accepts the empty string used by Recognizing parsers where necessary
+</TD
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 24
+><A HREF="src/Text-Parsimony-StableMap.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 72
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 83
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#StableMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 96
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 107
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#empty"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 120
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 135
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#insert"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 148
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 163
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#lookup"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 24
+><A HREF="src/Text-Parsimony-Util.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 103
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 114
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#TrivialApplicative"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 162
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 173
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#TrivialArrow"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 229
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 240
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#Id"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 324
-><TD CLASS="decl"
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 335
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#Magic"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
hunk ./doc/html/parsimony/Text-Parsimony.html 24
+><A HREF="src/Text-Parsimony.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
hunk ./doc/html/parsimony/doc-index.html 138
->appParser</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Prim.html#v%3AappParser"
->Text.Parsimony.Prim</A
->, Text.Parsimony</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 218
->fmapParser</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Prim.html#v%3AfmapParser"
->Text.Parsimony.Prim</A
->, Text.Parsimony</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 510
->pureParser</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Prim.html#v%3ApureParser"
->Text.Parsimony.Prim</A
->, Text.Parsimony</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
binary ./doc/html/parsimony/parsimony.haddock
oldhex
*0d0cface0004000000000000388600000000000030315200000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000300000000
*000000140000000000000000000000000000000300000000000000150000000000000000000000
*000000000300000000000000160000000000000000000000000000000300000000000000170000
*000000000000000000000000000300000000000000180000000000000000000000000000000300
*0000000000001900000000000000000000000000000003000000000000001a0000000000000000
*0000000000000003000000000000001b0000000000000000000000000000000300000000000000
*1c00000000000000000000000000000003000000000000001d0000000000000000000000000000
*0003000000000000001e00000000000000000000000000000003000000000000001f0000000000
*000000000000000000000300000000000000200000000000000000000000000000000300000000
*000000210000000000000000000000000000000300000000000000220000000000000000000000
*000000000300000000000000230000000000000000000000000000000300000000000000240000
*000000000000000000000000000300000000000000250000000000000000000000000000000300
*000000000000260000000000000000000000000000000300000000000000270000000000000000
*000000000000000300000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0004000000000000002b00000000000000000000000000000004000000000000002c0000000000
*0000000000000000000004000000000000002d0000000000000000000000000000000400000000
*0000002e00000000000000000000000000000004000000000000002f0000000000000000000000
*000000000400000000000000300000000000000000000000000000000400000000000000310000
*000000000000000000000000000400000000000000320000000000000000000000000000000400
*000000000000330000000000000000000000000000000400000000000000340000000000000000
*000000000000000400000000000000350000000000000000000000000000000400000000000000
*360000000000000000000000000000000400000000000000370000000000000000000000000000
*000400000000000000380000000000000000000000000000000400000000000000390000000000
*0000000000000000000004000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000005000000000000003d00000000000000000000000000000005000000000000003e0000
*0000000000000000000000000005000000000000003f0000000000000000000000000000000500
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000600000000000000420000000000000000000000000000000600000000000000
*430000000000000000000000000000000600000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000007000000000000004e0000000000000000
*0000000000000007000000000000004f0000000000000000000000000000000700000000000000
*500000000000000000000000000000000800000000000000510000000000000000000000000000
*000809000000000000000000000000000000010001230000006e0000006f0000006e0000002d00
*0000700000006f000000720000007400000061000000620000006c000000650000002000000028
*000000740000007900000070000000650000002000000066000000610000006d00000069000000
*6c0000006900000065000000730000002c00000020000000470000004100000044000000540000
*007300000029010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c0110000000650000006b0000006d0000006500000074
*0000007400000040000000670000006d00000061000000690000006c0000002e00000063000000
*6f0000006d00060000000000000000000000000000000100000000000000020000000000000003
*000000000000000400000000000000050600000000000000050000000000000004000000000000
*000100000000000000020000000000000003000000000000000000000000000000000000000000
*000002000000000004000000000000000600000000000000070000000000000008000000000000
*000904000000000000000600000000000000070000000000000008000000000000000900000000
*0000000000000000000000030001230000006e0000006f0000006e0000002d000000700000006f
*000000720000007400000061000000620000006c00000065000000200000002800000074000000
*7900000070000000650000002000000066000000610000006d000000690000006c000000690000
*0065000000730000002c0000002000000047000000410000004400000054000000730000002901
*0c0000006500000078000000700000006500000072000000690000006d000000650000006e0000
*0074000000610000006c0110000000650000006b0000006d000000650000007400000074000000
*40000000670000006d00000061000000690000006c0000002e000000630000006f0000006d0500
*0000000000001f030102150000006f0000007000000074000000690000006d000000690000007a
*00000065000000640000002000000076000000650000007200000073000000690000006f000000
*6e000000200000006f000000660000002001020100000027010201000000280102010000003c01
*020200000024000000290102010000002702010000000a0000000000000020030102150000006f
*0000007000000074000000690000006d000000690000007a000000650000006400000020000000
*76000000650000007200000073000000690000006f0000006e000000200000006f000000660000
*002001020100000027010204000000280000002a0000003e000000290102010000002702010000
*000a0000000000000021030102150000006f0000007000000074000000690000006d0000006900
*00007a00000065000000640000002000000076000000650000007200000073000000690000006f
*0000006e000000200000006f000000660000002001020100000027010201000000280102010000
*003c0102020000002a000000290102010000002702010000000a000000000000002203024c0000
*00730000006d00000061000000720000007400000020000000630000006f0000006e0000007300
*000074000000720000007500000063000000740000006f0000007200000020000000660000006f
*00000072000000200000006e000000610000006d000000690000006e0000006700000020000000
*7000000061000000720000007300000065000000720000007300000020000000660000006f0000
*007200000020000000700000007500000072000000700000006f00000073000000650000007300
*0000200000006f0000006600000020000000640000006900000073000000700000006c00000061
*00000079000000690000006e000000670000002000000074000000680000006500000020000000
*6700000072000000610000006d0000006d00000061000000720000000a00000000000000230302
*36000000730000006d00000061000000720000007400000020000000630000006f0000006e0000
*007300000074000000720000007500000063000000740000006f00000072000000200000006600
*00006f00000072000000200000006c0000006100000062000000650000006c000000690000006e
*000000670000002000000074000000680000006500000020000000670000007200000061000000
*6d0000006d000000610000007200000020000000610000006c0000006100000020000000500000
*0061000000720000007300000065000000630000000a1e000000000000000a000000000000000b
*000000000000000c000000000000000d000000000000000e000000000000000f00000000000000
*100000000000000011000000000000001200000000000000130000000000000014000000000000
*001500000000000000160000000000000017000000000000001800000000000000190000000000
*00001a000000000000001b000000000000001c000000000000001d000000000000001e00000000
*0000001f0000000000000020000000000000002100000000000000220000000000000023000000
*00000000240000000000000025000000000000002600000000000000271e000000000000001b00
*0000000000001a0000000000000011000000000000001200000000000000130000000000000014
*000000000000001500000000000000160000000000000017000000000000001800000000000000
*19000000000000000a000000000000000b000000000000000c000000000000000d000000000000
*000e000000000000000f000000000000001c0000000000000010000000000000001f0000000000
*00002000000000000000210000000000000022000000000000001d000000000000002300000000
*00000024000000000000002500000000000000260000000000000027000000000000001e000000
*00000000000000000000000004000108000000700000006f000000720000007400000061000000
*620000006c00000065010b00000070000000720000006f00000076000000690000007300000069
*0000006f0000006e000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d0400000000000000280301021700000054000000680000006500000020000000610000
*006200000073000000740000007200000061000000630000007400000020000000640000006100
*000074000000610000002000000074000000790000007000000065000000200107020a00000050
*000000610000007200000073000000650000004500000072000000720000006f0000007201021d
*00000020000000720000006500000070000000720000006500000073000000650000006e000000
*740000007300000020000000700000006100000072000000730000006500000020000000650000
*0072000000720000006f00000072000000730000002e0000002000000049000000740000000a01
*021f0000002000000070000000720000006f000000760000006900000064000000650000007300
*00002000000074000000680000006500000020000000730000006f000000750000007200000063
*0000006500000020000000700000006f000000730000006900000074000000690000006f000000
*6e000000200000002801040101000000000000005201020f00000029000000200000006f000000
*6600000020000000740000006800000065000000200000006500000072000000720000006f0000
*00720000000a01021f00000020000000610000006e000000640000002000000061000000200000
*006c000000690000007300000074000000200000006f0000006600000020000000650000007200
*0000720000006f00000072000000200000006d0000006500000073000000730000006100000067
*0000006500000073000000200000002801040200000000000000002a0000000000000000000000
*000000000400000000000000002900000000000000000000000000000004010205000000290000
*002e0000002000000041000000200107020a000000500000006100000072000000730000006500
*00004500000072000000720000006f000000720102010000000a01022100000020000000630000
*00610000006e000000200000006200000065000000200000007200000065000000740000007500
*0000720000006e0000006500000064000000200000006200000079000000200000007400000068
*000000650000002000000066000000750000006e0000006300000074000000690000006f000000
*6e00000020010219000000540000006500000078000000740000002e0000005000000061000000
*7200000073000000690000006d0000006f0000006e000000790000002e0000004d0000006f0000
*0064000000650000002e00000070000000610000007200000073000000650102020000002e0000
*00200107020a000000500000006100000072000000730000006500000045000000720000007200
*00006f0000007201020700000020000000690000007300000020000000610000006e0000000a01
*021100000020000000690000006e0000007300000074000000610000006e000000630000006500
*0000200000006f0000006600000020000000740000006800000065000000200104010000000000
*000000530000000000000009000000000000000a01023800000020000000630000006c00000061
*00000073000000730000002c000000200000006200000075000000740000002000000064000000
*6f0000006500000073000000200000006e0000006f0000007400000020000000630000006f0000
*006d000000700000006c0000007900000020000000770000006900000074000000680000002000
*0000740000006800000065000000200000004800000061000000730000006b000000650000006c
*0000006c00000020000000630000006f0000006e00000076000000650000006e00000074000000
*690000006f0000006e0000000a023c000000200000007400000068000000610000007400000020
*00000053000000680000006f000000770000002000000073000000680000006f00000075000000
*6c00000064000000200000007900000069000000650000006c0000006400000020000000610000
*002000000076000000610000006c000000690000006400000020000000730000006f0000007500
*000072000000630000006500000020000000630000006f00000064000000650000002000000072
*0000006500000070000000720000006500000073000000650000006e0000007400000061000000
*74000000690000006f0000006e0000002e0000000a000000000000002901030102430000005400
*000068000000690000007300000020000000610000006200000073000000740000007200000061
*000000630000007400000020000000640000006100000074000000610000002000000074000000
*790000007000000065000000200000007200000065000000700000007200000065000000730000
*00650000006e000000740000007300000020000000700000006100000072000000730000006500
*0000200000006500000072000000720000006f00000072000000200000006d0000006500000073
*00000073000000610000006700000065000000730000002e000000200000005400000068000000
*650000007200000065000000200000006100000072000000650000000a02190000002000000066
*0000006f0000007500000072000000200000006b000000690000006e0000006400000073000000
*200000006f00000066000000200000006d00000065000000730000007300000061000000670000
*0065000000730000003a0000000a010b0102240000002000000020000000640000006100000074
*00000061000000200000004d000000650000007300000073000000610000006700000065000000
*200000003d00000020000000530000007900000073000000550000006e00000045000000780000
*007000000065000000630000007400000020000000530000007400000072000000690000006e00
*0000670000000a0102210000002000000020000000200000002000000020000000200000002000
*000020000000200000002000000020000000200000002000000020000000200000007c00000020
*000000550000006e00000045000000780000007000000065000000630000007400000020000000
*530000007400000072000000690000006e000000670000000a01021f0000002000000020000000
*200000002000000020000000200000002000000020000000200000002000000020000000200000
*002000000020000000200000007c00000020000000450000007800000070000000650000006300
*00007400000020000000530000007400000072000000690000006e000000670000000a02200000
*002000000020000000200000002000000020000000200000002000000020000000200000002000
*000020000000200000002000000020000000200000007c000000200000004d0000006500000073
*000000730000006100000067000000650000002000000053000000740000007200000069000000
*6e000000670000000a010301024400000054000000680000006500000020000000660000006900
*00006e000000650000002000000064000000690000007300000074000000690000006e00000063
*00000074000000690000006f0000006e0000002000000062000000650000007400000077000000
*65000000650000006e000000200000006400000069000000660000006600000065000000720000
*00650000006e00000074000000200000006b000000690000006e00000064000000730000002000
*00006f000000660000002000000070000000610000007200000073000000650000002000000065
*00000072000000720000006f000000720000007300000020000000610000006c0000006c000000
*6f00000077000000730000000a0102430000002000000074000000680000006500000020000000
*73000000790000007300000074000000650000006d00000020000000740000006f000000200000
*0067000000650000006e0000006500000072000000610000007400000065000000200000007100
*00007500000069000000740000006500000020000000670000006f0000006f0000006400000020
*0000006500000072000000720000006f00000072000000200000006d0000006500000073000000
*730000006100000067000000650000007300000020000000660000006f00000072000000200000
*0074000000680000006500000020000000750000007300000065000000720000002e0000002000
*000049000000740000000a01023c00000020000000610000006c000000730000006f0000002000
*0000610000006c0000006c0000006f000000770000007300000020000000650000007200000072
*0000006f00000072000000200000006d0000006500000073000000730000006100000067000000
*650000007300000020000000740000006800000061000000740000002000000061000000720000
*006500000020000000660000006f000000720000006d0000006100000074000000740000006500
*00006400000020000000690000006e000000200000006400000069000000660000006600000065
*00000072000000650000006e000000740000000a0248000000200000006c000000610000006e00
*00006700000075000000610000006700000065000000730000002e000000200000004500000061
*0000006300000068000000200000006b000000690000006e00000064000000200000006f000000
*66000000200000006d000000650000007300000073000000610000006700000065000000200000
*0069000000730000002000000067000000650000006e0000006500000072000000610000007400
*000065000000640000002000000062000000790000002000000064000000690000006600000066
*0000006500000072000000650000006e0000007400000020000000630000006f0000006d000000
*62000000690000006e00000061000000740000006f00000072000000730000003a0000000a0804
*0301020300000020000000410000002001040100000000000000002d0000000000000000000000
*000000000401022b000000200000006d0000006500000073000000730000006100000067000000
*65000000200000006900000073000000200000006100000075000000740000006f0000006d0000
*0061000000740000006900000063000000610000006c0000006c00000079000000200000006700
*0000650000006e0000006500000072000000610000007400000065000000640000002000000062
*00000079000000200000007400000068000000650000000a010207000000200000002000000020
*0000002000000020000000200000002001021e000000540000006500000078000000740000002e
*0000005000000061000000720000007300000065000000630000002e000000430000006f000000
*6d00000062000000690000006e00000061000000740000006f000000720000002e000000730000
*0061000000740000006900000073000000660000007901022100000020000000630000006f0000
*006d00000062000000690000006e00000061000000740000006f000000720000002e0000002000
*000054000000680000006500000020000000610000007200000067000000750000006d00000065
*0000006e0000007400000020000000690000007300000020000000740000006800000065000000
*0a021900000020000000200000002000000020000000200000002000000020000000750000006e
*000000650000007800000070000000650000006300000074000000650000006400000020000000
*690000006e0000007000000075000000740000002e0000000a0301020300000020000000410000
*002001040100000000000000002c0000000000000000000000000000000401021d000000200000
*006d00000065000000730000007300000061000000670000006500000020000000690000007300
*00002000000067000000650000006e000000650000007200000061000000740000006500000064
*000000200000006200000079000000200000007400000068000000650000002001021b00000054
*0000006500000078000000740000002e0000005000000061000000720000007300000065000000
*630000002e0000005000000072000000690000006d0000002e000000750000006e000000650000
*00780000007000000065000000630000007400000065000000640102010000000a01022e000000
*20000000200000002000000020000000200000002000000020000000630000006f0000006d0000
*0062000000690000006e00000061000000740000006f000000720000002e000000200000005400
*0000680000006500000020000000610000007200000067000000750000006d000000650000006e
*000000740000002000000064000000650000007300000063000000720000006900000062000000
*6500000073000000200000007400000068000000650000000a0218000000200000002000000020
*00000020000000200000002000000020000000750000006e000000650000007800000070000000
*6500000063000000740000006500000064000000200000006900000074000000650000006d0000
*002e0000000a0301020300000020000000410000002001040100000000000000002b0000000000
*000000000000000000000401021d000000200000006d0000006500000073000000730000006100
*000067000000650000002000000069000000730000002000000067000000650000006e00000065
*000000720000006100000074000000650000006400000020000000620000007900000020000000
*74000000680000006500000020010214000000540000006500000078000000740000002e000000
*5000000061000000720000007300000065000000630000002e0000005000000072000000690000
*006d0000002e0000003c0000003f0000003e0102010000000a023d000000200000002000000020
*00000020000000200000002000000020000000630000006f0000006d0000006200000069000000
*6e00000061000000740000006f000000720000002e000000200000005400000068000000650000
*0020000000610000007200000067000000750000006d000000650000006e000000740000002000
*000064000000650000007300000063000000720000006900000062000000650000007300000020
*000000740000006800000065000000200000006500000078000000700000006500000063000000
*740000006500000064000000200000006900000074000000650000006d0000002e0000000a0301
*020300000020000000410000002001040200000000000000002a00000000000000000000000000
*0000040000000000000000290000000000000000000000000000000401021d000000200000006d
*000000650000007300000073000000610000006700000065000000200000006900000073000000
*2000000067000000650000006e0000006500000072000000610000007400000065000000640000
*002000000062000000790000002000000074000000680000006500000020010401000000000000
*0000540000000000000009000000000000000b0102010000000a02410000002000000020000000
*2000000020000000200000002000000020000000630000006f0000006d00000062000000690000
*006e00000061000000740000006f000000720000002e0000002000000054000000680000006500
*000020000000610000007200000067000000750000006d000000650000006e0000007400000020
*000000690000007300000020000000730000006f0000006d000000650000002000000067000000
*650000006e0000006500000072000000610000006c000000200000007000000061000000720000
*00730000006500000072000000200000006d000000650000007300000073000000610000006700
*0000650000002e000000200000000a000000000000002e03023200000045000000780000007400
*00007200000061000000630000007400000020000000740000006800000065000000200000006d
*000000650000007300000073000000610000006700000065000000200000007300000074000000
*72000000690000006e000000670000002000000066000000720000006f0000006d000000200000
*00610000006e000000200000006500000072000000720000006f00000072000000200000006d00
*0000650000007300000073000000610000006700000065000000200000000a000000000000002f
*030232000000450000007800000074000000720000006100000063000000740000007300000020
*00000074000000680000006500000020000000730000006f000000750000007200000063000000
*6500000020000000700000006f000000730000006900000074000000690000006f0000006e0000
*002000000066000000720000006f0000006d000000200000007400000068000000650000002000
*00007000000061000000720000007300000065000000200000006500000072000000720000006f
*000000720000000a1200000000000000280000000000000029000000000000002a000000000000
*002b000000000000002c000000000000002d000000000000002e000000000000002f0000000000
*000030000000000000003100000000000000320000000000000033000000000000003400000000
*000000350000000000000036000000000000003700000000000000380000000000000039120000
*000000000029000000000000002d000000000000002c000000000000002b000000000000002a00
*0000000000002e0000000000000028000000000000002f00000000000000300000000000000031
*000000000000003900000000000000330000000000000032000000000000003400000000000000
*350000000000000037000000000000003600000000000000380000000000000000000000000000
*0005000000000006000000000000003a000000000000003b000000000000003c00000000000000
*3d000000000000003e000000000000003f06000000000000003a000000000000003b0000000000
*00003c000000000000003d000000000000003e000000000000003f000000000000000000000000
*000000060000000000040000000000000040000000000000004100000000000000420000000000
*000043040000000000000040000000000000004100000000000000420000000000000043000000
*0000000000000000000000000700000000000c0000000000000044000000000000004500000000
*00000046000000000000004700000000000000480000000000000049000000000000004a000000
*000000004b000000000000004c000000000000004d000000000000004e000000000000004f0c00
*000000000000440000000000000045000000000000004600000000000000470000000000000048
*0000000000000049000000000000004a000000000000004b000000000000004c00000000000000
*4d000000000000004e000000000000004f0000000000000000000000000000000c000123000000
*6e0000006f0000006e0000002d000000700000006f000000720000007400000061000000620000
*006c00000065000000200000002800000074000000790000007000000065000000200000006600
*0000610000006d000000690000006c0000006900000065000000730000002c0000002000000047
*0000004100000044000000540000007300000029010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c0110000000650000
*006b0000006d00000065000000740000007400000040000000670000006d000000610000006900
*00006c0000002e000000630000006f0000006d0042000000000000000a000000000000000b0000
*00000000000c000000000000000d000000000000000e000000000000000f000000000000001000
*000000000000110000000000000012000000000000001300000000000000140000000000000015
*000000000000001600000000000000170000000000000018000000000000001900000000000000
*1a000000000000001b000000000000001c000000000000001d000000000000001e000000000000
*001f00000000000000200000000000000021000000000000002200000000000000230000000000
*000024000000000000002500000000000000260000000000000027000000000000002800000000
*00000029000000000000002a000000000000002b000000000000002c000000000000002d000000
*000000002e000000000000002f0000000000000030000000000000003100000000000000320000
*000000000033000000000000003400000000000000350000000000000036000000000000003700
*000000000000380000000000000039000000000000003a000000000000003b000000000000003c
*000000000000003d000000000000003e000000000000003f000000000000004400000000000000
*450000000000000046000000000000004700000000000000480000000000000049000000000000
*004a000000000000004b000000000000004c000000000000004d000000000000004e0000000000
*00004f000000000000000000000000000000000800011c0000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*28000000740000007900000070000000650000002000000066000000610000006d000000690000
*006c00000069000000650000007300000029010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c0110000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d00020000000000000050000000000000005102000000
*000000005000000000000000510000000000000055000000000000000000000000000000010300
*0000000000000d0000000000000000000000000000000103000000000000000e00000000000000
*00000000000000000101000000000000000e000000000000000000000000000000010000000000
*0000000f0000000000000000000000000000000103000000000000001000000000000000000000
*000000000001030000000000000011000000000000000000000000000000020300000000000000
*120000000000000000000000000000000200000000000000001300000000000000000000000000
*000002000000000000000014000000000000000000000000000000020000000000000000150000
*000000000000000000000000000303000000000000001600000000000000000000000000000003
*030000000000000017000000000000000000000000000000030300000000000000180000000000
*000000000000000000000300000000000000001900000000000000000000000000000003000000
*00000000001a0000000000000000000000000000000300000000000000001b0000000000000000
*000000000000000300000000000000001c00000000000000000000000000000003030000000000
*00001d0000000000000000000000000000000301000000000000001e0000000000000000000000
*000000000301000000000000001f00000000000000000000000000000003010000000000000020
*000000000000000000000000000000030100000000000000210000000000000000000000000000
*000301000000000000002200000000000000000000000000000003010000000000000023000000
*000000000000000000000000030100000000000000170000000000000000000000000000000301
*000000000000002400000000000000000000000000000003030000000000000025000000000000
*000000000000000000030300000000000000260000000000000000000000000000000300000000
*000000002700000000000000000000000000000003000000000000000028000000000000000000
*000000000000030000000000000000290000000000000000000000000000000300000000000000
*002a0000000000000000000000000000000300000000000000002b000000000000000000000000
*0000000300000000000000002c0000000000000000000000000000000300000000000000002d00
*00000000000000000000000000000300000000000000002e000000000000000000000000000000
*0300000000000000002f0000000000000000000000000000000300000000000000003000000000
*000000000000000000000003000000000000000031000000000000000000000000000000030000
*000000000000320000000000000000000000000000000403000000000000003300000000000000
*000000000000000004030000000000000034000000000000000000000000000000040100000000
*000000340000000000000000000000000000000401000000000000003500000000000000000000
*000000000004010000000000000036000000000000000000000000000000040100000000000000
*370000000000000000000000000000000400000000000000003800000000000000000000000000
*0000040000000000000000390000000000000000000000000000000400000000000000003a0000
*000000000000000000000000000400000000000000003b00000000000000000000000000000004
*00000000000000003c0000000000000000000000000000000400000000000000003d0000000000
*000000000000000000000400000000000000003e00000000000000000000000000000004000000
*00000000003f000000000000000000000000000000040000000000000000400000000000000000
*000000000000000400000000000000004100000000000000000000000000000004000000000000
*000042000000000000000000000000000000040000000000000000430000000000000000000000
*000000000503000000000000004400000000000000000000000000000005000000000000000045
*000000000000000000000000000000050000000000000000460000000000000000000000000000
*000503000000000000004700000000000000000000000000000005000000000000000048000000
*000000000000000000000000050000000000000000490000000000000000000000000000000600
*000000000000004a0000000000000000000000000000000600000000000000004b000000000000
*0000000000000000000600000000000000004c0000000000000000000000000000000600000000
*000000004d0000000000000000000000000000000700000000000000004e000000000000000000
*0000000000000700000000000000004f0000000000000000000000000000000700000000000000
*005000000000000000000000000000000007000000000000000051000000000000000000000000
*000000070000000000000000520000000000000000000000000000000700000000000000005300
*000000000000000000000000000007000000000000000054000000000000000000000000000000
*070000000000000000550000000000000000000000000000000700000000000000005600000000
*000000000000000000000007000000000000000057000000000000000000000000000000070000
*000000000000580000000000000000000000000000000700000000000000005900000000000000
*00000000000000000800000000000000005a000000000000000000000000000000080000000000
*0000005b000000000000005c000000000000005d03000000000000005e00000000000000090000
*00000000005f030000000000000060000000000000000900000000000000610000000000000000
*620000000000000063000000000000000f70617273696d6f6e792d302e302e3100000000000000
*13546578742e50617273696d6f6e792e5574696c0000000000000018546578742e50617273696d
*6f6e792e537461626c654d61700000000000000013546578742e50617273696d6f6e792e507269
*6d0000000000000014546578742e50617273696d6f6e792e4572726f7200000000000000135465
*78742e50617273696d6f6e792e4d6f6465000000000000001a546578742e50617273696d6f6e79
*2e436f6d62696e61746f72730000000000000013546578742e50617273696d6f6e792e43686172
*0000000000000015546578742e50617273696d6f6e792e50617273656300000000000000046261
*73650000000000000009546578742e53686f77000000000000000d436f6e74726f6c2e4d6f6e61
*64000000000000000e546578742e50617273696d6f6e7900000000000000054d61676963000000
*00000000024964000000000000000572756e4964000000000000000c5472697669616c4172726f
*7700000000000000125472697669616c4170706c69636174697665000000000000000953746162
*6c654d61700000000000000005656d7074790000000000000006696e7365727400000000000000
*066c6f6f6b757000000000000000044d6f64650000000000000004507572650000000000000003
*46756e000000000000000a666d6170506172736572000000000000000a70757265506172736572
*00000000000000096170705061727365720000000000000004736b697000000000000000065061
*7273657200000000000000064c6162656c7300000000000000044e616d65000000000000000453
*6b6970000000000000000753617469736679000000000000000647726565647900000000000000
*03416c740000000000000003417070000000000000000b5265636f676e697a696e670000000000
*00000750617273696e67000000000000000773617469736679000000000000000b7265636f676e
*697a696e670000000000000007657073696c6f6e00000000000000033c3c240000000000000003
*2a3e3e00000000000000033c3c2a00000000000000056e616d656400000000000000066c616265
*6c7300000000000000033c3f3e000000000000000663686f69636500000000000000043c3c7c3e
*000000000000000c67726565647943686f696365000000000000000a50617273654572726f7200
*000000000000074d65737361676500000000000000064578706563740000000000000008556e45
*7870656374000000000000000b537973556e457870656374000000000000000d6d657373616765
*537472696e67000000000000000d6572726f72506f736974696f6e000000000000000d6572726f
*724d65737361676573000000000000000e6572726f724973556e6b6e6f776e000000000000000f
*6e65774572726f72556e6b6e6f776e000000000000000f6e65774572726f724d65737361676500
*0000000000000f6164644572726f724d65737361676500000000000000107365744572726f7250
*6f736974696f6e000000000000001470726570656e644572726f72506f736974696f6e00000000
*0000000f7365744572726f724d657373616765000000000000000a6d657267654572726f720000
*00000000001173686f774572726f724d65737361676573000000000000000d5265636f676e697a
*654d6f6465000000000000000c7265636f676e697a654d617000000000000000097265636f676e
*697a65000000000000000950617273654d6f6465000000000000000870617273654d6170000000
*0000000005706172736500000000000000056f6e654f6600000000000000066e6f6e654f660000
*000000000008616e79546f6b656e00000000000000066f7074696f6e0000000000000004636861
*720000000000000003746162000000000000000573706163650000000000000006737061636573
*00000000000000056c6f776572000000000000000575707065720000000000000008616c706861
*4e756d00000000000000066c657474657200000000000000086865784469676974000000000000
*00086f637444696769740000000000000007616e79436861720000000000000006737472696e67
*00000000000000046576616c00000000000000056576616c5f000000000000000e6d6f6e6f6964
*732d302e312e33360000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75
*726365506f736974696f6e000000000000000e536f75726365506f736974696f6e000000000000
*00084748432e53686f77000000000000000453686f7700000000000000084748432e4261736500
*000000000000046661696c
newhex
*0d0cface00040000000000004b1f00000000000043154f00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000300000000
*000000140000000000000000000000000000000300000000000000150000000000000000000000
*000000000300000000000000160000000000000000000000000000000300000000000000170000
*000000000000000000000000000300000000000000180000000000000000000000000000000300
*0000000000001900000000000000000000000000000003000000000000001a0000000000000000
*0000000000000003000000000000001b0000000000000000000000000000000300000000000000
*1c00000000000000000000000000000003000000000000001d0000000000000000000000000000
*0003000000000000001e00000000000000000000000000000003000000000000001f0000000000
*000000000000000000000300000000000000200000000000000000000000000000000300000000
*000000210000000000000000000000000000000300000000000000220000000000000000000000
*000000000300000000000000230000000000000000000000000000000300000000000000240000
*000000000000000000000000000300000000000000250000000000000000000000000000000400
*000000000000260000000000000000000000000000000400000000000000270000000000000000
*000000000000000400000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0004000000000000002b00000000000000000000000000000004000000000000002c0000000000
*0000000000000000000004000000000000002d0000000000000000000000000000000400000000
*0000002e00000000000000000000000000000004000000000000002f0000000000000000000000
*000000000400000000000000300000000000000000000000000000000400000000000000310000
*000000000000000000000000000400000000000000320000000000000000000000000000000400
*000000000000330000000000000000000000000000000400000000000000340000000000000000
*000000000000000400000000000000350000000000000000000000000000000400000000000000
*360000000000000000000000000000000400000000000000370000000000000000000000000000
*000500000000000000380000000000000000000000000000000500000000000000390000000000
*0000000000000000000005000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000005000000000000003d00000000000000000000000000000006000000000000003e0000
*0000000000000000000000000006000000000000003f0000000000000000000000000000000600
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000700000000000000420000000000000000000000000000000700000000000000
*430000000000000000000000000000000700000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000008000000000000004e0000000000000000
*000000000000000809000000000000000000000000000000010001230000006e0000006f000000
*6e0000002d000000700000006f000000720000007400000061000000620000006c000000650000
*002000000028000000740000007900000070000000650000002000000066000000610000006d00
*0000690000006c0000006900000065000000730000002c00000020000000470000004100000044
*000000540000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d00060000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050600000000000000050000000000000004
*000000000000000100000000000000020000000000000003000000000000000000000000000000
*000000000000000002000000000004000000000000000600000000000000070000000000000008
*000000000000000904000000000000000600000000000000070000000000000008000000000000
*0009000000000000000000000000000000030001230000006e0000006f0000006e0000002d0000
*00700000006f000000720000007400000061000000620000006c00000065000000200000002800
*0000740000007900000070000000650000002000000066000000610000006d000000690000006c
*0000006900000065000000730000002c0000002000000047000000410000004400000054000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d10000000000000000a0302610000004100000020000000700000006100000072000000
*730000006500000072000000200000006d0000006f000000640000006500000020000000640000
*006500000066000000690000006e00000065000000730000002000000077000000680000006100
*000074000000200000006f0000007000000074000000690000006d000000690000007a00000061
*00000074000000690000006f0000006e0000007300000020000000610000007200000065000000
*20000000700000006f000000730000007300000069000000620000006c000000650000002c0000
*0020000000610000006e0000006400000020000000680000006f00000077000000200000006d00
*000075000000630000006800000020000000690000006e000000660000006f000000720000006d
*0000006100000074000000690000006f0000006e000000200000006d0000007500000073000000
*740000002000000062000000650000002000000072000000650000007400000061000000690000
*006e00000065000000640000000a000000000000000e010301040100000000000000000e000000
*00000000000000000000000003022c00000020000000690000006e000000760000006100000072
*00000069000000610000006e00000074000000730000002000000070000000720000006f000000
*760000006900000064000000650000006400000020000000620000007900000020000000730000
*006d00000061000000720000007400000020000000630000006f0000006e000000730000007400
*0000720000007500000063000000740000006f00000072000000730000003a0000000a01090103
*0102270000002000000061000000200000004e000000610000006d00000065000000200000006e
*0000006500000076000000650000007200000020000000630000006f0000006e00000074000000
*61000000690000006e000000730000002000000061000000200000004e000000610000006d0000
*0065000000200000006400000069000000720000006500000063000000740000006c0000007900
*00000a01022a00000020000000200000003200000020000000200000004c000000610000006200
*0000650000006c00000073000000200000006e0000006500000076000000650000007200000020
*000000630000006f0000006e0000007400000061000000690000006e000000200000004c000000
*6100000062000000650000006c0000007300000020000000640000006900000072000000650000
*0063000000740000006c000000790000000a01022b000000200000002000000033000000200000
*0020000000610000006e00000020000000410000006c00000074000000200000006e0000006500
*000076000000650000007200000020000000630000006f0000006e000000740000006100000069
*0000006e0000007300000020000000610000006e00000020000000410000006c00000074000000
*200000006400000069000000720000006500000063000000740000006c000000790000000a0102
*2f0000002000000020000000340000002000000020000000610000002000000047000000720000
*0065000000650000006400000079000000200000006e0000006500000076000000650000007200
*000020000000630000006f0000006e0000007400000061000000690000006e0000007300000020
*000000610000002000000047000000720000006500000065000000640000007900000020000000
*6400000069000000720000006500000063000000740000006c000000790000000a022f00000020
*000000200000003500000020000000200000006100000020000000530000006b00000069000000
*70000000200000006e0000006500000076000000650000007200000020000000630000006f0000
*006e0000007400000061000000690000006e000000730000002000000061000000200000005300
*00006b0000006900000070000000200000007400000072000000610000006e0000007300000069
*000000740000006900000076000000650000006c000000790000000a0103023c00000055000000
*6e000000650000006e000000660000006f00000072000000630000006500000061000000620000
*006c0000006500000020000000690000006e000000760000006100000072000000690000006100
*00006e000000740000007300000020000000720000006500000071000000750000006900000072
*000000650000006400000020000000660000006f00000072000000200000007400000068000000
*6500000020000000700000006100000072000000610000006c0000006c000000650000006c0000
*00200000007000000061000000720000007300000065000000720000003a000000200000000a09
*0103021a0000002000000054000000680000006500000020000000700000006100000072000000
*730000006500000020000000740000007200000065000000650000002000000069000000730000
*002000000066000000690000006e0000006900000074000000650000000a000000000000001703
*026100000054000000680000006900000073000000200000007000000061000000720000007300
*00006500000072000000200000006d0000006100000079000000200000006f0000006e0000006c
*000000790000002000000062000000650000002000000075000000730000006500000064000000
*20000000740000006f000000200000007200000065000000630000006f000000670000006e0000
*00690000007a00000065000000200000006100000020000000740000006f0000006b0000006500
*00006e0000002000000073000000740000007200000065000000610000006d0000002000000061
*000000730000002000000062000000650000006c0000006f0000006e0000006700000069000000
*6e0000006700000020000000740000006f000000200000006100000020000000630000006f0000
*006e000000740000006500000078000000740000002d0000006600000072000000650000006500
*0000200000006c000000610000006e00000067000000750000006100000067000000650000000a
*000000000000001803024900000054000000680000006900000073000000200000007000000061
*000000720000007300000065000000720000002000000069000000730000002000000063000000
*610000007000000061000000620000006c00000065000000200000006f00000066000000200000
*0070000000610000007200000073000000690000006e0000006700000020000000610000002000
*0000740000006f0000006b000000650000006e0000002000000073000000740000007200000065
*000000610000006d00000020000000610000006e00000064000000200000006f00000062000000
*7400000061000000690000006e000000690000006e0000006700000020000000610000006e0000
*0020000000610000006e000000730000007700000065000000720000000a000000000000001903
*024300000047000000650000006e00000065000000720000006100000074000000650000002000
*000061000000200000007000000061000000720000007300000065000000720000002000000074
*000000680000006100000074000000200000007200000065000000630000006f00000067000000
*6e000000690000007a000000650000007300000020000000610000002000000073000000690000
*006e000000670000006c0000006500000020000000740000006f0000006b000000650000006e00
*0000200000007500000073000000690000006e0000006700000020000000610000002000000070
*00000072000000650000006400000069000000630000006100000074000000650000000a000000
*000000001a03024e00000074000000720000006500000061000000740000002000000061000000
*200000006e0000006f0000006e0000002d0000007200000065000000630000006f000000670000
*006e000000690000007a000000690000006e000000670000002000000070000000610000007200
*000073000000650000007200000020000000610000007300000020000000610000002000000072
*00000065000000630000006f000000670000006e000000690000007a000000690000006e000000
*67000000200000006f0000006e0000006500000020000000740000006f00000020000000720000
*006500000064000000750000006300000065000000200000007200000065000000640000007500
*00006e00000064000000610000006e000000740000002000000072000000750000006c00000065
*000000730000000a000000000000001b0302510000007000000061000000720000007300000065
*000000720000002000000074000000680000006100000074000000200000006100000063000000
*630000006500000070000000740000007300000020000000740000006800000065000000200000
*00650000006d000000700000007400000079000000200000007300000074000000720000006900
*00006e000000670000002000000075000000730000006500000064000000200000006200000079
*000000200000005200000065000000630000006f000000670000006e000000690000007a000000
*690000006e00000067000000200000007000000061000000720000007300000065000000720000
*0073000000200000007700000068000000650000007200000065000000200000006e0000006500
*0000630000006500000073000000730000006100000072000000790000000a000000000000001c
*030102150000006f0000007000000074000000690000006d000000690000007a00000065000000
*640000002000000076000000650000007200000073000000690000006f0000006e000000200000
*006f000000660000002001020100000027010201000000280102010000003c0102020000002400
*0000290102010000002702010000000a000000000000001d030102150000006f00000070000000
*74000000690000006d000000690000007a00000065000000640000002000000076000000650000
*007200000073000000690000006f0000006e000000200000006f00000066000000200102010000
*0027010204000000280000002a0000003e000000290102010000002702010000000a0000000000
*00001e030102150000006f0000007000000074000000690000006d000000690000007a00000065
*000000640000002000000076000000650000007200000073000000690000006f0000006e000000
*200000006f000000660000002001020100000027010201000000280102010000003c0102020000
*002a000000290102010000002702010000000a000000000000001f03024c000000730000006d00
*000061000000720000007400000020000000630000006f0000006e000000730000007400000072
*0000007500000063000000740000006f0000007200000020000000660000006f00000072000000
*200000006e000000610000006d000000690000006e000000670000002000000070000000610000
*00720000007300000065000000720000007300000020000000660000006f000000720000002000
*0000700000007500000072000000700000006f000000730000006500000073000000200000006f
*0000006600000020000000640000006900000073000000700000006c0000006100000079000000
*690000006e00000067000000200000007400000068000000650000002000000067000000720000
*00610000006d0000006d00000061000000720000000a0000000000000020030236000000730000
*006d00000061000000720000007400000020000000630000006f0000006e000000730000007400
*0000720000007500000063000000740000006f0000007200000020000000660000006f00000072
*000000200000006c0000006100000062000000650000006c000000690000006e00000067000000
*20000000740000006800000065000000200000006700000072000000610000006d0000006d0000
*00610000007200000020000000610000006c000000610000002000000050000000610000007200
*00007300000065000000630000000a0000000000000021030262000000410000006e0000006e00
*00006f000000740000006100000074000000650000002000000061000000200000007000000061
*000000720000007300000065000000720000002000000077000000690000007400000068000000
*200000007700000068000000610000007400000020000000690000007400000020000000730000
*00680000006f000000750000006c00000064000000200000007300000061000000790000002000
*000077000000610000007300000020000000650000007800000070000000650000006300000074
*000000650000006400000020000000690000006600000020000000740000006800000065000000
*200000006600000069000000720000007300000074000000200000006300000068000000610000
*0072000000610000006300000074000000650000007200000020000000690000006e0000002000
*0000690000007400000020000000690000007300000020000000750000006e000000630000006f
*0000006e00000073000000750000006d00000065000000640000000a000000000000002203022c
*0000004d000000750000006c0000007400000069000000700000006c0000006500000020000000
*700000006100000072000000730000006500000072000000730000002000000072000000650000
*007400000075000000720000006e000000690000006e00000067000000200000006d0000007500
*00006c0000007400000069000000700000006c0000006500000020000000610000006e00000073
*000000770000006500000072000000730000000a00000000000000230301025e00000050000000
*720000006500000066000000650000007200000073000000200000007400000068000000650000
*0020000000720000006500000073000000750000006c0000007400000020000000660000007200
*00006f0000006d00000020000000740000006800000065000000200000006c0000006500000066
*00000074000000200000007700000068000000650000006e000000200000007000000072000000
*6500000073000000650000006e000000740000002e000000200000004f0000006e0000006c0000
*007900000020000000610000006300000063000000650000007000000074000000730000002000
*00007000000061000000720000007300000065000000730000002000000066000000720000006f
*0000006d0000002000000074000000680000006500000020000000720000006900000067000000
*68000000740000002000000068000000610000006e000000640000002000000070000000610000
*00720000007300000065000000720000000a022400000020000000200000002000000077000000
*68000000650000006e00000020000000740000006800000065000000200000006c000000650000
*0066000000740000002000000068000000610000006e0000006400000020000000700000006100
*000072000000730000006500000072000000200000006600000061000000690000006c00000073
*0000002e0000000a00000000000000240302570000004d000000750000006c0000007400000069
*000000700000006c00000065000000200000007000000061000000720000007300000065000000
*72000000730000002000000072000000650000007400000075000000720000006e000000690000
*006e00000067000000200000007400000068000000650000002000000072000000650000007300
*0000750000006c00000074000000730000002000000066000000720000006f0000006d00000020
*000000740000006800000065000000200000006c0000006500000066000000740000002d000000
*6d0000006f00000073000000740000002000000070000000610000007200000073000000650000
*00720000002000000074000000680000006100000074000000200000006d000000610000007400
*00006300000068000000650000007300000020000000610000006e000000790000007400000068
*000000690000006e000000670000000a1b000000000000000a000000000000000b000000000000
*000c000000000000000d000000000000000e000000000000000f00000000000000100000000000
*000011000000000000001200000000000000130000000000000014000000000000001500000000
*00000016000000000000001700000000000000180000000000000019000000000000001a000000
*000000001b000000000000001c000000000000001d000000000000001e000000000000001f0000
*00000000002000000000000000210000000000000022000000000000002300000000000000241b
*00000000000000180000000000000017000000000000000e000000000000000f00000000000000
*100000000000000011000000000000001200000000000000130000000000000014000000000000
*00150000000000000016000000000000000a000000000000000b000000000000000c0000000000
*000019000000000000000d000000000000001c000000000000001d000000000000001e00000000
*0000001f000000000000001a000000000000002000000000000000210000000000000022000000
*00000000230000000000000024000000000000001b000000000000000000000000000000040001
*08000000700000006f000000720000007400000061000000620000006c00000065010b00000070
*000000720000006f000000760000006900000073000000690000006f0000006e00000061000000
*6c0110000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d0400000000000000250301
*021700000054000000680000006500000020000000610000006200000073000000740000007200
*000061000000630000007400000020000000640000006100000074000000610000002000000074
*000000790000007000000065000000200107020a00000050000000610000007200000073000000
*650000004500000072000000720000006f0000007201021d000000200000007200000065000000
*70000000720000006500000073000000650000006e000000740000007300000020000000700000
*0061000000720000007300000065000000200000006500000072000000720000006f0000007200
*0000730000002e0000002000000049000000740000000a01021f00000020000000700000007200
*00006f000000760000006900000064000000650000007300000020000000740000006800000065
*00000020000000730000006f000000750000007200000063000000650000002000000070000000
*6f000000730000006900000074000000690000006f0000006e0000002000000028010401010000
*00000000004f01020f00000029000000200000006f000000660000002000000074000000680000
*0065000000200000006500000072000000720000006f000000720000000a01021f000000200000
*00610000006e000000640000002000000061000000200000006c00000069000000730000007400
*0000200000006f00000066000000200000006500000072000000720000006f0000007200000020
*0000006d0000006500000073000000730000006100000067000000650000007300000020000000
*280104020000000000000000270000000000000000000000000000000400000000000000002600
*000000000000000000000000000004010205000000290000002e00000020000000410000002001
*07020a00000050000000610000007200000073000000650000004500000072000000720000006f
*000000720102010000000a0102210000002000000063000000610000006e000000200000006200
*0000650000002000000072000000650000007400000075000000720000006e0000006500000064
*000000200000006200000079000000200000007400000068000000650000002000000066000000
*750000006e0000006300000074000000690000006f0000006e0000002001021900000054000000
*6500000078000000740000002e00000050000000610000007200000073000000690000006d0000
*006f0000006e000000790000002e0000004d0000006f00000064000000650000002e0000007000
*0000610000007200000073000000650102020000002e000000200107020a000000500000006100
*00007200000073000000650000004500000072000000720000006f000000720102070000002000
*0000690000007300000020000000610000006e0000000a01021100000020000000690000006e00
*00007300000074000000610000006e0000006300000065000000200000006f0000006600000020
*000000740000006800000065000000200104010000000000000000500000000000000009000000
*000000000a01023800000020000000630000006c0000006100000073000000730000002c000000
*2000000062000000750000007400000020000000640000006f0000006500000073000000200000
*006e0000006f0000007400000020000000630000006f0000006d000000700000006c0000007900
*000020000000770000006900000074000000680000002000000074000000680000006500000020
*0000004800000061000000730000006b000000650000006c0000006c0000002000000063000000
*6f0000006e00000076000000650000006e00000074000000690000006f0000006e0000000a023c
*00000020000000740000006800000061000000740000002000000053000000680000006f000000
*770000002000000073000000680000006f000000750000006c0000006400000020000000790000
*0069000000650000006c0000006400000020000000610000002000000076000000610000006c00
*0000690000006400000020000000730000006f0000007500000072000000630000006500000020
*000000630000006f00000064000000650000002000000072000000650000007000000072000000
*6500000073000000650000006e000000740000006100000074000000690000006f0000006e0000
*002e0000000a000000000000002601030102430000005400000068000000690000007300000020
*000000610000006200000073000000740000007200000061000000630000007400000020000000
*640000006100000074000000610000002000000074000000790000007000000065000000200000
*00720000006500000070000000720000006500000073000000650000006e000000740000007300
*000020000000700000006100000072000000730000006500000020000000650000007200000072
*0000006f00000072000000200000006d0000006500000073000000730000006100000067000000
*65000000730000002e000000200000005400000068000000650000007200000065000000200000
*006100000072000000650000000a021900000020000000660000006f0000007500000072000000
*200000006b000000690000006e0000006400000073000000200000006f00000066000000200000
*006d000000650000007300000073000000610000006700000065000000730000003a0000000a01
*0b010224000000200000002000000064000000610000007400000061000000200000004d000000
*650000007300000073000000610000006700000065000000200000003d00000020000000530000
*007900000073000000550000006e00000045000000780000007000000065000000630000007400
*000020000000530000007400000072000000690000006e000000670000000a0102210000002000
*000020000000200000002000000020000000200000002000000020000000200000002000000020
*000000200000002000000020000000200000007c00000020000000550000006e00000045000000
*780000007000000065000000630000007400000020000000530000007400000072000000690000
*006e000000670000000a01021f0000002000000020000000200000002000000020000000200000
*002000000020000000200000002000000020000000200000002000000020000000200000007c00
*000020000000450000007800000070000000650000006300000074000000200000005300000074
*00000072000000690000006e000000670000000a02200000002000000020000000200000002000
*000020000000200000002000000020000000200000002000000020000000200000002000000020
*000000200000007c000000200000004d0000006500000073000000730000006100000067000000
*6500000020000000530000007400000072000000690000006e000000670000000a010301024400
*00005400000068000000650000002000000066000000690000006e000000650000002000000064
*000000690000007300000074000000690000006e0000006300000074000000690000006f000000
*6e000000200000006200000065000000740000007700000065000000650000006e000000200000
*00640000006900000066000000660000006500000072000000650000006e000000740000002000
*00006b000000690000006e0000006400000073000000200000006f000000660000002000000070
*00000061000000720000007300000065000000200000006500000072000000720000006f000000
*720000007300000020000000610000006c0000006c0000006f00000077000000730000000a0102
*430000002000000074000000680000006500000020000000730000007900000073000000740000
*00650000006d00000020000000740000006f0000002000000067000000650000006e0000006500
*000072000000610000007400000065000000200000007100000075000000690000007400000065
*00000020000000670000006f0000006f0000006400000020000000650000007200000072000000
*6f00000072000000200000006d0000006500000073000000730000006100000067000000650000
*007300000020000000660000006f00000072000000200000007400000068000000650000002000
*0000750000007300000065000000720000002e0000002000000049000000740000000a01023c00
*000020000000610000006c000000730000006f00000020000000610000006c0000006c0000006f
*0000007700000073000000200000006500000072000000720000006f0000007200000020000000
*6d0000006500000073000000730000006100000067000000650000007300000020000000740000
*006800000061000000740000002000000061000000720000006500000020000000660000006f00
*0000720000006d000000610000007400000074000000650000006400000020000000690000006e
*00000020000000640000006900000066000000660000006500000072000000650000006e000000
*740000000a0248000000200000006c000000610000006e00000067000000750000006100000067
*00000065000000730000002e000000200000004500000061000000630000006800000020000000
*6b000000690000006e00000064000000200000006f00000066000000200000006d000000650000
*007300000073000000610000006700000065000000200000006900000073000000200000006700
*0000650000006e0000006500000072000000610000007400000065000000640000002000000062
*000000790000002000000064000000690000006600000066000000650000007200000065000000
*6e0000007400000020000000630000006f0000006d00000062000000690000006e000000610000
*00740000006f00000072000000730000003a0000000a0804030102030000002000000041000000
*2001040100000000000000002a0000000000000000000000000000000401022b00000020000000
*6d0000006500000073000000730000006100000067000000650000002000000069000000730000
*00200000006100000075000000740000006f0000006d0000006100000074000000690000006300
*0000610000006c0000006c000000790000002000000067000000650000006e0000006500000072
*000000610000007400000065000000640000002000000062000000790000002000000074000000
*68000000650000000a010207000000200000002000000020000000200000002000000020000000
*2001021e000000540000006500000078000000740000002e000000500000006100000072000000
*7300000065000000630000002e000000430000006f0000006d00000062000000690000006e0000
*0061000000740000006f000000720000002e000000730000006100000074000000690000007300
*0000660000007901022100000020000000630000006f0000006d00000062000000690000006e00
*000061000000740000006f000000720000002e0000002000000054000000680000006500000020
*000000610000007200000067000000750000006d000000650000006e0000007400000020000000
*6900000073000000200000007400000068000000650000000a0219000000200000002000000020
*00000020000000200000002000000020000000750000006e000000650000007800000070000000
*650000006300000074000000650000006400000020000000690000006e00000070000000750000
*00740000002e0000000a0301020300000020000000410000002001040100000000000000002900
*00000000000000000000000000000401021d000000200000006d00000065000000730000007300
*00006100000067000000650000002000000069000000730000002000000067000000650000006e
*000000650000007200000061000000740000006500000064000000200000006200000079000000
*200000007400000068000000650000002001021b00000054000000650000007800000074000000
*2e0000005000000061000000720000007300000065000000630000002e00000050000000720000
*00690000006d0000002e000000750000006e000000650000007800000070000000650000006300
*00007400000065000000640102010000000a01022e000000200000002000000020000000200000
*00200000002000000020000000630000006f0000006d00000062000000690000006e0000006100
*0000740000006f000000720000002e000000200000005400000068000000650000002000000061
*0000007200000067000000750000006d000000650000006e000000740000002000000064000000
*650000007300000063000000720000006900000062000000650000007300000020000000740000
*0068000000650000000a0218000000200000002000000020000000200000002000000020000000
*20000000750000006e000000650000007800000070000000650000006300000074000000650000
*0064000000200000006900000074000000650000006d0000002e0000000a030102030000002000
*000041000000200104010000000000000000280000000000000000000000000000000401021d00
*0000200000006d0000006500000073000000730000006100000067000000650000002000000069
*000000730000002000000067000000650000006e00000065000000720000006100000074000000
*650000006400000020000000620000007900000020000000740000006800000065000000200102
*14000000540000006500000078000000740000002e000000500000006100000072000000730000
*0065000000630000002e0000005000000072000000690000006d0000002e0000003c0000003f00
*00003e0102010000000a023d000000200000002000000020000000200000002000000020000000
*20000000630000006f0000006d00000062000000690000006e00000061000000740000006f0000
*00720000002e000000200000005400000068000000650000002000000061000000720000006700
*0000750000006d000000650000006e000000740000002000000064000000650000007300000063
*000000720000006900000062000000650000007300000020000000740000006800000065000000
*200000006500000078000000700000006500000063000000740000006500000064000000200000
*006900000074000000650000006d0000002e0000000a0301020300000020000000410000002001
*040200000000000000002700000000000000000000000000000004000000000000000026000000
*0000000000000000000000000401021d000000200000006d000000650000007300000073000000
*6100000067000000650000002000000069000000730000002000000067000000650000006e0000
*006500000072000000610000007400000065000000640000002000000062000000790000002000
*000074000000680000006500000020010401000000000000000051000000000000000900000000
*0000000b0102010000000a02410000002000000020000000200000002000000020000000200000
*0020000000630000006f0000006d00000062000000690000006e00000061000000740000006f00
*0000720000002e0000002000000054000000680000006500000020000000610000007200000067
*000000750000006d000000650000006e0000007400000020000000690000007300000020000000
*730000006f0000006d000000650000002000000067000000650000006e00000065000000720000
*00610000006c000000200000007000000061000000720000007300000065000000720000002000
*00006d0000006500000073000000730000006100000067000000650000002e000000200000000a
*000000000000002b03023200000045000000780000007400000072000000610000006300000074
*00000020000000740000006800000065000000200000006d000000650000007300000073000000
*61000000670000006500000020000000730000007400000072000000690000006e000000670000
*002000000066000000720000006f0000006d00000020000000610000006e000000200000006500
*000072000000720000006f00000072000000200000006d00000065000000730000007300000061
*0000006700000065000000200000000a000000000000002c030232000000450000007800000074
*000000720000006100000063000000740000007300000020000000740000006800000065000000
*20000000730000006f0000007500000072000000630000006500000020000000700000006f0000
*00730000006900000074000000690000006f0000006e0000002000000066000000720000006f00
*00006d000000200000007400000068000000650000002000000070000000610000007200000073
*00000065000000200000006500000072000000720000006f000000720000000a12000000000000
*002500000000000000260000000000000027000000000000002800000000000000290000000000
*00002a000000000000002b000000000000002c000000000000002d000000000000002e00000000
*0000002f0000000000000030000000000000003100000000000000320000000000000033000000
*000000003400000000000000350000000000000036120000000000000026000000000000002a00
*0000000000002900000000000000280000000000000027000000000000002b0000000000000025
*000000000000002c000000000000002d000000000000002e000000000000003600000000000000
*30000000000000002f000000000000003100000000000000320000000000000034000000000000
*003300000000000000350000000000000000000000000000000500000000000600000000000000
*3700000000000000380000000000000039000000000000003a000000000000003b000000000000
*003c06000000000000003700000000000000380000000000000039000000000000003a00000000
*0000003b000000000000003c000000000000000000000000000000060000000000040000000000
*00003d000000000000003e000000000000003f000000000000004004000000000000003d000000
*000000003e000000000000003f0000000000000040000000000000000000000000000000070000
*0000000c0000000000000041000000000000004200000000000000430000000000000044000000
*000000004500000000000000460000000000000047000000000000004800000000000000490000
*00000000004a000000000000004b000000000000004c0c00000000000000410000000000000042
*000000000000004300000000000000440000000000000045000000000000004600000000000000
*4700000000000000480000000000000049000000000000004a000000000000004b000000000000
*004c0000000000000000000000000000000c0001230000006e0000006f0000006e0000002d0000
*00700000006f000000720000007400000061000000620000006c00000065000000200000002800
*0000740000007900000070000000650000002000000066000000610000006d000000690000006c
*0000006900000065000000730000002c0000002000000047000000410000004400000054000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d003f000000000000000a000000000000000b000000000000000c000000000000000d00
*0000000000000e000000000000000f000000000000001000000000000000110000000000000012
*000000000000001300000000000000140000000000000015000000000000001600000000000000
*1700000000000000180000000000000019000000000000001a000000000000001b000000000000
*001c000000000000001d000000000000001e000000000000001f00000000000000200000000000
*000021000000000000002200000000000000230000000000000024000000000000002500000000
*00000026000000000000002700000000000000280000000000000029000000000000002a000000
*000000002b000000000000002c000000000000002d000000000000002e000000000000002f0000
*000000000030000000000000003100000000000000320000000000000033000000000000003400
*000000000000350000000000000036000000000000003700000000000000380000000000000039
*000000000000003a000000000000003b000000000000003c000000000000004100000000000000
*420000000000000043000000000000004400000000000000450000000000000046000000000000
*004700000000000000480000000000000049000000000000004a000000000000004b0000000000
*00004c000000000000000000000000000000000800011c0000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*28000000740000007900000070000000650000002000000066000000610000006d000000690000
*006c00000069000000650000007300000029010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c0110000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d0002000000000000004d000000000000004e02000000
*000000004d000000000000004e0000000000000052000000000000000000000000000000010300
*0000000000000d0000000000000000000000000000000103000000000000000e00000000000000
*00000000000000000101000000000000000e000000000000000000000000000000010000000000
*0000000f0000000000000000000000000000000103000000000000001000000000000000000000
*000000000001030000000000000011000000000000000000000000000000020300000000000000
*120000000000000000000000000000000200000000000000001300000000000000000000000000
*000002000000000000000014000000000000000000000000000000020000000000000000150000
*000000000000000000000000000303000000000000001600000000000000000000000000000003
*030000000000000017000000000000000000000000000000030300000000000000180000000000
*000000000000000000000300000000000000001900000000000000000000000000000003030000
*00000000001a0000000000000000000000000000000301000000000000001b0000000000000000
*000000000000000301000000000000001c00000000000000000000000000000003010000000000
*00001d0000000000000000000000000000000301000000000000001e0000000000000000000000
*000000000301000000000000001f00000000000000000000000000000003010000000000000020
*000000000000000000000000000000030100000000000000170000000000000000000000000000
*000301000000000000002100000000000000000000000000000003030000000000000022000000
*000000000000000000000000030300000000000000230000000000000000000000000000000300
*000000000000002400000000000000000000000000000003000000000000000025000000000000
*000000000000000000030000000000000000260000000000000000000000000000000300000000
*000000002700000000000000000000000000000003000000000000000028000000000000000000
*000000000000030000000000000000290000000000000000000000000000000300000000000000
*002a0000000000000000000000000000000300000000000000002b000000000000000000000000
*0000000300000000000000002c0000000000000000000000000000000300000000000000002d00
*00000000000000000000000000000300000000000000002e000000000000000000000000000000
*0300000000000000002f0000000000000000000000000000000403000000000000003000000000
*000000000000000000000004030000000000000031000000000000000000000000000000040100
*000000000000310000000000000000000000000000000401000000000000003200000000000000
*000000000000000004010000000000000033000000000000000000000000000000040100000000
*000000340000000000000000000000000000000400000000000000003500000000000000000000
*000000000004000000000000000036000000000000000000000000000000040000000000000000
*370000000000000000000000000000000400000000000000003800000000000000000000000000
*0000040000000000000000390000000000000000000000000000000400000000000000003a0000
*000000000000000000000000000400000000000000003b00000000000000000000000000000004
*00000000000000003c0000000000000000000000000000000400000000000000003d0000000000
*000000000000000000000400000000000000003e00000000000000000000000000000004000000
*00000000003f000000000000000000000000000000040000000000000000400000000000000000
*000000000000000503000000000000004100000000000000000000000000000005000000000000
*000042000000000000000000000000000000050000000000000000430000000000000000000000
*000000000503000000000000004400000000000000000000000000000005000000000000000045
*000000000000000000000000000000050000000000000000460000000000000000000000000000
*000600000000000000004700000000000000000000000000000006000000000000000048000000
*000000000000000000000000060000000000000000490000000000000000000000000000000600
*000000000000004a0000000000000000000000000000000700000000000000004b000000000000
*0000000000000000000700000000000000004c0000000000000000000000000000000700000000
*000000004d0000000000000000000000000000000700000000000000004e000000000000000000
*0000000000000700000000000000004f0000000000000000000000000000000700000000000000
*005000000000000000000000000000000007000000000000000051000000000000000000000000
*000000070000000000000000520000000000000000000000000000000700000000000000005300
*000000000000000000000000000007000000000000000054000000000000000000000000000000
*070000000000000000550000000000000000000000000000000700000000000000005600000000
*000000000000000000000008000000000000000057000000000000000000000000000000080000
*000000000000580000000000000059000000000000005a03000000000000005b00000000000000
*09000000000000005c03000000000000005d0000000000000009000000000000005e0000000000
*0000005f0000000000000060000000000000000f70617273696d6f6e792d302e302e3100000000
*00000013546578742e50617273696d6f6e792e5574696c0000000000000018546578742e506172
*73696d6f6e792e537461626c654d61700000000000000013546578742e50617273696d6f6e792e
*5072696d0000000000000014546578742e50617273696d6f6e792e4572726f7200000000000000
*13546578742e50617273696d6f6e792e4d6f6465000000000000001a546578742e50617273696d
*6f6e792e436f6d62696e61746f72730000000000000013546578742e50617273696d6f6e792e43
*6861720000000000000015546578742e50617273696d6f6e792e50617273656300000000000000
*04626173650000000000000009546578742e53686f77000000000000000d436f6e74726f6c2e4d
*6f6e6164000000000000000e546578742e50617273696d6f6e7900000000000000054d61676963
*00000000000000024964000000000000000572756e4964000000000000000c5472697669616c41
*72726f7700000000000000125472697669616c4170706c69636174697665000000000000000953
*7461626c654d61700000000000000005656d7074790000000000000006696e7365727400000000
*000000066c6f6f6b757000000000000000044d6f64650000000000000004507572650000000000
*00000346756e0000000000000004736b6970000000000000000650617273657200000000000000
*064c6162656c7300000000000000044e616d650000000000000004536b69700000000000000007
*5361746973667900000000000000064772656564790000000000000003416c7400000000000000
*03417070000000000000000b5265636f676e697a696e67000000000000000750617273696e6700
*0000000000000773617469736679000000000000000b7265636f676e697a696e67000000000000
*0007657073696c6f6e00000000000000033c3c2400000000000000032a3e3e0000000000000003
*3c3c2a00000000000000056e616d656400000000000000066c6162656c7300000000000000033c
*3f3e000000000000000663686f69636500000000000000043c3c7c3e000000000000000c677265
*65647943686f696365000000000000000a50617273654572726f7200000000000000074d657373
*61676500000000000000064578706563740000000000000008556e457870656374000000000000
*000b537973556e457870656374000000000000000d6d657373616765537472696e670000000000
*00000d6572726f72506f736974696f6e000000000000000d6572726f724d657373616765730000
*00000000000e6572726f724973556e6b6e6f776e000000000000000f6e65774572726f72556e6b
*6e6f776e000000000000000f6e65774572726f724d657373616765000000000000000f61646445
*72726f724d65737361676500000000000000107365744572726f72506f736974696f6e00000000
*0000001470726570656e644572726f72506f736974696f6e000000000000000f7365744572726f
*724d657373616765000000000000000a6d657267654572726f72000000000000001173686f7745
*72726f724d65737361676573000000000000000d5265636f676e697a654d6f6465000000000000
*000c7265636f676e697a654d617000000000000000097265636f676e697a650000000000000009
*50617273654d6f6465000000000000000870617273654d61700000000000000005706172736500
*000000000000056f6e654f6600000000000000066e6f6e654f660000000000000008616e79546f
*6b656e00000000000000066f7074696f6e00000000000000046368617200000000000000037461
*6200000000000000057370616365000000000000000673706163657300000000000000056c6f77
*6572000000000000000575707065720000000000000008616c7068614e756d0000000000000006
*6c65747465720000000000000008686578446967697400000000000000086f6374446967697400
*00000000000007616e79436861720000000000000006737472696e670000000000000004657661
*6c00000000000000056576616c5f000000000000000e6d6f6e6f6964732d302e312e3336000000
*0000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e
*000000000000000e536f75726365506f736974696f6e00000000000000084748432e53686f7700
*0000000000000453686f7700000000000000084748432e4261736500000000000000046661696c
*
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 37
-<a name="line-29"></a>    <span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>n</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval</span> <span class='hs-varid'>n</span>
-<a name="line-30"></a>    <span class='hs-conid'>Labels</span> <span class='hs-varid'>ls</span> <span class='hs-varid'>l</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>ls</span>
+<a name="line-29"></a>    <span class='hs-conid'>Name</span> <span class='hs-varid'>n</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval</span> <span class='hs-varid'>n</span>
+<a name="line-30"></a>    <span class='hs-conid'>Labels</span> <span class='hs-varid'>l</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>ls</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 41
-<a name="line-33"></a><a name="eval_"></a><span class='hs-definition'>eval_</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-33"></a><a name="eval_"></a><span class='hs-definition'>eval_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>mode</span><span class='hs-layout'>,</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>mode</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 43
-<a name="line-35"></a>    <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>f</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>x</span>
+<a name="line-35"></a>    <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>x</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 48
-<a name="line-40"></a>    <span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>n</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>n</span>
-<a name="line-41"></a>    <span class='hs-conid'>Labels</span> <span class='hs-varid'>ls</span> <span class='hs-varid'>l</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval_</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>ls</span>
-<a name="line-42"></a>    <span class='hs-conid'>Skip</span> <span class='hs-varid'>s</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>s</span> <span class='hs-comment'>-- unexpected Skip in Skip</span>
+<a name="line-40"></a>    <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>p</span>
+<a name="line-41"></a>    <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>ls</span>
+<a name="line-42"></a>    <span class='hs-conid'>Skip</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>p</span> <span class='hs-comment'>-- unexpected Skip in Skip</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 29
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fmapParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>pureParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>appParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>satisfy</span><span class='hs-layout'>,</span> <span class='hs-varid'>skip</span> 
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>name</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>labels</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>choice</span> 
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>greedyChoice</span>
-<a name="line-29"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span><span class='hs-layout'>,</span> <span class='hs-varid'>arr</span><span class='hs-layout'>)</span>
-<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
-<a name="line-38"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
-<a name="line-40"></a><span class='hs-cpp'>#endif</span>
-<a name="line-41"></a>
-<a name="line-42"></a><a name="Mode"></a><span class='hs-comment'>-- parsing modes</span>
-<a name="line-43"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span>
-<a name="line-44"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-comment'>-- Parser t a requires Mode t</span>
+<a name="line-21"></a>    <span class='hs-comment'>-- , fmapParser, pureParser, appParser</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>satisfy</span><span class='hs-layout'>,</span> <span class='hs-varid'>skip</span> 
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>named</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>recognizing</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>labels</span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span>
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>choice</span> 
+<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span>
+<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>greedyChoice</span>
+<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>epsilon</span>
+<a name="line-32"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-33"></a>
+<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span><span class='hs-layout'>,</span> <span class='hs-varid'>arr</span><span class='hs-layout'>)</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
+<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
+<a name="line-41"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
+<a name="line-43"></a><span class='hs-cpp'>#endif</span>
+<a name="line-44"></a>
+<a name="line-45"></a><a name="Mode"></a><span class='hs-comment'>-- | This parser is capable of parsing a token stream and obtaining an answer</span>
+<a name="line-46"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 56
-<a name="line-48"></a><span class='hs-comment'>-- invariants enforced by smart constructors:</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-comment'>-- a Name never contains a Name directly</span>
-<a name="line-51"></a><span class='hs-comment'>-- a Labels never contain Labels directly</span>
-<a name="line-52"></a><span class='hs-comment'>-- an Alt never contains an Alt directly</span>
-<a name="line-53"></a><span class='hs-comment'>-- a Greedy never contains a Greedy directly</span>
-<a name="line-54"></a><span class='hs-comment'>-- a Skip never contains a Skip transitively</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-comment'>-- unenforceable invariants required for the parallel parser</span>
-<a name="line-57"></a><span class='hs-comment'>-- The parse tree is finite</span>
-<a name="line-58"></a>
-<a name="line-59"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-61"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-62"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-63"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-64"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-65"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
-<a name="line-66"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-67"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-68"></a>
-<a name="line-69"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-71"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-48"></a><a name="Mode"></a><span class='hs-comment'>-- | This parser may only be used to recognize a token stream as belonging to a context-free language</span>
+<a name="line-49"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span>
+<a name="line-50"></a>
+<a name="line-51"></a><span class='hs-comment'>-- | 'Parser' invariants provided by smart constructors:</span>
+<a name="line-52"></a><span class='hs-comment'>--</span>
+<a name="line-53"></a><span class='hs-comment'>-- (1) a Name never contains a Name directly</span>
+<a name="line-54"></a><span class='hs-comment'>--  2  Labels never contain Labels directly</span>
+<a name="line-55"></a><span class='hs-comment'>--  3  an Alt never contains an Alt directly</span>
+<a name="line-56"></a><span class='hs-comment'>--  4  a Greedy never contains a Greedy directly</span>
+<a name="line-57"></a><span class='hs-comment'>--  5  a Skip never contains a Skip transitively</span>
+<a name="line-58"></a><span class='hs-comment'>--</span>
+<a name="line-59"></a><span class='hs-comment'>-- Unenforceable invariants required for the parallel parser: </span>
+<a name="line-60"></a><span class='hs-comment'>--</span>
+<a name="line-61"></a><span class='hs-comment'>-- (1) The parse tree is finite</span>
+<a name="line-62"></a>
+<a name="line-63"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
+<a name="line-64"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-65"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-66"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-67"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-68"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-69"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-70"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-71"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 81
-<a name="line-73"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-74"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-75"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-76"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-73"></a><a name="Mode"></a><span class='hs-comment'>-- | A parser mode defines what optimizations are possible, and how much information must be retained</span>
+<a name="line-74"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-75"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-76"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 86
-<a name="line-78"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-79"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-81"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>arr</span> <span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
-<a name="line-83"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
-<a name="line-84"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-85"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-86"></a>
-<a name="line-87"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
-<a name="line-88"></a>
-<a name="line-89"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
-<a name="line-90"></a>
-<a name="line-91"></a><a name="satisfy"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
-<a name="line-92"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
+<a name="line-78"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-79"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-80"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-81"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-82"></a>
+<a name="line-83"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-84"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-85"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-86"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-87"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>arr</span> <span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-88"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
+<a name="line-89"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>s</span>
+<a name="line-90"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-varid'>ss</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>ss</span>
+<a name="line-91"></a>
+<a name="line-92"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 102
-<a name="line-94"></a><span class='hs-comment'>-- a parser mode that actually parses and retains intermediate results</span>
-<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyword'>where</span>
-<a name="line-96"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
-<a name="line-97"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span>
-<a name="line-98"></a>
-<a name="line-99"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-100"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
-<a name="line-101"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
-<a name="line-102"></a>
-<a name="line-103"></a><span class='hs-comment'>-- the unsafeCoerces below let us retain sharing in a recognizer that we cannot retain in a general parser!</span>
-<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyword'>where</span>
-<a name="line-105"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialApplicative</span>
-<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialArrow</span>
-<a name="line-107"></a>
-<a name="line-108"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-109"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-110"></a>
-<a name="line-111"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
-<a name="line-112"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
-<a name="line-113"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
-<a name="line-114"></a>
-<a name="line-115"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span> <span class='hs-keyword'>where</span>
-<a name="line-116"></a>        <span class='hs-comment'>-- force sharing of all epsilon </span>
-<a name="line-117"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Magic</span> <span class='hs-conid'>()</span>
-<a name="line-118"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span>
-<a name="line-119"></a>
-<a name="line-120"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-121"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
-<a name="line-122"></a>
-<a name="line-123"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-124"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
-<a name="line-125"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
+<a name="line-94"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
+<a name="line-95"></a>
+<a name="line-96"></a><a name="satisfy"></a><span class='hs-comment'>-- | Generate a parser that recognizes a single token using a predicate</span>
+<a name="line-97"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
+<a name="line-98"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
+<a name="line-99"></a>
+<a name="line-100"></a><a name="recognizing"></a><span class='hs-comment'>-- | treat a non-recognizing parser as a recognizing one to reduce redundant rules</span>
+<a name="line-101"></a><span class='hs-definition'>recognizing</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-102"></a><span class='hs-definition'>recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-103"></a>
+<a name="line-104"></a><span class='hs-comment'>-- | a parser mode that actually parses and retains intermediate results</span>
+<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyword'>where</span>
+<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-107"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span>
+<a name="line-108"></a>
+<a name="line-109"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-110"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-111"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
+<a name="line-112"></a>
+<a name="line-113"></a><span class='hs-comment'>-- | unsafeCoerces parsers to gain additional sharing that cannot be obtained in a general parser</span>
+<a name="line-114"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyword'>where</span>
+<a name="line-115"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialApplicative</span>
+<a name="line-116"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialArrow</span>
+<a name="line-117"></a>
+<a name="line-118"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-119"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-120"></a>
+<a name="line-121"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
+<a name="line-122"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
+<a name="line-123"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
+<a name="line-124"></a>
+<a name="line-125"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 135
-<a name="line-127"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-128"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
-<a name="line-129"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-130"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-131"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-132"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-127"></a><a name="epsilon"></a><span class='hs-comment'>-- | parser that accepts the empty string used by Recognizing parsers where necessary</span>
+<a name="line-128"></a><span class='hs-definition'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Magic</span> <span class='hs-conid'>()</span>
+<a name="line-129"></a><span class='hs-definition'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span> <span class='hs-varop'>`named`</span> <span class='hs-str'>"epsilon"</span>
+<a name="line-130"></a>
+<a name="line-131"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-132"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 142
-<a name="line-134"></a><span class='hs-comment'>-- | optimized version of '(&lt;$)'</span>
-<a name="line-135"></a>
-<a name="line-136"></a><a name="<<$"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-137"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
-<a name="line-138"></a>
-<a name="line-139"></a><a name="*>>"></a><span class='hs-comment'>-- | optimized version of '(*&gt;)'</span>
-<a name="line-140"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-141"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-142"></a>
-<a name="line-143"></a><a name="<<*"></a><span class='hs-comment'>-- | optimized version of '(&lt;&lt;*)'</span>
-<a name="line-144"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-145"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
-<a name="line-146"></a>
-<a name="line-147"></a><a name="name"></a><span class='hs-comment'>-- smart constructors fuse away trivial local optimizations</span>
-<a name="line-148"></a><span class='hs-definition'>name</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-149"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
-<a name="line-150"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
-<a name="line-151"></a>
-<a name="line-152"></a><a name="labels"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-153"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
-<a name="line-154"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> 
-<a name="line-155"></a>
-<a name="line-156"></a><a name="<?>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-157"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span> <span class='hs-varid'>p</span>
-<a name="line-158"></a>
-<a name="line-159"></a><a name="choice"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-160"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
-<a name="line-161"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
-<a name="line-162"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
-<a name="line-163"></a>
-<a name="line-164"></a><a name="<<|>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-165"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-166"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-167"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-168"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-169"></a>
-<a name="line-170"></a><a name="greedyChoice"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-171"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
-<a name="line-172"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
-<a name="line-173"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
-<a name="line-174"></a>
-<a name="line-175"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
-<a name="line-176"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>String</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-177"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-178"></a><span class='hs-cpp'>#endif</span>
-<a name="line-179"></a>
+<a name="line-134"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-135"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
+<a name="line-136"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
+<a name="line-137"></a>
+<a name="line-138"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-139"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
+<a name="line-140"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-141"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-142"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-conop'>:</span><span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-143"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-144"></a>
+<a name="line-145"></a><a name="<<$"></a><span class='hs-comment'>-- | optimized version of '(&lt;$)'</span>
+<a name="line-146"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-147"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
+<a name="line-148"></a>
+<a name="line-149"></a><a name="*>>"></a><span class='hs-comment'>-- | optimized version of '(*&gt;)'</span>
+<a name="line-150"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-151"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-152"></a>
+<a name="line-153"></a><a name="<<*"></a><span class='hs-comment'>-- | optimized version of '(&lt;*)'</span>
+<a name="line-154"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-155"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
+<a name="line-156"></a>
+<a name="line-157"></a><a name="named"></a><span class='hs-comment'>-- | smart constructor for naming parsers for purposes of displaying the grammar</span>
+<a name="line-158"></a><span class='hs-definition'>named</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-159"></a><span class='hs-definition'>named</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span>
+<a name="line-160"></a><span class='hs-definition'>named</span> <span class='hs-varid'>p</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>p</span>
+<a name="line-161"></a>
+<a name="line-162"></a><a name="labels"></a><span class='hs-comment'>-- | smart constructor for labeling the grammar ala Parsec</span>
+<a name="line-163"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-164"></a><span class='hs-definition'>labels</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span>
+<a name="line-165"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>p</span>            <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>p</span> 
+<a name="line-166"></a>
+<a name="line-167"></a><a name="<?>"></a><span class='hs-comment'>-- | Annotate a parser with what it should say was expected if the first character in it is unconsumed</span>
+<a name="line-168"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-169"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span>
+<a name="line-170"></a>
+<a name="line-171"></a><a name="choice"></a><span class='hs-comment'>-- | Multiple parsers returning multiple answers</span>
+<a name="line-172"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-173"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-174"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-175"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-176"></a>
+<a name="line-177"></a><a name="<<|>"></a><span class='hs-comment'>-- | Prefers the result from the left when present. Only accepts parses from the right hand parser</span>
+<a name="line-178"></a><span class='hs-comment'>--   when the left hand parser fails.</span>
+<a name="line-179"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-180"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-181"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-182"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-183"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-184"></a>
+<a name="line-185"></a><a name="greedyChoice"></a><span class='hs-comment'>-- | Multiple parsers returning the results from the left-most parser that matches anything</span>
+<a name="line-186"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-187"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-188"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-189"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-190"></a>
+<a name="line-191"></a><span class='hs-comment'>-- | Here rather than in Text.Parsimony.Char to avoid an orphan instance</span>
+<a name="line-192"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
+<a name="line-193"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>String</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-194"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-195"></a><span class='hs-cpp'>#endif</span>
}
