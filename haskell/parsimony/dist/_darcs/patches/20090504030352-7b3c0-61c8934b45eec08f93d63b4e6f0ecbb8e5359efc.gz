[simplified modes
ekmett@gmail.com**20090504030352
 Ignore-this: c16a14901c593dde724d30f1a043a358
] {
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 80
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 82
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 86
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 112
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 114
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 116
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 142
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 144
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 146
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 172
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 174
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 176
-> t ()</TD
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> ()</TD
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 200
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 202
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 204
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 230
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 232
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 234
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 260
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 262
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 264
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 290
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 292
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 294
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 320
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 322
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 324
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 350
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 352
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 354
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 380
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 382
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 384
-> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 410
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 412
-> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 416
-> t <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 80
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t), <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 82
-> t) =&gt; [<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> t) =&gt; [t] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 86
-> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t)</TD
+> m t t</TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 108
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t), <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 110
-> t) =&gt; [<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> t) =&gt; [t] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 114
-> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t)</TD
+> m t t</TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 138
-> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 140
-> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t)</TD
+> m t t</TD
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 164
-> t =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 166
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 168
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 118
-> f) =&gt; (Elem c -&gt; e) -&gt; (m e `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> f) =&gt; (Elem c -&gt; e) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 120
->` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+> m e a -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 148
-> f) =&gt; (m (Elem c) `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> f) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 150
->` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+> m (Elem c) a -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 218
-> :: Generator c =&gt; (Elem c -&gt; e) -&gt; (m e `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> :: Generator c =&gt; (Elem c -&gt; e) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 220
->` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+> m e a -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 244
-> :: Generator c =&gt; (m (Elem c) `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> :: Generator c =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 246
->` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+> m (Elem c) a -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 115
-> (<A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+> <A HREF="Text-Parsimony-Prim.html#t%3AParsing"
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 119
->) e -&gt; ParsecT s u m e</TD
+> e -&gt; ParsecT s u m e</TD
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 145
-> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 149
->) e -&gt; ParsecT s u m ()</TD
+> e -&gt; ParsecT s u m ()</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 91
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3AParsing"
+>Parsing</A
+> </TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3ARecognizing"
+>Recognizing</A
+> </TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3AParser"
+>Parser</A
+> m t a <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AApp"
+>App</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3APure"
+>Pure</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3APure"
+>Pure</A
+> m a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AAlt"
+>Alt</A
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AGreedy"
+>Greedy</A
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3ASatisfy"
+>Satisfy</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AFun"
+>Fun</A
+> m t a -&gt; (t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3ASkip"
+>Skip</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t ()</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AName"
+>Name</A
+> ::  <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3ALabels"
+>Labels</A
+> ::  [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+>] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>class</SPAN
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Arrow.html#t%3AArrow"
+>Arrow</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AFun"
+>Fun</A
+> m), <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3APure"
+>Pure</A
+> m)) =&gt; <A HREF="#t%3AMode"
+>Mode</A
+> m  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A HREF="#t%3APure"
+>Pure</A
+> m :: * -&gt; *</TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A HREF="#t%3AFun"
+>Fun</A
+> m :: * -&gt; * -&gt; *</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AfmapParser"
+>fmapParser</A
+> ::  (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3ApureParser"
+>pureParser</A
+> ::  a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AappParser"
+>appParser</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Askip"
+>skip</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t ()</TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AfmapParser"
+>fmapParser</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3ApureParser"
+>pureParser</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AappParser"
+>appParser</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Asatisfy"
+>satisfy</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; (t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t t</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Askip"
+>skip</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t ()</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3A%3C%3C%24"
+>(&lt;&lt;$)</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3A%2A%3E%3E"
+>(*&gt;&gt;)</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t b</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3A%3C%3C%2A"
+>(&lt;&lt;*)</A
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aname"
+>name</A
+> ::  <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Alabels"
+>labels</A
+> ::  [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+>] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3A%3C%3F%3E"
+>(&lt;?&gt;)</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Achoice"
+>choice</A
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3A%3C%3C%7C%3E"
+>(&lt;&lt;|&gt;)</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AgreedyChoice"
+>greedyChoice</A
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 581
-> t </TD
+>  </TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 606
-> (<A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+> <A HREF="Text-Parsimony-Prim.html#t%3AParsing"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 608
-> t)</TD
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 632
-> t </TD
+>  </TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 657
-> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 659
-> t)</TD
-></TR
-></TABLE
-></DIV
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 662
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ARecognizer"
-></A
-><B
->Recognizer</B
-> t a = <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
->Recognizing</A
-> (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t)) a</TD
-><TD CLASS="declbut"
-><A HREF="src/Text-Parsimony-Prim.html#Recognizer"
->Source</A
+></DIV
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 683
-> t a <SPAN CLASS="keyword"
+> m t a <SPAN CLASS="keyword"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 712
-> t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 714
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 716
-> t b</TD
+> m t b</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 728
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 730
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 742
-> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 744
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 756
-> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 758
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 768
-> ::  <A HREF="Text-Parsimony-Prim.html#t%3ASatisfy"
->Satisfy</A
-> t a -&gt; (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AFun"
+>Fun</A
+> m t a -&gt; (t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 774
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 784
-> ::  <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Recognizer</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 790
-> t ()</TD
+> m t ()</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 804
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 806
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 820
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 822
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 842
-> t =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 846
-> t)</TD
+> m t)</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 852
-> t =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 856
-> t)</TD
+> m t)</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 862
-> t =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 866
-> t)</TD
+> m t)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
+>IsString</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+>)</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 900
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Text-Parsimony-Prim.html#t%3ASatisfy"
->Satisfy</A
-> t), <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Arrow.html#t%3AArrow"
+>Arrow</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AFun"
+>Fun</A
+> m), <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 908
-> t)) =&gt; <A NAME="t%3AMode"
+> m)) =&gt; <A NAME="t%3AMode"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 912
-> t  <SPAN CLASS="keyword"
+> m  <SPAN CLASS="keyword"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 944
-> <A NAME="t%3AToken"
-></A
-><B
->Token</B
-> t :: *</TD
-><TD CLASS="declbut"
-><A HREF="src/Text-Parsimony-Prim.html#Token"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 948
-> t :: * -&gt; *</TD
+> m :: * -&gt; *</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 968
-> <A NAME="t%3ASatisfy"
+> <A NAME="t%3AFun"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 971
->Satisfy</B
-> t :: * -&gt; *</TD
+>Fun</B
+> m :: * -&gt; * -&gt; *</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 974
-><A HREF="src/Text-Parsimony-Prim.html#Satisfy"
+><A HREF="src/Text-Parsimony-Prim.html#Fun"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1006
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1008
-> t b</TD
+> m t b</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1026
-><A NAME="v%3AappParser"
+><A NAME="v%3ApureParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1029
->appParser</B
-> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>pureParser</B
+> ::  a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1032
-> t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
->Parser</A
-> t b</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1034
-><A HREF="src/Text-Parsimony-Prim.html#appParser"
+><A HREF="src/Text-Parsimony-Prim.html#pureParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1050
-><A NAME="v%3Asatisfy"
+><A NAME="v%3AappParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1053
->satisfy</B
-> :: (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>appParser</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1060
-> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t)</TD
+> m t b</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1062
-><A HREF="src/Text-Parsimony-Prim.html#satisfy"
+><A HREF="src/Text-Parsimony-Prim.html#appParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1082
-> ::  <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Recognizer</A
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1088
-> t ()</TD
+> m t ()</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1117
-> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1119
-> t)</TD
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1125
-> (<A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+> <A HREF="Text-Parsimony-Prim.html#t%3AParsing"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1127
-> t)</TD
+></TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1151
-> t =&gt; (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1153
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1155
-> t b</TD
+> m t b</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1173
+><A NAME="v%3ApureParser"
+></A
+><B
+>pureParser</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#pureParser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1205
-> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1207
-> t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1209
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1211
-> t b</TD
+> m t b</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1235
-> t =&gt; (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+> m =&gt; (t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1239
-> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Token</A
-> t)</TD
+> m t t</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1263
-> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Recognizer</A
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1269
-> t ()</TD
+> m t ()</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1293
-> t =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Recognizer</A
+> m =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1299
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1309
+><TD CLASS="doc"
+>optimized version of '(&lt;$)'
+</TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1328
-> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Recognizer</A
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1334
-> t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1336
-> t b</TD
+> m t b</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1346
+><TD CLASS="doc"
+>optimized version of '(*&gt;)'
+</TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1365
-> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1369
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Recognizer</A
+> <A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1373
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1383
+><TD CLASS="doc"
+>optimized version of '(&lt;&lt;*)'
+</TD
+></TR
+><TR
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1404
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1406
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1432
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1434
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1458
-> t a -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+> m t a -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1462
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1486
-> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1488
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1512
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1514
-> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1516
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1540
-> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+> m t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1542
-> t a</TD
+> m t a</TD
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 109
->  <A NAME="t%3AIgnore"
+>  <A NAME="t%3ATrivialApplicative"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 112
->Ignore</B
+>TrivialApplicative</B
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 115
-><A HREF="src/Text-Parsimony-Util.html#Ignore"
+><A HREF="src/Text-Parsimony-Util.html#TrivialApplicative"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 127
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Ignore')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:TrivialApplicative')" ALT="show/hide"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 132
-><DIV ID="i:Ignore" STYLE="display:block;"
+><DIV ID="i:TrivialApplicative" STYLE="display:block;"
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 138
-> <A HREF="Text-Parsimony-Util.html#t%3AIgnore"
->Ignore</A
+> <A HREF="Text-Parsimony-Util.html#t%3ATrivialApplicative"
+>TrivialApplicative</A
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 146
-> <A HREF="Text-Parsimony-Util.html#t%3AIgnore"
->Ignore</A
+> <A HREF="Text-Parsimony-Util.html#t%3ATrivialApplicative"
+>TrivialApplicative</A
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 167
+>data</SPAN
+>  <A NAME="t%3ATrivialArrow"
+></A
+><B
+>TrivialArrow</B
+> a b </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#TrivialArrow"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:TrivialArrow')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:TrivialArrow" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Arrow.html#t%3AArrow"
+>Arrow</A
+> <A HREF="Text-Parsimony-Util.html#t%3ATrivialArrow"
+>TrivialArrow</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
+>Category</A
+> <A HREF="Text-Parsimony-Util.html#t%3ATrivialArrow"
+>TrivialArrow</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Text-Parsimony-Util.html#t%3ATrivialArrow"
+>TrivialArrow</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
hunk ./doc/html/parsimony/Text-Parsimony.html 134
->module <A HREF="Text-Parsimony-Parsec.html"
->Text.Parsimony.Parsec</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/parsimony/doc-index.html 198
->, Text.Parsimony</TD
+></TD
hunk ./doc/html/parsimony/doc-index.html 206
->, Text.Parsimony</TD
+></TD
hunk ./doc/html/parsimony/doc-index.html 226
+>Fun</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3AFun"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 278
->Ignore</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Util.html#t%3AIgnore"
->Text.Parsimony.Util</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 518
+>pureParser</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3ApureParser"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 550
->Recognizer</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
->Text.Parsimony.Prim</A
->, Text.Parsimony</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 565
-><TD CLASS="indexentry" COLSPAN="2"
+><TD CLASS="indexentry"
hunk ./doc/html/parsimony/doc-index.html 567
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Text-Parsimony-Prim.html#t%3ASatisfy"
->Text.Parsimony.Prim</A
->, Text.Parsimony</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
hunk ./doc/html/parsimony/doc-index.html 670
->Token</TD
+>TrivialApplicative</TD
hunk ./doc/html/parsimony/doc-index.html 672
-><A HREF="Text-Parsimony-Prim.html#t%3AToken"
->Text.Parsimony.Prim</A
->, Text.Parsimony</TD
+><A HREF="Text-Parsimony-Util.html#t%3ATrivialApplicative"
+>Text.Parsimony.Util</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>TrivialArrow</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Util.html#t%3ATrivialArrow"
+>Text.Parsimony.Util</A
+></TD
binary ./doc/html/parsimony/parsimony.haddock
oldhex
*0d0cface0004000000000000344d0000000000002c2a5000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000300000000
*000000140000000000000000000000000000000300000000000000150000000000000000000000
*000000000300000000000000160000000000000000000000000000000300000000000000170000
*000000000000000000000000000300000000000000180000000000000000000000000000000300
*0000000000001900000000000000000000000000000003000000000000001a0000000000000000
*0000000000000003000000000000001b0000000000000000000000000000000300000000000000
*1c00000000000000000000000000000003000000000000001d0000000000000000000000000000
*0003000000000000001e00000000000000000000000000000003000000000000001f0000000000
*000000000000000000000300000000000000200000000000000000000000000000000300000000
*000000210000000000000000000000000000000300000000000000220000000000000000000000
*000000000300000000000000230000000000000000000000000000000300000000000000240000
*000000000000000000000000000300000000000000250000000000000000000000000000000300
*000000000000260000000000000000000000000000000400000000000000270000000000000000
*000000000000000400000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0004000000000000002b00000000000000000000000000000004000000000000002c0000000000
*0000000000000000000004000000000000002d0000000000000000000000000000000400000000
*0000002e00000000000000000000000000000004000000000000002f0000000000000000000000
*000000000400000000000000300000000000000000000000000000000400000000000000310000
*000000000000000000000000000400000000000000320000000000000000000000000000000400
*000000000000330000000000000000000000000000000400000000000000340000000000000000
*000000000000000400000000000000350000000000000000000000000000000400000000000000
*360000000000000000000000000000000400000000000000370000000000000000000000000000
*000400000000000000380000000000000000000000000000000500000000000000390000000000
*0000000000000000000005000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000005000000000000003d00000000000000000000000000000005000000000000003e0000
*0000000000000000000000000006000000000000003f0000000000000000000000000000000600
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000600000000000000420000000000000000000000000000000700000000000000
*430000000000000000000000000000000700000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000007000000000000004e0000000000000000
*0000000000000008000000000000004f0000000000000000000000000000000809000000000000
*000000000000000000010001230000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c000000650000002000000028000000740000007900
*000070000000650000002000000066000000610000006d000000690000006c0000006900000065
*000000730000002c00000020000000470000004100000044000000540000007300000029010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c0110000000650000006b0000006d0000006500000074000000740000004000
*0000670000006d00000061000000690000006c0000002e000000630000006f0000006d00050000
*000000000000000000000000000100000000000000020000000000000003000000000000000405
*000000000000000300000000000000000000000000000001000000000000000200000000000000
*040000000000000000000000000000000200000000000400000000000000050000000000000006
*000000000000000700000000000000080400000000000000050000000000000006000000000000
*00070000000000000008000000000000000000000000000000030001230000006e0000006f0000
*006e0000002d000000700000006f000000720000007400000061000000620000006c0000006500
*00002000000028000000740000007900000070000000650000002000000066000000610000006d
*000000690000006c0000006900000065000000730000002c000000200000004700000041000000
*44000000540000007300000029010c000000650000007800000070000000650000007200000069
*0000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d00
*000065000000740000007400000040000000670000006d00000061000000690000006c0000002e
*000000630000006f0000006d001d0000000000000009000000000000000a000000000000000b00
*0000000000000c000000000000000d000000000000000e000000000000000f0000000000000010
*000000000000001100000000000000120000000000000013000000000000001400000000000000
*150000000000000016000000000000001700000000000000180000000000000019000000000000
*001a000000000000001b000000000000001c000000000000001d000000000000001e0000000000
*00001f000000000000002000000000000000210000000000000022000000000000002300000000
*0000002400000000000000251d000000000000001c000000000000001b000000000000001a0000
*000000000011000000000000001200000000000000130000000000000014000000000000001500
*000000000000160000000000000017000000000000001800000000000000190000000000000009
*000000000000000a000000000000000b000000000000000c000000000000000d00000000000000
*0e000000000000000f0000000000000010000000000000001d000000000000001e000000000000
*001f00000000000000200000000000000021000000000000002200000000000000230000000000
*000024000000000000002500000000000000000000000000000004000108000000700000006f00
*0000720000007400000061000000620000006c00000065010b00000070000000720000006f0000
*00760000006900000073000000690000006f0000006e000000610000006c011000000065000000
*6b0000006d00000065000000740000007400000040000000670000006d00000061000000690000
*006c0000002e000000630000006f0000006d040000000000000026030102170000005400000068
*000000650000002000000061000000620000007300000074000000720000006100000063000000
*740000002000000064000000610000007400000061000000200000007400000079000000700000
*0065000000200107020a0000005000000061000000720000007300000065000000450000007200
*0000720000006f0000007201021d00000020000000720000006500000070000000720000006500
*000073000000650000006e00000074000000730000002000000070000000610000007200000073
*00000065000000200000006500000072000000720000006f00000072000000730000002e000000
*2000000049000000740000000a01021f0000002000000070000000720000006f00000076000000
*690000006400000065000000730000002000000074000000680000006500000020000000730000
*006f0000007500000072000000630000006500000020000000700000006f000000730000006900
*000074000000690000006f0000006e000000200000002801040101000000000000005001020f00
*000029000000200000006f00000066000000200000007400000068000000650000002000000065
*00000072000000720000006f000000720000000a01021f00000020000000610000006e00000064
*0000002000000061000000200000006c000000690000007300000074000000200000006f000000
*66000000200000006500000072000000720000006f00000072000000200000006d000000650000
*007300000073000000610000006700000065000000730000002000000028010402000000000000
*000028000000000000000000000000000000040000000000000000270000000000000000000000
*0000000004010205000000290000002e0000002000000041000000200107020a00000050000000
*610000007200000073000000650000004500000072000000720000006f00000072010201000000
*0a0102210000002000000063000000610000006e00000020000000620000006500000020000000
*72000000650000007400000075000000720000006e000000650000006400000020000000620000
*0079000000200000007400000068000000650000002000000066000000750000006e0000006300
*000074000000690000006f0000006e000000200102190000005400000065000000780000007400
*00002e00000050000000610000007200000073000000690000006d0000006f0000006e00000079
*0000002e0000004d0000006f00000064000000650000002e000000700000006100000072000000
*73000000650102020000002e000000200107020a00000050000000610000007200000073000000
*650000004500000072000000720000006f00000072010207000000200000006900000073000000
*20000000610000006e0000000a01021100000020000000690000006e0000007300000074000000
*610000006e0000006300000065000000200000006f000000660000002000000074000000680000
*0065000000200104010000000000000000510000000000000009000000000000000a0102380000
*0020000000630000006c0000006100000073000000730000002c00000020000000620000007500
*00007400000020000000640000006f0000006500000073000000200000006e0000006f00000074
*00000020000000630000006f0000006d000000700000006c000000790000002000000077000000
*690000007400000068000000200000007400000068000000650000002000000048000000610000
*00730000006b000000650000006c0000006c00000020000000630000006f0000006e0000007600
*0000650000006e00000074000000690000006f0000006e0000000a023c00000020000000740000
*006800000061000000740000002000000053000000680000006f00000077000000200000007300
*0000680000006f000000750000006c00000064000000200000007900000069000000650000006c
*0000006400000020000000610000002000000076000000610000006c0000006900000064000000
*20000000730000006f0000007500000072000000630000006500000020000000630000006f0000
*006400000065000000200000007200000065000000700000007200000065000000730000006500
*00006e000000740000006100000074000000690000006f0000006e0000002e0000000a00000000
*000000270103010243000000540000006800000069000000730000002000000061000000620000
*007300000074000000720000006100000063000000740000002000000064000000610000007400
*000061000000200000007400000079000000700000006500000020000000720000006500000070
*000000720000006500000073000000650000006e00000074000000730000002000000070000000
*61000000720000007300000065000000200000006500000072000000720000006f000000720000
*00200000006d000000650000007300000073000000610000006700000065000000730000002e00
*000020000000540000006800000065000000720000006500000020000000610000007200000065
*0000000a021900000020000000660000006f0000007500000072000000200000006b0000006900
*00006e0000006400000073000000200000006f00000066000000200000006d0000006500000073
*00000073000000610000006700000065000000730000003a0000000a010b010224000000200000
*002000000064000000610000007400000061000000200000004d00000065000000730000007300
*0000610000006700000065000000200000003d0000002000000053000000790000007300000055
*0000006e0000004500000078000000700000006500000063000000740000002000000053000000
*7400000072000000690000006e000000670000000a010221000000200000002000000020000000
*200000002000000020000000200000002000000020000000200000002000000020000000200000
*0020000000200000007c00000020000000550000006e0000004500000078000000700000006500
*0000630000007400000020000000530000007400000072000000690000006e000000670000000a
*01021f000000200000002000000020000000200000002000000020000000200000002000000020
*0000002000000020000000200000002000000020000000200000007c0000002000000045000000
*780000007000000065000000630000007400000020000000530000007400000072000000690000
*006e000000670000000a0220000000200000002000000020000000200000002000000020000000
*2000000020000000200000002000000020000000200000002000000020000000200000007c0000
*00200000004d000000650000007300000073000000610000006700000065000000200000005300
*00007400000072000000690000006e000000670000000a01030102440000005400000068000000
*650000002000000066000000690000006e00000065000000200000006400000069000000730000
*0074000000690000006e0000006300000074000000690000006f0000006e000000200000006200
*000065000000740000007700000065000000650000006e00000020000000640000006900000066
*000000660000006500000072000000650000006e00000074000000200000006b00000069000000
*6e0000006400000073000000200000006f00000066000000200000007000000061000000720000
*007300000065000000200000006500000072000000720000006f00000072000000730000002000
*0000610000006c0000006c0000006f00000077000000730000000a010243000000200000007400
*000068000000650000002000000073000000790000007300000074000000650000006d00000020
*000000740000006f0000002000000067000000650000006e000000650000007200000061000000
*740000006500000020000000710000007500000069000000740000006500000020000000670000
*006f0000006f00000064000000200000006500000072000000720000006f000000720000002000
*00006d000000650000007300000073000000610000006700000065000000730000002000000066
*0000006f0000007200000020000000740000006800000065000000200000007500000073000000
*65000000720000002e0000002000000049000000740000000a01023c0000002000000061000000
*6c000000730000006f00000020000000610000006c0000006c0000006f00000077000000730000
*00200000006500000072000000720000006f00000072000000200000006d000000650000007300
*000073000000610000006700000065000000730000002000000074000000680000006100000074
*0000002000000061000000720000006500000020000000660000006f000000720000006d000000
*610000007400000074000000650000006400000020000000690000006e00000020000000640000
*006900000066000000660000006500000072000000650000006e000000740000000a0248000000
*200000006c000000610000006e0000006700000075000000610000006700000065000000730000
*002e0000002000000045000000610000006300000068000000200000006b000000690000006e00
*000064000000200000006f00000066000000200000006d00000065000000730000007300000061
*00000067000000650000002000000069000000730000002000000067000000650000006e000000
*650000007200000061000000740000006500000064000000200000006200000079000000200000
*00640000006900000066000000660000006500000072000000650000006e000000740000002000
*0000630000006f0000006d00000062000000690000006e00000061000000740000006f00000072
*000000730000003a0000000a080403010203000000200000004100000020010401000000000000
*00002b0000000000000000000000000000000401022b000000200000006d000000650000007300
*000073000000610000006700000065000000200000006900000073000000200000006100000075
*000000740000006f0000006d00000061000000740000006900000063000000610000006c000000
*6c000000790000002000000067000000650000006e000000650000007200000061000000740000
*006500000064000000200000006200000079000000200000007400000068000000650000000a01
*02070000002000000020000000200000002000000020000000200000002001021e000000540000
*006500000078000000740000002e00000050000000610000007200000073000000650000006300
*00002e000000430000006f0000006d00000062000000690000006e00000061000000740000006f
*000000720000002e00000073000000610000007400000069000000730000006600000079010221
*00000020000000630000006f0000006d00000062000000690000006e0000006100000074000000
*6f000000720000002e000000200000005400000068000000650000002000000061000000720000
*0067000000750000006d000000650000006e000000740000002000000069000000730000002000
*00007400000068000000650000000a021900000020000000200000002000000020000000200000
*002000000020000000750000006e00000065000000780000007000000065000000630000007400
*0000650000006400000020000000690000006e0000007000000075000000740000002e0000000a
*0301020300000020000000410000002001040100000000000000002a0000000000000000000000
*000000000401021d000000200000006d0000006500000073000000730000006100000067000000
*650000002000000069000000730000002000000067000000650000006e00000065000000720000
*006100000074000000650000006400000020000000620000007900000020000000740000006800
*0000650000002001021b000000540000006500000078000000740000002e000000500000006100
*0000720000007300000065000000630000002e0000005000000072000000690000006d0000002e
*000000750000006e00000065000000780000007000000065000000630000007400000065000000
*640102010000000a01022e00000020000000200000002000000020000000200000002000000020
*000000630000006f0000006d00000062000000690000006e00000061000000740000006f000000
*720000002e00000020000000540000006800000065000000200000006100000072000000670000
*00750000006d000000650000006e00000074000000200000006400000065000000730000006300
*00007200000069000000620000006500000073000000200000007400000068000000650000000a
*021800000020000000200000002000000020000000200000002000000020000000750000006e00
*000065000000780000007000000065000000630000007400000065000000640000002000000069
*00000074000000650000006d0000002e0000000a03010203000000200000004100000020010401
*0000000000000000290000000000000000000000000000000401021d000000200000006d000000
*650000007300000073000000610000006700000065000000200000006900000073000000200000
*0067000000650000006e0000006500000072000000610000007400000065000000640000002000
*000062000000790000002000000074000000680000006500000020010214000000540000006500
*000078000000740000002e0000005000000061000000720000007300000065000000630000002e
*0000005000000072000000690000006d0000002e0000003c0000003f0000003e0102010000000a
*023d00000020000000200000002000000020000000200000002000000020000000630000006f00
*00006d00000062000000690000006e00000061000000740000006f000000720000002e00000020
*00000054000000680000006500000020000000610000007200000067000000750000006d000000
*650000006e00000074000000200000006400000065000000730000006300000072000000690000
*006200000065000000730000002000000074000000680000006500000020000000650000007800
*000070000000650000006300000074000000650000006400000020000000690000007400000065
*0000006d0000002e0000000a030102030000002000000041000000200104020000000000000000
*280000000000000000000000000000000400000000000000002700000000000000000000000000
*00000401021d000000200000006d00000065000000730000007300000061000000670000006500
*00002000000069000000730000002000000067000000650000006e000000650000007200000061
*000000740000006500000064000000200000006200000079000000200000007400000068000000
*65000000200104010000000000000000520000000000000009000000000000000b010201000000
*0a024100000020000000200000002000000020000000200000002000000020000000630000006f
*0000006d00000062000000690000006e00000061000000740000006f000000720000002e000000
*2000000054000000680000006500000020000000610000007200000067000000750000006d0000
*00650000006e0000007400000020000000690000007300000020000000730000006f0000006d00
*0000650000002000000067000000650000006e0000006500000072000000610000006c00000020
*000000700000006100000072000000730000006500000072000000200000006d00000065000000
*73000000730000006100000067000000650000002e000000200000000a000000000000002c0302
*320000004500000078000000740000007200000061000000630000007400000020000000740000
*006800000065000000200000006d00000065000000730000007300000061000000670000006500
*000020000000730000007400000072000000690000006e00000067000000200000006600000072
*0000006f0000006d00000020000000610000006e00000020000000650000007200000072000000
*6f00000072000000200000006d0000006500000073000000730000006100000067000000650000
*00200000000a000000000000002d03023200000045000000780000007400000072000000610000
*006300000074000000730000002000000074000000680000006500000020000000730000006f00
*00007500000072000000630000006500000020000000700000006f000000730000006900000074
*000000690000006f0000006e0000002000000066000000720000006f0000006d00000020000000
*740000006800000065000000200000007000000061000000720000007300000065000000200000
*006500000072000000720000006f000000720000000a1200000000000000260000000000000027
*00000000000000280000000000000029000000000000002a000000000000002b00000000000000
*2c000000000000002d000000000000002e000000000000002f0000000000000030000000000000
*003100000000000000320000000000000033000000000000003400000000000000350000000000
*0000360000000000000037120000000000000027000000000000002b000000000000002a000000
*00000000290000000000000028000000000000002c0000000000000026000000000000002d0000
*00000000002e000000000000002f00000000000000370000000000000031000000000000003000
*000000000000320000000000000033000000000000003500000000000000340000000000000036
*000000000000000000000000000000050000000000060000000000000038000000000000003900
*0000000000003a000000000000003b000000000000003c000000000000003d0600000000000000
*380000000000000039000000000000003a000000000000003b000000000000003c000000000000
*003d00000000000000000000000000000006000000000004000000000000003e00000000000000
*3f0000000000000040000000000000004104000000000000003e000000000000003f0000000000
*00004000000000000000410000000000000000000000000000000700000000000c000000000000
*004200000000000000430000000000000044000000000000004500000000000000460000000000
*00004700000000000000480000000000000049000000000000004a000000000000004b00000000
*0000004c000000000000004d0c0000000000000042000000000000004300000000000000440000
*000000000045000000000000004600000000000000470000000000000048000000000000004900
*0000000000004a000000000000004b000000000000004c000000000000004d0000000000000000
*000000000000000800011c0000006e0000006f0000006e0000002d000000700000006f00000072
*0000007400000061000000620000006c0000006500000020000000280000007400000079000000
*70000000650000002000000066000000610000006d000000690000006c00000069000000650000
*007300000029010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c0110000000650000006b0000006d0000006500000074
*0000007400000040000000670000006d00000061000000690000006c0000002e00000063000000
*6f0000006d0002000000000000004e000000000000004f02000000000000004e00000000000000
*4f0000000000000000000000000000000c0001230000006e0000006f0000006e0000002d000000
*700000006f000000720000007400000061000000620000006c0000006500000020000000280000
*00740000007900000070000000650000002000000066000000610000006d000000690000006c00
*00006900000065000000730000002c000000200000004700000041000000440000005400000073
*00000029010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c0110000000650000006b0000006d00000065000000740000
*007400000040000000670000006d00000061000000690000006c0000002e000000630000006f00
*00006d00430000000000000009000000000000000a000000000000000b000000000000000c0000
*00000000000d000000000000000e000000000000000f0000000000000010000000000000001100
*000000000000120000000000000013000000000000001400000000000000150000000000000016
*000000000000001700000000000000180000000000000019000000000000001a00000000000000
*1b000000000000001c000000000000001d000000000000001e000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000025000000000000002600000000000000270000000000000028000000000000002900000000
*0000002a000000000000002b000000000000002c000000000000002d000000000000002e000000
*000000002f00000000000000300000000000000031000000000000003200000000000000330000
*000000000034000000000000003500000000000000360000000000000037000000000000003800
*00000000000039000000000000003a000000000000003b000000000000003c000000000000003d
*000000000000004200000000000000430000000000000044000000000000004500000000000000
*46000000000000004700000000000000480000000000000049000000000000004a000000000000
*004b000000000000004c000000000000004d000000000000004e000000000000004f0000000000
*000000530000000000000000000000000000000103000000000000000d00000000000000000000
*00000000000101000000000000000d000000000000000000000000000000010000000000000000
*0e0000000000000000000000000000000103000000000000000f00000000000000000000000000
*000001030000000000000010000000000000000000000000000000020300000000000000110000
*000000000000000000000000000200000000000000001200000000000000000000000000000002
*000000000000000013000000000000000000000000000000020000000000000000140000000000
*000000000000000000000303000000000000001500000000000000000000000000000003030000
*000000000016000000000000000000000000000000030300000000000000170000000000000000
*000000000000000303000000000000001800000000000000000000000000000003000000000000
*0000190000000000000000000000000000000300000000000000001a0000000000000000000000
*000000000300000000000000001b0000000000000000000000000000000300000000000000001c
*0000000000000000000000000000000303000000000000001d0000000000000000000000000000
*000301000000000000001e0000000000000000000000000000000301000000000000001f000000
*000000000000000000000000030100000000000000200000000000000000000000000000000301
*000000000000001800000000000000000000000000000003010000000000000021000000000000
*000000000000000000030100000000000000220000000000000000000000000000000301000000
*000000001700000000000000000000000000000003010000000000000023000000000000000000
*000000000000030300000000000000240000000000000000000000000000000303000000000000
*002500000000000000000000000000000003030000000000000026000000000000000000000000
*000000030000000000000000270000000000000000000000000000000300000000000000002800
*000000000000000000000000000003000000000000000029000000000000000000000000000000
*0300000000000000002a0000000000000000000000000000000300000000000000002b00000000
*00000000000000000000000300000000000000002c000000000000000000000000000000030000
*0000000000002d0000000000000000000000000000000300000000000000002e00000000000000
*00000000000000000300000000000000002f000000000000000000000000000000040300000000
*000000300000000000000000000000000000000403000000000000003100000000000000000000
*000000000004010000000000000031000000000000000000000000000000040100000000000000
*320000000000000000000000000000000401000000000000003300000000000000000000000000
*000004010000000000000034000000000000000000000000000000040000000000000000350000
*000000000000000000000000000400000000000000003600000000000000000000000000000004
*000000000000000037000000000000000000000000000000040000000000000000380000000000
*000000000000000000000400000000000000003900000000000000000000000000000004000000
*00000000003a0000000000000000000000000000000400000000000000003b0000000000000000
*000000000000000400000000000000003c00000000000000000000000000000004000000000000
*00003d0000000000000000000000000000000400000000000000003e0000000000000000000000
*000000000400000000000000003f00000000000000000000000000000004000000000000000040
*000000000000000000000000000000050300000000000000410000000000000000000000000000
*000500000000000000004200000000000000000000000000000005000000000000000043000000
*000000000000000000000000050300000000000000440000000000000000000000000000000500
*000000000000004500000000000000000000000000000005000000000000000046000000000000
*000000000000000000060000000000000000470000000000000000000000000000000600000000
*000000004800000000000000000000000000000006000000000000000049000000000000000000
*0000000000000600000000000000004a0000000000000000000000000000000700000000000000
*004b0000000000000000000000000000000700000000000000004c000000000000000000000000
*0000000700000000000000004d0000000000000000000000000000000700000000000000004e00
*00000000000000000000000000000700000000000000004f000000000000000000000000000000
*070000000000000000500000000000000000000000000000000700000000000000005100000000
*000000000000000000000007000000000000000052000000000000000000000000000000070000
*000000000000530000000000000000000000000000000700000000000000005400000000000000
*000000000000000007000000000000000055000000000000000000000000000000070000000000
*000000560000000000000000000000000000000800000000000000005700000000000000000000
*0000000000080000000000000000580000000000000059000000000000005a0300000000000000
*5b0000000000000009000000000000005c03000000000000005d00000000000000090000000000
*00005e00000000000000005f0000000000000060000000000000000f70617273696d6f6e792d30
*2e302e310000000000000013546578742e50617273696d6f6e792e5574696c0000000000000018
*546578742e50617273696d6f6e792e537461626c654d61700000000000000013546578742e5061
*7273696d6f6e792e5072696d0000000000000014546578742e50617273696d6f6e792e4572726f
*720000000000000013546578742e50617273696d6f6e792e4d6f6465000000000000001a546578
*742e50617273696d6f6e792e436f6d62696e61746f72730000000000000013546578742e506172
*73696d6f6e792e436861720000000000000015546578742e50617273696d6f6e792e5061727365
*630000000000000004626173650000000000000009546578742e53686f77000000000000000d43
*6f6e74726f6c2e4d6f6e6164000000000000000e546578742e50617273696d6f6e790000000000
*0000024964000000000000000572756e4964000000000000000649676e6f726500000000000000
*054d616769630000000000000009537461626c654d61700000000000000005656d707479000000
*0000000006696e7365727400000000000000066c6f6f6b757000000000000000044d6f64650000
*000000000005546f6b656e00000000000000045075726500000000000000075361746973667900
*0000000000000a666d617050617273657200000000000000096170705061727365720000000000
*000007736174697366790000000000000004736b69700000000000000006506172736572000000
*00000000064c6162656c7300000000000000044e616d650000000000000004536b697000000000
*000000064772656564790000000000000003416c74000000000000000341707000000000000000
*0a5265636f676e697a6572000000000000000b5265636f676e697a696e67000000000000000750
*617273696e6700000000000000033c3c2400000000000000032a3e3e00000000000000033c3c2a
*00000000000000046e616d6500000000000000066c6162656c7300000000000000033c3f3e0000
*00000000000663686f69636500000000000000043c3c7c3e000000000000000c67726565647943
*686f696365000000000000000a50617273654572726f7200000000000000074d65737361676500
*000000000000064578706563740000000000000008556e457870656374000000000000000b5379
*73556e457870656374000000000000000d6d657373616765537472696e67000000000000000d65
*72726f72506f736974696f6e000000000000000d6572726f724d65737361676573000000000000
*000e6572726f724973556e6b6e6f776e000000000000000f6e65774572726f72556e6b6e6f776e
*000000000000000f6e65774572726f724d657373616765000000000000000f6164644572726f72
*4d65737361676500000000000000107365744572726f72506f736974696f6e0000000000000014
*70726570656e644572726f72506f736974696f6e000000000000000f7365744572726f724d6573
*73616765000000000000000a6d657267654572726f72000000000000001173686f774572726f72
*4d65737361676573000000000000000d5265636f676e697a654d6f6465000000000000000c7265
*636f676e697a654d617000000000000000097265636f676e697a65000000000000000950617273
*654d6f6465000000000000000870617273654d6170000000000000000570617273650000000000
*0000056f6e654f6600000000000000066e6f6e654f660000000000000008616e79546f6b656e00
*000000000000066f7074696f6e0000000000000004636861720000000000000003746162000000
*00000000057370616365000000000000000673706163657300000000000000056c6f7765720000
*00000000000575707065720000000000000008616c7068614e756d00000000000000066c657474
*65720000000000000008686578446967697400000000000000086f637444696769740000000000
*000007616e79436861720000000000000006737472696e6700000000000000046576616c000000
*00000000056576616c5f000000000000000e6d6f6e6f6964732d302e312e333600000000000000
*22446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e00000000
*0000000e536f75726365506f736974696f6e00000000000000084748432e53686f770000000000
*00000453686f7700000000000000084748432e4261736500000000000000046661696c
newhex
*0d0cface000400000000000035dd0000000000002dba5000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000300000000
*000000140000000000000000000000000000000300000000000000150000000000000000000000
*000000000300000000000000160000000000000000000000000000000300000000000000170000
*000000000000000000000000000300000000000000180000000000000000000000000000000300
*0000000000001900000000000000000000000000000003000000000000001a0000000000000000
*0000000000000003000000000000001b0000000000000000000000000000000300000000000000
*1c00000000000000000000000000000003000000000000001d0000000000000000000000000000
*0003000000000000001e00000000000000000000000000000003000000000000001f0000000000
*000000000000000000000300000000000000200000000000000000000000000000000300000000
*000000210000000000000000000000000000000300000000000000220000000000000000000000
*000000000300000000000000230000000000000000000000000000000300000000000000240000
*000000000000000000000000000300000000000000250000000000000000000000000000000300
*000000000000260000000000000000000000000000000400000000000000270000000000000000
*000000000000000400000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0004000000000000002b00000000000000000000000000000004000000000000002c0000000000
*0000000000000000000004000000000000002d0000000000000000000000000000000400000000
*0000002e00000000000000000000000000000004000000000000002f0000000000000000000000
*000000000400000000000000300000000000000000000000000000000400000000000000310000
*000000000000000000000000000400000000000000320000000000000000000000000000000400
*000000000000330000000000000000000000000000000400000000000000340000000000000000
*000000000000000400000000000000350000000000000000000000000000000400000000000000
*360000000000000000000000000000000400000000000000370000000000000000000000000000
*000400000000000000380000000000000000000000000000000500000000000000390000000000
*0000000000000000000005000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000005000000000000003d00000000000000000000000000000005000000000000003e0000
*0000000000000000000000000006000000000000003f0000000000000000000000000000000600
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000600000000000000420000000000000000000000000000000700000000000000
*430000000000000000000000000000000700000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000007000000000000004e0000000000000000
*0000000000000008000000000000004f0000000000000000000000000000000809000000000000
*000000000000000000010001230000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c000000650000002000000028000000740000007900
*000070000000650000002000000066000000610000006d000000690000006c0000006900000065
*000000730000002c00000020000000470000004100000044000000540000007300000029010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c0110000000650000006b0000006d0000006500000074000000740000004000
*0000670000006d00000061000000690000006c0000002e000000630000006f0000006d00060000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*000000000000050600000000000000050000000000000004000000000000000100000000000000
*020000000000000003000000000000000000000000000000000000000000000002000000000004
*000000000000000600000000000000070000000000000008000000000000000904000000000000
*000600000000000000070000000000000008000000000000000900000000000000000000000000
*0000030001230000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c00000065000000200000002800000074000000790000007000000065
*0000002000000066000000610000006d000000690000006c000000690000006500000073000000
*2c00000020000000470000004100000044000000540000007300000029010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c0110000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d03000000000000001d0301
*02150000006f0000007000000074000000690000006d000000690000007a000000650000006400
*00002000000076000000650000007200000073000000690000006f0000006e000000200000006f
*000000660000002001020100000027010201000000280102010000003c01020200000024000000
*290102010000002702010000000a000000000000001e030102150000006f000000700000007400
*0000690000006d000000690000007a000000650000006400000020000000760000006500000072
*00000073000000690000006f0000006e000000200000006f000000660000002001020100000027
*010204000000280000002a0000003e000000290102010000002702010000000a00000000000000
*1f030102150000006f0000007000000074000000690000006d000000690000007a000000650000
*00640000002000000076000000650000007200000073000000690000006f0000006e0000002000
*00006f000000660000002001020100000027010201000000280102010000003c0102010000003c
*0102020000002a000000290102010000002702010000000a1c000000000000000a000000000000
*000b000000000000000c000000000000000d000000000000000e000000000000000f0000000000
*000010000000000000001100000000000000120000000000000013000000000000001400000000
*000000150000000000000016000000000000001700000000000000180000000000000019000000
*000000001a000000000000001b000000000000001c000000000000001d000000000000001e0000
*00000000001f000000000000002000000000000000210000000000000022000000000000002300
*0000000000002400000000000000251c000000000000001b000000000000001a00000000000000
*110000000000000012000000000000001300000000000000140000000000000015000000000000
*0016000000000000001700000000000000180000000000000019000000000000000a0000000000
*00000b000000000000000c000000000000000d000000000000000e000000000000000f00000000
*0000001c0000000000000010000000000000001d000000000000001e000000000000001f000000
*000000002000000000000000210000000000000022000000000000002300000000000000240000
*00000000002500000000000000000000000000000004000108000000700000006f000000720000
*007400000061000000620000006c00000065010b00000070000000720000006f00000076000000
*6900000073000000690000006f0000006e000000610000006c0110000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d0400000000000000260301021700000054000000680000006500
*000020000000610000006200000073000000740000007200000061000000630000007400000020
*000000640000006100000074000000610000002000000074000000790000007000000065000000
*200107020a00000050000000610000007200000073000000650000004500000072000000720000
*006f0000007201021d000000200000007200000065000000700000007200000065000000730000
*00650000006e000000740000007300000020000000700000006100000072000000730000006500
*0000200000006500000072000000720000006f00000072000000730000002e0000002000000049
*000000740000000a01021f0000002000000070000000720000006f000000760000006900000064
*00000065000000730000002000000074000000680000006500000020000000730000006f000000
*7500000072000000630000006500000020000000700000006f0000007300000069000000740000
*00690000006f0000006e000000200000002801040101000000000000005001020f000000290000
*00200000006f000000660000002000000074000000680000006500000020000000650000007200
*0000720000006f000000720000000a01021f00000020000000610000006e000000640000002000
*000061000000200000006c000000690000007300000074000000200000006f0000006600000020
*0000006500000072000000720000006f00000072000000200000006d0000006500000073000000
*730000006100000067000000650000007300000020000000280104020000000000000000280000
*000000000000000000000000000400000000000000002700000000000000000000000000000004
*010205000000290000002e0000002000000041000000200107020a000000500000006100000072
*00000073000000650000004500000072000000720000006f000000720102010000000a01022100
*00002000000063000000610000006e000000200000006200000065000000200000007200000065
*0000007400000075000000720000006e0000006500000064000000200000006200000079000000
*200000007400000068000000650000002000000066000000750000006e00000063000000740000
*00690000006f0000006e00000020010219000000540000006500000078000000740000002e0000
*0050000000610000007200000073000000690000006d0000006f0000006e000000790000002e00
*00004d0000006f00000064000000650000002e0000007000000061000000720000007300000065
*0102020000002e000000200107020a000000500000006100000072000000730000006500000045
*00000072000000720000006f000000720102070000002000000069000000730000002000000061
*0000006e0000000a01021100000020000000690000006e0000007300000074000000610000006e
*0000006300000065000000200000006f0000006600000020000000740000006800000065000000
*200104010000000000000000510000000000000009000000000000000a01023800000020000000
*630000006c0000006100000073000000730000002c000000200000006200000075000000740000
*0020000000640000006f0000006500000073000000200000006e0000006f000000740000002000
*0000630000006f0000006d000000700000006c0000007900000020000000770000006900000074
*000000680000002000000074000000680000006500000020000000480000006100000073000000
*6b000000650000006c0000006c00000020000000630000006f0000006e00000076000000650000
*006e00000074000000690000006f0000006e0000000a023c000000200000007400000068000000
*61000000740000002000000053000000680000006f000000770000002000000073000000680000
*006f000000750000006c00000064000000200000007900000069000000650000006c0000006400
*000020000000610000002000000076000000610000006c00000069000000640000002000000073
*0000006f0000007500000072000000630000006500000020000000630000006f00000064000000
*6500000020000000720000006500000070000000720000006500000073000000650000006e0000
*00740000006100000074000000690000006f0000006e0000002e0000000a000000000000002701
*030102430000005400000068000000690000007300000020000000610000006200000073000000
*740000007200000061000000630000007400000020000000640000006100000074000000610000
*002000000074000000790000007000000065000000200000007200000065000000700000007200
*00006500000073000000650000006e000000740000007300000020000000700000006100000072
*0000007300000065000000200000006500000072000000720000006f0000007200000020000000
*6d000000650000007300000073000000610000006700000065000000730000002e000000200000
*005400000068000000650000007200000065000000200000006100000072000000650000000a02
*1900000020000000660000006f0000007500000072000000200000006b000000690000006e0000
*006400000073000000200000006f00000066000000200000006d00000065000000730000007300
*0000610000006700000065000000730000003a0000000a010b0102240000002000000020000000
*64000000610000007400000061000000200000004d000000650000007300000073000000610000
*006700000065000000200000003d00000020000000530000007900000073000000550000006e00
*000045000000780000007000000065000000630000007400000020000000530000007400000072
*000000690000006e000000670000000a0102210000002000000020000000200000002000000020
*000000200000002000000020000000200000002000000020000000200000002000000020000000
*200000007c00000020000000550000006e00000045000000780000007000000065000000630000
*007400000020000000530000007400000072000000690000006e000000670000000a01021f0000
*002000000020000000200000002000000020000000200000002000000020000000200000002000
*000020000000200000002000000020000000200000007c00000020000000450000007800000070
*00000065000000630000007400000020000000530000007400000072000000690000006e000000
*670000000a02200000002000000020000000200000002000000020000000200000002000000020
*000000200000002000000020000000200000002000000020000000200000007c00000020000000
*4d0000006500000073000000730000006100000067000000650000002000000053000000740000
*0072000000690000006e000000670000000a010301024400000054000000680000006500000020
*00000066000000690000006e000000650000002000000064000000690000007300000074000000
*690000006e0000006300000074000000690000006f0000006e0000002000000062000000650000
*00740000007700000065000000650000006e000000200000006400000069000000660000006600
*00006500000072000000650000006e00000074000000200000006b000000690000006e00000064
*00000073000000200000006f000000660000002000000070000000610000007200000073000000
*65000000200000006500000072000000720000006f000000720000007300000020000000610000
*006c0000006c0000006f00000077000000730000000a0102430000002000000074000000680000
*00650000002000000073000000790000007300000074000000650000006d000000200000007400
*00006f0000002000000067000000650000006e0000006500000072000000610000007400000065
*00000020000000710000007500000069000000740000006500000020000000670000006f000000
*6f00000064000000200000006500000072000000720000006f00000072000000200000006d0000
*006500000073000000730000006100000067000000650000007300000020000000660000006f00
*000072000000200000007400000068000000650000002000000075000000730000006500000072
*0000002e0000002000000049000000740000000a01023c00000020000000610000006c00000073
*0000006f00000020000000610000006c0000006c0000006f000000770000007300000020000000
*6500000072000000720000006f00000072000000200000006d0000006500000073000000730000
*006100000067000000650000007300000020000000740000006800000061000000740000002000
*000061000000720000006500000020000000660000006f000000720000006d0000006100000074
*00000074000000650000006400000020000000690000006e000000200000006400000069000000
*66000000660000006500000072000000650000006e000000740000000a0248000000200000006c
*000000610000006e0000006700000075000000610000006700000065000000730000002e000000
*2000000045000000610000006300000068000000200000006b000000690000006e000000640000
*00200000006f00000066000000200000006d000000650000007300000073000000610000006700
*0000650000002000000069000000730000002000000067000000650000006e0000006500000072
*000000610000007400000065000000640000002000000062000000790000002000000064000000
*6900000066000000660000006500000072000000650000006e0000007400000020000000630000
*006f0000006d00000062000000690000006e00000061000000740000006f000000720000007300
*00003a0000000a08040301020300000020000000410000002001040100000000000000002b0000
*000000000000000000000000000401022b000000200000006d0000006500000073000000730000
*006100000067000000650000002000000069000000730000002000000061000000750000007400
*00006f0000006d00000061000000740000006900000063000000610000006c0000006c00000079
*0000002000000067000000650000006e0000006500000072000000610000007400000065000000
*64000000200000006200000079000000200000007400000068000000650000000a010207000000
*2000000020000000200000002000000020000000200000002001021e0000005400000065000000
*78000000740000002e0000005000000061000000720000007300000065000000630000002e0000
*00430000006f0000006d00000062000000690000006e00000061000000740000006f0000007200
*00002e000000730000006100000074000000690000007300000066000000790102210000002000
*0000630000006f0000006d00000062000000690000006e00000061000000740000006f00000072
*0000002e0000002000000054000000680000006500000020000000610000007200000067000000
*750000006d000000650000006e0000007400000020000000690000007300000020000000740000
*0068000000650000000a0219000000200000002000000020000000200000002000000020000000
*20000000750000006e000000650000007800000070000000650000006300000074000000650000
*006400000020000000690000006e0000007000000075000000740000002e0000000a0301020300
*000020000000410000002001040100000000000000002a00000000000000000000000000000004
*01021d000000200000006d00000065000000730000007300000061000000670000006500000020
*00000069000000730000002000000067000000650000006e000000650000007200000061000000
*740000006500000064000000200000006200000079000000200000007400000068000000650000
*002001021b000000540000006500000078000000740000002e0000005000000061000000720000
*007300000065000000630000002e0000005000000072000000690000006d0000002e0000007500
*00006e000000650000007800000070000000650000006300000074000000650000006401020100
*00000a01022e000000200000002000000020000000200000002000000020000000200000006300
*00006f0000006d00000062000000690000006e00000061000000740000006f000000720000002e
*000000200000005400000068000000650000002000000061000000720000006700000075000000
*6d000000650000006e000000740000002000000064000000650000007300000063000000720000
*0069000000620000006500000073000000200000007400000068000000650000000a0218000000
*20000000200000002000000020000000200000002000000020000000750000006e000000650000
*007800000070000000650000006300000074000000650000006400000020000000690000007400
*0000650000006d0000002e0000000a030102030000002000000041000000200104010000000000
*000000290000000000000000000000000000000401021d000000200000006d0000006500000073
*000000730000006100000067000000650000002000000069000000730000002000000067000000
*650000006e00000065000000720000006100000074000000650000006400000020000000620000
*007900000020000000740000006800000065000000200102140000005400000065000000780000
*00740000002e0000005000000061000000720000007300000065000000630000002e0000005000
*000072000000690000006d0000002e0000003c0000003f0000003e0102010000000a023d000000
*20000000200000002000000020000000200000002000000020000000630000006f0000006d0000
*0062000000690000006e00000061000000740000006f000000720000002e000000200000005400
*0000680000006500000020000000610000007200000067000000750000006d000000650000006e
*000000740000002000000064000000650000007300000063000000720000006900000062000000
*650000007300000020000000740000006800000065000000200000006500000078000000700000
*006500000063000000740000006500000064000000200000006900000074000000650000006d00
*00002e0000000a0301020300000020000000410000002001040200000000000000002800000000
*000000000000000000000004000000000000000027000000000000000000000000000000040102
*1d000000200000006d000000650000007300000073000000610000006700000065000000200000
*0069000000730000002000000067000000650000006e0000006500000072000000610000007400
*000065000000640000002000000062000000790000002000000074000000680000006500000020
*0104010000000000000000520000000000000009000000000000000b0102010000000a02410000
*0020000000200000002000000020000000200000002000000020000000630000006f0000006d00
*000062000000690000006e00000061000000740000006f000000720000002e0000002000000054
*000000680000006500000020000000610000007200000067000000750000006d00000065000000
*6e0000007400000020000000690000007300000020000000730000006f0000006d000000650000
*002000000067000000650000006e0000006500000072000000610000006c000000200000007000
*00006100000072000000730000006500000072000000200000006d000000650000007300000073
*0000006100000067000000650000002e000000200000000a000000000000002c03023200000045
*000000780000007400000072000000610000006300000074000000200000007400000068000000
*65000000200000006d000000650000007300000073000000610000006700000065000000200000
*00730000007400000072000000690000006e000000670000002000000066000000720000006f00
*00006d00000020000000610000006e000000200000006500000072000000720000006f00000072
*000000200000006d00000065000000730000007300000061000000670000006500000020000000
*0a000000000000002d030232000000450000007800000074000000720000006100000063000000
*74000000730000002000000074000000680000006500000020000000730000006f000000750000
*0072000000630000006500000020000000700000006f0000007300000069000000740000006900
*00006f0000006e0000002000000066000000720000006f0000006d000000200000007400000068
*000000650000002000000070000000610000007200000073000000650000002000000065000000
*72000000720000006f000000720000000a12000000000000002600000000000000270000000000
*0000280000000000000029000000000000002a000000000000002b000000000000002c00000000
*0000002d000000000000002e000000000000002f00000000000000300000000000000031000000
*000000003200000000000000330000000000000034000000000000003500000000000000360000
*000000000037120000000000000027000000000000002b000000000000002a0000000000000029
*0000000000000028000000000000002c0000000000000026000000000000002d00000000000000
*2e000000000000002f000000000000003700000000000000310000000000000030000000000000
*003200000000000000330000000000000035000000000000003400000000000000360000000000
*000000000000000000000500000000000600000000000000380000000000000039000000000000
*003a000000000000003b000000000000003c000000000000003d06000000000000003800000000
*00000039000000000000003a000000000000003b000000000000003c000000000000003d000000
*00000000000000000000000006000000000004000000000000003e000000000000003f00000000
*00000040000000000000004104000000000000003e000000000000003f00000000000000400000
*0000000000410000000000000000000000000000000700000000000c0000000000000042000000
*000000004300000000000000440000000000000045000000000000004600000000000000470000
*0000000000480000000000000049000000000000004a000000000000004b000000000000004c00
*0000000000004d0c00000000000000420000000000000043000000000000004400000000000000
*450000000000000046000000000000004700000000000000480000000000000049000000000000
*004a000000000000004b000000000000004c000000000000004d00000000000000000000000000
*00000c0001230000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c00000065000000200000002800000074000000790000007000000065
*0000002000000066000000610000006d000000690000006c000000690000006500000073000000
*2c00000020000000470000004100000044000000540000007300000029010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c0110000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d0040000000000000000a00
*0000000000000b000000000000000c000000000000000d000000000000000e000000000000000f
*000000000000001000000000000000110000000000000012000000000000001300000000000000
*140000000000000015000000000000001600000000000000170000000000000018000000000000
*0019000000000000001a000000000000001b000000000000001c000000000000001d0000000000
*00001e000000000000001f00000000000000200000000000000021000000000000002200000000
*000000230000000000000024000000000000002500000000000000260000000000000027000000
*00000000280000000000000029000000000000002a000000000000002b000000000000002c0000
*00000000002d000000000000002e000000000000002f0000000000000030000000000000003100
*000000000000320000000000000033000000000000003400000000000000350000000000000036
*000000000000003700000000000000380000000000000039000000000000003a00000000000000
*3b000000000000003c000000000000003d00000000000000420000000000000043000000000000
*004400000000000000450000000000000046000000000000004700000000000000480000000000
*000049000000000000004a000000000000004b000000000000004c000000000000004d00000000
*0000000000000000000000000800011c0000006e0000006f0000006e0000002d00000070000000
*6f000000720000007400000061000000620000006c000000650000002000000028000000740000
*007900000070000000650000002000000066000000610000006d000000690000006c0000006900
*0000650000007300000029010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d0002000000000000004e000000000000004f02000000000000004e0000
*00000000004f00000000000000530000000000000000000000000000000103000000000000000d
*0000000000000000000000000000000103000000000000000e0000000000000000000000000000
*000101000000000000000e0000000000000000000000000000000100000000000000000f000000
*000000000000000000000000010300000000000000100000000000000000000000000000000103
*000000000000001100000000000000000000000000000002030000000000000012000000000000
*000000000000000000020000000000000000130000000000000000000000000000000200000000
*000000001400000000000000000000000000000002000000000000000015000000000000000000
*000000000000030300000000000000160000000000000000000000000000000303000000000000
*001700000000000000000000000000000003030000000000000018000000000000000000000000
*000000030000000000000000190000000000000000000000000000000300000000000000001a00
*00000000000000000000000000000300000000000000001b000000000000000000000000000000
*0300000000000000001c0000000000000000000000000000000303000000000000001d00000000
*00000000000000000000000301000000000000001e000000000000000000000000000000030100
*0000000000001f0000000000000000000000000000000301000000000000002000000000000000
*000000000000000003010000000000000021000000000000000000000000000000030100000000
*000000220000000000000000000000000000000301000000000000002300000000000000000000
*000000000003010000000000000017000000000000000000000000000000030100000000000000
*240000000000000000000000000000000303000000000000002500000000000000000000000000
*000003030000000000000026000000000000000000000000000000030000000000000000270000
*000000000000000000000000000300000000000000002800000000000000000000000000000003
*0000000000000000290000000000000000000000000000000300000000000000002a0000000000
*000000000000000000000300000000000000002b00000000000000000000000000000003000000
*00000000002c0000000000000000000000000000000300000000000000002d0000000000000000
*000000000000000300000000000000002e00000000000000000000000000000003000000000000
*00002f000000000000000000000000000000030000000000000000300000000000000000000000
*000000000403000000000000003100000000000000000000000000000004030000000000000032
*000000000000000000000000000000040100000000000000320000000000000000000000000000
*000401000000000000003300000000000000000000000000000004010000000000000034000000
*000000000000000000000000040100000000000000350000000000000000000000000000000400
*000000000000003600000000000000000000000000000004000000000000000037000000000000
*000000000000000000040000000000000000380000000000000000000000000000000400000000
*00000000390000000000000000000000000000000400000000000000003a000000000000000000
*0000000000000400000000000000003b0000000000000000000000000000000400000000000000
*003c0000000000000000000000000000000400000000000000003d000000000000000000000000
*0000000400000000000000003e0000000000000000000000000000000400000000000000003f00
*000000000000000000000000000004000000000000000040000000000000000000000000000000
*040000000000000000410000000000000000000000000000000503000000000000004200000000
*000000000000000000000005000000000000000043000000000000000000000000000000050000
*000000000000440000000000000000000000000000000503000000000000004500000000000000
*000000000000000005000000000000000046000000000000000000000000000000050000000000
*000000470000000000000000000000000000000600000000000000004800000000000000000000
*000000000006000000000000000049000000000000000000000000000000060000000000000000
*4a0000000000000000000000000000000600000000000000004b00000000000000000000000000
*00000700000000000000004c0000000000000000000000000000000700000000000000004d0000
*000000000000000000000000000700000000000000004e00000000000000000000000000000007
*00000000000000004f000000000000000000000000000000070000000000000000500000000000
*000000000000000000000700000000000000005100000000000000000000000000000007000000
*000000000052000000000000000000000000000000070000000000000000530000000000000000
*000000000000000700000000000000005400000000000000000000000000000007000000000000
*000055000000000000000000000000000000070000000000000000560000000000000000000000
*000000000700000000000000005700000000000000000000000000000008000000000000000058
*00000000000000000000000000000008000000000000000059000000000000005a000000000000
*005b03000000000000005c0000000000000009000000000000005d03000000000000005e000000
*0000000009000000000000005f0000000000000000600000000000000061000000000000000f70
*617273696d6f6e792d302e302e310000000000000013546578742e50617273696d6f6e792e5574
*696c0000000000000018546578742e50617273696d6f6e792e537461626c654d61700000000000
*000013546578742e50617273696d6f6e792e5072696d0000000000000014546578742e50617273
*696d6f6e792e4572726f720000000000000013546578742e50617273696d6f6e792e4d6f646500
*0000000000001a546578742e50617273696d6f6e792e436f6d62696e61746f7273000000000000
*0013546578742e50617273696d6f6e792e436861720000000000000015546578742e5061727369
*6d6f6e792e5061727365630000000000000004626173650000000000000009546578742e53686f
*77000000000000000d436f6e74726f6c2e4d6f6e6164000000000000000e546578742e50617273
*696d6f6e7900000000000000054d6167696300000000000000024964000000000000000572756e
*4964000000000000000c5472697669616c4172726f7700000000000000125472697669616c4170
*706c696361746976650000000000000009537461626c654d61700000000000000005656d707479
*0000000000000006696e7365727400000000000000066c6f6f6b757000000000000000044d6f64
*65000000000000000450757265000000000000000346756e000000000000000a666d6170506172
*736572000000000000000a70757265506172736572000000000000000961707050617273657200
*00000000000004736b6970000000000000000650617273657200000000000000064c6162656c73
*00000000000000044e616d650000000000000004536b6970000000000000000753617469736679
*00000000000000064772656564790000000000000003416c740000000000000003417070000000
*000000000b5265636f676e697a696e67000000000000000750617273696e670000000000000007
*7361746973667900000000000000033c3c2400000000000000032a3e3e00000000000000033c3c
*2a00000000000000046e616d6500000000000000066c6162656c7300000000000000033c3f3e00
*0000000000000663686f69636500000000000000043c3c7c3e000000000000000c677265656479
*43686f696365000000000000000a50617273654572726f7200000000000000074d657373616765
*00000000000000064578706563740000000000000008556e457870656374000000000000000b53
*7973556e457870656374000000000000000d6d657373616765537472696e67000000000000000d
*6572726f72506f736974696f6e000000000000000d6572726f724d657373616765730000000000
*00000e6572726f724973556e6b6e6f776e000000000000000f6e65774572726f72556e6b6e6f77
*6e000000000000000f6e65774572726f724d657373616765000000000000000f6164644572726f
*724d65737361676500000000000000107365744572726f72506f736974696f6e00000000000000
*1470726570656e644572726f72506f736974696f6e000000000000000f7365744572726f724d65
*7373616765000000000000000a6d657267654572726f72000000000000001173686f774572726f
*724d65737361676573000000000000000d5265636f676e697a654d6f6465000000000000000c72
*65636f676e697a654d617000000000000000097265636f676e697a650000000000000009506172
*73654d6f6465000000000000000870617273654d61700000000000000005706172736500000000
*000000056f6e654f6600000000000000066e6f6e654f660000000000000008616e79546f6b656e
*00000000000000066f7074696f6e00000000000000046368617200000000000000037461620000
*0000000000057370616365000000000000000673706163657300000000000000056c6f77657200
*0000000000000575707065720000000000000008616c7068614e756d00000000000000066c6574
*7465720000000000000008686578446967697400000000000000086f6374446967697400000000
*00000007616e79436861720000000000000006737472696e6700000000000000046576616c0000
*0000000000056576616c5f000000000000000e6d6f6e6f6964732d302e312e3336000000000000
*0022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e000000
*000000000e536f75726365506f736974696f6e00000000000000084748432e53686f7700000000
*0000000453686f7700000000000000084748432e4261736500000000000000046661696c
hunk ./doc/html/parsimony/src/Text-Parsimony-Char.html 9
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies #-}</span>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, FlexibleInstances  #-}</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Char.html 13
-<a name="line-5"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="char"></a><span class='hs-definition'>char</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-11"></a><span class='hs-definition'>char</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="tab"></a><span class='hs-definition'>tab</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-14"></a><span class='hs-definition'>tab</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>char</span> <span class='hs-chr'>'\t'</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"tab"</span>
-<a name="line-15"></a>
-<a name="line-16"></a><a name="space"></a><span class='hs-definition'>space</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-17"></a><span class='hs-definition'>space</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isSpace</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"space"</span>
-<a name="line-18"></a>
-<a name="line-19"></a><a name="spaces"></a><span class='hs-definition'>spaces</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
-<a name="line-20"></a><span class='hs-definition'>spaces</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>skip</span> <span class='hs-layout'>(</span><span class='hs-varid'>many</span> <span class='hs-varid'>space</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"white space"</span>
-<a name="line-21"></a>
-<a name="line-22"></a><a name="lower"></a><span class='hs-definition'>lower</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-23"></a><span class='hs-definition'>lower</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isLower</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"lowercase letter"</span>
-<a name="line-24"></a>
-<a name="line-25"></a><a name="upper"></a><span class='hs-definition'>upper</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-26"></a><span class='hs-definition'>upper</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isUpper</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"uppercase letter"</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="alphaNum"></a><span class='hs-definition'>alphaNum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-29"></a><span class='hs-definition'>alphaNum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isAlphaNum</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"letter or digit"</span>
-<a name="line-30"></a>
-<a name="line-31"></a><a name="letter"></a><span class='hs-definition'>letter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-32"></a><span class='hs-definition'>letter</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isAlpha</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"letter"</span>
-<a name="line-33"></a>
-<a name="line-34"></a><a name="hexDigit"></a><span class='hs-definition'>hexDigit</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-35"></a><span class='hs-definition'>hexDigit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isHexDigit</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"hexadecimal digit"</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="octDigit"></a><span class='hs-definition'>octDigit</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-38"></a><span class='hs-definition'>octDigit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isOctDigit</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"octal digit"</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="anyChar"></a><span class='hs-definition'>anyChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
-<a name="line-41"></a><span class='hs-definition'>anyChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>anyToken</span>
-<a name="line-42"></a>
-<a name="line-43"></a><a name="string"></a><span class='hs-definition'>string</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>String</span>
-<a name="line-44"></a><span class='hs-definition'>string</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-varid'>char</span>
+<a name="line-5"></a>
+<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
+<a name="line-11"></a>
+<a name="line-12"></a><a name="char"></a><span class='hs-definition'>char</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-13"></a><span class='hs-definition'>char</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-14"></a>
+<a name="line-15"></a><a name="tab"></a><span class='hs-definition'>tab</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-16"></a><span class='hs-definition'>tab</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>char</span> <span class='hs-chr'>'\t'</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"tab"</span>
+<a name="line-17"></a>
+<a name="line-18"></a><a name="space"></a><span class='hs-definition'>space</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-19"></a><span class='hs-definition'>space</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isSpace</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"space"</span>
+<a name="line-20"></a>
+<a name="line-21"></a><a name="spaces"></a><span class='hs-definition'>spaces</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>()</span>
+<a name="line-22"></a><span class='hs-definition'>spaces</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>skip</span> <span class='hs-layout'>(</span><span class='hs-varid'>many</span> <span class='hs-varid'>space</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"white space"</span>
+<a name="line-23"></a>
+<a name="line-24"></a><a name="lower"></a><span class='hs-definition'>lower</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-25"></a><span class='hs-definition'>lower</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isLower</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"lowercase letter"</span>
+<a name="line-26"></a>
+<a name="line-27"></a><a name="upper"></a><span class='hs-definition'>upper</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-28"></a><span class='hs-definition'>upper</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isUpper</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"uppercase letter"</span>
+<a name="line-29"></a>
+<a name="line-30"></a><a name="alphaNum"></a><span class='hs-definition'>alphaNum</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-31"></a><span class='hs-definition'>alphaNum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isAlphaNum</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"letter or digit"</span>
+<a name="line-32"></a>
+<a name="line-33"></a><a name="letter"></a><span class='hs-definition'>letter</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-34"></a><span class='hs-definition'>letter</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isAlpha</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"letter"</span>
+<a name="line-35"></a>
+<a name="line-36"></a><a name="hexDigit"></a><span class='hs-definition'>hexDigit</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-37"></a><span class='hs-definition'>hexDigit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isHexDigit</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"hexadecimal digit"</span>
+<a name="line-38"></a>
+<a name="line-39"></a><a name="octDigit"></a><span class='hs-definition'>octDigit</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-40"></a><span class='hs-definition'>octDigit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isOctDigit</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"octal digit"</span>
+<a name="line-41"></a>
+<a name="line-42"></a><a name="anyChar"></a><span class='hs-definition'>anyChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>Char</span>
+<a name="line-43"></a><span class='hs-definition'>anyChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>anyToken</span>
+<a name="line-44"></a>
+<a name="line-45"></a><a name="string"></a><span class='hs-definition'>string</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>String</span>
+<a name="line-46"></a><span class='hs-definition'>string</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-varid'>char</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Combinators.html 20
-<a name="line-12"></a><a name="oneOf"></a><span class='hs-definition'>oneOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-12"></a><a name="oneOf"></a><span class='hs-definition'>oneOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>t</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Combinators.html 23
-<a name="line-15"></a><a name="noneOf"></a><span class='hs-definition'>noneOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-15"></a><a name="noneOf"></a><span class='hs-definition'>noneOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>t</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Combinators.html 26
-<a name="line-18"></a><a name="anyToken"></a><span class='hs-definition'>anyToken</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-18"></a><a name="anyToken"></a><span class='hs-definition'>anyToken</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Combinators.html 29
-<a name="line-21"></a><a name="option"></a><span class='hs-definition'>option</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-21"></a><a name="option"></a><span class='hs-definition'>option</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Mode.html 18
-<a name="line-10"></a>    <span class='hs-varid'>parseMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Either</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-10"></a>    <span class='hs-varid'>parseMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>e</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Either</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Mode.html 20
-<a name="line-12"></a>    <span class='hs-varid'>parse</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Either</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-12"></a>    <span class='hs-varid'>parse</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Either</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Mode.html 24
-<a name="line-16"></a>    <span class='hs-varid'>recognizeMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-16"></a>    <span class='hs-varid'>recognizeMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>e</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Mode.html 26
-<a name="line-18"></a>    <span class='hs-varid'>recognize</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-18"></a>    <span class='hs-varid'>recognize</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Mode.html 28
-<a name="line-20"></a>
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 30
-<a name="line-22"></a><a name="eval"></a><span class='hs-definition'>eval</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>e</span>
+<a name="line-22"></a><a name="eval"></a><span class='hs-definition'>eval</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Parsing</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>e</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 41
-<a name="line-33"></a><a name="eval_"></a><span class='hs-definition'>eval_</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-33"></a><a name="eval_"></a><span class='hs-definition'>eval_</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 9
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE KindSignatures, TypeFamilies, GADTs, EmptyDataDecls, FlexibleContexts, FlexibleInstances #-}</span>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE KindSignatures, TypeFamilies, GADTs, EmptyDataDecls, FlexibleContexts, FlexibleInstances, Rank2Types #-}</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 27
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Recognizer</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Parser</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span><span class='hs-layout'>,</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Satisfy</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fmapParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>appParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>satisfy</span><span class='hs-layout'>,</span> <span class='hs-varid'>skip</span> 
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>name</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>labels</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>choice</span> 
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>greedyChoice</span>
-<a name="line-30"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span><span class='hs-layout'>,</span> <span class='hs-varid'>runId</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ignore</span><span class='hs-layout'>)</span>
-<a name="line-35"></a>
-<a name="line-36"></a><a name="Parsing"></a><span class='hs-comment'>-- parsing modes</span>
-<a name="line-37"></a><a name="Parsing"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span>
-<a name="line-38"></a><a name="Recognizing"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="Recognizer"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Parser</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span><span class='hs-layout'>,</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Fun</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fmapParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>pureParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>appParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>satisfy</span><span class='hs-layout'>,</span> <span class='hs-varid'>skip</span> 
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>name</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>labels</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>choice</span> 
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span>
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>greedyChoice</span>
+<a name="line-29"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-30"></a>
+<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span><span class='hs-layout'>,</span> <span class='hs-varid'>arr</span><span class='hs-layout'>)</span>
+<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
+<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
+<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
+<a name="line-38"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
+<a name="line-40"></a><span class='hs-cpp'>#endif</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 50
-<a name="line-42"></a><span class='hs-comment'>-- Parser t a requires Mode t</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-comment'>-- invariants enforced by smart constructors:</span>
+<a name="line-42"></a><a name="Mode"></a><span class='hs-comment'>-- parsing modes</span>
+<a name="line-43"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span>
+<a name="line-44"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 54
-<a name="line-46"></a><span class='hs-comment'>-- a Name never contains a Name directly</span>
-<a name="line-47"></a><span class='hs-comment'>-- a Labels never contain Labels directly</span>
-<a name="line-48"></a><span class='hs-comment'>-- an Alt never contains an Alt directly</span>
-<a name="line-49"></a><span class='hs-comment'>-- a Greedy never contains a Greedy directly</span>
-<a name="line-50"></a><span class='hs-comment'>-- a Skip never contains a Skip transitively</span>
-<a name="line-51"></a>
-<a name="line-52"></a><span class='hs-comment'>-- unenforceable invariants required for the parallel parser</span>
-<a name="line-53"></a><span class='hs-comment'>-- The parse tree is finite</span>
-<a name="line-54"></a>
-<a name="line-55"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
-<a name="line-56"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-57"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-58"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-59"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-60"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-61"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
-<a name="line-62"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-63"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-64"></a>
-<a name="line-65"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>where</span>
-<a name="line-66"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span>   <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-67"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>t</span>    <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-68"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
-<a name="line-69"></a>
-<a name="line-70"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-71"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-72"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-73"></a>    <span class='hs-varid'>satisfy</span>    <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
-<a name="line-74"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
-<a name="line-75"></a>
-<a name="line-76"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-77"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-78"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-79"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
-<a name="line-81"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
-<a name="line-82"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-84"></a>
-<a name="line-85"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
-<a name="line-86"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
-<a name="line-87"></a>
-<a name="line-88"></a><span class='hs-comment'>-- a parser mode that actually parses and retains intermediate results</span>
-<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-90"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Token</span>   <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span>
-<a name="line-91"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span>    <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
-<a name="line-92"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>t</span>
+<a name="line-46"></a><span class='hs-comment'>-- Parser t a requires Mode t</span>
+<a name="line-47"></a>
+<a name="line-48"></a><span class='hs-comment'>-- invariants enforced by smart constructors:</span>
+<a name="line-49"></a>
+<a name="line-50"></a><span class='hs-comment'>-- a Name never contains a Name directly</span>
+<a name="line-51"></a><span class='hs-comment'>-- a Labels never contain Labels directly</span>
+<a name="line-52"></a><span class='hs-comment'>-- an Alt never contains an Alt directly</span>
+<a name="line-53"></a><span class='hs-comment'>-- a Greedy never contains a Greedy directly</span>
+<a name="line-54"></a><span class='hs-comment'>-- a Skip never contains a Skip transitively</span>
+<a name="line-55"></a>
+<a name="line-56"></a><span class='hs-comment'>-- unenforceable invariants required for the parallel parser</span>
+<a name="line-57"></a><span class='hs-comment'>-- The parse tree is finite</span>
+<a name="line-58"></a>
+<a name="line-59"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
+<a name="line-60"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-61"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-62"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-63"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-64"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-65"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-66"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-67"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-68"></a>
+<a name="line-69"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arrow</span> <span class='hs-layout'>(</span><span class='hs-conid'>Fun</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-70"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-71"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-varid'>m</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-72"></a>
+<a name="line-73"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-74"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-75"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-76"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-77"></a>
+<a name="line-78"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-79"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-80"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-81"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-82"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>arr</span> <span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-83"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
+<a name="line-84"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
+<a name="line-85"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
+<a name="line-86"></a>
+<a name="line-87"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
+<a name="line-88"></a>
+<a name="line-89"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
+<a name="line-90"></a>
+<a name="line-91"></a><a name="satisfy"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>t</span>
+<a name="line-92"></a><span class='hs-definition'>satisfy</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 102
-<a name="line-94"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-95"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
-<a name="line-96"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
-<a name="line-97"></a>    <span class='hs-varid'>satisfy</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
+<a name="line-94"></a><span class='hs-comment'>-- a parser mode that actually parses and retains intermediate results</span>
+<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyword'>where</span>
+<a name="line-96"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-97"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Parsing</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 107
-<a name="line-99"></a><span class='hs-comment'>-- the unsafeCoerces below let us retain sharing in a recognizer that we cannot retain in a general parser</span>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-101"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Token</span>   <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span>
-<a name="line-102"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span>    <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ignore</span>
-<a name="line-103"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ignore</span>
-<a name="line-104"></a>
-<a name="line-105"></a>    <span class='hs-varid'>satisfy</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>undefined</span>
-<a name="line-106"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-107"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
-<a name="line-108"></a>
-<a name="line-109"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
-<a name="line-110"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
-<a name="line-111"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
-<a name="line-112"></a>
-<a name="line-113"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span> <span class='hs-keyword'>where</span>
-<a name="line-114"></a>        <span class='hs-comment'>-- force sharing of all epsilon </span>
-<a name="line-115"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-conid'>()</span>
-<a name="line-116"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span>
-<a name="line-117"></a>
-<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
-<a name="line-120"></a>
-<a name="line-121"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-122"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
-<a name="line-123"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
-<a name="line-124"></a>
-<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-126"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
-<a name="line-127"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-128"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-129"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-130"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-131"></a>
-<a name="line-132"></a><span class='hs-comment'>-- optimized versions of &lt;$, *&gt; and &lt;*</span>
+<a name="line-99"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-100"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-101"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
+<a name="line-102"></a>
+<a name="line-103"></a><span class='hs-comment'>-- the unsafeCoerces below let us retain sharing in a recognizer that we cannot retain in a general parser!</span>
+<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyword'>where</span>
+<a name="line-105"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialApplicative</span>
+<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Fun</span>  <span class='hs-conid'>Recognizing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TrivialArrow</span>
+<a name="line-107"></a>
+<a name="line-108"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-109"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-110"></a>
+<a name="line-111"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
+<a name="line-112"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
+<a name="line-113"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
+<a name="line-114"></a>
+<a name="line-115"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span> <span class='hs-keyword'>where</span>
+<a name="line-116"></a>        <span class='hs-comment'>-- force sharing of all epsilon </span>
+<a name="line-117"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Magic</span> <span class='hs-conid'>()</span>
+<a name="line-118"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span>
+<a name="line-119"></a>
+<a name="line-120"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-121"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
+<a name="line-122"></a>
+<a name="line-123"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-124"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
+<a name="line-125"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
+<a name="line-126"></a>
+<a name="line-127"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-128"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
+<a name="line-129"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-130"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-131"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-132"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 142
-<a name="line-134"></a><a name="<<$"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-135"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
-<a name="line-136"></a>
-<a name="line-137"></a><a name="*>>"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
-<a name="line-138"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
-<a name="line-139"></a>
-<a name="line-140"></a><a name="<<*"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-141"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
+<a name="line-134"></a><span class='hs-comment'>-- | optimized version of '(&lt;$)'</span>
+<a name="line-135"></a>
+<a name="line-136"></a><a name="<<$"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-137"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
+<a name="line-138"></a>
+<a name="line-139"></a><a name="*>>"></a><span class='hs-comment'>-- | optimized version of '(*&gt;)'</span>
+<a name="line-140"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-141"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 151
-<a name="line-143"></a><a name="name"></a><span class='hs-comment'>-- smart constructors fuse away trivial local optimizations</span>
-<a name="line-144"></a><span class='hs-definition'>name</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-145"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
-<a name="line-146"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
-<a name="line-147"></a>
-<a name="line-148"></a><a name="labels"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-149"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
-<a name="line-150"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> 
+<a name="line-143"></a><a name="<<*"></a><span class='hs-comment'>-- | optimized version of '(&lt;&lt;*)'</span>
+<a name="line-144"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-145"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
+<a name="line-146"></a>
+<a name="line-147"></a><a name="name"></a><span class='hs-comment'>-- smart constructors fuse away trivial local optimizations</span>
+<a name="line-148"></a><span class='hs-definition'>name</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-149"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
+<a name="line-150"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 160
-<a name="line-152"></a><a name="<?>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-153"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span> <span class='hs-varid'>p</span>
-<a name="line-154"></a>
-<a name="line-155"></a><a name="choice"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-156"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
-<a name="line-157"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
-<a name="line-158"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
-<a name="line-159"></a>
-<a name="line-160"></a><a name="<<|>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
-<a name="line-161"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-162"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-163"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
-<a name="line-164"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-165"></a>
-<a name="line-166"></a><a name="greedyChoice"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
-<a name="line-167"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
-<a name="line-168"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
-<a name="line-169"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-152"></a><a name="labels"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-153"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
+<a name="line-154"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> 
+<a name="line-155"></a>
+<a name="line-156"></a><a name="<?>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-157"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span> <span class='hs-varid'>p</span>
+<a name="line-158"></a>
+<a name="line-159"></a><a name="choice"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-160"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-161"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-162"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-163"></a>
+<a name="line-164"></a><a name="<<|>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-165"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-166"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-167"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-168"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-169"></a>
+<a name="line-170"></a><a name="greedyChoice"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-171"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-172"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-173"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-174"></a>
+<a name="line-175"></a><span class='hs-cpp'>#ifdef X_OverloadedStrings</span>
+<a name="line-176"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-conid'>String</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-177"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>x</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-178"></a><span class='hs-cpp'>#endif</span>
+<a name="line-179"></a>
hunk ./doc/html/parsimony/src/Text-Parsimony-Util.html 24
-<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Ignore</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Id</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Magic</span>
-<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-22"></a>
-<a name="line-23"></a><a name="Magic"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Magic</span>
-<a name="line-24"></a>
-<a name="line-25"></a><a name="Ignore"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Ignore</span> <span class='hs-varid'>a</span> 
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Ignore</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Ignore</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-30"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-<a name="line-31"></a>
-<a name="line-32"></a><a name="Id"></a><span class='hs-comment'>-- Control.Monad.Identity may lacks an Applicative definition by default</span>
-<a name="line-33"></a><a name="Id"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runId</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
-<a name="line-38"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
-<a name="line-39"></a>    <span class='hs-conid'>Id</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>TrivialApplicative</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>TrivialArrow</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Id</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Magic</span>
+<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-21"></a>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Arrow</span>
+<a name="line-25"></a>
+<a name="line-26"></a><a name="TrivialApplicative"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-varid'>a</span> 
+<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-keyword'>where</span>
+<a name="line-28"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>TrivialApplicative</span> <span class='hs-keyword'>where</span>
+<a name="line-30"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-31"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-32"></a>
+<a name="line-33"></a><a name="TrivialArrow"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span>
+<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>TrivialArrow</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-35"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-keyword'>where</span>
+<a name="line-37"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-38"></a>    <span class='hs-varid'>id</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arrow</span> <span class='hs-conid'>TrivialArrow</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-varid'>arr</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-41"></a>    <span class='hs-varid'>first</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-42"></a>
+<a name="line-43"></a><a name="Id"></a><span class='hs-comment'>-- Control.Monad.Identity may lacks an Applicative definition by default</span>
+<a name="line-44"></a><a name="Id"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runId</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
+<a name="line-46"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-47"></a>
+<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
+<a name="line-49"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-50"></a>    <span class='hs-conid'>Id</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-comment'>-- place holder used when we need a typing dodge</span>
+<a name="line-53"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Magic</span>
hunk ./doc/html/parsimony/src/Text-Parsimony.html 26
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Mode</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Mode</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
}
