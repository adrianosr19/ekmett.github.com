[initialized
ekmett@gmail.com**20090504013928
 Ignore-this: bb0c89f3218ef5db33ec76ebf22abe68
] {
adddir ./doc
adddir ./doc/html
adddir ./doc/html/parsimony
addfile ./doc/html/parsimony/Text-Parsimony-Char.html
hunk ./doc/html/parsimony/Text-Parsimony-Char.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Char</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Char.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Char</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Achar"
+></A
+><B
+>char</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#char"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Atab"
+></A
+><B
+>tab</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#tab"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aspace"
+></A
+><B
+>space</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#space"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aspaces"
+></A
+><B
+>spaces</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#spaces"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Alower"
+></A
+><B
+>lower</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#lower"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aupper"
+></A
+><B
+>upper</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#upper"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AalphaNum"
+></A
+><B
+>alphaNum</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#alphaNum"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aletter"
+></A
+><B
+>letter</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#letter"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AhexDigit"
+></A
+><B
+>hexDigit</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#hexDigit"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AoctDigit"
+></A
+><B
+>octDigit</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#octDigit"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AanyChar"
+></A
+><B
+>anyChar</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#anyChar"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Astring"
+></A
+><B
+>string</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t, <A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Char.html#string"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-Combinators.html
hunk ./doc/html/parsimony/Text-Parsimony-Combinators.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Combinators</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Combinators.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Combinators</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AoneOf"
+></A
+><B
+>oneOf</B
+> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t), <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t) =&gt; [<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#oneOf"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AnoneOf"
+></A
+><B
+>noneOf</B
+> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t), <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t) =&gt; [<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#noneOf"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AanyToken"
+></A
+><B
+>anyToken</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#anyToken"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aoption"
+></A
+><B
+>option</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Combinators.html#option"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-Error.html
hunk ./doc/html/parsimony/Text-Parsimony-Error.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Error</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Error.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Error</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>portable</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>provisional</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>As per <A HREF="Text-Parsec-Errors.html"
+>Text.Parsec.Errors</A
+> except with monoidal source position information
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3AMessage"
+>Message</A
+>  </TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>= <A HREF="#v%3ASysUnExpect"
+>SysUnExpect</A
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>| <A HREF="#v%3AUnExpect"
+>UnExpect</A
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>| <A HREF="#v%3AExpect"
+>Expect</A
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>| <A HREF="#v%3AMessage"
+>Message</A
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmessageString"
+>messageString</A
+> :: <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AerrorPosition"
+>errorPosition</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; SourcePosition f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AerrorMessages"
+>errorMessages</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; [<A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+>]</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AerrorIsUnknown"
+>errorIsUnknown</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AshowErrorMessages"
+>showErrorMessages</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; [<A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+>] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AnewErrorMessage"
+>newErrorMessage</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AnewErrorUnknown"
+>newErrorUnknown</A
+> ::  SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AaddErrorMessage"
+>addErrorMessage</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AsetErrorPosition"
+>setErrorPosition</A
+> ::  SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AsetErrorMessage"
+>setErrorMessage</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AprependErrorPosition"
+>prependErrorPosition</A
+> ::  SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmergeError"
+>mergeError</A
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AMessage"
+></A
+><B
+>Message</B
+>  </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#Message"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+><P
+>This abstract data type represents parse error messages. There are
+ four kinds of messages:
+</P
+><PRE
+>  data Message = SysUnExpect String
+               | UnExpect String
+               | Expect String
+               | Message String
+</PRE
+><P
+>The fine distinction between different kinds of parse errors allows
+ the system to generate quite good error messages for the user. It
+ also allows error messages that are formatted in different
+ languages. Each kind of message is generated by different combinators:
+</P
+><UL
+><LI
+> A <TT
+><A HREF="Text-Parsimony-Error.html#v%3ASysUnExpect"
+>SysUnExpect</A
+></TT
+> message is automatically generated by the
+       Text.Parsec.Combinator.satisfy combinator. The argument is the
+       unexpected input.
+</LI
+><LI
+> A <TT
+><A HREF="Text-Parsimony-Error.html#v%3AUnExpect"
+>UnExpect</A
+></TT
+> message is generated by the Text.Parsec.Prim.unexpected
+       combinator. The argument describes the
+       unexpected item.
+</LI
+><LI
+> A <TT
+><A HREF="Text-Parsimony-Error.html#v%3AExpect"
+>Expect</A
+></TT
+> message is generated by the Text.Parsec.Prim.&lt;?&gt;
+       combinator. The argument describes the expected item.
+</LI
+><LI
+> A <TT
+><A HREF="Text-Parsimony-Error.html#v%3AMessage"
+>Message</A
+></TT
+> message is generated by the <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#v%3Afail"
+>fail</A
+></TT
+>
+       combinator. The argument is some general parser message. 
+</LI
+></UL
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ASysUnExpect"
+></A
+><B
+>SysUnExpect</B
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AUnExpect"
+></A
+><B
+>UnExpect</B
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AExpect"
+></A
+><B
+>Expect</B
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMessage"
+></A
+><B
+>Message</B
+> !<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Message')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Message" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AEnum"
+>Enum</A
+> <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+></TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmessageString"
+></A
+><B
+>messageString</B
+> :: <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#messageString"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Extract the message string from an error message 
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AParseError"
+></A
+><B
+>ParseError</B
+> f </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#ParseError"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The abstract data type <TT
+>ParseError</TT
+> represents parse errors. It
+ provides the source position (<TT
+>SourcePosition</TT
+>) of the error
+ and a list of error messages (<TT
+><A HREF="Text-Parsimony-Error.html#v%3AMessage"
+>Message</A
+></TT
+>). A <TT
+>ParseError</TT
+>
+ can be returned by the function Text.Parsimony.Mode.parse. <TT
+>ParseError</TT
+> is an
+ instance of the <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+></TT
+> class, but does not comply with the Haskell convention
+ that Show should yield a valid source code representation.
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:ParseError')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:ParseError" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AerrorPosition"
+></A
+><B
+>errorPosition</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; SourcePosition f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#errorPosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Extracts the source position from the parse error
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AerrorMessages"
+></A
+><B
+>errorMessages</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; [<A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+>]</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#errorMessages"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AerrorIsUnknown"
+></A
+><B
+>errorIsUnknown</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#errorIsUnknown"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AshowErrorMessages"
+></A
+><B
+>showErrorMessages</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; [<A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+>] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#showErrorMessages"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AnewErrorMessage"
+></A
+><B
+>newErrorMessage</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#newErrorMessage"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AnewErrorUnknown"
+></A
+><B
+>newErrorUnknown</B
+> ::  SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#newErrorUnknown"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AaddErrorMessage"
+></A
+><B
+>addErrorMessage</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#addErrorMessage"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AsetErrorPosition"
+></A
+><B
+>setErrorPosition</B
+> ::  SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#setErrorPosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AsetErrorMessage"
+></A
+><B
+>setErrorMessage</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Message</A
+> -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#setErrorMessage"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AprependErrorPosition"
+></A
+><B
+>prependErrorPosition</B
+> ::  SourcePosition f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#prependErrorPosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmergeError"
+></A
+><B
+>mergeError</B
+> ::  <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f -&gt; <A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Error.html#mergeError"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-Mode.html
hunk ./doc/html/parsimony/Text-Parsimony-Mode.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Mode</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Mode.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Mode</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+>  <A NAME="t%3AParseMode"
+></A
+><B
+>ParseMode</B
+> m  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#ParseMode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AparseMap"
+></A
+><B
+>parseMap</B
+> :: (Generator c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f) =&gt; (Elem c -&gt; e) -&gt; (m e `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+>` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> (<A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> file) (f a)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#parseMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aparse"
+></A
+><B
+>parse</B
+> :: (Generator c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f) =&gt; (m (Elem c) `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+>` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
+>Either</A
+> (<A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>ParseError</A
+> file) (f a)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#parse"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+>  <A NAME="t%3ARecognizeMode"
+></A
+><B
+>RecognizeMode</B
+> m  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#RecognizeMode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3ArecognizeMap"
+></A
+><B
+>recognizeMap</B
+> :: Generator c =&gt; (Elem c -&gt; e) -&gt; (m e `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+>` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#recognizeMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Arecognize"
+></A
+><B
+>recognize</B
+> :: Generator c =&gt; (m (Elem c) `<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+>` a) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Mode.html#recognize"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-Parsec.html
hunk ./doc/html/parsimony/Text-Parsimony-Parsec.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Parsec</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Parsec.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Parsec</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>non-portable (type families)</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>A minimalist interpreter that evaluates a Parsimony parser with Parsec
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aeval"
+></A
+><B
+>eval</B
+> :: Stream s m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+>Parsing</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) e -&gt; ParsecT s u m e</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Parsec.html#eval"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aeval_"
+></A
+><B
+>eval_</B
+> :: Stream s m <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>) e -&gt; ParsecT s u m ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Parsec.html#eval_"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-Prim.html
hunk ./doc/html/parsimony/Text-Parsimony-Prim.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Prim</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Prim.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Prim</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>non-portable (type families, GADTs)</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Parallel parser combinators
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AParsing"
+></A
+><B
+>Parsing</B
+> t </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Parsing"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Parsing')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Parsing" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+>Parsing</A
+> t)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3ARecognizing"
+></A
+><B
+>Recognizing</B
+> t </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Recognizing"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Recognizing')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Recognizing" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3ARecognizer"
+></A
+><B
+>Recognizer</B
+> t a = <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t)) a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Recognizer"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AParser"
+></A
+><B
+>Parser</B
+> t a <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Parser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AApp"
+></A
+><B
+>App</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3APure"
+></A
+><B
+>Pure</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3APure"
+>Pure</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AAlt"
+></A
+><B
+>Alt</B
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AGreedy"
+></A
+><B
+>Greedy</B
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ASatisfy"
+></A
+><B
+>Satisfy</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3ASatisfy"
+>Satisfy</A
+> t a -&gt; (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ASkip"
+></A
+><B
+>Skip</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Recognizer</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t ()</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AName"
+></A
+><B
+>Name</B
+> ::  <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ALabels"
+></A
+><B
+>Labels</B
+> ::  [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+>] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Parser')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Parser" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3ASatisfy"
+>Satisfy</A
+> t), <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3APure"
+>Pure</A
+> t)) =&gt; <A NAME="t%3AMode"
+></A
+><B
+>Mode</B
+> t  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Mode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Associated Types</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3AToken"
+></A
+><B
+>Token</B
+> t :: *</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Token"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3APure"
+></A
+><B
+>Pure</B
+> t :: * -&gt; *</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Pure"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3ASatisfy"
+></A
+><B
+>Satisfy</B
+> t :: * -&gt; *</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#Satisfy"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AfmapParser"
+></A
+><B
+>fmapParser</B
+> ::  (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#fmapParser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AappParser"
+></A
+><B
+>appParser</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#appParser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Asatisfy"
+></A
+><B
+>satisfy</B
+> :: (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#satisfy"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Askip"
+></A
+><B
+>skip</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Recognizer</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#skip"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Mode')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Mode" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Recognizing</A
+> t)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> (<A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+>Parsing</A
+> t)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AfmapParser"
+></A
+><B
+>fmapParser</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#fmapParser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AappParser"
+></A
+><B
+>appParser</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (a -&gt; b) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#appParser"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Asatisfy"
+></A
+><B
+>satisfy</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t (<A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Token</A
+> t)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#satisfy"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Askip"
+></A
+><B
+>skip</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Recognizer</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#skip"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3A%3C%3C%24"
+></A
+><B
+>(&lt;&lt;$)</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Recognizer</A
+> t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3C%24"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3A%2A%3E%3E"
+></A
+><B
+>(*&gt;&gt;)</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Recognizer</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t b</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%2A%3E%3E"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3A%3C%3C%2A"
+></A
+><B
+>(&lt;&lt;*)</B
+> :: <A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Mode</A
+> t =&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Recognizer</A
+> t b -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3C%2A"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aname"
+></A
+><B
+>name</B
+> ::  <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#name"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Alabels"
+></A
+><B
+>labels</B
+> ::  [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+>] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#labels"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3A%3C%3F%3E"
+></A
+><B
+>(&lt;?&gt;)</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3F%3E"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Achoice"
+></A
+><B
+>choice</B
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#choice"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3A%3C%3C%7C%3E"
+></A
+><B
+>(&lt;&lt;|&gt;)</B
+> ::  <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#%3C%3C%7C%3E"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AgreedyChoice"
+></A
+><B
+>greedyChoice</B
+> ::  [<A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a] -&gt; <A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Parser</A
+> t a</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Prim.html#greedyChoice"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-StableMap.html
hunk ./doc/html/parsimony/Text-Parsimony-StableMap.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.StableMap</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-StableMap.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.StableMap</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AStableMap"
+></A
+><B
+>StableMap</B
+> f </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#StableMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aempty"
+></A
+><B
+>empty</B
+> ::  <A HREF="Text-Parsimony-StableMap.html#t%3AStableMap"
+>StableMap</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#empty"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Ainsert"
+></A
+><B
+>insert</B
+> ::  <A HREF="/usr/local/share/doc/ghc/libraries/base/System-Mem-StableName.html#t%3AStableName"
+>StableName</A
+> a -&gt; f a -&gt; <A HREF="Text-Parsimony-StableMap.html#t%3AStableMap"
+>StableMap</A
+> f -&gt; <A HREF="Text-Parsimony-StableMap.html#t%3AStableMap"
+>StableMap</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#insert"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Alookup"
+></A
+><B
+>lookup</B
+> ::  <A HREF="/usr/local/share/doc/ghc/libraries/base/System-Mem-StableName.html#t%3AStableName"
+>StableName</A
+> a -&gt; <A HREF="Text-Parsimony-StableMap.html#t%3AStableMap"
+>StableMap</A
+> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> (f a)</TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-StableMap.html#lookup"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony-Util.html
hunk ./doc/html/parsimony/Text-Parsimony-Util.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony.Util</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony-Util.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony.Util</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>non-portable (type families, GADTs)</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Miscellaneous data types used by the rest of Parsimony.
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AIgnore"
+></A
+><B
+>Ignore</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#Ignore"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Ignore')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Ignore" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Text-Parsimony-Util.html#t%3AIgnore"
+>Ignore</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> <A HREF="Text-Parsimony-Util.html#t%3AIgnore"
+>Ignore</A
+></TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AId"
+></A
+><B
+>Id</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#Id"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AId"
+></A
+><B
+>Id</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ArunId"
+></A
+><B
+>runId</B
+> :: a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Id')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Id" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Text-Parsimony-Util.html#t%3AId"
+>Id</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> <A HREF="Text-Parsimony-Util.html#t%3AId"
+>Id</A
+></TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AMagic"
+></A
+><B
+>Magic</B
+>  </TD
+><TD CLASS="declbut"
+><A HREF="src/Text-Parsimony-Util.html#Magic"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/Text-Parsimony.html
hunk ./doc/html/parsimony/Text-Parsimony.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Text.Parsimony</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="src/Text-Parsimony.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Text.Parsimony</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>non-portable (type families, GADTs)</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Parallel parser combinators
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Text-Parsimony-Char.html"
+>Text.Parsimony.Char</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Text-Parsimony-Error.html"
+>Text.Parsimony.Error</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Text-Parsimony-Mode.html"
+>Text.Parsimony.Mode</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Text-Parsimony-Parsec.html"
+>Text.Parsimony.Parsec</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Text-Parsimony-Prim.html"
+>Text.Parsimony.Prim</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/doc-index.html
hunk ./doc/html/parsimony/doc-index.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages (Index)</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD COLSPAN="2" STYLE="padding-top:5px;"
+><FORM onsubmit="full_search(); return false;" ACTION=""
+>Search: <INPUT ID="searchbox" onkeyup="quick_search()"
+> <INPUT VALUE="Search" TYPE="submit"
+> <SPAN ID="searchmsg"
+> </SPAN
+></FORM
+></TD
+></TR
+><TR
+><TD
+><TABLE ID="indexlist" CELLPADDING="0" CELLSPACING="5"
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>*&gt;&gt;</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3A%2A%3E%3E"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&lt;&lt;$</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3A%3C%3C%24"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&lt;&lt;*</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3A%3C%3C%2A"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&lt;&lt;|&gt;</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3A%3C%3C%7C%3E"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&lt;?&gt;</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3A%3C%3F%3E"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>addErrorMessage</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AaddErrorMessage"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>alphaNum</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3AalphaNum"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Alt</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AAlt"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>anyChar</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3AanyChar"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>anyToken</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Combinators.html#v%3AanyToken"
+>Text.Parsimony.Combinators</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>App</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AApp"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>appParser</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AappParser"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>char</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Achar"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>choice</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3Achoice"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>empty</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-StableMap.html#v%3Aempty"
+>Text.Parsimony.StableMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>errorIsUnknown</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AerrorIsUnknown"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>errorMessages</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AerrorMessages"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>errorPosition</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AerrorPosition"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>eval</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Parsec.html#v%3Aeval"
+>Text.Parsimony.Parsec</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>eval_</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Parsec.html#v%3Aeval_"
+>Text.Parsimony.Parsec</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Expect</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AExpect"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>fmapParser</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AfmapParser"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Greedy</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AGreedy"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>greedyChoice</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AgreedyChoice"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>hexDigit</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3AhexDigit"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Id</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Util.html#t%3AId"
+>Text.Parsimony.Util</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Util.html#v%3AId"
+>Text.Parsimony.Util</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Ignore</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Util.html#t%3AIgnore"
+>Text.Parsimony.Util</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>insert</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-StableMap.html#v%3Ainsert"
+>Text.Parsimony.StableMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Labels</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3ALabels"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>labels</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3Alabels"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>letter</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Aletter"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>lookup</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-StableMap.html#v%3Alookup"
+>Text.Parsimony.StableMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>lower</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Alower"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Magic</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Util.html#t%3AMagic"
+>Text.Parsimony.Util</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mergeError</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AmergeError"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Message</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#t%3AMessage"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AMessage"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>messageString</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AmessageString"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Mode</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3AMode"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Name</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3AName"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>name</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3Aname"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>newErrorMessage</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AnewErrorMessage"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>newErrorUnknown</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AnewErrorUnknown"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>noneOf</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Combinators.html#v%3AnoneOf"
+>Text.Parsimony.Combinators</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>octDigit</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3AoctDigit"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>oneOf</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Combinators.html#v%3AoneOf"
+>Text.Parsimony.Combinators</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>option</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Combinators.html#v%3Aoption"
+>Text.Parsimony.Combinators</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>parse</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Mode.html#v%3Aparse"
+>Text.Parsimony.Mode</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>ParseError</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#t%3AParseError"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>parseMap</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Mode.html#v%3AparseMap"
+>Text.Parsimony.Mode</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>ParseMode</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Mode.html#t%3AParseMode"
+>Text.Parsimony.Mode</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Parser</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3AParser"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Parsing</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3AParsing"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>prependErrorPosition</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AprependErrorPosition"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Pure</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3APure"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3APure"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>recognize</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Mode.html#v%3Arecognize"
+>Text.Parsimony.Mode</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>recognizeMap</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Mode.html#v%3ArecognizeMap"
+>Text.Parsimony.Mode</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>RecognizeMode</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Mode.html#t%3ARecognizeMode"
+>Text.Parsimony.Mode</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Recognizer</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3ARecognizer"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Recognizing</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3ARecognizing"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runId</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Util.html#v%3ArunId"
+>Text.Parsimony.Util</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Satisfy</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3ASatisfy"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3ASatisfy"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>satisfy</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3Asatisfy"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>setErrorMessage</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AsetErrorMessage"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>setErrorPosition</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AsetErrorPosition"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>showErrorMessages</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AshowErrorMessages"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Skip</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3ASkip"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>skip</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#v%3Askip"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>space</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Aspace"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>spaces</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Aspaces"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>StableMap</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-StableMap.html#t%3AStableMap"
+>Text.Parsimony.StableMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>string</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Astring"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>SysUnExpect</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3ASysUnExpect"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>tab</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Atab"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Token</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Prim.html#t%3AToken"
+>Text.Parsimony.Prim</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>UnExpect</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Error.html#v%3AUnExpect"
+>Text.Parsimony.Error</A
+>, Text.Parsimony</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>upper</TD
+><TD CLASS="indexlinks"
+><A HREF="Text-Parsimony-Char.html#v%3Aupper"
+>Text.Parsimony.Char</A
+>, Text.Parsimony</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/haddock-util.js
hunk ./doc/html/parsimony/haddock-util.js 1
+// Haddock JavaScript utilities
+function toggle(button,id)
+{
+   var n = document.getElementById(id).style;
+   if (n.display == "none")
+   {
+    button.src = "minus.gif";
+    n.display = "block";
+   }
+   else
+   {
+    button.src = "plus.gif";
+    n.display = "none";
+   }
+}
+
+
+var max_results = 75; // 50 is not enough to search for map in the base libraries
+var shown_range = null;
+var last_search = null;
+
+function quick_search()
+{
+    perform_search(false);
+}
+
+function full_search()
+{
+    perform_search(true);
+}
+
+
+function perform_search(full)
+{
+    var text = document.getElementById("searchbox").value.toLowerCase();
+    if (text == last_search && !full) return;
+    last_search = text;
+    
+    var table = document.getElementById("indexlist");
+    var status = document.getElementById("searchmsg");
+    var children = table.firstChild.childNodes;
+    
+    // first figure out the first node with the prefix
+    var first = bisect(-1);
+    var last = (first == -1 ? -1 : bisect(1));
+
+    if (first == -1)
+    {
+        table.className = "";
+        status.innerHTML = "No results found, displaying all";
+    }
+    else if (first == 0 && last == children.length - 1)
+    {
+        table.className = "";
+        status.innerHTML = "";
+    }
+    else if (last - first >= max_results && !full)
+    {
+        table.className = "";
+        status.innerHTML = "More than " + max_results + ", press Search to display";
+    }
+    else
+    {
+        // decide what you need to clear/show
+        if (shown_range)
+            setclass(shown_range[0], shown_range[1], "indexrow");
+        setclass(first, last, "indexshow");
+        shown_range = [first, last];
+        table.className = "indexsearch";
+        status.innerHTML = "";
+    }
+
+    
+    function setclass(first, last, status)
+    {
+        for (var i = first; i <= last; i++)
+        {
+            children[i].className = status;
+        }
+    }
+    
+    
+    // do a binary search, treating 0 as ...
+    // return either -1 (no 0's found) or location of most far match
+    function bisect(dir)
+    {
+        var first = 0, finish = children.length - 1;
+        var mid, success = false;
+
+        while (finish - first > 3)
+        {
+            mid = Math.floor((finish + first) / 2);
+
+            var i = checkitem(mid);
+            if (i == 0) i = dir;
+            if (i == -1)
+                finish = mid;
+            else
+                first = mid;
+        }
+        var a = (dir == 1 ? first : finish);
+        var b = (dir == 1 ? finish : first);
+        for (var i = b; i != a - dir; i -= dir)
+        {
+            if (checkitem(i) == 0) return i;
+        }
+        return -1;
+    }    
+    
+    
+    // from an index, decide what the result is
+    // 0 = match, -1 is lower, 1 is higher
+    function checkitem(i)
+    {
+        var s = getitem(i).toLowerCase().substr(0, text.length);
+        if (s == text) return 0;
+        else return (s > text ? -1 : 1);
+    }
+    
+    
+    // from an index, get its string
+    // this abstracts over alternates
+    function getitem(i)
+    {
+        for ( ; i >= 0; i--)
+        {
+            var s = children[i].firstChild.firstChild.data;
+            if (s.indexOf(' ') == -1)
+                return s;
+        }
+        return ""; // should never be reached
+    }
+}
addfile ./doc/html/parsimony/haddock.css
hunk ./doc/html/parsimony/haddock.css 1
+/* -------- Global things --------- */
+
+BODY { 
+  background-color: #ffffff;
+  color: #000000;
+  font-family: sans-serif;
+  } 
+
+A:link    { color: #0000e0; text-decoration: none }
+A:visited { color: #0000a0; text-decoration: none }
+A:hover   { background-color: #e0e0ff; text-decoration: none }
+
+TABLE.vanilla {
+  width: 100%;
+  border-width: 0px;
+  /* I can't seem to specify cellspacing or cellpadding properly using CSS... */
+}
+
+TABLE.vanilla2 {
+  border-width: 0px;
+}
+
+/* <TT> font is a little too small in MSIE */
+TT  { font-size: 100%; }
+PRE { font-size: 100%; }
+
+LI P { margin: 0pt } 
+
+TD {
+  border-width: 0px;
+}
+
+TABLE.narrow {
+  border-width: 0px;
+}
+
+TD.s8  {  height: 8px;  }
+TD.s15 {  height: 15px; }
+
+SPAN.keyword { text-decoration: underline; }
+
+/* Resize the buttom image to match the text size */
+IMG.coll { width : 0.75em; height: 0.75em; margin-bottom: 0; margin-right: 0.5em }
+
+/* --------- Contents page ---------- */
+
+DIV.node {
+  padding-left: 3em;
+}
+
+DIV.cnode {
+  padding-left: 1.75em;
+}
+
+SPAN.pkg {
+  position: absolute;
+  left: 50em;
+}
+
+/* --------- Documentation elements ---------- */
+
+TD.children {
+  padding-left: 25px;
+  }
+
+TD.synopsis {
+  padding: 2px;
+  background-color: #f0f0f0;
+  font-family: monospace
+ }
+
+TD.decl { 
+  padding: 2px;
+  background-color: #f0f0f0; 
+  font-family: monospace;
+  vertical-align: top;
+  }
+
+TD.topdecl {
+  padding: 2px;
+  background-color: #f0f0f0;
+  font-family: monospace;
+  vertical-align: top;
+}
+
+TABLE.declbar {
+  border-spacing: 0px;
+ }
+
+TD.declname {
+  width: 100%;
+ }
+
+TD.declbut {
+  padding-left: 5px;
+  padding-right: 5px;
+  border-left-width: 1px;
+  border-left-color: #000099;
+  border-left-style: solid;
+  white-space: nowrap;
+  font-size: small;
+ }
+
+/* 
+  arg is just like decl, except that wrapping is not allowed.  It is
+  used for function and constructor arguments which have a text box
+  to the right, where if wrapping is allowed the text box squashes up
+  the declaration by wrapping it.
+*/
+TD.arg { 
+  padding: 2px;
+  background-color: #f0f0f0; 
+  font-family: monospace;
+  vertical-align: top;
+  white-space: nowrap;
+  }
+
+TD.recfield { padding-left: 20px }
+
+TD.doc  { 
+  padding-top: 2px;
+  padding-left: 10px;
+  }
+
+TD.ndoc  { 
+  padding: 2px;
+  }
+
+TD.rdoc  { 
+  padding: 2px;
+  padding-left: 10px;
+  width: 100%;
+  }
+
+TD.body  { 
+  padding-left: 10px
+  }
+
+TD.pkg {
+  width: 100%;
+  padding-left: 10px
+}
+
+TABLE.indexsearch TR.indexrow {
+  display: none;
+}
+TABLE.indexsearch TR.indexshow {
+  display: table-row;
+}
+
+TD.indexentry {
+  vertical-align: top;
+  padding-right: 10px
+  }
+
+TD.indexannot {
+  vertical-align: top;
+  padding-left: 20px;
+  white-space: nowrap
+  }
+
+TD.indexlinks {
+  width: 100%
+  }
+
+/* ------- Section Headings ------- */
+
+TD.section1 {
+  padding-top: 15px;
+  font-weight: bold;
+  font-size: 150%
+  }
+
+TD.section2 {
+  padding-top: 10px;
+  font-weight: bold;
+  font-size: 130%
+  }
+
+TD.section3 {
+  padding-top: 5px;
+  font-weight: bold;
+  font-size: 110%
+  }
+
+TD.section4 {
+  font-weight: bold;
+  font-size: 100%
+  }
+
+/* -------------- The title bar at the top of the page */
+
+TD.infohead {
+  color: #ffffff;
+  font-weight: bold;
+  padding-right: 10px;
+  text-align: left;
+}
+
+TD.infoval {
+  color: #ffffff;
+  padding-right: 10px;
+  text-align: left;
+}
+
+TD.topbar {
+  background-color: #000099;
+  padding: 5px;
+}
+
+TD.title {
+  color: #ffffff;
+  padding-left: 10px;
+  width: 100%
+  }
+
+TD.topbut {
+  padding-left: 5px;
+  padding-right: 5px;
+  border-left-width: 1px;
+  border-left-color: #ffffff;
+  border-left-style: solid;
+  white-space: nowrap;
+  }
+
+TD.topbut A:link {
+  color: #ffffff
+  }
+
+TD.topbut A:visited {
+  color: #ffff00
+  }
+
+TD.topbut A:hover {
+  background-color: #6060ff;
+  }
+
+TD.topbut:hover {
+  background-color: #6060ff
+  }
+
+TD.modulebar { 
+  background-color: #0077dd;
+  padding: 5px;
+  border-top-width: 1px;
+  border-top-color: #ffffff;
+  border-top-style: solid;
+  }
+
+/* --------- The page footer --------- */
+
+TD.botbar {
+  background-color: #000099;
+  color: #ffffff;
+  padding: 5px
+  }
+TD.botbar A:link {
+  color: #ffffff;
+  text-decoration: underline
+  }
+TD.botbar A:visited {
+  color: #ffff00
+  }
+TD.botbar A:hover {
+  background-color: #6060ff
+  }
+
addfile ./doc/html/parsimony/haskell_icon.gif
binary ./doc/html/parsimony/haskell_icon.gif
oldhex
*
newhex
*47494638376110001000f70f00000000800000008000808000000080800080008080c0c0c08080
*80ff000000ff00ffff000000ffff00ff00ffffffffff0000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*0021f90401000000002c000000001000100007086c0001007840b0a0418202073e38b0b021c387
*07143e2440c0a143040e091cd0787021c686151f84347800e343901d4b12646870e44a930d0952
*3ca832a6cc990555b2bc2992e4c79d3847ea2c88b3a7c89a2c8b8aa43874e941a60810003840b5
*aa55aa511346ddca75abc080003b
addfile ./doc/html/parsimony/index.html
hunk ./doc/html/parsimony/index.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>parsimony-0.0.1: Monoidal parser combinators for parallel parsing of context-free languages</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Monoidal parser combinators for parallel parsing of context-free languages
+</TD
+></TR
+><TR
+><TD CLASS="section1"
+>Modules</TD
+></TR
+><TR
+><TD
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD STYLE="width: 50em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:0')" ALT="show/hide"
+>Text</TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:0" STYLE="display:block;"
+><TR
+><TD STYLE="width: 48em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:1')" ALT="show/hide"
+><A HREF="Text-Parsimony.html"
+>Text.Parsimony</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Char.html"
+>Text.Parsimony.Char</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Combinators.html"
+>Text.Parsimony.Combinators</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Error.html"
+>Text.Parsimony.Error</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Mode.html"
+>Text.Parsimony.Mode</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Parsec.html"
+>Text.Parsimony.Parsec</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Prim.html"
+>Text.Parsimony.Prim</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-StableMap.html"
+>Text.Parsimony.StableMap</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Text-Parsimony-Util.html"
+>Text.Parsimony.Util</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./doc/html/parsimony/minus.gif
binary ./doc/html/parsimony/minus.gif
oldhex
*
newhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002118c8f
*a00bc6eb5e0b40583b6596f1a11f14003b
addfile ./doc/html/parsimony/parsimony.haddock
binary ./doc/html/parsimony/parsimony.haddock
oldhex
*
newhex
*0d0cface0004000000000000344d0000000000002c2a5000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000300000000
*000000140000000000000000000000000000000300000000000000150000000000000000000000
*000000000300000000000000160000000000000000000000000000000300000000000000170000
*000000000000000000000000000300000000000000180000000000000000000000000000000300
*0000000000001900000000000000000000000000000003000000000000001a0000000000000000
*0000000000000003000000000000001b0000000000000000000000000000000300000000000000
*1c00000000000000000000000000000003000000000000001d0000000000000000000000000000
*0003000000000000001e00000000000000000000000000000003000000000000001f0000000000
*000000000000000000000300000000000000200000000000000000000000000000000300000000
*000000210000000000000000000000000000000300000000000000220000000000000000000000
*000000000300000000000000230000000000000000000000000000000300000000000000240000
*000000000000000000000000000300000000000000250000000000000000000000000000000300
*000000000000260000000000000000000000000000000400000000000000270000000000000000
*000000000000000400000000000000280000000000000000000000000000000400000000000000
*2900000000000000000000000000000004000000000000002a0000000000000000000000000000
*0004000000000000002b00000000000000000000000000000004000000000000002c0000000000
*0000000000000000000004000000000000002d0000000000000000000000000000000400000000
*0000002e00000000000000000000000000000004000000000000002f0000000000000000000000
*000000000400000000000000300000000000000000000000000000000400000000000000310000
*000000000000000000000000000400000000000000320000000000000000000000000000000400
*000000000000330000000000000000000000000000000400000000000000340000000000000000
*000000000000000400000000000000350000000000000000000000000000000400000000000000
*360000000000000000000000000000000400000000000000370000000000000000000000000000
*000400000000000000380000000000000000000000000000000500000000000000390000000000
*0000000000000000000005000000000000003a0000000000000000000000000000000500000000
*0000003b00000000000000000000000000000005000000000000003c0000000000000000000000
*0000000005000000000000003d00000000000000000000000000000005000000000000003e0000
*0000000000000000000000000006000000000000003f0000000000000000000000000000000600
*000000000000400000000000000000000000000000000600000000000000410000000000000000
*000000000000000600000000000000420000000000000000000000000000000700000000000000
*430000000000000000000000000000000700000000000000440000000000000000000000000000
*000700000000000000450000000000000000000000000000000700000000000000460000000000
*000000000000000000000700000000000000470000000000000000000000000000000700000000
*000000480000000000000000000000000000000700000000000000490000000000000000000000
*0000000007000000000000004a00000000000000000000000000000007000000000000004b0000
*0000000000000000000000000007000000000000004c0000000000000000000000000000000700
*0000000000004d00000000000000000000000000000007000000000000004e0000000000000000
*0000000000000008000000000000004f0000000000000000000000000000000809000000000000
*000000000000000000010001230000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c000000650000002000000028000000740000007900
*000070000000650000002000000066000000610000006d000000690000006c0000006900000065
*000000730000002c00000020000000470000004100000044000000540000007300000029010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c0110000000650000006b0000006d0000006500000074000000740000004000
*0000670000006d00000061000000690000006c0000002e000000630000006f0000006d00050000
*000000000000000000000000000100000000000000020000000000000003000000000000000405
*000000000000000300000000000000000000000000000001000000000000000200000000000000
*040000000000000000000000000000000200000000000400000000000000050000000000000006
*000000000000000700000000000000080400000000000000050000000000000006000000000000
*00070000000000000008000000000000000000000000000000030001230000006e0000006f0000
*006e0000002d000000700000006f000000720000007400000061000000620000006c0000006500
*00002000000028000000740000007900000070000000650000002000000066000000610000006d
*000000690000006c0000006900000065000000730000002c000000200000004700000041000000
*44000000540000007300000029010c000000650000007800000070000000650000007200000069
*0000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d00
*000065000000740000007400000040000000670000006d00000061000000690000006c0000002e
*000000630000006f0000006d001d0000000000000009000000000000000a000000000000000b00
*0000000000000c000000000000000d000000000000000e000000000000000f0000000000000010
*000000000000001100000000000000120000000000000013000000000000001400000000000000
*150000000000000016000000000000001700000000000000180000000000000019000000000000
*001a000000000000001b000000000000001c000000000000001d000000000000001e0000000000
*00001f000000000000002000000000000000210000000000000022000000000000002300000000
*0000002400000000000000251d000000000000001c000000000000001b000000000000001a0000
*000000000011000000000000001200000000000000130000000000000014000000000000001500
*000000000000160000000000000017000000000000001800000000000000190000000000000009
*000000000000000a000000000000000b000000000000000c000000000000000d00000000000000
*0e000000000000000f0000000000000010000000000000001d000000000000001e000000000000
*001f00000000000000200000000000000021000000000000002200000000000000230000000000
*000024000000000000002500000000000000000000000000000004000108000000700000006f00
*0000720000007400000061000000620000006c00000065010b00000070000000720000006f0000
*00760000006900000073000000690000006f0000006e000000610000006c011000000065000000
*6b0000006d00000065000000740000007400000040000000670000006d00000061000000690000
*006c0000002e000000630000006f0000006d040000000000000026030102170000005400000068
*000000650000002000000061000000620000007300000074000000720000006100000063000000
*740000002000000064000000610000007400000061000000200000007400000079000000700000
*0065000000200107020a0000005000000061000000720000007300000065000000450000007200
*0000720000006f0000007201021d00000020000000720000006500000070000000720000006500
*000073000000650000006e00000074000000730000002000000070000000610000007200000073
*00000065000000200000006500000072000000720000006f00000072000000730000002e000000
*2000000049000000740000000a01021f0000002000000070000000720000006f00000076000000
*690000006400000065000000730000002000000074000000680000006500000020000000730000
*006f0000007500000072000000630000006500000020000000700000006f000000730000006900
*000074000000690000006f0000006e000000200000002801040101000000000000005001020f00
*000029000000200000006f00000066000000200000007400000068000000650000002000000065
*00000072000000720000006f000000720000000a01021f00000020000000610000006e00000064
*0000002000000061000000200000006c000000690000007300000074000000200000006f000000
*66000000200000006500000072000000720000006f00000072000000200000006d000000650000
*007300000073000000610000006700000065000000730000002000000028010402000000000000
*000028000000000000000000000000000000040000000000000000270000000000000000000000
*0000000004010205000000290000002e0000002000000041000000200107020a00000050000000
*610000007200000073000000650000004500000072000000720000006f00000072010201000000
*0a0102210000002000000063000000610000006e00000020000000620000006500000020000000
*72000000650000007400000075000000720000006e000000650000006400000020000000620000
*0079000000200000007400000068000000650000002000000066000000750000006e0000006300
*000074000000690000006f0000006e000000200102190000005400000065000000780000007400
*00002e00000050000000610000007200000073000000690000006d0000006f0000006e00000079
*0000002e0000004d0000006f00000064000000650000002e000000700000006100000072000000
*73000000650102020000002e000000200107020a00000050000000610000007200000073000000
*650000004500000072000000720000006f00000072010207000000200000006900000073000000
*20000000610000006e0000000a01021100000020000000690000006e0000007300000074000000
*610000006e0000006300000065000000200000006f000000660000002000000074000000680000
*0065000000200104010000000000000000510000000000000009000000000000000a0102380000
*0020000000630000006c0000006100000073000000730000002c00000020000000620000007500
*00007400000020000000640000006f0000006500000073000000200000006e0000006f00000074
*00000020000000630000006f0000006d000000700000006c000000790000002000000077000000
*690000007400000068000000200000007400000068000000650000002000000048000000610000
*00730000006b000000650000006c0000006c00000020000000630000006f0000006e0000007600
*0000650000006e00000074000000690000006f0000006e0000000a023c00000020000000740000
*006800000061000000740000002000000053000000680000006f00000077000000200000007300
*0000680000006f000000750000006c00000064000000200000007900000069000000650000006c
*0000006400000020000000610000002000000076000000610000006c0000006900000064000000
*20000000730000006f0000007500000072000000630000006500000020000000630000006f0000
*006400000065000000200000007200000065000000700000007200000065000000730000006500
*00006e000000740000006100000074000000690000006f0000006e0000002e0000000a00000000
*000000270103010243000000540000006800000069000000730000002000000061000000620000
*007300000074000000720000006100000063000000740000002000000064000000610000007400
*000061000000200000007400000079000000700000006500000020000000720000006500000070
*000000720000006500000073000000650000006e00000074000000730000002000000070000000
*61000000720000007300000065000000200000006500000072000000720000006f000000720000
*00200000006d000000650000007300000073000000610000006700000065000000730000002e00
*000020000000540000006800000065000000720000006500000020000000610000007200000065
*0000000a021900000020000000660000006f0000007500000072000000200000006b0000006900
*00006e0000006400000073000000200000006f00000066000000200000006d0000006500000073
*00000073000000610000006700000065000000730000003a0000000a010b010224000000200000
*002000000064000000610000007400000061000000200000004d00000065000000730000007300
*0000610000006700000065000000200000003d0000002000000053000000790000007300000055
*0000006e0000004500000078000000700000006500000063000000740000002000000053000000
*7400000072000000690000006e000000670000000a010221000000200000002000000020000000
*200000002000000020000000200000002000000020000000200000002000000020000000200000
*0020000000200000007c00000020000000550000006e0000004500000078000000700000006500
*0000630000007400000020000000530000007400000072000000690000006e000000670000000a
*01021f000000200000002000000020000000200000002000000020000000200000002000000020
*0000002000000020000000200000002000000020000000200000007c0000002000000045000000
*780000007000000065000000630000007400000020000000530000007400000072000000690000
*006e000000670000000a0220000000200000002000000020000000200000002000000020000000
*2000000020000000200000002000000020000000200000002000000020000000200000007c0000
*00200000004d000000650000007300000073000000610000006700000065000000200000005300
*00007400000072000000690000006e000000670000000a01030102440000005400000068000000
*650000002000000066000000690000006e00000065000000200000006400000069000000730000
*0074000000690000006e0000006300000074000000690000006f0000006e000000200000006200
*000065000000740000007700000065000000650000006e00000020000000640000006900000066
*000000660000006500000072000000650000006e00000074000000200000006b00000069000000
*6e0000006400000073000000200000006f00000066000000200000007000000061000000720000
*007300000065000000200000006500000072000000720000006f00000072000000730000002000
*0000610000006c0000006c0000006f00000077000000730000000a010243000000200000007400
*000068000000650000002000000073000000790000007300000074000000650000006d00000020
*000000740000006f0000002000000067000000650000006e000000650000007200000061000000
*740000006500000020000000710000007500000069000000740000006500000020000000670000
*006f0000006f00000064000000200000006500000072000000720000006f000000720000002000
*00006d000000650000007300000073000000610000006700000065000000730000002000000066
*0000006f0000007200000020000000740000006800000065000000200000007500000073000000
*65000000720000002e0000002000000049000000740000000a01023c0000002000000061000000
*6c000000730000006f00000020000000610000006c0000006c0000006f00000077000000730000
*00200000006500000072000000720000006f00000072000000200000006d000000650000007300
*000073000000610000006700000065000000730000002000000074000000680000006100000074
*0000002000000061000000720000006500000020000000660000006f000000720000006d000000
*610000007400000074000000650000006400000020000000690000006e00000020000000640000
*006900000066000000660000006500000072000000650000006e000000740000000a0248000000
*200000006c000000610000006e0000006700000075000000610000006700000065000000730000
*002e0000002000000045000000610000006300000068000000200000006b000000690000006e00
*000064000000200000006f00000066000000200000006d00000065000000730000007300000061
*00000067000000650000002000000069000000730000002000000067000000650000006e000000
*650000007200000061000000740000006500000064000000200000006200000079000000200000
*00640000006900000066000000660000006500000072000000650000006e000000740000002000
*0000630000006f0000006d00000062000000690000006e00000061000000740000006f00000072
*000000730000003a0000000a080403010203000000200000004100000020010401000000000000
*00002b0000000000000000000000000000000401022b000000200000006d000000650000007300
*000073000000610000006700000065000000200000006900000073000000200000006100000075
*000000740000006f0000006d00000061000000740000006900000063000000610000006c000000
*6c000000790000002000000067000000650000006e000000650000007200000061000000740000
*006500000064000000200000006200000079000000200000007400000068000000650000000a01
*02070000002000000020000000200000002000000020000000200000002001021e000000540000
*006500000078000000740000002e00000050000000610000007200000073000000650000006300
*00002e000000430000006f0000006d00000062000000690000006e00000061000000740000006f
*000000720000002e00000073000000610000007400000069000000730000006600000079010221
*00000020000000630000006f0000006d00000062000000690000006e0000006100000074000000
*6f000000720000002e000000200000005400000068000000650000002000000061000000720000
*0067000000750000006d000000650000006e000000740000002000000069000000730000002000
*00007400000068000000650000000a021900000020000000200000002000000020000000200000
*002000000020000000750000006e00000065000000780000007000000065000000630000007400
*0000650000006400000020000000690000006e0000007000000075000000740000002e0000000a
*0301020300000020000000410000002001040100000000000000002a0000000000000000000000
*000000000401021d000000200000006d0000006500000073000000730000006100000067000000
*650000002000000069000000730000002000000067000000650000006e00000065000000720000
*006100000074000000650000006400000020000000620000007900000020000000740000006800
*0000650000002001021b000000540000006500000078000000740000002e000000500000006100
*0000720000007300000065000000630000002e0000005000000072000000690000006d0000002e
*000000750000006e00000065000000780000007000000065000000630000007400000065000000
*640102010000000a01022e00000020000000200000002000000020000000200000002000000020
*000000630000006f0000006d00000062000000690000006e00000061000000740000006f000000
*720000002e00000020000000540000006800000065000000200000006100000072000000670000
*00750000006d000000650000006e00000074000000200000006400000065000000730000006300
*00007200000069000000620000006500000073000000200000007400000068000000650000000a
*021800000020000000200000002000000020000000200000002000000020000000750000006e00
*000065000000780000007000000065000000630000007400000065000000640000002000000069
*00000074000000650000006d0000002e0000000a03010203000000200000004100000020010401
*0000000000000000290000000000000000000000000000000401021d000000200000006d000000
*650000007300000073000000610000006700000065000000200000006900000073000000200000
*0067000000650000006e0000006500000072000000610000007400000065000000640000002000
*000062000000790000002000000074000000680000006500000020010214000000540000006500
*000078000000740000002e0000005000000061000000720000007300000065000000630000002e
*0000005000000072000000690000006d0000002e0000003c0000003f0000003e0102010000000a
*023d00000020000000200000002000000020000000200000002000000020000000630000006f00
*00006d00000062000000690000006e00000061000000740000006f000000720000002e00000020
*00000054000000680000006500000020000000610000007200000067000000750000006d000000
*650000006e00000074000000200000006400000065000000730000006300000072000000690000
*006200000065000000730000002000000074000000680000006500000020000000650000007800
*000070000000650000006300000074000000650000006400000020000000690000007400000065
*0000006d0000002e0000000a030102030000002000000041000000200104020000000000000000
*280000000000000000000000000000000400000000000000002700000000000000000000000000
*00000401021d000000200000006d00000065000000730000007300000061000000670000006500
*00002000000069000000730000002000000067000000650000006e000000650000007200000061
*000000740000006500000064000000200000006200000079000000200000007400000068000000
*65000000200104010000000000000000520000000000000009000000000000000b010201000000
*0a024100000020000000200000002000000020000000200000002000000020000000630000006f
*0000006d00000062000000690000006e00000061000000740000006f000000720000002e000000
*2000000054000000680000006500000020000000610000007200000067000000750000006d0000
*00650000006e0000007400000020000000690000007300000020000000730000006f0000006d00
*0000650000002000000067000000650000006e0000006500000072000000610000006c00000020
*000000700000006100000072000000730000006500000072000000200000006d00000065000000
*73000000730000006100000067000000650000002e000000200000000a000000000000002c0302
*320000004500000078000000740000007200000061000000630000007400000020000000740000
*006800000065000000200000006d00000065000000730000007300000061000000670000006500
*000020000000730000007400000072000000690000006e00000067000000200000006600000072
*0000006f0000006d00000020000000610000006e00000020000000650000007200000072000000
*6f00000072000000200000006d0000006500000073000000730000006100000067000000650000
*00200000000a000000000000002d03023200000045000000780000007400000072000000610000
*006300000074000000730000002000000074000000680000006500000020000000730000006f00
*00007500000072000000630000006500000020000000700000006f000000730000006900000074
*000000690000006f0000006e0000002000000066000000720000006f0000006d00000020000000
*740000006800000065000000200000007000000061000000720000007300000065000000200000
*006500000072000000720000006f000000720000000a1200000000000000260000000000000027
*00000000000000280000000000000029000000000000002a000000000000002b00000000000000
*2c000000000000002d000000000000002e000000000000002f0000000000000030000000000000
*003100000000000000320000000000000033000000000000003400000000000000350000000000
*0000360000000000000037120000000000000027000000000000002b000000000000002a000000
*00000000290000000000000028000000000000002c0000000000000026000000000000002d0000
*00000000002e000000000000002f00000000000000370000000000000031000000000000003000
*000000000000320000000000000033000000000000003500000000000000340000000000000036
*000000000000000000000000000000050000000000060000000000000038000000000000003900
*0000000000003a000000000000003b000000000000003c000000000000003d0600000000000000
*380000000000000039000000000000003a000000000000003b000000000000003c000000000000
*003d00000000000000000000000000000006000000000004000000000000003e00000000000000
*3f0000000000000040000000000000004104000000000000003e000000000000003f0000000000
*00004000000000000000410000000000000000000000000000000700000000000c000000000000
*004200000000000000430000000000000044000000000000004500000000000000460000000000
*00004700000000000000480000000000000049000000000000004a000000000000004b00000000
*0000004c000000000000004d0c0000000000000042000000000000004300000000000000440000
*000000000045000000000000004600000000000000470000000000000048000000000000004900
*0000000000004a000000000000004b000000000000004c000000000000004d0000000000000000
*000000000000000800011c0000006e0000006f0000006e0000002d000000700000006f00000072
*0000007400000061000000620000006c0000006500000020000000280000007400000079000000
*70000000650000002000000066000000610000006d000000690000006c00000069000000650000
*007300000029010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c0110000000650000006b0000006d0000006500000074
*0000007400000040000000670000006d00000061000000690000006c0000002e00000063000000
*6f0000006d0002000000000000004e000000000000004f02000000000000004e00000000000000
*4f0000000000000000000000000000000c0001230000006e0000006f0000006e0000002d000000
*700000006f000000720000007400000061000000620000006c0000006500000020000000280000
*00740000007900000070000000650000002000000066000000610000006d000000690000006c00
*00006900000065000000730000002c000000200000004700000041000000440000005400000073
*00000029010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c0110000000650000006b0000006d00000065000000740000
*007400000040000000670000006d00000061000000690000006c0000002e000000630000006f00
*00006d00430000000000000009000000000000000a000000000000000b000000000000000c0000
*00000000000d000000000000000e000000000000000f0000000000000010000000000000001100
*000000000000120000000000000013000000000000001400000000000000150000000000000016
*000000000000001700000000000000180000000000000019000000000000001a00000000000000
*1b000000000000001c000000000000001d000000000000001e000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000025000000000000002600000000000000270000000000000028000000000000002900000000
*0000002a000000000000002b000000000000002c000000000000002d000000000000002e000000
*000000002f00000000000000300000000000000031000000000000003200000000000000330000
*000000000034000000000000003500000000000000360000000000000037000000000000003800
*00000000000039000000000000003a000000000000003b000000000000003c000000000000003d
*000000000000004200000000000000430000000000000044000000000000004500000000000000
*46000000000000004700000000000000480000000000000049000000000000004a000000000000
*004b000000000000004c000000000000004d000000000000004e000000000000004f0000000000
*000000530000000000000000000000000000000103000000000000000d00000000000000000000
*00000000000101000000000000000d000000000000000000000000000000010000000000000000
*0e0000000000000000000000000000000103000000000000000f00000000000000000000000000
*000001030000000000000010000000000000000000000000000000020300000000000000110000
*000000000000000000000000000200000000000000001200000000000000000000000000000002
*000000000000000013000000000000000000000000000000020000000000000000140000000000
*000000000000000000000303000000000000001500000000000000000000000000000003030000
*000000000016000000000000000000000000000000030300000000000000170000000000000000
*000000000000000303000000000000001800000000000000000000000000000003000000000000
*0000190000000000000000000000000000000300000000000000001a0000000000000000000000
*000000000300000000000000001b0000000000000000000000000000000300000000000000001c
*0000000000000000000000000000000303000000000000001d0000000000000000000000000000
*000301000000000000001e0000000000000000000000000000000301000000000000001f000000
*000000000000000000000000030100000000000000200000000000000000000000000000000301
*000000000000001800000000000000000000000000000003010000000000000021000000000000
*000000000000000000030100000000000000220000000000000000000000000000000301000000
*000000001700000000000000000000000000000003010000000000000023000000000000000000
*000000000000030300000000000000240000000000000000000000000000000303000000000000
*002500000000000000000000000000000003030000000000000026000000000000000000000000
*000000030000000000000000270000000000000000000000000000000300000000000000002800
*000000000000000000000000000003000000000000000029000000000000000000000000000000
*0300000000000000002a0000000000000000000000000000000300000000000000002b00000000
*00000000000000000000000300000000000000002c000000000000000000000000000000030000
*0000000000002d0000000000000000000000000000000300000000000000002e00000000000000
*00000000000000000300000000000000002f000000000000000000000000000000040300000000
*000000300000000000000000000000000000000403000000000000003100000000000000000000
*000000000004010000000000000031000000000000000000000000000000040100000000000000
*320000000000000000000000000000000401000000000000003300000000000000000000000000
*000004010000000000000034000000000000000000000000000000040000000000000000350000
*000000000000000000000000000400000000000000003600000000000000000000000000000004
*000000000000000037000000000000000000000000000000040000000000000000380000000000
*000000000000000000000400000000000000003900000000000000000000000000000004000000
*00000000003a0000000000000000000000000000000400000000000000003b0000000000000000
*000000000000000400000000000000003c00000000000000000000000000000004000000000000
*00003d0000000000000000000000000000000400000000000000003e0000000000000000000000
*000000000400000000000000003f00000000000000000000000000000004000000000000000040
*000000000000000000000000000000050300000000000000410000000000000000000000000000
*000500000000000000004200000000000000000000000000000005000000000000000043000000
*000000000000000000000000050300000000000000440000000000000000000000000000000500
*000000000000004500000000000000000000000000000005000000000000000046000000000000
*000000000000000000060000000000000000470000000000000000000000000000000600000000
*000000004800000000000000000000000000000006000000000000000049000000000000000000
*0000000000000600000000000000004a0000000000000000000000000000000700000000000000
*004b0000000000000000000000000000000700000000000000004c000000000000000000000000
*0000000700000000000000004d0000000000000000000000000000000700000000000000004e00
*00000000000000000000000000000700000000000000004f000000000000000000000000000000
*070000000000000000500000000000000000000000000000000700000000000000005100000000
*000000000000000000000007000000000000000052000000000000000000000000000000070000
*000000000000530000000000000000000000000000000700000000000000005400000000000000
*000000000000000007000000000000000055000000000000000000000000000000070000000000
*000000560000000000000000000000000000000800000000000000005700000000000000000000
*0000000000080000000000000000580000000000000059000000000000005a0300000000000000
*5b0000000000000009000000000000005c03000000000000005d00000000000000090000000000
*00005e00000000000000005f0000000000000060000000000000000f70617273696d6f6e792d30
*2e302e310000000000000013546578742e50617273696d6f6e792e5574696c0000000000000018
*546578742e50617273696d6f6e792e537461626c654d61700000000000000013546578742e5061
*7273696d6f6e792e5072696d0000000000000014546578742e50617273696d6f6e792e4572726f
*720000000000000013546578742e50617273696d6f6e792e4d6f6465000000000000001a546578
*742e50617273696d6f6e792e436f6d62696e61746f72730000000000000013546578742e506172
*73696d6f6e792e436861720000000000000015546578742e50617273696d6f6e792e5061727365
*630000000000000004626173650000000000000009546578742e53686f77000000000000000d43
*6f6e74726f6c2e4d6f6e6164000000000000000e546578742e50617273696d6f6e790000000000
*0000024964000000000000000572756e4964000000000000000649676e6f726500000000000000
*054d616769630000000000000009537461626c654d61700000000000000005656d707479000000
*0000000006696e7365727400000000000000066c6f6f6b757000000000000000044d6f64650000
*000000000005546f6b656e00000000000000045075726500000000000000075361746973667900
*0000000000000a666d617050617273657200000000000000096170705061727365720000000000
*000007736174697366790000000000000004736b69700000000000000006506172736572000000
*00000000064c6162656c7300000000000000044e616d650000000000000004536b697000000000
*000000064772656564790000000000000003416c74000000000000000341707000000000000000
*0a5265636f676e697a6572000000000000000b5265636f676e697a696e67000000000000000750
*617273696e6700000000000000033c3c2400000000000000032a3e3e00000000000000033c3c2a
*00000000000000046e616d6500000000000000066c6162656c7300000000000000033c3f3e0000
*00000000000663686f69636500000000000000043c3c7c3e000000000000000c67726565647943
*686f696365000000000000000a50617273654572726f7200000000000000074d65737361676500
*000000000000064578706563740000000000000008556e457870656374000000000000000b5379
*73556e457870656374000000000000000d6d657373616765537472696e67000000000000000d65
*72726f72506f736974696f6e000000000000000d6572726f724d65737361676573000000000000
*000e6572726f724973556e6b6e6f776e000000000000000f6e65774572726f72556e6b6e6f776e
*000000000000000f6e65774572726f724d657373616765000000000000000f6164644572726f72
*4d65737361676500000000000000107365744572726f72506f736974696f6e0000000000000014
*70726570656e644572726f72506f736974696f6e000000000000000f7365744572726f724d6573
*73616765000000000000000a6d657267654572726f72000000000000001173686f774572726f72
*4d65737361676573000000000000000d5265636f676e697a654d6f6465000000000000000c7265
*636f676e697a654d617000000000000000097265636f676e697a65000000000000000950617273
*654d6f6465000000000000000870617273654d6170000000000000000570617273650000000000
*0000056f6e654f6600000000000000066e6f6e654f660000000000000008616e79546f6b656e00
*000000000000066f7074696f6e0000000000000004636861720000000000000003746162000000
*00000000057370616365000000000000000673706163657300000000000000056c6f7765720000
*00000000000575707065720000000000000008616c7068614e756d00000000000000066c657474
*65720000000000000008686578446967697400000000000000086f637444696769740000000000
*000007616e79436861720000000000000006737472696e6700000000000000046576616c000000
*00000000056576616c5f000000000000000e6d6f6e6f6964732d302e312e333600000000000000
*22446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e00000000
*0000000e536f75726365506f736974696f6e00000000000000084748432e53686f770000000000
*00000453686f7700000000000000084748432e4261736500000000000000046661696c
addfile ./doc/html/parsimony/plus.gif
binary ./doc/html/parsimony/plus.gif
oldhex
*
newhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002148c8f
*a00bb6b29c82ca897b5b7871cfce74085200003b
adddir ./doc/html/parsimony/src
addfile ./doc/html/parsimony/src/Text-Parsimony-Char.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Char.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Char.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span> <span class='hs-keyword'>where</span>
+<a name="line-3"></a>
+<a name="line-4"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-5"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Traversable</span>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
+<a name="line-9"></a>
+<a name="line-10"></a><a name="char"></a><span class='hs-definition'>char</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-11"></a><span class='hs-definition'>char</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>show</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-12"></a>
+<a name="line-13"></a><a name="tab"></a><span class='hs-definition'>tab</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-14"></a><span class='hs-definition'>tab</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>char</span> <span class='hs-chr'>'\t'</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"tab"</span>
+<a name="line-15"></a>
+<a name="line-16"></a><a name="space"></a><span class='hs-definition'>space</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-17"></a><span class='hs-definition'>space</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isSpace</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"space"</span>
+<a name="line-18"></a>
+<a name="line-19"></a><a name="spaces"></a><span class='hs-definition'>spaces</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-20"></a><span class='hs-definition'>spaces</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>skip</span> <span class='hs-layout'>(</span><span class='hs-varid'>many</span> <span class='hs-varid'>space</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"white space"</span>
+<a name="line-21"></a>
+<a name="line-22"></a><a name="lower"></a><span class='hs-definition'>lower</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-23"></a><span class='hs-definition'>lower</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isLower</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"lowercase letter"</span>
+<a name="line-24"></a>
+<a name="line-25"></a><a name="upper"></a><span class='hs-definition'>upper</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-26"></a><span class='hs-definition'>upper</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isUpper</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"uppercase letter"</span>
+<a name="line-27"></a>
+<a name="line-28"></a><a name="alphaNum"></a><span class='hs-definition'>alphaNum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-29"></a><span class='hs-definition'>alphaNum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isAlphaNum</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"letter or digit"</span>
+<a name="line-30"></a>
+<a name="line-31"></a><a name="letter"></a><span class='hs-definition'>letter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-32"></a><span class='hs-definition'>letter</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isAlpha</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"letter"</span>
+<a name="line-33"></a>
+<a name="line-34"></a><a name="hexDigit"></a><span class='hs-definition'>hexDigit</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-35"></a><span class='hs-definition'>hexDigit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isHexDigit</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"hexadecimal digit"</span>
+<a name="line-36"></a>
+<a name="line-37"></a><a name="octDigit"></a><span class='hs-definition'>octDigit</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-38"></a><span class='hs-definition'>octDigit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-varid'>isOctDigit</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"octal digit"</span>
+<a name="line-39"></a>
+<a name="line-40"></a><a name="anyChar"></a><span class='hs-definition'>anyChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>Char</span>
+<a name="line-41"></a><span class='hs-definition'>anyChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>anyToken</span>
+<a name="line-42"></a>
+<a name="line-43"></a><a name="string"></a><span class='hs-definition'>string</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>String</span>
+<a name="line-44"></a><span class='hs-definition'>string</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>traverse</span> <span class='hs-varid'>char</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-Combinators.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Combinators.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Combinators.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, FlexibleContexts  #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-varid'>oneOf</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>noneOf</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>anyToken</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>option</span>
+<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-11"></a>
+<a name="line-12"></a><a name="oneOf"></a><span class='hs-definition'>oneOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-13"></a><span class='hs-definition'>oneOf</span> <span class='hs-varid'>cs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Prelude</span><span class='hs-varop'>.</span><span class='hs-varid'>elem</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span><span class='hs-layout'>)</span>
+<a name="line-14"></a>
+<a name="line-15"></a><a name="noneOf"></a><span class='hs-definition'>noneOf</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-16"></a><span class='hs-definition'>noneOf</span> <span class='hs-varid'>cs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>not</span> <span class='hs-layout'>(</span><span class='hs-conid'>Prelude</span><span class='hs-varop'>.</span><span class='hs-varid'>elem</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>
+<a name="line-18"></a><a name="anyToken"></a><span class='hs-definition'>anyToken</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-19"></a><span class='hs-definition'>anyToken</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>const</span> <span class='hs-conid'>True</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-str'>"anything"</span>
+<a name="line-20"></a>
+<a name="line-21"></a><a name="option"></a><span class='hs-definition'>option</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-22"></a><span class='hs-definition'>option</span> <span class='hs-varid'>a</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>a</span> 
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-Error.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Error.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Error.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-2"></a><span class='hs-comment'>-- |</span>
+<a name="line-3"></a><span class='hs-comment'>-- Module      :  Text.Parsimony.Error</span>
+<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009 </span>
+<a name="line-5"></a><span class='hs-comment'>--                (c) Paolo Martini 2007 </span>
+<a name="line-6"></a><span class='hs-comment'>--                (c) Daan Leijen 1999-2001</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style (see the LICENSE file)</span>
+<a name="line-8"></a><span class='hs-comment'>-- </span>
+<a name="line-9"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-10"></a><span class='hs-comment'>-- Stability   :  provisional</span>
+<a name="line-11"></a><span class='hs-comment'>-- Portability :  portable</span>
+<a name="line-12"></a><span class='hs-comment'>-- </span>
+<a name="line-13"></a><span class='hs-comment'>-- As per "Text.Parsec.Errors" except with monoidal source position information</span>
+<a name="line-14"></a><span class='hs-comment'>-- </span>
+<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-16"></a>
+<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Message</span> <span class='hs-layout'>(</span> <span class='hs-conid'>SysUnExpect</span><span class='hs-layout'>,</span> <span class='hs-conid'>UnExpect</span><span class='hs-layout'>,</span> <span class='hs-conid'>Expect</span><span class='hs-layout'>,</span> <span class='hs-conid'>Message</span> <span class='hs-layout'>)</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>messageString</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>ParseError</span><span class='hs-layout'>,</span> <span class='hs-varid'>errorPosition</span><span class='hs-layout'>,</span> <span class='hs-varid'>errorMessages</span><span class='hs-layout'>,</span> <span class='hs-varid'>errorIsUnknown</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>showErrorMessages</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>newErrorMessage</span><span class='hs-layout'>,</span> <span class='hs-varid'>newErrorUnknown</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>addErrorMessage</span><span class='hs-layout'>,</span> <span class='hs-varid'>setErrorPosition</span><span class='hs-layout'>,</span> <span class='hs-varid'>setErrorMessage</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prependErrorPosition</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mergeError</span>
+<a name="line-26"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-27"></a>
+<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-layout'>(</span> <span class='hs-varid'>nub</span><span class='hs-layout'>,</span> <span class='hs-varid'>sort</span> <span class='hs-layout'>)</span>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>SourcePosition</span>
+<a name="line-30"></a>
+<a name="line-31"></a><span class='hs-comment'>-- | This abstract data type represents parse error messages. There are</span>
+<a name="line-32"></a><span class='hs-comment'>-- four kinds of messages:</span>
+<a name="line-33"></a><span class='hs-comment'>--</span>
+<a name="line-34"></a><span class='hs-comment'>-- &gt;  data Message = SysUnExpect String</span>
+<a name="line-35"></a><span class='hs-comment'>-- &gt;               | UnExpect String</span>
+<a name="line-36"></a><span class='hs-comment'>-- &gt;               | Expect String</span>
+<a name="line-37"></a><span class='hs-comment'>-- &gt;               | Message String</span>
+<a name="line-38"></a><span class='hs-comment'>-- </span>
+<a name="line-39"></a><span class='hs-comment'>-- The fine distinction between different kinds of parse errors allows</span>
+<a name="line-40"></a><span class='hs-comment'>-- the system to generate quite good error messages for the user. It</span>
+<a name="line-41"></a><span class='hs-comment'>-- also allows error messages that are formatted in different</span>
+<a name="line-42"></a><span class='hs-comment'>-- languages. Each kind of message is generated by different combinators:</span>
+<a name="line-43"></a><span class='hs-comment'>--</span>
+<a name="line-44"></a><span class='hs-comment'>--     * A 'SysUnExpect' message is automatically generated by the</span>
+<a name="line-45"></a><span class='hs-comment'>--       'Text.Parsec.Combinator.satisfy' combinator. The argument is the</span>
+<a name="line-46"></a><span class='hs-comment'>--       unexpected input.</span>
+<a name="line-47"></a><span class='hs-comment'>--</span>
+<a name="line-48"></a><span class='hs-comment'>--     * A 'UnExpect' message is generated by the 'Text.Parsec.Prim.unexpected'</span>
+<a name="line-49"></a><span class='hs-comment'>--       combinator. The argument describes the</span>
+<a name="line-50"></a><span class='hs-comment'>--       unexpected item.</span>
+<a name="line-51"></a><span class='hs-comment'>--</span>
+<a name="line-52"></a><span class='hs-comment'>--     * A 'Expect' message is generated by the 'Text.Parsec.Prim.&lt;?&gt;'</span>
+<a name="line-53"></a><span class='hs-comment'>--       combinator. The argument describes the expected item.</span>
+<a name="line-54"></a><span class='hs-comment'>--</span>
+<a name="line-55"></a><span class='hs-comment'>--     * A 'Message' message is generated by the 'fail'</span>
+<a name="line-56"></a><span class='hs-comment'>--       combinator. The argument is some general parser message. </span>
+<a name="line-57"></a>
+<a name="line-58"></a><a name="Message"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Message</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>SysUnExpect</span> <span class='hs-varop'>!</span><span class='hs-conid'>String</span> <span class='hs-comment'>-- @ library generated unexpect</span>
+<a name="line-59"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>UnExpect</span>    <span class='hs-varop'>!</span><span class='hs-conid'>String</span> <span class='hs-comment'>-- @ unexpected something</span>
+<a name="line-60"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Expect</span>      <span class='hs-varop'>!</span><span class='hs-conid'>String</span> <span class='hs-comment'>-- @ expecting something</span>
+<a name="line-61"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Message</span>     <span class='hs-varop'>!</span><span class='hs-conid'>String</span> <span class='hs-comment'>-- @ raw message</span>
+<a name="line-62"></a>
+<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-conid'>Message</span> <span class='hs-keyword'>where</span>
+<a name="line-64"></a>    <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-conid'>SysUnExpect</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>0</span>
+<a name="line-65"></a>    <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnExpect</span>    <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>1</span>
+<a name="line-66"></a>    <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-conid'>Expect</span>      <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>2</span>
+<a name="line-67"></a>    <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-conid'>Message</span>     <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>3</span>
+<a name="line-68"></a>    <span class='hs-varid'>toEnum</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>error</span> <span class='hs-str'>"toEnum is undefined for Message"</span>
+<a name="line-69"></a>
+<a name="line-70"></a><span class='hs-comment'>-- &lt; Return 'True' only when 'compare' would return 'EQ'.</span>
+<a name="line-71"></a>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-conid'>Message</span> <span class='hs-keyword'>where</span>
+<a name="line-73"></a>    <span class='hs-varid'>m1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>m2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>m1</span> <span class='hs-varop'>==</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>m2</span>
+<a name="line-74"></a>
+<a name="line-75"></a><span class='hs-comment'>-- &lt; Compares two error messages without looking at their content. Only</span>
+<a name="line-76"></a><span class='hs-comment'>-- the constructors are compared where:</span>
+<a name="line-77"></a><span class='hs-comment'>-- </span>
+<a name="line-78"></a><span class='hs-comment'>-- &gt; 'SysUnExpect' &lt; 'UnExpect' &lt; 'Expect' &lt; 'Message'</span>
+<a name="line-79"></a>
+<a name="line-80"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-conid'>Message</span> <span class='hs-keyword'>where</span>
+<a name="line-81"></a>    <span class='hs-varid'>compare</span> <span class='hs-varid'>msg1</span> <span class='hs-varid'>msg2</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>compare</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromEnum</span> <span class='hs-varid'>msg1</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromEnum</span> <span class='hs-varid'>msg2</span><span class='hs-layout'>)</span>
+<a name="line-82"></a>
+<a name="line-83"></a><span class='hs-comment'>-- | Extract the message string from an error message </span>
+<a name="line-84"></a>
+<a name="line-85"></a><a name="messageString"></a><span class='hs-definition'>messageString</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Message</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
+<a name="line-86"></a><span class='hs-definition'>messageString</span> <span class='hs-layout'>(</span><span class='hs-conid'>SysUnExpect</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
+<a name="line-87"></a><span class='hs-definition'>messageString</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnExpect</span>    <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
+<a name="line-88"></a><span class='hs-definition'>messageString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Expect</span>      <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
+<a name="line-89"></a><span class='hs-definition'>messageString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Message</span>     <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
+<a name="line-90"></a>
+<a name="line-91"></a><span class='hs-comment'>-- | The abstract data type @ParseError@ represents parse errors. It</span>
+<a name="line-92"></a><span class='hs-comment'>-- provides the source position ('SourcePosition') of the error</span>
+<a name="line-93"></a><span class='hs-comment'>-- and a list of error messages ('Message'). A @ParseError@</span>
+<a name="line-94"></a><span class='hs-comment'>-- can be returned by the function 'Text.Parsimony.Mode.parse'. @ParseError@ is an</span>
+<a name="line-95"></a><span class='hs-comment'>-- instance of the 'Show' class, but does not comply with the Haskell convention</span>
+<a name="line-96"></a><span class='hs-comment'>-- that Show should yield a valid source code representation.</span>
+<a name="line-97"></a>
+<a name="line-98"></a><a name="ParseError"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varop'>!</span><span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Message</span><span class='hs-keyglyph'>]</span>
+<a name="line-99"></a>
+<a name="line-100"></a><span class='hs-comment'>-- | Extracts the source position from the parse error</span>
+<a name="line-101"></a>
+<a name="line-102"></a><a name="errorPosition"></a><span class='hs-definition'>errorPosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span>
+<a name="line-103"></a><span class='hs-definition'>errorPosition</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-sel'>_msgs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pos</span>
+<a name="line-104"></a>
+<a name="line-105"></a><a name="errorMessages"></a><span class='hs-definition'>errorMessages</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Message</span><span class='hs-keyglyph'>]</span>
+<a name="line-106"></a><span class='hs-definition'>errorMessages</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-sel'>_pos</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>sort</span> <span class='hs-varid'>msgs</span>
+<a name="line-107"></a>
+<a name="line-108"></a><a name="errorIsUnknown"></a><span class='hs-definition'>errorIsUnknown</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-109"></a><span class='hs-definition'>errorIsUnknown</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-sel'>_pos</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>null</span> <span class='hs-varid'>msgs</span>
+<a name="line-110"></a>
+<a name="line-111"></a><span class='hs-comment'>-- &lt; Create parse errors</span>
+<a name="line-112"></a>
+<a name="line-113"></a><a name="newErrorUnknown"></a><span class='hs-definition'>newErrorUnknown</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> 
+<a name="line-114"></a><span class='hs-definition'>newErrorUnknown</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-conid'>[]</span>
+<a name="line-115"></a>
+<a name="line-116"></a><a name="newErrorMessage"></a><span class='hs-definition'>newErrorMessage</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Message</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span>
+<a name="line-117"></a><span class='hs-definition'>newErrorMessage</span> <span class='hs-varid'>msg</span> <span class='hs-varid'>pos</span>
+<a name="line-118"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>msg</span><span class='hs-keyglyph'>]</span>
+<a name="line-119"></a>
+<a name="line-120"></a><a name="addErrorMessage"></a><span class='hs-definition'>addErrorMessage</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Message</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> 
+<a name="line-121"></a><span class='hs-definition'>addErrorMessage</span> <span class='hs-varid'>msg</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span>
+<a name="line-122"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>msg</span><span class='hs-conop'>:</span><span class='hs-varid'>msgs</span><span class='hs-layout'>)</span>
+<a name="line-123"></a>
+<a name="line-124"></a><a name="setErrorPosition"></a><span class='hs-definition'>setErrorPosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span>
+<a name="line-125"></a><span class='hs-definition'>setErrorPosition</span> <span class='hs-varid'>pos</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span>
+<a name="line-126"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-varid'>msgs</span>
+<a name="line-127"></a>
+<a name="line-128"></a><a name="prependErrorPosition"></a><span class='hs-definition'>prependErrorPosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span>
+<a name="line-129"></a><span class='hs-definition'>prependErrorPosition</span> <span class='hs-varid'>pos1</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos2</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-layout'>(</span><span class='hs-varid'>pos1</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos2</span><span class='hs-layout'>)</span> <span class='hs-varid'>msgs</span>
+<a name="line-130"></a>
+<a name="line-131"></a><a name="setErrorMessage"></a><span class='hs-definition'>setErrorMessage</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Message</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> 
+<a name="line-132"></a><span class='hs-definition'>setErrorMessage</span> <span class='hs-varid'>msg</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>msg</span> <span class='hs-conop'>:</span> <span class='hs-varid'>filter</span> <span class='hs-layout'>(</span><span class='hs-varid'>msg</span> <span class='hs-varop'>/=</span><span class='hs-layout'>)</span> <span class='hs-varid'>msgs</span><span class='hs-layout'>)</span>
+<a name="line-133"></a>
+<a name="line-134"></a><a name="mergeError"></a><span class='hs-definition'>mergeError</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span>
+<a name="line-135"></a><span class='hs-definition'>mergeError</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-varid'>msgs1</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>msgs2</span><span class='hs-layout'>)</span>
+<a name="line-136"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>msgs1</span> <span class='hs-varop'>++</span> <span class='hs-varid'>msgs2</span><span class='hs-layout'>)</span>
+<a name="line-137"></a>
+<a name="line-138"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-139"></a>    <span class='hs-varid'>show</span> <span class='hs-varid'>err</span>
+<a name="line-140"></a>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>show</span> <span class='hs-layout'>(</span><span class='hs-varid'>errorPosition</span> <span class='hs-varid'>err</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span>
+<a name="line-141"></a>          <span class='hs-varid'>showErrorMessages</span> <span class='hs-str'>"or"</span> <span class='hs-str'>"unknown parse error"</span>
+<a name="line-142"></a>                            <span class='hs-str'>"expecting"</span> <span class='hs-str'>"unexpected"</span> <span class='hs-str'>"end of input"</span>
+<a name="line-143"></a>                           <span class='hs-layout'>(</span><span class='hs-varid'>errorMessages</span> <span class='hs-varid'>err</span><span class='hs-layout'>)</span>
+<a name="line-144"></a>
+<a name="line-145"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-146"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ParseError</span> <span class='hs-varid'>mempty</span> <span class='hs-conid'>[]</span>
+<a name="line-147"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mergeError</span>
+<a name="line-148"></a>
+<a name="line-149"></a>
+<a name="line-150"></a><span class='hs-comment'>-- Language independent show function</span>
+<a name="line-151"></a>
+<a name="line-152"></a><span class='hs-comment'>--  TODO</span>
+<a name="line-153"></a><span class='hs-comment'>-- &lt; The standard function for showing error messages. Formats a list of</span>
+<a name="line-154"></a><span class='hs-comment'>--    error messages in English. This function is used in the |Show|</span>
+<a name="line-155"></a><span class='hs-comment'>--    instance of |ParseError &lt;#ParseError&gt;|. The resulting string will be</span>
+<a name="line-156"></a><span class='hs-comment'>--    formatted like:</span>
+<a name="line-157"></a><span class='hs-comment'>--</span>
+<a name="line-158"></a><span class='hs-comment'>--    |unexpected /{The first UnExpect or a SysUnExpect message}/;</span>
+<a name="line-159"></a><span class='hs-comment'>--    expecting /{comma separated list of Expect messages}/;</span>
+<a name="line-160"></a><span class='hs-comment'>--    /{comma separated list of Message messages}/</span>
+<a name="line-161"></a>
+<a name="line-162"></a><a name="showErrorMessages"></a><span class='hs-definition'>showErrorMessages</span> <span class='hs-keyglyph'>::</span>
+<a name="line-163"></a>    <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Message</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
+<a name="line-164"></a><span class='hs-definition'>showErrorMessages</span> <span class='hs-varid'>msgOr</span> <span class='hs-varid'>msgUnknown</span> <span class='hs-varid'>msgExpecting</span> <span class='hs-varid'>msgUnExpected</span> <span class='hs-varid'>msgEndOfInput</span> <span class='hs-varid'>msgs</span>
+<a name="line-165"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>null</span> <span class='hs-varid'>msgs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>msgUnknown</span>
+<a name="line-166"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>concat</span> <span class='hs-varop'>$</span> <span class='hs-varid'>map</span> <span class='hs-layout'>(</span><span class='hs-str'>"\n"</span><span class='hs-varop'>++</span><span class='hs-layout'>)</span> <span class='hs-varop'>$</span> <span class='hs-varid'>clean</span> <span class='hs-varop'>$</span>
+<a name="line-167"></a>                 <span class='hs-keyglyph'>[</span><span class='hs-varid'>showSysUnExpect</span><span class='hs-layout'>,</span><span class='hs-varid'>showUnExpect</span><span class='hs-layout'>,</span><span class='hs-varid'>showExpect</span><span class='hs-layout'>,</span><span class='hs-varid'>showMessages</span><span class='hs-keyglyph'>]</span>
+<a name="line-168"></a>    <span class='hs-keyword'>where</span>
+<a name="line-169"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>sysUnExpect</span><span class='hs-layout'>,</span><span class='hs-varid'>msgs1</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>span</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-conid'>SysUnExpect</span> <span class='hs-str'>""</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span><span class='hs-layout'>)</span> <span class='hs-varid'>msgs</span>
+<a name="line-170"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>unExpect</span><span class='hs-layout'>,</span><span class='hs-varid'>msgs2</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>span</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-conid'>UnExpect</span>    <span class='hs-str'>""</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span><span class='hs-layout'>)</span> <span class='hs-varid'>msgs1</span>
+<a name="line-171"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>expect</span><span class='hs-layout'>,</span><span class='hs-varid'>messages</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>span</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-conid'>Expect</span>      <span class='hs-str'>""</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span><span class='hs-layout'>)</span> <span class='hs-varid'>msgs2</span>
+<a name="line-172"></a>
+<a name="line-173"></a>      <span class='hs-varid'>showExpect</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showMany</span> <span class='hs-varid'>msgExpecting</span> <span class='hs-varid'>expect</span>
+<a name="line-174"></a>      <span class='hs-varid'>showUnExpect</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showMany</span> <span class='hs-varid'>msgUnExpected</span> <span class='hs-varid'>unExpect</span>
+<a name="line-175"></a>      <span class='hs-varid'>showSysUnExpect</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>not</span> <span class='hs-layout'>(</span><span class='hs-varid'>null</span> <span class='hs-varid'>unExpect</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
+<a name="line-176"></a>                        <span class='hs-varid'>null</span> <span class='hs-varid'>sysUnExpect</span> <span class='hs-keyglyph'>=</span> <span class='hs-str'>""</span>
+<a name="line-177"></a>                      <span class='hs-keyglyph'>|</span> <span class='hs-varid'>null</span> <span class='hs-varid'>firstMsg</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>msgUnExpected</span> <span class='hs-varop'>++</span> <span class='hs-str'>" "</span> <span class='hs-varop'>++</span> <span class='hs-varid'>msgEndOfInput</span>
+<a name="line-178"></a>                      <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>msgUnExpected</span> <span class='hs-varop'>++</span> <span class='hs-str'>" "</span> <span class='hs-varop'>++</span> <span class='hs-varid'>firstMsg</span>
+<a name="line-179"></a>          <span class='hs-keyword'>where</span>
+<a name="line-180"></a>              <span class='hs-varid'>firstMsg</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>messageString</span> <span class='hs-layout'>(</span><span class='hs-varid'>head</span> <span class='hs-varid'>sysUnExpect</span><span class='hs-layout'>)</span>
+<a name="line-181"></a>
+<a name="line-182"></a>      <span class='hs-varid'>showMessages</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showMany</span> <span class='hs-str'>""</span> <span class='hs-varid'>messages</span>
+<a name="line-183"></a>
+<a name="line-184"></a>      <span class='hs-comment'>-- helpers</span>
+<a name="line-185"></a>      <span class='hs-varid'>showMany</span> <span class='hs-varid'>pre</span> <span class='hs-varid'>msgs'</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>clean</span> <span class='hs-layout'>(</span><span class='hs-varid'>map</span> <span class='hs-varid'>messageString</span> <span class='hs-varid'>msgs'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>of</span>
+<a name="line-186"></a>                            <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-str'>""</span>
+<a name="line-187"></a>                            <span class='hs-varid'>ms</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>null</span> <span class='hs-varid'>pre</span>  <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>commasOr</span> <span class='hs-varid'>ms</span>
+<a name="line-188"></a>                               <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>pre</span> <span class='hs-varop'>++</span> <span class='hs-str'>" "</span> <span class='hs-varop'>++</span> <span class='hs-varid'>commasOr</span> <span class='hs-varid'>ms</span>
+<a name="line-189"></a>
+<a name="line-190"></a>      <span class='hs-varid'>commasOr</span> <span class='hs-conid'>[]</span>       <span class='hs-keyglyph'>=</span> <span class='hs-str'>""</span>
+<a name="line-191"></a>      <span class='hs-varid'>commasOr</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-192"></a>      <span class='hs-varid'>commasOr</span> <span class='hs-varid'>ms</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>commaSep</span> <span class='hs-layout'>(</span><span class='hs-varid'>init</span> <span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-str'>" "</span> <span class='hs-varop'>++</span> <span class='hs-varid'>msgOr</span> <span class='hs-varop'>++</span> <span class='hs-str'>" "</span> <span class='hs-varop'>++</span> <span class='hs-varid'>last</span> <span class='hs-varid'>ms</span>
+<a name="line-193"></a>
+<a name="line-194"></a>      <span class='hs-varid'>commaSep</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>seperate</span> <span class='hs-str'>", "</span> <span class='hs-varop'>.</span> <span class='hs-varid'>clean</span>
+<a name="line-195"></a>
+<a name="line-196"></a>      <span class='hs-varid'>seperate</span>   <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span>     <span class='hs-keyglyph'>=</span> <span class='hs-str'>""</span>
+<a name="line-197"></a>      <span class='hs-varid'>seperate</span>   <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-198"></a>      <span class='hs-varid'>seperate</span> <span class='hs-varid'>sep</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-conop'>:</span><span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>sep</span> <span class='hs-varop'>++</span> <span class='hs-varid'>seperate</span> <span class='hs-varid'>sep</span> <span class='hs-varid'>ms</span>
+<a name="line-199"></a>
+<a name="line-200"></a>      <span class='hs-varid'>clean</span>             <span class='hs-keyglyph'>=</span> <span class='hs-varid'>nub</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-layout'>(</span><span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>null</span><span class='hs-layout'>)</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-Mode.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Mode.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Mode.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeOperators #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Mode</span> <span class='hs-keyword'>where</span>
+<a name="line-3"></a>
+<a name="line-4"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-5"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>ParseMode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-10"></a>    <span class='hs-varid'>parseMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Either</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-11"></a>
+<a name="line-12"></a>    <span class='hs-varid'>parse</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Either</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParseError</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-13"></a>    <span class='hs-varid'>parse</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>parseMap</span> <span class='hs-varid'>id</span>
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>RecognizeMode</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-16"></a>    <span class='hs-varid'>recognizeMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-17"></a>
+<a name="line-18"></a>    <span class='hs-varid'>recognize</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Parser`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-19"></a>    <span class='hs-varid'>recognize</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>recognizeMap</span> <span class='hs-varid'>id</span>
+<a name="line-20"></a>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-Parsec.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Parsec.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Parsec.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleContexts #-}</span>
+<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-3"></a><span class='hs-comment'>-- |</span>
+<a name="line-4"></a><span class='hs-comment'>-- Module      :  Text.Parsimony.Parsec</span>
+<a name="line-5"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-6"></a><span class='hs-comment'>-- License     :  BSD</span>
+<a name="line-7"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-8"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-9"></a><span class='hs-comment'>-- Portability :  non-portable (type families)</span>
+<a name="line-10"></a><span class='hs-comment'>--</span>
+<a name="line-11"></a><span class='hs-comment'>-- A minimalist interpreter that evaluates a Parsimony parser with Parsec</span>
+<a name="line-12"></a><span class='hs-comment'>--</span>
+<a name="line-13"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span> <span class='hs-keyword'>where</span>
+<a name="line-16"></a>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
+<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Parsec</span>
+<a name="line-21"></a>
+<a name="line-22"></a><a name="eval"></a><span class='hs-definition'>eval</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>e</span>
+<a name="line-23"></a><span class='hs-definition'>eval</span> <span class='hs-varid'>expr</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>expr</span> <span class='hs-keyword'>of</span> 
+<a name="line-24"></a>    <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>eval</span> <span class='hs-varid'>x</span>
+<a name="line-25"></a>    <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>a</span>
+<a name="line-26"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>choice</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>try</span> <span class='hs-varop'>.</span> <span class='hs-varid'>eval</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>    <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span>   <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>choice</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-28"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>satisfy</span> <span class='hs-varid'>p</span> 
+<a name="line-29"></a>    <span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>n</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval</span> <span class='hs-varid'>n</span>
+<a name="line-30"></a>    <span class='hs-conid'>Labels</span> <span class='hs-varid'>ls</span> <span class='hs-varid'>l</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>ls</span>
+<a name="line-31"></a>    <span class='hs-conid'>Skip</span> <span class='hs-varid'>s</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>s</span>
+<a name="line-32"></a>
+<a name="line-33"></a><a name="eval_"></a><span class='hs-definition'>eval_</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-34"></a><span class='hs-definition'>eval_</span> <span class='hs-varid'>expr</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>expr</span> <span class='hs-keyword'>of</span> 
+<a name="line-35"></a>    <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>     <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>f</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>x</span>
+<a name="line-36"></a>    <span class='hs-conid'>Pure</span> <span class='hs-keyword'>_</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span>
+<a name="line-37"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>choice</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>try</span> <span class='hs-varop'>.</span> <span class='hs-varid'>eval_</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span> 
+<a name="line-38"></a>    <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span>   <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>choice</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval_</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-39"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>()</span> <span class='hs-varop'>&lt;$</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>satisfy</span> <span class='hs-varid'>p</span>
+<a name="line-40"></a>    <span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>n</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>n</span>
+<a name="line-41"></a>    <span class='hs-conid'>Labels</span> <span class='hs-varid'>ls</span> <span class='hs-varid'>l</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-varid'>labels</span> <span class='hs-layout'>(</span><span class='hs-varid'>eval_</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>ls</span>
+<a name="line-42"></a>    <span class='hs-conid'>Skip</span> <span class='hs-varid'>s</span>      <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>eval_</span> <span class='hs-varid'>s</span> <span class='hs-comment'>-- unexpected Skip in Skip</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-Prim.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Prim.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Prim.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE KindSignatures, TypeFamilies, GADTs, EmptyDataDecls, FlexibleContexts, FlexibleInstances #-}</span>
+<a name="line-2"></a>
+<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-4"></a><span class='hs-comment'>-- |</span>
+<a name="line-5"></a><span class='hs-comment'>-- Module      :  Text.Parsimony.Prim</span>
+<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD</span>
+<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (type families, GADTs)</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-- Parallel parser combinators</span>
+<a name="line-13"></a><span class='hs-comment'>--</span>
+<a name="line-14"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-15"></a>
+<a name="line-16"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span> 
+<a name="line-17"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Parsing</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Recognizing</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Recognizer</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Parser</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Mode</span><span class='hs-layout'>,</span> <span class='hs-conid'>Token</span><span class='hs-layout'>,</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Satisfy</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fmapParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>appParser</span><span class='hs-layout'>,</span> <span class='hs-varid'>satisfy</span><span class='hs-layout'>,</span> <span class='hs-varid'>skip</span> 
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>name</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>labels</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>choice</span> 
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span>
+<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>greedyChoice</span>
+<a name="line-30"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span><span class='hs-layout'>)</span>
+<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span><span class='hs-layout'>,</span> <span class='hs-varid'>runId</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ignore</span><span class='hs-layout'>)</span>
+<a name="line-35"></a>
+<a name="line-36"></a><a name="Parsing"></a><span class='hs-comment'>-- parsing modes</span>
+<a name="line-37"></a><a name="Parsing"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span>
+<a name="line-38"></a><a name="Recognizing"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span>
+<a name="line-39"></a>
+<a name="line-40"></a><a name="Recognizer"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-comment'>-- Parser t a requires Mode t</span>
+<a name="line-43"></a>
+<a name="line-44"></a><span class='hs-comment'>-- invariants enforced by smart constructors:</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-comment'>-- a Name never contains a Name directly</span>
+<a name="line-47"></a><span class='hs-comment'>-- a Labels never contain Labels directly</span>
+<a name="line-48"></a><span class='hs-comment'>-- an Alt never contains an Alt directly</span>
+<a name="line-49"></a><span class='hs-comment'>-- a Greedy never contains a Greedy directly</span>
+<a name="line-50"></a><span class='hs-comment'>-- a Skip never contains a Skip transitively</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-comment'>-- unenforceable invariants required for the parallel parser</span>
+<a name="line-53"></a><span class='hs-comment'>-- The parse tree is finite</span>
+<a name="line-54"></a>
+<a name="line-55"></a><a name="Mode"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
+<a name="line-56"></a>    <span class='hs-conid'>App</span>     <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-57"></a>    <span class='hs-conid'>Pure</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-58"></a>    <span class='hs-conid'>Alt</span>     <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-59"></a>    <span class='hs-conid'>Greedy</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-60"></a>    <span class='hs-conid'>Satisfy</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-61"></a>    <span class='hs-conid'>Skip</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-62"></a>    <span class='hs-conid'>Name</span>    <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-63"></a>    <span class='hs-conid'>Labels</span>  <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-64"></a>
+<a name="line-65"></a><a name="Mode"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyword'>where</span>
+<a name="line-66"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>t</span>   <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
+<a name="line-67"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>t</span>    <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-68"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varop'>*</span>
+<a name="line-69"></a>
+<a name="line-70"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-71"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-72"></a>    <span class='hs-varid'>appParser</span>  <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-73"></a>    <span class='hs-varid'>satisfy</span>    <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span>
+<a name="line-74"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-conid'>()</span>
+<a name="line-75"></a>
+<a name="line-76"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-77"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-78"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-79"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-80"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-81"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Skip</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>s</span>
+<a name="line-82"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
+<a name="line-83"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
+<a name="line-84"></a>
+<a name="line-85"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span>
+<a name="line-86"></a>    <span class='hs-varid'>skip</span>       <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Skip</span>
+<a name="line-87"></a>
+<a name="line-88"></a><span class='hs-comment'>-- a parser mode that actually parses and retains intermediate results</span>
+<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-90"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Token</span>   <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span>
+<a name="line-91"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span>    <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-92"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parsing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span> <span class='hs-varid'>t</span>
+<a name="line-93"></a>
+<a name="line-94"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-95"></a>    <span class='hs-varid'>appParser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pure</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Satisfy</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-varid'>runId</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>p</span>
+<a name="line-96"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span>
+<a name="line-97"></a>    <span class='hs-varid'>satisfy</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>id</span>
+<a name="line-98"></a>
+<a name="line-99"></a><span class='hs-comment'>-- the unsafeCoerces below let us retain sharing in a recognizer that we cannot retain in a general parser</span>
+<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-101"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Token</span>   <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span>
+<a name="line-102"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Pure</span>    <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ignore</span>
+<a name="line-103"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Satisfy</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ignore</span>
+<a name="line-104"></a>
+<a name="line-105"></a>    <span class='hs-varid'>satisfy</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Satisfy</span> <span class='hs-varid'>undefined</span>
+<a name="line-106"></a>    <span class='hs-varid'>skip</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-107"></a>    <span class='hs-varid'>fmapParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span>
+<a name="line-108"></a>
+<a name="line-109"></a>    <span class='hs-varid'>appParser</span> <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>x</span>
+<a name="line-110"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-conid'>Pure</span><span class='hs-layout'>{</span><span class='hs-layout'>}</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>f</span>
+<a name="line-111"></a>    <span class='hs-varid'>appParser</span> <span class='hs-varid'>f</span>      <span class='hs-varid'>x</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> 
+<a name="line-112"></a>
+<a name="line-113"></a>    <span class='hs-varid'>pureParser</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>epsilon</span> <span class='hs-keyword'>where</span>
+<a name="line-114"></a>        <span class='hs-comment'>-- force sharing of all epsilon </span>
+<a name="line-115"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-layout'>(</span><span class='hs-conid'>Recognizing</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-conid'>()</span>
+<a name="line-116"></a>        <span class='hs-varid'>epsilon</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pure</span> <span class='hs-varid'>undefined</span>
+<a name="line-117"></a>
+<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-119"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmapParser</span>
+<a name="line-120"></a>
+<a name="line-121"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-122"></a>    <span class='hs-varid'>pure</span>  <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pureParser</span>
+<a name="line-123"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>appParser</span>
+<a name="line-124"></a>
+<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Alternative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-126"></a>    <span class='hs-varid'>empty</span>             <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-conid'>[]</span>
+<a name="line-127"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-128"></a>    <span class='hs-conid'>Alt</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-129"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-130"></a>    <span class='hs-varid'>a</span>      <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span>      <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-131"></a>
+<a name="line-132"></a><span class='hs-comment'>-- optimized versions of &lt;$, *&gt; and &lt;*</span>
+<a name="line-133"></a>
+<a name="line-134"></a><a name="<<$"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;$</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-135"></a><a name="a"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;$</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>p</span>
+<a name="line-136"></a>
+<a name="line-137"></a><a name="*>>"></a><span class='hs-layout'>(</span><span class='hs-varop'>*&gt;&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span>
+<a name="line-138"></a><span class='hs-definition'>a</span> <span class='hs-varop'>*&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>b</span>
+<a name="line-139"></a>
+<a name="line-140"></a><a name="<<*"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mode</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Recognizer</span> <span class='hs-varid'>t</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-141"></a><span class='hs-definition'>a</span> <span class='hs-varop'>&lt;&lt;*</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-varid'>skip</span> <span class='hs-varid'>b</span>
+<a name="line-142"></a>
+<a name="line-143"></a><a name="name"></a><span class='hs-comment'>-- smart constructors fuse away trivial local optimizations</span>
+<a name="line-144"></a><span class='hs-definition'>name</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-145"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Name</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
+<a name="line-146"></a><span class='hs-definition'>name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Name</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
+<a name="line-147"></a>
+<a name="line-148"></a><a name="labels"></a><span class='hs-definition'>labels</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>String</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-149"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Labels</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span>
+<a name="line-150"></a><span class='hs-definition'>labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Labels</span> <span class='hs-varid'>s</span> <span class='hs-varid'>p</span> 
+<a name="line-151"></a>
+<a name="line-152"></a><a name="<?>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;?&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-153"></a><a name="p"></a><span class='hs-definition'>p</span> <span class='hs-varop'>&lt;?&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>labels</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>s</span><span class='hs-keyglyph'>]</span> <span class='hs-varid'>p</span>
+<a name="line-154"></a>
+<a name="line-155"></a><a name="choice"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-156"></a><span class='hs-definition'>choice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alt</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-157"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-158"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+<a name="line-159"></a>
+<a name="line-160"></a><a name="<<|>"></a><span class='hs-layout'>(</span><span class='hs-varop'>&lt;&lt;|&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span> 
+<a name="line-161"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-162"></a><span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>a</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-keyword'>as</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-163"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-164"></a><span class='hs-definition'>a</span>         <span class='hs-varop'>&lt;&lt;|&gt;</span> <span class='hs-varid'>b</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-165"></a>
+<a name="line-166"></a><a name="greedyChoice"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Parser</span> <span class='hs-varid'>t</span> <span class='hs-varid'>a</span>
+<a name="line-167"></a><span class='hs-definition'>greedyChoice</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Greedy</span> <span class='hs-varop'>.</span> <span class='hs-varid'>foldr</span> <span class='hs-varid'>flatten</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>where</span>
+<a name="line-168"></a>    <span class='hs-varid'>flatten</span> <span class='hs-layout'>(</span><span class='hs-conid'>Greedy</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>bs</span> <span class='hs-varop'>++</span> <span class='hs-keyword'>as</span>
+<a name="line-169"></a>    <span class='hs-varid'>flatten</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>as</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-conop'>:</span> <span class='hs-keyword'>as</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-StableMap.html
hunk ./doc/html/parsimony/src/Text-Parsimony-StableMap.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/StableMap.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE EmptyDataDecls #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>StableMap</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>StableMap</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>empty</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>insert</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>StableMap</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span>
+<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-comment'>-- map a StableName of an object to a functor of information about that value</span>
+<a name="line-10"></a>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span>
+<a name="line-12"></a>
+<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span> 
+<a name="line-15"></a>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>System</span><span class='hs-varop'>.</span><span class='hs-conid'>Mem</span><span class='hs-varop'>.</span><span class='hs-conid'>StableName</span>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span>
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span> <span class='hs-layout'>(</span><span class='hs-conid'>Magic</span><span class='hs-layout'>)</span>
+<a name="line-20"></a>
+<a name="line-21"></a><a name="StableMap"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getStableMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>StableName</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-conid'>Magic</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
+<a name="line-22"></a>
+<a name="line-23"></a><a name="empty"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
+<a name="line-24"></a><span class='hs-definition'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
+<a name="line-25"></a>
+<a name="line-26"></a><a name="insert"></a><span class='hs-definition'>insert</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span>
+<a name="line-27"></a><span class='hs-definition'>insert</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>StableMap</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-layout'>(</span><span class='hs-varop'>++</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>unsafeCoerce</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getStableMap</span>
+<a name="line-28"></a>
+<a name="line-29"></a><a name="lookup"></a><span class='hs-definition'>lookup</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>StableName</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>StableMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-30"></a><span class='hs-definition'>lookup</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>StableMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>do</span>
+<a name="line-31"></a>    <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>hashStableName</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
+<a name="line-32"></a>    <span class='hs-varid'>unsafeCoerce</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Prelude</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>unsafeCoerce</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony-Util.html
hunk ./doc/html/parsimony/src/Text-Parsimony-Util.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony/Util.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE EmptyDataDecls #-}</span>
+<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-3"></a><span class='hs-comment'>-- |</span>
+<a name="line-4"></a><span class='hs-comment'>-- Module      :  Text.Parsimony.Util</span>
+<a name="line-5"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-6"></a><span class='hs-comment'>-- License     :  BSD</span>
+<a name="line-7"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-8"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-9"></a><span class='hs-comment'>-- Portability :  non-portable (type families, GADTs)</span>
+<a name="line-10"></a><span class='hs-comment'>--</span>
+<a name="line-11"></a><span class='hs-comment'>-- Miscellaneous data types used by the rest of Parsimony.</span>
+<a name="line-12"></a><span class='hs-comment'>--</span>
+<a name="line-13"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Util</span>
+<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Ignore</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Id</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Magic</span>
+<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-22"></a>
+<a name="line-23"></a><a name="Magic"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Magic</span>
+<a name="line-24"></a>
+<a name="line-25"></a><a name="Ignore"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Ignore</span> <span class='hs-varid'>a</span> 
+<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Ignore</span> <span class='hs-keyword'>where</span>
+<a name="line-27"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Ignore</span> <span class='hs-keyword'>where</span>
+<a name="line-29"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-30"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+<a name="line-31"></a>
+<a name="line-32"></a><a name="Id"></a><span class='hs-comment'>-- Control.Monad.Identity may lacks an Applicative definition by default</span>
+<a name="line-33"></a><a name="Id"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runId</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
+<a name="line-35"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Id</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-36"></a>
+<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-conid'>Id</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span>
+<a name="line-39"></a>    <span class='hs-conid'>Id</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;*&gt;</span> <span class='hs-conid'>Id</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Id</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/Text-Parsimony.html
hunk ./doc/html/parsimony/src/Text-Parsimony.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Text/Parsimony.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-2"></a><span class='hs-comment'>-- |</span>
+<a name="line-3"></a><span class='hs-comment'>-- Module      :  Text.Parsimony</span>
+<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD</span>
+<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-8"></a><span class='hs-comment'>-- Portability :  non-portable (type families, GADTs)</span>
+<a name="line-9"></a><span class='hs-comment'>--</span>
+<a name="line-10"></a><span class='hs-comment'>-- Parallel parser combinators</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span>
+<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Mode</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-21"></a>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Error</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Mode</span>
+<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsimony</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+</pre></body>
+</html>
addfile ./doc/html/parsimony/src/hscolour.css
hunk ./doc/html/parsimony/src/hscolour.css 1
+.hs-keyglyph, .hs-layout {color: red;}
+.hs-keyword {color: blue;}
+.hs-comment, .hs-comment a {color: green;}
+.hs-str, .hs-chr {color: teal;}
+.hs-keyword, .hs-conid, .hs-varid, .hs-conop, .hs-varop, .hs-num, .hs-cpp, .hs-sel, .hs-definition {}
}
