Saved package config for monoids-0.1.29 written by Cabal-1.6.0.2 using ghc-6.10
LocalBuildInfo {installDirTemplates = InstallDirs {prefix = "/home/ekmett/.cabal", bindir = "$prefix/bin", libdir = "$prefix/lib", libsubdir = "$pkgid/$compiler", dynlibdir = "$libdir", libexecdir = "$prefix/libexec", progdir = "$libdir/hugs/programs", includedir = "$libdir/$libsubdir/include", datadir = "$prefix/share", datasubdir = "$pkgid", docdir = "$datadir/doc/$pkgid", mandir = "$datadir/man", htmldir = "$docdir/html", haddockdir = "$htmldir"}, compiler = Compiler {compilerId = CompilerId GHC (Version {versionBranch = [6,10,1], versionTags = []}), compilerExtensions = [(CPP,"-XCPP"),(PostfixOperators,"-XPostfixOperators"),(PatternGuards,"-XPatternGuards"),(UnicodeSyntax,"-XUnicodeSyntax"),(MagicHash,"-XMagicHash"),(PolymorphicComponents,"-XPolymorphicComponents"),(ExistentialQuantification,"-XExistentialQuantification"),(KindSignatures,"-XKindSignatures"),(EmptyDataDecls,"-XEmptyDataDecls"),(ParallelListComp,"-XParallelListComp"),(TransformListComp,"-XTransformListComp"),(ForeignFunctionInterface,"-XForeignFunctionInterface"),(UnliftedFFITypes,"-XUnliftedFFITypes"),(LiberalTypeSynonyms,"-XLiberalTypeSynonyms"),(Rank2Types,"-XRank2Types"),(RankNTypes,"-XRankNTypes"),(ImpredicativeTypes,"-XImpredicativeTypes"),(TypeOperators,"-XTypeOperators"),(RecursiveDo,"-XRecursiveDo"),(Arrows,"-XArrows"),(UnknownExtension "PArr","-XPArr"),(TemplateHaskell,"-XTemplateHaskell"),(QuasiQuotes,"-XQuasiQuotes"),(Generics,"-XGenerics"),(NoImplicitPrelude,"-XNoImplicitPrelude"),(RecordWildCards,"-XRecordWildCards"),(NamedFieldPuns,"-XNamedFieldPuns"),(RecordPuns,"-XRecordPuns"),(DisambiguateRecordFields,"-XDisambiguateRecordFields"),(OverloadedStrings,"-XOverloadedStrings"),(GADTs,"-XGADTs"),(ViewPatterns,"-XViewPatterns"),(TypeFamilies,"-XTypeFamilies"),(BangPatterns,"-XBangPatterns"),(NoMonomorphismRestriction,"-XNoMonomorphismRestriction"),(NoMonoPatBinds,"-XNoMonoPatBinds"),(RelaxedPolyRec,"-XRelaxedPolyRec"),(ExtendedDefaultRules,"-XExtendedDefaultRules"),(ImplicitParams,"-XImplicitParams"),(ScopedTypeVariables,"-XScopedTypeVariables"),(PatternSignatures,"-XPatternSignatures"),(UnboxedTuples,"-XUnboxedTuples"),(StandaloneDeriving,"-XStandaloneDeriving"),(DeriveDataTypeable,"-XDeriveDataTypeable"),(TypeSynonymInstances,"-XTypeSynonymInstances"),(FlexibleContexts,"-XFlexibleContexts"),(FlexibleInstances,"-XFlexibleInstances"),(ConstrainedClassMethods,"-XConstrainedClassMethods"),(MultiParamTypeClasses,"-XMultiParamTypeClasses"),(FunctionalDependencies,"-XFunctionalDependencies"),(GeneralizedNewtypeDeriving,"-XGeneralizedNewtypeDeriving"),(OverlappingInstances,"-XOverlappingInstances"),(UndecidableInstances,"-XUndecidableInstances"),(IncoherentInstances,"-XIncoherentInstances"),(PackageImports,"-XPackageImports"),(NewQualifiedOperators,"-XNewQualifiedOperators")]}, buildDir = "dist/build", scratchDir = "dist/scratch", packageDeps = [PackageIdentifier {pkgName = PackageName "QuickCheck", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bitset", pkgVersion = Version {versionBranch = [1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "category-extras", pkgVersion = Version {versionBranch = [0,53,5], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "fingertree", pkgVersion = Version {versionBranch = [0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "parallel", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [3,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "reflection", pkgVersion = Version {versionBranch = [0,1,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,1,1,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,1], versionTags = []}}], installedPkgs = PackageIndex (fromList [(PackageName "Cabal",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "Cabal", pkgVersion = Version {versionBranch = [1,6,0,1], versionTags = []}}, license = BSD3, copyright = "2003-2006, Isaac Jones\n2005-2008, Duncan Coutts", maintainer = "cabal-devel@haskell.org", author = "Isaac Jones <ijones@syntaxpolice.org>\nDuncan Coutts <duncan@haskell.org>", stability = "", homepage = "http://www.haskell.org/cabal/", pkgUrl = "", description = "The Haskell Common Architecture for Building Applications and\nLibraries: a framework defining a common interface for authors to more\neasily build their Haskell applications in a portable way.\n\nThe Haskell Cabal is part of a larger infrastructure for distributing,\norganizing, and cataloging Haskell libraries and tools.", category = "Distribution", exposed = True, exposedModules = [ModuleName ["Distribution","Compiler"],ModuleName ["Distribution","InstalledPackageInfo"],ModuleName ["Distribution","License"],ModuleName ["Distribution","Make"],ModuleName ["Distribution","ModuleName"],ModuleName ["Distribution","Package"],ModuleName ["Distribution","PackageDescription"],ModuleName ["Distribution","PackageDescription","Configuration"],ModuleName ["Distribution","PackageDescription","Parse"],ModuleName ["Distribution","PackageDescription","Check"],ModuleName ["Distribution","ParseUtils"],ModuleName ["Distribution","ReadE"],ModuleName ["Distribution","Simple"],ModuleName ["Distribution","Simple","Build"],ModuleName ["Distribution","Simple","Build","Macros"],ModuleName ["Distribution","Simple","Build","PathsModule"],ModuleName ["Distribution","Simple","BuildPaths"],ModuleName ["Distribution","Simple","Command"],ModuleName ["Distribution","Simple","Compiler"],ModuleName ["Distribution","Simple","Configure"],ModuleName ["Distribution","Simple","GHC"],ModuleName ["Distribution","Simple","Haddock"],ModuleName ["Distribution","Simple","Hugs"],ModuleName ["Distribution","Simple","Install"],ModuleName ["Distribution","Simple","InstallDirs"],ModuleName ["Distribution","Simple","JHC"],ModuleName ["Distribution","Simple","LocalBuildInfo"],ModuleName ["Distribution","Simple","NHC"],ModuleName ["Distribution","Simple","PackageIndex"],ModuleName ["Distribution","Simple","PreProcess"],ModuleName ["Distribution","Simple","PreProcess","Unlit"],ModuleName ["Distribution","Simple","Program"],ModuleName ["Distribution","Simple","Register"],ModuleName ["Distribution","Simple","Setup"],ModuleName ["Distribution","Simple","SrcDist"],ModuleName ["Distribution","Simple","UserHooks"],ModuleName ["Distribution","Simple","Utils"],ModuleName ["Distribution","System"],ModuleName ["Distribution","Text"],ModuleName ["Distribution","Verbosity"],ModuleName ["Distribution","Version"],ModuleName ["Distribution","Compat","ReadP"],ModuleName ["Language","Haskell","Extension"]], hiddenModules = [ModuleName ["Distribution","GetOpt"],ModuleName ["Distribution","Compat","Exception"],ModuleName ["Distribution","Compat","Permissions"],ModuleName ["Distribution","Compat","TempFile"],ModuleName ["Distribution","Simple","GHC","Makefile"],ModuleName ["Distribution","Simple","GHC","IPI641"],ModuleName ["Distribution","Simple","GHC","IPI642"]], importDirs = ["/usr/local/lib/ghc-6.10.1/Cabal-1.6.0.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/Cabal-1.6.0.1"], hsLibraries = ["HSCabal-1.6.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/Cabal/Cabal.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/Cabal"]}]),(PackageName "QuickCheck",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "QuickCheck", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}}, license = BSD3, copyright = "Koen Claessen <koen@chalmers.se>", maintainer = "Koen Claessen <koen@chalmers.se>", author = "Koen Claessen <koen@chalmers.se>", stability = "", homepage = "http://www.cs.chalmers.se/~koen", pkgUrl = "", description = "QuickCheck is a library for random testing of program properties.\n\nThe programmer provides a specification of the program, in\nthe form of properties which functions should satisfy, and\nQuickCheck then tests that the properties hold in a large number\nof randomly generated cases.\n\nSpecifications are expressed in\nHaskell, using combinators defined in the QuickCheck library.\nQuickCheck provides combinators to define properties, observe\nthe distribution of test data, and define test\ndata generators.", category = "Testing", exposed = True, exposedModules = [ModuleName ["Test","QuickCheck"],ModuleName ["Test","QuickCheck","Arbitrary"],ModuleName ["Test","QuickCheck","Function"],ModuleName ["Test","QuickCheck","Gen"],ModuleName ["Test","QuickCheck","Monadic"],ModuleName ["Test","QuickCheck","Property"],ModuleName ["Test","QuickCheck","Test"],ModuleName ["Test","QuickCheck","Text"],ModuleName ["Test","QuickCheck","Poly"],ModuleName ["Test","QuickCheck","State"]], hiddenModules = [ModuleName ["Test","QuickCheck","Exception"]], importDirs = ["/home/ekmett/.cabal/lib/QuickCheck-2.1.0.1/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/QuickCheck-2.1.0.1/ghc-6.10.1"], hsLibraries = ["HSQuickCheck-2.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/QuickCheck-2.1.0.1/html/QuickCheck.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/QuickCheck-2.1.0.1/html"]}]),(PackageName "array",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package defines the classes @IArray@ of immutable arrays and\n@MArray@ of arrays mutable within appropriate monads, as well as\nsome instances of these classes.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Array","Base"],ModuleName ["Data","Array","Diff"],ModuleName ["Data","Array","IArray"],ModuleName ["Data","Array","IO"],ModuleName ["Data","Array","IO","Internals"],ModuleName ["Data","Array","MArray"],ModuleName ["Data","Array","ST"],ModuleName ["Data","Array","Storable"],ModuleName ["Data","Array","Unboxed"],ModuleName ["Data","Array"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/array-0.2.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/array-0.2.0.0"], hsLibraries = ["HSarray-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/array/array.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/array"]}]),(PackageName "base",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This is a backwards-compatible version of the base package.\nIt depends on a later version of base, and was probably supplied\nwith your compiler when it was installed.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"],ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Conc"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Dotnet"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Float"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/base-3.0.3.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/base-3.0.3.0"], hsLibraries = ["HSbase-3.0.3.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/base/base.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/base"]},InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the Prelude and its support libraries,\nand a large collection of useful libraries ranging from data\nstructures to parsing combinators and debugging utilities.", category = "", exposed = True, exposedModules = [ModuleName ["Foreign","Concurrent"],ModuleName ["GHC","Arr"],ModuleName ["GHC","Base"],ModuleName ["GHC","Classes"],ModuleName ["GHC","Conc"],ModuleName ["GHC","ConsoleHandler"],ModuleName ["GHC","Desugar"],ModuleName ["GHC","Enum"],ModuleName ["GHC","Environment"],ModuleName ["GHC","Err"],ModuleName ["GHC","Exception"],ModuleName ["GHC","Exts"],ModuleName ["GHC","Float"],ModuleName ["GHC","ForeignPtr"],ModuleName ["GHC","Handle"],ModuleName ["GHC","IO"],ModuleName ["GHC","IOBase"],ModuleName ["GHC","Int"],ModuleName ["GHC","List"],ModuleName ["GHC","Num"],ModuleName ["GHC","PArr"],ModuleName ["GHC","Pack"],ModuleName ["GHC","Ptr"],ModuleName ["GHC","Read"],ModuleName ["GHC","Real"],ModuleName ["GHC","ST"],ModuleName ["GHC","STRef"],ModuleName ["GHC","Show"],ModuleName ["GHC","Stable"],ModuleName ["GHC","Storable"],ModuleName ["GHC","TopHandler"],ModuleName ["GHC","Unicode"],ModuleName ["GHC","Weak"],ModuleName ["GHC","Word"],ModuleName ["System","Timeout"],ModuleName ["Control","Applicative"],ModuleName ["Control","Arrow"],ModuleName ["Control","Category"],ModuleName ["Control","Concurrent"],ModuleName ["Control","Concurrent","Chan"],ModuleName ["Control","Concurrent","MVar"],ModuleName ["Control","Concurrent","QSem"],ModuleName ["Control","Concurrent","QSemN"],ModuleName ["Control","Concurrent","SampleVar"],ModuleName ["Control","Exception"],ModuleName ["Control","Exception","Base"],ModuleName ["Control","OldException"],ModuleName ["Control","Monad"],ModuleName ["Control","Monad","Fix"],ModuleName ["Control","Monad","Instances"],ModuleName ["Control","Monad","ST"],ModuleName ["Control","Monad","ST","Lazy"],ModuleName ["Control","Monad","ST","Strict"],ModuleName ["Data","Bits"],ModuleName ["Data","Bool"],ModuleName ["Data","Char"],ModuleName ["Data","Complex"],ModuleName ["Data","Dynamic"],ModuleName ["Data","Either"],ModuleName ["Data","Eq"],ModuleName ["Data","Data"],ModuleName ["Data","Fixed"],ModuleName ["Data","Foldable"],ModuleName ["Data","Function"],ModuleName ["Data","HashTable"],ModuleName ["Data","IORef"],ModuleName ["Data","Int"],ModuleName ["Data","Ix"],ModuleName ["Data","List"],ModuleName ["Data","Maybe"],ModuleName ["Data","Monoid"],ModuleName ["Data","Ord"],ModuleName ["Data","Ratio"],ModuleName ["Data","STRef"],ModuleName ["Data","STRef","Lazy"],ModuleName ["Data","STRef","Strict"],ModuleName ["Data","String"],ModuleName ["Data","Traversable"],ModuleName ["Data","Tuple"],ModuleName ["Data","Typeable"],ModuleName ["Data","Unique"],ModuleName ["Data","Version"],ModuleName ["Data","Word"],ModuleName ["Debug","Trace"],ModuleName ["Foreign"],ModuleName ["Foreign","C"],ModuleName ["Foreign","C","Error"],ModuleName ["Foreign","C","String"],ModuleName ["Foreign","C","Types"],ModuleName ["Foreign","ForeignPtr"],ModuleName ["Foreign","Marshal"],ModuleName ["Foreign","Marshal","Alloc"],ModuleName ["Foreign","Marshal","Array"],ModuleName ["Foreign","Marshal","Error"],ModuleName ["Foreign","Marshal","Pool"],ModuleName ["Foreign","Marshal","Utils"],ModuleName ["Foreign","Ptr"],ModuleName ["Foreign","StablePtr"],ModuleName ["Foreign","Storable"],ModuleName ["Numeric"],ModuleName ["Prelude"],ModuleName ["System","Console","GetOpt"],ModuleName ["System","CPUTime"],ModuleName ["System","Environment"],ModuleName ["System","Exit"],ModuleName ["System","IO"],ModuleName ["System","IO","Error"],ModuleName ["System","IO","Unsafe"],ModuleName ["System","Info"],ModuleName ["System","Mem"],ModuleName ["System","Mem","StableName"],ModuleName ["System","Mem","Weak"],ModuleName ["System","Posix","Internals"],ModuleName ["System","Posix","Types"],ModuleName ["Text","ParserCombinators","ReadP"],ModuleName ["Text","ParserCombinators","ReadPrec"],ModuleName ["Text","Printf"],ModuleName ["Text","Read"],ModuleName ["Text","Read","Lex"],ModuleName ["Text","Show"],ModuleName ["Text","Show","Functions"],ModuleName ["Unsafe","Coerce"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/base-4.0.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/base-4.0.0.0"], hsLibraries = ["HSbase-4.0.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/base-4.0.0.0/include"], includes = ["HsBase.h"], depends = [PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "integer", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/base/base.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/base"]}]),(PackageName "bitset",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "bitset", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = LGPL, copyright = "", maintainer = "Denis Bueno <dbueno@gmail.com>", author = "Denis Bueno", stability = "provisional", homepage = "", pkgUrl = "", description = "A /bit set/ maintains a record of members from a type that can be mapped\ninto (non-negative) @Int@s.  Supports insertion, deletion, size, and\nmembership testing, and is completely pure (functional).", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","BitSet"]], hiddenModules = [], importDirs = ["/home/ekmett/.cabal/lib/bitset-1.0/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/bitset-1.0/ghc-6.10.1"], hsLibraries = ["HSbitset-1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "QuickCheck", pkgVersion = Version {versionBranch = [2,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/bitset-1.0/html/bitset.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/bitset-1.0/html"]}]),(PackageName "bytestring",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}}, license = BSD3, copyright = "Copyright (c) Don Stewart   2005-2008,\n(c) Duncan Coutts 2006-2008,\n(c) David Roundy  2003-2005.", maintainer = "dons@galois.com, duncan@haskell.org", author = "Don Stewart, Duncan Coutts", stability = "provisional", homepage = "http://www.cse.unsw.edu.au/~dons/fps.html", pkgUrl = "", description = "A time and space-efficient implementation of byte vectors using\npacked Word8 arrays, suitable for high performance use, both in terms\nof large data quantities, or high speed requirements. Byte vectors\nare encoded as strict 'Word8' arrays of bytes, and lazy lists of\nstrict chunks, held in a 'ForeignPtr', and can be passed between C\nand Haskell with little effort.\n\nTest coverage data for this library is available at:\n<http://code.haskell.org/~dons/tests/bytestring/hpc_index.html>", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","ByteString"],ModuleName ["Data","ByteString","Char8"],ModuleName ["Data","ByteString","Unsafe"],ModuleName ["Data","ByteString","Internal"],ModuleName ["Data","ByteString","Lazy"],ModuleName ["Data","ByteString","Lazy","Char8"],ModuleName ["Data","ByteString","Lazy","Internal"],ModuleName ["Data","ByteString","Fusion"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/bytestring-0.9.1.4"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/bytestring-0.9.1.4"], hsLibraries = ["HSbytestring-0.9.1.4"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/bytestring-0.9.1.4/include"], includes = ["fpstring.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/bytestring/bytestring.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/bytestring"]}]),(PackageName "category-extras",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "category-extras", pkgVersion = Version {versionBranch = [0,53,5], versionTags = []}}, license = BSD3, copyright = "Copyright (C) 2008 Edward A. Kmett,\nCopyright (C) 2004--2008 Dave Menendez,\nCopyright (C) 2007 Iavor Diatchki", maintainer = "Edward A. Kmett <ekmett@gmail.com>", author = "Edward A. Kmett", stability = "experimental", homepage = "http://comonad.com/reader/", pkgUrl = "", description = "A vastly expanded collection of modules implementing various\nideas from category theory. Notable bits include: comonads,\nadjunctions, and various recursion schemes ala\n/Functional Programming with Bananas, Lenses, Envelopes and Barbed Wire/.", category = "Control, Monads, Comonads", exposed = True, exposedModules = [ModuleName ["Control","Category","Monoidal"],ModuleName ["Control","Category","Cartesian"],ModuleName ["Control","Category","Cartesian","Closed"],ModuleName ["Control","Applicative","Parameterized"],ModuleName ["Control","Allegory"],ModuleName ["Control","Arrow","BiKleisli"],ModuleName ["Control","Arrow","CoKleisli"],ModuleName ["Control","Category","Associative"],ModuleName ["Control","Category","Braided"],ModuleName ["Control","Category","Discrete"],ModuleName ["Control","Category","Distributive"],ModuleName ["Control","Category","Dual"],ModuleName ["Control","Category","Hask"],ModuleName ["Control","Category","Object"],ModuleName ["Control","Comonad"],ModuleName ["Control","Comonad","Cofree"],ModuleName ["Control","Comonad","Context"],ModuleName ["Control","Comonad","Coideal"],ModuleName ["Control","Comonad","Density"],ModuleName ["Control","Comonad","Exponent"],ModuleName ["Control","Comonad","Fix"],ModuleName ["Control","Comonad","Indexed"],ModuleName ["Control","Comonad","HigherOrder"],ModuleName ["Control","Comonad","Parameterized"],ModuleName ["Control","Comonad","Pointer"],ModuleName ["Control","Comonad","Reader"],ModuleName ["Control","Comonad","Stream"],ModuleName ["Control","Comonad","Supply"],ModuleName ["Control","Comonad","Trans"],ModuleName ["Control","Dyad"],ModuleName ["Control","Functor"],ModuleName ["Control","Functor","Adjunction"],ModuleName ["Control","Functor","Adjunction","HigherOrder"],ModuleName ["Control","Functor","Algebra"],ModuleName ["Control","Functor","Algebra","Elgot"],ModuleName ["Control","Functor","Categorical"],ModuleName ["Control","Functor","Cone"],ModuleName ["Control","Functor","Composition"],ModuleName ["Control","Functor","Combinators","Const"],ModuleName ["Control","Functor","Combinators","Lift"],ModuleName ["Control","Functor","Combinators","Join"],ModuleName ["Control","Functor","Combinators","Biff"],ModuleName ["Control","Functor","Combinators","Flip"],ModuleName ["Control","Functor","Combinators","Of"],ModuleName ["Control","Functor","Contra"],ModuleName ["Control","Functor","Extras"],ModuleName ["Control","Functor","Exponential"],ModuleName ["Control","Functor","Fix"],ModuleName ["Control","Functor","Full"],ModuleName ["Control","Functor","HigherOrder"],ModuleName ["Control","Functor","HigherOrder","Composition"],ModuleName ["Control","Functor","Indexed"],ModuleName ["Control","Functor","KanExtension"],ModuleName ["Control","Functor","KanExtension","Interpreter"],ModuleName ["Control","Functor","Lambek"],ModuleName ["Control","Functor","Limit"],ModuleName ["Control","Functor","Pointed"],ModuleName ["Control","Functor","Pointed","Composition"],ModuleName ["Control","Functor","Representable"],ModuleName ["Control","Functor","Strong"],ModuleName ["Control","Functor","Yoneda"],ModuleName ["Control","Functor","Zip"],ModuleName ["Control","Functor","Zap"],ModuleName ["Control","Monad","Categorical"],ModuleName ["Control","Monad","Codensity"],ModuleName ["Control","Monad","Free"],ModuleName ["Control","Monad","HigherOrder"],ModuleName ["Control","Monad","Ideal"],ModuleName ["Control","Monad","Indexed"],ModuleName ["Control","Monad","Indexed","Cont"],ModuleName ["Control","Monad","Indexed","Fix"],ModuleName ["Control","Monad","Indexed","State"],ModuleName ["Control","Monad","Indexed","Trans"],ModuleName ["Control","Monad","Parameterized"],ModuleName ["Control","Monad","Hyper"],ModuleName ["Control","Monad","Either"],ModuleName ["Control","Morphism","Ana"],ModuleName ["Control","Morphism","Apo"],ModuleName ["Control","Morphism","Build"],ModuleName ["Control","Morphism","Cata"],ModuleName ["Control","Morphism","Chrono"],ModuleName ["Control","Morphism","Destroy"],ModuleName ["Control","Morphism","Dyna"],ModuleName ["Control","Morphism","Exo"],ModuleName ["Control","Morphism","Futu"],ModuleName ["Control","Morphism","Histo"],ModuleName ["Control","Morphism","Hylo"],ModuleName ["Control","Morphism","Meta","Gibbons"],ModuleName ["Control","Morphism","Meta","Erwig"],ModuleName ["Control","Morphism","Para"],ModuleName ["Control","Morphism","Postpro"],ModuleName ["Control","Morphism","Prepro"],ModuleName ["Control","Morphism","Span"],ModuleName ["Control","Morphism","Synchro"],ModuleName ["Control","Morphism","Universal"],ModuleName ["Control","Morphism","Zygo"],ModuleName ["Data","Void"]], hiddenModules = [ModuleName ["Control","Functor","Internal","Adjunction"],ModuleName ["Control","Functor","Internal","Ideal"]], importDirs = ["/home/ekmett/.cabal/lib/category-extras-0.53.5/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/category-extras-0.53.5/ghc-6.10.1"], hsLibraries = ["HScategory-extras-0.53.5"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "ghc", pkgVersion = Version {versionBranch = [6,10,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/category-extras-0.53.5/html/category-extras.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/category-extras-0.53.5/html"]}]),(PackageName "containers",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains efficient general-purpose implementations\nof various basic immutable container types.  The declared cost of\neach operation is either worst-case or amortized, but remains\nvalid even if structures are shared.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","Graph"],ModuleName ["Data","IntMap"],ModuleName ["Data","IntSet"],ModuleName ["Data","Map"],ModuleName ["Data","Sequence"],ModuleName ["Data","Set"],ModuleName ["Data","Tree"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/containers-0.2.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/containers-0.2.0.0"], hsLibraries = ["HScontainers-0.2.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/containers/containers.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/containers"]}]),(PackageName "directory",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides a library for handling directories.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Directory"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/directory-1.0.0.2"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/directory-1.0.0.2"], hsLibraries = ["HSdirectory-1.0.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/directory-1.0.0.2/include"], includes = ["HsDirectory.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,3,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/directory/directory.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/directory"]}]),(PackageName "editline",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "editline", pkgVersion = Version {versionBranch = [0,2,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Judah Jacobson <judah.jacobson@gmail.com>", author = "", stability = "", homepage = "http://code.haskell.org/editline", pkgUrl = "", description = "This package contains bindings to the BSD editline library\n(<http://www.thrysoee.dk/editline/>).\nIt provides a basic interface to the editline API for\nreading lines of input from the user.\n\nAdditionally, a readline compatibility module is included\nwhich provides a subset of the functions from the\nreadline package.", category = "User Interfaces", exposed = True, exposedModules = [ModuleName ["System","Console","Editline"],ModuleName ["System","Console","Editline","Readline"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/editline-0.2.1.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/editline-0.2.1.0"], hsLibraries = ["HSeditline-0.2.1.0"], extraLibraries = ["edit","ncurses"], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/editline-0.2.1.0/include"], includes = ["HsEditline.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/editline/editline.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/editline"]}]),(PackageName "filepath",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "", author = "Neil Mitchell", stability = "", homepage = "http://www-users.cs.york.ac.uk/~ndm/filepath/", pkgUrl = "", description = "", category = "System", exposed = True, exposedModules = [ModuleName ["System","FilePath"],ModuleName ["System","FilePath","Posix"],ModuleName ["System","FilePath","Windows"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/filepath-1.1.0.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/filepath-1.1.0.1"], hsLibraries = ["HSfilepath-1.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/filepath/filepath.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/filepath"]}]),(PackageName "fingertree",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "fingertree", pkgVersion = Version {versionBranch = [0,0], versionTags = []}}, license = BSD3, copyright = "(c) 2006 Ross Paterson, Ralf Hinze", maintainer = "Ross Paterson <ross@soi.city.ac.uk>", author = "", stability = "", homepage = "", pkgUrl = "", description = "A general sequence representation with arbitrary\nannotations, for use as a base for implementations of\nvarious collection types, as described in section 4 of\n\n* Ralf Hinze and Ross Paterson,\n\\\"Finger trees: a simple general-purpose data structure\\\",\n/Journal of Functional Programming/ 16:2 (2006) pp 197-217.\n<http://www.soi.city.ac.uk/~ross/papers/FingerTree.html>\n\nFor a directly usable sequence type, see \"Data.Sequence\"\nin the @base@ package, which is a specialization of\nthis structure.", category = "Data Structures", exposed = True, exposedModules = [ModuleName ["Data","FingerTree"]], hiddenModules = [], importDirs = ["/home/ekmett/.cabal/lib/fingertree-0.0/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/fingertree-0.0/ghc-6.10.1"], hsLibraries = ["HSfingertree-0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/fingertree-0.0/html/fingertree.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/fingertree-0.0/html"]}]),(PackageName "ghc",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "ghc", pkgVersion = Version {versionBranch = [6,10,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "The GHC Team", stability = "", homepage = "http://www.haskell.org/ghc/", pkgUrl = "", description = "GHC's functionality can be useful for more things than just\ncompiling Haskell programs. Important use cases are programs\nthat analyse (and perhaps transform) Haskell code. Others\ninclude loading Haskell code dynamically in a GHCi-like manner.\nFor this reason, a lot of GHC's functionality is made available\nthrough this package.", category = "Development", exposed = False, exposedModules = [ModuleName ["AsmCodeGen"],ModuleName ["MachCodeGen"],ModuleName ["MachInstrs"],ModuleName ["MachRegs"],ModuleName ["NCGMonad"],ModuleName ["PositionIndependentCode"],ModuleName ["PprMach"],ModuleName ["RegAllocColor"],ModuleName ["RegAllocInfo"],ModuleName ["RegAllocLinear"],ModuleName ["RegAllocStats"],ModuleName ["RegArchBase"],ModuleName ["RegArchX86"],ModuleName ["RegCoalesce"],ModuleName ["RegLiveness"],ModuleName ["RegSpill"],ModuleName ["RegSpillClean"],ModuleName ["RegSpillCost"],ModuleName ["DsMeta"],ModuleName ["TcSplice"],ModuleName ["Convert"],ModuleName ["ByteCodeAsm"],ModuleName ["ByteCodeFFI"],ModuleName ["ByteCodeGen"],ModuleName ["ByteCodeInstr"],ModuleName ["ByteCodeItbls"],ModuleName ["ByteCodeLink"],ModuleName ["Debugger"],ModuleName ["GhciMonad"],ModuleName ["GhciTags"],ModuleName ["InteractiveUI"],ModuleName ["LibFFI"],ModuleName ["Linker"],ModuleName ["ObjLink"],ModuleName ["RtClosureInspect"],ModuleName ["BasicTypes"],ModuleName ["DataCon"],ModuleName ["Demand"],ModuleName ["Exception"],ModuleName ["Id"],ModuleName ["IdInfo"],ModuleName ["Literal"],ModuleName ["MkId"],ModuleName ["Module"],ModuleName ["Name"],ModuleName ["NameEnv"],ModuleName ["NameSet"],ModuleName ["NewDemand"],ModuleName ["OccName"],ModuleName ["RdrName"],ModuleName ["SrcLoc"],ModuleName ["UniqSupply"],ModuleName ["Unique"],ModuleName ["Var"],ModuleName ["VarEnv"],ModuleName ["VarSet"],ModuleName ["BlockId"],ModuleName ["CLabel"],ModuleName ["Cmm"],ModuleName ["CmmBrokenBlock"],ModuleName ["CmmCPS"],ModuleName ["CmmCPSGen"],ModuleName ["CmmCPSZ"],ModuleName ["CmmCallConv"],ModuleName ["CmmCommonBlockElimZ"],ModuleName ["CmmContFlowOpt"],ModuleName ["CmmCvt"],ModuleName ["CmmExpr"],ModuleName ["CmmInfo"],ModuleName ["CmmLex"],ModuleName ["CmmLint"],ModuleName ["CmmLive"],ModuleName ["CmmLiveZ"],ModuleName ["CmmOpt"],ModuleName ["CmmParse"],ModuleName ["CmmProcPoint"],ModuleName ["CmmProcPointZ"],ModuleName ["CmmSpillReload"],ModuleName ["CmmTx"],ModuleName ["CmmUtils"],ModuleName ["CmmZipUtil"],ModuleName ["DFMonad"],ModuleName ["Dataflow"],ModuleName ["MachOp"],ModuleName ["MkZipCfg"],ModuleName ["MkZipCfgCmm"],ModuleName ["OptimizationFuel"],ModuleName ["PprC"],ModuleName ["PprCmm"],ModuleName ["PprCmmZ"],ModuleName ["StackColor"],ModuleName ["StackPlacements"],ModuleName ["ZipCfg"],ModuleName ["ZipCfgCmmRep"],ModuleName ["ZipCfgExtras"],ModuleName ["ZipDataflow"],ModuleName ["Bitmap"],ModuleName ["CgBindery"],ModuleName ["CgCallConv"],ModuleName ["CgCase"],ModuleName ["CgClosure"],ModuleName ["CgCon"],ModuleName ["CgExpr"],ModuleName ["CgForeignCall"],ModuleName ["CgHeapery"],ModuleName ["CgHpc"],ModuleName ["CgInfoTbls"],ModuleName ["CgLetNoEscape"],ModuleName ["CgMonad"],ModuleName ["CgParallel"],ModuleName ["CgPrimOp"],ModuleName ["CgProf"],ModuleName ["CgStackery"],ModuleName ["CgTailCall"],ModuleName ["CgTicky"],ModuleName ["CgUtils"],ModuleName ["ClosureInfo"],ModuleName ["CodeGen"],ModuleName ["SMRep"],ModuleName ["CoreFVs"],ModuleName ["CoreLint"],ModuleName ["CorePrep"],ModuleName ["CoreSubst"],ModuleName ["CoreSyn"],ModuleName ["CoreTidy"],ModuleName ["CoreUnfold"],ModuleName ["CoreUtils"],ModuleName ["ExternalCore"],ModuleName ["MkCore"],ModuleName ["MkExternalCore"],ModuleName ["PprCore"],ModuleName ["PprExternalCore"],ModuleName ["CprAnalyse"],ModuleName ["Check"],ModuleName ["Coverage"],ModuleName ["Desugar"],ModuleName ["DsArrows"],ModuleName ["DsBinds"],ModuleName ["DsCCall"],ModuleName ["DsExpr"],ModuleName ["DsForeign"],ModuleName ["DsGRHSs"],ModuleName ["DsListComp"],ModuleName ["DsMonad"],ModuleName ["DsUtils"],ModuleName ["Match"],ModuleName ["MatchCon"],ModuleName ["MatchLit"],ModuleName ["HsBinds"],ModuleName ["HsDecls"],ModuleName ["HsDoc"],ModuleName ["HsExpr"],ModuleName ["HsImpExp"],ModuleName ["HsLit"],ModuleName ["HsPat"],ModuleName ["HsSyn"],ModuleName ["HsTypes"],ModuleName ["HsUtils"],ModuleName ["BinIface"],ModuleName ["BuildTyCl"],ModuleName ["IfaceEnv"],ModuleName ["IfaceSyn"],ModuleName ["IfaceType"],ModuleName ["LoadIface"],ModuleName ["MkIface"],ModuleName ["TcIface"],ModuleName ["BreakArray"],ModuleName ["CmdLineParser"],ModuleName ["CodeOutput"],ModuleName ["Config"],ModuleName ["Constants"],ModuleName ["DriverMkDepend"],ModuleName ["DriverPhases"],ModuleName ["DriverPipeline"],ModuleName ["DynFlags"],ModuleName ["ErrUtils"],ModuleName ["Finder"],ModuleName ["GHC"],ModuleName ["HeaderInfo"],ModuleName ["HscMain"],ModuleName ["HscStats"],ModuleName ["HscTypes"],ModuleName ["InteractiveEval"],ModuleName ["PackageConfig"],ModuleName ["Packages"],ModuleName ["ParsePkgConf"],ModuleName ["PprTyThing"],ModuleName ["StaticFlags"],ModuleName ["StaticFlagParser"],ModuleName ["SysTools"],ModuleName ["TidyPgm"],ModuleName ["Ctype"],ModuleName ["HaddockLex"],ModuleName ["HaddockParse"],ModuleName ["HaddockUtils"],ModuleName ["LexCore"],ModuleName ["Lexer"],ModuleName ["Parser"],ModuleName ["ParserCore"],ModuleName ["ParserCoreUtils"],ModuleName ["RdrHsSyn"],ModuleName ["ForeignCall"],ModuleName ["PrelInfo"],ModuleName ["PrelNames"],ModuleName ["PrelRules"],ModuleName ["PrimOp"],ModuleName ["TysPrim"],ModuleName ["TysWiredIn"],ModuleName ["CostCentre"],ModuleName ["SCCfinal"],ModuleName ["RnBinds"],ModuleName ["RnEnv"],ModuleName ["RnExpr"],ModuleName ["RnHsDoc"],ModuleName ["RnHsSyn"],ModuleName ["RnNames"],ModuleName ["RnPat"],ModuleName ["RnSource"],ModuleName ["RnTypes"],ModuleName ["CSE"],ModuleName ["FloatIn"],ModuleName ["FloatOut"],ModuleName ["LiberateCase"],ModuleName ["OccurAnal"],ModuleName ["SAT"],ModuleName ["SetLevels"],ModuleName ["SimplCore"],ModuleName ["SimplEnv"],ModuleName ["SimplMonad"],ModuleName ["SimplUtils"],ModuleName ["Simplify"],ModuleName ["SRT"],ModuleName ["SimplStg"],ModuleName ["StgStats"],ModuleName ["Rules"],ModuleName ["SpecConstr"],ModuleName ["Specialise"],ModuleName ["CoreToStg"],ModuleName ["StgLint"],ModuleName ["StgSyn"],ModuleName ["DmdAnal"],ModuleName ["SaAbsInt"],ModuleName ["SaLib"],ModuleName ["StrictAnal"],ModuleName ["WorkWrap"],ModuleName ["WwLib"],ModuleName ["FamInst"],ModuleName ["Inst"],ModuleName ["TcArrows"],ModuleName ["TcBinds"],ModuleName ["TcClassDcl"],ModuleName ["TcDefaults"],ModuleName ["TcDeriv"],ModuleName ["TcEnv"],ModuleName ["TcExpr"],ModuleName ["TcForeign"],ModuleName ["TcGenDeriv"],ModuleName ["TcHsSyn"],ModuleName ["TcHsType"],ModuleName ["TcInstDcls"],ModuleName ["TcMType"],ModuleName ["TcMatches"],ModuleName ["TcPat"],ModuleName ["TcRnDriver"],ModuleName ["TcRnMonad"],ModuleName ["TcRnTypes"],ModuleName ["TcRules"],ModuleName ["TcSimplify"],ModuleName ["TcTyClsDecls"],ModuleName ["TcTyDecls"],ModuleName ["TcTyFuns"],ModuleName ["TcType"],ModuleName ["TcUnify"],ModuleName ["Class"],ModuleName ["Coercion"],ModuleName ["FamInstEnv"],ModuleName ["FunDeps"],ModuleName ["Generics"],ModuleName ["InstEnv"],ModuleName ["TyCon"],ModuleName ["Type"],ModuleName ["TypeRep"],ModuleName ["Unify"],ModuleName ["Bag"],ModuleName ["Binary"],ModuleName ["BufWrite"],ModuleName ["Digraph"],ModuleName ["Encoding"],ModuleName ["FastBool"],ModuleName ["FastFunctions"],ModuleName ["FastMutInt"],ModuleName ["FastString"],ModuleName ["FastTypes"],ModuleName ["Fingerprint"],ModuleName ["FiniteMap"],ModuleName ["GraphBase"],ModuleName ["GraphColor"],ModuleName ["GraphOps"],ModuleName ["GraphPpr"],ModuleName ["IOEnv"],ModuleName ["Interval"],ModuleName ["LazyUniqFM"],ModuleName ["ListSetOps"],ModuleName ["Maybes"],ModuleName ["MonadUtils"],ModuleName ["OrdList"],ModuleName ["Outputable"],ModuleName ["Panic"],ModuleName ["Pretty"],ModuleName ["State"],ModuleName ["StringBuffer"],ModuleName ["Unicode"],ModuleName ["UniqFM"],ModuleName ["UniqSet"],ModuleName ["Util"],ModuleName ["VectBuiltIn"],ModuleName ["VectCore"],ModuleName ["VectMonad"],ModuleName ["VectType"],ModuleName ["VectUtils"],ModuleName ["Vectorise"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/ghc-6.10.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/ghc-6.10.1"], hsLibraries = ["HSghc-6.10.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/ghc-6.10.1/include"], includes = [], depends = [PackageIdentifier {pkgName = PackageName "Cabal", pkgVersion = Version {versionBranch = [1,6,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "editline", pkgVersion = Version {versionBranch = [0,2,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "haskell98", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "hpc", pkgVersion = Version {versionBranch = [0,5,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,3,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/ghc/ghc.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/ghc"]}]),(PackageName "ghc-prim",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "GHC primitives.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Prim"],ModuleName ["GHC","Bool"],ModuleName ["GHC","Generics"],ModuleName ["GHC","Ordering"],ModuleName ["GHC","PrimopWrappers"],ModuleName ["GHC","IntWord32"],ModuleName ["GHC","IntWord64"],ModuleName ["GHC","Tuple"],ModuleName ["GHC","Types"],ModuleName ["GHC","Unit"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/ghc-prim-0.1.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/ghc-prim-0.1.0.0"], hsLibraries = ["HSghc-prim-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/ghc-prim/ghc-prim.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/ghc-prim"]}]),(PackageName "haskell98",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "haskell98", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "http://www.haskell.org/definition/", pkgUrl = "", description = "This package provides compatibility with the modules of Haskell\n98 and the FFI addendum, by means of wrappers around modules from\nthe base package (which in many cases have additional features).\nHowever Prelude, Numeric and Foreign are provided directly by\nthe base package.", category = "", exposed = True, exposedModules = [ModuleName ["Array"],ModuleName ["CPUTime"],ModuleName ["Char"],ModuleName ["Complex"],ModuleName ["Directory"],ModuleName ["IO"],ModuleName ["Ix"],ModuleName ["List"],ModuleName ["Locale"],ModuleName ["Maybe"],ModuleName ["Monad"],ModuleName ["Random"],ModuleName ["Ratio"],ModuleName ["System"],ModuleName ["Time"],ModuleName ["Bits"],ModuleName ["CError"],ModuleName ["CForeign"],ModuleName ["CString"],ModuleName ["CTypes"],ModuleName ["ForeignPtr"],ModuleName ["Int"],ModuleName ["MarshalAlloc"],ModuleName ["MarshalArray"],ModuleName ["MarshalError"],ModuleName ["MarshalUtils"],ModuleName ["Ptr"],ModuleName ["StablePtr"],ModuleName ["Storable"],ModuleName ["Word"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/haskell98-1.0.1.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/haskell98-1.0.1.0"], hsLibraries = ["HShaskell98-1.0.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/haskell98/haskell98.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/haskell98"]}]),(PackageName "hpc",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "hpc", pkgVersion = Version {versionBranch = [0,5,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", description = "", category = "Control", exposed = True, exposedModules = [ModuleName ["Trace","Hpc","Util"],ModuleName ["Trace","Hpc","Mix"],ModuleName ["Trace","Hpc","Tix"],ModuleName ["Trace","Hpc","Reflect"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/hpc-0.5.0.2"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/hpc-0.5.0.2"], hsLibraries = ["HShpc-0.5.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/hpc/hpc.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/hpc"]}]),(PackageName "integer",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "integer", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains an Integer library based on GMP.", category = "", exposed = True, exposedModules = [ModuleName ["GHC","Integer"],ModuleName ["GHC","Integer","Internals"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/integer-0.1.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/integer-0.1.0.0"], hsLibraries = ["HSinteger-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/integer/integer.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/integer"]}]),(PackageName "mtl",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "Andy Gill", stability = "", homepage = "", pkgUrl = "", description = "A monad transformer library, inspired by the paper /Functional\nProgramming with Overloading and Higher-Order Polymorphism/,\nby Mark P Jones (<http://web.cecs.pdx.edu/~mpj/pubs/springschool.html>),\nAdvanced School of Functional Programming, 1995.", category = "Control", exposed = True, exposedModules = [ModuleName ["Control","Monad","Cont"],ModuleName ["Control","Monad","Cont","Class"],ModuleName ["Control","Monad","Error"],ModuleName ["Control","Monad","Error","Class"],ModuleName ["Control","Monad","Identity"],ModuleName ["Control","Monad","List"],ModuleName ["Control","Monad","RWS"],ModuleName ["Control","Monad","RWS","Class"],ModuleName ["Control","Monad","RWS","Lazy"],ModuleName ["Control","Monad","RWS","Strict"],ModuleName ["Control","Monad","Reader"],ModuleName ["Control","Monad","Reader","Class"],ModuleName ["Control","Monad","State"],ModuleName ["Control","Monad","State","Class"],ModuleName ["Control","Monad","State","Lazy"],ModuleName ["Control","Monad","State","Strict"],ModuleName ["Control","Monad","Trans"],ModuleName ["Control","Monad","Writer"],ModuleName ["Control","Monad","Writer","Class"],ModuleName ["Control","Monad","Writer","Lazy"],ModuleName ["Control","Monad","Writer","Strict"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/mtl-1.1.0.2"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/mtl-1.1.0.2"], hsLibraries = ["HSmtl-1.1.0.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/mtl/mtl.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/mtl"]}]),(PackageName "old-locale",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides the old locale library.\nFor new code, the new locale library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Locale"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/old-locale-1.0.0.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/old-locale-1.0.0.1"], hsLibraries = ["HSold-locale-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/old-locale/old-locale.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/old-locale"]}]),(PackageName "old-time",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides the old time library.\nFor new code, the new time library is recommended.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Time"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/old-time-1.0.0.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/old-time-1.0.0.1"], hsLibraries = ["HSold-time-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/old-time-1.0.0.1/include"], includes = ["HsTime.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-locale", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/old-time/old-time.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/old-time"]}]),(PackageName "packedstring",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "packedstring", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "(Deprecated) Packed Strings.", category = "", exposed = True, exposedModules = [ModuleName ["Data","PackedString"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/packedstring-0.1.0.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/packedstring-0.1.0.1"], hsLibraries = ["HSpackedstring-0.1.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/packedstring/packedstring.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/packedstring"]}]),(PackageName "parallel",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "parallel", pkgVersion = Version {versionBranch = [1,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides a library for parallel programming.", category = "", exposed = True, exposedModules = [ModuleName ["Control","Parallel"],ModuleName ["Control","Parallel","Strategies"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/parallel-1.1.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/parallel-1.1.0.0"], hsLibraries = ["HSparallel-1.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/parallel/parallel.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/parallel"]}]),(PackageName "parsec",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "parsec", pkgVersion = Version {versionBranch = [3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "Derek Elkins <derek.a.elkins@gmail.com>", author = "Daan Leijen <daan@cs.uu.nl>, Paolo Martini <paolo@nemail.it>", stability = "", homepage = "http://www.cs.uu.nl/~daan/parsec.html", pkgUrl = "", description = "Parsec is designed from scratch as an industrial-strength parser\nlibrary.  It is simple, safe, well documented (on the package\nhomepage), has extensive libraries and good error messages,\nand is also fast.  It is defined as a monad transformer that can be\nstacked on arbitrary monads, and it is also parametric in the\ninput stream type.", category = "Parsing", exposed = True, exposedModules = [ModuleName ["Text","Parsec"],ModuleName ["Text","Parsec","String"],ModuleName ["Text","Parsec","ByteString"],ModuleName ["Text","Parsec","ByteString","Lazy"],ModuleName ["Text","Parsec","Pos"],ModuleName ["Text","Parsec","Error"],ModuleName ["Text","Parsec","Prim"],ModuleName ["Text","Parsec","Char"],ModuleName ["Text","Parsec","Combinator"],ModuleName ["Text","Parsec","Token"],ModuleName ["Text","Parsec","Expr"],ModuleName ["Text","Parsec","Language"],ModuleName ["Text","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec"],ModuleName ["Text","ParserCombinators","Parsec","Char"],ModuleName ["Text","ParserCombinators","Parsec","Combinator"],ModuleName ["Text","ParserCombinators","Parsec","Error"],ModuleName ["Text","ParserCombinators","Parsec","Expr"],ModuleName ["Text","ParserCombinators","Parsec","Language"],ModuleName ["Text","ParserCombinators","Parsec","Perm"],ModuleName ["Text","ParserCombinators","Parsec","Pos"],ModuleName ["Text","ParserCombinators","Parsec","Prim"],ModuleName ["Text","ParserCombinators","Parsec","Token"]], hiddenModules = [], importDirs = ["/home/ekmett/.cabal/lib/parsec-3.0.0/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/parsec-3.0.0/ghc-6.10.1"], hsLibraries = ["HSparsec-3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [3,0,3,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [1,1,0,2], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/parsec-3.0.0/html/parsec.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/parsec-3.0.0/html"]}]),(PackageName "pretty",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains John Hughes's pretty-printing library,\nheavily modified by Simon Peyton Jones.", category = "Text", exposed = True, exposedModules = [ModuleName ["Text","PrettyPrint"],ModuleName ["Text","PrettyPrint","HughesPJ"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/pretty-1.0.1.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/pretty-1.0.1.0"], hsLibraries = ["HSpretty-1.0.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/pretty/pretty.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/pretty"]}]),(PackageName "process",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "process", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains libraries for dealing with system processes.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Process","Internals"],ModuleName ["System","Cmd"],ModuleName ["System","Process"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/process-1.0.1.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/process-1.0.1.0"], hsLibraries = ["HSprocess-1.0.1.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/process-1.0.1.0/include"], includes = ["runProcess.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "directory", pkgVersion = Version {versionBranch = [1,0,0,2], versionTags = []}},PackageIdentifier {pkgName = PackageName "filepath", pkgVersion = Version {versionBranch = [1,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,3,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/process/process.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/process"]}]),(PackageName "random",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "random", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package provides a random number library.", category = "System", exposed = True, exposedModules = [ModuleName ["System","Random"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/random-1.0.0.1"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/random-1.0.0.1"], hsLibraries = ["HSrandom-1.0.0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "old-time", pkgVersion = Version {versionBranch = [1,0,0,1], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/random/random.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/random"]}]),(PackageName "reflection",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "reflection", pkgVersion = Version {versionBranch = [0,1,1], versionTags = []}}, license = BSD3, copyright = "2009 Edward A. Kmett, 2004 Oleg Kiselyov and Chung-chieh Shan", maintainer = "Edward A. Kmett <ekmett@gmail.com>", author = "Oleg Kiselyov and Chung-chieh Shan", stability = "experimental", homepage = "http://www.cs.rutgers.edu/~ccshan/prepose/prepose.pdf", pkgUrl = "", description = "Implementation of the code in \"Functional Pearl: Implicit Configurations\" by Oleg Kiselyov and Chung-chieh Shan", category = "Data", exposed = True, exposedModules = [ModuleName ["Data","Reflection"]], hiddenModules = [], importDirs = ["/home/ekmett/.cabal/lib/reflection-0.1.1/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/reflection-0.1.1/ghc-6.10.1"], hsLibraries = ["HSreflection-0.1.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/reflection-0.1.1/html/reflection.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/reflection-0.1.1/html"]}]),(PackageName "rts",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "rts", pkgVersion = Version {versionBranch = [1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "glasgow-haskell-users@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "", category = "", exposed = True, exposedModules = [], hiddenModules = [], importDirs = [], libraryDirs = ["/usr/local/lib/ghc-6.10.1"], hsLibraries = ["HSrts"], extraLibraries = ["m","ffi","gmp","dl","rt"], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/include","PAPI_INCLUDE_DIR"], includes = ["Stg.h"], depends = [], hugsOptions = [], ccOptions = [], ldOptions = ["-u","ghczmprim_GHCziTypes_Izh_static_info","-u","ghczmprim_GHCziTypes_Czh_static_info","-u","ghczmprim_GHCziTypes_Fzh_static_info","-u","ghczmprim_GHCziTypes_Dzh_static_info","-u","base_GHCziPtr_Ptr_static_info","-u","base_GHCziWord_Wzh_static_info","-u","base_GHCziInt_I8zh_static_info","-u","base_GHCziInt_I16zh_static_info","-u","base_GHCziInt_I32zh_static_info","-u","base_GHCziInt_I64zh_static_info","-u","base_GHCziWord_W8zh_static_info","-u","base_GHCziWord_W16zh_static_info","-u","base_GHCziWord_W32zh_static_info","-u","base_GHCziWord_W64zh_static_info","-u","base_GHCziStable_StablePtr_static_info","-u","ghczmprim_GHCziTypes_Izh_con_info","-u","ghczmprim_GHCziTypes_Czh_con_info","-u","ghczmprim_GHCziTypes_Fzh_con_info","-u","ghczmprim_GHCziTypes_Dzh_con_info","-u","base_GHCziPtr_Ptr_con_info","-u","base_GHCziPtr_FunPtr_con_info","-u","base_GHCziStable_StablePtr_con_info","-u","ghczmprim_GHCziBool_False_closure","-u","ghczmprim_GHCziBool_True_closure","-u","base_GHCziPack_unpackCString_closure","-u","base_GHCziIOBase_stackOverflow_closure","-u","base_GHCziIOBase_heapOverflow_closure","-u","base_ControlziExceptionziBase_nonTermination_closure","-u","base_GHCziIOBase_blockedOnDeadMVar_closure","-u","base_GHCziIOBase_blockedIndefinitely_closure","-u","base_ControlziExceptionziBase_nestedAtomically_closure","-u","base_GHCziWeak_runFinalizzerBatch_closure","-u","base_GHCziTopHandler_runIO_closure","-u","base_GHCziTopHandler_runNonIO_closure","-u","base_GHCziConc_ensureIOManagerIsRunning_closure"], frameworkDirs = [], frameworks = [], haddockInterfaces = [], haddockHTMLs = []}]),(PackageName "stm",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "stm", pkgVersion = Version {versionBranch = [2,1,1,2], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "A modular composable concurrency abstraction.", category = "Concurrency", exposed = True, exposedModules = [ModuleName ["Control","Concurrent","STM"],ModuleName ["Control","Concurrent","STM","TArray"],ModuleName ["Control","Concurrent","STM","TVar"],ModuleName ["Control","Concurrent","STM","TChan"],ModuleName ["Control","Concurrent","STM","TMVar"],ModuleName ["Control","Monad","STM"]], hiddenModules = [ModuleName ["Control","Sequential","STM"]], importDirs = ["/usr/local/lib/ghc-6.10.1/stm-2.1.1.2"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/stm-2.1.1.2"], hsLibraries = ["HSstm-2.1.1.2"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "array", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/stm/stm.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/stm"]}]),(PackageName "syb",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "syb", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package contains the generics system described in the\n/Scrap Your Boilerplate/ papers (see <http://www.cs.vu.nl/boilerplate/>).\nIt defines the @Data@ class of types permitting folding and unfolding\nof constructor applications, instances of this class for primitive\ntypes, and a variety of traversals.", category = "", exposed = True, exposedModules = [ModuleName ["Data","Generics"],ModuleName ["Data","Generics","Aliases"],ModuleName ["Data","Generics","Basics"],ModuleName ["Data","Generics","Instances"],ModuleName ["Data","Generics","Schemes"],ModuleName ["Data","Generics","Text"],ModuleName ["Data","Generics","Twins"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/syb-0.1.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/syb-0.1.0.0"], hsLibraries = ["HSsyb-0.1.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/syb/syb.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/syb"]}]),(PackageName "template-haskell",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "template-haskell", pkgVersion = Version {versionBranch = [2,3,0,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "Facilities for manipulating Haskell source code using Template Haskell.", category = "", exposed = True, exposedModules = [ModuleName ["Language","Haskell","TH","Syntax"],ModuleName ["Language","Haskell","TH","PprLib"],ModuleName ["Language","Haskell","TH","Ppr"],ModuleName ["Language","Haskell","TH","Lib"],ModuleName ["Language","Haskell","TH","Quote"],ModuleName ["Language","Haskell","TH"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/template-haskell-2.3.0.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/template-haskell-2.3.0.0"], hsLibraries = ["HStemplate-haskell-2.3.0.0"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "containers", pkgVersion = Version {versionBranch = [0,2,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "packedstring", pkgVersion = Version {versionBranch = [0,1,0,1], versionTags = []}},PackageIdentifier {pkgName = PackageName "pretty", pkgVersion = Version {versionBranch = [1,0,1,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/template-haskell/template-haskell.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/template-haskell"]}]),(PackageName "text",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "text", pkgVersion = Version {versionBranch = [0,1], versionTags = []}}, license = BSD3, copyright = "2008-2009 Tom Harper", maintainer = "Bryan O'Sullivan <bos@serpentine.com>\nTom Harper <rtharper@aftereternity.co.uk>\nDuncan Coutts <duncan@haskell.org>", author = "Tom Harper <rtharper@aftereternity.co.uk>", stability = "", homepage = "", pkgUrl = "", description = "An efficient packed Unicode text type.", category = "Data, Text", exposed = True, exposedModules = [ModuleName ["Data","Text"],ModuleName ["Data","Text","Encoding"],ModuleName ["Data","Text","Encoding","Fusion"],ModuleName ["Data","Text","Foreign"],ModuleName ["Data","Text","Fusion"]], hiddenModules = [ModuleName ["Data","Text","Array"],ModuleName ["Data","Text","Internal"],ModuleName ["Data","Text","Unsafe"],ModuleName ["Data","Text","UnsafeChar"],ModuleName ["Data","Text","Encoding","Utf8"],ModuleName ["Data","Text","Encoding","Utf16"],ModuleName ["Data","Text","Encoding","Utf32"]], importDirs = ["/home/ekmett/.cabal/lib/text-0.1/ghc-6.10.1"], libraryDirs = ["/home/ekmett/.cabal/lib/text-0.1/ghc-6.10.1"], hsLibraries = ["HStext-0.1"], extraLibraries = [], extraGHCiLibraries = [], includeDirs = [], includes = [], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}},PackageIdentifier {pkgName = PackageName "bytestring", pkgVersion = Version {versionBranch = [0,9,1,4], versionTags = []}},PackageIdentifier {pkgName = PackageName "ghc-prim", pkgVersion = Version {versionBranch = [0,1,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/home/ekmett/.cabal/share/doc/text-0.1/html/text.haddock"], haddockHTMLs = ["/home/ekmett/.cabal/share/doc/text-0.1/html"]}]),(PackageName "unix",[InstalledPackageInfo {package = PackageIdentifier {pkgName = PackageName "unix", pkgVersion = Version {versionBranch = [2,3,1,0], versionTags = []}}, license = BSD3, copyright = "", maintainer = "libraries@haskell.org", author = "", stability = "", homepage = "", pkgUrl = "", description = "This package gives you access to the set of operating system\nservices standardised by POSIX 1003.1b (or the IEEE Portable\nOperating System Interface for Computing Environments -\nIEEE Std. 1003.1).\n\nThe package is not supported under Windows (except under Cygwin).", category = "System", exposed = True, exposedModules = [ModuleName ["System","Posix"],ModuleName ["System","Posix","DynamicLinker","Module"],ModuleName ["System","Posix","DynamicLinker","Prim"],ModuleName ["System","Posix","Directory"],ModuleName ["System","Posix","DynamicLinker"],ModuleName ["System","Posix","Env"],ModuleName ["System","Posix","Error"],ModuleName ["System","Posix","Files"],ModuleName ["System","Posix","IO"],ModuleName ["System","Posix","Process"],ModuleName ["System","Posix","Process","Internals"],ModuleName ["System","Posix","Resource"],ModuleName ["System","Posix","Temp"],ModuleName ["System","Posix","Terminal"],ModuleName ["System","Posix","Time"],ModuleName ["System","Posix","Unistd"],ModuleName ["System","Posix","User"],ModuleName ["System","Posix","Signals"],ModuleName ["System","Posix","Signals","Exts"],ModuleName ["System","Posix","Semaphore"],ModuleName ["System","Posix","SharedMem"]], hiddenModules = [], importDirs = ["/usr/local/lib/ghc-6.10.1/unix-2.3.1.0"], libraryDirs = ["/usr/local/lib/ghc-6.10.1/unix-2.3.1.0"], hsLibraries = ["HSunix-2.3.1.0"], extraLibraries = ["util","dl"], extraGHCiLibraries = [], includeDirs = ["/usr/local/lib/ghc-6.10.1/unix-2.3.1.0/include"], includes = ["HsUnix.h","execvpe.h"], depends = [PackageIdentifier {pkgName = PackageName "base", pkgVersion = Version {versionBranch = [4,0,0,0], versionTags = []}}], hugsOptions = [], ccOptions = [], ldOptions = [], frameworkDirs = [], frameworks = [], haddockInterfaces = ["/usr/local/share/doc/ghc/libraries/unix/unix.haddock"], haddockHTMLs = ["/usr/local/share/doc/ghc/libraries/unix"]}])]), pkgDescrFile = Just "./monoids.cabal", localPkgDescr = PackageDescription {package = PackageIdentifier {pkgName = PackageName "monoids", pkgVersion = Version {versionBranch = [0,1,29], versionTags = []}}, license = BSD3, licenseFile = "LICENSE", copyright = "(c) 2009 Edward A. Kmett", maintainer = "Edward A. Kmett <ekmett@gmail.com>", author = "Edward A. Kmett", stability = "experimental", testedWith = [], homepage = "http://comonad.com/reader", pkgUrl = "", bugReports = "", sourceRepos = [], synopsis = "Monoids, specialized containers and a general map/reduce framework", description = "Monoids, specialized containers and a general map/reduce framework", category = "Data, Math, Numerical, Natural Language Processing, Parsing", customFieldsPD = [], buildDepends = [Dependency (PackageName "QuickCheck") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,1], versionTags = []})) (LaterVersion (Version {versionBranch = [2,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,1,0,1], versionTags = []}))),Dependency (PackageName "array") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,0,0], versionTags = []}))),Dependency (PackageName "base") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [4], versionTags = []})) (LaterVersion (Version {versionBranch = [4], versionTags = []}))) (EarlierVersion (Version {versionBranch = [4,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [4,0,0,0], versionTags = []}))),Dependency (PackageName "bitset") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,0], versionTags = []})) (LaterVersion (Version {versionBranch = [1,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,0], versionTags = []}))),Dependency (PackageName "bytestring") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,9], versionTags = []})) (LaterVersion (Version {versionBranch = [0,9], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,0], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,9,1,4], versionTags = []}))),Dependency (PackageName "category-extras") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,53], versionTags = []})) (LaterVersion (Version {versionBranch = [0,53], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,60], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,53,5], versionTags = []}))),Dependency (PackageName "containers") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,2], versionTags = []})) (LaterVersion (Version {versionBranch = [0,2], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,3], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,2,0,0], versionTags = []}))),Dependency (PackageName "fingertree") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,0], versionTags = []})) (LaterVersion (Version {versionBranch = [0,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,0], versionTags = []}))),Dependency (PackageName "mtl") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,0], versionTags = []})) (LaterVersion (Version {versionBranch = [1,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,1,0,2], versionTags = []}))),Dependency (PackageName "parallel") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [1,1], versionTags = []})) (LaterVersion (Version {versionBranch = [1,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [1,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [1,1,0,0], versionTags = []}))),Dependency (PackageName "parsec") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [3,0], versionTags = []})) (LaterVersion (Version {versionBranch = [3,0], versionTags = []}))) (EarlierVersion (Version {versionBranch = [3,1], versionTags = []}))) (ThisVersion (Version {versionBranch = [3,0,0], versionTags = []}))),Dependency (PackageName "reflection") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1,1], versionTags = []}))),Dependency (PackageName "stm") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [2,1], versionTags = []})) (LaterVersion (Version {versionBranch = [2,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [2,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [2,1,1,2], versionTags = []}))),Dependency (PackageName "text") (IntersectVersionRanges (IntersectVersionRanges (UnionVersionRanges (ThisVersion (Version {versionBranch = [0,1], versionTags = []})) (LaterVersion (Version {versionBranch = [0,1], versionTags = []}))) (EarlierVersion (Version {versionBranch = [0,2], versionTags = []}))) (ThisVersion (Version {versionBranch = [0,1], versionTags = []})))], descCabalVersion = UnionVersionRanges (ThisVersion (Version {versionBranch = [1,2], versionTags = []})) (LaterVersion (Version {versionBranch = [1,2], versionTags = []})), buildType = Just Simple, library = Just (Library {exposedModules = [ModuleName ["Data","Field"],ModuleName ["Data","Field","VectorSpace"],ModuleName ["Data","Group"],ModuleName ["Data","Group","Combinators"],ModuleName ["Data","Group","Multiplicative"],ModuleName ["Data","Group","Multiplicative","Sugar"],ModuleName ["Data","Group","Sugar"],ModuleName ["Data","Monoid","Additive"],ModuleName ["Data","Monoid","Additive","Sugar"],ModuleName ["Data","Monoid","Applicative"],ModuleName ["Data","Monoid","Categorical"],ModuleName ["Data","Monoid","Combinators"],ModuleName ["Data","Monoid","FromString"],ModuleName ["Data","Generator"],ModuleName ["Data","Generator","Combinators"],ModuleName ["Data","Generator","Compressive","LZ78"],ModuleName ["Data","Generator","Compressive","RLE"],ModuleName ["Data","Generator","Free"],ModuleName ["Data","Monoid","Instances"],ModuleName ["Data","Monoid","Lexical","SourcePosition"],ModuleName ["Data","Monoid","Lexical","UTF8","Decoder"],ModuleName ["Data","Monoid","Lexical","Words"],ModuleName ["Data","Monoid","Monad"],ModuleName ["Data","Monoid","Multiplicative"],ModuleName ["Data","Monoid","Multiplicative","Sugar"],ModuleName ["Data","Monoid","Ord"],ModuleName ["Data","Monoid","Reducer"],ModuleName ["Data","Monoid","Reducer","Char"],ModuleName ["Data","Monoid","Reducer","With"],ModuleName ["Data","Monoid","Self"],ModuleName ["Data","Monoid","Union"],ModuleName ["Data","Ring"],ModuleName ["Data","Ring","Algebra"],ModuleName ["Data","Ring","Boolean"],ModuleName ["Data","Ring","FromNum"],ModuleName ["Data","Ring","ModularArithmetic"],ModuleName ["Data","Ring","Module"],ModuleName ["Data","Ring","Module","AutomaticDifferentiation"],ModuleName ["Data","Ring","Semi"],ModuleName ["Data","Ring","Semi","BitSet"],ModuleName ["Data","Ring","Semi","Near"],ModuleName ["Data","Ring","Semi","Near","Trie"],ModuleName ["Data","Ring","Semi","Natural"],ModuleName ["Data","Ring","Semi","Ord"],ModuleName ["Data","Ring","Semi","Tropical"],ModuleName ["Data","Ring","Sugar"]], libExposed = True, libBuildInfo = BuildInfo {buildable = True, buildTools = [], cppOptions = [], ccOptions = [], ldOptions = [], pkgconfigDepends = [], frameworks = [], cSources = [], hsSourceDirs = ["."], otherModules = [], extensions = [], extraLibs = [], extraLibDirs = [], includeDirs = [], includes = [], installIncludes = [], options = [(GHC,["-Wall","-fno-warn-duplicate-exports"])], ghcProfOptions = [], ghcSharedOptions = [], customFieldsBI = []}}), executables = [], dataFiles = [], dataDir = "", extraSrcFiles = [], extraTmpFiles = []}, withPrograms = [("alex",ConfiguredProgram {programId = "alex", programVersion = Just (Version {versionBranch = [2,3,1], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/home/ekmett/.cabal/bin/alex"}}),("ar",ConfiguredProgram {programId = "ar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/ar"}}),("cpphs",ConfiguredProgram {programId = "cpphs", programVersion = Just (Version {versionBranch = [1,6], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/home/ekmett/.cabal/bin/cpphs"}}),("gcc",ConfiguredProgram {programId = "gcc", programVersion = Just (Version {versionBranch = [4,2,4], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/gcc"}}),("ghc",ConfiguredProgram {programId = "ghc", programVersion = Just (Version {versionBranch = [6,10,1], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/ghc"}}),("ghc-pkg",ConfiguredProgram {programId = "ghc-pkg", programVersion = Just (Version {versionBranch = [6,10,1], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/ghc-pkg"}}),("haddock",ConfiguredProgram {programId = "haddock", programVersion = Just (Version {versionBranch = [2,3,0], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/haddock"}}),("happy",ConfiguredProgram {programId = "happy", programVersion = Just (Version {versionBranch = [1,18,2], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/home/ekmett/.cabal/bin/happy"}}),("hsc2hs",ConfiguredProgram {programId = "hsc2hs", programVersion = Just (Version {versionBranch = [0,67], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/hsc2hs"}}),("hscolour",ConfiguredProgram {programId = "hscolour", programVersion = Just (Version {versionBranch = [1,11], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/home/ekmett/.cabal/bin/HsColour"}}),("ld",ConfiguredProgram {programId = "ld", programVersion = Nothing, programArgs = ["-x"], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/ld"}}),("pkg-config",ConfiguredProgram {programId = "pkg-config", programVersion = Just (Version {versionBranch = [0,22], versionTags = []}), programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/bin/pkg-config"}}),("ranlib",ConfiguredProgram {programId = "ranlib", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/ranlib"}}),("strip",ConfiguredProgram {programId = "strip", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/usr/local/bin/strip"}}),("tar",ConfiguredProgram {programId = "tar", programVersion = Nothing, programArgs = [], programLocation = FoundOnSystem {locationPath = "/bin/tar"}})], withPackageDB = UserPackageDB, withVanillaLib = True, withProfLib = False, withSharedLib = False, withProfExe = False, withOptimization = NormalOptimisation, withGHCiLib = True, splitObjs = False, stripExes = True, progPrefix = "", progSuffix = ""}