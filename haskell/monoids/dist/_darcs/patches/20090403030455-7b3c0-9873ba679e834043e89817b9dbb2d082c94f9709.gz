[auto
ekmett@gmail.com**20090403030455] {
addfile ./doc/html/monoids/Data-Generator-Combinators.html
addfile ./doc/html/monoids/Data-Generator-Compressive-LZ78.html
addfile ./doc/html/monoids/Data-Generator-Compressive-RLE.html
addfile ./doc/html/monoids/Data-Generator-Free.html
addfile ./doc/html/monoids/Data-Generator.html
addfile ./doc/html/monoids/src/Data-Generator-Combinators.html
addfile ./doc/html/monoids/src/Data-Generator-Compressive-LZ78.html
addfile ./doc/html/monoids/src/Data-Generator-Compressive-RLE.html
addfile ./doc/html/monoids/src/Data-Generator-Free.html
addfile ./doc/html/monoids/src/Data-Generator.html
hunk ./doc/html/monoids/Data-Field-VectorSpace.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Field.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator-Combinators.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Generator.Combinators</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Generator-Combinators.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Generator.Combinators</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>non-portable (type families, MPTCs)</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><B
+>Contents</B
+></TD
+></TR
+><TR
+><TD
+><DL
+><DT
+><A HREF="#1"
+>Monadic Reduction
+</A
+></DT
+><DT
+><A HREF="#2"
+>Applicative Reduction
+</A
+></DT
+><DT
+><A HREF="#3"
+>Logical Reduction
+</A
+></DT
+><DT
+><A HREF="#4"
+>Monoidal Reduction
+</A
+></DT
+><DT
+><A HREF="#5"
+>List-Like Reduction
+</A
+></DT
+></DL
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Utilities for working with Monoids that conflict with names from the <A HREF="Prelude.html"
+>Prelude</A
+>,
+ <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+>, <A HREF="Control-Monad.html"
+>Control.Monad</A
+> or elsewhere. Intended to be imported qualified.
+</P
+><PRE
+> import Data.Generator.Combinators as Generator
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapM_"
+>mapM_</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; m b) -&gt; c -&gt; m ()</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AforM_"
+>forM_</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; c -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; m b) -&gt; m ()</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Amsum"
+>msum</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, m a ~ <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) =&gt; c -&gt; m a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Atraverse_"
+>traverse_</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; f b) -&gt; c -&gt; f ()</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Afor_"
+>for_</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f) =&gt; c -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; f b) -&gt; f ()</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aasum"
+>asum</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f, f a ~ <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) =&gt; c -&gt; f a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aand"
+>and</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aor"
+>or</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aany"
+>any</A
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aall"
+>all</A
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AfoldMap"
+>foldMap</A
+> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m, <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; m) -&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Afold"
+>fold</A
+> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m, <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ m) =&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AtoList"
+>toList</A
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; c -&gt; [<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c]</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AconcatMap"
+>concatMap</A
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; [b]) -&gt; c -&gt; [b]</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aelem"
+>elem</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Afilter"
+>filter</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AfilterWith"
+>filterWith</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; n</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Afind"
+>find</A
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Asum"
+>sum</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aproduct"
+>product</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AnotElem"
+>notElem</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="1"
+>Monadic Reduction
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapM_"
+></A
+><B
+>mapM_</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; m b) -&gt; c -&gt; m ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#mapM_"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> using the <TT
+><A HREF="Data-Monoid-Monad.html#v%3AAction"
+>Action</A
+></TT
+> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+> and <A HREF="Control-Monad.html"
+>Control.Monad</A
+>
+</P
+><PRE
+>
+    <TT
+><A HREF="Data-Generator.html#v%3AmapReduceWith"
+>mapReduceWith</A
+></TT
+> <TT
+><A HREF="Data-Monoid-Monad.html#v%3AgetAction"
+>getAction</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AforM_"
+></A
+><B
+>forM_</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m) =&gt; c -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; m b) -&gt; m ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#forM_"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Convenience function as found in <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+> and <A HREF="Control-Monad.html"
+>Control.Monad</A
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3Aflip"
+>flip</A
+></TT
+> <TT
+><A HREF="Data-Generator-Combinators.html#v%3AmapM_"
+>mapM_</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Amsum"
+></A
+><B
+>msum</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, m a ~ <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) =&gt; c -&gt; m a</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#msum"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>The sum of a collection of actions, generalizing <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-List.html#v%3Aconcat"
+>concat</A
+></TT
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="Data-Monoid-Monad.html#v%3AgetMonadSum"
+>getMonadSum</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="2"
+>Applicative Reduction
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Atraverse_"
+></A
+><B
+>traverse_</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; f b) -&gt; c -&gt; f ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#traverse_"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> using the <TT
+><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
+>Traversal</A
+></TT
+> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> <TT
+><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversal"
+>getTraversal</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Afor_"
+></A
+><B
+>for_</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f) =&gt; c -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; f b) -&gt; f ()</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#for_"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Convenience function as found in <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3Aflip"
+>flip</A
+></TT
+> <TT
+><A HREF="Data-Generator-Combinators.html#v%3Atraverse_"
+>traverse_</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aasum"
+></A
+><B
+>asum</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f, f a ~ <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) =&gt; c -&gt; f a</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#asum"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>The sum of a collection of actions, generalizing <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-List.html#v%3Aconcat"
+>concat</A
+></TT
+>
+</P
+><PRE
+>
+    <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="Data-Monoid-Applicative.html#v%3AgetAlt"
+>getAlt</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="3"
+>Logical Reduction
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aand"
+></A
+><B
+>and</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#and"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3Areduce"
+>reduce</A
+></TT
+> a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> that contains values of type <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TT
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAll"
+>getAll</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aor"
+></A
+><B
+>or</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#or"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3Areduce"
+>reduce</A
+></TT
+> a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> that contains values of type <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TT
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAny"
+>getAny</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aany"
+></A
+><B
+>any</B
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#any"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> any <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> checking to see if any of its values match the supplied predicate
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AmapReduceWith"
+>mapReduceWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAny"
+>getAny</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aall"
+></A
+><B
+>all</B
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#all"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> any <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> checking to see if all of its values match the supplied predicate
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AmapReduceWith"
+>mapReduceWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAll"
+>getAll</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="4"
+>Monoidal Reduction
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AfoldMap"
+></A
+><B
+>foldMap</B
+> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m, <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; m) -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#foldMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> using the <TT
+><A HREF="Data-Monoid-Self.html#v%3ASelf"
+>Self</A
+></TT
+> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AmapReduceWith"
+>mapReduceWith</A
+></TT
+> <TT
+><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
+>getSelf</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Afold"
+></A
+><B
+>fold</B
+> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m, <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ m) =&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#fold"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3Areduce"
+>reduce</A
+></TT
+> a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> using the <TT
+><A HREF="Data-Monoid-Self.html#v%3ASelf"
+>Self</A
+></TT
+> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
+>Data.Foldable</A
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
+>getSelf</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AtoList"
+></A
+><B
+>toList</B
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; c -&gt; [<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#toList"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Convert any <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> to a list of its contents. Specialization of <TT
+><A HREF="Data-Generator.html#v%3Areduce"
+>reduce</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="5"
+>List-Like Reduction
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AconcatMap"
+></A
+><B
+>concatMap</B
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; [b]) -&gt; c -&gt; [b]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#concatMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Type specialization of <A HREF="foldMap.html"
+>foldMap</A
+> above
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aelem"
+></A
+><B
+>elem</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#elem"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Check to see if <TT
+><A HREF="Data-Generator-Combinators.html#v%3Aany"
+>any</A
+></TT
+> member of the <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> matches the supplied value
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Afilter"
+></A
+><B
+>filter</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#filter"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Efficiently <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> a subset of the elements in a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AfilterWith"
+></A
+><B
+>filterWith</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; n</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#filterWith"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Allows idiomatic specialization of filter by proving a function that will be used to transform the output
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Afind"
+></A
+><B
+>find</B
+> :: <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#find"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>A specialization of <TT
+><A HREF="Data-Generator-Combinators.html#v%3Afilter"
+>filter</A
+></TT
+> using the <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AFirst"
+>First</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+></TT
+>, analogous to Data.List.find
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator-Combinators.html#v%3AfilterWith"
+>filterWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetFirst"
+>getFirst</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Asum"
+></A
+><B
+>sum</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#sum"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently sum over the members of any <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetSum"
+>getSum</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aproduct"
+></A
+><B
+>product</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#product"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>Efficiently take the product of every member of a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+>
+</P
+><PRE
+>
+     <TT
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>reduceWith</A
+></TT
+> <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetProduct"
+>getProduct</A
+></TT
+>
+</PRE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AnotElem"
+></A
+><B
+>notElem</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Combinators.html#notElem"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Check to make sure that the supplied value is not a member of the <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./doc/html/monoids/Data-Generator-Compressive-LZ78.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Generator.Compressive.LZ78</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Generator.Compressive.LZ78</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>portable</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><B
+>Contents</B
+></TD
+></TR
+><TR
+><TD
+><DL
+><DT
+><A HREF="#1"
+>Lempel-Ziv 78 
+</A
+></DT
+><DT
+><A HREF="#2"
+>Decoding
+</A
+></DT
+><DT
+><A HREF="#3"
+>Encoding
+</A
+></DT
+><DT
+><A HREF="#4"
+>QuickCheck Properties
+</A
+></DT
+></DL
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Compression algorithms are all about exploiting redundancy. When applying
+ an expensive <TT
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+></TT
+> to a redundant source, it may be better to 
+ extract the structural redundancy that is present. <TT
+><A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+></TT
+> is a compression
+ algorithm that does so, without requiring the dictionary to be populated
+ with all of the possible values of a data type unlike its later 
+ refinement LZW, and which has fewer comparison reqirements during encoding
+ than its earlier counterpart LZ77. Since we aren't storing these as a 
+ bitstream the LZSS refinement of only encoding pointers once you cross
+ the break-even point is a net loss. 
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3ALZ78"
+>LZ78</A
+> a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Adecode"
+>decode</A
+> ::  <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a -&gt; [a]</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aencode"
+>encode</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; [a] -&gt; <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AencodeEq"
+>encodeEq</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aprop_decode_encode"
+>prop_decode_encode</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; [a] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aprop_decode_encodeEq"
+>prop_decode_encodeEq</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="1"
+>Lempel-Ziv 78 
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3ALZ78"
+></A
+><B
+>LZ78</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html#LZ78"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:LZ78')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:LZ78" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
+>Foldable</A
+> <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="2"
+>Decoding
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Adecode"
+></A
+><B
+>decode</B
+> ::  <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a -&gt; [a]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html#decode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>a type-constrained <TT
+><A HREF="Data-Generator.html#v%3Areduce"
+>reduce</A
+></TT
+> operation
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="3"
+>Encoding
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aencode"
+></A
+><B
+>encode</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; [a] -&gt; <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html#encode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>contruct an LZ78-compressed <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> using a <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+></TT
+> internally, requires an instance of Ord.
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AencodeEq"
+></A
+><B
+>encodeEq</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html#encodeEq"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>contruct an LZ78-compressed <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> using a list internally, requires an instance of Eq.
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="4"
+>QuickCheck Properties
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aprop_decode_encode"
+></A
+><B
+>prop_decode_encode</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; [a] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html#prop_decode_encode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>QuickCheck property: decode . encode = id
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aprop_decode_encodeEq"
+></A
+><B
+>prop_decode_encodeEq</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-LZ78.html#prop_decode_encodeEq"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>QuickCheck property: decode . encodeEq = id
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./doc/html/monoids/Data-Generator-Compressive-RLE.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Generator.Compressive.RLE</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Generator.Compressive.RLE</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>portable</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Compression algorithms are all about exploiting redundancy. When applying
+ an expensive <TT
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+></TT
+> to a redundant source, it may be better to 
+ extract the structural redundancy that is present. Run length encoding
+ can do so for long runs of identical inputs.
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3ARLE"
+>RLE</A
+> f a = <A HREF="#v%3ARLE"
+>RLE</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetRLE"
+>getRLE</A
+> :: f (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARun"
+>Run</A
+> a)</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A HREF="#t%3ARun"
+>Run</A
+> a = <A HREF="#v%3ARun"
+>Run</A
+> a !!<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
+>Int</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Adecode"
+>decode</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
+>Foldable</A
+> f =&gt; <A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> f a -&gt; [a]</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aencode"
+>encode</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AencodeList"
+>encodeList</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> [] a</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aprop_decode_encode"
+>prop_decode_encode</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Aprop_decode_encodeList"
+>prop_decode_encodeList</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3ARLE"
+></A
+><B
+>RLE</B
+> f a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#RLE"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>A <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> which supports efficient <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> operations over run-length encoded data.
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ARLE"
+></A
+><B
+>RLE</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetRLE"
+></A
+><B
+>getRLE</B
+> :: f (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARun"
+>Run</A
+> a)</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:RLE')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:RLE" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
+>RightModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
+>LeftModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
+>Foldable</A
+> f =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> f a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3ARun"
+></A
+><B
+>Run</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#Run"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>A single run with a strict length.
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ARun"
+></A
+><B
+>Run</B
+> a !!<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
+>Int</A
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Run')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Run" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Generator-Compressive-RLE.html#t%3ARun"
+>Run</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Pointed <A HREF="Data-Generator-Compressive-RLE.html#t%3ARun"
+>Run</A
+></TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Adecode"
+></A
+><B
+>decode</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
+>Foldable</A
+> f =&gt; <A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> f a -&gt; [a]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#decode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aencode"
+></A
+><B
+>encode</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#encode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AencodeList"
+></A
+><B
+>encodeList</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> [] a</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#encodeList"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>naive left to right encoder, which can handle infinite data
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aprop_decode_encode"
+></A
+><B
+>prop_decode_encode</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c)) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#prop_decode_encode"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aprop_decode_encodeList"
+></A
+><B
+>prop_decode_encodeList</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; [a] -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Compressive-RLE.html#prop_decode_encodeList"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>QuickCheck property: decode . encode = id
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./doc/html/monoids/Data-Generator-Free.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Generator.Free</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Generator-Free.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Generator.Free</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>non-portable (MPTCs)</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Generator.html"
+>Data.Generator</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AFree"
+></A
+><B
+>Free</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator-Free.html#Free"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><SPAN CLASS="keyword"
+>forall</SPAN
+> c . (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c ~ a) =&gt; <A NAME="v%3AAnyGenerator"
+></A
+><B
+>AnyGenerator</B
+> c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Free')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Free" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> <A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> <A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
+>Foldable</A
+> <A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Pointed <A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Module.html#t%3ARightModule"
+>RightModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Module.html#t%3ALeftModule"
+>LeftModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./doc/html/monoids/Data-Generator.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Generator</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Generator.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Generator</FONT
+></TD
+><TD ALIGN="right"
+><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="infohead"
+>Portability</TD
+><TD CLASS="infoval"
+>portable</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Stability</TD
+><TD CLASS="infoval"
+>experimental</TD
+></TR
+><TR
+><TD CLASS="infohead"
+>Maintainer</TD
+><TD CLASS="infoval"
+>ekmett@gmail.com</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><B
+>Contents</B
+></TD
+></TR
+><TR
+><TD
+><DL
+><DT
+><A HREF="#1"
+>Generators
+</A
+></DT
+><DT
+><A HREF="#2"
+>Generator Transformers
+</A
+></DT
+><DT
+><A HREF="#3"
+>Combinators
+</A
+></DT
+></DL
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Description</TD
+></TR
+><TR
+><TD CLASS="doc"
+><P
+>A <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> <TT
+>c</TT
+> is a possibly-specialized container, which contains values of 
+ type <TT
+><A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+></TT
+> <TT
+>c</TT
+>, and which knows how to efficiently apply a <TT
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+></TT
+> to extract
+ an answer.
+</P
+><P
+>Since a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> is not polymorphic in its contents, it is more specialized
+ than <A HREF="Data-Foldable-Foldable.html"
+>Data.Foldable.Foldable</A
+>, and a <TT
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+></TT
+> may supply efficient left-to-right
+ and right-to-left reduction strategies that a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> may avail itself of.
+</P
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>class</SPAN
+>  <A HREF="#t%3AGenerator"
+>Generator</A
+> c  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A HREF="#t%3AElem"
+>Elem</A
+> c :: *</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapReduce"
+>mapReduce</A
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapTo"
+>mapTo</A
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapFrom"
+>mapFrom</A
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapReduce"
+>mapReduce</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapTo"
+>mapTo</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapFrom"
+>mapFrom</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AKeys"
+>Keys</A
+> c = <A HREF="#v%3AKeys"
+>Keys</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetKeys"
+>getKeys</A
+> :: c</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AValues"
+>Values</A
+> c = <A HREF="#v%3AValues"
+>Values</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetValues"
+>getValues</A
+> :: c</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AChar8"
+>Char8</A
+> c = <A HREF="#v%3AChar8"
+>Char8</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetChar8"
+>getChar8</A
+> :: c</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Areduce"
+>reduce</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapReduceWith"
+>mapReduceWith</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; n</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AreduceWith"
+>reduceWith</A
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (m -&gt; n) -&gt; c -&gt; n</TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="1"
+>Generators
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+>  <A NAME="t%3AGenerator"
+></A
+><B
+>Generator</B
+> c  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#Generator"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>minimal definition <TT
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>mapReduce</A
+></TT
+> or <TT
+><A HREF="Data-Generator.html#v%3AmapTo"
+>mapTo</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Associated Types</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3AElem"
+></A
+><B
+>Elem</B
+> c :: *</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#Elem"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapReduce"
+></A
+><B
+>mapReduce</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapReduce"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapTo"
+></A
+><B
+>mapTo</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapTo"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapFrom"
+></A
+><B
+>mapFrom</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapFrom"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Generator')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Generator" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
+>ByteString</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
+>ByteString</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
+>IntSet</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> Text</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> ([] c)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> c)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
+>Set</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AChar8"
+>Char8</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
+>ByteString</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AChar8"
+>Char8</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
+>ByteString</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
+>Ix</A
+> i =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
+>Array</A
+> i e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
+>Ix</A
+> i =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
+>Array</A
+> i e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>LZ78</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
+>Ix</A
+> i =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
+>Array</A
+> i e)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>Measured v e =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (FingerTree v e)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
+>Foldable</A
+> f =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> f a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapReduce"
+></A
+><B
+>mapReduce</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapReduce"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapTo"
+></A
+><B
+>mapTo</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapTo"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapFrom"
+></A
+><B
+>mapFrom</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapFrom"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="2"
+>Generator Transformers
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AKeys"
+></A
+><B
+>Keys</B
+> c </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#Keys"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> transformer that asks only for the keys of an indexed container
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AKeys"
+></A
+><B
+>Keys</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetKeys"
+></A
+><B
+>getKeys</B
+> :: c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Keys')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Keys" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
+>Ix</A
+> i =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
+>Array</A
+> i e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AValues"
+></A
+><B
+>Values</B
+> c </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#Values"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> transformer that asks only for the values contained in an indexed container
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AValues"
+></A
+><B
+>Values</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetValues"
+></A
+><B
+>getValues</B
+> :: c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Values')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Values" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
+>Ix</A
+> i =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
+>Array</A
+> i e))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AChar8"
+></A
+><B
+>Char8</B
+> c </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#Char8"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> transformer that treats <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
+>Word8</A
+></TT
+> as <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TT
+>
+ This lets you use a ByteString as a <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+></TT
+> source without going through a <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+></TT
+> transformer like UTF8
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AChar8"
+></A
+><B
+>Char8</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetChar8"
+></A
+><B
+>getChar8</B
+> :: c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Char8')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Char8" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AChar8"
+>Char8</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
+>ByteString</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Generator.html#t%3AChar8"
+>Char8</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
+>ByteString</A
+>)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="3"
+>Combinators
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Areduce"
+></A
+><B
+>reduce</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#reduce"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Apply a <TT
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+></TT
+> directly to the elements of a <TT
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapReduceWith"
+></A
+><B
+>mapReduceWith</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; n</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#mapReduceWith"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AreduceWith"
+></A
+><B
+>reduceWith</B
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (m -&gt; n) -&gt; c -&gt; n</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Generator.html#reduceWith"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./doc/html/monoids/Data-Group-Combinators.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group-Multiplicative-Sugar.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group-Multiplicative.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group-Sugar.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Additive-Sugar.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Additive.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Applicative.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Categorical.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 91
->Monadic Reduction
-</A
-></DT
-><DT
-><A HREF="#2"
->Applicative Reduction
-</A
-></DT
-><DT
-><A HREF="#3"
->Logical Reduction
-</A
-></DT
-><DT
-><A HREF="#4"
->Monoidal Reduction
-</A
-></DT
-><DT
-><A HREF="#5"
->List-Like Reduction
-</A
-></DT
-><DT
-><A HREF="#6"
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 95
-><A HREF="#7"
+><A HREF="#2"
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 126
-> import Data.Group.Combinators as Monoid 
+> import Data.Monoid.Combinators as Monoid 
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 147
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapM_"
->mapM_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; c -&gt; m ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AforM_"
->forM_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; m ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Amsum"
->msum</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, m a ~ <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) =&gt; c -&gt; m a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Atraverse_"
->traverse_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; c -&gt; f ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afor_"
->for_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; f ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aasum"
->asum</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, f a ~ <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) =&gt; c -&gt; f a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aand"
->and</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aor"
->or</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aany"
->any</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aall"
->all</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfoldMap"
->foldMap</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m) -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afold"
->fold</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ m) =&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AtoList"
->toList</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; c -&gt; [<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c]</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AconcatMap"
->concatMap</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; [b]) -&gt; c -&gt; [b]</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aelem"
->elem</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afilter"
->filter</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfilterWith"
->filterWith</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; n</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afind"
->find</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Asum"
->sum</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aproduct"
->product</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AnotElem"
->notElem</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 205
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 211
->Monadic Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapM_"
-></A
-><B
->mapM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; c -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#mapM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Monad.html#v%3AAction"
->Action</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
-> and <A HREF="Control-Monad.html"
->Control.Monad</A
->
-</P
-><PRE
->
-    <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduceWith"
->mapReduceWith</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Monad.html#v%3AgetAction"
->getAction</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AforM_"
-></A
-><B
->forM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#forM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Convenience function as found in <A HREF="Data-Foldable.html"
->Data.Foldable</A
-> and <A HREF="Control-Monad.html"
->Control.Monad</A
->
-</P
-><PRE
->
-     <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3Aflip"
->flip</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Combinators.html#v%3AmapM_"
->mapM_</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amsum"
-></A
-><B
->msum</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, m a ~ <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) =&gt; c -&gt; m a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#msum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->The sum of a collection of actions, generalizing <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-List.html#v%3Aconcat"
->concat</A
-></TT
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Monad.html#v%3AgetMonadSum"
->getMonadSum</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Applicative Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atraverse_"
-></A
-><B
->traverse_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; c -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#traverse_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
->Traversal</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversal"
->getTraversal</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afor_"
-></A
-><B
->for_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#for_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Convenience function as found in <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</P
-><PRE
->
-     <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3Aflip"
->flip</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Atraverse_"
->traverse_</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aasum"
-></A
-><B
->asum</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, f a ~ <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) =&gt; c -&gt; f a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#asum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->The sum of a collection of actions, generalizing <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-List.html#v%3Aconcat"
->concat</A
-></TT
->
-</P
-><PRE
->
-    <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Applicative.html#v%3AgetAlt"
->getAlt</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->Logical Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aand"
-></A
-><B
->and</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#and"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> that contains values of type <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TT
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAll"
->getAll</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aor"
-></A
-><B
->or</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#or"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> that contains values of type <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TT
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAny"
->getAny</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aany"
-></A
-><B
->any</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#any"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> checking to see if any of its values match the supplied predicate
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduceWith"
->mapReduceWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAny"
->getAny</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aall"
-></A
-><B
->all</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#all"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> checking to see if all of its values match the supplied predicate
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduceWith"
->mapReduceWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetAll"
->getAll</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="4"
->Monoidal Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldMap"
-></A
-><B
->foldMap</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#foldMap"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Self.html#v%3ASelf"
->Self</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduceWith"
->mapReduceWith</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
->getSelf</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afold"
-></A
-><B
->fold</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ m) =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#fold"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Self.html#v%3ASelf"
->Self</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
->getSelf</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AtoList"
-></A
-><B
->toList</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; c -&gt; [<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#toList"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Convert any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> to a list of its contents. Specialization of <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="5"
->List-Like Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AconcatMap"
-></A
-><B
->concatMap</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; [b]) -&gt; c -&gt; [b]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#concatMap"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Type specialization of <A HREF="foldMap.html"
->foldMap</A
-> above
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aelem"
-></A
-><B
->elem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Check to see if <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Aany"
->any</A
-></TT
-> member of the <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> matches the supplied value
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afilter"
-></A
-><B
->filter</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#filter"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a subset of the elements in a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfilterWith"
-></A
-><B
->filterWith</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; n</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#filterWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Allows idiomatic specialization of filter by proving a function that will be used to transform the output
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afind"
-></A
-><B
->find</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#find"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->A specialization of <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Afilter"
->filter</A
-></TT
-> using the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AFirst"
->First</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->, analogous to Data.List.find
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Combinators.html#v%3AfilterWith"
->filterWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetFirst"
->getFirst</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asum"
-></A
-><B
->sum</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#sum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently sum over the members of any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetSum"
->getSum</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aproduct"
-></A
-><B
->product</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#product"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Efficiently take the product of every member of a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</P
-><PRE
->
-     <TT
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->reduceWith</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AgetProduct"
->getProduct</A
-></TT
->
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AnotElem"
-></A
-><B
->notElem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#notElem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Check to make sure that the supplied value is not a member of the <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="6"
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 325
-><A NAME="7"
+><A NAME="2"
hunk ./doc/html/monoids/Data-Monoid-FromString.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Instances.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 116
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+><A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 193
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 195
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+> c, <A HREF="Data-Generator.html#t%3AElem"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 257
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 259
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+> c, <A HREF="Data-Generator.html#t%3AElem"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 347
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+><A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 663
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 665
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+> c, <A HREF="Data-Generator.html#t%3AElem"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 744
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+><A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 1056
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+> :: (<A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 1058
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+> c, <A HREF="Data-Generator.html#t%3AElem"
hunk ./doc/html/monoids/Data-Monoid-Monad.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Multiplicative.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Ord.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer-Char.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer-With.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 959
-> a (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> a (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 991
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 1025
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
hunk ./doc/html/monoids/Data-Monoid-Self.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Self.html 113
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
+><A HREF="Data-Generator.html#v%3Areduce"
hunk ./doc/html/monoids/Data-Monoid-Self.html 123
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
+><A HREF="Data-Generator.html#v%3AmapReduce"
hunk ./doc/html/monoids/Data-Monoid-Union.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Algebra.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Boolean.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Boolean.html 253
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
+>Arbitrary <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
hunk ./doc/html/monoids/Data-Ring-Boolean.html 259
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
+>CoArbitrary <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
hunk ./doc/html/monoids/Data-Ring-Boolean.html 265
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
+><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
+>Multiplicative</A
hunk ./doc/html/monoids/Data-Ring-Boolean.html 273
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
+><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
+>RightSemiNearRing</A
hunk ./doc/html/monoids/Data-Ring-Boolean.html 281
->Arbitrary <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
+><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
+>LeftSemiNearRing</A
+> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
hunk ./doc/html/monoids/Data-Ring-Boolean.html 289
->CoArbitrary <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
+><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
+>SemiRing</A
+> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
hunk ./doc/html/monoids/Data-Ring-FromNum.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-FromNum.html 241
+>Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
+>FromNum</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
+>FromNum</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-FromNum.html 289
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
hunk ./doc/html/monoids/Data-Ring-ModularArithmetic.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 233
+>(Arbitrary r, Arbitrary m) =&gt; Arbitrary (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
+>D</A
+> s r m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(CoArbitrary r, CoArbitrary m) =&gt; CoArbitrary (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
+>D</A
+> s r m)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 287
-> s r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Arbitrary r, Arbitrary m) =&gt; Arbitrary (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> s r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(CoArbitrary r, CoArbitrary m) =&gt; CoArbitrary (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
hunk ./doc/html/monoids/Data-Ring-Module.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Module.html 718
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Module.html 728
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Module.html 788
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
+>LeftModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
+>LeftModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module.html 888
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module.html 1463
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Module.html 1473
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Module.html 1533
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
+>RightModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
+>RightModule</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module.html 1633
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module.html 2172
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Module.html 2182
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Module.html 2242
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module.html 2340
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 533
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 699
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 865
-> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+> (<A HREF="Data-Generator-Free.html#t%3AFree"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 881
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 931
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
+>RightModule</A
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 937
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
+> (a -&gt; m)</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 941
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 947
-> (a -&gt; m)</TD
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 991
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
+>LeftModule</A
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 997
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
+> (a -&gt; m)</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 1001
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 1007
-> (a -&gt; m)</TD
+> (<A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>RLE</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> a)</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 1049
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
->Natural</A
-> (<A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->RLE</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 379
+>Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
+>Order</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
+>Order</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 437
-><TR
-><TD CLASS="decl"
->Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 621
+>Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 669
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
hunk ./doc/html/monoids/Data-Ring-Semi-Tropical.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Tropical.html 402
+>Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
+>Tropical</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
+>Tropical</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Semi-Tropical.html 456
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Arbitrary a =&gt; Arbitrary (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->CoArbitrary a =&gt; CoArbitrary (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
hunk ./doc/html/monoids/Data-Ring-Semi.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Sugar.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/doc-index.html 7
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework (Index)</TITLE
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework (Index)</TITLE
hunk ./doc/html/monoids/doc-index.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/doc-index.html 150
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 156
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 162
-><A HREF="Data-Monoid-Combinators.html#v%3Aall"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aall"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 190
-><A HREF="Data-Monoid-Combinators.html#v%3Aand"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aand"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 202
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 208
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 214
-><A HREF="Data-Monoid-Combinators.html#v%3Aany"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aany"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 222
-><A HREF="Data-Monoid-Generator-Free.html#v%3AAnyGenerator"
->Data.Monoid.Generator.Free</A
+><A HREF="Data-Generator-Free.html#v%3AAnyGenerator"
+>Data.Generator.Free</A
hunk ./doc/html/monoids/doc-index.html 250
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 256
-><A HREF="Data-Monoid-Combinators.html#v%3Aasum"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aasum"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 302
-><A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#t%3AChar8"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 310
-><A HREF="Data-Monoid-Generator.html#v%3AChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AChar8"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 342
-><A HREF="Data-Monoid-Combinators.html#v%3AconcatMap"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AconcatMap"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 352
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 386
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3Adecode"
->Data.Monoid.Generator.LZ78</A
+><A HREF="Data-Generator-Compressive-LZ78.html#v%3Adecode"
+>Data.Generator.Compressive.LZ78</A
hunk ./doc/html/monoids/doc-index.html 394
-><A HREF="Data-Monoid-Generator-RLE.html#v%3Adecode"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3Adecode"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 406
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 412
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 418
-><A HREF="Data-Monoid-Generator.html#t%3AElem"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#t%3AElem"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 426
-><A HREF="Data-Monoid-Combinators.html#v%3Aelem"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aelem"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 454
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3Aencode"
->Data.Monoid.Generator.LZ78</A
+><A HREF="Data-Generator-Compressive-LZ78.html#v%3Aencode"
+>Data.Generator.Compressive.LZ78</A
hunk ./doc/html/monoids/doc-index.html 462
-><A HREF="Data-Monoid-Generator-RLE.html#v%3Aencode"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3Aencode"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 470
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3AencodeEq"
->Data.Monoid.Generator.LZ78</A
+><A HREF="Data-Generator-Compressive-LZ78.html#v%3AencodeEq"
+>Data.Generator.Compressive.LZ78</A
hunk ./doc/html/monoids/doc-index.html 478
-><A HREF="Data-Monoid-Generator-RLE.html#v%3AencodeList"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3AencodeList"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 490
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 496
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 530
-><A HREF="Data-Monoid-Combinators.html#v%3Afilter"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Afilter"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 538
-><A HREF="Data-Monoid-Combinators.html#v%3AfilterWith"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AfilterWith"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 546
-><A HREF="Data-Monoid-Combinators.html#v%3Afind"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Afind"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 558
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 564
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 570
-><A HREF="Data-Monoid-Combinators.html#v%3Afold"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Afold"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 578
-><A HREF="Data-Monoid-Combinators.html#v%3AfoldMap"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AfoldMap"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 588
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 596
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 602
-><A HREF="Data-Monoid-Combinators.html#v%3AforM_"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AforM_"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 610
-><A HREF="Data-Monoid-Combinators.html#v%3Afor_"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Afor_"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 618
-><A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
->Data.Monoid.Generator.Free</A
+><A HREF="Data-Generator-Free.html#t%3AFree"
+>Data.Generator.Free</A
hunk ./doc/html/monoids/doc-index.html 694
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#t%3AGenerator"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 710
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 724
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 746
-><A HREF="Data-Monoid-Generator.html#v%3AgetChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AgetChar8"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 754
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 768
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 798
-><A HREF="Data-Monoid-Generator.html#v%3AgetKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AgetKeys"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 806
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 884
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 892
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 898
-><A HREF="Data-Monoid-Generator-RLE.html#v%3AgetRLE"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3AgetRLE"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 914
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 952
-><A HREF="Data-Monoid-Generator.html#v%3AgetValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AgetValues"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1046
-><A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#t%3AKeys"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1054
-><A HREF="Data-Monoid-Generator.html#v%3AKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AKeys"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1066
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1072
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1150
-><A HREF="Data-Monoid-Generator-LZ78.html#t%3ALZ78"
->Data.Monoid.Generator.LZ78</A
+><A HREF="Data-Generator-Compressive-LZ78.html#t%3ALZ78"
+>Data.Generator.Compressive.LZ78</A
hunk ./doc/html/monoids/doc-index.html 1158
-><A HREF="Data-Monoid-Generator.html#v%3AmapFrom"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AmapFrom"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1166
-><A HREF="Data-Monoid-Combinators.html#v%3AmapM_"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AmapM_"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1174
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1180
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AmapReduce"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1188
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduceWith"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AmapReduceWith"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1196
-><A HREF="Data-Monoid-Generator.html#v%3AmapTo"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AmapTo"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1252
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1258
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1400
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1414
-><A HREF="Data-Monoid-Combinators.html#v%3Amsum"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Amsum"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1470
-><A HREF="Data-Monoid-Combinators.html#v%3AnotElem"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AnotElem"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1486
-><A HREF="Data-Monoid-Combinators.html#v%3Aor"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aor"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1562
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1568
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1574
-><A HREF="Data-Monoid-Combinators.html#v%3Aproduct"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Aproduct"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1586
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3Aprop_decode_encode"
->Data.Monoid.Generator.LZ78</A
+><A HREF="Data-Generator-Compressive-LZ78.html#v%3Aprop_decode_encode"
+>Data.Generator.Compressive.LZ78</A
hunk ./doc/html/monoids/doc-index.html 1594
-><A HREF="Data-Monoid-Generator-RLE.html#v%3Aprop_decode_encode"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3Aprop_decode_encode"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 1602
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3Aprop_decode_encodeEq"
->Data.Monoid.Generator.LZ78</A
+><A HREF="Data-Generator-Compressive-LZ78.html#v%3Aprop_decode_encodeEq"
+>Data.Generator.Compressive.LZ78</A
hunk ./doc/html/monoids/doc-index.html 1610
-><A HREF="Data-Monoid-Generator-RLE.html#v%3Aprop_decode_encodeList"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3Aprop_decode_encodeList"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 1622
-><A HREF="Data-Group-Combinators.html#v%3Aprop_replicate_right_distributive"
->Data.Group.Combinators</A
+><A HREF="Data-Monoid-Combinators.html#v%3Aprop_replicate_right_distributive"
+>Data.Monoid.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1630
-><A HREF="Data-Monoid-Combinators.html#v%3Aprop_replicate_right_distributive"
->Data.Monoid.Combinators</A
+><A HREF="Data-Group-Combinators.html#v%3Aprop_replicate_right_distributive"
+>Data.Group.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1640
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1654
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3Areduce"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1664
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1672
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1678
-><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AreduceWith"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1688
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1706
-><A HREF="Data-Group-Combinators.html#v%3Areplicate"
->Data.Group.Combinators</A
+><A HREF="Data-Monoid-Combinators.html#v%3Areplicate"
+>Data.Monoid.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1714
-><A HREF="Data-Monoid-Combinators.html#v%3Areplicate"
->Data.Monoid.Combinators</A
+><A HREF="Data-Group-Combinators.html#v%3Areplicate"
+>Data.Group.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1724
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1758
-><A HREF="Data-Monoid-Generator-RLE.html#t%3ARLE"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#t%3ARLE"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 1766
-><A HREF="Data-Monoid-Generator-RLE.html#v%3ARLE"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3ARLE"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 1778
-><A HREF="Data-Monoid-Generator-RLE.html#t%3ARun"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#t%3ARun"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 1786
-><A HREF="Data-Monoid-Generator-RLE.html#v%3ARun"
->Data.Monoid.Generator.RLE</A
+><A HREF="Data-Generator-Compressive-RLE.html#v%3ARun"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/doc-index.html 1872
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 1954
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1960
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1966
-><A HREF="Data-Monoid-Combinators.html#v%3Asum"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Asum"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 1990
-><A HREF="Data-Monoid-Combinators.html#v%3AtoList"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3AtoList"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 2018
-><A HREF="Data-Monoid-Combinators.html#v%3Atraverse_"
->Data.Monoid.Combinators</A
+><A HREF="Data-Generator-Combinators.html#v%3Atraverse_"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/doc-index.html 2112
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 2146
-><A HREF="Data-Monoid-Generator.html#t%3AValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#t%3AValues"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/doc-index.html 2154
-><A HREF="Data-Monoid-Generator.html#v%3AValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+><A HREF="Data-Generator.html#v%3AValues"
+>Data.Generator</A
+>, Data.Generator.Compressive.LZ78, Data.Generator.Compressive.RLE, Data.Generator.Combinators, Data.Generator.Free</TD
hunk ./doc/html/monoids/index.html 7
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TITLE
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TITLE
hunk ./doc/html/monoids/index.html 22
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/index.html 37
->monoids-0.1.24: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.25: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/index.html 93
-><A HREF="Data-Group.html"
->Data.Group</A
+><A HREF="Data-Generator.html"
+>Data.Generator</A
hunk ./doc/html/monoids/index.html 106
-><A HREF="Data-Group-Combinators.html"
->Data.Group.Combinators</A
+><A HREF="Data-Generator-Combinators.html"
+>Data.Generator.Combinators</A
hunk ./doc/html/monoids/index.html 117
-><A HREF="Data-Group-Multiplicative.html"
->Data.Group.Multiplicative</A
-></TD
+>Compressive</TD
hunk ./doc/html/monoids/index.html 128
-><A HREF="Data-Group-Multiplicative-Sugar.html"
->Data.Group.Multiplicative.Sugar</A
+><A HREF="Data-Generator-Compressive-LZ78.html"
+>Data.Generator.Compressive.LZ78</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
+><A HREF="Data-Generator-Compressive-RLE.html"
+>Data.Generator.Compressive.RLE</A
hunk ./doc/html/monoids/index.html 151
-><A HREF="Data-Group-Sugar.html"
->Data.Group.Sugar</A
+><A HREF="Data-Generator-Free.html"
+>Data.Generator.Free</A
hunk ./doc/html/monoids/index.html 165
->Monoid</TD
+><A HREF="Data-Group.html"
+>Data.Group</A
+></TD
hunk ./doc/html/monoids/index.html 177
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Group-Combinators.html"
+>Data.Group.Combinators</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/index.html 189
-><A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
+><A HREF="Data-Group-Multiplicative.html"
+>Data.Group.Multiplicative</A
hunk ./doc/html/monoids/index.html 202
-><A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
+><A HREF="Data-Group-Multiplicative-Sugar.html"
+>Data.Group.Multiplicative.Sugar</A
hunk ./doc/html/monoids/index.html 215
-><A HREF="Data-Monoid-Applicative.html"
->Data.Monoid.Applicative</A
+><A HREF="Data-Group-Sugar.html"
+>Data.Group.Sugar</A
hunk ./doc/html/monoids/index.html 223
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Categorical.html"
->Data.Monoid.Categorical</A
+></TABLE
hunk ./doc/html/monoids/index.html 225
+></TR
+><TR
+><TD STYLE="width: 48em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:6')" ALT="show/hide"
+>Monoid</TD
hunk ./doc/html/monoids/index.html 236
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Combinators.html"
->Data.Monoid.Combinators</A
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:6" STYLE="display:block;"
+><TR
+><TD STYLE="width: 46em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:7')" ALT="show/hide"
+><A HREF="Data-Monoid-Additive.html"
+>Data.Monoid.Additive</A
hunk ./doc/html/monoids/index.html 250
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-FromString.html"
->Data.Monoid.FromString</A
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:7" STYLE="display:block;"
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
+><A HREF="Data-Monoid-Additive-Sugar.html"
+>Data.Monoid.Additive.Sugar</A
hunk ./doc/html/monoids/index.html 262
+></TABLE
+></TD
+></TR
hunk ./doc/html/monoids/index.html 266
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:6')" ALT="show/hide"
-><A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Applicative.html"
+>Data.Monoid.Applicative</A
hunk ./doc/html/monoids/index.html 276
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:6" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Generator-Free.html"
->Data.Monoid.Generator.Free</A
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Categorical.html"
+>Data.Monoid.Categorical</A
hunk ./doc/html/monoids/index.html 286
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Generator-LZ78.html"
->Data.Monoid.Generator.LZ78</A
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Combinators.html"
+>Data.Monoid.Combinators</A
hunk ./doc/html/monoids/index.html 296
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Generator-RLE.html"
->Data.Monoid.Generator.RLE</A
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-FromString.html"
+>Data.Monoid.FromString</A
hunk ./doc/html/monoids/index.html 305
-></TABLE
-></TD
-></TR
hunk ./doc/html/monoids/index.html 317
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:7')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:8')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 326
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:7" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:8" STYLE="display:block;"
hunk ./doc/html/monoids/index.html 339
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:8')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:9')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 348
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:8" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:9" STYLE="display:block;"
hunk ./doc/html/monoids/index.html 387
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:9')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:10')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 398
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:9" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:10" STYLE="display:block;"
hunk ./doc/html/monoids/index.html 424
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:10')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:11')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 435
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:10" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:11" STYLE="display:block;"
hunk ./doc/html/monoids/index.html 484
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:11')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:12')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 495
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:11" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:12" STYLE="display:block;"
hunk ./doc/html/monoids/index.html 538
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:12')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:13')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 549
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:12" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:13" STYLE="display:block;"
hunk ./doc/html/monoids/index.html 565
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:13')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:14')" ALT="show/hide"
hunk ./doc/html/monoids/index.html 576
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:13" STYLE="display:block;"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:14" STYLE="display:block;"
binary ./doc/html/monoids/monoids.haddock
oldhex
*0d0cface00040000000000012f420000000000011397e300000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000200
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000005000000000000001d0000000000000000000000000000
*0005000000000000001e00000000000000000000000000000005000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000600
*000000000000260000000000000000000000000000000600000000000000270000000000000000
*000000000000000600000000000000280000000000000000000000000000000600000000000000
*2900000000000000000000000000000006000000000000002a0000000000000000000000000000
*0006000000000000002b00000000000000000000000000000006000000000000002c0000000000
*0000000000000000000006000000000000002d0000000000000000000000000000000600000000
*0000002e00000000000000000000000000000006000000000000002f0000000000000000000000
*000000000600000000000000300000000000000000000000000000000700000000000000310000
*000000000000000000000000000700000000000000320000000000000000000000000000000700
*000000000000330000000000000000000000000000000700000000000000340000000000000000
*000000000000000700000000000000350000000000000000000000000000000700000000000000
*360000000000000000000000000000000700000000000000370000000000000000000000000000
*000700000000000000380000000000000000000000000000000700000000000000390000000000
*0000000000000000000007000000000000003a0000000000000000000000000000000700000000
*0000003b00000000000000000000000000000007000000000000003c0000000000000000000000
*0000000008000000000000003d00000000000000000000000000000008000000000000003e0000
*0000000000000000000000000008000000000000003f0000000000000000000000000000000800
*000000000000400000000000000000000000000000000800000000000000410000000000000000
*000000000000000800000000000000420000000000000000000000000000000800000000000000
*430000000000000000000000000000000800000000000000440000000000000000000000000000
*000800000000000000450000000000000000000000000000000800000000000000460000000000
*000000000000000000000900000000000000470000000000000000000000000000000900000000
*000000480000000000000000000000000000000900000000000000490000000000000000000000
*000000000a000000000000004a0000000000000000000000000000000a000000000000004b0000
*000000000000000000000000000a000000000000004c0000000000000000000000000000000a00
*0000000000004d0000000000000000000000000000000a000000000000004e0000000000000000
*000000000000000a000000000000004f0000000000000000000000000000000b00000000000000
*500000000000000000000000000000000b00000000000000510000000000000000000000000000
*000b00000000000000520000000000000000000000000000000c00000000000000530000000000
*000000000000000000000c00000000000000540000000000000000000000000000000c00000000
*000000550000000000000000000000000000000c00000000000000560000000000000000000000
*000000000c00000000000000570000000000000000000000000000000c00000000000000580000
*000000000000000000000000000d00000000000000590000000000000000000000000000000d00
*0000000000005a0000000000000000000000000000000e000000000000005b0000000000000000
*000000000000000f000000000000005c0000000000000000000000000000000f00000000000000
*5d0000000000000000000000000000000f000000000000005e0000000000000000000000000000
*000f000000000000005f0000000000000000000000000000000f00000000000000600000000000
*000000000000000000000f00000000000000610000000000000000000000000000000f00000000
*000000620000000000000000000000000000000f00000000000000630000000000000000000000
*000000000f00000000000000640000000000000000000000000000001000000000000000650000
*000000000000000000000000001100000000000000660000000000000000000000000000001100
*000000000000670000000000000000000000000000001200000000000000680000000000000000
*000000000000001300000000000000690000000000000000000000000000001300000000000000
*6a00000000000000000000000000000013000000000000006b0000000000000000000000000000
*0013000000000000006c00000000000000000000000000000013000000000000006d0000000000
*0000000000000000000013000000000000006e0000000000000000000000000000001300000000
*0000006f0000000000000000000000000000001300000000000000700000000000000000000000
*000000001300000000000000710000000000000000000000000000001300000000000000720000
*000000000000000000000000001300000000000000730000000000000000000000000000001300
*000000000000740000000000000000000000000000001300000000000000750000000000000000
*000000000000001300000000000000760000000000000000000000000000001400000000000000
*770000000000000000000000000000001400000000000000780000000000000000000000000000
*0014000000000000007900000000000000000000000000000014000000000000007a0000000000
*0000000000000000000014000000000000007b0000000000000000000000000000001400000000
*0000007c00000000000000000000000000000014000000000000007d0000000000000000000000
*0000000015000000000000007e00000000000000000000000000000015000000000000007f0000
*000000000000000000000000001500000000000000800000000000000000000000000000001500
*000000000000810000000000000000000000000000001600000000000000820000000000000000
*000000000000001600000000000000830000000000000000000000000000001600000000000000
*840000000000000000000000000000001600000000000000850000000000000000000000000000
*001700000000000000860000000000000000000000000000001700000000000000870000000000
*000000000000000000001800000000000000880000000000000000000000000000001800000000
*0000008900000000000000000000000000000018000000000000008a0000000000000000000000
*0000000018000000000000008b00000000000000000000000000000019000000000000008c0000
*0000000000000000000000000019000000000000008d0000000000000000000000000000001900
*0000000000008e0000000000000000000000000000001a000000000000008f0000000000000000
*000000000000001a00000000000000900000000000000000000000000000001a00000000000000
*910000000000000000000000000000001b00000000000000920000000000000000000000000000
*001c00000000000000930000000000000000000000000000001c00000000000000940000000000
*000000000000000000001c00000000000000950000000000000000000000000000001d00000000
*000000960000000000000000000000000000001d00000000000000970000000000000000000000
*000000001d00000000000000980000000000000000000000000000001e00000000000000990000
*000000000000000000000000001e000000000000009a0000000000000000000000000000001e00
*0000000000009b0000000000000000000000000000001e000000000000009c0000000000000000
*000000000000001e000000000000009d0000000000000000000000000000001f00000000000000
*9e0000000000000000000000000000001f000000000000009f0000000000000000000000000000
*001f00000000000000a00000000000000000000000000000001f00000000000000a10000000000
*000000000000000000001f00000000000000a20000000000000000000000000000002000000000
*000000a30000000000000000000000000000002000000000000000a40000000000000000000000
*000000002000000000000000a50000000000000000000000000000002000000000000000a60000
*000000000000000000000000002000000000000000a70000000000000000000000000000002000
*000000000000a80000000000000000000000000000002000000000000000a90000000000000000
*000000000000002000000000000000aa0000000000000000000000000000002000000000000000
*ab0000000000000000000000000000002000000000000000ac0000000000000000000000000000
*002100000000000000ad0000000000000000000000000000002100000000000000ae0000000000
*000000000000000000002100000000000000af0000000000000000000000000000002100000000
*000000b00000000000000000000000000000002100000000000000b10000000000000000000000
*000000002100000000000000b20000000000000000000000000000002100000000000000b30000
*000000000000000000000000002100000000000000b40000000000000000000000000000002100
*000000000000b50000000000000000000000000000002100000000000000b60000000000000000
*000000000000002200000000000000b70000000000000000000000000000002200000000000000
*b80000000000000000000000000000002200000000000000b90000000000000000000000000000
*002200000000000000ba0000000000000000000000000000002200000000000000bb0000000000
*000000000000000000002200000000000000bc0000000000000000000000000000002200000000
*000000bd0000000000000000000000000000002200000000000000be0000000000000000000000
*000000002200000000000000bf0000000000000000000000000000002200000000000000c00000
*000000000000000000000000002200000000000000c10000000000000000000000000000002200
*000000000000c20000000000000000000000000000002200000000000000c30000000000000000
*000000000000002200000000000000c40000000000000000000000000000002200000000000000
*c50000000000000000000000000000002200000000000000c60000000000000000000000000000
*002200000000000000c70000000000000000000000000000002200000000000000c80000000000
*000000000000000000002200000000000000c90000000000000000000000000000002200000000
*000000ca0000000000000000000000000000002200000000000000cb0000000000000000000000
*000000002200000000000000cc0000000000000000000000000000002200000000000000cd0000
*000000000000000000000000002200000000000000ce0000000000000000000000000000002200
*000000000000cf0000000000000000000000000000002300000000000000d00000000000000000
*000000000000002300000000000000d10000000000000000000000000000002400000000000000
*d20000000000000000000000000000002400000000000000d30000000000000000000000000000
*002400000000000000d40000000000000000000000000000002400000000000000d50000000000
*000000000000000000002400000000000000d60000000000000000000000000000002400000000
*000000d70000000000000000000000000000002400000000000000d80000000000000000000000
*000000002400000000000000d90000000000000000000000000000002400000000000000da0000
*000000000000000000000000002400000000000000db0000000000000000000000000000002500
*000000000000dc0000000000000000000000000000002500000000000000dd0000000000000000
*000000000000002600000000000000de0000000000000000000000000000002700000000000000
*df0000000000000000000000000000002700000000000000e00000000000000000000000000000
*002700000000000000e10000000000000000000000000000002800000000000000e20000000000
*00000000000000000000292b0000000000000000000000000000002a000108000000700000006f
*000000720000007400000061000000620000006c00000065010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d00000000000000000000000000000000
*0000010001140000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c0000006500000020000000280000004d000000500000005400000043
*0000007300000029010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d0600000000000000030103010224000000540000006800000069000000730000
*002000000074000000790000007000000065000000200000006d00000061000000790000002000
*000062000000650000002000000062000000650000007300000074000000200000007200000065
*000000610000006400000020000000690000006e0000006600000069000000780000002e000000
*200000004100000020010701020200000063000000200104010000000000000000030000000000
*00000000000000000000010202000000200000006d010206000000200000006900000073000000
*2000000061000000200104010000000000000000e3000000000000002b000000000000002c0102
*0100000020010702010000006d01020b0000002000000074000000680000006100000074000000
*200000006d0000006100000070000000730000000a010210000000200000007600000061000000
*6c000000750000006500000073000000200000006f000000660000002000000074000000790000
*007000000065000000200107020100000063010209000000200000007400000068000000720000
*006f0000007500000067000000680000002001070204000000750000006e000000690000007401
*021300000020000000740000006f0000002000000076000000610000006c000000750000006500
*000073000000200000006f00000066000000200000007400000079000000700000006500000020
*010702010000006d0102040000002e000000200000004100000020010702010000006301020100
*00002d0104010000000000000000030000000000000000000000000000000101020a0000002000
*00006d000000610000007900000020000000610000006c000000730000006f0000000a01022900
*000020000000730000007500000070000000700000006c00000079000000200000006f00000070
*00000065000000720000006100000074000000690000006f0000006e0000007300000020000000
*7700000068000000690000006300000068000000200000007400000061000000630000006b0000
*002d0000006f0000006e00000020000000610000006e0000006f00000074000000680000006500
*00007200000020010702010000006301021000000020000000740000006f000000200000006100
*00006e000000200000006500000078000000690000007300000074000000690000006e00000067
*000000200104010000000000000000e3000000000000002b000000000000002c01020100000020
*010702010000006d01020d000000200000006f0000006e00000020000000740000006800000065
*000000200000006c0000006500000066000000740000000a010250000000200000006f00000072
*0000002000000072000000690000006700000068000000740000002e0000002000000054000000
*680000006500000073000000650000002000000073000000700000006500000063000000690000
*00610000006c000000690000007a00000065000000640000002000000072000000650000006400
*0000750000006300000074000000690000006f0000006e00000073000000200000006d00000061
*00000079000000200000006200000065000000200000006d0000006f0000007200000065000000
*20000000650000006600000066000000690000006300000069000000650000006e000000740000
*0020000000690000006e00000020000000730000006f0000006d00000065000000200000007300
*000063000000650000006e0000006100000072000000690000006f000000730000000a01022400
*000020000000610000006e00000064000000200000006100000072000000650000002000000075
*000000730000006500000064000000200000007700000068000000650000006e00000020000000
*610000007000000070000000720000006f00000070000000720000006900000061000000740000
*006500000020000000620000007900000020000000610000002001020900000047000000650000
*006e000000650000007200000061000000740000006f0000007201020c0000002e000000200000
*00540000006800000065000000200000006e000000610000006d00000065000000730000002001
*040100000000000000000600000000000000000000000000000001010205000000200000006100
*00006e000000640000002001040100000000000000000500000000000000000000000000000001
*01020600000020000000770000006f000000720000006b0000000a023d00000020000000620000
*007900000020000000610000006e000000610000006c0000006f00000067000000790000002000
*0000740000006f000000200000007400000068000000650000002000000073000000790000006e
*0000006f0000006e000000790000006d0000006f0000007500000073000000200000006f000000
*7000000065000000720000006100000074000000690000006f0000006e00000073000000200000
*00690000006e00000020000000740000006800000065000000200000006c000000690000007300
*000074000000200000006d0000006f0000006e0000006f00000069000000640000002e0000000a
*010301024c0000005400000068000000690000007300000020000000630000006c000000610000
*0073000000730000002000000064000000650000006c0000006900000062000000650000007200
*00006100000074000000650000006c000000790000002000000061000000760000006f00000069
*00000064000000730000002000000066000000750000006e000000630000007400000069000000
*6f0000006e000000610000006c0000002d000000640000006500000070000000650000006e0000
*0064000000650000006e000000630000006900000065000000730000002c000000200000007300
*00006f000000200000007400000068000000610000007400000020000000280000002900000020
*00000063000000610000006e000000200000006200000065000000200000006100000020010702
*01000000630102090000002d000000520000006500000064000000750000006300000065000000
*720000000a01020900000020000000660000006f0000007200000020000000610000006c000000
*6c00000020010702010000006301024a0000002c00000020000000610000006e00000064000000
*20000000730000006f000000200000006d000000610000006e0000007900000020000000630000
*006f0000006d0000006d0000006f0000006e000000200000007200000065000000640000007500
*0000630000006500000072000000730000002000000063000000610000006e0000002000000077
*0000006f000000720000006b000000200000006f00000076000000650000007200000020000000
*6d000000750000006c0000007400000069000000700000006c0000006500000020000000740000
*00790000007000000065000000730000002c00000020000000660000006f000000720000002000
*0000690000006e0000007300000074000000610000006e00000063000000650000002c0000000a
*01022000000020000000460000006900000072000000730000007400000020000000610000006e
*00000064000000200000004c000000610000007300000074000000200000006d00000061000000
*790000002000000072000000650000006400000075000000630000006500000020000000620000
*006f000000740000006800000020010702010000006101020500000020000000610000006e0000
*0064000000200104010000000000000000e4000000000000002b000000000000002d0102010000
*0020010702010000006101020a0000002e0000002000000053000000690000006e000000630000
*006500000020000000610000002001020900000047000000650000006e00000065000000720000
*0061000000740000006f0000007201021500000020000000680000006100000073000000200000
*006100000020000000660000006900000078000000650000006400000020000000650000006c00
*0000650000006d000000650000006e000000740000000a01025a00000020000000740000007900
*000070000000650000002c0000002000000074000000680000006500000020000000690000006e
*00000070000000750000007400000020000000740000006f000000200000007400000068000000
*650000002000000072000000650000006400000075000000630000006500000072000000200000
*0069000000730000002000000067000000650000006e0000006500000072000000610000006c00
*00006c00000079000000200000006b0000006e0000006f000000770000006e0000002000000061
*0000006e0000006400000020000000650000007800000074000000720000006100000063000000
*74000000690000006e000000670000002000000066000000720000006f0000006d000000200000
*00740000006800000065000000200000006d0000006f0000006e0000006f000000690000006400
*000020000000750000007300000075000000610000006c0000006c000000790000000a01025a00
*000020000000690000007300000020000000730000007500000066000000660000006900000063
*00000069000000650000006e0000007400000020000000740000006f0000002000000066000000
*690000007800000020000000740000006800000065000000200000007200000065000000730000
*00750000006c0000007400000020000000740000007900000070000000650000002e0000002000
*0000430000006f0000006d00000062000000690000006e00000061000000740000006f00000072
*000000730000002000000061000000720000006500000020000000610000007600000061000000
*690000006c00000061000000620000006c0000006500000020000000660000006f000000720000
*00200000006d0000006f0000007300000074000000200000007300000063000000650000006e00
*00006100000072000000690000006f000000730000002000000077000000680000006500000072
*000000650000000a01025800000020000000740000006800000069000000730000002000000069
*00000073000000200000006e0000006f0000007400000020000000740000006800000065000000
*20000000630000006100000073000000650000002c00000020000000610000006e000000640000
*002000000074000000680000006500000020000000660000006500000077000000200000007200
*0000650000006d00000061000000690000006e000000690000006e000000670000002000000063
*000000610000007300000065000000730000002000000063000000610000006e00000020000000
*62000000650000002000000068000000610000006e000000640000006c00000065000000640000
*00200000006200000079000000200000007500000073000000690000006e000000670000002000
*0000610000006e000000200000006500000078000000700000006c000000690000006300000069
*00000074000000200000000a021200000020000000740000007900000070000000650000002000
*0000610000006e0000006e0000006f000000740000006100000074000000690000006f0000006e
*0000002e0000000a030102140000004d000000690000006e000000690000006d00000061000000
*6c00000020000000640000006500000066000000690000006e0000006900000074000000690000
*006f0000006e0000003a0000002001040100000000000000000400000000000000000000000000
*000001010204000000200000006f00000072000000200104010000000000000000050000000000
*000000000000000000000102010000000a000000000000000403010217000000430000006f0000
*006e00000076000000650000007200000074000000200000006100000020000000760000006100
*00006c000000750000006500000020000000690000006e000000740000006f0000002000000061
*000000200104010000000000000000e3000000000000002b000000000000002c02010000000a00
*0000000000000503010214000000410000007000000070000000650000006e0000006400000020
*000000610000002000000076000000610000006c00000075000000650000002000000074000000
*6f0000002000000061000000200104010000000000000000e3000000000000002b000000000000
*002c022400000020000000660000006f0000007200000020000000750000007300000065000000
*20000000690000006e000000200000006c0000006500000066000000740000002d000000740000
*006f0000002d000000720000006900000067000000680000007400000020000000720000006500
*000064000000750000006300000074000000690000006f0000006e0000000a0000000000000006
*0301021700000050000000720000006500000070000000650000006e0000006400000020000000
*610000002000000076000000610000006c0000007500000065000000200000006f0000006e0000
*00740000006f0000002000000061000000200104010000000000000000e3000000000000002b00
*0000000000002c022800000020000000660000006f000000720000002000000075000000730000
*006500000020000000640000007500000072000000690000006e00000067000000200000007200
*0000690000006700000068000000740000002d000000740000006f0000002d0000006c00000065
*000000660000007400000020000000720000006500000064000000750000006300000074000000
*690000006f0000006e0000000a0000000000000007030102080000004100000070000000700000
*006c00000079000000200000006100000020010401000000000000000003000000000000000000
*0000000000000101020600000020000000740000006f0000002000000061000000200104010000
*000000000000e5000000000000002b000000000000002e024b00000020000000630000006f0000
*006e0000007400000061000000690000006e00000065000000720000002c000000200000006100
*000066000000740000006500000072000000200000006d00000061000000700000007000000069
*0000006e000000670000002000000074000000680000006500000020000000630000006f000000
*6e00000074000000650000006e000000740000007300000020000000690000006e000000740000
*006f00000020000000610000002000000073000000750000006900000074000000610000006200
*00006c0000006500000020000000660000006f000000720000006d00000020000000660000006f
*000000720000002000000072000000650000006400000075000000630000007400000069000000
*6f0000006e0000002e0000000a0000000000000008030102080000004100000070000000700000
*006c00000079000000200000006100000020010401000000000000000003000000000000000000
*0000000000000101020600000020000000740000006f0000002000000061000000200104010000
*000000000000e5000000000000002b000000000000002e01021e000000200000006d0000006100
*00007000000070000000690000006e000000670000002000000065000000610000006300000068
*00000020000000650000006c000000650000006d000000650000006e0000007400000020000000
*7400000068000000720000006f0000007500000067000000680000002001040100000000000000
*00040000000000000000000000000000000102010000000a2700000000000000e6000000000000
*00e700000000000000e800000000000000e300000000000000e900000000000000ea0000000000
*0000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000
*000000f000000000000000f100000000000000f200000000000000f300000000000000f4000000
*00000000f500000000000000f600000000000000f700000000000000f800000000000000f90000
*0000000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00
*000000000000ff0000000000000100000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*0700000000000000080000000000000009000000000000000a0b00000000000000030000000000
*000004000000000000000500000000000000060000000000000007000000000000000800000000
*0000000a0000000000000009000000000000000000000000000000010000000000000002000000
*000000000000000000000000020001140000006e0000006f0000006e0000002d00000070000000
*6f000000720000007400000061000000620000006c0000006500000020000000280000004d0000
*005000000054000000430000007300000029010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c0110000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d01000000000000000b03010222000000500000007200
*00006f00000076000000690000006400000065000000730000002000000061000000200000006d
*000000650000006300000068000000610000006e00000069000000730000006d00000020000000
*660000006f00000072000000200000007400000068000000650000002000000055000000540000
*004600000038000000200104010000000000000000e3000000000000002b000000000000002c02
*3600000020000000740000006f000000200000007200000065000000700000006f000000720000
*007400000020000000690000006e00000076000000610000006c00000069000000640000002000
*000063000000680000006100000072000000610000006300000074000000650000007200000073
*00000020000000740000006f000000200000006f0000006e00000065000000200000006f000000
*72000000200000006d0000006f0000007200000065000000200000006d0000006f0000006e0000
*006f0000006900000064000000730000002e0000000a2a00000000000000e600000000000000e7
*00000000000000e800000000000000e300000000000000e900000000000000ea00000000000000
*eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000000000
*00f000000000000000f100000000000000f200000000000000f300000000000000f40000000000
*0000f500000000000000f600000000000000f700000000000000f800000000000000f900000000
*000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe000000
*00000000ff00000000000001000000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000700
*000000000000080000000000000009000000000000000a000000000000000b000000000000000c
*000000000000000d03000000000000000b000000000000000d000000000000000c000000000000
*000000000000000000030001140000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c0000006500000020000000280000004d0000005000
*000054000000430000007300000029010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d002c00000000000000e600000000000000e700000000000000
*e800000000000000e300000000000000e900000000000000ea00000000000000eb000000000000
*00ec00000000000000ed00000000000000ee00000000000000ef00000000000000f00000000000
*0000f100000000000000f200000000000000f300000000000000f400000000000000f500000000
*000000f600000000000000f700000000000000f800000000000000f900000000000000fa000000
*00000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000
*000000000100000000000000000000000000000000010000000000000002000000000000000300
*000000000000040000000000000005000000000000000600000000000000070000000000000008
*0000000000000009000000000000000a000000000000000b000000000000000c00000000000000
*0d000000000000000e000000000000000f02000000000000000e000000000000000f0000000000
*00000000000000000000040001140000006e0000006f0000006e0000002d000000700000006f00
*0000720000007400000061000000620000006c0000006500000020000000280000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c0110000000650000006b0000
*006d00000065000000740000007400000040000000670000006d00000061000000690000006c00
*00002e000000630000006f0000006d010000000000000010030102030000004900000066000000
*20010702010000006d010206000000200000006900000073000000200000006100000020010702
*01000000630102010000002d010507000000520000006500000064000000750000006300000065
*0000007201020c0000002c000000200000007400000068000000650000006e000000200000006d
*000000200000006900000073000000200107010203000000280000006300000020010402000000
*000000000011000000000000000000000000000000040000000000000000100000000000000000
*00000000000000040203000000200000006d000000290102010000002d01050700000052000000
*6500000064000000750000006300000065000000720102010000000a0102280000002000000020
*00000020000000540000006800000069000000730000002000000063000000610000006e000000
*200000006200000065000000200000007500000073000000650000006400000020000000740000
*006f00000020000000710000007500000069000000630000006b0000006c000000790000002000
*000073000000650000006c00000065000000630000007400000020000000610000002001050700
*00005200000065000000640000007500000063000000650000007201020e000000200000006600
*00006f000000720000002000000075000000730000006500000020000000610000007300000020
*00000061000000200104010100000000000001010102010000000a010203000000200000002000
*00002001040101000000000000010202020000002e0000000a2a00000000000000e60000000000
*0000e700000000000000e800000000000000e300000000000000e900000000000000ea00000000
*000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000
*00000000f000000000000000f100000000000000f200000000000000f300000000000000f40000
*0000000000f500000000000000f600000000000000f700000000000000f800000000000000f900
*000000000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe
*00000000000000ff00000000000001000000000000000000000000000000000100000000000000
*020000000000000003000000000000000400000000000000050000000000000006000000000000
*000700000000000000080000000000000009000000000000000a00000000000000100000000000
*000011000000000000001203000000000000001000000000000000110000000000000012000000
*000000000000000000000000050000000004000000000000001303010204000000540000006800
*000065000000200104010000000000000000e3000000000000002b000000000000002c01020100
*00002001070102010000002801020100000027010211000000750000006e000000690000006f00
*00006e00000057000000690000007400000068000000200000006d000000610000007000000070
*000000650000006e00000064010201000000270102010000002c01040100000000000000001d00
*000000000000000000000000000005020100000029022100000020000000660000006f00000072
*00000020000000630000006f0000006e0000007400000061000000690000006e00000065000000
*72000000730000002000000066000000750000006c0000006c000000200000006f000000660000
*00200000006d0000006f0000006e0000006f0000006900000064000000730000002e0000000a00
*0000000000001603024d000000500000006f0000006c000000790000006d0000006f0000007200
*00007000000068000000690000006300000020000000630000006f0000006e0000007400000061
*000000690000006e00000065000000720000007300000020000000740000006800000061000000
*740000002000000077000000650000002000000063000000610000006e00000020000000730000
*007500000070000000700000006c0000007900000020000000610000006e000000200000006f00
*00007000000065000000720000006100000074000000690000006f0000006e0000002000000074
*0000006f0000002000000068000000610000006e000000640000006c0000006500000020000000
*750000006e000000690000006f0000006e00000073000000200000007700000069000000740000
*00680000000a000000000000001903010204000000540000006800000065000000200104010000
*000000000000e3000000000000002b000000000000002c01020100000020010701020100000028
*01040100000000000000001e000000000000000000000000000000050102010000002c01040100
*000000000000001d0000000000000000000000000000000502010000002902010000000a000000
*000000001c0301021d0000004100000020000000430000006f0000006e00000074000000610000
*00690000006e000000650000007200000020000000730000007500000069000000740000006100
*0000620000006c0000006500000020000000660000006f00000072000000200000007400000068
*000000650000002001040200000000000000001a00000000000000000000000000000005000000
*000000000019000000000000000000000000000000050102010000002001040100000000000000
*00e3000000000000002b000000000000002c02010000000a1300000000000000e6000000000000
*00e800000000000000e30000000000000003000000000000000400000000000000050000000000
*000006000000000000001300000000000000140000000000000015000000000000001600000000
*0000001700000000000000180000000000000019000000000000001a000000000000001b000000
*000000001c000000000000001d000000000000001e0c000000000000001c000000000000001d00
*0000000000001e0000000000000019000000000000001a000000000000001b0000000000000016
*000000000000001800000000000000170000000000000013000000000000001400000000000000
*1500000000000000000000000000000006000108000000700000006f0000007200000074000000
*61000000620000006c00000065010c000000650000007800000070000000650000007200000069
*0000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d00
*000065000000740000007400000040000000670000006d00000061000000690000006c0000002e
*000000630000006f0000006d05000000000000001f030102020000006100000020010401000000
*000000000028000000000000000000000000000000060102190000002000000074000000720000
*00610000006e00000073000000660000006f000000720000006d00000065000000720000002000
*000074000000680000006100000074000000200000007400000072000000650000006100000074
*0000007300000020010401000000000000000103000000000000002b000000000000002f010204
*000000200000006100000073000000200104010000000000000001040000000000000030000000
*00000000310102010000000a010215000000200000005400000068000000690000007300000020
*0000006c00000065000000740000007300000020000000790000006f0000007500000020000000
*75000000730000006500000020000000610000002001020a000000420000007900000074000000
*65000000530000007400000072000000690000006e000000670102060000002000000061000000
*730000002000000061000000200104010000000000000001040000000000000030000000000000
*003101022000000020000000730000006f00000075000000720000006300000065000000200000
*00770000006900000074000000680000006f000000750000007400000020000000670000006f00
*0000690000006e00000067000000200000007400000068000000720000006f0000007500000067
*000000680000002000000061000000200104010000000000000000e3000000000000002b000000
*000000002c010212000000200000007400000072000000610000006e0000007300000066000000
*6f000000720000006d0000006500000072000000200000006c000000690000006b000000650000
*00200102040000005500000054000000460000003802010000000a000000000000002203010202
*000000610000002001040100000000000000002800000000000000000000000000000006024d00
*0000200000007400000072000000610000006e00000073000000660000006f000000720000006d
*000000650000007200000020000000740000006800000061000000740000002000000061000000
*730000006b00000073000000200000006f0000006e0000006c0000007900000020000000660000
*006f00000072000000200000007400000068000000650000002000000076000000610000006c00
*000075000000650000007300000020000000630000006f0000006e000000740000006100000069
*0000006e000000650000006400000020000000690000006e00000020000000610000006e000000
*20000000690000006e000000640000006500000078000000650000006400000020000000630000
*006f0000006e0000007400000061000000690000006e00000065000000720000000a0000000000
*000025030102020000006100000020010401000000000000000028000000000000000000000000
*000000060241000000200000007400000072000000610000006e00000073000000660000006f00
*0000720000006d0000006500000072000000200000007400000068000000610000007400000020
*00000061000000730000006b00000073000000200000006f0000006e0000006c00000079000000
*20000000660000006f0000007200000020000000740000006800000065000000200000006b0000
*00650000007900000073000000200000006f0000006600000020000000610000006e0000002000
*0000690000006e000000640000006500000078000000650000006400000020000000630000006f
*0000006e0000007400000061000000690000006e00000065000000720000000a00000000000000
*28030102130000006d000000690000006e000000690000006d000000610000006c000000200000
*00640000006500000066000000690000006e0000006900000074000000690000006f0000006e00
*00002001040100000000000000002a000000000000000000000000000000060102040000002000
*00006f000000720000002001040100000000000000002b00000000000000000000000000000006
*02010000000a000000000000002d030102080000004100000070000000700000006c0000007900
*000020000000610000002001040100000000000000000300000000000000000000000000000001
*01021f000000200000006400000069000000720000006500000063000000740000006c00000079
*00000020000000740000006f000000200000007400000068000000650000002000000065000000
*6c000000650000006d000000650000006e0000007400000073000000200000006f000000660000
*002000000061000000200104010000000000000000280000000000000000000000000000000602
*010000000a3800000000000000e600000000000000e700000000000000e800000000000000e300
*000000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed
*00000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000
*f200000000000000f300000000000000f400000000000000f500000000000000f6000000000000
*00f700000000000000f800000000000000f900000000000000fa00000000000000fb0000000000
*0000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000001f00000000000000200000000000000021000000000000002200
*000000000000230000000000000024000000000000002500000000000000260000000000000027
*00000000000000280000000000000029000000000000002a000000000000002b00000000000000
*2c000000000000002d000000000000002e000000000000002f1100000000000000280000000000
*000029000000000000002a000000000000002b000000000000002c000000000000002500000000
*000000260000000000000027000000000000002200000000000000230000000000000024000000
*000000001f00000000000000200000000000000021000000000000002d000000000000002e0000
*00000000002f000000000000000000000000000000070001270000006e0000006f0000006e0000
*002d000000700000006f000000720000007400000061000000620000006c000000650000002000
*0000280000004d000000500000005400000043000000730000002c000000200000004f00000076
*00000065000000720000006c0000006f0000006100000064000000650000006400000053000000
*7400000072000000690000006e000000670000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011000
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d060000000000000030030102020000
*0041000000200104010000000000000000e3000000000000002b000000000000002c01023a0000
*00200000006f000000660000002000000070000000610000007200000074000000690000006100
*00006c00000020000000690000006e000000660000006f000000720000006d0000006100000074
*000000690000006f0000006e0000002000000061000000620000006f0000007500000074000000
*200000006c0000006f000000630000006100000074000000690000006f0000006e000000730000
*0020000000690000006e000000200000006100000020000000730000006f000000750000007200
*000063000000650000002000000066000000690000006c000000650000002e0000000a025f0000
*002000000020000000200000005400000068000000690000007300000020000000690000007300
*000020000000700000006f0000006c000000790000006d0000006f000000720000007000000068
*000000690000006300000020000000690000006e00000020000000740000006800000065000000
*200000006b000000690000006e00000064000000200000006f0000006600000020000000690000
*006e000000660000006f000000720000006d0000006100000074000000690000006f0000006e00
*000020000000790000006f000000750000002000000077000000610000006e0000007400000020
*000000740000006f000000200000006d00000061000000690000006e0000007400000061000000
*690000006e0000002000000061000000620000006f000000750000007400000020000000650000
*0061000000630000006800000020000000730000006f0000007500000072000000630000006500
*00002000000066000000690000006c000000650000002e0000000a000000000000003703023f00
*0000430000006f0000006d00000070000000750000007400000065000000200000007400000068
*00000065000000200000006c0000006f000000630000006100000074000000690000006f000000
*6e000000200000006f0000006600000020000000740000006800000065000000200000006e0000
*00650000007800000074000000200000007300000074000000610000006e000000640000006100
*0000720000006400000020000000380000002d000000630000006f0000006c000000750000006d
*0000006e00000020000000610000006c00000069000000670000006e0000006500000064000000
*200000007400000061000000620000000a0000000000000038030102350000006c000000690000
*00660000007400000020000000690000006e000000660000006f000000720000006d0000006100
*000074000000690000006f0000006e0000002000000061000000620000006f0000007500000074
*000000200000006100000020000000730000006f00000075000000720000006300000065000000
*2000000066000000690000006c0000006500000020000000690000006e000000740000006f0000
*002000000061000000200000007300000074000000610000007200000074000000690000006e00
*0000670000002001040100000000000000003000000000000000000000000000000007020f0000
*0020000000660000006f0000007200000020000000740000006800000061000000740000002000
*000066000000690000006c000000650000000a000000000000003903026a000000650000007800
*000074000000720000006100000063000000740000002000000070000000610000007200000074
*00000069000000610000006c00000020000000690000006e000000660000006f00000072000000
*6d0000006100000074000000690000006f0000006e0000002000000061000000620000006f0000
*007500000074000000200000007400000068000000650000002000000063000000750000007200
*000072000000650000006e0000007400000020000000630000006f0000006c000000750000006d
*0000006e0000002c000000200000006500000076000000650000006e0000002000000069000000
*6e0000002000000074000000680000006500000020000000610000006200000073000000650000
*006e0000006300000065000000200000006f00000066000000200000006b0000006e0000006f00
*0000770000006c00000065000000640000006700000065000000200000006f0000006600000020
*00000074000000680000006500000020000000730000006f000000750000007200000063000000
*650000002000000066000000690000006c000000650000000a000000000000003a030246000000
*650000007800000074000000720000006100000063000000740000002000000070000000610000
*00720000007400000069000000610000006c00000020000000690000006e000000660000006f00
*0000720000006d0000006100000074000000690000006f0000006e000000200000006100000062
*0000006f0000007500000074000000200000007400000068000000650000002000000063000000
*750000007200000072000000650000006e00000074000000200000006c000000690000006e0000
*0065000000200000006e000000750000006d000000620000006500000072000000200000006900
*00006600000020000000700000006f000000730000007300000069000000620000006c00000065
*0000000a000000000000003b03023c000000650000007800000074000000720000006100000063
*000000740000002000000074000000680000006500000020000000730000007400000061000000
*6e0000006400000061000000720000006400000020000000660000006f000000720000006d0000
*00610000007400000020000000660000006f0000007200000020000000610000006e0000002000
*00006100000062000000730000006f0000006c0000007500000074000000650000002000000073
*0000006f0000007500000072000000630000006500000020000000700000006f00000073000000
*6900000074000000690000006f0000006e0000000a3600000000000000e600000000000000e700
*000000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb
*00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000
*f000000000000000f100000000000000f200000000000000f300000000000000f4000000000000
*00f500000000000000f600000000000000f700000000000000f800000000000000f90000000000
*0000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00000000
*000000ff0000000000000100000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070000
*0000000000080000000000000009000000000000000a000000000000000b000000000000000c00
*0000000000000d0000000000000030000000000000003100000000000000320000000000000033
*000000000000003400000000000000350000000000000036000000000000003700000000000000
*380000000000000039000000000000003a000000000000003b0c00000000000000370000000000
*000030000000000000003400000000000000330000000000000032000000000000003100000000
*000000360000000000000035000000000000003a00000000000000390000000000000038000000
*000000003b000000000000000000000000000000080001270000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000004d000000500000005400000043000000730000002c000000200000004f0000007600
*000065000000720000006c0000006f000000610000006400000065000000640000005300000074
*00000072000000690000006e000000670000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d08000000000000003c03010202000000
*410000002001040100000000000000000b00000000000000000000000000000002022600000020
*0000007400000072000000610000006e00000073000000660000006f000000720000006d000000
*650000007200000020000000740000006800000061000000740000002000000073000000740000
*0072000000690000007000000073000000200000006f0000007500000074000000200000006e00
*000065000000770000006c000000690000006e00000065000000730000000a000000000000003e
*03010202000000410000002001040100000000000000000b000000000000000000000000000000
*02010236000000200000007400000072000000610000006e00000073000000660000006f000000
*720000006d00000065000000720000002000000074000000680000006100000074000000200000
*00730000007400000072000000690000007000000073000000200000006f000000750000007400
*000020000000610000006e00000079000000200000006300000068000000610000007200000061
*00000063000000740000006500000072000000200000006d000000610000007400000063000000
*680000006500000064000000200000006200000079000000200104010000000000000001050000
*00000000002b000000000000003202010000000a00000000000000400301020200000041000000
*2001040100000000000000000b0000000000000000000000000000000201021b00000020000000
*7400000072000000610000006e00000073000000660000006f000000720000006d000000650000
*007200000020000000740000006800000061000000740000002000000062000000720000006500
*0000610000006b0000007300000020000000610000002001040100000000000000010400000000
*000000300000000000000031010201000000200104010000000000000000280000000000000000
*000000000000000601022000000020000000690000006e000000740000006f0000002000000064
*000000690000007300000074000000690000006e0000006300000074000000200000006c000000
*690000006e00000065000000730000002c00000020000000660000006500000065000000640000
*00690000006e000000670000002000000061000000200104010000000000000001040000000000
*000030000000000000003101020100000020010401000000000000000003000000000000000000
*0000000000000102140000002000000065000000610000006300000068000000200000006c0000
*00690000006e0000006500000020000000690000006e0000002000000074000000750000007200
*00006e0000002e0000000a00000000000000410301020200000041000000200104010000000000
*0000000b0000000000000000000000000000000201021b00000020000000740000007200000061
*0000006e00000073000000660000006f000000720000006d000000650000007200000020000000
*7400000068000000610000007400000020000000620000007200000065000000610000006b0000
*007300000020000000610000002001040100000000000000010400000000000000300000000000
*000031010201000000200104010000000000000000280000000000000000000000000000000601
*022000000020000000690000006e000000740000006f0000002000000064000000690000007300
*000074000000690000006e000000630000007400000020000000770000006f0000007200000064
*000000730000002c0000002000000066000000650000006500000064000000690000006e000000
*670000002000000061000000200104010000000000000001040000000000000030000000000000
*003101020100000020010401000000000000000003000000000000000000000000000000010213
*0000002000000065000000610000006300000068000000200000006c000000690000006e000000
*6500000020000000690000006e000000200000007400000075000000720000006e0000000a0000
*000000000042030102230000004500000078000000740000007200000061000000630000007400
*000020000000740000006800000065000000200000006d00000061000000740000006300000068
*000000650000006400000020000000770000006f00000072000000640000007300000020000000
*66000000720000006f0000006d0000002000000074000000680000006500000020010401000000
*000000000041000000000000000000000000000000080102010000002001040100000000000000
*00e3000000000000002b000000000000002c02010000000a000000000000004303010223000000
*450000007800000074000000720000006100000063000000740000002000000074000000680000
*0065000000200000006d0000006100000074000000630000006800000065000000640000002000
*00006c000000690000006e00000065000000730000002000000066000000720000006f0000006d
*000000200000007400000068000000650000002001040100000000000000004000000000000000
*000000000000000008010201000000200104010000000000000000e3000000000000002b000000
*000000002c02010000000a000000000000004403025e0000005500000074000000690000006c00
*00006900000074000000790000002000000066000000750000006e000000630000007400000069
*0000006f0000006e00000020000000740000006f00000020000000650000007800000074000000
*7200000061000000630000007400000020000000770000006f0000007200000064000000730000
*00200000007500000073000000690000006e000000670000002000000061000000630000006300
*0000750000006d000000750000006c00000061000000740000006f000000720000002c00000020
*000000690000006e000000730000006900000064000000650000002d000000770000006f000000
*72000000640000002c00000020000000610000006e0000006400000020000000750000006e0000
*0074000000690000006c0000002d0000006e0000006500000078000000740000002d0000007700
*00006f0000007200000064000000200000006d0000006f0000006e0000006f0000006900000064
*000000730000000a000000000000004503025e0000005500000074000000690000006c00000069
*00000074000000790000002000000066000000750000006e000000630000007400000069000000
*6f0000006e00000020000000740000006f00000020000000650000007800000074000000720000
*00610000006300000074000000200000006c000000690000006e00000065000000730000002000
*00007500000073000000690000006e000000670000002000000061000000630000006300000075
*0000006d000000750000006c00000061000000740000006f000000720000002c00000020000000
*690000006e000000730000006900000064000000650000002d0000006c000000690000006e0000
*00650000002c00000020000000610000006e0000006400000020000000750000006e0000007400
*0000690000006c0000002d0000006e0000006500000078000000740000002d0000006c00000069
*0000006e00000065000000200000006d0000006f0000006e0000006f0000006900000064000000
*730000000a3400000000000000e600000000000000e700000000000000e800000000000000e300
*000000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed
*00000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000
*f200000000000000f300000000000000f400000000000000f500000000000000f6000000000000
*00f700000000000000f800000000000000f900000000000000fa00000000000000fb0000000000
*0000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000000b000000000000000c000000000000000d000000000000003c00
*0000000000003d000000000000003e000000000000003f00000000000000400000000000000041
*00000000000000420000000000000043000000000000004400000000000000450a000000000000
*00410000000000000042000000000000003e000000000000003f00000000000000440000000000
*0000400000000000000043000000000000003c000000000000003d000000000000004500000000
*000000000000000000000009000108000000700000006f00000072000000740000006100000062
*0000006c00000065010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d002a00000000000000e600000000000000e700000000000000e8000000000000
*00e300000000000000e900000000000000ea00000000000000eb00000000000000ec0000000000
*0000ed00000000000000ee00000000000000ef00000000000000f000000000000000f100000000
*000000f200000000000000f300000000000000f400000000000000f500000000000000f6000000
*00000000f700000000000000f800000000000000f900000000000000fa00000000000000fb0000
*0000000000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000
*000000000000000000000000000001000000000000000200000000000000030000000000000004
*000000000000000500000000000000060000000000000007000000000000000800000000000000
*09000000000000000a000000000000004600000000000000470000000000000048030000000000
*000046000000000000004700000000000000480000000000000000000000000000000a00010800
*0000700000006f000000720000007400000061000000620000006c00000065010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d060000000000000106
*03010214000000410000006e000000200000004c0000005a000000370000003800000020000000
*630000006f0000006d0000007000000072000000650000007300000073000000690000006e0000
*0067000000200104010000000000000000280000000000000000000000000000000601021b0000
*002c00000020000000770000006800000069000000630000006800000020000000730000007500
*000070000000700000006f00000072000000740000007300000020000000650000006600000066
*000000690000006300000069000000650000006e00000074000000200104010000000000000000
*2a00000000000000000000000000000006020c000000200000006f000000700000006500000072
*0000006100000074000000690000006f0000006e000000730000000a000000000000004a030102
*130000006100000020000000740000007900000070000000650000002d000000630000006f0000
*006e00000073000000740000007200000061000000690000006e00000065000000640000002001
*040100000000000000002d00000000000000000000000000000006020b000000200000006f0000
*007000000065000000720000006100000074000000690000006f0000006e0000000a0000000000
*00004b0301021c000000630000006f0000006e0000007400000072000000750000006300000074
*00000020000000610000006e000000200000004c0000005a00000037000000380000002d000000
*630000006f0000006d000000700000007200000065000000730000007300000065000000640000
*002001040100000000000000002800000000000000000000000000000006010209000000200000
*007500000073000000690000006e00000067000000200000006100000020010401000000000000
*00010700000000000000330000000000000034022a00000020000000690000006e000000740000
*0065000000720000006e000000610000006c0000006c000000790000002c000000200000007200
*00006500000071000000750000006900000072000000650000007300000020000000610000006e
*00000020000000690000006e0000007300000074000000610000006e0000006300000065000000
*200000006f00000066000000200000004f00000072000000640000002e0000000a000000000000
*004c0301021c000000630000006f0000006e000000740000007200000075000000630000007400
*000020000000610000006e000000200000004c0000005a00000037000000380000002d00000063
*0000006f0000006d00000070000000720000006500000073000000730000006500000064000000
*200104010000000000000000280000000000000000000000000000000602360000002000000075
*00000073000000690000006e000000670000002000000061000000200000006c00000069000000
*730000007400000020000000690000006e0000007400000065000000720000006e000000610000
*006c0000006c000000790000002c00000020000000720000006500000071000000750000006900
*000072000000650000007300000020000000610000006e00000020000000690000006e00000073
*00000074000000610000006e0000006300000065000000200000006f0000006600000020000000
*45000000710000002e0000000a000000000000004d03022a000000510000007500000069000000
*630000006b000000430000006800000065000000630000006b0000002000000070000000720000
*006f00000070000000650000007200000074000000790000003a00000020000000640000006500
*0000630000006f0000006400000065000000200000002e00000020000000650000006e00000063
*0000006f0000006400000065000000200000003d0000002000000069000000640000000a000000
*000000004e03022c000000510000007500000069000000630000006b0000004300000068000000
*65000000630000006b0000002000000070000000720000006f0000007000000065000000720000
*0074000000790000003a000000200000006400000065000000630000006f000000640000006500
*0000200000002e00000020000000650000006e000000630000006f000000640000006500000045
*00000071000000200000003d0000002000000069000000640000000a3e00000000000000e60000
*0000000000e700000000000000e800000000000000e300000000000000e900000000000000ea00
*000000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef
*00000000000000f000000000000000f100000000000000f200000000000000f300000000000000
*f400000000000000f500000000000000f600000000000000f700000000000000f8000000000000
*00f900000000000000fa00000000000000fb00000000000000fc00000000000000fd0000000000
*0000fe00000000000000ff00000000000001000000000000000000000000000000000100000000
*000000020000000000000003000000000000000400000000000000050000000000000006000000
*000000000700000000000000080000000000000009000000000000000a000000000000001f0000
*000000000020000000000000002100000000000000220000000000000023000000000000002400
*000000000000250000000000000026000000000000002700000000000000280000000000000029
*000000000000002a000000000000002b000000000000002c000000000000002d00000000000000
*2e000000000000002f0000000000000049000000000000004a000000000000004b000000000000
*004c000000000000004d000000000000004e060000000000000049000000000000004a00000000
*0000004b000000000000004c000000000000004d000000000000004e0000000000000000000000
*000000000b0001280000006e0000006f0000006e0000002d000000700000006f00000072000000
*7400000061000000620000006c0000006500000020000000280000006f00000076000000650000
*00720000006c0000006f0000006100000064000000650000006400000020000000730000007400
*000072000000690000006e00000067000000730000002c000000200000004d0000005000000054
*000000430000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d002a00000000000000e600000000000000e700000000000000e80000
*0000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec00
*000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f1
*00000000000000f200000000000000f300000000000000f400000000000000f500000000000000
*f600000000000000f700000000000000f800000000000000f900000000000000fa000000000000
*00fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000000000
*000100000000000000000000000000000000010000000000000002000000000000000300000000
*000000040000000000000005000000000000000600000000000000070000000000000008000000
*0000000009000000000000000a000000000000004f000000000000005000000000000000510300
*0000000000004f000000000000005000000000000000510000000000000000000000000000000c
*000108000000700000006f000000720000007400000061000000620000006c00000065010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c0110000000650000006b0000006d000000650000007400000074000000400000
*00670000006d00000061000000690000006c0000002e000000630000006f0000006d0400000000
*000000520301020200000041000000200104010000000000000000e3000000000000002b000000
*000000002c01020b000000200000006900000073000000200000006a0000007500000073000000
*74000000200000006100000020010401000000000000000108000000000000002b000000000000
*0035022e0000002000000077000000690000007400000068000000200000006f0000006e000000
*65000000200000006f000000620000006a0000006500000063000000740000002e000000200000
*00540000006800000069000000730000002000000066000000610000006b000000650000007300
*000020000000740000006800000061000000740000002000000077000000690000007400000068
*000000200000006100000020000000470000004100000044000000540000000a00000000000000
*5303010204000000540000006800000065000000200104010000000000000000e3000000000000
*002b000000000000002c010237000000200000006f000000660000002000000074000000680000
*006500000020000000650000006e000000640000006f0000006d0000006f000000720000007000
*00006800000069000000730000006d00000073000000200000006f000000760000006500000072
*00000020000000730000006f0000006d00000065000000200000006f000000620000006a000000
*65000000630000007400000020000000690000006e00000020000000610000006e000000200000
*006100000072000000620000006900000074000000720000006100000072000000790000002001
*0401000000000000000108000000000000002b000000000000003502020000002e0000000a0000
*0000000000560301020c0000004500000078000000740000007200000061000000630000007400
*000020000000740000006800000065000000200104010000000000000000e3000000000000002b
*000000000000002c01021e0000002000000066000000720000006f0000006d0000002000000069
*000000740000007300000020000000720000006500000070000000720000006500000073000000
*650000006e000000740000006100000074000000690000006f0000006e00000020000000610000
*0073000000200000006100000020010401000000000000000108000000000000002b0000000000
*00003502010000000a000000000000005703010215000000430000006f0000006e000000760000
*0065000000720000007400000020000000610000002000000076000000610000006c0000007500
*00006500000020000000690000006e0000002000000061000000200104010000000000000000e3
*000000000000002b000000000000002c01021400000020000000690000006e000000740000006f
*00000020000000610000006e000000200000006100000072000000720000006f00000077000000
*20000000690000006e000000200000006100000020010401000000000000000108000000000000
*002b000000000000003502020000002e0000000a3200000000000000e600000000000000e70000
*0000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb00
*000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f0
*00000000000000f100000000000000f200000000000000f300000000000000f400000000000000
*f500000000000000f600000000000000f700000000000000f800000000000000f9000000000000
*00fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe0000000000
*0000ff00000000000001000000000000000109000000000000010a000000000000010b00000000
*0000010c0000000000000108000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070000
*0000000000080000000000000009000000000000000a0000000000000052000000000000005300
*000000000000540000000000000055000000000000005600000000000000570600000000000000
*530000000000000054000000000000005500000000000000520000000000000056000000000000
*00570000000000000000000000000000000d000108000000700000006f00000072000000740000
*0061000000620000006c00000065010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d001e00000000000000e600000000000000e700000000000000e8
*00000000000000e300000000000000e900000000000000ea00000000000000eb00000000000000
*ec00000000000000ed00000000000000ee00000000000000ef00000000000000f0000000000000
*00f100000000000000f200000000000000f300000000000000f400000000000000f50000000000
*0000f600000000000000f700000000000000f800000000000000f900000000000000fa00000000
*000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff000000
*000000010000000000000000580000000000000059020000000000000058000000000000005900
*00000000000000000000000000000e000108000000700000006f00000072000000740000006100
*0000620000006c00000065010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d001f00000000000000e600000000000000e700000000000000e8000000
*00000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec0000
*0000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f100
*000000000000f200000000000000f300000000000000f400000000000000f500000000000000f6
*00000000000000f700000000000000f800000000000000f900000000000000fa00000000000000
*fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff000000000000
*010000000000000000580000000000000059000000000000005a01000000000000005a00000000
*00000000000000000000000f000122000000700000006f00000072000000740000006100000062
*0000006c0000006500000020000000280000006200000075000000740000002000000069000000
*6e0000007300000074000000610000006e00000063000000650000007300000020000000750000
*007300000065000000200000004d0000005000000054000000430000007300000029010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c0110000000650000006b0000006d00000065000000740000007400000040000000
*670000006d00000061000000690000006c0000002e000000630000006f0000006d020000000000
*00005b0301020a000000430000006f0000006e0000007600000065000000720000007400000020
*00000061000000200104010000000000000000e3000000000000002b000000000000002c010208
*00000020000000690000006e000000740000006f00000020000000610000002001040100000000
*00000000610000000000000000000000000000000f01020c0000002e000000200000004d000000
*6e000000650000006d0000006f0000006e00000069000000630000003a000000200107021b0000
*004500000078000000700000002000000061000000200000002a00000020000000450000007800
*0000700000002000000062000000200000003d0000002000000045000000780000007000000020
*0000002800000061000000200000002b00000020000000620000002902010000000a0000000000
*00005e0301020a000000430000006f0000006e0000007600000065000000720000007400000020
*00000061000000200104010000000000000000610000000000000000000000000000000f010208
*00000020000000690000006e000000740000006f00000020000000610000002001040100000000
*00000000e3000000000000002b000000000000002c01020c0000002e000000200000004d000000
*6e000000650000006d0000006f0000006e00000069000000630000003a000000200107021b0000
*004c0000006f000000670000002000000061000000200000002b000000200000004c0000006f00
*0000670000002000000062000000200000003d000000200000004c0000006f0000006700000020
*0000002800000061000000200000002a00000020000000620000002902010000000a2700000000
*000000e600000000000000e700000000000000e800000000000000e300000000000000e9000000
*00000000ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee0000
*0000000000ef00000000000000f000000000000000f100000000000000f200000000000000f300
*000000000000f400000000000000f500000000000000f600000000000000f700000000000000f8
*00000000000000f900000000000000fa00000000000000fb00000000000000fc00000000000000
*fd00000000000000fe00000000000000ff00000000000001000000000000000058000000000000
*0059000000000000005b000000000000005c000000000000005d000000000000005e0000000000
*00005f000000000000006000000000000000610000000000000062000000000000006309000000
*000000006100000000000000620000000000000063000000000000005e000000000000005f0000
*000000000060000000000000005b000000000000005c000000000000005d000000000000000000
*00000000000010000108000000700000006f000000720000007400000061000000620000006c00
*000065010c0000006500000078000000700000006500000072000000690000006d000000650000
*006e00000074000000610000006c0110000000650000006b0000006d0000006500000074000000
*7400000040000000670000006d00000061000000690000006c0000002e000000630000006f0000
*006d002900000000000000e600000000000000e700000000000000e800000000000000e3000000
*00000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed0000
*0000000000ee00000000000000ef00000000000000f000000000000000f100000000000000f200
*000000000000f300000000000000f400000000000000f500000000000000f600000000000000f7
*00000000000000f800000000000000f900000000000000fa00000000000000fb00000000000000
*fc00000000000000fd00000000000000fe00000000000000ff0000000000000100000000000000
*00580000000000000059000000000000005a000000000000005b000000000000005c0000000000
*00005d000000000000005e000000000000005f0000000000000060000000000000006100000000
*000000620000000000000063000000000000006401000000000000006400000000000000000000
*00000000001100011e000000700000006f000000720000007400000061000000620000006c0000
*00650000002000000028000000690000006e0000007300000074000000610000006e0000006300
*0000650000007300000020000000750000007300000065000000200000004d0000005000000054
*000000430000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d0200000000000000650b021f0000002800000061000000200000002b
*000000200000006200000029000000200000002a0000002000000063000000200000003d000000
*200000002800000061000000200000002a000000200000006300000029000000200000002b0000
*00200000002800000062000000200000002a00000020000000630000002900000000000000660b
*021f00000061000000200000002a000000200000002800000062000000200000002b0000002000
*00006300000029000000200000003d000000200000002800000061000000200000002a00000020
*0000006200000029000000200000002b000000200000002800000061000000200000002a000000
*2000000063000000292900000000000000e600000000000000e700000000000000e80000000000
*0000e300000000000000e900000000000000ea00000000000000eb00000000000000ec00000000
*000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f1000000
*00000000f200000000000000f300000000000000f400000000000000f500000000000000f60000
*0000000000f700000000000000f800000000000000f900000000000000fa00000000000000fb00
*000000000000fc00000000000000fd00000000000000fe00000000000000ff0000000000000100
*00000000000000580000000000000059000000000000005b000000000000005c00000000000000
*5d000000000000005e000000000000005f00000000000000600000000000000061000000000000
*006200000000000000630000000000000065000000000000006602000000000000006600000000
*00000065000000000000000000000000000000120001140000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*280000004d0000005000000054000000430000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011000
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d010000000000000067030102020000
*004100000020010401000000000000000067000000000000000000000000000000120102180000
*0020000000690000007300000020000000610000006e00000020000000690000006e0000007300
*000074000000610000006e0000006300000065000000200000006f000000660000002000000062
*0000006f0000007400000068000000200104010000000000000000610000000000000000000000
*000000000f01020500000020000000610000006e00000064000000200104010000000000000000
*e3000000000000002b000000000000002c01020800000020000000770000006800000065000000
*7200000065000000200000000a0102030000002000000020000000200104010000000000000000
*630000000000000000000000000000000f01021200000020000000640000006900000073000000
*7400000072000000690000006200000075000000740000006500000073000000200000006f0000
*007600000065000000720000002001040100000000000000005800000000000000000000000000
*00000d02020000002e0000000a2a00000000000000e600000000000000e700000000000000e800
*000000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec
*00000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000
*f100000000000000f200000000000000f300000000000000f400000000000000f5000000000000
*00f600000000000000f700000000000000f800000000000000f900000000000000fa0000000000
*0000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff00000000
*0000010000000000000000580000000000000059000000000000005b000000000000005c000000
*000000005d000000000000005e000000000000005f000000000000006000000000000000610000
*000000000062000000000000006300000000000000650000000000000066000000000000006701
*000000000000006700000000000000000000000000000013000000000400000000000000680301
*0204000000540000006800000065000000200104010000000000000000e3000000000000002b00
*0000000000002c0102010000002001070102010000002801040100000000000000010d00000000
*0000002b00000000000000360102010000002c01040100000000000000010e000000000000002b
*000000000000002d020100000029010206000000200000006f0000007600000065000000720000
*002001070104010000000000000000e4000000000000002b000000000000002d02020000002000
*000061010207000000200000007700000068000000650000007200000065000000200104010000
*0000000000010e000000000000002b000000000000002d02140000002000000069000000730000
*002000000074000000680000006500000020000000740000006f00000070000000200000006500
*00006c000000650000006d000000650000006e000000740000000a000000000000006b03010204
*000000540000006800000065000000200104010000000000000000e3000000000000002b000000
*000000002c0102010000002001070102010000002801040100000000000000010f000000000000
*002b00000000000000360102010000002c01040100000000000000010e000000000000002b0000
*00000000002d020100000029010206000000200000006f00000076000000650000007200000020
*01070104010000000000000000e4000000000000002b000000000000002d020200000020000000
*610102070000002000000077000000680000006500000072000000650000002001040100000000
*000000010e000000000000002b000000000000002d021700000020000000690000007300000020
*00000074000000680000006500000020000000620000006f00000074000000740000006f000000
*6d00000020000000650000006c000000650000006d000000650000006e000000740000000a0000
*00000000006e03010204000000540000006800000065000000200104010000000000000000e300
*0000000000002b000000000000002c01020a000000200000006700000069000000760000006500
*00006e000000200000006200000079000000200107010201000000280104010000000000000001
*0d000000000000002b00000000000000360102010000002c010401000000000000000110000000
*000000002b000000000000003702010000002902010000000a0000000000000071030102040000
*00540000006800000065000000200104010000000000000000e3000000000000002b0000000000
*00002c0102010000002001070102010000002801040100000000000000010f000000000000002b
*00000000000000360102010000002c010401000000000000000111000000000000002b00000000
*0000003702010000002902010000000a1300000000000000e600000000000000e8000000000000
*00e300000000000000030000000000000004000000000000006800000000000000690000000000
*00006a000000000000006b000000000000006c000000000000006d000000000000006e00000000
*0000006f0000000000000070000000000000007100000000000000720000000000000073000000
*000000007400000000000000750e00000000000000710000000000000072000000000000007300
*0000000000006e000000000000006f0000000000000070000000000000006b000000000000006c
*000000000000006d00000000000000740000000000000068000000000000006900000000000000
*6a0000000000000075000000000000000000000000000000140000010c00000065000000780000
*00700000006500000072000000690000006d000000650000006e00000074000000610000006c01
*10000000650000006b0000006d00000065000000740000007400000040000000670000006d0000
*0061000000690000006c0000002e000000630000006f0000006d02000000000000007603010202
*00000041000000200104010000000000000000670000000000000000000000000000001201020c
*000000200000007700000068000000690000006300000068000000200000006100000064000000
*640000007300000020010401000000000000000111000000000000002b00000000000000370102
*0500000020000000610000006e0000006400000020010401000000000000000110000000000000
*002b0000000000000037021900000020000000740000006f000000200000006100000020000000
*7000000072000000650000002d0000006500000078000000690000007300000074000000690000
*006e0000006700000020000000740000007900000070000000650000002e0000000a0000000000
*00007a030102020000004100000020010401000000000000000067000000000000000000000000
*0000001201020d000000200000007500000073000000690000006e000000670000002000000061
*000000200000007400000079000000700000006501020100000027021d00000073000000200000
*006200000075000000690000006c000000740000002d000000690000006e000000200000004200
*00006f000000750000006e00000064000000650000006400000020000000690000006e00000073
*00000074000000610000006e00000063000000650000002e0000000a3100000000000000e60000
*0000000000e700000000000000e800000000000000e300000000000000e900000000000000ea00
*000000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef
*00000000000000f000000000000000f100000000000000f200000000000000f300000000000000
*f400000000000000f500000000000000f600000000000000f700000000000000f8000000000000
*00f900000000000000fa00000000000000fb00000000000000fc00000000000000fd0000000000
*0000fe00000000000000ff00000000000001000000000000000058000000000000005900000000
*0000005b000000000000005c000000000000005d000000000000005e000000000000005f000000
*000000006000000000000000610000000000000062000000000000006300000000000000650000
*000000000066000000000000006700000000000000760000000000000077000000000000007800
*00000000000079000000000000007a000000000000007b000000000000007c0700000000000000
*7a000000000000007b000000000000007c00000000000000760000000000000079000000000000
*00780000000000000077000000000000000000000000000000150000000001000000000000007d
*010301020400000054000000680000006500000020010401000000000000000067000000000000
*000000000000000000120102010000002001070102010000002801040100000000000000010d00
*0000000000002b00000000000000360102010000002c0104010000000000000001120000000000
*00002b0000000000000037020100000029010206000000200000006f0000007600000065000000
*720000002001070102010000006101020f00000020000000650000007800000074000000650000
*006e00000064000000650000006400000020000000770000006900000074000000680000002004
*01000000000000000080000000000000000000000000000000150102020000002e0000000a0102
*080000002000000020000000200000005700000068000000650000006e00000020010702010000
*0061010248000000200000006800000061000000730000002000000061000000200000004e0000
*00750000006d00000020000000690000006e0000007300000074000000610000006e0000006300
*000065000000200000007700000069000000740000006800000020000000610000006e00000020
*0000006100000064000000640000006900000074000000690000006f0000006e00000020000000
*740000006800000061000000740000002000000072000000650000007300000070000000650000
*00630000007400000073000000200000006f000000720000006400000065000000720000002c00
*0000200000007400000068000000650000006e0000002000000074000000680000006900000073
*000000200000006900000073000000200000000a01025300000020000000200000002000000074
*00000072000000610000006e00000073000000660000006f000000720000006d00000065000000
*6400000020000000690000006e000000740000006f000000200000006100000020000000740000
*00720000006f000000700000006900000063000000610000006c00000020000000730000006500
*00006d0000006900000072000000690000006e000000670000002e000000200000004900000074
*00000020000000690000007300000020000000610000007300000073000000750000006d000000
*650000006400000020000000740000006800000061000000740000002000000030000000200000
*00690000007300000020000000740000006800000065000000200000006c000000650000006100
*0000730000007400000020000000650000006c000000650000006d000000650000006e00000074
*0000000a02090000002000000020000000200000006f0000006600000020000000610000002e00
*00000a03010c41000000680000007400000074000000700000003a0000002f0000002f00000068
*000000610000006c0000002e000000610000007200000063000000680000006900000076000000
*65000000730000002d0000006f0000007500000076000000650000007200000074000000650000
*00730000002e00000066000000720000002f000000640000006f00000063000000730000002f00
*000030000000300000002f00000031000000310000002f00000033000000370000002f00000037
*000000390000002f0000005000000044000000460000002f00000054000000720000006f000000
*700000006900000063000000610000006c0000002e00000070000000640000006602010000000a
*3000000000000000e600000000000000e700000000000000e800000000000000e3000000000000
*00e900000000000000ea00000000000000eb00000000000000ec00000000000000ed0000000000
*0000ee00000000000000ef00000000000000f000000000000000f100000000000000f200000000
*000000f300000000000000f400000000000000f500000000000000f600000000000000f7000000
*00000000f800000000000000f900000000000000fa00000000000000fb00000000000000fc0000
*0000000000fd00000000000000fe00000000000000ff0000000000000100000000000000000300
*0000000000000400000000000000580000000000000059000000000000005b000000000000005c
*000000000000005d000000000000005e000000000000005f000000000000006000000000000000
*610000000000000062000000000000006300000000000000650000000000000066000000000000
*0067000000000000007d000000000000007e000000000000007f00000000000000800400000000
*00000080000000000000007d000000000000007e000000000000007f0000000000000000000000
*0000000038000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c0110000000650000006b0000006d00000065000000740000007400
*000040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d
*002b00000000000000e600000000000000e700000000000000e800000000000000e30000000000
*0000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed00000000
*000000ee00000000000000ef00000000000000f000000000000000f100000000000000f2000000
*00000000f300000000000000f400000000000000f500000000000000f600000000000000f70000
*0000000000f800000000000000f900000000000000fa00000000000000fb00000000000000fc00
*000000000000fd00000000000000fe00000000000000ff00000000000001000000000000000058
*0000000000000059000000000000005a000000000000005b000000000000005c00000000000000
*5d000000000000005e000000000000005f00000000000000600000000000000061000000000000
*006200000000000000630000000000000064000000000000006500000000000000660000000000
*000000000000000000000016000108000000700000006f00000072000000740000006100000062
*0000006c00000065010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c011f000000450000006400000077000000610000
*007200000064000000200000004b0000006d000000650000007400000074000000200000003c00
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d0000003e0100000000000000810301
*021d0000004d000000690000006e000000690000006d000000610000006c000000200000006300
*00006f0000006d000000700000006c000000650000007400000065000000200000006400000065
*00000066000000690000006e0000006900000074000000690000006f0000006e0000003a000000
*200104010000000000000000820000000000000000000000000000001601020400000020000000
*6f0000007200000020010401000000000000000083000000000000000000000000000000160201
*0000000a2200000000000000e600000000000000e700000000000000e800000000000000e30000
*0000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed00
*000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000f2
*00000000000000f300000000000000f400000000000000f500000000000000f600000000000000
*f700000000000000f800000000000000f900000000000000fa00000000000000fb000000000000
*00fc00000000000000fd00000000000000fe00000000000000ff00000000000001000000000000
*000058000000000000005900000000000000810000000000000082000000000000008300000000
*000000840400000000000000810000000000000082000000000000008400000000000000830000
*0000000000000000000000000017000108000000700000006f0000007200000074000000610000
*00620000006c00000065010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c0110000000650000006b0000006d00000065
*000000740000007400000040000000670000006d00000061000000690000006c0000002e000000
*630000006f0000006d002400000000000000e600000000000000e700000000000000e800000000
*000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec000000
*00000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f10000
*0000000000f200000000000000f300000000000000f400000000000000f500000000000000f600
*000000000000f700000000000000f800000000000000f900000000000000fa00000000000000fb
*00000000000000fc00000000000000fd00000000000000fe00000000000000ff00000000000001
*000000000000000058000000000000005900000000000000810000000000000082000000000000
*008300000000000000840000000000000085000000000000008602000000000000008500000000
*0000008600000000000000000000000000000018000108000000700000006f0000007200000074
*00000061000000620000006c00000065010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c0110000000650000006b0000
*006d00000065000000740000007400000040000000670000006d00000061000000690000006c00
*00002e000000630000006f0000006d0300000000000000870302220000004d000000690000006e
*000000690000006d000000610000006c0000002000000064000000650000006600000069000000
*6e0000006900000074000000690000006f0000006e000000200000006f00000076000000650000
*0072000000200000006f0000007200000020000000670000007200000065000000630000006900
*0000700000000a00000000000000880b01020200000078000000200102010000002f0202000000
*200000007900000000000000890b0102020000007800000020010201000000200201000000792f
*00000000000000e600000000000000e700000000000000e800000000000000e300000000000000
*e900000000000000ea00000000000000eb00000000000000ec00000000000000ed000000000000
*00ee00000000000000ef00000000000000f000000000000000f100000000000000f20000000000
*0000f300000000000000f400000000000000f500000000000000f600000000000000f700000000
*000000f800000000000000f900000000000000fa00000000000000fb00000000000000fc000000
*00000000fd00000000000000fe00000000000000ff000000000000010000000000000000580000
*000000000059000000000000005b000000000000005c000000000000005d000000000000005e00
*0000000000005f0000000000000060000000000000006100000000000000620000000000000063
*000000000000008100000000000000820000000000000083000000000000008400000000000000
*8700000000000000880000000000000089000000000000008a0400000000000000870000000000
*0000880000000000000089000000000000008a0000000000000000000000000000001900010800
*0000700000006f000000720000007400000061000000620000006c00000065010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d002600000000000000
*e600000000000000e700000000000000e800000000000000e300000000000000e9000000000000
*00ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee0000000000
*0000ef00000000000000f000000000000000f100000000000000f200000000000000f300000000
*000000f400000000000000f500000000000000f600000000000000f700000000000000f8000000
*00000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd0000
*0000000000fe00000000000000ff00000000000001000000000000000058000000000000005900
*0000000000005a0000000000000081000000000000008200000000000000830000000000000084
*000000000000008b000000000000008c000000000000008d03000000000000008b000000000000
*008c000000000000008d0000000000000000000000000000001a000108000000700000006f0000
*00720000007400000061000000620000006c00000065010c000000650000007800000070000000
*6500000072000000690000006d000000650000006e00000074000000610000006c011000000065
*0000006b0000006d00000065000000740000007400000040000000670000006d00000061000000
*690000006c0000002e000000630000006f0000006d003700000000000000e600000000000000e7
*00000000000000e800000000000000e300000000000000e900000000000000ea00000000000000
*eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000000000
*00f000000000000000f100000000000000f200000000000000f300000000000000f40000000000
*0000f500000000000000f600000000000000f700000000000000f800000000000000f900000000
*000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe000000
*00000000ff000000000000010000000000000000580000000000000059000000000000005a0000
*00000000005b000000000000005c000000000000005d000000000000005e000000000000005f00
*000000000000600000000000000061000000000000006200000000000000630000000000000064
*000000000000008100000000000000820000000000000083000000000000008400000000000000
*8700000000000000880000000000000089000000000000008a000000000000008b000000000000
*008c000000000000008d000000000000008e000000000000008f00000000000000900300000000
*0000008e000000000000008f00000000000000900000000000000000000000000000001b00011e
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*28000000690000006e0000007300000074000000610000006e0000006300000065000000730000
*0020000000750000007300000065000000200000004d0000005000000054000000430000007300
*000029010c0000006500000078000000700000006500000072000000690000006d000000650000
*006e00000074000000610000006c0110000000650000006b0000006d0000006500000074000000
*7400000040000000670000006d00000061000000690000006c0000002e000000630000006f0000
*006d002f00000000000000e600000000000000e700000000000000e800000000000000e3000000
*00000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed0000
*0000000000ee00000000000000ef00000000000000f000000000000000f100000000000000f200
*000000000000f300000000000000f400000000000000f500000000000000f600000000000000f7
*00000000000000f800000000000000f900000000000000fa00000000000000fb00000000000000
*fc00000000000000fd00000000000000fe00000000000000ff0000000000000100000000000000
*00580000000000000059000000000000005b000000000000005c000000000000005d0000000000
*00005e000000000000005f00000000000000600000000000000061000000000000006200000000
*000000630000000000000065000000000000006600000000000000670000000000000081000000
*000000008200000000000000830000000000000084000000000000009101000000000000009100
*00000000000000000000000000001c0001140000006e0000006f0000006e0000002d0000007000
*00006f000000720000007400000061000000620000006c0000006500000020000000280000004d
*0000005000000054000000430000007300000029010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c0110000000650000
*006b0000006d00000065000000740000007400000040000000670000006d000000610000006900
*00006c0000002e000000630000006f0000006d003200000000000000e600000000000000e70000
*0000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb00
*000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f0
*00000000000000f100000000000000f200000000000000f300000000000000f400000000000000
*f500000000000000f600000000000000f700000000000000f800000000000000f9000000000000
*00fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe0000000000
*0000ff000000000000010000000000000000580000000000000059000000000000005b00000000
*0000005c000000000000005d000000000000005e000000000000005f0000000000000060000000
*000000006100000000000000620000000000000063000000000000006500000000000000660000
*000000000067000000000000008100000000000000820000000000000083000000000000008400
*000000000000910000000000000092000000000000009300000000000000940300000000000000
*92000000000000009300000000000000940000000000000000000000000000001d000114000000
*6e0000006f0000006e0000002d000000700000006f000000720000007400000061000000620000
*006c0000006500000020000000280000004d000000500000005400000043000000730000002901
*0c0000006500000078000000700000006500000072000000690000006d000000650000006e0000
*0074000000610000006c0110000000650000006b0000006d000000650000007400000074000000
*40000000670000006d00000061000000690000006c0000002e000000630000006f0000006d0032
*00000000000000e600000000000000e700000000000000e800000000000000e300000000000000
*e900000000000000ea00000000000000eb00000000000000ec00000000000000ed000000000000
*00ee00000000000000ef00000000000000f000000000000000f100000000000000f20000000000
*0000f300000000000000f400000000000000f500000000000000f600000000000000f700000000
*000000f800000000000000f900000000000000fa00000000000000fb00000000000000fc000000
*00000000fd00000000000000fe00000000000000ff000000000000010000000000000000580000
*000000000059000000000000005b000000000000005c000000000000005d000000000000005e00
*0000000000005f0000000000000060000000000000006100000000000000620000000000000063
*000000000000006500000000000000660000000000000067000000000000008100000000000000
*820000000000000083000000000000008400000000000000910000000000000095000000000000
*009600000000000000970300000000000000950000000000000096000000000000009700000000
*00000000000000000000001e00013f0000006e0000006f0000006e0000002d000000700000006f
*000000720000007400000061000000620000006c0000006500000020000000280000004d000000
*500000005400000043000000730000002c0000002000000073000000630000006f000000700000
*0065000000640000002000000074000000790000007000000065000000730000002c0000002000
*0000650000006d000000700000007400000079000000200000006400000065000000630000006c
*000000730000002c0000002000000074000000790000007000000065000000200000006f000000
*70000000650000007200000061000000740000006f000000720000007300000029010c00000065
*00000078000000700000006500000072000000690000006d000000650000006e00000074000000
*610000006c011f000000450000006400000077000000610000007200000064000000200000004b
*0000006d000000650000007400000074000000200000003c000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d0000003e003400000000000000e600000000000000e700000000000000
*e800000000000000e300000000000000e900000000000000ea00000000000000eb000000000000
*00ec00000000000000ed00000000000000ee00000000000000ef00000000000000f00000000000
*0000f100000000000000f200000000000000f300000000000000f400000000000000f500000000
*000000f600000000000000f700000000000000f800000000000000f900000000000000fa000000
*00000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000
*00000000010000000000000000580000000000000059000000000000005b000000000000005c00
*0000000000005d000000000000005e000000000000005f00000000000000600000000000000061
*000000000000006200000000000000630000000000000065000000000000006600000000000000
*670000000000000081000000000000008200000000000000830000000000000084000000000000
*009100000000000000980000000000000099000000000000009a000000000000009b0000000000
*00009c05000000000000009a000000000000009b00000000000000980000000000000099000000
*000000009c0000000000000000000000000000001f0001140000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000004d0000005000000054000000430000007300000029010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c0110
*000000650000006b0000006d00000065000000740000007400000040000000670000006d000000
*61000000690000006c0000002e000000630000006f0000006d03000000000000009d0b021e0000
*00200000002800000078000000200000002a0000002e000000200000006d000000290000002000
*00002e0000002a0000002000000079000000200000003d0000002000000078000000200000002a
*0000002e00000020000000280000006d000000200000002e0000002a0000002000000079000000
*29000000000000009e0b021c00000020000000280000006d000000200000002e0000002a000000
*200000007800000029000000200000002a0000002000000079000000200000003d000000200000
*006d000000200000002e0000002a000000200000002800000078000000200000002a0000002000
*0000790000002900000000000000a00b021c000000200000002800000078000000200000002a00
*0000200000007900000029000000200000002a0000002e000000200000006d000000200000003d
*0000002000000078000000200000002a000000200000002800000079000000200000002a000000
*2e000000200000006d000000293400000000000000e600000000000000e700000000000000e800
*000000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec
*00000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000
*f100000000000000f200000000000000f300000000000000f400000000000000f5000000000000
*00f600000000000000f700000000000000f800000000000000f900000000000000fa0000000000
*0000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff00000000
*0000010000000000000000580000000000000059000000000000005b000000000000005c000000
*000000005d000000000000005e000000000000005f000000000000006000000000000000610000
*000000000062000000000000006300000000000000650000000000000066000000000000006700
*000000000000810000000000000082000000000000008300000000000000840000000000000091
*000000000000009d000000000000009e000000000000009f00000000000000a000000000000000
*a10500000000000000a000000000000000a1000000000000009e000000000000009f0000000000
*00009d000000000000000000000000000000200001140000006e0000006f0000006e0000002d00
*0000700000006f000000720000007400000061000000620000006c000000650000002000000028
*0000004d0000005000000054000000430000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d0400000000000000a203010203000000
*690000006600000020010702010000006d01020600000020000000690000007300000020000000
*610000002001040100000000000000009d0000000000000000000000000000001f010206000000
*200000006f00000076000000650000007200000020010702010000007201020500000020000000
*610000006e00000064000000200107020100000066010206000000200000006900000073000000
*200000006100000020010401000000000000000113000000000000002b00000000000000390102
*06000000200000007400000068000000650000006e000000200107010202000000660000002001
*04020000000000000000a3000000000000000000000000000000200000000000000000a2000000
*000000000000000000000000200202000000200000006d01020600000020000000690000007300
*000020000000610000002001040100000000000000009d0000000000000000000000000000001f
*010206000000200000006f00000076000000650000007200000020010702010000007202090000
*002000000061000000730000002000000077000000650000006c0000006c0000000a0000000000
*0000a50301020200000041000000200104020000000000000000a6000000000000000000000000
*000000200000000000000000a50000000000000000000000000000002001020b00000020000000
*7400000075000000720000006e0000007300000020000000610000006e00000079000000200104
*01000000000000000114000000000000002b000000000000003901021100000020000000690000
*006e0000007300000074000000610000006e000000630000006500000020000000690000006e00
*0000740000006f0000002000000061000000200104010000000000000000e3000000000000002b
*000000000000002c0102020000002e0000000a0102160000002000000020000000200000004900
*00007400000020000000610000006c000000730000006f0000002000000070000000720000006f
*000000760000006900000064000000650000007300000020000000610000002001040100000000
*00000000610000000000000000000000000000000f01021100000020000000690000006e000000
*7300000074000000610000006e000000630000006500000020000000660000006f000000720000
*0020000000610000006e00000020010401000000000000000113000000000000002b0000000000
*00003901021a0000002000000066000000750000006e00000063000000740000006f0000007200
*000020000000770000007200000061000000700000007000000065000000640000002000000061
*000000720000006f000000750000006e0000006400000020000000610000002001040100000000
*00000000e3000000000000002b000000000000002c0102010000000a0102180000002000000020
*00000020000000610000006e000000640000002000000061000000730000007300000065000000
*720000007400000073000000200000007400000068000000610000007400000020000000610000
*006e0000007900000020010401000000000000000114000000000000002b000000000000003901
*020e000000200000006100000070000000700000006c0000006900000065000000640000002000
*0000740000006f0000002000000061000000200104010000000000000000e3000000000000002b
*000000000000002c01020900000020000000660000006f000000720000006d0000007300000020
*000000610000002001040100000000000000006500000000000000000000000000000011010202
*000000200000000a021b000000200000002000000020000000750000006e000000640000006500
*000072000000200000007400000068000000650000007300000065000000200000006f00000070
*00000065000000720000006100000074000000690000006f0000006e000000730000002e000000
*0a00000000000000a80301020200000041000000200104020000000000000000a9000000000000
*000000000000000000200000000000000000a80000000000000000000000000000002001021800
*0000200000007500000073000000650000007300000020000000610000006e0000002000000067
*0000006c00000075000000650000007300000020000000740000006f0000006700000065000000
*7400000068000000650000007200000020010401000000000000000113000000000000002b0000
*00000000003901021300000020000000610000006300000074000000690000006f0000006e0000
*0073000000200000007700000069000000740000006800000020000000280000002a0000003e00
*0000290000000a010214000000200000002000000020000000690000006e000000200000007400
*00006800000065000000200000006d000000610000006e0000006e000000650000007200000020
*0000006f0000006600000020010209000000740000007200000061000000760000006500000072
*00000073000000650000005f0102060000002000000066000000720000006f0000006d00000020
*01050d000000440000006100000074000000610000002e000000460000006f0000006c00000064
*00000061000000620000006c0000006501021a0000002e00000020000000410000006e00000079
*0000002000000076000000610000006c0000007500000065000000730000002000000072000000
*650000007400000075000000720000006e00000065000000640000002000000062000000790000
*00200000000a022200000020000000200000002000000072000000650000006400000075000000
*63000000650000006400000020000000610000006300000074000000690000006f0000006e0000
*007300000020000000610000007200000065000000200000006400000069000000730000006300
*000061000000720000006400000065000000640000002e0000000a00000000000000ab03010232
*000000450000006600000066000000690000006300000069000000650000006e00000074000000
*6c000000790000002000000061000000760000006f0000006900000064000000200000006e0000
*006500000065000000640000006c0000006500000073000000730000006c000000790000002000
*0000720000006500000062000000690000006e00000064000000690000006e0000006700000020
*0000007700000068000000650000006e000000200000007500000073000000690000006e000000
*670000002001040100000000000000000500000000000000000000000000000001010226000000
*200000006f0000006e00000020000000610000006e000000200000006100000063000000740000
*00690000006f0000006e0000002000000074000000680000006100000074000000200000006100
*00006c000000720000006500000061000000640000007900000020000000720000006500000074
*00000075000000720000006e000000730000002000000028000000290000000a023b0000002000
*000020000000200000004100000020000000720000006500000077000000720000006900000074
*000000650000002000000072000000750000006c00000065000000200000006100000075000000
*740000006f0000006d00000061000000740000006900000063000000610000006c0000006c0000
*0079000000200000006100000070000000700000006c0000006900000065000000730000002000
*000074000000680000006900000073000000200000007700000068000000650000006e00000020
*000000700000006f000000730000007300000069000000620000006c000000650000000a490000
*0000000000e600000000000000e700000000000000e800000000000000e300000000000000e900
*000000000000ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee
*00000000000000ef00000000000000f000000000000000f100000000000000f200000000000000
*f300000000000000f400000000000000f500000000000000f600000000000000f7000000000000
*00f800000000000000f900000000000000fa00000000000000fb00000000000000fc0000000000
*0000fd00000000000000fe00000000000000ff0000000000000100000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005000000
*0000000006000000000000000700000000000000080000000000000009000000000000000a0000
*0000000000580000000000000059000000000000005b000000000000005c000000000000005d00
*0000000000005e000000000000005f000000000000006000000000000000610000000000000062
*000000000000006300000000000000650000000000000066000000000000006700000000000000
*810000000000000082000000000000008300000000000000840000000000000091000000000000
*009d000000000000009e000000000000009f00000000000000a000000000000000a10000000000
*0000a200000000000000a300000000000000a400000000000000a500000000000000a600000000
*000000a700000000000000a800000000000000a900000000000000aa00000000000000ab0a0000
*0000000000a800000000000000a900000000000000aa00000000000000a500000000000000a600
*000000000000a700000000000000a200000000000000a300000000000000a400000000000000ab
*000000000000000000000000000000210001140000006e0000006f0000006e0000002d00000070
*0000006f000000720000007400000061000000620000006c000000650000002000000028000000
*4d0000005000000054000000430000007300000029010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d0400000000000000ac03010203000000690000
*006600000020010702010000006d01020600000020000000690000007300000020000000610000
*002001040100000000000000009d0000000000000000000000000000001f010206000000200000
*006f00000076000000650000007200000020010702010000007201020500000020000000610000
*006e00000064000000200107020100000066010206000000200000006900000073000000200000
*006100000020010401000000000000000115000000000000002b000000000000003a0102060000
*00200000007400000068000000650000006e000000200107010202000000660000002001040200
*00000000000000ad000000000000000000000000000000210000000000000000ac000000000000
*000000000000000000210202000000200000006d01020600000020000000690000007300000020
*000000610000002001040100000000000000009d0000000000000000000000000000001f020900
*00002000000061000000730000002000000077000000650000006c0000006c0000000a00000000
*000000af0301020200000041000000200104020000000000000000b00000000000000000000000
*00000000210000000000000000af0000000000000000000000000000002101020b000000200000
*007400000075000000720000006e0000007300000020000000610000006e000000790000002001
*0401000000000000000116000000000000002b000000000000003a010211000000200000006900
*00006e0000007300000074000000610000006e000000630000006500000020000000690000006e
*000000740000006f0000002000000061000000200104010000000000000000e300000000000000
*2b000000000000002c0102020000002e0000000a01021600000020000000200000002000000049
*0000007400000020000000610000006c000000730000006f000000200000007000000072000000
*6f0000007600000069000000640000006500000073000000200000006100000020010401000000
*0000000000610000000000000000000000000000000f01021000000020000000690000006e0000
*007300000074000000610000006e000000630000006500000020000000660000006f0000007200
*0000200000006100000020010401000000000000000115000000000000002b000000000000003a
*010212000000200000007700000072000000610000007000000070000000650000006400000020
*00000061000000720000006f000000750000006e00000064000000200000006100000020010401
*0000000000000000e3000000000000002b000000000000002c0102010000000a01021800000020
*0000002000000020000000610000006e0000006400000020000000610000007300000073000000
*650000007200000074000000730000002000000074000000680000006100000074000000200000
*00610000006e0000007900000020010401000000000000000116000000000000002b0000000000
*00003a01020e000000200000006100000070000000700000006c00000069000000650000006400
*000020000000740000006f0000002000000061000000200104010000000000000000e300000000
*0000002b000000000000002c01020900000020000000660000006f000000720000006d00000073
*000000200000006100000020010401000000000000000065000000000000000000000000000000
*11010202000000200000000a021b000000200000002000000020000000750000006e0000006400
*00006500000072000000200000007400000068000000650000007300000065000000200000006f
*0000007000000065000000720000006100000074000000690000006f0000006e00000073000000
*2e0000000a00000000000000b203010203000000410000006e0000002001040200000000000000
*00b3000000000000000000000000000000210000000000000000b2000000000000000000000000
*00000021010215000000200000007500000073000000650000007300000020000000670000006c
*00000075000000650000007300000020000000740000006f000000670000006500000074000000
*68000000650000007200000020010401000000000000000115000000000000002b000000000000
*003a01021300000020000000610000006300000074000000690000006f0000006e000000730000
*00200000007700000069000000740000006800000020000000280000003e0000003e0000002900
*00000a010214000000200000002000000020000000690000006e00000020000000740000006800
*000065000000200000006d000000610000006e0000006e0000006500000072000000200000006f
*0000006600000020010401000000000000000117000000000000002b000000000000003a010206
*0000002000000066000000720000006f0000006d0000002001050d000000440000006100000074
*000000610000002e000000460000006f0000006c0000006400000061000000620000006c000000
*6501021a0000002e00000020000000410000006e00000079000000200000007600000061000000
*6c0000007500000065000000730000002000000072000000650000007400000075000000720000
*006e0000006500000064000000200000006200000079000000200000000a022200000020000000
*200000002000000072000000650000006400000075000000630000006500000064000000200000
*00610000006300000074000000690000006f0000006e0000007300000020000000610000007200
*000065000000200000006400000069000000730000006300000061000000720000006400000065
*000000640000002e0000000a00000000000000b503010232000000450000006600000066000000
*690000006300000069000000650000006e000000740000006c0000007900000020000000610000
*00760000006f0000006900000064000000200000006e0000006500000065000000640000006c00
*00006500000073000000730000006c000000790000002000000072000000650000006200000069
*0000006e00000064000000690000006e0000006700000020000000770000006800000065000000
*6e000000200000007500000073000000690000006e000000670000002001040100000000000000
*000500000000000000000000000000000001010226000000200000006f0000006e000000200000
*00610000006e00000020000000610000006300000074000000690000006f0000006e0000002000
*00007400000068000000610000007400000020000000610000006c000000720000006500000061
*00000064000000790000002000000072000000650000007400000075000000720000006e000000
*730000002000000028000000290000000a023b0000002000000020000000200000004100000020
*000000720000006500000077000000720000006900000074000000650000002000000072000000
*750000006c00000065000000200000006100000075000000740000006f0000006d000000610000
*00740000006900000063000000610000006c0000006c0000007900000020000000610000007000
*0000700000006c0000006900000065000000730000002000000074000000680000006900000073
*000000200000007700000068000000650000006e00000020000000700000006f00000073000000
*7300000069000000620000006c000000650000000a3e00000000000000e600000000000000e700
*000000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb
*00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000
*f000000000000000f100000000000000f200000000000000f300000000000000f4000000000000
*00f500000000000000f600000000000000f700000000000000f800000000000000f90000000000
*0000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00000000
*000000ff0000000000000100000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070000
*0000000000080000000000000009000000000000000a0000000000000058000000000000005900
*0000000000005b000000000000005c000000000000005d000000000000005e000000000000005f
*000000000000006000000000000000610000000000000062000000000000006300000000000000
*65000000000000006600000000000000ac00000000000000ad00000000000000ae000000000000
*00af00000000000000b000000000000000b100000000000000b200000000000000b30000000000
*0000b400000000000000b50a00000000000000b200000000000000b300000000000000b4000000
*00000000b500000000000000af00000000000000b000000000000000b100000000000000ac0000
*0000000000ad00000000000000ae000000000000000000000000000000220001230000006e0000
*006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c00
*000065000000200000002800000074000000790000007000000065000000200000006600000061
*0000006d000000690000006c0000006900000065000000730000002c000000200000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c0110000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d1800000000000000b6010301020c000000450000006600
*000066000000690000006300000069000000650000006e000000740000006c0000007900000020
*01040100000000000000002a000000000000000000000000000000060102030000002000000061
*000000200104010000000000000000280000000000000000000000000000000601020b00000020
*0000007500000073000000690000006e0000006700000020000000740000006800000065000000
*200104020000000000000000a9000000000000000000000000000000200000000000000000a800
*000000000000000000000000000020010234000000200000006d0000006f0000006e0000006f00
*000069000000640000002e00000020000000410000002000000073000000700000006500000063
*00000069000000610000006c000000690000007a00000065000000640000002000000076000000
*650000007200000073000000690000006f0000006e000000200000006f00000066000000200000
*00690000007400000073000000200000006e000000610000006d00000065000000730000006100
*00006b000000650000002000000066000000720000006f0000006d0000002001050d0000004400
*00006100000074000000610000002e000000460000006f0000006c000000640000006100000062
*0000006c0000006502010000000a0b0102010000000a0102050000002000000020000000200000
*00200000002001040100000000000000002a000000000000000000000000000000060102010000
*00200104010000000000000000aa000000000000000000000000000000200102010000000a0200
*00000000000000b70103010221000000430000006f0000006e00000076000000650000006e0000
*0069000000650000006e00000063000000650000002000000066000000750000006e0000006300
*000074000000690000006f0000006e00000020000000610000007300000020000000660000006f
*000000750000006e0000006400000020000000690000006e0000002001050d0000004400000061
*00000074000000610000002e000000460000006f0000006c000000640000006100000062000000
*6c0000006502010000000a0b0102010000000a0102050000002000000020000000200000002000
*000020010401000000000000000118000000000000002b00000000000000370102010000002001
*04010000000000000000b6000000000000000000000000000000220102010000000a0200000000
*00000000b801030102310000005400000068000000650000002000000073000000750000006d00
*0000200000006f00000066000000200000006100000020000000630000006f0000006c0000006c
*000000650000006300000074000000690000006f0000006e000000200000006f00000066000000
*20000000610000006300000074000000690000006f0000006e000000730000002c000000200000
*0067000000650000006e0000006500000072000000610000006c000000690000007a0000006900
*00006e0000006700000020010401000000000000000119000000000000002b000000000000003b
*02010000000a0b0102010000000a01020400000020000000200000002000000020010401000000
*00000000002f000000000000000000000000000000060102010000002001040100000000000000
*00a7000000000000000000000000000000200102010000000a020000000000000000b901030102
*0c000000450000006600000066000000690000006300000069000000650000006e000000740000
*006c000000790000002001040100000000000000002a0000000000000000000000000000000601
*020300000020000000610000002001040100000000000000002800000000000000000000000000
*00000601020b000000200000007500000073000000690000006e00000067000000200000007400
*00006800000065000000200104020000000000000000b300000000000000000000000000000021
*0000000000000000b200000000000000000000000000000021010234000000200000006d000000
*6f0000006e0000006f00000069000000640000002e000000200000004100000020000000730000
*0070000000650000006300000069000000610000006c000000690000007a000000650000006400
*00002000000076000000650000007200000073000000690000006f0000006e000000200000006f
*0000006600000020000000690000007400000073000000200000006e000000610000006d000000
*6500000073000000610000006b000000650000002000000066000000720000006f0000006d0000
*002001050d000000440000006100000074000000610000002e000000460000006f0000006c0000
*006400000061000000620000006c0000006501020500000020000000610000006e000000640000
*002001050d000000430000006f0000006e00000074000000720000006f0000006c0000002e0000
*004d0000006f0000006e000000610000006402010000000a0b0102010000000a01020400000020
*00000020000000200000002001040100000000000000002e000000000000000000000000000000
*06010201000000200104010000000000000000b400000000000000000000000000000021010201
*0000000a020000000000000000ba0103010221000000430000006f0000006e0000007600000065
*0000006e00000069000000650000006e0000006300000065000000200000006600000075000000
*6e0000006300000074000000690000006f0000006e000000200000006100000073000000200000
*00660000006f000000750000006e0000006400000020000000690000006e0000002001050d0000
*00440000006100000074000000610000002e000000460000006f0000006c000000640000006100
*0000620000006c0000006501020500000020000000610000006e000000640000002001050d0000
*00430000006f0000006e00000074000000720000006f0000006c0000002e0000004d0000006f00
*00006e000000610000006402010000000a0b0102010000000a0102050000002000000020000000
*200000002000000020010401000000000000000118000000000000002b00000000000000370102
*01000000200104010000000000000000b900000000000000000000000000000022010201000000
*0a020000000000000000bb01030102310000005400000068000000650000002000000073000000
*750000006d000000200000006f00000066000000200000006100000020000000630000006f0000
*006c0000006c000000650000006300000074000000690000006f0000006e000000200000006f00
*00006600000020000000610000006300000074000000690000006f0000006e000000730000002c
*0000002000000067000000650000006e0000006500000072000000610000006c00000069000000
*7a000000690000006e0000006700000020010401000000000000000119000000000000002b0000
*00000000003b02010000000a0b0102010000000a01020500000020000000200000002000000020
*0000002001040100000000000000002f0000000000000000000000000000000601020100000020
*0104010000000000000000b1000000000000000000000000000000210102010000000a02000000
*0000000000bc010301020c00000045000000660000006600000069000000630000006900000065
*0000006e000000740000006c000000790000002001040100000000000000002a00000000000000
*000000000000000006010203000000200000006100000020010401000000000000000028000000
*0000000000000000000000000601020b000000200000007500000073000000690000006e000000
*670000002000000074000000680000006500000020010402000000000000000047000000000000
*000000000000000000090000000000000000460000000000000000000000000000000901023400
*0000200000006d0000006f0000006e0000006f00000069000000640000002e0000002000000041
*000000200000007300000070000000650000006300000069000000610000006c00000069000000
*7a00000065000000640000002000000076000000650000007200000073000000690000006f0000
*006e000000200000006f0000006600000020000000690000007400000073000000200000006e00
*0000610000006d0000006500000073000000610000006b00000065000000200000006600000072
*0000006f0000006d0000002001050d000000440000006100000074000000610000002e00000046
*0000006f0000006c0000006400000061000000620000006c0000006502010000000a0b01020100
*00000a010205000000200000002000000020000000200000002001040100000000000000002e00
*000000000000000000000000000006010201000000200104010000000000000000480000000000
*00000000000000000000090102010000000a020000000000000000bd0301021700000054000000
*790000007000000065000000200000007300000070000000650000006300000069000000610000
*006c000000690000007a0000006100000074000000690000006f0000006e000000200000006f00
*00006600000020010507000000660000006f0000006c000000640000004d000000610000007002
*070000002000000061000000620000006f00000076000000650000000a00000000000000be0103
*01020c000000450000006600000066000000690000006300000069000000650000006e00000074
*0000006c000000790000002001040100000000000000002d000000000000000000000000000000
*060102030000002000000061000000200104010000000000000000280000000000000000000000
*000000000601020b000000200000007500000073000000690000006e0000006700000020000000
*740000006800000065000000200104020000000000000000470000000000000000000000000000
*000900000000000000004600000000000000000000000000000009010234000000200000006d00
*00006f0000006e0000006f00000069000000640000002e00000020000000410000002000000073
*00000070000000650000006300000069000000610000006c000000690000007a00000065000000
*640000002000000076000000650000007200000073000000690000006f0000006e000000200000
*006f0000006600000020000000690000007400000073000000200000006e000000610000006d00
*00006500000073000000610000006b000000650000002000000066000000720000006f0000006d
*0000002001050d000000440000006100000074000000610000002e000000460000006f0000006c
*0000006400000061000000620000006c0000006502010000000a0b0102010000000a0102050000
*00200000002000000020000000200000002001040100000000000000002f000000000000000000
*000000000000060102010000002001040100000000000000004800000000000000000000000000
*0000090102010000000a020000000000000000bf0301020c000000430000006f0000006e000000
*7600000065000000720000007400000020000000610000006e0000007900000020010401000000
*0000000000280000000000000000000000000000000601022e00000020000000740000006f0000
*002000000061000000200000006c000000690000007300000074000000200000006f0000006600
*00002000000069000000740000007300000020000000630000006f0000006e0000007400000065
*0000006e00000074000000730000002e0000002000000053000000700000006500000063000000
*69000000610000006c000000690000007a0000006100000074000000690000006f0000006e0000
*00200000006f000000660000002001040100000000000000002d00000000000000000000000000
*00000602010000000a00000000000000c0010301020c0000004500000066000000660000006900
*00006300000069000000650000006e000000740000006c00000079000000200104010000000000
*0000002d0000000000000000000000000000000601020300000020000000610000002001040100
*00000000000000280000000000000000000000000000000601021e000000200000007400000068
*000000610000007400000020000000630000006f0000006e000000740000006100000069000000
*6e000000730000002000000076000000610000006c000000750000006500000073000000200000
*006f00000066000000200000007400000079000000700000006500000020010401000000000000
*00011a0000000000000030000000000000003c02010000000a0b0102010000000a010205000000
*200000002000000020000000200000002001040100000000000000002f00000000000000000000
*000000000006010201000000200104010000000000000000ef000000000000002b000000000000
*002c0102010000000a020000000000000000c1010301020c000000450000006600000066000000
*690000006300000069000000650000006e000000740000006c0000007900000020010401000000
*00000000002d000000000000000000000000000000060102030000002000000061000000200104
*010000000000000000280000000000000000000000000000000601021e00000020000000740000
*0068000000610000007400000020000000630000006f0000006e00000074000000610000006900
*00006e000000730000002000000076000000610000006c00000075000000650000007300000020
*0000006f0000006600000020000000740000007900000070000000650000002001040100000000
*000000011a0000000000000030000000000000003c02010000000a0b0102010000000a01020500
*0000200000002000000020000000200000002001040100000000000000002f0000000000000000
*0000000000000006010201000000200104010000000000000000f2000000000000002b00000000
*0000002c0102010000000a020000000000000000c2010301020c00000045000000660000006600
*0000690000006300000069000000650000006e000000740000006c000000790000002001040100
*000000000000002a0000000000000000000000000000000601020500000020000000610000006e
*000000790000002001040100000000000000002800000000000000000000000000000006024300
*000020000000630000006800000065000000630000006b000000690000006e0000006700000020
*000000740000006f00000020000000730000006500000065000000200000006900000066000000
*20000000610000006e00000079000000200000006f000000660000002000000069000000740000
*00730000002000000076000000610000006c000000750000006500000073000000200000006d00
*000061000000740000006300000068000000200000007400000068000000650000002000000073
*0000007500000070000000700000006c0000006900000065000000640000002000000070000000
*72000000650000006400000069000000630000006100000074000000650000000a0b0102010000
*000a010205000000200000002000000020000000200000002001040100000000000000002e0000
*0000000000000000000000000006010201000000200104010000000000000000f2000000000000
*002b000000000000002c0102010000000a020000000000000000c3010301020c00000045000000
*6600000066000000690000006300000069000000650000006e000000740000006c000000790000
*002001040100000000000000002a00000000000000000000000000000006010205000000200000
*00610000006e000000790000002001040100000000000000002800000000000000000000000000
*000006024300000020000000630000006800000065000000630000006b000000690000006e0000
*006700000020000000740000006f00000020000000730000006500000065000000200000006900
*00006600000020000000610000006c0000006c000000200000006f000000660000002000000069
*00000074000000730000002000000076000000610000006c000000750000006500000073000000
*200000006d00000061000000740000006300000068000000200000007400000068000000650000
*0020000000730000007500000070000000700000006c0000006900000065000000640000002000
*00007000000072000000650000006400000069000000630000006100000074000000650000000a
*0b0102010000000a01020500000020000000200000002000000020000000200104010000000000
*0000002e00000000000000000000000000000006010201000000200104010000000000000000ef
*000000000000002b000000000000002c0102010000000a020000000000000000c4010301022800
*0000450000006600000066000000690000006300000069000000650000006e000000740000006c
*000000790000002000000073000000750000006d000000200000006f0000007600000065000000
*7200000020000000740000006800000065000000200000006d000000650000006d000000620000
*00650000007200000073000000200000006f0000006600000020000000610000006e0000007900
*0000200104010000000000000000280000000000000000000000000000000602010000000a0b01
*02010000000a010205000000200000002000000020000000200000002001040100000000000000
*002f00000000000000000000000000000006010201000000200104010000000000000000f50000
*00000000002b000000000000002c0102010000000a020000000000000000c50103010232000000
*450000006600000066000000690000006300000069000000650000006e000000740000006c0000
*00790000002000000074000000610000006b000000650000002000000074000000680000006500
*00002000000070000000720000006f00000064000000750000006300000074000000200000006f
*00000066000000200000006500000076000000650000007200000079000000200000006d000000
*650000006d000000620000006500000072000000200000006f0000006600000020000000610000
*00200104010000000000000000280000000000000000000000000000000602010000000a0b0102
*010000000a01020500000020000000200000002000000020000000200104010000000000000000
*2f00000000000000000000000000000006010201000000200104010000000000000000f8000000
*000000002b000000000000002c0102010000000a020000000000000000c6030102100000004300
*00006800000065000000630000006b00000020000000740000006f000000200000007300000065
*00000065000000200000006900000066000000200104010000000000000000c200000000000000
*00000000000000002201020f000000200000006d000000650000006d0000006200000065000000
*72000000200000006f000000660000002000000074000000680000006500000020010401000000
*00000000002800000000000000000000000000000006021c000000200000006d00000061000000
*740000006300000068000000650000007300000020000000740000006800000065000000200000
*00730000007500000070000000700000006c000000690000006500000064000000200000007600
*0000610000006c00000075000000650000000a00000000000000c7030102420000004300000068
*00000065000000630000006b00000020000000740000006f000000200000006d00000061000000
*6b0000006500000020000000730000007500000072000000650000002000000074000000680000
*006100000074000000200000007400000068000000650000002000000073000000750000007000
*0000700000006c0000006900000065000000640000002000000076000000610000006c00000075
*00000065000000200000006900000073000000200000006e0000006f0000007400000020000000
*61000000200000006d000000650000006d000000620000006500000072000000200000006f0000
*006600000020000000740000006800000065000000200104010000000000000000280000000000
*000000000000000000000602010000000a00000000000000c80301020c00000045000000660000
*0066000000690000006300000069000000650000006e000000740000006c000000790000002001
*040100000000000000002a0000000000000000000000000000000601021f000000200000006100
*000020000000730000007500000062000000730000006500000074000000200000006f00000066
*0000002000000074000000680000006500000020000000650000006c000000650000006d000000
*650000006e000000740000007300000020000000690000006e0000002000000061000000200104
*010000000000000000280000000000000000000000000000000602010000000a00000000000000
*c903026a000000410000006c0000006c0000006f00000077000000730000002000000069000000
*64000000690000006f0000006d0000006100000074000000690000006300000020000000730000
*0070000000650000006300000069000000610000006c000000690000007a000000610000007400
*0000690000006f0000006e000000200000006f000000660000002000000066000000690000006c
*000000740000006500000072000000200000006200000079000000200000007000000072000000
*6f00000076000000690000006e0000006700000020000000610000002000000066000000750000
*006e0000006300000074000000690000006f0000006e0000002000000074000000680000006100
*0000740000002000000077000000690000006c0000006c00000020000000620000006500000020
*0000007500000073000000650000006400000020000000740000006f0000002000000074000000
*72000000610000006e00000073000000660000006f000000720000006d00000020000000740000
*006800000065000000200000006f00000075000000740000007000000075000000740000000a00
*000000000000ca0103010214000000410000002000000073000000700000006500000063000000
*69000000610000006c000000690000007a0000006100000074000000690000006f0000006e0000
*00200000006f00000066000000200104010000000000000000c800000000000000000000000000
*00002201020b000000200000007500000073000000690000006e00000067000000200000007400
*00006800000065000000200104020000000000000000fc000000000000002b000000000000002c
*0000000000000000fd000000000000002b000000000000002c0102010000002001040100000000
*00000000e3000000000000002b000000000000002c01020f0000002c0000002000000061000000
*6e000000610000006c0000006f000000670000006f000000750000007300000020000000740000
*006f0000002001020e000000440000006100000074000000610000002e0000004c000000690000
*0073000000740000002e00000066000000690000006e0000006402010000000a0b010201000000
*0a01020500000020000000200000002000000020000000200104010000000000000000c9000000
*00000000000000000000000022010201000000200104010000000000000000fb00000000000000
*2b000000000000002c0102010000000a020000000000000000cb03010214000000410000002000
*000067000000650000006e0000006500000072000000610000006c000000690000007a00000061
*00000074000000690000006f0000006e000000200000006f000000660000002001021300000044
*0000006100000074000000610000002e0000004c0000006900000073000000740000002e000000
*7200000065000000700000006c0000006900000063000000610000007400000065010211000000
*20000000740000006f00000020000000610000006e000000200000006100000072000000620000
*00690000007400000072000000610000007200000079000000200104010000000000000000e300
*0000000000002b000000000000002c0102100000002e0000002000000041000000640000006100
*0000700000007400000065000000640000002000000066000000720000006f0000006d00000020
*0000000a01020100000020010c4a000000680000007400000074000000700000003a0000002f00
*00002f00000061000000750000006700000075000000730000007400000073000000730000002e
*000000620000006c0000006f0000006700000073000000700000006f000000740000002e000000
*630000006f0000006d0000002f000000320000003000000030000000380000002f000000300000
*00370000002f0000006c0000006f00000073000000740000002d000000610000006e0000006400
*00002d000000660000006f000000750000006e000000640000002d00000069000000660000002d
*000000690000002d00000077000000720000006900000074000000650000002d00000031000000
*30000000380000002d000000690000006e0000002e00000068000000740000006d0000006c0201
*0000000a00000000000000cc03010214000000410000002000000067000000650000006e000000
*6500000072000000610000006c000000690000007a0000006100000074000000690000006f0000
*006e000000200000006f000000660000002001020f000000440000006100000074000000610000
*002e0000004c0000006900000073000000740000002e0000006300000079000000630000006c00
*00006501021100000020000000740000006f00000020000000610000006e000000200000006100
*000072000000620000006900000074000000720000006100000072000000790000002001040100
*00000000000000e3000000000000002b000000000000002c02390000002e000000200000004d00
*00006100000079000000200000006600000061000000690000006c00000020000000740000006f
*000000200000007400000065000000720000006d000000690000006e0000006100000074000000
*6500000020000000660000006f0000007200000020000000730000006f0000006d000000650000
*002000000076000000610000006c00000075000000650000007300000020000000690000006e00
*000020000000730000006f0000006d00000065000000200000006d0000006f0000006e0000006f
*0000006900000064000000730000002e0000000a00000000000000cd0301021400000041000000
*2000000067000000650000006e0000006500000072000000610000006c000000690000007a0000
*006100000074000000690000006f0000006e000000200000006f00000066000000200102100000
*00440000006100000074000000610000002e0000004c0000006900000073000000740000002e00
*000072000000650000007000000065000000610000007401021100000020000000740000006f00
*000020000000610000006e00000020000000610000007200000062000000690000007400000072
*000000610000007200000079000000200104010000000000000000e3000000000000002b000000
*000000002c02390000002e000000200000004d0000006100000079000000200000006600000061
*000000690000006c00000020000000740000006f00000020000000740000006500000072000000
*6d000000690000006e00000061000000740000006500000020000000660000006f000000720000
*0020000000730000006f0000006d000000650000002000000076000000610000006c0000007500
*0000650000007300000020000000690000006e00000020000000730000006f0000006d00000065
*000000200000006d0000006f0000006e0000006f0000006900000064000000730000002e000000
*0a5100000000000000e600000000000000e700000000000000e800000000000000e30000000000
*0000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed00000000
*000000ee00000000000000ef00000000000000f000000000000000f100000000000000f2000000
*00000000f300000000000000f400000000000000f500000000000000f600000000000000f70000
*0000000000f800000000000000f900000000000000fa00000000000000fb00000000000000fc00
*000000000000fd00000000000000fe00000000000000ff00000000000001000000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*050000000000000006000000000000000700000000000000080000000000000009000000000000
*000a000000000000001f0000000000000020000000000000002100000000000000220000000000
*000023000000000000002400000000000000250000000000000026000000000000002700000000
*000000280000000000000029000000000000002a000000000000002b000000000000002c000000
*000000002d000000000000002e000000000000002f00000000000000b600000000000000b70000
*0000000000b800000000000000b900000000000000ba00000000000000bb00000000000000bc00
*000000000000bd00000000000000be00000000000000bf00000000000000c000000000000000c1
*00000000000000c200000000000000c300000000000000c400000000000000c500000000000000
*c600000000000000c700000000000000c800000000000000c900000000000000ca000000000000
*00cb00000000000000cc00000000000000cd00000000000000ce1900000000000000b900000000
*000000ba00000000000000bb00000000000000b600000000000000b700000000000000b8000000
*00000000c000000000000000c100000000000000c200000000000000c300000000000000bc0000
*0000000000be00000000000000bf00000000000000bd00000000000000c600000000000000c800
*000000000000c900000000000000ca00000000000000c400000000000000c500000000000000c7
*00000000000000cd00000000000000cb00000000000000cc00000000000000ce00000000000000
*0000000000000000230001140000006e0000006f0000006e0000002d000000700000006f000000
*720000007400000061000000620000006c0000006500000020000000280000004d000000500000
*0054000000430000007300000029010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d003a00000000000000e600000000000000e700000000000000e8
*00000000000000e300000000000000e900000000000000ea00000000000000eb00000000000000
*ec00000000000000ed00000000000000ee00000000000000ef00000000000000f0000000000000
*00f100000000000000f200000000000000f300000000000000f400000000000000f50000000000
*0000f600000000000000f700000000000000f800000000000000f900000000000000fa00000000
*000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff000000
*000000010000000000000000000000000000000001000000000000000200000000000000030000
*000000000004000000000000000500000000000000060000000000000007000000000000000800
*00000000000009000000000000000a000000000000001f00000000000000200000000000000021
*000000000000002200000000000000230000000000000024000000000000002500000000000000
*26000000000000002700000000000000280000000000000029000000000000002a000000000000
*002b000000000000002c000000000000002d000000000000002e000000000000002f0000000000
*0000cf00000000000000d00200000000000000cf00000000000000d00000000000000000000000
*0000000024000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c0110000000650000006b0000006d00000065000000740000007400
*000040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d
*0400000000000000d1030102020000004100000020010401000000000000000028000000000000
*0000000000000000000601021a0000002000000077000000680000006900000063000000680000
*0020000000730000007500000070000000700000006f0000007200000074000000730000002000
*0000650000006600000066000000690000006300000069000000650000006e0000007400000020
*01040100000000000000002a00000000000000000000000000000006022a000000200000006f00
*00007000000065000000720000006100000074000000690000006f0000006e0000007300000020
*0000006f0000007600000065000000720000002000000072000000750000006e0000002d000000
*6c000000650000006e00000067000000740000006800000020000000650000006e000000630000
*006f00000064000000650000006400000020000000640000006100000074000000610000002e00
*00000a00000000000000d4030223000000410000002000000073000000690000006e0000006700
*00006c000000650000002000000072000000750000006e00000020000000770000006900000074
*000000680000002000000061000000200000007300000074000000720000006900000063000000
*74000000200000006c000000650000006e0000006700000074000000680000002e0000000a0000
*0000000000d703021c0000006e00000061000000690000007600000065000000200000006c0000
*0065000000660000007400000020000000740000006f0000002000000072000000690000006700
*0000680000007400000020000000650000006e000000630000006f000000640000006500000072
*0000000a00000000000000d803022a000000510000007500000069000000630000006b00000043
*0000006800000065000000630000006b0000002000000070000000720000006f00000070000000
*650000007200000074000000790000003a000000200000006400000065000000630000006f0000
*006400000065000000200000002e00000020000000650000006e000000630000006f0000006400
*000065000000200000003d0000002000000069000000640000000a4200000000000000e6000000
*00000000e700000000000000e800000000000000e300000000000000e900000000000000ea0000
*0000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef00
*000000000000f000000000000000f100000000000000f200000000000000f300000000000000f4
*00000000000000f500000000000000f600000000000000f700000000000000f800000000000000
*f900000000000000fa00000000000000fb00000000000000fc00000000000000fd000000000000
*00fe00000000000000ff0000000000000100000000000000000000000000000000010000000000
*000002000000000000000300000000000000040000000000000005000000000000000600000000
*0000000700000000000000080000000000000009000000000000000a000000000000001f000000
*000000002000000000000000210000000000000022000000000000002300000000000000240000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002a000000000000002b000000000000002c000000000000002d000000000000002e
*000000000000002f00000000000000d100000000000000d200000000000000d300000000000000
*d400000000000000d500000000000000d600000000000000d700000000000000d8000000000000
*00d900000000000000da0a00000000000000d100000000000000d200000000000000d300000000
*000000d400000000000000d500000000000000d600000000000000d900000000000000d7000000
*00000000da00000000000000d8000000000000000000000000000000250001230000006e000000
*6f0000006e0000002d000000700000006f000000720000007400000061000000620000006c0000
*006500000020000000280000007400000079000000700000006500000020000000660000006100
*00006d000000690000006c0000006900000065000000730000002c000000200000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c0110000000650000006b0000
*006d00000065000000740000007400000040000000670000006d00000061000000690000006c00
*00002e000000630000006f0000006d002c00000000000000e600000000000000e7000000000000
*00e800000000000000e300000000000000e900000000000000ea00000000000000eb0000000000
*0000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f000000000
*000000f100000000000000f200000000000000f300000000000000f400000000000000f5000000
*00000000f600000000000000f700000000000000f800000000000000f900000000000000fa0000
*0000000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff00
*0000000000010000000000000000580000000000000059000000000000005b000000000000005c
*000000000000005d000000000000005e000000000000005f000000000000006000000000000000
*610000000000000062000000000000006300000000000000650000000000000066000000000000
*006700000000000000db00000000000000dc0200000000000000db00000000000000dc00000000
*000000000000000000000026000000000100000000000000dd010b022a00000072000000200000
*002a0000002e000000200000002800000078000000200000002a00000020000000790000002900
*0000200000003d000000200000002800000072000000200000002a0000002e0000002000000078
*00000029000000200000002a0000002000000079000000200000003d0000002000000078000000
*200000002a000000200000002800000072000000200000002a0000002e00000020000000790000
*00290b022a0000002800000078000000200000002a000000200000007900000029000000200000
*002e0000002a0000002000000072000000200000003d0000002000000079000000200000002a00
*0000200000002800000078000000200000002e0000002a00000020000000720000002900000020
*0000003d000000200000002800000079000000200000002e0000002a0000002000000072000000
*29000000200000002a00000020000000783500000000000000e600000000000000e70000000000
*0000e800000000000000e300000000000000e900000000000000ea00000000000000eb00000000
*000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f0000000
*00000000f100000000000000f200000000000000f300000000000000f400000000000000f50000
*0000000000f600000000000000f700000000000000f800000000000000f900000000000000fa00
*000000000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff
*000000000000010000000000000000580000000000000059000000000000005b00000000000000
*5c000000000000005d000000000000005e000000000000005f0000000000000060000000000000
*006100000000000000620000000000000063000000000000006500000000000000660000000000
*000067000000000000008100000000000000820000000000000083000000000000008400000000
*00000091000000000000009d000000000000009e000000000000009f00000000000000a0000000
*00000000a100000000000000dd0100000000000000dd0000000000000000000000000000002700
*011e000000700000006f000000720000007400000061000000620000006c000000650000002000
*000028000000690000006e0000007300000074000000610000006e000000630000006500000073
*00000020000000750000007300000065000000200000004d000000500000005400000043000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d003700000000000000e600000000000000e700000000000000e800000000000000e300
*000000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed
*00000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000
*f200000000000000f300000000000000f400000000000000f500000000000000f6000000000000
*00f700000000000000f800000000000000f900000000000000fa00000000000000fb0000000000
*0000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000000000
*000000580000000000000059000000000000005b000000000000005c000000000000005d000000
*000000005e000000000000005f0000000000000060000000000000006100000000000000620000
*000000000063000000000000006500000000000000660000000000000067000000000000008100
*00000000000082000000000000008300000000000000840000000000000091000000000000009d
*000000000000009e000000000000009f00000000000000a000000000000000a100000000000000
*de00000000000000df00000000000000e00300000000000000de00000000000000e00000000000
*0000df00000000000000000000000000000028000108000000700000006f000000720000007400
*000061000000620000006c00000065010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d003400000000000000e600000000000000e700000000000000
*e800000000000000e300000000000000e900000000000000ea00000000000000eb000000000000
*00ec00000000000000ed00000000000000ee00000000000000ef00000000000000f00000000000
*0000f100000000000000f200000000000000f300000000000000f400000000000000f500000000
*000000f600000000000000f700000000000000f800000000000000f900000000000000fa000000
*00000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000
*00000000010000000000000000580000000000000059000000000000005b000000000000005c00
*0000000000005d000000000000005e000000000000005f00000000000000600000000000000061
*000000000000006200000000000000630000000000000065000000000000006600000000000000
*670000000000000081000000000000008200000000000000830000000000000084000000000000
*008700000000000000880000000000000089000000000000008a00000000000000910000000000
*0000e10100000000000000e10000000000000000000000000000002900000000003a0000000000
*0000e600000000000000e700000000000000e800000000000000e300000000000000e900000000
*000000ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee000000
*00000000ef00000000000000f000000000000000f100000000000000f200000000000000f30000
*0000000000f400000000000000f500000000000000f600000000000000f700000000000000f800
*000000000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd
*00000000000000fe00000000000000ff0000000000000100000000000000005800000000000000
*59000000000000005b000000000000005c000000000000005d000000000000005e000000000000
*005f00000000000000600000000000000061000000000000006200000000000000630000000000
*000065000000000000006600000000000000670000000000000081000000000000008200000000
*000000830000000000000084000000000000008700000000000000880000000000000089000000
*000000008a0000000000000091000000000000009d000000000000009e000000000000009f0000
*0000000000a000000000000000a100000000000000e100000000000000e20100000000000000e2
*000000000000011b0000000000000000000000000000000103000000000000003d000000000000
*0000000000000000000101000000000000003e0000000000000000000000000000000100000000
*000000003f00000000000000000000000000000001030000000000000040000000000000000000
*000000000000010000000000000000410000000000000000000000000000000100000000000000
*004200000000000000000000000000000001000000000000000043000000000000000000000000
*000000010000000000000000440000000000000000000000000000000100000000000000004500
*000000000000000000000000000001000000000000000046000000000000000000000000000000
*010000000000000000470000000000000000000000000000000203000000000000004800000000
*000000000000000000000002000000000000000049000000000000000000000000000000020000
*0000000000004a0000000000000000000000000000000303000000000000004b00000000000000
*00000000000000000300000000000000004c000000000000000000000000000000040300000000
*0000004d0000000000000000000000000000000401000000000000004d00000000000000000000
*00000000000400000000000000004e000000000000000000000000000000050300000000000000
*4f0000000000000000000000000000000501000000000000004f00000000000000000000000000
*000005000000000000000050000000000000000000000000000000050300000000000000510000
*000000000000000000000000000500000000000000005200000000000000000000000000000005
*000000000000000053000000000000000000000000000000050300000000000000540000000000
*000000000000000000000501000000000000005400000000000000000000000000000005000000
*000000000055000000000000000000000000000000050300000000000000560000000000000000
*000000000000000500000000000000005700000000000000000000000000000005000000000000
*000058000000000000000000000000000000060300000000000000590000000000000000000000
*00000000060100000000000000590000000000000000000000000000000600000000000000005a
*0000000000000000000000000000000603000000000000005b0000000000000000000000000000
*000601000000000000005b0000000000000000000000000000000600000000000000005c000000
*0000000000000000000000000603000000000000005d0000000000000000000000000000000601
*000000000000005d0000000000000000000000000000000600000000000000005e000000000000
*0000000000000000000603000000000000005f0000000000000000000000000000000603000000
*000000006000000000000000000000000000000006000000000000000061000000000000000000
*000000000000060000000000000000620000000000000000000000000000000600000000000000
*006300000000000000000000000000000006000000000000000064000000000000000000000000
*000000060000000000000000650000000000000000000000000000000600000000000000006600
*000000000000000000000000000007030000000000000067000000000000000000000000000000
*070100000000000000680000000000000000000000000000000701000000000000006900000000
*00000000000000000000000701000000000000006a000000000000000000000000000000070100
*0000000000006b0000000000000000000000000000000703000000000000006c00000000000000
*00000000000000000703000000000000006d000000000000000000000000000000070000000000
*0000006e0000000000000000000000000000000700000000000000006f00000000000000000000
*000000000007000000000000000070000000000000000000000000000000070000000000000000
*710000000000000000000000000000000700000000000000007200000000000000000000000000
*000008030000000000000073000000000000000000000000000000080000000000000000740000
*000000000000000000000000000803000000000000007500000000000000000000000000000008
*0000000000000000760000000000000000000000000000000803000000000000006a0000000000
*000000000000000000000803000000000000007700000000000000000000000000000008000000
*000000000078000000000000000000000000000000080000000000000000790000000000000000
*000000000000000800000000000000007a00000000000000000000000000000008000000000000
*00007b0000000000000000000000000000000903000000000000007c0000000000000000000000
*000000000901000000000000007c0000000000000000000000000000000900000000000000007d
*0000000000000000000000000000000a03000000000000007e0000000000000000000000000000
*000a00000000000000007f0000000000000000000000000000000a000000000000000080000000
*0000000000000000000000000a0000000000000000810000000000000000000000000000000a00
*00000000000000820000000000000000000000000000000a000000000000000083000000000000
*0000000000000000000b0300000000000000840000000000000000000000000000000b01000000
*00000000840000000000000000000000000000000b000000000000000085000000000000000000
*0000000000000c0300000000000000860000000000000000000000000000000c03000000000000
*00870000000000000000000000000000000c010000000000000087000000000000000000000000
*0000000c0000000000000000880000000000000000000000000000000c00000000000000008900
*00000000000000000000000000000c00000000000000008a000000000000000000000000000000
*0d00000000000000008b0000000000000000000000000000000d00000000000000008c00000000
*00000000000000000000000e00000000000000008d0000000000000000000000000000000f0300
*0000000000008e0000000000000000000000000000000f01000000000000008e00000000000000
*00000000000000000f00000000000000008f0000000000000000000000000000000f0300000000
*000000900000000000000000000000000000000f01000000000000009000000000000000000000
*00000000000f0000000000000000910000000000000000000000000000000f0300000000000000
*920000000000000000000000000000000f00000000000000009300000000000000000000000000
*00000f000000000000000094000000000000000000000000000000100000000000000000950000
*000000000000000000000000001103000000000000009600000000000000000000000000000011
*030000000000000097000000000000000000000000000000120300000000000000980000000000
*000000000000000000001303000000000000009900000000000000000000000000000013010000
*0000000000990000000000000000000000000000001300000000000000009a0000000000000000
*000000000000001303000000000000009b00000000000000000000000000000013010000000000
*00009b0000000000000000000000000000001300000000000000009c0000000000000000000000
*000000001303000000000000009d0000000000000000000000000000001301000000000000009d
*0000000000000000000000000000001300000000000000009e0000000000000000000000000000
*001303000000000000009f0000000000000000000000000000001301000000000000009f000000
*000000000000000000000000130000000000000000a00000000000000000000000000000001300
*00000000000000a1000000000000000000000000000000130000000000000000a2000000000000
*000000000000000000140300000000000000a30000000000000000000000000000001401000000
*00000000a4000000000000000000000000000000140100000000000000a3000000000000000000
*000000000000140100000000000000a50000000000000000000000000000001403000000000000
*00a6000000000000000000000000000000140100000000000000a6000000000000000000000000
*000000140000000000000000a7000000000000000000000000000000150300000000000000a800
*0000000000000000000000000000150100000000000000a8000000000000000000000000000000
*150000000000000000a9000000000000000000000000000000150000000000000000a200000000
*0000000000000000000000160300000000000000aa000000000000000000000000000000160000
*000000000000ab000000000000000000000000000000160000000000000000ac00000000000000
*0000000000000000160000000000000000ad000000000000000000000000000000170000000000
*000000ae000000000000000000000000000000170000000000000000af00000000000000000000
*0000000000180300000000000000b0000000000000000000000000000000180000000000000000
*b1000000000000000000000000000000180000000000000000b200000000000000000000000000
*0000180000000000000000b3000000000000000000000000000000190000000000000000b40000
*00000000000000000000000000190000000000000000b500000000000000000000000000000019
*0000000000000000b60000000000000000000000000000001a0000000000000000b70000000000
*000000000000000000001a0000000000000000b80000000000000000000000000000001a000000
*0000000000b90000000000000000000000000000001b0300000000000000ba0000000000000000
*000000000000001c0300000000000000bb0000000000000000000000000000001c010000000000
*0000bb0000000000000000000000000000001c0000000000000000bc0000000000000000000000
*000000001d0300000000000000bd0000000000000000000000000000001d0100000000000000bd
*0000000000000000000000000000001d0000000000000000be0000000000000000000000000000
*001e0300000000000000bf0000000000000000000000000000001e0000000000000000c0000000
*0000000000000000000000001e0300000000000000c10000000000000000000000000000001e00
*00000000000000c20000000000000000000000000000001e0000000000000000c3000000000000
*0000000000000000001f0300000000000000c40000000000000000000000000000001f03000000
*00000000c50000000000000000000000000000001f0000000000000000c6000000000000000000
*0000000000001f0300000000000000c70000000000000000000000000000001f00000000000000
*00c8000000000000000000000000000000200300000000000000c9000000000000000000000000
*000000200100000000000000c9000000000000000000000000000000200000000000000000ca00
*0000000000000000000000000000200300000000000000cb000000000000000000000000000000
*200100000000000000cb000000000000000000000000000000200000000000000000cc00000000
*0000000000000000000000200300000000000000cd000000000000000000000000000000200100
*000000000000cd000000000000000000000000000000200000000000000000ce00000000000000
*0000000000000000200000000000000000cf000000000000000000000000000000210300000000
*000000d0000000000000000000000000000000210100000000000000d000000000000000000000
*0000000000210000000000000000d1000000000000000000000000000000210300000000000000
*d2000000000000000000000000000000210100000000000000d200000000000000000000000000
*0000210000000000000000d3000000000000000000000000000000210300000000000000d40000
*00000000000000000000000000210100000000000000d400000000000000000000000000000021
*0000000000000000d5000000000000000000000000000000210000000000000000d60000000000
*00000000000000000000220000000000000000d700000000000000000000000000000022000000
*0000000000d8000000000000000000000000000000220000000000000000d90000000000000000
*00000000000000220000000000000000da00000000000000000000000000000022000000000000
*0000db000000000000000000000000000000220000000000000000dc0000000000000000000000
*00000000220000000000000000dd000000000000000000000000000000220000000000000000de
*000000000000000000000000000000220000000000000000df0000000000000000000000000000
*00220000000000000000e0000000000000000000000000000000220000000000000000e1000000
*000000000000000000000000220000000000000000e20000000000000000000000000000002200
*00000000000000e3000000000000000000000000000000220000000000000000e4000000000000
*000000000000000000220000000000000000e50000000000000000000000000000002200000000
*00000000e6000000000000000000000000000000220000000000000000e7000000000000000000
*000000000000220000000000000000e80000000000000000000000000000002200000000000000
*00e9000000000000000000000000000000220000000000000000ea000000000000000000000000
*000000220000000000000000eb000000000000000000000000000000220000000000000000ae00
*0000000000000000000000000000220000000000000000ec000000000000000000000000000000
*220000000000000000ed000000000000000000000000000000220000000000000000af00000000
*0000000000000000000000230300000000000000ee000000000000000000000000000000230100
*000000000000ef000000000000000000000000000000240300000000000000f000000000000000
*0000000000000000240100000000000000f0000000000000000000000000000000240000000000
*000000f1000000000000000000000000000000240300000000000000f200000000000000000000
*0000000000240100000000000000f2000000000000000000000000000000240000000000000000
*7f000000000000000000000000000000240000000000000000f300000000000000000000000000
*0000240000000000000000f4000000000000000000000000000000240000000000000000800000
*000000000000000000000000002400000000000000008200000000000000000000000000000025
*0300000000000000f5000000000000000000000000000000250000000000000000f60000000000
*00000000000000000000260300000000000000f700000000000000000000000000000027030000
*0000000000f8000000000000000000000000000000270000000000000000f90000000000000000
*00000000000000270000000000000000fa00000000000000000000000000000028030000000000
*0000fb000000000000000000000000000000290300000000000000fc000000000000002b000000
*000000002c0300000000000000fd000000000000002b000000000000002d0300000000000000fe
*000000000000002b000000000000002e0300000000000000ff000000000000002b000000000000
*002c000000000000000100000000000000002b000000000000002c000000000000000101000000
*000000002b000000000000002c000000000000000102000000000000002b000000000000002c00
*0000000000000103000000000000002b000000000000002c010000000000000104000000000000
*002b000000000000002c030000000000000104000000000000002b000000000000002c00000000
*0000000105000000000000002b000000000000002c010000000000000106000000000000002b00
*0000000000002c030000000000000106000000000000002b000000000000002c00000000000000
*0107000000000000002b000000000000002c010000000000000108000000000000002b00000000
*0000002c030000000000000108000000000000002b000000000000002c00000000000000010900
*0000000000002b000000000000002c01000000000000010a000000000000002b00000000000000
*2c03000000000000010a000000000000002b000000000000002c00000000000000010b00000000
*0000002b000000000000002c01000000000000010c000000000000002b000000000000002c0300
*0000000000010c000000000000002b000000000000002c00000000000000010d00000000000000
*2b000000000000002c01000000000000010e000000000000002b000000000000002c0300000000
*0000010e000000000000002b000000000000002c00000000000000010f000000000000002b0000
*00000000002c010000000000000110000000000000002b000000000000002c0300000000000001
*10000000000000002b000000000000002c000000000000000111000000000000002b0000000000
*00002c010000000000000112000000000000002b000000000000002c0300000000000001120000
*000000000113000000000000011403000000000000011500000000000001130000000000000114
*000000000000000116000000000000002b00000000000001170300000000000001180000000000
*0000300000000000000031030000000000000119000000000000002b0000000000000032000000
*00000000011a0000000000000000000000000000000a03000000000000011b0000000000000033
*000000000000003403000000000000011c000000000000002b0000000000000035030000000000
*00011d000000000000002b000000000000003500000000000000011e000000000000002b000000
*000000003500000000000000011f000000000000002b0000000000000035000000000000000120
*000000000000002b0000000000000035000000000000000121000000000000002b000000000000
*0122000000000000000123000000000000002b000000000000002d010000000000000124000000
*000000002b0000000000000122000000000000000125000000000000002b000000000000012600
*0000000000000127000000000000002b0000000000000126000000000000000128000000000000
*002b000000000000012900000000000000008d000000000000002b000000000000003903000000
*000000012a000000000000002b000000000000003903000000000000012b000000000000002b00
*0000000000012c03000000000000012d000000000000002b000000000000003a03000000000000
*012e000000000000002b000000000000003a0000000000000000da000000000000002b00000000
*0000012c00000000000000012f000000000000002b000000000000013000000000000000013100
*00000000000030000000000000003c030000000000000132000000000000013300000000000000
*0e6d6f6e6f6964732d302e312e32340000000000000013446174612e4d6f6e6f69642e52656475
*6365720000000000000018446174612e4d6f6e6f69642e526564756365722e4368617200000000
*00000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f646572000000
*0000000018446174612e4d6f6e6f69642e526564756365722e5769746800000000000000114461
*74612e4d6f6e6f69642e556e696f6e0000000000000015446174612e4d6f6e6f69642e47656e65
*7261746f720000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365
*506f736974696f6e0000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f72
*64730000000000000010446174612e4d6f6e6f69642e53656c66000000000000001a446174612e
*4d6f6e6f69642e47656e657261746f722e4c5a37380000000000000016446174612e4d6f6e6f69
*642e46726f6d537472696e670000000000000017446174612e4d6f6e6f69642e43617465676f72
*6963616c0000000000000014446174612e4d6f6e6f69642e416464697469766500000000000000
*1a446174612e4d6f6e6f69642e41646469746976652e5375676172000000000000001a44617461
*2e4d6f6e6f69642e4d756c7469706c696361746976650000000000000020446174612e4d6f6e6f
*69642e4d756c7469706c696361746976652e53756761720000000000000013446174612e52696e
*672e53656d692e4e656172000000000000000e446174612e52696e672e53656d69000000000000
*000f446174612e4d6f6e6f69642e4f72640000000000000012446174612e52696e672e53656d69
*2e4f72640000000000000017446174612e52696e672e53656d692e54726f706963616c00000000
*0000000a446174612e47726f75700000000000000016446174612e47726f75702e436f6d62696e
*61746f72730000000000000019446174612e47726f75702e4d756c7469706c6963617469766500
*00000000000010446174612e47726f75702e5375676172000000000000001f446174612e47726f
*75702e4d756c7469706c696361746976652e53756761720000000000000009446174612e52696e
*670000000000000011446174612e52696e672e426f6f6c65616e0000000000000011446174612e
*52696e672e46726f6d4e756d000000000000001b446174612e52696e672e4d6f64756c61724172
*6974686d657469630000000000000010446174612e52696e672e4d6f64756c6500000000000000
*17446174612e4d6f6e6f69642e4170706c696361746976650000000000000011446174612e4d6f
*6e6f69642e4d6f6e61640000000000000017446174612e4d6f6e6f69642e436f6d62696e61746f
*7273000000000000001a446174612e4d6f6e6f69642e47656e657261746f722e46726565000000
*0000000019446174612e4d6f6e6f69642e47656e657261746f722e524c45000000000000001644
*6174612e52696e672e53656d692e4e61747572616c0000000000000011446174612e52696e672e
*416c67656272610000000000000029446174612e52696e672e4d6f64756c652e4175746f6d6174
*6963446966666572656e74696174696f6e000000000000000a446174612e4669656c6400000000
*00000016446174612e4669656c642e566563746f7253706163650000000000000015446174612e
*4d6f6e6f69642e496e7374616e636573000000000000000462617365000000000000000b446174
*612e4d6f6e6f6964000000000000000a446174612e4d61796265000000000000000d446174612e
*466f6c6461626c650000000000000009446174612e576f726400000000000000086768632d7072
*696d00000000000000094748432e5479706573000000000000000b4748432e556e69636f646500
*00000000000012636f6e7461696e6572732d302e322e302e300000000000000008446174612e4d
*61700000000000000010436f6e74726f6c2e43617465676f72790000000000000008446174612e
*4f726400000000000000075072656c756465000000000000000f446174612e52696e672e537567
*61720000000000000013436f6e74726f6c2e4170706c69636174697665000000000000000d436f
*6e74726f6c2e4d6f6e61640000000000000009446174612e4c6973740000000000000008474843
*2e426f6f6c00000000000000095265647563656442790000000000000009526564756374696f6e
*000000000000000c676574526564756374696f6e00000000000000075265647563657200000000
*00000004756e69740000000000000004736e6f630000000000000004636f6e7300000000000000
*0d666f6c644d6170526564756365000000000000000a666f6c6452656475636500000000000000
*0a72657475726e556e6974000000000000000870757265556e6974000000000000000b43686172
*52656475636572000000000000000866726f6d43686172000000000000000b696e76616c696443
*686172000000000000000455544638000000000000000772756e55544638000000000000000b57
*69746852656475636572000000000000000e776974686f75745265647563657200000000000000
*09556e696f6e57697468000000000000000c676574556e696f6e57697468000000000000000c48
*6173556e696f6e576974680000000000000009756e696f6e576974680000000000000009656d70
*7479576974680000000000000005556e696f6e0000000000000008676574556e696f6e00000000
*00000008486173556e696f6e0000000000000005656d7074790000000000000005756e696f6e00
*00000000000005436861723800000000000000086765744368617238000000000000000656616c
*756573000000000000000967657456616c75657300000000000000044b65797300000000000000
*076765744b657973000000000000000947656e657261746f720000000000000004456c656d0000
*0000000000096d617052656475636500000000000000056d6170546f00000000000000076d6170
*46726f6d0000000000000006726564756365000000000000000d6d617052656475636557697468
*000000000000000a72656475636557697468000000000000000e536f75726365506f736974696f
*6e00000000000000035461620000000000000007436f6c756d6e7300000000000000054c696e65
*730000000000000003506f73000000000000000c536f75726365436f6c756d6e00000000000000
*0a536f757263654c696e6500000000000000076e657874546162000000000000000b7374617274
*4f6646696c65000000000000000c736f75726365436f6c756d6e000000000000000a736f757263
*654c696e65000000000000001273686f77536f75726365506f736974696f6e0000000000000007
*556e6c696e6564000000000000000a72756e556e6c696e65640000000000000008556e73706163
*6564000000000000000b72756e556e7370616365640000000000000005576f7264730000000000
*00000872756e576f726473000000000000000872756e4c696e65730000000000000009776f7264
*7346726f6d00000000000000096c696e657346726f6d000000000000000453656c660000000000
*00000767657453656c6600000000000000044c5a373800000000000000066465636f6465000000
*0000000006656e636f64650000000000000008656e636f64654571000000000000001270726f70
*5f6465636f64655f656e636f6465000000000000001470726f705f6465636f64655f656e636f64
*654571000000000000000a46726f6d537472696e67000000000000000d67657446726f6d537472
*696e670000000000000007434d6f6e6f6964000000000000000547456e646f0000000000000008
*67657447456e646f000000000000001063617465676f7279546f4d6f6e6f696400000000000000
*106d6f6e6f6964546f43617465676f72790000000000000004706c757300000000000000047a65
*726f00000000000000012b00000000000000034578700000000000000006676574457870000000
*00000000034c6f6700000000000000066765744c6f67000000000000000e4d756c7469706c6963
*617469766500000000000000036f6e65000000000000000574696d657300000000000000012a00
*00000000000011526967687453656d694e65617252696e6700000000000000104c65667453656d
*694e65617252696e67000000000000000853656d6952696e67000000000000000b4d696e507269
*6f72697479000000000000000e6765744d696e5072696f72697479000000000000000b4d617850
*72696f72697479000000000000000e6765744d61785072696f7269747900000000000000034d69
*6e00000000000000066765744d696e00000000000000034d617800000000000000066765744d61
*7800000000000000096d696e66696e6974790000000000000008696e66696e6974790000000000
*0000085072696f7269747900000000000000084d6178426f756e6400000000000000084d696e42
*6f756e6400000000000000054f7264657200000000000000086765744f72646572000000000000
*000854726f706963616c000000000000000b67657454726f706963616c00000000000000054772
*6f75700000000000000007676e656761746500000000000000056d696e75730000000000000009
*67737562747261637400000000000000097265706c6963617465000000000000002170726f705f
*7265706c69636174655f72696768745f64697374726962757469766500000000000000134d756c
*7469706c6963617469766547726f757000000000000000046f7665720000000000000005756e64
*6572000000000000000667726563697000000000000000012d00000000000000066e6567617465
*0000000000000008737562747261637400000000000000012f00000000000000025c5c00000000
*000000057265636970000000000000000452696e670000000000000008426f6f6c52696e670000
*00000000000b676574426f6f6c52696e67000000000000000746726f6d4e756d00000000000000
*0a67657446726f6d4e756d00000000000000074d6f64756c617200000000000000076d6f64756c
*757300000000000000034d6f6400000000000000066765744d6f64000000000000001377697468
*496e74656772616c4d6f64756c757300000000000000064d6f64756c65000000000000000b5269
*6768744d6f64756c6500000000000000022e2a000000000000000a4c6566744d6f64756c650000
*0000000000022a2e00000000000000034170700000000000000006676574417070000000000000
*0003416c740000000000000006676574416c74000000000000000954726176657273616c000000
*000000000c67657454726176657273616c000000000000000d736e6f6354726176657273616c00
*000000000000034d6f6e00000000000000066765744d6f6e00000000000000084d6f6e61645375
*6d000000000000000b6765744d6f6e616453756d0000000000000006416374696f6e0000000000
*000009676574416374696f6e000000000000000a736e6f63416374696f6e000000000000000974
*726176657273655f0000000000000004666f725f00000000000000046173756d00000000000000
*056d61704d5f0000000000000005666f724d5f00000000000000046d73756d0000000000000007
*666f6c644d61700000000000000009636f6e6361744d61700000000000000004666f6c64000000
*0000000006746f4c6973740000000000000003616e6400000000000000026f7200000000000000
*03616e790000000000000003616c6c000000000000000373756d000000000000000770726f6475
*63740000000000000004656c656d00000000000000076e6f74456c656d00000000000000066669
*6c746572000000000000000a66696c74657257697468000000000000000466696e640000000000
*0000056379636c6500000000000000067265706561740000000000000004467265650000000000
*00000c416e7947656e657261746f720000000000000003524c450000000000000006676574524c
*45000000000000000352756e000000000000000a656e636f64654c697374000000000000001670
*726f705f6465636f64655f656e636f64654c69737400000000000000074e61747572616c000000
*00000000076e61747572616c0000000000000007416c6765627261000000000000000144000000
*00000000046c69667400000000000000016400000000000000054669656c64000000000000000b
*566563746f72537061636500000000000000064d6f6e6f696400000000000000054d6179626500
*00000000000008466f6c6461626c6500000000000000076d617070656e6400000000000000076d
*636f6e63617400000000000000066d656d70747900000000000000076765744475616c00000000
*000000044475616c0000000000000007617070456e646f0000000000000004456e646f00000000
*00000006676574416c6c0000000000000003416c6c0000000000000006676574416e7900000000
*00000003416e79000000000000000667657453756d000000000000000353756d00000000000000
*0a67657450726f64756374000000000000000750726f6475637400000000000000086765744669
*7273740000000000000005466972737400000000000000076765744c6173740000000000000004
*4c617374000000000000000e66696e676572747265652d302e30000000000000000f446174612e
*46696e67657254726565000000000000000a46696e6765725472656500000000000000076d6561
*7375726500000000000000084748432e576f72640000000000000005576f726438000000000000
*0004436861720000000000000007697353706163650000000000000005546f6b656e0000000000
*0000034d6170000000000000000843617465676f727900000000000000033e3e3e000000000000
*00033c3c3c00000000000000012e00000000000000026964000000000000000b4748432e436c61
*7373657300000000000000036d696e00000000000000074e6f7468696e6700000000000000036d
*617800000000000000084748432e456e756d00000000000000086d6178426f756e640000000000
*0000086d696e426f756e6400000000000000074748432e4e756d000000000000000b4170706c69
*636174697665000000000000000b416c7465726e617469766500000000000000084748432e4261
*736500000000000000054d6f6e616400000000000000094d6f6e6164506c757300000000000000
*04666c697000000000000000084748432e4c6973740000000000000006636f6e63617400000000
*00000004426f6f6c
newhex
*0d0cface000400000000000130d8000000000001152de300000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000200
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000005000000000000001d0000000000000000000000000000
*0005000000000000001e00000000000000000000000000000005000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000600
*000000000000260000000000000000000000000000000600000000000000270000000000000000
*000000000000000600000000000000280000000000000000000000000000000600000000000000
*2900000000000000000000000000000006000000000000002a0000000000000000000000000000
*0006000000000000002b00000000000000000000000000000006000000000000002c0000000000
*0000000000000000000006000000000000002d0000000000000000000000000000000600000000
*0000002e00000000000000000000000000000006000000000000002f0000000000000000000000
*000000000600000000000000300000000000000000000000000000000700000000000000310000
*000000000000000000000000000700000000000000320000000000000000000000000000000700
*000000000000330000000000000000000000000000000700000000000000340000000000000000
*000000000000000700000000000000350000000000000000000000000000000700000000000000
*360000000000000000000000000000000700000000000000370000000000000000000000000000
*000700000000000000380000000000000000000000000000000700000000000000390000000000
*0000000000000000000007000000000000003a0000000000000000000000000000000700000000
*0000003b00000000000000000000000000000007000000000000003c0000000000000000000000
*0000000008000000000000003d00000000000000000000000000000008000000000000003e0000
*0000000000000000000000000008000000000000003f0000000000000000000000000000000800
*000000000000400000000000000000000000000000000800000000000000410000000000000000
*000000000000000800000000000000420000000000000000000000000000000800000000000000
*430000000000000000000000000000000800000000000000440000000000000000000000000000
*000800000000000000450000000000000000000000000000000800000000000000460000000000
*000000000000000000000900000000000000470000000000000000000000000000000900000000
*000000480000000000000000000000000000000900000000000000490000000000000000000000
*000000000a000000000000004a0000000000000000000000000000000a000000000000004b0000
*000000000000000000000000000a000000000000004c0000000000000000000000000000000a00
*0000000000004d0000000000000000000000000000000a000000000000004e0000000000000000
*000000000000000a000000000000004f0000000000000000000000000000000b00000000000000
*500000000000000000000000000000000b00000000000000510000000000000000000000000000
*000b00000000000000520000000000000000000000000000000c00000000000000530000000000
*000000000000000000000c00000000000000540000000000000000000000000000000c00000000
*000000550000000000000000000000000000000c00000000000000560000000000000000000000
*000000000d00000000000000570000000000000000000000000000000d00000000000000580000
*000000000000000000000000000d00000000000000590000000000000000000000000000000d00
*0000000000005a0000000000000000000000000000000d000000000000005b0000000000000000
*000000000000000d000000000000005c0000000000000000000000000000000d00000000000000
*5d0000000000000000000000000000000d000000000000005e0000000000000000000000000000
*000d000000000000005f0000000000000000000000000000000d00000000000000600000000000
*000000000000000000000e00000000000000610000000000000000000000000000000e00000000
*000000620000000000000000000000000000000e00000000000000630000000000000000000000
*000000000e00000000000000640000000000000000000000000000000e00000000000000650000
*000000000000000000000000000e00000000000000660000000000000000000000000000000f00
*000000000000670000000000000000000000000000000f00000000000000680000000000000000
*000000000000001000000000000000690000000000000000000000000000001100000000000000
*6a00000000000000000000000000000011000000000000006b0000000000000000000000000000
*0011000000000000006c00000000000000000000000000000011000000000000006d0000000000
*0000000000000000000011000000000000006e0000000000000000000000000000001100000000
*0000006f0000000000000000000000000000001100000000000000700000000000000000000000
*000000001100000000000000710000000000000000000000000000001100000000000000720000
*000000000000000000000000001200000000000000730000000000000000000000000000001300
*000000000000740000000000000000000000000000001300000000000000750000000000000000
*000000000000001400000000000000760000000000000000000000000000001500000000000000
*770000000000000000000000000000001500000000000000780000000000000000000000000000
*0015000000000000007900000000000000000000000000000015000000000000007a0000000000
*0000000000000000000015000000000000007b0000000000000000000000000000001500000000
*0000007c00000000000000000000000000000015000000000000007d0000000000000000000000
*0000000015000000000000007e00000000000000000000000000000015000000000000007f0000
*000000000000000000000000001500000000000000800000000000000000000000000000001500
*000000000000810000000000000000000000000000001500000000000000820000000000000000
*000000000000001500000000000000830000000000000000000000000000001500000000000000
*840000000000000000000000000000001600000000000000850000000000000000000000000000
*001600000000000000860000000000000000000000000000001600000000000000870000000000
*000000000000000000001600000000000000880000000000000000000000000000001600000000
*0000008900000000000000000000000000000016000000000000008a0000000000000000000000
*0000000016000000000000008b00000000000000000000000000000017000000000000008c0000
*0000000000000000000000000017000000000000008d0000000000000000000000000000001700
*0000000000008e00000000000000000000000000000017000000000000008f0000000000000000
*000000000000001800000000000000900000000000000000000000000000001800000000000000
*910000000000000000000000000000001800000000000000920000000000000000000000000000
*001800000000000000930000000000000000000000000000001900000000000000940000000000
*000000000000000000001900000000000000950000000000000000000000000000001a00000000
*000000960000000000000000000000000000001a00000000000000970000000000000000000000
*000000001a00000000000000980000000000000000000000000000001a00000000000000990000
*000000000000000000000000001b000000000000009a0000000000000000000000000000001b00
*0000000000009b0000000000000000000000000000001b000000000000009c0000000000000000
*000000000000001c000000000000009d0000000000000000000000000000001c00000000000000
*9e0000000000000000000000000000001c000000000000009f0000000000000000000000000000
*001d00000000000000a00000000000000000000000000000001e00000000000000a10000000000
*000000000000000000001e00000000000000a20000000000000000000000000000001e00000000
*000000a30000000000000000000000000000001f00000000000000a40000000000000000000000
*000000001f00000000000000a50000000000000000000000000000001f00000000000000a60000
*000000000000000000000000002000000000000000a70000000000000000000000000000002000
*000000000000a80000000000000000000000000000002000000000000000a90000000000000000
*000000000000002000000000000000aa0000000000000000000000000000002000000000000000
*ab0000000000000000000000000000002100000000000000ac0000000000000000000000000000
*002100000000000000ad0000000000000000000000000000002100000000000000ae0000000000
*000000000000000000002100000000000000af0000000000000000000000000000002100000000
*000000b00000000000000000000000000000002200000000000000b10000000000000000000000
*000000002200000000000000b20000000000000000000000000000002200000000000000b30000
*000000000000000000000000002200000000000000b40000000000000000000000000000002200
*000000000000b50000000000000000000000000000002200000000000000b60000000000000000
*000000000000002200000000000000b70000000000000000000000000000002200000000000000
*b80000000000000000000000000000002200000000000000b90000000000000000000000000000
*002200000000000000ba0000000000000000000000000000002300000000000000bb0000000000
*000000000000000000002300000000000000bc0000000000000000000000000000002300000000
*000000bd0000000000000000000000000000002300000000000000be0000000000000000000000
*000000002300000000000000bf0000000000000000000000000000002300000000000000c00000
*000000000000000000000000002300000000000000c10000000000000000000000000000002300
*000000000000c20000000000000000000000000000002300000000000000c30000000000000000
*000000000000002300000000000000c40000000000000000000000000000002400000000000000
*c50000000000000000000000000000002400000000000000c60000000000000000000000000000
*002400000000000000c70000000000000000000000000000002400000000000000c80000000000
*000000000000000000002400000000000000c90000000000000000000000000000002400000000
*000000ca0000000000000000000000000000002400000000000000cb0000000000000000000000
*000000002400000000000000cc0000000000000000000000000000002400000000000000cd0000
*000000000000000000000000002400000000000000ce0000000000000000000000000000002400
*000000000000cf0000000000000000000000000000002400000000000000d00000000000000000
*000000000000002400000000000000d10000000000000000000000000000002400000000000000
*d20000000000000000000000000000002400000000000000d30000000000000000000000000000
*002400000000000000d40000000000000000000000000000002400000000000000d50000000000
*000000000000000000002400000000000000d60000000000000000000000000000002400000000
*000000d70000000000000000000000000000002400000000000000d80000000000000000000000
*000000002400000000000000d90000000000000000000000000000002500000000000000da0000
*000000000000000000000000002500000000000000db0000000000000000000000000000002600
*000000000000dc0000000000000000000000000000002600000000000000dd0000000000000000
*000000000000002700000000000000de0000000000000000000000000000002800000000000000
*df0000000000000000000000000000002800000000000000e00000000000000000000000000000
*002800000000000000e10000000000000000000000000000002900000000000000e20000000000
*000000000000000000002a2c0000000000000000000000000000002b000108000000700000006f
*000000720000007400000061000000620000006c00000065010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d00000000000000000000000000000000
*0000010001140000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c0000006500000020000000280000004d000000500000005400000043
*0000007300000029010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d0600000000000000030103010224000000540000006800000069000000730000
*002000000074000000790000007000000065000000200000006d00000061000000790000002000
*000062000000650000002000000062000000650000007300000074000000200000007200000065
*000000610000006400000020000000690000006e0000006600000069000000780000002e000000
*200000004100000020010701020200000063000000200104010000000000000000030000000000
*00000000000000000000010202000000200000006d010206000000200000006900000073000000
*2000000061000000200104010000000000000000e3000000000000002c000000000000002d0102
*0100000020010702010000006d01020b0000002000000074000000680000006100000074000000
*200000006d0000006100000070000000730000000a010210000000200000007600000061000000
*6c000000750000006500000073000000200000006f000000660000002000000074000000790000
*007000000065000000200107020100000063010209000000200000007400000068000000720000
*006f0000007500000067000000680000002001070204000000750000006e000000690000007401
*021300000020000000740000006f0000002000000076000000610000006c000000750000006500
*000073000000200000006f00000066000000200000007400000079000000700000006500000020
*010702010000006d0102040000002e000000200000004100000020010702010000006301020100
*00002d0104010000000000000000030000000000000000000000000000000101020a0000002000
*00006d000000610000007900000020000000610000006c000000730000006f0000000a01022900
*000020000000730000007500000070000000700000006c00000079000000200000006f00000070
*00000065000000720000006100000074000000690000006f0000006e0000007300000020000000
*7700000068000000690000006300000068000000200000007400000061000000630000006b0000
*002d0000006f0000006e00000020000000610000006e0000006f00000074000000680000006500
*00007200000020010702010000006301021000000020000000740000006f000000200000006100
*00006e000000200000006500000078000000690000007300000074000000690000006e00000067
*000000200104010000000000000000e3000000000000002c000000000000002d01020100000020
*010702010000006d01020d000000200000006f0000006e00000020000000740000006800000065
*000000200000006c0000006500000066000000740000000a010250000000200000006f00000072
*0000002000000072000000690000006700000068000000740000002e0000002000000054000000
*680000006500000073000000650000002000000073000000700000006500000063000000690000
*00610000006c000000690000007a00000065000000640000002000000072000000650000006400
*0000750000006300000074000000690000006f0000006e00000073000000200000006d00000061
*00000079000000200000006200000065000000200000006d0000006f0000007200000065000000
*20000000650000006600000066000000690000006300000069000000650000006e000000740000
*0020000000690000006e00000020000000730000006f0000006d00000065000000200000007300
*000063000000650000006e0000006100000072000000690000006f000000730000000a01022400
*000020000000610000006e00000064000000200000006100000072000000650000002000000075
*000000730000006500000064000000200000007700000068000000650000006e00000020000000
*610000007000000070000000720000006f00000070000000720000006900000061000000740000
*006500000020000000620000007900000020000000610000002001020900000047000000650000
*006e000000650000007200000061000000740000006f0000007201020c0000002e000000200000
*00540000006800000065000000200000006e000000610000006d00000065000000730000002001
*040100000000000000000600000000000000000000000000000001010205000000200000006100
*00006e000000640000002001040100000000000000000500000000000000000000000000000001
*01020600000020000000770000006f000000720000006b0000000a023d00000020000000620000
*007900000020000000610000006e000000610000006c0000006f00000067000000790000002000
*0000740000006f000000200000007400000068000000650000002000000073000000790000006e
*0000006f0000006e000000790000006d0000006f0000007500000073000000200000006f000000
*7000000065000000720000006100000074000000690000006f0000006e00000073000000200000
*00690000006e00000020000000740000006800000065000000200000006c000000690000007300
*000074000000200000006d0000006f0000006e0000006f00000069000000640000002e0000000a
*010301024c0000005400000068000000690000007300000020000000630000006c000000610000
*0073000000730000002000000064000000650000006c0000006900000062000000650000007200
*00006100000074000000650000006c000000790000002000000061000000760000006f00000069
*00000064000000730000002000000066000000750000006e000000630000007400000069000000
*6f0000006e000000610000006c0000002d000000640000006500000070000000650000006e0000
*0064000000650000006e000000630000006900000065000000730000002c000000200000007300
*00006f000000200000007400000068000000610000007400000020000000280000002900000020
*00000063000000610000006e000000200000006200000065000000200000006100000020010702
*01000000630102090000002d000000520000006500000064000000750000006300000065000000
*720000000a01020900000020000000660000006f0000007200000020000000610000006c000000
*6c00000020010702010000006301024a0000002c00000020000000610000006e00000064000000
*20000000730000006f000000200000006d000000610000006e0000007900000020000000630000
*006f0000006d0000006d0000006f0000006e000000200000007200000065000000640000007500
*0000630000006500000072000000730000002000000063000000610000006e0000002000000077
*0000006f000000720000006b000000200000006f00000076000000650000007200000020000000
*6d000000750000006c0000007400000069000000700000006c0000006500000020000000740000
*00790000007000000065000000730000002c00000020000000660000006f000000720000002000
*0000690000006e0000007300000074000000610000006e00000063000000650000002c0000000a
*01022000000020000000460000006900000072000000730000007400000020000000610000006e
*00000064000000200000004c000000610000007300000074000000200000006d00000061000000
*790000002000000072000000650000006400000075000000630000006500000020000000620000
*006f000000740000006800000020010702010000006101020500000020000000610000006e0000
*0064000000200104010000000000000000e4000000000000002c000000000000002e0102010000
*0020010702010000006101020a0000002e0000002000000053000000690000006e000000630000
*006500000020000000610000002001020900000047000000650000006e00000065000000720000
*0061000000740000006f0000007201021500000020000000680000006100000073000000200000
*006100000020000000660000006900000078000000650000006400000020000000650000006c00
*0000650000006d000000650000006e000000740000000a01025a00000020000000740000007900
*000070000000650000002c0000002000000074000000680000006500000020000000690000006e
*00000070000000750000007400000020000000740000006f000000200000007400000068000000
*650000002000000072000000650000006400000075000000630000006500000072000000200000
*0069000000730000002000000067000000650000006e0000006500000072000000610000006c00
*00006c00000079000000200000006b0000006e0000006f000000770000006e0000002000000061
*0000006e0000006400000020000000650000007800000074000000720000006100000063000000
*74000000690000006e000000670000002000000066000000720000006f0000006d000000200000
*00740000006800000065000000200000006d0000006f0000006e0000006f000000690000006400
*000020000000750000007300000075000000610000006c0000006c000000790000000a01025a00
*000020000000690000007300000020000000730000007500000066000000660000006900000063
*00000069000000650000006e0000007400000020000000740000006f0000002000000066000000
*690000007800000020000000740000006800000065000000200000007200000065000000730000
*00750000006c0000007400000020000000740000007900000070000000650000002e0000002000
*0000430000006f0000006d00000062000000690000006e00000061000000740000006f00000072
*000000730000002000000061000000720000006500000020000000610000007600000061000000
*690000006c00000061000000620000006c0000006500000020000000660000006f000000720000
*00200000006d0000006f0000007300000074000000200000007300000063000000650000006e00
*00006100000072000000690000006f000000730000002000000077000000680000006500000072
*000000650000000a01025800000020000000740000006800000069000000730000002000000069
*00000073000000200000006e0000006f0000007400000020000000740000006800000065000000
*20000000630000006100000073000000650000002c00000020000000610000006e000000640000
*002000000074000000680000006500000020000000660000006500000077000000200000007200
*0000650000006d00000061000000690000006e000000690000006e000000670000002000000063
*000000610000007300000065000000730000002000000063000000610000006e00000020000000
*62000000650000002000000068000000610000006e000000640000006c00000065000000640000
*00200000006200000079000000200000007500000073000000690000006e000000670000002000
*0000610000006e000000200000006500000078000000700000006c000000690000006300000069
*00000074000000200000000a021200000020000000740000007900000070000000650000002000
*0000610000006e0000006e0000006f000000740000006100000074000000690000006f0000006e
*0000002e0000000a030102140000004d000000690000006e000000690000006d00000061000000
*6c00000020000000640000006500000066000000690000006e0000006900000074000000690000
*006f0000006e0000003a0000002001040100000000000000000400000000000000000000000000
*000001010204000000200000006f00000072000000200104010000000000000000050000000000
*000000000000000000000102010000000a000000000000000403010217000000430000006f0000
*006e00000076000000650000007200000074000000200000006100000020000000760000006100
*00006c000000750000006500000020000000690000006e000000740000006f0000002000000061
*000000200104010000000000000000e3000000000000002c000000000000002d02010000000a00
*0000000000000503010214000000410000007000000070000000650000006e0000006400000020
*000000610000002000000076000000610000006c00000075000000650000002000000074000000
*6f0000002000000061000000200104010000000000000000e3000000000000002c000000000000
*002d022400000020000000660000006f0000007200000020000000750000007300000065000000
*20000000690000006e000000200000006c0000006500000066000000740000002d000000740000
*006f0000002d000000720000006900000067000000680000007400000020000000720000006500
*000064000000750000006300000074000000690000006f0000006e0000000a0000000000000006
*0301021700000050000000720000006500000070000000650000006e0000006400000020000000
*610000002000000076000000610000006c0000007500000065000000200000006f0000006e0000
*00740000006f0000002000000061000000200104010000000000000000e3000000000000002c00
*0000000000002d022800000020000000660000006f000000720000002000000075000000730000
*006500000020000000640000007500000072000000690000006e00000067000000200000007200
*0000690000006700000068000000740000002d000000740000006f0000002d0000006c00000065
*000000660000007400000020000000720000006500000064000000750000006300000074000000
*690000006f0000006e0000000a0000000000000007030102080000004100000070000000700000
*006c00000079000000200000006100000020010401000000000000000003000000000000000000
*0000000000000101020600000020000000740000006f0000002000000061000000200104010000
*000000000000e5000000000000002c000000000000002f024b00000020000000630000006f0000
*006e0000007400000061000000690000006e00000065000000720000002c000000200000006100
*000066000000740000006500000072000000200000006d00000061000000700000007000000069
*0000006e000000670000002000000074000000680000006500000020000000630000006f000000
*6e00000074000000650000006e000000740000007300000020000000690000006e000000740000
*006f00000020000000610000002000000073000000750000006900000074000000610000006200
*00006c0000006500000020000000660000006f000000720000006d00000020000000660000006f
*000000720000002000000072000000650000006400000075000000630000007400000069000000
*6f0000006e0000002e0000000a0000000000000008030102080000004100000070000000700000
*006c00000079000000200000006100000020010401000000000000000003000000000000000000
*0000000000000101020600000020000000740000006f0000002000000061000000200104010000
*000000000000e5000000000000002c000000000000002f01021e000000200000006d0000006100
*00007000000070000000690000006e000000670000002000000065000000610000006300000068
*00000020000000650000006c000000650000006d000000650000006e0000007400000020000000
*7400000068000000720000006f0000007500000067000000680000002001040100000000000000
*00040000000000000000000000000000000102010000000a2700000000000000e6000000000000
*00e700000000000000e800000000000000e300000000000000e900000000000000ea0000000000
*0000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000
*000000f000000000000000f100000000000000f200000000000000f300000000000000f4000000
*00000000f500000000000000f600000000000000f700000000000000f800000000000000f90000
*0000000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00
*000000000000ff0000000000000100000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*0700000000000000080000000000000009000000000000000a0b00000000000000030000000000
*000004000000000000000500000000000000060000000000000007000000000000000800000000
*0000000a0000000000000009000000000000000000000000000000010000000000000002000000
*000000000000000000000000020001140000006e0000006f0000006e0000002d00000070000000
*6f000000720000007400000061000000620000006c0000006500000020000000280000004d0000
*005000000054000000430000007300000029010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c0110000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d01000000000000000b03010222000000500000007200
*00006f00000076000000690000006400000065000000730000002000000061000000200000006d
*000000650000006300000068000000610000006e00000069000000730000006d00000020000000
*660000006f00000072000000200000007400000068000000650000002000000055000000540000
*004600000038000000200104010000000000000000e3000000000000002c000000000000002d02
*3600000020000000740000006f000000200000007200000065000000700000006f000000720000
*007400000020000000690000006e00000076000000610000006c00000069000000640000002000
*000063000000680000006100000072000000610000006300000074000000650000007200000073
*00000020000000740000006f000000200000006f0000006e00000065000000200000006f000000
*72000000200000006d0000006f0000007200000065000000200000006d0000006f0000006e0000
*006f0000006900000064000000730000002e0000000a2a00000000000000e600000000000000e7
*00000000000000e800000000000000e300000000000000e900000000000000ea00000000000000
*eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000000000
*00f000000000000000f100000000000000f200000000000000f300000000000000f40000000000
*0000f500000000000000f600000000000000f700000000000000f800000000000000f900000000
*000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe000000
*00000000ff00000000000001000000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000700
*000000000000080000000000000009000000000000000a000000000000000b000000000000000c
*000000000000000d03000000000000000b000000000000000d000000000000000c000000000000
*000000000000000000030001140000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c0000006500000020000000280000004d0000005000
*000054000000430000007300000029010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d002c00000000000000e600000000000000e700000000000000
*e800000000000000e300000000000000e900000000000000ea00000000000000eb000000000000
*00ec00000000000000ed00000000000000ee00000000000000ef00000000000000f00000000000
*0000f100000000000000f200000000000000f300000000000000f400000000000000f500000000
*000000f600000000000000f700000000000000f800000000000000f900000000000000fa000000
*00000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000
*000000000100000000000000000000000000000000010000000000000002000000000000000300
*000000000000040000000000000005000000000000000600000000000000070000000000000008
*0000000000000009000000000000000a000000000000000b000000000000000c00000000000000
*0d000000000000000e000000000000000f02000000000000000e000000000000000f0000000000
*00000000000000000000040001140000006e0000006f0000006e0000002d000000700000006f00
*0000720000007400000061000000620000006c0000006500000020000000280000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c0110000000650000006b0000
*006d00000065000000740000007400000040000000670000006d00000061000000690000006c00
*00002e000000630000006f0000006d010000000000000010030102030000004900000066000000
*20010702010000006d010206000000200000006900000073000000200000006100000020010702
*01000000630102010000002d010507000000520000006500000064000000750000006300000065
*0000007201020c0000002c000000200000007400000068000000650000006e000000200000006d
*000000200000006900000073000000200107010203000000280000006300000020010402000000
*000000000011000000000000000000000000000000040000000000000000100000000000000000
*00000000000000040203000000200000006d000000290102010000002d01050700000052000000
*6500000064000000750000006300000065000000720102010000000a0102280000002000000020
*00000020000000540000006800000069000000730000002000000063000000610000006e000000
*200000006200000065000000200000007500000073000000650000006400000020000000740000
*006f00000020000000710000007500000069000000630000006b0000006c000000790000002000
*000073000000650000006c00000065000000630000007400000020000000610000002001050700
*00005200000065000000640000007500000063000000650000007201020e000000200000006600
*00006f000000720000002000000075000000730000006500000020000000610000007300000020
*00000061000000200104010100000000000001010102010000000a010203000000200000002000
*00002001040101000000000000010202020000002e0000000a2a00000000000000e60000000000
*0000e700000000000000e800000000000000e300000000000000e900000000000000ea00000000
*000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000
*00000000f000000000000000f100000000000000f200000000000000f300000000000000f40000
*0000000000f500000000000000f600000000000000f700000000000000f800000000000000f900
*000000000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe
*00000000000000ff00000000000001000000000000000000000000000000000100000000000000
*020000000000000003000000000000000400000000000000050000000000000006000000000000
*000700000000000000080000000000000009000000000000000a00000000000000100000000000
*000011000000000000001203000000000000001000000000000000110000000000000012000000
*000000000000000000000000050000000004000000000000001303010204000000540000006800
*000065000000200104010000000000000000e3000000000000002c000000000000002d01020100
*00002001070102010000002801020100000027010211000000750000006e000000690000006f00
*00006e00000057000000690000007400000068000000200000006d000000610000007000000070
*000000650000006e00000064010201000000270102010000002c01040100000000000000001d00
*000000000000000000000000000005020100000029022100000020000000660000006f00000072
*00000020000000630000006f0000006e0000007400000061000000690000006e00000065000000
*72000000730000002000000066000000750000006c0000006c000000200000006f000000660000
*00200000006d0000006f0000006e0000006f0000006900000064000000730000002e0000000a00
*0000000000001603024d000000500000006f0000006c000000790000006d0000006f0000007200
*00007000000068000000690000006300000020000000630000006f0000006e0000007400000061
*000000690000006e00000065000000720000007300000020000000740000006800000061000000
*740000002000000077000000650000002000000063000000610000006e00000020000000730000
*007500000070000000700000006c0000007900000020000000610000006e000000200000006f00
*00007000000065000000720000006100000074000000690000006f0000006e0000002000000074
*0000006f0000002000000068000000610000006e000000640000006c0000006500000020000000
*750000006e000000690000006f0000006e00000073000000200000007700000069000000740000
*00680000000a000000000000001903010204000000540000006800000065000000200104010000
*000000000000e3000000000000002c000000000000002d01020100000020010701020100000028
*01040100000000000000001e000000000000000000000000000000050102010000002c01040100
*000000000000001d0000000000000000000000000000000502010000002902010000000a000000
*000000001c0301021d0000004100000020000000430000006f0000006e00000074000000610000
*00690000006e000000650000007200000020000000730000007500000069000000740000006100
*0000620000006c0000006500000020000000660000006f00000072000000200000007400000068
*000000650000002001040200000000000000001a00000000000000000000000000000005000000
*000000000019000000000000000000000000000000050102010000002001040100000000000000
*00e3000000000000002c000000000000002d02010000000a1300000000000000e6000000000000
*00e800000000000000e30000000000000003000000000000000400000000000000050000000000
*000006000000000000001300000000000000140000000000000015000000000000001600000000
*0000001700000000000000180000000000000019000000000000001a000000000000001b000000
*000000001c000000000000001d000000000000001e0c000000000000001c000000000000001d00
*0000000000001e0000000000000019000000000000001a000000000000001b0000000000000016
*000000000000001800000000000000170000000000000013000000000000001400000000000000
*1500000000000000000000000000000006000108000000700000006f0000007200000074000000
*61000000620000006c00000065010c000000650000007800000070000000650000007200000069
*0000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d00
*000065000000740000007400000040000000670000006d00000061000000690000006c0000002e
*000000630000006f0000006d05000000000000001f030102020000006100000020010401000000
*000000000028000000000000000000000000000000060102190000002000000074000000720000
*00610000006e00000073000000660000006f000000720000006d00000065000000720000002000
*000074000000680000006100000074000000200000007400000072000000650000006100000074
*0000007300000020010401000000000000000103000000000000002c0000000000000030010204
*000000200000006100000073000000200104010000000000000001040000000000000031000000
*00000000320102010000000a010215000000200000005400000068000000690000007300000020
*0000006c00000065000000740000007300000020000000790000006f0000007500000020000000
*75000000730000006500000020000000610000002001020a000000420000007900000074000000
*65000000530000007400000072000000690000006e000000670102060000002000000061000000
*730000002000000061000000200104010000000000000001040000000000000031000000000000
*003201022000000020000000730000006f00000075000000720000006300000065000000200000
*00770000006900000074000000680000006f000000750000007400000020000000670000006f00
*0000690000006e00000067000000200000007400000068000000720000006f0000007500000067
*000000680000002000000061000000200104010000000000000000e3000000000000002c000000
*000000002d010212000000200000007400000072000000610000006e0000007300000066000000
*6f000000720000006d0000006500000072000000200000006c000000690000006b000000650000
*00200102040000005500000054000000460000003802010000000a000000000000002203010202
*000000610000002001040100000000000000002800000000000000000000000000000006024d00
*0000200000007400000072000000610000006e00000073000000660000006f000000720000006d
*000000650000007200000020000000740000006800000061000000740000002000000061000000
*730000006b00000073000000200000006f0000006e0000006c0000007900000020000000660000
*006f00000072000000200000007400000068000000650000002000000076000000610000006c00
*000075000000650000007300000020000000630000006f0000006e000000740000006100000069
*0000006e000000650000006400000020000000690000006e00000020000000610000006e000000
*20000000690000006e000000640000006500000078000000650000006400000020000000630000
*006f0000006e0000007400000061000000690000006e00000065000000720000000a0000000000
*000025030102020000006100000020010401000000000000000028000000000000000000000000
*000000060241000000200000007400000072000000610000006e00000073000000660000006f00
*0000720000006d0000006500000072000000200000007400000068000000610000007400000020
*00000061000000730000006b00000073000000200000006f0000006e0000006c00000079000000
*20000000660000006f0000007200000020000000740000006800000065000000200000006b0000
*00650000007900000073000000200000006f0000006600000020000000610000006e0000002000
*0000690000006e000000640000006500000078000000650000006400000020000000630000006f
*0000006e0000007400000061000000690000006e00000065000000720000000a00000000000000
*28030102130000006d000000690000006e000000690000006d000000610000006c000000200000
*00640000006500000066000000690000006e0000006900000074000000690000006f0000006e00
*00002001040100000000000000002a000000000000000000000000000000060102040000002000
*00006f000000720000002001040100000000000000002b00000000000000000000000000000006
*02010000000a000000000000002d030102080000004100000070000000700000006c0000007900
*000020000000610000002001040100000000000000000300000000000000000000000000000001
*01021f000000200000006400000069000000720000006500000063000000740000006c00000079
*00000020000000740000006f000000200000007400000068000000650000002000000065000000
*6c000000650000006d000000650000006e0000007400000073000000200000006f000000660000
*002000000061000000200104010000000000000000280000000000000000000000000000000602
*010000000a3800000000000000e600000000000000e700000000000000e800000000000000e300
*000000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed
*00000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000
*f200000000000000f300000000000000f400000000000000f500000000000000f6000000000000
*00f700000000000000f800000000000000f900000000000000fa00000000000000fb0000000000
*0000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000001f00000000000000200000000000000021000000000000002200
*000000000000230000000000000024000000000000002500000000000000260000000000000027
*00000000000000280000000000000029000000000000002a000000000000002b00000000000000
*2c000000000000002d000000000000002e000000000000002f1100000000000000280000000000
*000029000000000000002a000000000000002b000000000000002c000000000000002500000000
*000000260000000000000027000000000000002200000000000000230000000000000024000000
*000000001f00000000000000200000000000000021000000000000002d000000000000002e0000
*00000000002f000000000000000000000000000000070001270000006e0000006f0000006e0000
*002d000000700000006f000000720000007400000061000000620000006c000000650000002000
*0000280000004d000000500000005400000043000000730000002c000000200000004f00000076
*00000065000000720000006c0000006f0000006100000064000000650000006400000053000000
*7400000072000000690000006e000000670000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011000
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d060000000000000030030102020000
*0041000000200104010000000000000000e3000000000000002c000000000000002d01023a0000
*00200000006f000000660000002000000070000000610000007200000074000000690000006100
*00006c00000020000000690000006e000000660000006f000000720000006d0000006100000074
*000000690000006f0000006e0000002000000061000000620000006f0000007500000074000000
*200000006c0000006f000000630000006100000074000000690000006f0000006e000000730000
*0020000000690000006e000000200000006100000020000000730000006f000000750000007200
*000063000000650000002000000066000000690000006c000000650000002e0000000a025f0000
*002000000020000000200000005400000068000000690000007300000020000000690000007300
*000020000000700000006f0000006c000000790000006d0000006f000000720000007000000068
*000000690000006300000020000000690000006e00000020000000740000006800000065000000
*200000006b000000690000006e00000064000000200000006f0000006600000020000000690000
*006e000000660000006f000000720000006d0000006100000074000000690000006f0000006e00
*000020000000790000006f000000750000002000000077000000610000006e0000007400000020
*000000740000006f000000200000006d00000061000000690000006e0000007400000061000000
*690000006e0000002000000061000000620000006f000000750000007400000020000000650000
*0061000000630000006800000020000000730000006f0000007500000072000000630000006500
*00002000000066000000690000006c000000650000002e0000000a000000000000003703023f00
*0000430000006f0000006d00000070000000750000007400000065000000200000007400000068
*00000065000000200000006c0000006f000000630000006100000074000000690000006f000000
*6e000000200000006f0000006600000020000000740000006800000065000000200000006e0000
*00650000007800000074000000200000007300000074000000610000006e000000640000006100
*0000720000006400000020000000380000002d000000630000006f0000006c000000750000006d
*0000006e00000020000000610000006c00000069000000670000006e0000006500000064000000
*200000007400000061000000620000000a0000000000000038030102350000006c000000690000
*00660000007400000020000000690000006e000000660000006f000000720000006d0000006100
*000074000000690000006f0000006e0000002000000061000000620000006f0000007500000074
*000000200000006100000020000000730000006f00000075000000720000006300000065000000
*2000000066000000690000006c0000006500000020000000690000006e000000740000006f0000
*002000000061000000200000007300000074000000610000007200000074000000690000006e00
*0000670000002001040100000000000000003000000000000000000000000000000007020f0000
*0020000000660000006f0000007200000020000000740000006800000061000000740000002000
*000066000000690000006c000000650000000a000000000000003903026a000000650000007800
*000074000000720000006100000063000000740000002000000070000000610000007200000074
*00000069000000610000006c00000020000000690000006e000000660000006f00000072000000
*6d0000006100000074000000690000006f0000006e0000002000000061000000620000006f0000
*007500000074000000200000007400000068000000650000002000000063000000750000007200
*000072000000650000006e0000007400000020000000630000006f0000006c000000750000006d
*0000006e0000002c000000200000006500000076000000650000006e0000002000000069000000
*6e0000002000000074000000680000006500000020000000610000006200000073000000650000
*006e0000006300000065000000200000006f00000066000000200000006b0000006e0000006f00
*0000770000006c00000065000000640000006700000065000000200000006f0000006600000020
*00000074000000680000006500000020000000730000006f000000750000007200000063000000
*650000002000000066000000690000006c000000650000000a000000000000003a030246000000
*650000007800000074000000720000006100000063000000740000002000000070000000610000
*00720000007400000069000000610000006c00000020000000690000006e000000660000006f00
*0000720000006d0000006100000074000000690000006f0000006e000000200000006100000062
*0000006f0000007500000074000000200000007400000068000000650000002000000063000000
*750000007200000072000000650000006e00000074000000200000006c000000690000006e0000
*0065000000200000006e000000750000006d000000620000006500000072000000200000006900
*00006600000020000000700000006f000000730000007300000069000000620000006c00000065
*0000000a000000000000003b03023c000000650000007800000074000000720000006100000063
*000000740000002000000074000000680000006500000020000000730000007400000061000000
*6e0000006400000061000000720000006400000020000000660000006f000000720000006d0000
*00610000007400000020000000660000006f0000007200000020000000610000006e0000002000
*00006100000062000000730000006f0000006c0000007500000074000000650000002000000073
*0000006f0000007500000072000000630000006500000020000000700000006f00000073000000
*6900000074000000690000006f0000006e0000000a3600000000000000e600000000000000e700
*000000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb
*00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000
*f000000000000000f100000000000000f200000000000000f300000000000000f4000000000000
*00f500000000000000f600000000000000f700000000000000f800000000000000f90000000000
*0000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00000000
*000000ff0000000000000100000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070000
*0000000000080000000000000009000000000000000a000000000000000b000000000000000c00
*0000000000000d0000000000000030000000000000003100000000000000320000000000000033
*000000000000003400000000000000350000000000000036000000000000003700000000000000
*380000000000000039000000000000003a000000000000003b0c00000000000000370000000000
*000030000000000000003400000000000000330000000000000032000000000000003100000000
*000000360000000000000035000000000000003a00000000000000390000000000000038000000
*000000003b000000000000000000000000000000080001270000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000004d000000500000005400000043000000730000002c000000200000004f0000007600
*000065000000720000006c0000006f000000610000006400000065000000640000005300000074
*00000072000000690000006e000000670000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d08000000000000003c03010202000000
*410000002001040100000000000000000b00000000000000000000000000000002022600000020
*0000007400000072000000610000006e00000073000000660000006f000000720000006d000000
*650000007200000020000000740000006800000061000000740000002000000073000000740000
*0072000000690000007000000073000000200000006f0000007500000074000000200000006e00
*000065000000770000006c000000690000006e00000065000000730000000a000000000000003e
*03010202000000410000002001040100000000000000000b000000000000000000000000000000
*02010236000000200000007400000072000000610000006e00000073000000660000006f000000
*720000006d00000065000000720000002000000074000000680000006100000074000000200000
*00730000007400000072000000690000007000000073000000200000006f000000750000007400
*000020000000610000006e00000079000000200000006300000068000000610000007200000061
*00000063000000740000006500000072000000200000006d000000610000007400000063000000
*680000006500000064000000200000006200000079000000200104010000000000000001050000
*00000000002c000000000000003302010000000a00000000000000400301020200000041000000
*2001040100000000000000000b0000000000000000000000000000000201021b00000020000000
*7400000072000000610000006e00000073000000660000006f000000720000006d000000650000
*007200000020000000740000006800000061000000740000002000000062000000720000006500
*0000610000006b0000007300000020000000610000002001040100000000000000010400000000
*000000310000000000000032010201000000200104010000000000000000280000000000000000
*000000000000000601022000000020000000690000006e000000740000006f0000002000000064
*000000690000007300000074000000690000006e0000006300000074000000200000006c000000
*690000006e00000065000000730000002c00000020000000660000006500000065000000640000
*00690000006e000000670000002000000061000000200104010000000000000001040000000000
*000031000000000000003201020100000020010401000000000000000003000000000000000000
*0000000000000102140000002000000065000000610000006300000068000000200000006c0000
*00690000006e0000006500000020000000690000006e0000002000000074000000750000007200
*00006e0000002e0000000a00000000000000410301020200000041000000200104010000000000
*0000000b0000000000000000000000000000000201021b00000020000000740000007200000061
*0000006e00000073000000660000006f000000720000006d000000650000007200000020000000
*7400000068000000610000007400000020000000620000007200000065000000610000006b0000
*007300000020000000610000002001040100000000000000010400000000000000310000000000
*000032010201000000200104010000000000000000280000000000000000000000000000000601
*022000000020000000690000006e000000740000006f0000002000000064000000690000007300
*000074000000690000006e000000630000007400000020000000770000006f0000007200000064
*000000730000002c0000002000000066000000650000006500000064000000690000006e000000
*670000002000000061000000200104010000000000000001040000000000000031000000000000
*003201020100000020010401000000000000000003000000000000000000000000000000010213
*0000002000000065000000610000006300000068000000200000006c000000690000006e000000
*6500000020000000690000006e000000200000007400000075000000720000006e0000000a0000
*000000000042030102230000004500000078000000740000007200000061000000630000007400
*000020000000740000006800000065000000200000006d00000061000000740000006300000068
*000000650000006400000020000000770000006f00000072000000640000007300000020000000
*66000000720000006f0000006d0000002000000074000000680000006500000020010401000000
*000000000041000000000000000000000000000000080102010000002001040100000000000000
*00e3000000000000002c000000000000002d02010000000a000000000000004303010223000000
*450000007800000074000000720000006100000063000000740000002000000074000000680000
*0065000000200000006d0000006100000074000000630000006800000065000000640000002000
*00006c000000690000006e00000065000000730000002000000066000000720000006f0000006d
*000000200000007400000068000000650000002001040100000000000000004000000000000000
*000000000000000008010201000000200104010000000000000000e3000000000000002c000000
*000000002d02010000000a000000000000004403025e0000005500000074000000690000006c00
*00006900000074000000790000002000000066000000750000006e000000630000007400000069
*0000006f0000006e00000020000000740000006f00000020000000650000007800000074000000
*7200000061000000630000007400000020000000770000006f0000007200000064000000730000
*00200000007500000073000000690000006e000000670000002000000061000000630000006300
*0000750000006d000000750000006c00000061000000740000006f000000720000002c00000020
*000000690000006e000000730000006900000064000000650000002d000000770000006f000000
*72000000640000002c00000020000000610000006e0000006400000020000000750000006e0000
*0074000000690000006c0000002d0000006e0000006500000078000000740000002d0000007700
*00006f0000007200000064000000200000006d0000006f0000006e0000006f0000006900000064
*000000730000000a000000000000004503025e0000005500000074000000690000006c00000069
*00000074000000790000002000000066000000750000006e000000630000007400000069000000
*6f0000006e00000020000000740000006f00000020000000650000007800000074000000720000
*00610000006300000074000000200000006c000000690000006e00000065000000730000002000
*00007500000073000000690000006e000000670000002000000061000000630000006300000075
*0000006d000000750000006c00000061000000740000006f000000720000002c00000020000000
*690000006e000000730000006900000064000000650000002d0000006c000000690000006e0000
*00650000002c00000020000000610000006e0000006400000020000000750000006e0000007400
*0000690000006c0000002d0000006e0000006500000078000000740000002d0000006c00000069
*0000006e00000065000000200000006d0000006f0000006e0000006f0000006900000064000000
*730000000a3400000000000000e600000000000000e700000000000000e800000000000000e300
*000000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed
*00000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000
*f200000000000000f300000000000000f400000000000000f500000000000000f6000000000000
*00f700000000000000f800000000000000f900000000000000fa00000000000000fb0000000000
*0000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000000b000000000000000c000000000000000d000000000000003c00
*0000000000003d000000000000003e000000000000003f00000000000000400000000000000041
*00000000000000420000000000000043000000000000004400000000000000450a000000000000
*00410000000000000042000000000000003e000000000000003f00000000000000440000000000
*0000400000000000000043000000000000003c000000000000003d000000000000004500000000
*000000000000000000000009000108000000700000006f00000072000000740000006100000062
*0000006c00000065010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d002a00000000000000e600000000000000e700000000000000e8000000000000
*00e300000000000000e900000000000000ea00000000000000eb00000000000000ec0000000000
*0000ed00000000000000ee00000000000000ef00000000000000f000000000000000f100000000
*000000f200000000000000f300000000000000f400000000000000f500000000000000f6000000
*00000000f700000000000000f800000000000000f900000000000000fa00000000000000fb0000
*0000000000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000
*000000000000000000000000000001000000000000000200000000000000030000000000000004
*000000000000000500000000000000060000000000000007000000000000000800000000000000
*09000000000000000a000000000000004600000000000000470000000000000048030000000000
*000046000000000000004700000000000000480000000000000000000000000000000a00010800
*0000700000006f000000720000007400000061000000620000006c00000065010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d060000000000000106
*03010214000000410000006e000000200000004c0000005a000000370000003800000020000000
*630000006f0000006d0000007000000072000000650000007300000073000000690000006e0000
*0067000000200104010000000000000000280000000000000000000000000000000601021b0000
*002c00000020000000770000006800000069000000630000006800000020000000730000007500
*000070000000700000006f00000072000000740000007300000020000000650000006600000066
*000000690000006300000069000000650000006e00000074000000200104010000000000000000
*2a00000000000000000000000000000006020c000000200000006f000000700000006500000072
*0000006100000074000000690000006f0000006e000000730000000a000000000000004a030102
*130000006100000020000000740000007900000070000000650000002d000000630000006f0000
*006e00000073000000740000007200000061000000690000006e00000065000000640000002001
*040100000000000000002d00000000000000000000000000000006020b000000200000006f0000
*007000000065000000720000006100000074000000690000006f0000006e0000000a0000000000
*00004b0301021c000000630000006f0000006e0000007400000072000000750000006300000074
*00000020000000610000006e000000200000004c0000005a00000037000000380000002d000000
*630000006f0000006d000000700000007200000065000000730000007300000065000000640000
*002001040100000000000000002800000000000000000000000000000006010209000000200000
*007500000073000000690000006e00000067000000200000006100000020010401000000000000
*00010700000000000000340000000000000035022a00000020000000690000006e000000740000
*0065000000720000006e000000610000006c0000006c000000790000002c000000200000007200
*00006500000071000000750000006900000072000000650000007300000020000000610000006e
*00000020000000690000006e0000007300000074000000610000006e0000006300000065000000
*200000006f00000066000000200000004f00000072000000640000002e0000000a000000000000
*004c0301021c000000630000006f0000006e000000740000007200000075000000630000007400
*000020000000610000006e000000200000004c0000005a00000037000000380000002d00000063
*0000006f0000006d00000070000000720000006500000073000000730000006500000064000000
*200104010000000000000000280000000000000000000000000000000602360000002000000075
*00000073000000690000006e000000670000002000000061000000200000006c00000069000000
*730000007400000020000000690000006e0000007400000065000000720000006e000000610000
*006c0000006c000000790000002c00000020000000720000006500000071000000750000006900
*000072000000650000007300000020000000610000006e00000020000000690000006e00000073
*00000074000000610000006e0000006300000065000000200000006f0000006600000020000000
*45000000710000002e0000000a000000000000004d03022a000000510000007500000069000000
*630000006b000000430000006800000065000000630000006b0000002000000070000000720000
*006f00000070000000650000007200000074000000790000003a00000020000000640000006500
*0000630000006f0000006400000065000000200000002e00000020000000650000006e00000063
*0000006f0000006400000065000000200000003d0000002000000069000000640000000a000000
*000000004e03022c000000510000007500000069000000630000006b0000004300000068000000
*65000000630000006b0000002000000070000000720000006f0000007000000065000000720000
*0074000000790000003a000000200000006400000065000000630000006f000000640000006500
*0000200000002e00000020000000650000006e000000630000006f000000640000006500000045
*00000071000000200000003d0000002000000069000000640000000a3e00000000000000e60000
*0000000000e700000000000000e800000000000000e300000000000000e900000000000000ea00
*000000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef
*00000000000000f000000000000000f100000000000000f200000000000000f300000000000000
*f400000000000000f500000000000000f600000000000000f700000000000000f8000000000000
*00f900000000000000fa00000000000000fb00000000000000fc00000000000000fd0000000000
*0000fe00000000000000ff00000000000001000000000000000000000000000000000100000000
*000000020000000000000003000000000000000400000000000000050000000000000006000000
*000000000700000000000000080000000000000009000000000000000a000000000000001f0000
*000000000020000000000000002100000000000000220000000000000023000000000000002400
*000000000000250000000000000026000000000000002700000000000000280000000000000029
*000000000000002a000000000000002b000000000000002c000000000000002d00000000000000
*2e000000000000002f0000000000000049000000000000004a000000000000004b000000000000
*004c000000000000004d000000000000004e060000000000000049000000000000004a00000000
*0000004b000000000000004c000000000000004d000000000000004e0000000000000000000000
*000000000b0001280000006e0000006f0000006e0000002d000000700000006f00000072000000
*7400000061000000620000006c0000006500000020000000280000006f00000076000000650000
*00720000006c0000006f0000006100000064000000650000006400000020000000730000007400
*000072000000690000006e00000067000000730000002c000000200000004d0000005000000054
*000000430000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d002a00000000000000e600000000000000e700000000000000e80000
*0000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec00
*000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f1
*00000000000000f200000000000000f300000000000000f400000000000000f500000000000000
*f600000000000000f700000000000000f800000000000000f900000000000000fa000000000000
*00fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000000000
*000100000000000000000000000000000000010000000000000002000000000000000300000000
*000000040000000000000005000000000000000600000000000000070000000000000008000000
*0000000009000000000000000a000000000000004f000000000000005000000000000000510300
*0000000000004f000000000000005000000000000000510000000000000000000000000000000c
*0001230000006e0000006f0000006e0000002d000000700000006f000000720000007400000061
*000000620000006c00000065000000200000002800000074000000790000007000000065000000
*2000000066000000610000006d000000690000006c0000006900000065000000730000002c0000
*00200000004d0000005000000054000000430000007300000029010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c0110
*000000650000006b0000006d00000065000000740000007400000040000000670000006d000000
*61000000690000006c0000002e000000630000006f0000006d0300000000000000520301021400
*0000410000002000000067000000650000006e0000006500000072000000610000006c00000069
*0000007a0000006100000074000000690000006f0000006e000000200000006f00000066000000
*2001020f000000440000006100000074000000610000002e0000004c0000006900000073000000
*740000002e0000006300000079000000630000006c000000650102110000002000000074000000
*6f00000020000000610000006e0000002000000061000000720000006200000069000000740000
*0072000000610000007200000079000000200104010000000000000000e3000000000000002c00
*0000000000002d02390000002e000000200000004d000000610000007900000020000000660000
*0061000000690000006c00000020000000740000006f0000002000000074000000650000007200
*00006d000000690000006e00000061000000740000006500000020000000660000006f00000072
*00000020000000730000006f0000006d000000650000002000000076000000610000006c000000
*75000000650000007300000020000000690000006e00000020000000730000006f0000006d0000
*0065000000200000006d0000006f0000006e0000006f0000006900000064000000730000002e00
*00000a000000000000005303010214000000410000002000000067000000650000006e00000065
*00000072000000610000006c000000690000007a0000006100000074000000690000006f000000
*6e000000200000006f000000660000002001021000000044000000610000007400000061000000
*2e0000004c0000006900000073000000740000002e000000720000006500000070000000650000
*00610000007401021100000020000000740000006f00000020000000610000006e000000200000
*006100000072000000620000006900000074000000720000006100000072000000790000002001
*04010000000000000000e3000000000000002c000000000000002d02390000002e000000200000
*004d0000006100000079000000200000006600000061000000690000006c000000200000007400
*00006f000000200000007400000065000000720000006d000000690000006e0000006100000074
*0000006500000020000000660000006f0000007200000020000000730000006f0000006d000000
*650000002000000076000000610000006c00000075000000650000007300000020000000690000
*006e00000020000000730000006f0000006d00000065000000200000006d0000006f0000006e00
*00006f0000006900000064000000730000002e0000000a00000000000000540301021400000041
*0000002000000067000000650000006e0000006500000072000000610000006c00000069000000
*7a0000006100000074000000690000006f0000006e000000200000006f00000066000000200102
*13000000440000006100000074000000610000002e0000004c0000006900000073000000740000
*002e0000007200000065000000700000006c000000690000006300000061000000740000006501
*021100000020000000740000006f00000020000000610000006e00000020000000610000007200
*000062000000690000007400000072000000610000007200000079000000200104010000000000
*000000e3000000000000002c000000000000002d0102100000002e000000200000004100000064
*00000061000000700000007400000065000000640000002000000066000000720000006f000000
*6d000000200000000a01020100000020010c4a000000680000007400000074000000700000003a
*0000002f0000002f00000061000000750000006700000075000000730000007400000073000000
*730000002e000000620000006c0000006f0000006700000073000000700000006f000000740000
*002e000000630000006f0000006d0000002f000000320000003000000030000000380000002f00
*000030000000370000002f0000006c0000006f00000073000000740000002d000000610000006e
*000000640000002d000000660000006f000000750000006e000000640000002d00000069000000
*660000002d000000690000002d00000077000000720000006900000074000000650000002d0000
*003100000030000000380000002d000000690000006e0000002e00000068000000740000006d00
*00006c02010000000a040000000000000052000000000000005300000000000000540000000000
*000055040000000000000053000000000000005400000000000000520000000000000055000000
*0000000000000000000000000d000108000000700000006f000000720000007400000061000000
*620000006c00000065010c0000006500000078000000700000006500000072000000690000006d
*000000650000006e00000074000000610000006c0110000000650000006b0000006d0000006500
*0000740000007400000040000000670000006d00000061000000690000006c0000002e00000063
*0000006f0000006d04000000000000005603010202000000410000002001040100000000000000
*00280000000000000000000000000000000601021a000000200000007700000068000000690000
*00630000006800000020000000730000007500000070000000700000006f000000720000007400
*00007300000020000000650000006600000066000000690000006300000069000000650000006e
*000000740000002001040100000000000000002a00000000000000000000000000000006022a00
*0000200000006f0000007000000065000000720000006100000074000000690000006f0000006e
*00000073000000200000006f000000760000006500000072000000200000007200000075000000
*6e0000002d0000006c000000650000006e00000067000000740000006800000020000000650000
*006e000000630000006f0000006400000065000000640000002000000064000000610000007400
*0000610000002e0000000a00000000000000590302230000004100000020000000730000006900
*00006e000000670000006c000000650000002000000072000000750000006e0000002000000077
*000000690000007400000068000000200000006100000020000000730000007400000072000000
*690000006300000074000000200000006c000000650000006e0000006700000074000000680000
*002e0000000a000000000000005c03023c0000006e000000610000006900000076000000650000
*00200000006c00000065000000660000007400000020000000740000006f000000200000007200
*00006900000067000000680000007400000020000000650000006e000000630000006f00000064
*00000065000000720000002c000000200000007700000068000000690000006300000068000000
*2000000063000000610000006e0000002000000068000000610000006e000000640000006c0000
*006500000020000000690000006e00000066000000690000006e00000069000000740000006500
*000020000000640000006100000074000000610000000a000000000000005d03022a0000005100
*00007500000069000000630000006b000000430000006800000065000000630000006b00000020
*00000070000000720000006f00000070000000650000007200000074000000790000003a000000
*200000006400000065000000630000006f0000006400000065000000200000002e000000200000
*00650000006e000000630000006f0000006400000065000000200000003d000000200000006900
*0000640000000a4200000000000000e600000000000000e700000000000000e800000000000000
*e300000000000000e900000000000000ea00000000000000eb00000000000000ec000000000000
*00ed00000000000000ee00000000000000ef00000000000000f000000000000000f10000000000
*0000f200000000000000f300000000000000f400000000000000f500000000000000f600000000
*000000f700000000000000f800000000000000f900000000000000fa00000000000000fb000000
*00000000fc00000000000000fd00000000000000fe00000000000000ff00000000000001000000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*000000000000050000000000000006000000000000000700000000000000080000000000000009
*000000000000000a000000000000001f0000000000000020000000000000002100000000000000
*220000000000000023000000000000002400000000000000250000000000000026000000000000
*002700000000000000280000000000000029000000000000002a000000000000002b0000000000
*00002c000000000000002d000000000000002e000000000000002f000000000000005600000000
*0000005700000000000000580000000000000059000000000000005a000000000000005b000000
*000000005c000000000000005d000000000000005e000000000000005f0a000000000000005600
*0000000000005700000000000000580000000000000059000000000000005a000000000000005b
*000000000000005e000000000000005c000000000000005f000000000000005d00000000000000
*00000000000000000e000108000000700000006f00000072000000740000006100000062000000
*6c00000065010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d0400000000000000600301020200000041000000200104010000000000000000e30000
*00000000002c000000000000002d01020b000000200000006900000073000000200000006a0000
*007500000073000000740000002000000061000000200104010000000000000001080000000000
*00002c0000000000000036022e0000002000000077000000690000007400000068000000200000
*006f0000006e00000065000000200000006f000000620000006a00000065000000630000007400
*00002e00000020000000540000006800000069000000730000002000000066000000610000006b
*000000650000007300000020000000740000006800000061000000740000002000000077000000
*690000007400000068000000200000006100000020000000470000004100000044000000540000
*000a00000000000000610301020400000054000000680000006500000020010401000000000000
*0000e3000000000000002c000000000000002d010237000000200000006f000000660000002000
*000074000000680000006500000020000000650000006e000000640000006f0000006d0000006f
*00000072000000700000006800000069000000730000006d00000073000000200000006f000000
*76000000650000007200000020000000730000006f0000006d00000065000000200000006f0000
*00620000006a00000065000000630000007400000020000000690000006e000000200000006100
*00006e000000200000006100000072000000620000006900000074000000720000006100000072
*0000007900000020010401000000000000000108000000000000002c0000000000000036020200
*00002e0000000a00000000000000640301020c0000004500000078000000740000007200000061
*000000630000007400000020000000740000006800000065000000200104010000000000000000
*e3000000000000002c000000000000002d01021e0000002000000066000000720000006f000000
*6d0000002000000069000000740000007300000020000000720000006500000070000000720000
*006500000073000000650000006e000000740000006100000074000000690000006f0000006e00
*000020000000610000007300000020000000610000002001040100000000000000010800000000
*0000002c000000000000003602010000000a000000000000006503010215000000430000006f00
*00006e000000760000006500000072000000740000002000000061000000200000007600000061
*0000006c000000750000006500000020000000690000006e000000200000006100000020010401
*0000000000000000e3000000000000002c000000000000002d0102140000002000000069000000
*6e000000740000006f00000020000000610000006e000000200000006100000072000000720000
*006f0000007700000020000000690000006e000000200000006100000020010401000000000000
*000108000000000000002c000000000000003602020000002e0000000a3200000000000000e600
*000000000000e700000000000000e800000000000000e300000000000000e900000000000000ea
*00000000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000
*ef00000000000000f000000000000000f100000000000000f200000000000000f3000000000000
*00f400000000000000f500000000000000f600000000000000f700000000000000f80000000000
*0000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd00000000
*000000fe00000000000000ff00000000000001000000000000000109000000000000010a000000
*000000010b000000000000010c0000000000000108000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000005000000000000000600
*0000000000000700000000000000080000000000000009000000000000000a0000000000000060
*000000000000006100000000000000620000000000000063000000000000006400000000000000
*650600000000000000610000000000000062000000000000006300000000000000600000000000
*00006400000000000000650000000000000000000000000000000f000108000000700000006f00
*0000720000007400000061000000620000006c00000065010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0110000000
*650000006b0000006d00000065000000740000007400000040000000670000006d000000610000
*00690000006c0000002e000000630000006f0000006d001e00000000000000e600000000000000
*e700000000000000e800000000000000e300000000000000e900000000000000ea000000000000
*00eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef0000000000
*0000f000000000000000f100000000000000f200000000000000f300000000000000f400000000
*000000f500000000000000f600000000000000f700000000000000f800000000000000f9000000
*00000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe0000
*0000000000ff000000000000010000000000000000660000000000000067020000000000000066
*000000000000006700000000000000000000000000000010000108000000700000006f00000072
*0000007400000061000000620000006c00000065010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c0110000000650000
*006b0000006d00000065000000740000007400000040000000670000006d000000610000006900
*00006c0000002e000000630000006f0000006d001f00000000000000e600000000000000e70000
*0000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb00
*000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f0
*00000000000000f100000000000000f200000000000000f300000000000000f400000000000000
*f500000000000000f600000000000000f700000000000000f800000000000000f9000000000000
*00fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe0000000000
*0000ff000000000000010000000000000000660000000000000067000000000000006801000000
*000000006800000000000000000000000000000011000122000000700000006f00000072000000
*7400000061000000620000006c0000006500000020000000280000006200000075000000740000
*0020000000690000006e0000007300000074000000610000006e00000063000000650000007300
*000020000000750000007300000065000000200000004d00000050000000540000004300000073
*00000029010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c0110000000650000006b0000006d00000065000000740000
*007400000040000000670000006d00000061000000690000006c0000002e000000630000006f00
*00006d0200000000000000690301020a000000430000006f0000006e0000007600000065000000
*72000000740000002000000061000000200104010000000000000000e3000000000000002c0000
*00000000002d01020800000020000000690000006e000000740000006f00000020000000610000
*002001040100000000000000006f0000000000000000000000000000001101020c0000002e0000
*00200000004d0000006e000000650000006d0000006f0000006e00000069000000630000003a00
*0000200107021b0000004500000078000000700000002000000061000000200000002a00000020
*0000004500000078000000700000002000000062000000200000003d0000002000000045000000
*7800000070000000200000002800000061000000200000002b0000002000000062000000290201
*0000000a000000000000006c0301020a000000430000006f0000006e0000007600000065000000
*720000007400000020000000610000002001040100000000000000006f00000000000000000000
*00000000001101020800000020000000690000006e000000740000006f00000020000000610000
*00200104010000000000000000e3000000000000002c000000000000002d01020c0000002e0000
*00200000004d0000006e000000650000006d0000006f0000006e00000069000000630000003a00
*0000200107021b0000004c0000006f000000670000002000000061000000200000002b00000020
*0000004c0000006f000000670000002000000062000000200000003d000000200000004c000000
*6f00000067000000200000002800000061000000200000002a0000002000000062000000290201
*0000000a2700000000000000e600000000000000e700000000000000e800000000000000e30000
*0000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed00
*000000000000ee00000000000000ef00000000000000f000000000000000f100000000000000f2
*00000000000000f300000000000000f400000000000000f500000000000000f600000000000000
*f700000000000000f800000000000000f900000000000000fa00000000000000fb000000000000
*00fc00000000000000fd00000000000000fe00000000000000ff00000000000001000000000000
*00006600000000000000670000000000000069000000000000006a000000000000006b00000000
*0000006c000000000000006d000000000000006e000000000000006f0000000000000070000000
*000000007109000000000000006f00000000000000700000000000000071000000000000006c00
*0000000000006d000000000000006e0000000000000069000000000000006a000000000000006b
*00000000000000000000000000000012000108000000700000006f000000720000007400000061
*000000620000006c00000065010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d002900000000000000e600000000000000e700000000000000e80000
*0000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec00
*000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f1
*00000000000000f200000000000000f300000000000000f400000000000000f500000000000000
*f600000000000000f700000000000000f800000000000000f900000000000000fa000000000000
*00fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000000000
*000100000000000000006600000000000000670000000000000068000000000000006900000000
*0000006a000000000000006b000000000000006c000000000000006d000000000000006e000000
*000000006f00000000000000700000000000000071000000000000007201000000000000007200
*00000000000000000000000000001300011e000000700000006f00000072000000740000006100
*0000620000006c000000650000002000000028000000690000006e000000730000007400000061
*0000006e0000006300000065000000730000002000000075000000730000006500000020000000
*4d0000005000000054000000430000007300000029010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d0200000000000000730b021f00000028000000
*61000000200000002b000000200000006200000029000000200000002a00000020000000630000
*00200000003d000000200000002800000061000000200000002a00000020000000630000002900
*0000200000002b000000200000002800000062000000200000002a000000200000006300000029
*00000000000000740b021f00000061000000200000002a00000020000000280000006200000020
*0000002b000000200000006300000029000000200000003d000000200000002800000061000000
*200000002a000000200000006200000029000000200000002b0000002000000028000000610000
*00200000002a0000002000000063000000292900000000000000e600000000000000e700000000
*000000e800000000000000e300000000000000e900000000000000ea00000000000000eb000000
*00000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f00000
*0000000000f100000000000000f200000000000000f300000000000000f400000000000000f500
*000000000000f600000000000000f700000000000000f800000000000000f900000000000000fa
*00000000000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000
*ff0000000000000100000000000000006600000000000000670000000000000069000000000000
*006a000000000000006b000000000000006c000000000000006d000000000000006e0000000000
*00006f000000000000007000000000000000710000000000000073000000000000007402000000
*00000000740000000000000073000000000000000000000000000000140001140000006e000000
*6f0000006e0000002d000000700000006f000000720000007400000061000000620000006c0000
*006500000020000000280000004d0000005000000054000000430000007300000029010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c0110000000650000006b0000006d00000065000000740000007400000040000000
*670000006d00000061000000690000006c0000002e000000630000006f0000006d010000000000
*000075030102020000004100000020010401000000000000000075000000000000000000000000
*0000001401021800000020000000690000007300000020000000610000006e0000002000000069
*0000006e0000007300000074000000610000006e0000006300000065000000200000006f000000
*6600000020000000620000006f00000074000000680000002001040100000000000000006f0000
*000000000000000000000000001101020500000020000000610000006e00000064000000200104
*010000000000000000e3000000000000002c000000000000002d01020800000020000000770000
*0068000000650000007200000065000000200000000a0102030000002000000020000000200104
*010000000000000000710000000000000000000000000000001101021200000020000000640000
*006900000073000000740000007200000069000000620000007500000074000000650000007300
*0000200000006f0000007600000065000000720000002001040100000000000000006600000000
*00000000000000000000000f02020000002e0000000a2a00000000000000e600000000000000e7
*00000000000000e800000000000000e300000000000000e900000000000000ea00000000000000
*eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000000000
*00f000000000000000f100000000000000f200000000000000f300000000000000f40000000000
*0000f500000000000000f600000000000000f700000000000000f800000000000000f900000000
*000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe000000
*00000000ff00000000000001000000000000000066000000000000006700000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000006e00
*0000000000006f0000000000000070000000000000007100000000000000730000000000000074
*000000000000007501000000000000007500000000000000000000000000000015000000000400
*0000000000007603010204000000540000006800000065000000200104010000000000000000e3
*000000000000002c000000000000002d0102010000002001070102010000002801040100000000
*000000010d000000000000002c00000000000000370102010000002c0104010000000000000001
*0e000000000000002c000000000000002e020100000029010206000000200000006f0000007600
*000065000000720000002001070104010000000000000000e4000000000000002c000000000000
*002e02020000002000000061010207000000200000007700000068000000650000007200000065
*0000002001040100000000000000010e000000000000002c000000000000002e02140000002000
*000069000000730000002000000074000000680000006500000020000000740000006f00000070
*00000020000000650000006c000000650000006d000000650000006e000000740000000a000000
*000000007903010204000000540000006800000065000000200104010000000000000000e30000
*00000000002c000000000000002d01020100000020010701020100000028010401000000000000
*00010f000000000000002c00000000000000370102010000002c01040100000000000000010e00
*0000000000002c000000000000002e020100000029010206000000200000006f00000076000000
*65000000720000002001070104010000000000000000e4000000000000002c000000000000002e
*020200000020000000610102070000002000000077000000680000006500000072000000650000
*002001040100000000000000010e000000000000002c000000000000002e021700000020000000
*69000000730000002000000074000000680000006500000020000000620000006f000000740000
*00740000006f0000006d00000020000000650000006c000000650000006d000000650000006e00
*0000740000000a000000000000007c030102040000005400000068000000650000002001040100
*00000000000000e3000000000000002c000000000000002d01020a000000200000006700000069
*00000076000000650000006e000000200000006200000079000000200107010201000000280104
*0100000000000000010d000000000000002c00000000000000370102010000002c010401000000
*000000000110000000000000002c000000000000003802010000002902010000000a0000000000
*00007f03010204000000540000006800000065000000200104010000000000000000e300000000
*0000002c000000000000002d010201000000200107010201000000280104010000000000000001
*0f000000000000002c00000000000000370102010000002c010401000000000000000111000000
*000000002c000000000000003802010000002902010000000a1300000000000000e60000000000
*0000e800000000000000e300000000000000030000000000000004000000000000007600000000
*0000007700000000000000780000000000000079000000000000007a000000000000007b000000
*000000007c000000000000007d000000000000007e000000000000007f00000000000000800000
*000000000081000000000000008200000000000000830e000000000000007f0000000000000080
*0000000000000081000000000000007c000000000000007d000000000000007e00000000000000
*79000000000000007a000000000000007b00000000000000820000000000000076000000000000
*007700000000000000780000000000000083000000000000000000000000000000160000010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c0110000000650000006b0000006d0000006500000074000000740000004000
*0000670000006d00000061000000690000006c0000002e000000630000006f0000006d02000000
*000000008403010202000000410000002001040100000000000000007500000000000000000000
*00000000001401020c000000200000007700000068000000690000006300000068000000200000
*006100000064000000640000007300000020010401000000000000000111000000000000002c00
*0000000000003801020500000020000000610000006e0000006400000020010401000000000000
*000110000000000000002c0000000000000038021900000020000000740000006f000000200000
*0061000000200000007000000072000000650000002d0000006500000078000000690000007300
*000074000000690000006e0000006700000020000000740000007900000070000000650000002e
*0000000a0000000000000088030102020000004100000020010401000000000000000075000000
*0000000000000000000000001401020d000000200000007500000073000000690000006e000000
*670000002000000061000000200000007400000079000000700000006501020100000027021d00
*000073000000200000006200000075000000690000006c000000740000002d000000690000006e
*00000020000000420000006f000000750000006e00000064000000650000006400000020000000
*690000006e0000007300000074000000610000006e00000063000000650000002e0000000a3100
*000000000000e600000000000000e700000000000000e800000000000000e300000000000000e9
*00000000000000ea00000000000000eb00000000000000ec00000000000000ed00000000000000
*ee00000000000000ef00000000000000f000000000000000f100000000000000f2000000000000
*00f300000000000000f400000000000000f500000000000000f600000000000000f70000000000
*0000f800000000000000f900000000000000fa00000000000000fb00000000000000fc00000000
*000000fd00000000000000fe00000000000000ff00000000000001000000000000000066000000
*00000000670000000000000069000000000000006a000000000000006b000000000000006c0000
*00000000006d000000000000006e000000000000006f0000000000000070000000000000007100
*000000000000730000000000000074000000000000007500000000000000840000000000000085
*000000000000008600000000000000870000000000000088000000000000008900000000000000
*8a0700000000000000880000000000000089000000000000008a00000000000000840000000000
*000087000000000000008600000000000000850000000000000000000000000000001700000000
*01000000000000008b010301020400000054000000680000006500000020010401000000000000
*000075000000000000000000000000000000140102010000002001070102010000002801040100
*000000000000010d000000000000002c00000000000000370102010000002c0104010000000000
*00000112000000000000002c0000000000000038020100000029010206000000200000006f0000
*007600000065000000720000002001070102010000006101020f00000020000000650000007800
*000074000000650000006e00000064000000650000006400000020000000770000006900000074
*0000006800000020040100000000000000008e0000000000000000000000000000001701020200
*00002e0000000a0102080000002000000020000000200000005700000068000000650000006e00
*000020010702010000006101024800000020000000680000006100000073000000200000006100
*0000200000004e000000750000006d00000020000000690000006e000000730000007400000061
*0000006e0000006300000065000000200000007700000069000000740000006800000020000000
*610000006e000000200000006100000064000000640000006900000074000000690000006f0000
*006e00000020000000740000006800000061000000740000002000000072000000650000007300
*00007000000065000000630000007400000073000000200000006f000000720000006400000065
*000000720000002c000000200000007400000068000000650000006e0000002000000074000000
*680000006900000073000000200000006900000073000000200000000a01025300000020000000
*20000000200000007400000072000000610000006e00000073000000660000006f000000720000
*006d000000650000006400000020000000690000006e000000740000006f000000200000006100
*00002000000074000000720000006f000000700000006900000063000000610000006c00000020
*00000073000000650000006d0000006900000072000000690000006e000000670000002e000000
*200000004900000074000000200000006900000073000000200000006100000073000000730000
*00750000006d000000650000006400000020000000740000006800000061000000740000002000
*00003000000020000000690000007300000020000000740000006800000065000000200000006c
*0000006500000061000000730000007400000020000000650000006c000000650000006d000000
*650000006e000000740000000a02090000002000000020000000200000006f0000006600000020
*000000610000002e0000000a03010c41000000680000007400000074000000700000003a000000
*2f0000002f00000068000000610000006c0000002e000000610000007200000063000000680000
*00690000007600000065000000730000002d0000006f0000007500000076000000650000007200
*00007400000065000000730000002e00000066000000720000002f000000640000006f00000063
*000000730000002f00000030000000300000002f00000031000000310000002f00000033000000
*370000002f00000037000000390000002f0000005000000044000000460000002f000000540000
*00720000006f000000700000006900000063000000610000006c0000002e000000700000006400
*00006602010000000a3000000000000000e600000000000000e700000000000000e80000000000
*0000e300000000000000e900000000000000ea00000000000000eb00000000000000ec00000000
*000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f1000000
*00000000f200000000000000f300000000000000f400000000000000f500000000000000f60000
*0000000000f700000000000000f800000000000000f900000000000000fa00000000000000fb00
*000000000000fc00000000000000fd00000000000000fe00000000000000ff0000000000000100
*000000000000000300000000000000040000000000000066000000000000006700000000000000
*69000000000000006a000000000000006b000000000000006c000000000000006d000000000000
*006e000000000000006f0000000000000070000000000000007100000000000000730000000000
*0000740000000000000075000000000000008b000000000000008c000000000000008d00000000
*0000008e04000000000000008e000000000000008b000000000000008c000000000000008d0000
*0000000000000000000000000039000108000000700000006f0000007200000074000000610000
*00620000006c00000065010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c0110000000650000006b0000006d00000065
*000000740000007400000040000000670000006d00000061000000690000006c0000002e000000
*630000006f0000006d002b00000000000000e600000000000000e700000000000000e800000000
*000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec000000
*00000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f10000
*0000000000f200000000000000f300000000000000f400000000000000f500000000000000f600
*000000000000f700000000000000f800000000000000f900000000000000fa00000000000000fb
*00000000000000fc00000000000000fd00000000000000fe00000000000000ff00000000000001
*000000000000000066000000000000006700000000000000680000000000000069000000000000
*006a000000000000006b000000000000006c000000000000006d000000000000006e0000000000
*00006f000000000000007000000000000000710000000000000072000000000000007300000000
*000000740000000000000000000000000000000018000108000000700000006f00000072000000
*7400000061000000620000006c00000065010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c011f000000450000006400
*000077000000610000007200000064000000200000004b0000006d000000650000007400000074
*000000200000003c000000650000006b0000006d00000065000000740000007400000040000000
*670000006d00000061000000690000006c0000002e000000630000006f0000006d0000003e0100
*0000000000008f0301021d0000004d000000690000006e000000690000006d000000610000006c
*00000020000000630000006f0000006d000000700000006c000000650000007400000065000000
*20000000640000006500000066000000690000006e0000006900000074000000690000006f0000
*006e0000003a000000200104010000000000000000900000000000000000000000000000001801
*0204000000200000006f0000007200000020010401000000000000000091000000000000000000
*0000000000001802010000000a2200000000000000e600000000000000e700000000000000e800
*000000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec
*00000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000
*f100000000000000f200000000000000f300000000000000f400000000000000f5000000000000
*00f600000000000000f700000000000000f800000000000000f900000000000000fa0000000000
*0000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff00000000
*0000010000000000000000660000000000000067000000000000008f0000000000000090000000
*0000000091000000000000009204000000000000008f0000000000000090000000000000009200
*0000000000009100000000000000000000000000000019000108000000700000006f0000007200
*00007400000061000000620000006c00000065010c000000650000007800000070000000650000
*0072000000690000006d000000650000006e00000074000000610000006c011000000065000000
*6b0000006d00000065000000740000007400000040000000670000006d00000061000000690000
*006c0000002e000000630000006f0000006d002400000000000000e600000000000000e7000000
*00000000e800000000000000e300000000000000e900000000000000ea00000000000000eb0000
*0000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000f000
*000000000000f100000000000000f200000000000000f300000000000000f400000000000000f5
*00000000000000f600000000000000f700000000000000f800000000000000f900000000000000
*fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe000000000000
*00ff000000000000010000000000000000660000000000000067000000000000008f0000000000
*000090000000000000009100000000000000920000000000000093000000000000009402000000
*000000009300000000000000940000000000000000000000000000001a00010800000070000000
*6f000000720000007400000061000000620000006c00000065010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011000
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d030000000000000095030222000000
*4d000000690000006e000000690000006d000000610000006c0000002000000064000000650000
*0066000000690000006e0000006900000074000000690000006f0000006e000000200000006f00
*0000760000006500000072000000200000006f0000007200000020000000670000007200000065
*0000006300000069000000700000000a00000000000000960b0102020000007800000020010201
*0000002f0202000000200000007900000000000000970b01020200000078000000200102010000
*00200201000000792f00000000000000e600000000000000e700000000000000e8000000000000
*00e300000000000000e900000000000000ea00000000000000eb00000000000000ec0000000000
*0000ed00000000000000ee00000000000000ef00000000000000f000000000000000f100000000
*000000f200000000000000f300000000000000f400000000000000f500000000000000f6000000
*00000000f700000000000000f800000000000000f900000000000000fa00000000000000fb0000
*0000000000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000
*0000000000006600000000000000670000000000000069000000000000006a000000000000006b
*000000000000006c000000000000006d000000000000006e000000000000006f00000000000000
*700000000000000071000000000000008f00000000000000900000000000000091000000000000
*009200000000000000950000000000000096000000000000009700000000000000980400000000
*000000950000000000000096000000000000009700000000000000980000000000000000000000
*000000001b000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c0110000000650000006b0000006d00000065000000740000007400
*000040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d
*002600000000000000e600000000000000e700000000000000e800000000000000e30000000000
*0000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed00000000
*000000ee00000000000000ef00000000000000f000000000000000f100000000000000f2000000
*00000000f300000000000000f400000000000000f500000000000000f600000000000000f70000
*0000000000f800000000000000f900000000000000fa00000000000000fb00000000000000fc00
*000000000000fd00000000000000fe00000000000000ff00000000000001000000000000000066
*00000000000000670000000000000068000000000000008f000000000000009000000000000000
*9100000000000000920000000000000099000000000000009a000000000000009b030000000000
*000099000000000000009a000000000000009b0000000000000000000000000000001c00010800
*0000700000006f000000720000007400000061000000620000006c00000065010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d003700000000000000
*e600000000000000e700000000000000e800000000000000e300000000000000e9000000000000
*00ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee0000000000
*0000ef00000000000000f000000000000000f100000000000000f200000000000000f300000000
*000000f400000000000000f500000000000000f600000000000000f700000000000000f8000000
*00000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd0000
*0000000000fe00000000000000ff00000000000001000000000000000066000000000000006700
*000000000000680000000000000069000000000000006a000000000000006b000000000000006c
*000000000000006d000000000000006e000000000000006f000000000000007000000000000000
*710000000000000072000000000000008f00000000000000900000000000000091000000000000
*009200000000000000950000000000000096000000000000009700000000000000980000000000
*000099000000000000009a000000000000009b000000000000009c000000000000009d00000000
*0000009e03000000000000009c000000000000009d000000000000009e00000000000000000000
*00000000001d00011e000000700000006f000000720000007400000061000000620000006c0000
*00650000002000000028000000690000006e0000007300000074000000610000006e0000006300
*0000650000007300000020000000750000007300000065000000200000004d0000005000000054
*000000430000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c0110000000650000006b0000006d0000
*0065000000740000007400000040000000670000006d00000061000000690000006c0000002e00
*0000630000006f0000006d002f00000000000000e600000000000000e700000000000000e80000
*0000000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec00
*000000000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f1
*00000000000000f200000000000000f300000000000000f400000000000000f500000000000000
*f600000000000000f700000000000000f800000000000000f900000000000000fa000000000000
*00fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000000000
*000100000000000000006600000000000000670000000000000069000000000000006a00000000
*0000006b000000000000006c000000000000006d000000000000006e000000000000006f000000
*000000007000000000000000710000000000000073000000000000007400000000000000750000
*00000000008f000000000000009000000000000000910000000000000092000000000000009f01
*000000000000009f0000000000000000000000000000001e0001140000006e0000006f0000006e
*0000002d000000700000006f000000720000007400000061000000620000006c00000065000000
*20000000280000004d0000005000000054000000430000007300000029010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c0110000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d003200000000000000e600
*000000000000e700000000000000e800000000000000e300000000000000e900000000000000ea
*00000000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000
*ef00000000000000f000000000000000f100000000000000f200000000000000f3000000000000
*00f400000000000000f500000000000000f600000000000000f700000000000000f80000000000
*0000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd00000000
*000000fe00000000000000ff000000000000010000000000000000660000000000000067000000
*0000000069000000000000006a000000000000006b000000000000006c000000000000006d0000
*00000000006e000000000000006f00000000000000700000000000000071000000000000007300
*000000000000740000000000000075000000000000008f00000000000000900000000000000091
*0000000000000092000000000000009f00000000000000a000000000000000a100000000000000
*a20300000000000000a000000000000000a100000000000000a200000000000000000000000000
*00001f0001140000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c0000006500000020000000280000004d000000500000005400000043
*0000007300000029010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d003200000000000000e600000000000000e700000000000000e8000000000000
*00e300000000000000e900000000000000ea00000000000000eb00000000000000ec0000000000
*0000ed00000000000000ee00000000000000ef00000000000000f000000000000000f100000000
*000000f200000000000000f300000000000000f400000000000000f500000000000000f6000000
*00000000f700000000000000f800000000000000f900000000000000fa00000000000000fb0000
*0000000000fc00000000000000fd00000000000000fe00000000000000ff000000000000010000
*0000000000006600000000000000670000000000000069000000000000006a000000000000006b
*000000000000006c000000000000006d000000000000006e000000000000006f00000000000000
*700000000000000071000000000000007300000000000000740000000000000075000000000000
*008f000000000000009000000000000000910000000000000092000000000000009f0000000000
*0000a300000000000000a400000000000000a50300000000000000a300000000000000a4000000
*00000000a50000000000000000000000000000002000013f0000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000004d000000500000005400000043000000730000002c00000020000000730000006300
*00006f000000700000006500000064000000200000007400000079000000700000006500000073
*0000002c00000020000000650000006d0000007000000074000000790000002000000064000000
*65000000630000006c000000730000002c00000020000000740000007900000070000000650000
*00200000006f00000070000000650000007200000061000000740000006f000000720000007300
*000029010c0000006500000078000000700000006500000072000000690000006d000000650000
*006e00000074000000610000006c011f0000004500000064000000770000006100000072000000
*64000000200000004b0000006d000000650000007400000074000000200000003c000000650000
*006b0000006d00000065000000740000007400000040000000670000006d000000610000006900
*00006c0000002e000000630000006f0000006d0000003e003400000000000000e6000000000000
*00e700000000000000e800000000000000e300000000000000e900000000000000ea0000000000
*0000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000
*000000f000000000000000f100000000000000f200000000000000f300000000000000f4000000
*00000000f500000000000000f600000000000000f700000000000000f800000000000000f90000
*0000000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00
*000000000000ff0000000000000100000000000000006600000000000000670000000000000069
*000000000000006a000000000000006b000000000000006c000000000000006d00000000000000
*6e000000000000006f000000000000007000000000000000710000000000000073000000000000
*00740000000000000075000000000000008f000000000000009000000000000000910000000000
*000092000000000000009f00000000000000a600000000000000a700000000000000a800000000
*000000a900000000000000aa0500000000000000a800000000000000a900000000000000a60000
*0000000000a700000000000000aa000000000000000000000000000000210001140000006e0000
*006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c00
*00006500000020000000280000004d0000005000000054000000430000007300000029010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c0110000000650000006b0000006d000000650000007400000074000000400000
*00670000006d00000061000000690000006c0000002e000000630000006f0000006d0300000000
*000000ab0b021e000000200000002800000078000000200000002a0000002e000000200000006d
*00000029000000200000002e0000002a0000002000000079000000200000003d00000020000000
*78000000200000002a0000002e00000020000000280000006d000000200000002e0000002a0000
*0020000000790000002900000000000000ac0b021c00000020000000280000006d000000200000
*002e0000002a000000200000007800000029000000200000002a00000020000000790000002000
*00003d000000200000006d000000200000002e0000002a00000020000000280000007800000020
*0000002a00000020000000790000002900000000000000ae0b021c000000200000002800000078
*000000200000002a000000200000007900000029000000200000002a0000002e00000020000000
*6d000000200000003d0000002000000078000000200000002a0000002000000028000000790000
*00200000002a0000002e000000200000006d000000293400000000000000e600000000000000e7
*00000000000000e800000000000000e300000000000000e900000000000000ea00000000000000
*eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000000000
*00f000000000000000f100000000000000f200000000000000f300000000000000f40000000000
*0000f500000000000000f600000000000000f700000000000000f800000000000000f900000000
*000000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe000000
*00000000ff00000000000001000000000000000066000000000000006700000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000006e00
*0000000000006f0000000000000070000000000000007100000000000000730000000000000074
*0000000000000075000000000000008f0000000000000090000000000000009100000000000000
*92000000000000009f00000000000000ab00000000000000ac00000000000000ad000000000000
*00ae00000000000000af0500000000000000ae00000000000000af00000000000000ac00000000
*000000ad00000000000000ab000000000000000000000000000000220001140000006e0000006f
*0000006e0000002d000000700000006f000000720000007400000061000000620000006c000000
*6500000020000000280000004d0000005000000054000000430000007300000029010c00000065
*00000078000000700000006500000072000000690000006d000000650000006e00000074000000
*610000006c0110000000650000006b0000006d0000006500000074000000740000004000000067
*0000006d00000061000000690000006c0000002e000000630000006f0000006d04000000000000
*00b003010203000000690000006600000020010702010000006d01020600000020000000690000
*00730000002000000061000000200104010000000000000000ab00000000000000000000000000
*000021010206000000200000006f00000076000000650000007200000020010702010000007201
*020500000020000000610000006e00000064000000200107020100000066010206000000200000
*006900000073000000200000006100000020010401000000000000000113000000000000002c00
*0000000000003a010206000000200000007400000068000000650000006e000000200107010202
*00000066000000200104020000000000000000b100000000000000000000000000000022000000
*0000000000b0000000000000000000000000000000220202000000200000006d01020600000020
*00000069000000730000002000000061000000200104010000000000000000ab00000000000000
*000000000000000021010206000000200000006f00000076000000650000007200000020010702
*010000007202090000002000000061000000730000002000000077000000650000006c0000006c
*0000000a00000000000000b30301020200000041000000200104020000000000000000b4000000
*000000000000000000000000220000000000000000b30000000000000000000000000000002201
*020b000000200000007400000075000000720000006e0000007300000020000000610000006e00
*00007900000020010401000000000000000114000000000000002c000000000000003a01021100
*000020000000690000006e0000007300000074000000610000006e000000630000006500000020
*000000690000006e000000740000006f0000002000000061000000200104010000000000000000
*e3000000000000002c000000000000002d0102020000002e0000000a0102160000002000000020
*00000020000000490000007400000020000000610000006c000000730000006f00000020000000
*70000000720000006f000000760000006900000064000000650000007300000020000000610000
*002001040100000000000000006f00000000000000000000000000000011010211000000200000
*00690000006e0000007300000074000000610000006e0000006300000065000000200000006600
*00006f0000007200000020000000610000006e0000002001040100000000000000011300000000
*0000002c000000000000003a01021a0000002000000066000000750000006e0000006300000074
*0000006f0000007200000020000000770000007200000061000000700000007000000065000000
*640000002000000061000000720000006f000000750000006e0000006400000020000000610000
*00200104010000000000000000e3000000000000002c000000000000002d0102010000000a0102
*18000000200000002000000020000000610000006e000000640000002000000061000000730000
*007300000065000000720000007400000073000000200000007400000068000000610000007400
*000020000000610000006e0000007900000020010401000000000000000114000000000000002c
*000000000000003a01020e000000200000006100000070000000700000006c0000006900000065
*0000006400000020000000740000006f0000002000000061000000200104010000000000000000
*e3000000000000002c000000000000002d01020900000020000000660000006f00000072000000
*6d0000007300000020000000610000002001040100000000000000007300000000000000000000
*000000000013010202000000200000000a021b000000200000002000000020000000750000006e
*000000640000006500000072000000200000007400000068000000650000007300000065000000
*200000006f0000007000000065000000720000006100000074000000690000006f0000006e0000
*00730000002e0000000a00000000000000b6030102020000004100000020010402000000000000
*0000b7000000000000000000000000000000220000000000000000b60000000000000000000000
*000000002201021800000020000000750000007300000065000000730000002000000061000000
*6e00000020000000670000006c00000075000000650000007300000020000000740000006f0000
*006700000065000000740000006800000065000000720000002001040100000000000000011300
*0000000000002c000000000000003a010213000000200000006100000063000000740000006900
*00006f0000006e0000007300000020000000770000006900000074000000680000002000000028
*0000002a0000003e000000290000000a010214000000200000002000000020000000690000006e
*00000020000000740000006800000065000000200000006d000000610000006e0000006e000000
*6500000072000000200000006f0000006600000020010209000000740000007200000061000000
*76000000650000007200000073000000650000005f010206000000200000006600000072000000
*6f0000006d0000002001050d000000440000006100000074000000610000002e00000046000000
*6f0000006c0000006400000061000000620000006c0000006501021a0000002e00000020000000
*410000006e000000790000002000000076000000610000006c0000007500000065000000730000
*002000000072000000650000007400000075000000720000006e00000065000000640000002000
*00006200000079000000200000000a022200000020000000200000002000000072000000650000
*006400000075000000630000006500000064000000200000006100000063000000740000006900
*00006f0000006e0000007300000020000000610000007200000065000000200000006400000069
*000000730000006300000061000000720000006400000065000000640000002e0000000a000000
*00000000b903010232000000450000006600000066000000690000006300000069000000650000
*006e000000740000006c000000790000002000000061000000760000006f000000690000006400
*0000200000006e0000006500000065000000640000006c0000006500000073000000730000006c
*0000007900000020000000720000006500000062000000690000006e0000006400000069000000
*6e00000067000000200000007700000068000000650000006e0000002000000075000000730000
*00690000006e000000670000002001040100000000000000000500000000000000000000000000
*000001010226000000200000006f0000006e00000020000000610000006e000000200000006100
*00006300000074000000690000006f0000006e0000002000000074000000680000006100000074
*00000020000000610000006c000000720000006500000061000000640000007900000020000000
*72000000650000007400000075000000720000006e000000730000002000000028000000290000
*000a023b0000002000000020000000200000004100000020000000720000006500000077000000
*720000006900000074000000650000002000000072000000750000006c00000065000000200000
*006100000075000000740000006f0000006d000000610000007400000069000000630000006100
*00006c0000006c00000079000000200000006100000070000000700000006c0000006900000065
*000000730000002000000074000000680000006900000073000000200000007700000068000000
*650000006e00000020000000700000006f000000730000007300000069000000620000006c0000
*00650000000a4900000000000000e600000000000000e700000000000000e800000000000000e3
*00000000000000e900000000000000ea00000000000000eb00000000000000ec00000000000000
*ed00000000000000ee00000000000000ef00000000000000f000000000000000f1000000000000
*00f200000000000000f300000000000000f400000000000000f500000000000000f60000000000
*0000f700000000000000f800000000000000f900000000000000fa00000000000000fb00000000
*000000fc00000000000000fd00000000000000fe00000000000000ff0000000000000100000000
*000000000000000000000000010000000000000002000000000000000300000000000000040000
*000000000005000000000000000600000000000000070000000000000008000000000000000900
*0000000000000a000000000000006600000000000000670000000000000069000000000000006a
*000000000000006b000000000000006c000000000000006d000000000000006e00000000000000
*6f0000000000000070000000000000007100000000000000730000000000000074000000000000
*0075000000000000008f0000000000000090000000000000009100000000000000920000000000
*00009f00000000000000ab00000000000000ac00000000000000ad00000000000000ae00000000
*000000af00000000000000b000000000000000b100000000000000b200000000000000b3000000
*00000000b400000000000000b500000000000000b600000000000000b700000000000000b80000
*0000000000b90a00000000000000b600000000000000b700000000000000b800000000000000b3
*00000000000000b400000000000000b500000000000000b000000000000000b100000000000000
*b200000000000000b9000000000000000000000000000000230001140000006e0000006f000000
*6e0000002d000000700000006f000000720000007400000061000000620000006c000000650000
*0020000000280000004d0000005000000054000000430000007300000029010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c0110000000650000006b0000006d0000006500000074000000740000004000000067000000
*6d00000061000000690000006c0000002e000000630000006f0000006d0400000000000000ba03
*010203000000690000006600000020010702010000006d01020600000020000000690000007300
*00002000000061000000200104010000000000000000ab00000000000000000000000000000021
*010206000000200000006f00000076000000650000007200000020010702010000007201020500
*000020000000610000006e00000064000000200107020100000066010206000000200000006900
*000073000000200000006100000020010401000000000000000115000000000000002c00000000
*0000003b010206000000200000007400000068000000650000006e000000200107010202000000
*66000000200104020000000000000000bb00000000000000000000000000000023000000000000
*0000ba000000000000000000000000000000230202000000200000006d01020600000020000000
*69000000730000002000000061000000200104010000000000000000ab00000000000000000000
*00000000002102090000002000000061000000730000002000000077000000650000006c000000
*6c0000000a00000000000000bd0301020200000041000000200104020000000000000000be0000
*00000000000000000000000000230000000000000000bd00000000000000000000000000000023
*01020b000000200000007400000075000000720000006e0000007300000020000000610000006e
*0000007900000020010401000000000000000116000000000000002c000000000000003b010211
*00000020000000690000006e0000007300000074000000610000006e0000006300000065000000
*20000000690000006e000000740000006f00000020000000610000002001040100000000000000
*00e3000000000000002c000000000000002d0102020000002e0000000a01021600000020000000
*2000000020000000490000007400000020000000610000006c000000730000006f000000200000
*0070000000720000006f0000007600000069000000640000006500000073000000200000006100
*00002001040100000000000000006f000000000000000000000000000000110102100000002000
*0000690000006e0000007300000074000000610000006e00000063000000650000002000000066
*0000006f0000007200000020000000610000002001040100000000000000011500000000000000
*2c000000000000003b010212000000200000007700000072000000610000007000000070000000
*65000000640000002000000061000000720000006f000000750000006e00000064000000200000
*0061000000200104010000000000000000e3000000000000002c000000000000002d0102010000
*000a010218000000200000002000000020000000610000006e0000006400000020000000610000
*007300000073000000650000007200000074000000730000002000000074000000680000006100
*00007400000020000000610000006e000000790000002001040100000000000000011600000000
*0000002c000000000000003b01020e000000200000006100000070000000700000006c00000069
*000000650000006400000020000000740000006f00000020000000610000002001040100000000
*00000000e3000000000000002c000000000000002d01020900000020000000660000006f000000
*720000006d00000073000000200000006100000020010401000000000000000073000000000000
*00000000000000000013010202000000200000000a021b00000020000000200000002000000075
*0000006e0000006400000065000000720000002000000074000000680000006500000073000000
*65000000200000006f0000007000000065000000720000006100000074000000690000006f0000
*006e000000730000002e0000000a00000000000000c003010203000000410000006e0000002001
*04020000000000000000c1000000000000000000000000000000230000000000000000c0000000
*000000000000000000000000230102150000002000000075000000730000006500000073000000
*20000000670000006c00000075000000650000007300000020000000740000006f000000670000
*006500000074000000680000006500000072000000200104010000000000000001150000000000
*00002c000000000000003b01021300000020000000610000006300000074000000690000006f00
*00006e00000073000000200000007700000069000000740000006800000020000000280000003e
*0000003e000000290000000a010214000000200000002000000020000000690000006e00000020
*000000740000006800000065000000200000006d000000610000006e0000006e00000065000000
*72000000200000006f0000006600000020010401000000000000000117000000000000002c0000
*00000000003b0102060000002000000066000000720000006f0000006d0000002001050d000000
*440000006100000074000000610000002e000000460000006f0000006c00000064000000610000
*00620000006c0000006501021a0000002e00000020000000410000006e00000079000000200000
*0076000000610000006c0000007500000065000000730000002000000072000000650000007400
*000075000000720000006e0000006500000064000000200000006200000079000000200000000a
*022200000020000000200000002000000072000000650000006400000075000000630000006500
*00006400000020000000610000006300000074000000690000006f0000006e0000007300000020
*000000610000007200000065000000200000006400000069000000730000006300000061000000
*720000006400000065000000640000002e0000000a00000000000000c303010232000000450000
*006600000066000000690000006300000069000000650000006e000000740000006c0000007900
*00002000000061000000760000006f0000006900000064000000200000006e0000006500000065
*000000640000006c0000006500000073000000730000006c000000790000002000000072000000
*6500000062000000690000006e00000064000000690000006e0000006700000020000000770000
*0068000000650000006e000000200000007500000073000000690000006e000000670000002001
*040100000000000000000500000000000000000000000000000001010226000000200000006f00
*00006e00000020000000610000006e00000020000000610000006300000074000000690000006f
*0000006e000000200000007400000068000000610000007400000020000000610000006c000000
*720000006500000061000000640000007900000020000000720000006500000074000000750000
*00720000006e000000730000002000000028000000290000000a023b0000002000000020000000
*200000004100000020000000720000006500000077000000720000006900000074000000650000
*002000000072000000750000006c00000065000000200000006100000075000000740000006f00
*00006d00000061000000740000006900000063000000610000006c0000006c0000007900000020
*0000006100000070000000700000006c0000006900000065000000730000002000000074000000
*680000006900000073000000200000007700000068000000650000006e00000020000000700000
*006f000000730000007300000069000000620000006c000000650000000a3e00000000000000e6
*00000000000000e700000000000000e800000000000000e300000000000000e900000000000000
*ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee000000000000
*00ef00000000000000f000000000000000f100000000000000f200000000000000f30000000000
*0000f400000000000000f500000000000000f600000000000000f700000000000000f800000000
*000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd000000
*00000000fe00000000000000ff0000000000000100000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000005000000000000000600
*0000000000000700000000000000080000000000000009000000000000000a0000000000000066
*00000000000000670000000000000069000000000000006a000000000000006b00000000000000
*6c000000000000006d000000000000006e000000000000006f0000000000000070000000000000
*00710000000000000073000000000000007400000000000000ba00000000000000bb0000000000
*0000bc00000000000000bd00000000000000be00000000000000bf00000000000000c000000000
*000000c100000000000000c200000000000000c30a00000000000000c000000000000000c10000
*0000000000c200000000000000c300000000000000bd00000000000000be00000000000000bf00
*000000000000ba00000000000000bb00000000000000bc00000000000000000000000000000024
*0001230000006e0000006f0000006e0000002d000000700000006f000000720000007400000061
*000000620000006c00000065000000200000002800000074000000790000007000000065000000
*2000000066000000610000006d000000690000006c0000006900000065000000730000002c0000
*00200000004d0000005000000054000000430000007300000029010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c0110
*000000650000006b0000006d00000065000000740000007400000040000000670000006d000000
*61000000690000006c0000002e000000630000006f0000006d1500000000000000c4010301020c
*000000450000006600000066000000690000006300000069000000650000006e00000074000000
*6c000000790000002001040100000000000000002a000000000000000000000000000000060102
*030000002000000061000000200104010000000000000000280000000000000000000000000000
*000601020b000000200000007500000073000000690000006e0000006700000020000000740000
*006800000065000000200104020000000000000000b70000000000000000000000000000002200
*00000000000000b600000000000000000000000000000022010234000000200000006d0000006f
*0000006e0000006f00000069000000640000002e00000020000000410000002000000073000000
*70000000650000006300000069000000610000006c000000690000007a00000065000000640000
*002000000076000000650000007200000073000000690000006f0000006e000000200000006f00
*00006600000020000000690000007400000073000000200000006e000000610000006d00000065
*00000073000000610000006b000000650000002000000066000000720000006f0000006d000000
*2001050d000000440000006100000074000000610000002e000000460000006f0000006c000000
*6400000061000000620000006c0000006502010000000a0b0102010000000a0102050000002000
*00002000000020000000200000002001040100000000000000002a000000000000000000000000
*00000006010201000000200104010000000000000000b800000000000000000000000000000022
*0102010000000a020000000000000000c50103010221000000430000006f0000006e0000007600
*0000650000006e00000069000000650000006e0000006300000065000000200000006600000075
*0000006e0000006300000074000000690000006f0000006e000000200000006100000073000000
*20000000660000006f000000750000006e0000006400000020000000690000006e000000200105
*0d000000440000006100000074000000610000002e000000460000006f0000006c000000640000
*0061000000620000006c0000006502010000000a0b0102010000000a0102050000002000000020
*000000200000002000000020010401000000000000000118000000000000002c00000000000000
*38010201000000200104010000000000000000c400000000000000000000000000000024010201
*0000000a020000000000000000c601030102310000005400000068000000650000002000000073
*000000750000006d000000200000006f0000006600000020000000610000002000000063000000
*6f0000006c0000006c000000650000006300000074000000690000006f0000006e000000200000
*006f0000006600000020000000610000006300000074000000690000006f0000006e0000007300
*00002c0000002000000067000000650000006e0000006500000072000000610000006c00000069
*0000007a000000690000006e000000670000002001040100000000000000011900000000000000
*2c000000000000003c02010000000a0b0102010000000a01020400000020000000200000002000
*00002001040100000000000000002f000000000000000000000000000000060102010000002001
*04010000000000000000b5000000000000000000000000000000220102010000000a0200000000
*00000000c7010301020c0000004500000066000000660000006900000063000000690000006500
*00006e000000740000006c000000790000002001040100000000000000002a0000000000000000
*000000000000000601020300000020000000610000002001040100000000000000002800000000
*00000000000000000000000601020b000000200000007500000073000000690000006e00000067
*00000020000000740000006800000065000000200104020000000000000000c100000000000000
*0000000000000000230000000000000000c0000000000000000000000000000000230102340000
*00200000006d0000006f0000006e0000006f00000069000000640000002e000000200000004100
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*00000065000000640000002000000076000000650000007200000073000000690000006f000000
*6e000000200000006f0000006600000020000000690000007400000073000000200000006e0000
*00610000006d0000006500000073000000610000006b0000006500000020000000660000007200
*00006f0000006d0000002001050d000000440000006100000074000000610000002e0000004600
*00006f0000006c0000006400000061000000620000006c00000065010205000000200000006100
*00006e000000640000002001050d000000430000006f0000006e00000074000000720000006f00
*00006c0000002e0000004d0000006f0000006e000000610000006402010000000a0b0102010000
*000a0102040000002000000020000000200000002001040100000000000000002e000000000000
*00000000000000000006010201000000200104010000000000000000c200000000000000000000
*0000000000230102010000000a020000000000000000c80103010221000000430000006f000000
*6e00000076000000650000006e00000069000000650000006e0000006300000065000000200000
*0066000000750000006e0000006300000074000000690000006f0000006e000000200000006100
*00007300000020000000660000006f000000750000006e0000006400000020000000690000006e
*0000002001050d000000440000006100000074000000610000002e000000460000006f0000006c
*0000006400000061000000620000006c0000006501020500000020000000610000006e00000064
*0000002001050d000000430000006f0000006e00000074000000720000006f0000006c0000002e
*0000004d0000006f0000006e000000610000006402010000000a0b0102010000000a0102050000
*002000000020000000200000002000000020010401000000000000000118000000000000002c00
*00000000000038010201000000200104010000000000000000c700000000000000000000000000
*0000240102010000000a020000000000000000c901030102310000005400000068000000650000
*002000000073000000750000006d000000200000006f0000006600000020000000610000002000
*0000630000006f0000006c0000006c000000650000006300000074000000690000006f0000006e
*000000200000006f0000006600000020000000610000006300000074000000690000006f000000
*6e000000730000002c0000002000000067000000650000006e0000006500000072000000610000
*006c000000690000007a000000690000006e000000670000002001040100000000000000011900
*0000000000002c000000000000003c02010000000a0b0102010000000a01020500000020000000
*2000000020000000200000002001040100000000000000002f0000000000000000000000000000
*0006010201000000200104010000000000000000bf000000000000000000000000000000230102
*010000000a020000000000000000ca010301020c00000045000000660000006600000069000000
*6300000069000000650000006e000000740000006c000000790000002001040100000000000000
*002a00000000000000000000000000000006010203000000200000006100000020010401000000
*0000000000280000000000000000000000000000000601020b0000002000000075000000730000
*00690000006e000000670000002000000074000000680000006500000020010402000000000000
*000047000000000000000000000000000000090000000000000000460000000000000000000000
*0000000009010234000000200000006d0000006f0000006e0000006f0000006900000064000000
*2e0000002000000041000000200000007300000070000000650000006300000069000000610000
*006c000000690000007a0000006500000064000000200000007600000065000000720000007300
*0000690000006f0000006e000000200000006f0000006600000020000000690000007400000073
*000000200000006e000000610000006d0000006500000073000000610000006b00000065000000
*2000000066000000720000006f0000006d0000002001050d000000440000006100000074000000
*610000002e000000460000006f0000006c0000006400000061000000620000006c000000650201
*0000000a0b0102010000000a010205000000200000002000000020000000200000002001040100
*000000000000002e00000000000000000000000000000006010201000000200104010000000000
*00000048000000000000000000000000000000090102010000000a020000000000000000cb0301
*021700000054000000790000007000000065000000200000007300000070000000650000006300
*000069000000610000006c000000690000007a0000006100000074000000690000006f0000006e
*000000200000006f0000006600000020010507000000660000006f0000006c000000640000004d
*000000610000007002070000002000000061000000620000006f00000076000000650000000a00
*000000000000cc010301020c000000450000006600000066000000690000006300000069000000
*650000006e000000740000006c000000790000002001040100000000000000002d000000000000
*000000000000000000060102030000002000000061000000200104010000000000000000280000
*000000000000000000000000000601020b000000200000007500000073000000690000006e0000
*006700000020000000740000006800000065000000200104020000000000000000470000000000
*000000000000000000000900000000000000004600000000000000000000000000000009010234
*000000200000006d0000006f0000006e0000006f00000069000000640000002e00000020000000
*41000000200000007300000070000000650000006300000069000000610000006c000000690000
*007a00000065000000640000002000000076000000650000007200000073000000690000006f00
*00006e000000200000006f0000006600000020000000690000007400000073000000200000006e
*000000610000006d0000006500000073000000610000006b000000650000002000000066000000
*720000006f0000006d0000002001050d000000440000006100000074000000610000002e000000
*460000006f0000006c0000006400000061000000620000006c0000006502010000000a0b010201
*0000000a010205000000200000002000000020000000200000002001040100000000000000002f
*000000000000000000000000000000060102010000002001040100000000000000004800000000
*0000000000000000000000090102010000000a020000000000000000cd0301020c000000430000
*006f0000006e0000007600000065000000720000007400000020000000610000006e0000007900
*0000200104010000000000000000280000000000000000000000000000000601022e0000002000
*0000740000006f0000002000000061000000200000006c00000069000000730000007400000020
*0000006f000000660000002000000069000000740000007300000020000000630000006f000000
*6e00000074000000650000006e00000074000000730000002e0000002000000053000000700000
*00650000006300000069000000610000006c000000690000007a00000061000000740000006900
*00006f0000006e000000200000006f000000660000002001040100000000000000002d00000000
*00000000000000000000000602010000000a00000000000000ce010301020c0000004500000066
*00000066000000690000006300000069000000650000006e000000740000006c00000079000000
*2001040100000000000000002d0000000000000000000000000000000601020300000020000000
*61000000200104010000000000000000280000000000000000000000000000000601021e000000
*200000007400000068000000610000007400000020000000630000006f0000006e000000740000
*0061000000690000006e000000730000002000000076000000610000006c000000750000006500
*000073000000200000006f00000066000000200000007400000079000000700000006500000020
*01040100000000000000011a0000000000000031000000000000003d02010000000a0b01020100
*00000a010205000000200000002000000020000000200000002001040100000000000000002f00
*000000000000000000000000000006010201000000200104010000000000000000ef0000000000
*00002c000000000000002d0102010000000a020000000000000000cf010301020c000000450000
*006600000066000000690000006300000069000000650000006e000000740000006c0000007900
*00002001040100000000000000002d000000000000000000000000000000060102030000002000
*000061000000200104010000000000000000280000000000000000000000000000000601021e00
*0000200000007400000068000000610000007400000020000000630000006f0000006e00000074
*00000061000000690000006e000000730000002000000076000000610000006c00000075000000
*6500000073000000200000006f0000006600000020000000740000007900000070000000650000
*002001040100000000000000011a0000000000000031000000000000003d02010000000a0b0102
*010000000a01020500000020000000200000002000000020000000200104010000000000000000
*2f00000000000000000000000000000006010201000000200104010000000000000000f2000000
*000000002c000000000000002d0102010000000a020000000000000000d0010301020c00000045
*0000006600000066000000690000006300000069000000650000006e000000740000006c000000
*790000002001040100000000000000002a00000000000000000000000000000006010205000000
*20000000610000006e000000790000002001040100000000000000002800000000000000000000
*000000000006024300000020000000630000006800000065000000630000006b00000069000000
*6e0000006700000020000000740000006f00000020000000730000006500000065000000200000
*00690000006600000020000000610000006e00000079000000200000006f000000660000002000
*00006900000074000000730000002000000076000000610000006c000000750000006500000073
*000000200000006d00000061000000740000006300000068000000200000007400000068000000
*6500000020000000730000007500000070000000700000006c0000006900000065000000640000
*002000000070000000720000006500000064000000690000006300000061000000740000006500
*00000a0b0102010000000a01020500000020000000200000002000000020000000200104010000
*0000000000002e0000000000000000000000000000000601020100000020010401000000000000
*0000f2000000000000002c000000000000002d0102010000000a020000000000000000d1010301
*020c000000450000006600000066000000690000006300000069000000650000006e0000007400
*00006c000000790000002001040100000000000000002a00000000000000000000000000000006
*01020500000020000000610000006e000000790000002001040100000000000000002800000000
*000000000000000000000006024300000020000000630000006800000065000000630000006b00
*0000690000006e0000006700000020000000740000006f00000020000000730000006500000065
*00000020000000690000006600000020000000610000006c0000006c000000200000006f000000
*66000000200000006900000074000000730000002000000076000000610000006c000000750000
*006500000073000000200000006d00000061000000740000006300000068000000200000007400
*0000680000006500000020000000730000007500000070000000700000006c0000006900000065
*000000640000002000000070000000720000006500000064000000690000006300000061000000
*74000000650000000a0b0102010000000a01020500000020000000200000002000000020000000
*2001040100000000000000002e0000000000000000000000000000000601020100000020010401
*0000000000000000ef000000000000002c000000000000002d0102010000000a02000000000000
*0000d2010301022800000045000000660000006600000069000000630000006900000065000000
*6e000000740000006c000000790000002000000073000000750000006d000000200000006f0000
*0076000000650000007200000020000000740000006800000065000000200000006d0000006500
*00006d00000062000000650000007200000073000000200000006f000000660000002000000061
*0000006e0000007900000020010401000000000000000028000000000000000000000000000000
*0602010000000a0b0102010000000a010205000000200000002000000020000000200000002001
*040100000000000000002f00000000000000000000000000000006010201000000200104010000
*000000000000f5000000000000002c000000000000002d0102010000000a020000000000000000
*d30103010232000000450000006600000066000000690000006300000069000000650000006e00
*0000740000006c000000790000002000000074000000610000006b000000650000002000000074
*00000068000000650000002000000070000000720000006f000000640000007500000063000000
*74000000200000006f000000660000002000000065000000760000006500000072000000790000
*00200000006d000000650000006d000000620000006500000072000000200000006f0000006600
*000020000000610000002001040100000000000000002800000000000000000000000000000006
*02010000000a0b0102010000000a01020500000020000000200000002000000020000000200104
*0100000000000000002f0000000000000000000000000000000601020100000020010401000000
*0000000000f8000000000000002c000000000000002d0102010000000a020000000000000000d4
*03010210000000430000006800000065000000630000006b00000020000000740000006f000000
*200000007300000065000000650000002000000069000000660000002001040100000000000000
*00d00000000000000000000000000000002401020f000000200000006d000000650000006d0000
*00620000006500000072000000200000006f000000660000002000000074000000680000006500
*00002001040100000000000000002800000000000000000000000000000006021c000000200000
*006d00000061000000740000006300000068000000650000007300000020000000740000006800
*00006500000020000000730000007500000070000000700000006c000000690000006500000064
*0000002000000076000000610000006c00000075000000650000000a00000000000000d5030102
*42000000430000006800000065000000630000006b00000020000000740000006f000000200000
*006d000000610000006b0000006500000020000000730000007500000072000000650000002000
*000074000000680000006100000074000000200000007400000068000000650000002000000073
*0000007500000070000000700000006c0000006900000065000000640000002000000076000000
*610000006c0000007500000065000000200000006900000073000000200000006e0000006f0000
*00740000002000000061000000200000006d000000650000006d00000062000000650000007200
*0000200000006f0000006600000020000000740000006800000065000000200104010000000000
*000000280000000000000000000000000000000602010000000a00000000000000d60301020c00
*0000450000006600000066000000690000006300000069000000650000006e000000740000006c
*000000790000002001040100000000000000002a0000000000000000000000000000000601021f
*000000200000006100000020000000730000007500000062000000730000006500000074000000
*200000006f000000660000002000000074000000680000006500000020000000650000006c0000
*00650000006d000000650000006e000000740000007300000020000000690000006e0000002000
*000061000000200104010000000000000000280000000000000000000000000000000602010000
*000a00000000000000d703026a000000410000006c0000006c0000006f00000077000000730000
*00200000006900000064000000690000006f0000006d0000006100000074000000690000006300
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*0000006100000074000000690000006f0000006e000000200000006f0000006600000020000000
*66000000690000006c000000740000006500000072000000200000006200000079000000200000
*0070000000720000006f00000076000000690000006e0000006700000020000000610000002000
*000066000000750000006e0000006300000074000000690000006f0000006e0000002000000074
*0000006800000061000000740000002000000077000000690000006c0000006c00000020000000
*6200000065000000200000007500000073000000650000006400000020000000740000006f0000
*00200000007400000072000000610000006e00000073000000660000006f000000720000006d00
*000020000000740000006800000065000000200000006f00000075000000740000007000000075
*000000740000000a00000000000000d80103010214000000410000002000000073000000700000
*00650000006300000069000000610000006c000000690000007a00000061000000740000006900
*00006f0000006e000000200000006f00000066000000200104010000000000000000d600000000
*00000000000000000000002401020b000000200000007500000073000000690000006e00000067
*00000020000000740000006800000065000000200104020000000000000000fc00000000000000
*2c000000000000002d0000000000000000fd000000000000002c000000000000002d0102010000
*00200104010000000000000000e3000000000000002c000000000000002d01020f0000002c0000
*0020000000610000006e000000610000006c0000006f000000670000006f000000750000007300
*000020000000740000006f0000002001020e000000440000006100000074000000610000002e00
*00004c0000006900000073000000740000002e00000066000000690000006e0000006402010000
*000a0b0102010000000a0102050000002000000020000000200000002000000020010401000000
*0000000000d7000000000000000000000000000000240102010000002001040100000000000000
*00fb000000000000002c000000000000002d0102010000000a02004d00000000000000e6000000
*00000000e700000000000000e800000000000000e300000000000000e900000000000000ea0000
*0000000000eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef00
*000000000000f000000000000000f100000000000000f200000000000000f300000000000000f4
*00000000000000f500000000000000f600000000000000f700000000000000f800000000000000
*f900000000000000fa00000000000000fb00000000000000fc00000000000000fd000000000000
*00fe00000000000000ff0000000000000100000000000000000000000000000000010000000000
*000002000000000000000300000000000000040000000000000005000000000000000600000000
*0000000700000000000000080000000000000009000000000000000a000000000000001f000000
*000000002000000000000000210000000000000022000000000000002300000000000000240000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002a000000000000002b000000000000002c000000000000002d000000000000002e
*000000000000002f00000000000000c400000000000000c500000000000000c600000000000000
*c700000000000000c800000000000000c900000000000000ca00000000000000cb000000000000
*00cc00000000000000cd00000000000000ce00000000000000cf00000000000000d00000000000
*0000d100000000000000d200000000000000d300000000000000d400000000000000d500000000
*000000d600000000000000d700000000000000d81500000000000000c700000000000000c80000
*0000000000c900000000000000c400000000000000c500000000000000c600000000000000ce00
*000000000000cf00000000000000d000000000000000d100000000000000ca00000000000000cc
*00000000000000cd00000000000000cb00000000000000d400000000000000d600000000000000
*d700000000000000d800000000000000d200000000000000d300000000000000d5000000000000
*000000000000000000250001140000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c0000006500000020000000280000004d0000005000
*000054000000430000007300000029010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d003a00000000000000e600000000000000e700000000000000
*e800000000000000e300000000000000e900000000000000ea00000000000000eb000000000000
*00ec00000000000000ed00000000000000ee00000000000000ef00000000000000f00000000000
*0000f100000000000000f200000000000000f300000000000000f400000000000000f500000000
*000000f600000000000000f700000000000000f800000000000000f900000000000000fa000000
*00000000fb00000000000000fc00000000000000fd00000000000000fe00000000000000ff0000
*000000000100000000000000000000000000000000010000000000000002000000000000000300
*000000000000040000000000000005000000000000000600000000000000070000000000000008
*0000000000000009000000000000000a000000000000001f000000000000002000000000000000
*210000000000000022000000000000002300000000000000240000000000000025000000000000
*0026000000000000002700000000000000280000000000000029000000000000002a0000000000
*00002b000000000000002c000000000000002d000000000000002e000000000000002f00000000
*000000d900000000000000da0200000000000000d900000000000000da00000000000000000000
*0000000000260001230000006e0000006f0000006e0000002d000000700000006f000000720000
*007400000061000000620000006c00000065000000200000002800000074000000790000007000
*0000650000002000000066000000610000006d000000690000006c000000690000006500000073
*0000002c000000200000004d0000005000000054000000430000007300000029010c0000006500
*000078000000700000006500000072000000690000006d000000650000006e0000007400000061
*0000006c0110000000650000006b0000006d000000650000007400000074000000400000006700
*00006d00000061000000690000006c0000002e000000630000006f0000006d002c000000000000
*00e600000000000000e700000000000000e800000000000000e300000000000000e90000000000
*0000ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee00000000
*000000ef00000000000000f000000000000000f100000000000000f200000000000000f3000000
*00000000f400000000000000f500000000000000f600000000000000f700000000000000f80000
*0000000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd00
*000000000000fe00000000000000ff000000000000010000000000000000660000000000000067
*0000000000000069000000000000006a000000000000006b000000000000006c00000000000000
*6d000000000000006e000000000000006f00000000000000700000000000000071000000000000
*00730000000000000074000000000000007500000000000000db00000000000000dc0200000000
*000000db00000000000000dc000000000000000000000000000000270000000001000000000000
*00dd010b022a00000072000000200000002a0000002e0000002000000028000000780000002000
*00002a000000200000007900000029000000200000003d00000020000000280000007200000020
*0000002a0000002e000000200000007800000029000000200000002a0000002000000079000000
*200000003d0000002000000078000000200000002a000000200000002800000072000000200000
*002a0000002e0000002000000079000000290b022a0000002800000078000000200000002a0000
*00200000007900000029000000200000002e0000002a0000002000000072000000200000003d00
*00002000000079000000200000002a000000200000002800000078000000200000002e0000002a
*000000200000007200000029000000200000003d00000020000000280000007900000020000000
*2e0000002a000000200000007200000029000000200000002a0000002000000078350000000000
*0000e600000000000000e700000000000000e800000000000000e300000000000000e900000000
*000000ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee000000
*00000000ef00000000000000f000000000000000f100000000000000f200000000000000f30000
*0000000000f400000000000000f500000000000000f600000000000000f700000000000000f800
*000000000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd
*00000000000000fe00000000000000ff0000000000000100000000000000006600000000000000
*670000000000000069000000000000006a000000000000006b000000000000006c000000000000
*006d000000000000006e000000000000006f000000000000007000000000000000710000000000
*00007300000000000000740000000000000075000000000000008f000000000000009000000000
*000000910000000000000092000000000000009f00000000000000ab00000000000000ac000000
*00000000ad00000000000000ae00000000000000af00000000000000dd0100000000000000dd00
*00000000000000000000000000002800011e000000700000006f00000072000000740000006100
*0000620000006c000000650000002000000028000000690000006e000000730000007400000061
*0000006e0000006300000065000000730000002000000075000000730000006500000020000000
*4d0000005000000054000000430000007300000029010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d003700000000000000e600000000000000e700
*000000000000e800000000000000e300000000000000e900000000000000ea00000000000000eb
*00000000000000ec00000000000000ed00000000000000ee00000000000000ef00000000000000
*f000000000000000f100000000000000f200000000000000f300000000000000f4000000000000
*00f500000000000000f600000000000000f700000000000000f800000000000000f90000000000
*0000fa00000000000000fb00000000000000fc00000000000000fd00000000000000fe00000000
*000000ff0000000000000100000000000000006600000000000000670000000000000069000000
*000000006a000000000000006b000000000000006c000000000000006d000000000000006e0000
*00000000006f000000000000007000000000000000710000000000000073000000000000007400
*00000000000075000000000000008f000000000000009000000000000000910000000000000092
*000000000000009f00000000000000ab00000000000000ac00000000000000ad00000000000000
*ae00000000000000af00000000000000de00000000000000df00000000000000e0030000000000
*0000de00000000000000e000000000000000df0000000000000000000000000000002900010800
*0000700000006f000000720000007400000061000000620000006c00000065010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d003400000000000000
*e600000000000000e700000000000000e800000000000000e300000000000000e9000000000000
*00ea00000000000000eb00000000000000ec00000000000000ed00000000000000ee0000000000
*0000ef00000000000000f000000000000000f100000000000000f200000000000000f300000000
*000000f400000000000000f500000000000000f600000000000000f700000000000000f8000000
*00000000f900000000000000fa00000000000000fb00000000000000fc00000000000000fd0000
*0000000000fe00000000000000ff00000000000001000000000000000066000000000000006700
*00000000000069000000000000006a000000000000006b000000000000006c000000000000006d
*000000000000006e000000000000006f0000000000000070000000000000007100000000000000
*7300000000000000740000000000000075000000000000008f0000000000000090000000000000
*009100000000000000920000000000000095000000000000009600000000000000970000000000
*000098000000000000009f00000000000000e10100000000000000e10000000000000000000000
*000000002a00000000003a00000000000000e600000000000000e700000000000000e800000000
*000000e300000000000000e900000000000000ea00000000000000eb00000000000000ec000000
*00000000ed00000000000000ee00000000000000ef00000000000000f000000000000000f10000
*0000000000f200000000000000f300000000000000f400000000000000f500000000000000f600
*000000000000f700000000000000f800000000000000f900000000000000fa00000000000000fb
*00000000000000fc00000000000000fd00000000000000fe00000000000000ff00000000000001
*00000000000000006600000000000000670000000000000069000000000000006a000000000000
*006b000000000000006c000000000000006d000000000000006e000000000000006f0000000000
*000070000000000000007100000000000000730000000000000074000000000000007500000000
*0000008f0000000000000090000000000000009100000000000000920000000000000095000000
*000000009600000000000000970000000000000098000000000000009f00000000000000ab0000
*0000000000ac00000000000000ad00000000000000ae00000000000000af00000000000000e100
*000000000000e20100000000000000e2000000000000011b000000000000000000000000000000
*0103000000000000003e0000000000000000000000000000000101000000000000003f00000000
*000000000000000000000001000000000000000040000000000000000000000000000000010300
*000000000000410000000000000000000000000000000100000000000000004200000000000000
*000000000000000001000000000000000043000000000000000000000000000000010000000000
*000000440000000000000000000000000000000100000000000000004500000000000000000000
*000000000001000000000000000046000000000000000000000000000000010000000000000000
*470000000000000000000000000000000100000000000000004800000000000000000000000000
*0000020300000000000000490000000000000000000000000000000200000000000000004a0000
*000000000000000000000000000200000000000000004b00000000000000000000000000000003
*03000000000000004c0000000000000000000000000000000300000000000000004d0000000000
*000000000000000000000403000000000000004e00000000000000000000000000000004010000
*00000000004e0000000000000000000000000000000400000000000000004f0000000000000000
*000000000000000503000000000000005000000000000000000000000000000005010000000000
*000050000000000000000000000000000000050000000000000000510000000000000000000000
*000000000503000000000000005200000000000000000000000000000005000000000000000053
*000000000000000000000000000000050000000000000000540000000000000000000000000000
*000503000000000000005500000000000000000000000000000005010000000000000055000000
*000000000000000000000000050000000000000000560000000000000000000000000000000503
*000000000000005700000000000000000000000000000005000000000000000058000000000000
*000000000000000000050000000000000000590000000000000000000000000000000603000000
*000000005a0000000000000000000000000000000601000000000000005a000000000000000000
*0000000000000600000000000000005b0000000000000000000000000000000603000000000000
*005c0000000000000000000000000000000601000000000000005c000000000000000000000000
*0000000600000000000000005d0000000000000000000000000000000603000000000000005e00
*00000000000000000000000000000601000000000000005e000000000000000000000000000000
*0600000000000000005f0000000000000000000000000000000603000000000000006000000000
*000000000000000000000006030000000000000061000000000000000000000000000000060000
*000000000000620000000000000000000000000000000600000000000000006300000000000000
*000000000000000006000000000000000064000000000000000000000000000000060000000000
*000000650000000000000000000000000000000600000000000000006600000000000000000000
*000000000006000000000000000067000000000000000000000000000000070300000000000000
*680000000000000000000000000000000701000000000000006900000000000000000000000000
*00000701000000000000006a0000000000000000000000000000000701000000000000006b0000
*000000000000000000000000000701000000000000006c00000000000000000000000000000007
*03000000000000006d0000000000000000000000000000000703000000000000006e0000000000
*000000000000000000000700000000000000006f00000000000000000000000000000007000000
*000000000070000000000000000000000000000000070000000000000000710000000000000000
*000000000000000700000000000000007200000000000000000000000000000007000000000000
*000073000000000000000000000000000000080300000000000000740000000000000000000000
*000000000800000000000000007500000000000000000000000000000008030000000000000076
*000000000000000000000000000000080000000000000000770000000000000000000000000000
*000803000000000000006b00000000000000000000000000000008030000000000000078000000
*000000000000000000000000080000000000000000790000000000000000000000000000000800
*000000000000007a0000000000000000000000000000000800000000000000007b000000000000
*0000000000000000000800000000000000007c0000000000000000000000000000000903000000
*000000007d0000000000000000000000000000000901000000000000007d000000000000000000
*0000000000000900000000000000007e0000000000000000000000000000000a03000000000000
*007f0000000000000000000000000000000a000000000000000080000000000000000000000000
*0000000a0000000000000000810000000000000000000000000000000a00000000000000008200
*00000000000000000000000000000a000000000000000083000000000000000000000000000000
*0a0000000000000000840000000000000000000000000000000b03000000000000008500000000
*00000000000000000000000b0100000000000000850000000000000000000000000000000b0000
*000000000000860000000000000000000000000000000c00000000000000008700000000000000
*00000000000000000c0000000000000000880000000000000000000000000000000c0000000000
*000000890000000000000000000000000000000c00000000000000008a00000000000000000000
*00000000000d03000000000000008b0000000000000000000000000000000d0100000000000000
*8b0000000000000000000000000000000d00000000000000008c00000000000000000000000000
*00000d03000000000000008d0000000000000000000000000000000d01000000000000008d0000
*000000000000000000000000000d0000000000000000800000000000000000000000000000000d
*00000000000000008e0000000000000000000000000000000d00000000000000008f0000000000
*000000000000000000000d0000000000000000810000000000000000000000000000000d000000
*0000000000830000000000000000000000000000000e0300000000000000900000000000000000
*000000000000000e0300000000000000910000000000000000000000000000000e010000000000
*0000910000000000000000000000000000000e0000000000000000920000000000000000000000
*000000000e0000000000000000930000000000000000000000000000000e000000000000000094
*0000000000000000000000000000000f0000000000000000950000000000000000000000000000
*000f00000000000000009600000000000000000000000000000010000000000000000097000000
*000000000000000000000000110300000000000000980000000000000000000000000000001101
*000000000000009800000000000000000000000000000011000000000000000099000000000000
*0000000000000000001103000000000000009a0000000000000000000000000000001101000000
*000000009a0000000000000000000000000000001100000000000000009b000000000000000000
*0000000000001103000000000000009c0000000000000000000000000000001100000000000000
*009d0000000000000000000000000000001100000000000000009e000000000000000000000000
*0000001200000000000000009f000000000000000000000000000000130300000000000000a000
*0000000000000000000000000000130300000000000000a1000000000000000000000000000000
*140300000000000000a2000000000000000000000000000000150300000000000000a300000000
*0000000000000000000000150100000000000000a3000000000000000000000000000000150000
*000000000000a4000000000000000000000000000000150300000000000000a500000000000000
*0000000000000000150100000000000000a5000000000000000000000000000000150000000000
*000000a6000000000000000000000000000000150300000000000000a700000000000000000000
*0000000000150100000000000000a7000000000000000000000000000000150000000000000000
*a8000000000000000000000000000000150300000000000000a900000000000000000000000000
*0000150100000000000000a9000000000000000000000000000000150000000000000000aa0000
*00000000000000000000000000150000000000000000ab00000000000000000000000000000015
*0000000000000000ac000000000000000000000000000000160300000000000000ad0000000000
*00000000000000000000160100000000000000ae00000000000000000000000000000016010000
*0000000000ad000000000000000000000000000000160100000000000000af0000000000000000
*00000000000000160300000000000000b000000000000000000000000000000016010000000000
*0000b0000000000000000000000000000000160000000000000000b10000000000000000000000
*00000000170300000000000000b2000000000000000000000000000000170100000000000000b2
*000000000000000000000000000000170000000000000000b30000000000000000000000000000
*00170000000000000000ac000000000000000000000000000000180300000000000000b4000000
*000000000000000000000000180000000000000000b50000000000000000000000000000001800
*00000000000000b6000000000000000000000000000000180000000000000000b7000000000000
*000000000000000000190000000000000000890000000000000000000000000000001900000000
*000000008a0000000000000000000000000000001a0300000000000000b8000000000000000000
*0000000000001a0000000000000000b90000000000000000000000000000001a00000000000000
*00ba0000000000000000000000000000001a0000000000000000bb000000000000000000000000
*0000001b0000000000000000bc0000000000000000000000000000001b0000000000000000bd00
*00000000000000000000000000001b0000000000000000be000000000000000000000000000000
*1c0000000000000000bf0000000000000000000000000000001c0000000000000000c000000000
*00000000000000000000001c0000000000000000c10000000000000000000000000000001d0300
*000000000000c20000000000000000000000000000001e0300000000000000c300000000000000
*00000000000000001e0100000000000000c30000000000000000000000000000001e0000000000
*000000c40000000000000000000000000000001f0300000000000000c500000000000000000000
*00000000001f0100000000000000c50000000000000000000000000000001f0000000000000000
*c6000000000000000000000000000000200300000000000000c700000000000000000000000000
*0000200000000000000000c8000000000000000000000000000000200300000000000000c90000
*00000000000000000000000000200000000000000000ca00000000000000000000000000000020
*0000000000000000cb000000000000000000000000000000210300000000000000cc0000000000
*00000000000000000000210300000000000000cd00000000000000000000000000000021000000
*0000000000ce000000000000000000000000000000210300000000000000cf0000000000000000
*00000000000000210000000000000000d000000000000000000000000000000022030000000000
*0000d1000000000000000000000000000000220100000000000000d10000000000000000000000
*00000000220000000000000000d2000000000000000000000000000000220300000000000000d3
*000000000000000000000000000000220100000000000000d30000000000000000000000000000
*00220000000000000000d4000000000000000000000000000000220300000000000000d5000000
*000000000000000000000000220100000000000000d50000000000000000000000000000002200
*00000000000000d6000000000000000000000000000000220000000000000000d7000000000000
*000000000000000000230300000000000000d80000000000000000000000000000002301000000
*00000000d8000000000000000000000000000000230000000000000000d9000000000000000000
*000000000000230300000000000000da0000000000000000000000000000002301000000000000
*00da000000000000000000000000000000230000000000000000db000000000000000000000000
*000000230300000000000000dc000000000000000000000000000000230100000000000000dc00
*0000000000000000000000000000230000000000000000dd000000000000000000000000000000
*230000000000000000de000000000000000000000000000000240000000000000000df00000000
*0000000000000000000000240000000000000000e0000000000000000000000000000000240000
*000000000000e1000000000000000000000000000000240000000000000000e200000000000000
*0000000000000000240000000000000000e3000000000000000000000000000000240000000000
*000000e4000000000000000000000000000000240000000000000000e500000000000000000000
*0000000000240000000000000000e6000000000000000000000000000000240000000000000000
*e7000000000000000000000000000000240000000000000000e800000000000000000000000000
*0000240000000000000000e9000000000000000000000000000000240000000000000000ea0000
*00000000000000000000000000240000000000000000eb00000000000000000000000000000024
*0000000000000000ec000000000000000000000000000000240000000000000000ed0000000000
*00000000000000000000240000000000000000ee00000000000000000000000000000024000000
*0000000000ef000000000000000000000000000000240000000000000000f00000000000000000
*00000000000000240000000000000000f100000000000000000000000000000024000000000000
*0000f2000000000000000000000000000000240000000000000000f30000000000000000000000
*00000000250300000000000000f4000000000000000000000000000000250100000000000000f5
*000000000000000000000000000000260300000000000000f60000000000000000000000000000
*00260000000000000000f7000000000000000000000000000000270300000000000000f8000000
*000000000000000000000000280300000000000000f90000000000000000000000000000002800
*00000000000000fa000000000000000000000000000000280000000000000000fb000000000000
*000000000000000000290300000000000000fc0000000000000000000000000000002a03000000
*00000000fd000000000000002c000000000000002d0300000000000000fe000000000000002c00
*0000000000002e0300000000000000ff000000000000002c000000000000002f03000000000000
*0100000000000000002c000000000000002d000000000000000101000000000000002c00000000
*0000002d000000000000000102000000000000002c000000000000002d00000000000000010300
*0000000000002c000000000000002d000000000000000104000000000000002c00000000000000
*2d010000000000000105000000000000002c000000000000002d03000000000000010500000000
*0000002c000000000000002d000000000000000106000000000000002c000000000000002d0100
*00000000000107000000000000002c000000000000002d03000000000000010700000000000000
*2c000000000000002d000000000000000108000000000000002c000000000000002d0100000000
*00000109000000000000002c000000000000002d030000000000000109000000000000002c0000
*00000000002d00000000000000010a000000000000002c000000000000002d0100000000000001
*0b000000000000002c000000000000002d03000000000000010b000000000000002c0000000000
*00002d00000000000000010c000000000000002c000000000000002d01000000000000010d0000
*00000000002c000000000000002d03000000000000010d000000000000002c000000000000002d
*00000000000000010e000000000000002c000000000000002d01000000000000010f0000000000
*00002c000000000000002d03000000000000010f000000000000002c000000000000002d000000
*000000000110000000000000002c000000000000002d010000000000000111000000000000002c
*000000000000002d030000000000000111000000000000002c000000000000002d000000000000
*000112000000000000002c000000000000002d010000000000000113000000000000002c000000
*000000002d03000000000000011300000000000001140000000000000115030000000000000116
*00000000000001140000000000000115000000000000000117000000000000002c000000000000
*01180300000000000001190000000000000031000000000000003203000000000000011a000000
*000000002c000000000000003300000000000000011b0000000000000000000000000000000a03
*000000000000011c0000000000000034000000000000003503000000000000011d000000000000
*002c000000000000003603000000000000011e000000000000002c000000000000003600000000
*000000011f000000000000002c0000000000000036000000000000000120000000000000002c00
*00000000000036000000000000000121000000000000002c000000000000003600000000000000
*0122000000000000002c0000000000000123000000000000000124000000000000002c00000000
*0000002e010000000000000125000000000000002c000000000000012300000000000000012600
*0000000000002c0000000000000127000000000000000128000000000000002c00000000000001
*27000000000000000129000000000000002c000000000000012a00000000000000009700000000
*0000002c000000000000003a03000000000000012b000000000000002c000000000000003a0300
*0000000000012c000000000000002c000000000000012d03000000000000012e00000000000000
*2c000000000000003b03000000000000012f000000000000002c000000000000003b0000000000
*000000e2000000000000002c000000000000012d000000000000000130000000000000002c0000
*0000000001310000000000000001320000000000000031000000000000003d0300000000000001
*330000000000000134000000000000000e6d6f6e6f6964732d302e312e32350000000000000013
*446174612e4d6f6e6f69642e526564756365720000000000000018446174612e4d6f6e6f69642e
*526564756365722e436861720000000000000020446174612e4d6f6e6f69642e4c65786963616c
*2e555446382e4465636f6465720000000000000018446174612e4d6f6e6f69642e526564756365
*722e576974680000000000000011446174612e4d6f6e6f69642e556e696f6e000000000000000e
*446174612e47656e657261746f720000000000000022446174612e4d6f6e6f69642e4c65786963
*616c2e536f75726365506f736974696f6e0000000000000019446174612e4d6f6e6f69642e4c65
*786963616c2e576f7264730000000000000010446174612e4d6f6e6f69642e53656c6600000000
*0000001f446174612e47656e657261746f722e436f6d70726573736976652e4c5a373800000000
*00000016446174612e4d6f6e6f69642e46726f6d537472696e670000000000000017446174612e
*4d6f6e6f69642e436f6d62696e61746f7273000000000000001e446174612e47656e657261746f
*722e436f6d70726573736976652e524c450000000000000017446174612e4d6f6e6f69642e4361
*7465676f726963616c0000000000000014446174612e4d6f6e6f69642e41646469746976650000
*00000000001a446174612e4d6f6e6f69642e41646469746976652e537567617200000000000000
*1a446174612e4d6f6e6f69642e4d756c7469706c69636174697665000000000000002044617461
*2e4d6f6e6f69642e4d756c7469706c696361746976652e53756761720000000000000013446174
*612e52696e672e53656d692e4e656172000000000000000e446174612e52696e672e53656d6900
*0000000000000f446174612e4d6f6e6f69642e4f72640000000000000012446174612e52696e67
*2e53656d692e4f72640000000000000017446174612e52696e672e53656d692e54726f70696361
*6c000000000000000a446174612e47726f75700000000000000016446174612e47726f75702e43
*6f6d62696e61746f72730000000000000019446174612e47726f75702e4d756c7469706c696361
*746976650000000000000010446174612e47726f75702e5375676172000000000000001f446174
*612e47726f75702e4d756c7469706c696361746976652e53756761720000000000000009446174
*612e52696e670000000000000011446174612e52696e672e426f6f6c65616e0000000000000011
*446174612e52696e672e46726f6d4e756d000000000000001b446174612e52696e672e4d6f6475
*6c617241726974686d657469630000000000000010446174612e52696e672e4d6f64756c650000
*000000000017446174612e4d6f6e6f69642e4170706c6963617469766500000000000000114461
*74612e4d6f6e6f69642e4d6f6e6164000000000000001a446174612e47656e657261746f722e43
*6f6d62696e61746f72730000000000000013446174612e47656e657261746f722e467265650000
*000000000016446174612e52696e672e53656d692e4e61747572616c0000000000000011446174
*612e52696e672e416c67656272610000000000000029446174612e52696e672e4d6f64756c652e
*4175746f6d61746963446966666572656e74696174696f6e000000000000000a446174612e4669
*656c640000000000000016446174612e4669656c642e566563746f725370616365000000000000
*0015446174612e4d6f6e6f69642e496e7374616e63657300000000000000046261736500000000
*0000000b446174612e4d6f6e6f6964000000000000000a446174612e4d61796265000000000000
*000d446174612e466f6c6461626c650000000000000009446174612e576f726400000000000000
*086768632d7072696d00000000000000094748432e5479706573000000000000000b4748432e55
*6e69636f64650000000000000012636f6e7461696e6572732d302e322e302e3000000000000000
*08446174612e4d61700000000000000010436f6e74726f6c2e43617465676f7279000000000000
*0008446174612e4f726400000000000000075072656c756465000000000000000f446174612e52
*696e672e53756761720000000000000013436f6e74726f6c2e4170706c69636174697665000000
*000000000d436f6e74726f6c2e4d6f6e61640000000000000009446174612e4c69737400000000
*000000084748432e426f6f6c000000000000000952656475636564427900000000000000095265
*64756374696f6e000000000000000c676574526564756374696f6e000000000000000752656475
*6365720000000000000004756e69740000000000000004736e6f630000000000000004636f6e73
*000000000000000d666f6c644d6170526564756365000000000000000a666f6c64526564756365
*000000000000000a72657475726e556e6974000000000000000870757265556e69740000000000
*00000b4368617252656475636572000000000000000866726f6d43686172000000000000000b69
*6e76616c696443686172000000000000000455544638000000000000000772756e555446380000
*00000000000b5769746852656475636572000000000000000e776974686f757452656475636572
*0000000000000009556e696f6e57697468000000000000000c676574556e696f6e576974680000
*00000000000c486173556e696f6e576974680000000000000009756e696f6e5769746800000000
*00000009656d707479576974680000000000000005556e696f6e0000000000000008676574556e
*696f6e0000000000000008486173556e696f6e0000000000000005656d70747900000000000000
*05756e696f6e000000000000000543686172380000000000000008676574436861723800000000
*0000000656616c756573000000000000000967657456616c75657300000000000000044b657973
*00000000000000076765744b657973000000000000000947656e657261746f7200000000000000
*04456c656d00000000000000096d617052656475636500000000000000056d6170546f00000000
*000000076d617046726f6d0000000000000006726564756365000000000000000d6d6170526564
*75636557697468000000000000000a72656475636557697468000000000000000e536f75726365
*506f736974696f6e00000000000000035461620000000000000007436f6c756d6e730000000000
*0000054c696e65730000000000000003506f73000000000000000c536f75726365436f6c756d6e
*000000000000000a536f757263654c696e6500000000000000076e657874546162000000000000
*000b73746172744f6646696c65000000000000000c736f75726365436f6c756d6e000000000000
*000a736f757263654c696e65000000000000001273686f77536f75726365506f736974696f6e00
*00000000000007556e6c696e6564000000000000000a72756e556e6c696e656400000000000000
*08556e737061636564000000000000000b72756e556e7370616365640000000000000005576f72
*6473000000000000000872756e576f726473000000000000000872756e4c696e65730000000000
*000009776f72647346726f6d00000000000000096c696e657346726f6d00000000000000045365
*6c66000000000000000767657453656c6600000000000000044c5a373800000000000000066465
*636f64650000000000000006656e636f64650000000000000008656e636f646545710000000000
*00001270726f705f6465636f64655f656e636f6465000000000000001470726f705f6465636f64
*655f656e636f64654571000000000000000a46726f6d537472696e67000000000000000d676574
*46726f6d537472696e6700000000000000056379636c6500000000000000067265706561740000
*0000000000097265706c6963617465000000000000002170726f705f7265706c69636174655f72
*696768745f6469737472696275746976650000000000000003524c450000000000000006676574
*524c45000000000000000352756e000000000000000a656e636f64654c69737400000000000000
*1670726f705f6465636f64655f656e636f64654c6973740000000000000007434d6f6e6f696400
*0000000000000547456e646f000000000000000867657447456e646f0000000000000010636174
*65676f7279546f4d6f6e6f696400000000000000106d6f6e6f6964546f43617465676f72790000
*000000000004706c757300000000000000047a65726f00000000000000012b0000000000000003
*457870000000000000000667657445787000000000000000034c6f670000000000000006676574
*4c6f67000000000000000e4d756c7469706c6963617469766500000000000000036f6e65000000
*000000000574696d657300000000000000012a0000000000000011526967687453656d694e6561
*7252696e6700000000000000104c65667453656d694e65617252696e6700000000000000085365
*6d6952696e67000000000000000b4d696e5072696f72697479000000000000000e6765744d696e
*5072696f72697479000000000000000b4d61785072696f72697479000000000000000e6765744d
*61785072696f7269747900000000000000034d696e00000000000000066765744d696e00000000
*000000034d617800000000000000066765744d617800000000000000096d696e66696e69747900
*00000000000008696e66696e69747900000000000000085072696f726974790000000000000008
*4d6178426f756e6400000000000000084d696e426f756e6400000000000000054f726465720000
*0000000000086765744f72646572000000000000000854726f706963616c000000000000000b67
*657454726f706963616c000000000000000547726f75700000000000000007676e656761746500
*000000000000056d696e7573000000000000000967737562747261637400000000000000134d75
*6c7469706c6963617469766547726f757000000000000000046f7665720000000000000005756e
*646572000000000000000667726563697000000000000000012d00000000000000066e65676174
*650000000000000008737562747261637400000000000000012f00000000000000025c5c000000
*00000000057265636970000000000000000452696e670000000000000008426f6f6c52696e6700
*0000000000000b676574426f6f6c52696e67000000000000000746726f6d4e756d000000000000
*000a67657446726f6d4e756d00000000000000074d6f64756c617200000000000000076d6f6475
*6c757300000000000000034d6f6400000000000000066765744d6f640000000000000013776974
*68496e74656772616c4d6f64756c757300000000000000064d6f64756c65000000000000000b52
*696768744d6f64756c6500000000000000022e2a000000000000000a4c6566744d6f64756c6500
*000000000000022a2e000000000000000341707000000000000000066765744170700000000000
*000003416c740000000000000006676574416c74000000000000000954726176657273616c0000
*00000000000c67657454726176657273616c000000000000000d736e6f6354726176657273616c
*00000000000000034d6f6e00000000000000066765744d6f6e00000000000000084d6f6e616453
*756d000000000000000b6765744d6f6e616453756d0000000000000006416374696f6e00000000
*00000009676574416374696f6e000000000000000a736e6f63416374696f6e0000000000000009
*74726176657273655f0000000000000004666f725f00000000000000046173756d000000000000
*00056d61704d5f0000000000000005666f724d5f00000000000000046d73756d00000000000000
*07666f6c644d61700000000000000009636f6e6361744d61700000000000000004666f6c640000
*000000000006746f4c6973740000000000000003616e6400000000000000026f72000000000000
*0003616e790000000000000003616c6c000000000000000373756d000000000000000770726f64
*7563740000000000000004656c656d00000000000000076e6f74456c656d000000000000000666
*696c746572000000000000000a66696c74657257697468000000000000000466696e6400000000
*0000000446726565000000000000000c416e7947656e657261746f7200000000000000074e6174
*7572616c00000000000000076e61747572616c0000000000000007416c67656272610000000000
*0000014400000000000000046c69667400000000000000016400000000000000054669656c6400
*0000000000000b566563746f72537061636500000000000000064d6f6e6f696400000000000000
*054d617962650000000000000008466f6c6461626c6500000000000000076d617070656e640000
*0000000000076d636f6e63617400000000000000066d656d707479000000000000000767657444
*75616c00000000000000044475616c0000000000000007617070456e646f000000000000000445
*6e646f0000000000000006676574416c6c0000000000000003416c6c0000000000000006676574
*416e790000000000000003416e79000000000000000667657453756d000000000000000353756d
*000000000000000a67657450726f64756374000000000000000750726f64756374000000000000
*000867657446697273740000000000000005466972737400000000000000076765744c61737400
*000000000000044c617374000000000000000e66696e676572747265652d302e30000000000000
*000f446174612e46696e67657254726565000000000000000a46696e6765725472656500000000
*000000076d65617375726500000000000000084748432e576f72640000000000000005576f7264
*380000000000000004436861720000000000000007697353706163650000000000000005546f6b
*656e00000000000000034d6170000000000000000843617465676f727900000000000000033e3e
*3e00000000000000033c3c3c00000000000000012e00000000000000026964000000000000000b
*4748432e436c617373657300000000000000036d696e00000000000000074e6f7468696e670000
*0000000000036d617800000000000000084748432e456e756d00000000000000086d6178426f75
*6e6400000000000000086d696e426f756e6400000000000000074748432e4e756d000000000000
*000b4170706c69636174697665000000000000000b416c7465726e617469766500000000000000
*084748432e4261736500000000000000054d6f6e616400000000000000094d6f6e6164506c7573
*0000000000000004666c697000000000000000084748432e4c6973740000000000000006636f6e
*6361740000000000000004426f6f6c
hunk ./doc/html/monoids/src/Data-Generator-Combinators.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Generator/Combinators.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
+<a name="line-2"></a>
+<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-4"></a><span class='hs-comment'>-- |</span>
+<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Generator.Combinators</span>
+<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
+<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (type families, MPTCs)</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-- Utilities for working with Monoids that conflict with names from the "Prelude",</span>
+<a name="line-13"></a><span class='hs-comment'>-- "Data.Foldable", "Control.Monad" or elsewhere. Intended to be imported qualified.</span>
+<a name="line-14"></a><span class='hs-comment'>--</span>
+<a name="line-15"></a><span class='hs-comment'>-- &gt; import Data.Generator.Combinators as Generator</span>
+<a name="line-16"></a><span class='hs-comment'>--</span>
+<a name="line-17"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
+<a name="line-20"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-21"></a>    <span class='hs-comment'>-- * Monadic Reduction</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapM_</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>forM_</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>msum</span>
+<a name="line-25"></a>    <span class='hs-comment'>-- * Applicative Reduction</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>traverse_</span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>for_</span>
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>asum</span>
+<a name="line-29"></a>    <span class='hs-comment'>-- * Logical Reduction</span>
+<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>and</span>
+<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>or</span>
+<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>any</span>
+<a name="line-33"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>all</span>
+<a name="line-34"></a>    <span class='hs-comment'>-- * Monoidal Reduction</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMap</span>
+<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fold</span>
+<a name="line-37"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>toList</span> 
+<a name="line-38"></a>    <span class='hs-comment'>-- * List-Like Reduction</span>
+<a name="line-39"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
+<a name="line-40"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
+<a name="line-41"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
+<a name="line-42"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filterWith</span>
+<a name="line-43"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>find</span>
+<a name="line-44"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
+<a name="line-45"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
+<a name="line-46"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
+<a name="line-47"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>
+<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span><span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span><span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span><span class='hs-layout'>)</span>
+<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
+<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-56"></a>
+<a name="line-57"></a><a name="traverse_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Traversal' monoid. A specialized version of its namesake from "Data.Foldable"</span>
+<a name="line-58"></a><span class='hs-comment'>--</span>
+<a name="line-59"></a><span class='hs-comment'>-- @</span>
+<a name="line-60"></a><span class='hs-comment'>--     'mapReduce' 'getTraversal'</span>
+<a name="line-61"></a><span class='hs-comment'>-- @</span>
+<a name="line-62"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-63"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getTraversal</span>
+<a name="line-64"></a><span class='hs-comment'>{-# INLINE traverse_ #-}</span>
+<a name="line-65"></a>    
+<a name="line-66"></a><a name="for_"></a><span class='hs-comment'>-- | Convenience function as found in "Data.Foldable"</span>
+<a name="line-67"></a><span class='hs-comment'>--</span>
+<a name="line-68"></a><span class='hs-comment'>-- @</span>
+<a name="line-69"></a><span class='hs-comment'>--     'flip' 'traverse_'</span>
+<a name="line-70"></a><span class='hs-comment'>-- @</span>
+<a name="line-71"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-72"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
+<a name="line-73"></a><span class='hs-comment'>{-# INLINE for_ #-}</span>
+<a name="line-74"></a>
+<a name="line-75"></a><a name="asum"></a><span class='hs-comment'>-- | The sum of a collection of actions, generalizing 'concat'</span>
+<a name="line-76"></a><span class='hs-comment'>--</span>
+<a name="line-77"></a><span class='hs-comment'>-- @</span>
+<a name="line-78"></a><span class='hs-comment'>--    'reduceWith' 'getAlt'</span>
+<a name="line-79"></a><span class='hs-comment'>-- @ </span>
+<a name="line-80"></a><span class='hs-definition'>asum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-81"></a><span class='hs-definition'>asum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAlt</span>
+<a name="line-82"></a><span class='hs-comment'>{-# INLINE asum #-}</span>
+<a name="line-83"></a>
+<a name="line-84"></a><a name="mapM_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Action' monoid. A specialized version of its namesake from "Data.Foldable" and "Control.Monad"</span>
+<a name="line-85"></a><span class='hs-comment'>-- </span>
+<a name="line-86"></a><span class='hs-comment'>-- @</span>
+<a name="line-87"></a><span class='hs-comment'>--    'mapReduceWith' 'getAction'</span>
+<a name="line-88"></a><span class='hs-comment'>-- @ </span>
+<a name="line-89"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-90"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAction</span>
+<a name="line-91"></a><span class='hs-comment'>{-# INLINE mapM_ #-}</span>
+<a name="line-92"></a>
+<a name="line-93"></a><a name="forM_"></a><span class='hs-comment'>-- | Convenience function as found in "Data.Foldable" and "Control.Monad"</span>
+<a name="line-94"></a><span class='hs-comment'>--</span>
+<a name="line-95"></a><span class='hs-comment'>-- @</span>
+<a name="line-96"></a><span class='hs-comment'>--     'flip' 'mapM_'</span>
+<a name="line-97"></a><span class='hs-comment'>-- @</span>
+<a name="line-98"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-99"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
+<a name="line-100"></a><span class='hs-comment'>{-# INLINE forM_ #-}</span>
+<a name="line-101"></a>
+<a name="line-102"></a><a name="msum"></a><span class='hs-comment'>-- | The sum of a collection of actions, generalizing 'concat'</span>
+<a name="line-103"></a><span class='hs-comment'>--</span>
+<a name="line-104"></a><span class='hs-comment'>-- @</span>
+<a name="line-105"></a><span class='hs-comment'>--     'reduceWith' 'getMonadSum'</span>
+<a name="line-106"></a><span class='hs-comment'>-- @</span>
+<a name="line-107"></a><span class='hs-definition'>msum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
+<a name="line-108"></a><span class='hs-definition'>msum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getMonadSum</span>
+<a name="line-109"></a><span class='hs-comment'>{-# INLINE msum #-}</span>
+<a name="line-110"></a>
+<a name="line-111"></a><a name="foldMap"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
+<a name="line-112"></a><span class='hs-comment'>--</span>
+<a name="line-113"></a><span class='hs-comment'>-- @</span>
+<a name="line-114"></a><span class='hs-comment'>--     'mapReduceWith' 'getSelf'</span>
+<a name="line-115"></a><span class='hs-comment'>-- @</span>
+<a name="line-116"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-117"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getSelf</span>
+<a name="line-118"></a><span class='hs-comment'>{-# INLINE foldMap #-}</span>
+<a name="line-119"></a>
+<a name="line-120"></a><a name="concatMap"></a><span class='hs-comment'>-- | Type specialization of "foldMap" above</span>
+<a name="line-121"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-122"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span>
+<a name="line-123"></a><span class='hs-comment'>{-# INLINE concatMap #-}</span>
+<a name="line-124"></a>
+<a name="line-125"></a><a name="fold"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
+<a name="line-126"></a><span class='hs-comment'>--</span>
+<a name="line-127"></a><span class='hs-comment'>-- @</span>
+<a name="line-128"></a><span class='hs-comment'>--     'reduceWith' 'getSelf'</span>
+<a name="line-129"></a><span class='hs-comment'>-- @</span>
+<a name="line-130"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-131"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getSelf</span>
+<a name="line-132"></a><span class='hs-comment'>{-# INLINE fold #-}</span>
+<a name="line-133"></a>
+<a name="line-134"></a><a name="toList"></a><span class='hs-comment'>-- | Convert any 'Generator' to a list of its contents. Specialization of 'reduce'</span>
+<a name="line-135"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
+<a name="line-136"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
+<a name="line-137"></a><span class='hs-comment'>{-# INLINE toList #-}</span>
+<a name="line-138"></a>
+<a name="line-139"></a><a name="and"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
+<a name="line-140"></a><span class='hs-comment'>--</span>
+<a name="line-141"></a><span class='hs-comment'>-- @</span>
+<a name="line-142"></a><span class='hs-comment'>--     'reduceWith' 'getAll'</span>
+<a name="line-143"></a><span class='hs-comment'>-- @</span>
+<a name="line-144"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-145"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAll</span>
+<a name="line-146"></a><span class='hs-comment'>{-# INLINE and #-}</span>
+<a name="line-147"></a>
+<a name="line-148"></a><a name="or"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
+<a name="line-149"></a><span class='hs-comment'>--</span>
+<a name="line-150"></a><span class='hs-comment'>-- @</span>
+<a name="line-151"></a><span class='hs-comment'>--     'reduceWith' 'getAny'</span>
+<a name="line-152"></a><span class='hs-comment'>-- @</span>
+<a name="line-153"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-154"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAny</span>
+<a name="line-155"></a><span class='hs-comment'>{-# INLINE or #-}</span>
+<a name="line-156"></a>
+<a name="line-157"></a><a name="any"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if any of its values match the supplied predicate</span>
+<a name="line-158"></a><span class='hs-comment'>--</span>
+<a name="line-159"></a><span class='hs-comment'>-- @</span>
+<a name="line-160"></a><span class='hs-comment'>--     'mapReduceWith' 'getAny'</span>
+<a name="line-161"></a><span class='hs-comment'>-- @</span>
+<a name="line-162"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-163"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAny</span>
+<a name="line-164"></a><span class='hs-comment'>{-# INLINE any #-}</span>
+<a name="line-165"></a>
+<a name="line-166"></a><a name="all"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if all of its values match the supplied predicate</span>
+<a name="line-167"></a><span class='hs-comment'>--</span>
+<a name="line-168"></a><span class='hs-comment'>-- @</span>
+<a name="line-169"></a><span class='hs-comment'>--     'mapReduceWith' 'getAll'</span>
+<a name="line-170"></a><span class='hs-comment'>-- @</span>
+<a name="line-171"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-172"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAll</span>
+<a name="line-173"></a><span class='hs-comment'>{-# INLINE all #-}</span>
+<a name="line-174"></a>
+<a name="line-175"></a><a name="sum"></a><span class='hs-comment'>-- | Efficiently sum over the members of any 'Generator'</span>
+<a name="line-176"></a><span class='hs-comment'>--</span>
+<a name="line-177"></a><span class='hs-comment'>-- @</span>
+<a name="line-178"></a><span class='hs-comment'>--     'reduceWith' 'getSum'</span>
+<a name="line-179"></a><span class='hs-comment'>-- @</span>
+<a name="line-180"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
+<a name="line-181"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getSum</span>
+<a name="line-182"></a><span class='hs-comment'>{-# INLINE sum #-}</span>
+<a name="line-183"></a>
+<a name="line-184"></a><a name="product"></a><span class='hs-comment'>-- | Efficiently take the product of every member of a 'Generator'</span>
+<a name="line-185"></a><span class='hs-comment'>--</span>
+<a name="line-186"></a><span class='hs-comment'>-- @</span>
+<a name="line-187"></a><span class='hs-comment'>--     'reduceWith' 'getProduct'</span>
+<a name="line-188"></a><span class='hs-comment'>-- @</span>
+<a name="line-189"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
+<a name="line-190"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getProduct</span>
+<a name="line-191"></a><span class='hs-comment'>{-# INLINE product #-}</span>
+<a name="line-192"></a>
+<a name="line-193"></a><a name="elem"></a><span class='hs-comment'>-- | Check to see if 'any' member of the 'Generator' matches the supplied value</span>
+<a name="line-194"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-195"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
+<a name="line-196"></a><span class='hs-comment'>{-# INLINE elem #-}</span>
+<a name="line-197"></a>
+<a name="line-198"></a><a name="notElem"></a><span class='hs-comment'>-- | Check to make sure that the supplied value is not a member of the 'Generator'</span>
+<a name="line-199"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-200"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
+<a name="line-201"></a><span class='hs-comment'>{-# INLINE notElem #-}</span>
+<a name="line-202"></a>
+<a name="line-203"></a><a name="filter"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a subset of the elements in a 'Generator'</span>
+<a name="line-204"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-205"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
+<a name="line-206"></a>    <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span>
+<a name="line-207"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-208"></a><span class='hs-comment'>{-# INLINE filter #-}</span>
+<a name="line-209"></a>
+<a name="line-210"></a><a name="filterWith"></a><span class='hs-comment'>-- | Allows idiomatic specialization of filter by proving a function that will be used to transform the output</span>
+<a name="line-211"></a><span class='hs-definition'>filterWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> 
+<a name="line-212"></a><span class='hs-definition'>filterWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-varid'>p</span>
+<a name="line-213"></a><span class='hs-comment'>{-# INLINE filterWith #-}</span>
+<a name="line-214"></a>
+<a name="line-215"></a><a name="find"></a><span class='hs-comment'>-- | A specialization of 'filter' using the 'First' 'Monoid', analogous to 'Data.List.find'</span>
+<a name="line-216"></a><span class='hs-comment'>--</span>
+<a name="line-217"></a><span class='hs-comment'>-- @</span>
+<a name="line-218"></a><span class='hs-comment'>--     'filterWith' 'getFirst'</span>
+<a name="line-219"></a><span class='hs-comment'>-- @</span>
+<a name="line-220"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-221"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>filterWith</span> <span class='hs-varid'>getFirst</span>
+<a name="line-222"></a><span class='hs-comment'>{-# INLINE find #-}</span>
+<a name="line-223"></a>
+</pre></body>
+</html>
hunk ./doc/html/monoids/src/Data-Generator-Compressive-LZ78.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Generator/Compressive/LZ78.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, MultiParamTypeClasses #-}</span>
+<a name="line-2"></a>
+<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-4"></a><span class='hs-comment'>-- |</span>
+<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Generator.Compressive.LZ78</span>
+<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
+<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-10"></a><span class='hs-comment'>-- Portability :  portable</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-- Compression algorithms are all about exploiting redundancy. When applying</span>
+<a name="line-13"></a><span class='hs-comment'>-- an expensive 'Reducer' to a redundant source, it may be better to </span>
+<a name="line-14"></a><span class='hs-comment'>-- extract the structural redundancy that is present. 'LZ78' is a compression</span>
+<a name="line-15"></a><span class='hs-comment'>-- algorithm that does so, without requiring the dictionary to be populated</span>
+<a name="line-16"></a><span class='hs-comment'>-- with all of the possible values of a data type unlike its later </span>
+<a name="line-17"></a><span class='hs-comment'>-- refinement LZW, and which has fewer comparison reqirements during encoding</span>
+<a name="line-18"></a><span class='hs-comment'>-- than its earlier counterpart LZ77. Since we aren't storing these as a </span>
+<a name="line-19"></a><span class='hs-comment'>-- bitstream the LZSS refinement of only encoding pointers once you cross</span>
+<a name="line-20"></a><span class='hs-comment'>-- the break-even point is a net loss. </span>
+<a name="line-21"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-22"></a>
+<a name="line-23"></a>
+<a name="line-24"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Compressive</span><span class='hs-varop'>.</span><span class='hs-conid'>LZ78</span> 
+<a name="line-25"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-26"></a>    <span class='hs-comment'>-- * Lempel-Ziv 78 </span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LZ78</span>
+<a name="line-28"></a>    <span class='hs-comment'>-- * Decoding</span>
+<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>decode</span>
+<a name="line-30"></a>    <span class='hs-comment'>-- * Encoding</span>
+<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encode</span>
+<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encodeEq</span>
+<a name="line-33"></a>    <span class='hs-comment'>-- * QuickCheck Properties</span>
+<a name="line-34"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encode</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encodeEq</span>
+<a name="line-36"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-37"></a>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>List</span>
+<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
+<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-comment'>-- | An LZ78 compressing 'Generator', which supports efficient 'mapReduce' operations</span>
+<a name="line-48"></a>
+<a name="line-49"></a><a name="Token"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int</span> 
+<a name="line-50"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-comment'>-- after using the Functor instance the encoding may no longer be minimal</span>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Token</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span>
+<a name="line-55"></a>
+<a name="line-56"></a><a name="LZ78"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLZ78</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
+<a name="line-57"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
+<a name="line-58"></a>
+<a name="line-59"></a><a name="emptyDict"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span>
+<a name="line-60"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
+<a name="line-61"></a>
+<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-63"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-64"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>emptyDict</span> <span class='hs-varid'>xs</span>
+<a name="line-65"></a>
+<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>LZ78</span> <span class='hs-keyword'>where</span>
+<a name="line-67"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>fmap</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getLZ78</span>
+<a name="line-68"></a>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-conid'>LZ78</span> <span class='hs-keyword'>where</span>
+<a name="line-70"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-71"></a>    <span class='hs-varid'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-72"></a>    
+<a name="line-73"></a><a name="mapTo'"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-74"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-75"></a><span class='hs-definition'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>w</span><span class='hs-conop'>:</span><span class='hs-varid'>ws</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>v</span> <span class='hs-layout'>(</span><span class='hs-varid'>s</span> <span class='hs-varop'>|&gt;</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-varid'>ws</span> 
+<a name="line-76"></a>    <span class='hs-keyword'>where</span> 
+<a name="line-77"></a>        <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>index</span> <span class='hs-varid'>s</span> <span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-78"></a>
+<a name="line-79"></a><span class='hs-comment'>-- | a type-constrained 'reduce' operation</span>
+<a name="line-80"></a>    
+<a name="line-81"></a><a name="decode"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-82"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
+<a name="line-83"></a>
+<a name="line-84"></a><span class='hs-comment'>-- | contruct an LZ78-compressed 'Generator' using a 'Map' internally, requires an instance of Ord.</span>
+<a name="line-85"></a>
+<a name="line-86"></a><a name="encode"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
+<a name="line-87"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encode'</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
+<a name="line-88"></a>
+<a name="line-89"></a><a name="encode'"></a><span class='hs-definition'>encode'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-90"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-keyglyph'>]</span>
+<a name="line-91"></a><span class='hs-definition'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-varid'>t</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
+<a name="line-92"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
+<a name="line-93"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-conop'>:</span> <span class='hs-varid'>encode'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-varid'>t</span> <span class='hs-varid'>f</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
+<a name="line-94"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
+<a name="line-95"></a>
+<a name="line-96"></a><span class='hs-comment'>-- | contruct an LZ78-compressed 'Generator' using a list internally, requires an instance of Eq.</span>
+<a name="line-97"></a>
+<a name="line-98"></a><a name="encodeEq"></a><span class='hs-definition'>encodeEq</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
+<a name="line-99"></a><span class='hs-definition'>encodeEq</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-conid'>[]</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
+<a name="line-100"></a>
+<a name="line-101"></a><a name="encodeEq'"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Int</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-102"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-keyglyph'>]</span>
+<a name="line-103"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>List</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-varid'>t</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
+<a name="line-104"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
+<a name="line-105"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-conop'>:</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>t</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
+<a name="line-106"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
+<a name="line-107"></a>
+<a name="line-108"></a><a name="prop_decode_encode"></a><span class='hs-comment'>-- | QuickCheck property: decode . encode = id</span>
+<a name="line-109"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-110"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encode</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
+<a name="line-111"></a>
+<a name="line-112"></a><a name="prop_decode_encodeEq"></a><span class='hs-comment'>-- | QuickCheck property: decode . encodeEq = id</span>
+<a name="line-113"></a><span class='hs-definition'>prop_decode_encodeEq</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-114"></a><span class='hs-definition'>prop_decode_encodeEq</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encodeEq</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
+</pre></body>
+</html>
hunk ./doc/html/monoids/src/Data-Generator-Compressive-RLE.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Generator/Compressive/RLE.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, MultiParamTypeClasses, TypeOperators, FlexibleInstances, FlexibleContexts #-}</span>
+<a name="line-2"></a>
+<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-4"></a><span class='hs-comment'>-- |</span>
+<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Generator.Compressive.RLE</span>
+<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
+<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-10"></a><span class='hs-comment'>-- Portability :  portable</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-- Compression algorithms are all about exploiting redundancy. When applying</span>
+<a name="line-13"></a><span class='hs-comment'>-- an expensive 'Reducer' to a redundant source, it may be better to </span>
+<a name="line-14"></a><span class='hs-comment'>-- extract the structural redundancy that is present. Run length encoding</span>
+<a name="line-15"></a><span class='hs-comment'>-- can do so for long runs of identical inputs.</span>
+<a name="line-16"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-17"></a>
+<a name="line-18"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Compressive</span><span class='hs-varop'>.</span><span class='hs-conid'>RLE</span>
+<a name="line-19"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RLE</span><span class='hs-layout'>(</span><span class='hs-conid'>RLE</span><span class='hs-layout'>,</span> <span class='hs-varid'>getRLE</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Run</span><span class='hs-layout'>(</span><span class='hs-conid'>Run</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>decode</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encode</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encodeList</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encode</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encodeList</span>
+<a name="line-27"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>&lt;|</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-conid'>ViewL</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-conid'>ViewR</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>&gt;&lt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>viewl</span><span class='hs-layout'>,</span><span class='hs-varid'>viewr</span><span class='hs-layout'>)</span>
+<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
+<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Monoid</span> 
+<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
+<a name="line-35"></a>
+<a name="line-36"></a><a name="Run"></a><span class='hs-comment'>-- | A single run with a strict length.</span>
+<a name="line-37"></a><a name="Run"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Run</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Run</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Run</span> <span class='hs-keyword'>where</span>
+<a name="line-43"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-num'>1</span>
+<a name="line-44"></a>
+<a name="line-45"></a><a name="RLE"></a><span class='hs-comment'>-- | A 'Generator' which supports efficient 'mapReduce' operations over run-length encoded data.</span>
+<a name="line-46"></a><a name="RLE"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRLE</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>}</span> 
+<a name="line-47"></a>
+<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-49"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-varop'>.</span> <span class='hs-varid'>fmap</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getRLE</span>
+<a name="line-50"></a>
+<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-52"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-53"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>run</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getRLE</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>        <span class='hs-varid'>run</span> <span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span><span class='hs-varop'>`</span> <span class='hs-varid'>n</span>
+<a name="line-55"></a>
+<a name="line-56"></a><a name="decode"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-57"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
+<a name="line-58"></a>
+<a name="line-59"></a><span class='hs-comment'>-- | naive left to right encoder, which can handle infinite data</span>
+<a name="line-60"></a>
+<a name="line-61"></a><a name="encodeList"></a><span class='hs-definition'>encodeList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>a</span>
+<a name="line-62"></a><span class='hs-definition'>encodeList</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-conid'>[]</span>
+<a name="line-63"></a><span class='hs-definition'>encodeList</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-conop'>:</span><span class='hs-keyword'>as</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`before`</span> <span class='hs-keyword'>as</span><span class='hs-layout'>)</span>
+<a name="line-64"></a>
+<a name="line-65"></a><a name="before"></a><span class='hs-definition'>before</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-66"></a><a name="before"></a><span class='hs-definition'>r</span>           <span class='hs-varop'>`before`</span> <span class='hs-conid'>[]</span>                 <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>r</span><span class='hs-keyglyph'>]</span>
+<a name="line-67"></a><a name="r"></a><span class='hs-definition'>r</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-varop'>`before`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span><span class='hs-conop'>:</span><span class='hs-varid'>bs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-varid'>b</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span><span class='hs-varop'>+</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`before`</span> <span class='hs-varid'>bs</span>
+<a name="line-68"></a>                            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>r</span> <span class='hs-conop'>:</span> <span class='hs-varid'>point</span> <span class='hs-varid'>b</span> <span class='hs-varop'>`before`</span> <span class='hs-varid'>bs</span>
+<a name="line-69"></a>
+<a name="line-70"></a><a name="prop_decode_encodeList"></a><span class='hs-comment'>-- | QuickCheck property: decode . encode = id</span>
+<a name="line-71"></a><span class='hs-definition'>prop_decode_encodeList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-72"></a><span class='hs-definition'>prop_decode_encodeList</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encode</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
+<a name="line-73"></a>
+<a name="line-74"></a><span class='hs-comment'>-- One nice property that run-length encoding has is that it can be computed monoidally as follows</span>
+<a name="line-75"></a><span class='hs-comment'>-- However, this monoid cannot be used to handle infinite sources.</span>
+<a name="line-76"></a>
+<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-78"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
+<a name="line-79"></a>    <span class='hs-conid'>RLE</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>viewr</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`merge`</span> <span class='hs-varid'>viewl</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>where</span>
+<a name="line-80"></a>        <span class='hs-layout'>(</span><span class='hs-varid'>l'</span> <span class='hs-conop'>:&gt;</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varop'>`merge`</span> <span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>b</span> <span class='hs-varid'>n</span> <span class='hs-conop'>:&lt;</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
+<a name="line-81"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-varid'>b</span>     <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>l'</span> <span class='hs-varop'>|&gt;</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-varop'>+</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varop'>&gt;&lt;</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
+<a name="line-82"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>&gt;&lt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-83"></a>        <span class='hs-conid'>EmptyR</span> <span class='hs-varop'>`merge`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>r</span>
+<a name="line-84"></a>        <span class='hs-keyword'>_</span> <span class='hs-varop'>`merge`</span> <span class='hs-conid'>EmptyL</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>l</span>
+<a name="line-85"></a>
+<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-87"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
+<a name="line-88"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>viewl</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>of</span>
+<a name="line-89"></a>            <span class='hs-conid'>Run</span> <span class='hs-varid'>b</span> <span class='hs-varid'>n</span> <span class='hs-conop'>:&lt;</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-varid'>b</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span><span class='hs-varop'>+</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;|</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
+<a name="line-90"></a>                          <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-num'>1</span>     <span class='hs-varop'>&lt;|</span> <span class='hs-varid'>r</span> <span class='hs-layout'>)</span>
+<a name="line-91"></a>            <span class='hs-conid'>EmptyL</span>                    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-92"></a>    <span class='hs-varid'>snoc</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>viewr</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>of</span>
+<a name="line-93"></a>            <span class='hs-varid'>l'</span> <span class='hs-conop'>:&gt;</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>b</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-varid'>b</span>    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>l'</span> <span class='hs-varop'>|&gt;</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span><span class='hs-varop'>+</span><span class='hs-num'>1</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-94"></a>                          <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span>  <span class='hs-varop'>|&gt;</span> <span class='hs-conid'>Run</span> <span class='hs-varid'>a</span> <span class='hs-num'>1</span>    <span class='hs-layout'>)</span>
+<a name="line-95"></a>            <span class='hs-conid'>EmptyR</span>                    <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-96"></a>
+<a name="line-97"></a><a name="encode"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-98"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
+<a name="line-99"></a>
+<a name="line-100"></a><a name="prop_decode_encode"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-101"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encode</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>reduce</span> <span class='hs-varid'>xs</span>
+</pre></body>
+</html>
hunk ./doc/html/monoids/src/Data-Generator-Free.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Generator/Free.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances , FlexibleContexts , MultiParamTypeClasses , FlexibleInstances , GeneralizedNewtypeDeriving, ExistentialQuantification, TypeFamilies #-}</span>
+<a name="line-2"></a>
+<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-4"></a><span class='hs-comment'>-- |</span>
+<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Generator.Free</span>
+<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
+<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Free</span>
+<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Free</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-19"></a>
+<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Generator</span>
+<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-28"></a>
+<a name="line-29"></a><a name="Free"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> 
+<a name="line-30"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span>
+<a name="line-31"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>a</span>
+<a name="line-32"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span>
+<a name="line-33"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span>
+<a name="line-34"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Empty</span>
+<a name="line-35"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>c</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span>
+<a name="line-36"></a>
+<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-39"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>/=</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-40"></a>
+<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-42"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-43"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-44"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>b</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;</span>  <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-45"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;</span> <span class='hs-varid'>b</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;</span>  <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-46"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-47"></a>
+<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-49"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-50"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Plus</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-53"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
+<a name="line-54"></a>
+<a name="line-55"></a>    <span class='hs-varid'>snoc</span> <span class='hs-conid'>Empty</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span>
+<a name="line-56"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Snoc</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span>
+<a name="line-57"></a>
+<a name="line-58"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>b</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>b</span>
+<a name="line-59"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cons</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> 
+<a name="line-60"></a>
+<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-62"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-63"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-64"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-65"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-66"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-67"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span>
+<a name="line-68"></a>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-70"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
+<a name="line-71"></a>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-73"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
+<a name="line-74"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-75"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>     <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span>
+<a name="line-76"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>     <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>    <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span>
+<a name="line-78"></a>    <span class='hs-conid'>Empty</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-79"></a>    <span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>k</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-80"></a>
+<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-82"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-83"></a>    <span class='hs-varid'>mplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Plus</span>
+<a name="line-84"></a>
+<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-86"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-87"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-88"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-89"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
+<a name="line-90"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-91"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span>
+<a name="line-92"></a>
+<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-94"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-95"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-96"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-97"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-98"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-99"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-100"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span>
+<a name="line-101"></a>    
+<a name="line-102"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-103"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-104"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-105"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>           <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-106"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Empty</span>              <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
+<a name="line-107"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span>
+<a name="line-108"></a>    
+<a name="line-109"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varid'>m</span> 
+<a name="line-110"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-111"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varid'>m</span>
+<a name="line-112"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>         <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span>
+<a name="line-113"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>            <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
+<a name="line-114"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> 
+</pre></body>
+</html>
hunk ./doc/html/monoids/src/Data-Generator.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Generator.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
+<a name="line-2"></a>
+<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-4"></a><span class='hs-comment'>-- |</span>
+<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Generator</span>
+<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
+<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
+<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
+<a name="line-10"></a><span class='hs-comment'>-- Portability :  portable</span>
+<a name="line-11"></a><span class='hs-comment'>--</span>
+<a name="line-12"></a><span class='hs-comment'>-- A 'Generator' @c@ is a possibly-specialized container, which contains values of </span>
+<a name="line-13"></a><span class='hs-comment'>-- type 'Elem' @c@, and which knows how to efficiently apply a 'Reducer' to extract</span>
+<a name="line-14"></a><span class='hs-comment'>-- an answer.</span>
+<a name="line-15"></a><span class='hs-comment'>--</span>
+<a name="line-16"></a><span class='hs-comment'>-- Since a 'Generator' is not polymorphic in its contents, it is more specialized</span>
+<a name="line-17"></a><span class='hs-comment'>-- than "Data.Foldable.Foldable", and a 'Reducer' may supply efficient left-to-right</span>
+<a name="line-18"></a><span class='hs-comment'>-- and right-to-left reduction strategies that a 'Generator' may avail itself of.</span>
+<a name="line-19"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-20"></a>
+<a name="line-21"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-22"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-23"></a>    <span class='hs-comment'>-- * Generators</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
+<a name="line-29"></a>    <span class='hs-comment'>-- * Generator Transformers</span>
+<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Keys</span><span class='hs-layout'>(</span><span class='hs-conid'>Keys</span><span class='hs-layout'>,</span> <span class='hs-varid'>getKeys</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Values</span><span class='hs-layout'>(</span><span class='hs-conid'>Values</span><span class='hs-layout'>,</span> <span class='hs-varid'>getValues</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>(</span><span class='hs-conid'>Char8</span><span class='hs-layout'>,</span> <span class='hs-varid'>getChar8</span><span class='hs-layout'>)</span>
+<a name="line-33"></a>    <span class='hs-comment'>-- * Combinators</span>
+<a name="line-34"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduceWith</span>
+<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduceWith</span>
+<a name="line-37"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Array</span> 
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
+<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
+<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
+<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict8</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
+<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
+<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy8</span> <span class='hs-layout'>(</span><span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
+<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
+<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
+<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
+<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
+<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
+<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
+<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
+<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
+<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
+<a name="line-58"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
+<a name="line-59"></a>
+<a name="line-60"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
+<a name="line-61"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-62"></a>
+<a name="line-63"></a><span class='hs-comment'>-- | minimal definition 'mapReduce' or 'mapTo'</span>
+<a name="line-64"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
+<a name="line-65"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
+<a name="line-66"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-67"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-68"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-69"></a>
+<a name="line-70"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
+<a name="line-71"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-72"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-73"></a>
+<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-75"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-76"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>
+<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-79"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-80"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
+<a name="line-81"></a>
+<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
+<a name="line-83"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-84"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-85"></a>
+<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-87"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-88"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>cons</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
+<a name="line-89"></a>
+<a name="line-90"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-91"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
+<a name="line-92"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-93"></a>
+<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-95"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-96"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-97"></a>
+<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
+<a name="line-99"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-100"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-101"></a>
+<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-103"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-104"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-105"></a>
+<a name="line-106"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-107"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
+<a name="line-108"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-109"></a>
+<a name="line-110"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-111"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> 
+<a name="line-112"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-113"></a>
+<a name="line-114"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-115"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>i</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span>
+<a name="line-116"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>assocs</span>
+<a name="line-117"></a>
+<a name="line-118"></a><a name="Keys"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the keys of an indexed container</span>
+<a name="line-119"></a><a name="Keys"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Keys</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Keys</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKeys</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-120"></a>
+<a name="line-121"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-122"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-123"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-124"></a>
+<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-126"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span>
+<a name="line-127"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-128"></a>
+<a name="line-129"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-130"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>i</span>
+<a name="line-131"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>range</span> <span class='hs-varop'>.</span> <span class='hs-varid'>bounds</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-132"></a>
+<a name="line-133"></a><a name="Values"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the values contained in an indexed container</span>
+<a name="line-134"></a><a name="Values"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Values</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Values</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getValues</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-135"></a>
+<a name="line-136"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-137"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-138"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-139"></a>
+<a name="line-140"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-141"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-142"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-143"></a>
+<a name="line-144"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-145"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
+<a name="line-146"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-147"></a>
+<a name="line-148"></a><a name="Char8"></a><span class='hs-comment'>-- | a 'Generator' transformer that treats 'Word8' as 'Char'</span>
+<a name="line-149"></a><a name="Char8"></a><span class='hs-comment'>-- This lets you use a 'ByteString' as a 'Char' source without going through a 'Monoid' transformer like 'UTF8'</span>
+<a name="line-150"></a><a name="Char8"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Char8</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char8</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getChar8</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-151"></a>
+<a name="line-152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-153"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-154"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict8</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
+<a name="line-155"></a>
+<a name="line-156"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-157"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-158"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy8</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
+<a name="line-159"></a>
+<a name="line-160"></a><a name="reduce"></a><span class='hs-comment'>-- | Apply a 'Reducer' directly to the elements of a 'Generator'</span>
+<a name="line-161"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-162"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
+<a name="line-163"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
+<a name="line-164"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
+<a name="line-165"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Strict.ByteString -&gt; m #-}</span>
+<a name="line-166"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Lazy.ByteString -&gt; m #-}</span>
+<a name="line-167"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (c `Reducer` m) =&gt; [c] -&gt; m #-}</span>
+<a name="line-168"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Generator (FingerTree v e), e `Reducer` m) =&gt; FingerTree v e -&gt; m #-}</span>
+<a name="line-169"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
+<a name="line-170"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (e `Reducer` m) =&gt; Seq e -&gt; m #-}</span>
+<a name="line-171"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; IntSet -&gt; m #-}</span>
+<a name="line-172"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (a `Reducer` m) =&gt; Set a -&gt; m #-}</span>
+<a name="line-173"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((Int,v) `Reducer` m) =&gt; IntMap v -&gt; m #-}</span>
+<a name="line-174"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((k,v) `Reducer` m) =&gt; Map k v -&gt; m #-}</span>
+<a name="line-175"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; Keys (IntMap v) -&gt; m #-}</span>
+<a name="line-176"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (k `Reducer` m) =&gt; Keys (Map k v) -&gt; m #-}</span>
+<a name="line-177"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (IntMap v) -&gt; m #-}</span>
+<a name="line-178"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (Map k v) -&gt; m #-}</span>
+<a name="line-179"></a>
+<a name="line-180"></a><a name="mapReduceWith"></a><span class='hs-definition'>mapReduceWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span>
+<a name="line-181"></a><span class='hs-definition'>mapReduceWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>g</span>
+<a name="line-182"></a><span class='hs-comment'>{-# INLINE mapReduceWith #-}</span>
+<a name="line-183"></a>
+<a name="line-184"></a><a name="reduceWith"></a><span class='hs-definition'>reduceWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span>
+<a name="line-185"></a><span class='hs-definition'>reduceWith</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-186"></a><span class='hs-comment'>{-# INLINE reduceWith #-}</span>
+</pre></body>
+</html>
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 23
-<a name="line-15"></a><span class='hs-comment'>-- &gt; import Data.Group.Combinators as Monoid </span>
+<a name="line-15"></a><span class='hs-comment'>-- &gt; import Data.Monoid.Combinators as Monoid </span>
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 28
-<a name="line-20"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-21"></a>    <span class='hs-comment'>-- * Monadic Reduction</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapM_</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>forM_</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>msum</span>
-<a name="line-25"></a>    <span class='hs-comment'>-- * Applicative Reduction</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>traverse_</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>for_</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>asum</span>
-<a name="line-29"></a>    <span class='hs-comment'>-- * Logical Reduction</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>and</span>
-<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>or</span>
-<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>any</span>
-<a name="line-33"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>all</span>
-<a name="line-34"></a>    <span class='hs-comment'>-- * Monoidal Reduction</span>
-<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMap</span>
-<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fold</span>
-<a name="line-37"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>toList</span> 
-<a name="line-38"></a>    <span class='hs-comment'>-- * List-Like Reduction</span>
-<a name="line-39"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
-<a name="line-40"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
-<a name="line-41"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
-<a name="line-42"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filterWith</span>
-<a name="line-43"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>find</span>
-<a name="line-44"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
-<a name="line-45"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
-<a name="line-46"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
-<a name="line-47"></a>    <span class='hs-comment'>-- * List-Like Monoid Production</span>
-<a name="line-48"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span>
-<a name="line-49"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span>
-<a name="line-50"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span>
-<a name="line-51"></a>    <span class='hs-comment'>-- * QuickCheck Properties</span>
-<a name="line-52"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_replicate_right_distributive</span>
-<a name="line-53"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span><span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span><span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span><span class='hs-layout'>)</span>
-<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-58"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-59"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-60"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-61"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-62"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
-<a name="line-63"></a>
-<a name="line-64"></a><a name="traverse_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Traversal' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-65"></a><span class='hs-comment'>--</span>
-<a name="line-66"></a><span class='hs-comment'>-- @</span>
-<a name="line-67"></a><span class='hs-comment'>--     'mapReduce' 'getTraversal'</span>
-<a name="line-68"></a><span class='hs-comment'>-- @</span>
-<a name="line-69"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-70"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getTraversal</span>
-<a name="line-71"></a><span class='hs-comment'>{-# INLINE traverse_ #-}</span>
-<a name="line-72"></a>    
-<a name="line-73"></a><a name="for_"></a><span class='hs-comment'>-- | Convenience function as found in "Data.Foldable"</span>
-<a name="line-74"></a><span class='hs-comment'>--</span>
-<a name="line-75"></a><span class='hs-comment'>-- @</span>
-<a name="line-76"></a><span class='hs-comment'>--     'flip' 'traverse_'</span>
-<a name="line-77"></a><span class='hs-comment'>-- @</span>
-<a name="line-78"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-79"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
-<a name="line-80"></a><span class='hs-comment'>{-# INLINE for_ #-}</span>
-<a name="line-81"></a>
-<a name="line-82"></a><a name="asum"></a><span class='hs-comment'>-- | The sum of a collection of actions, generalizing 'concat'</span>
-<a name="line-83"></a><span class='hs-comment'>--</span>
-<a name="line-84"></a><span class='hs-comment'>-- @</span>
-<a name="line-85"></a><span class='hs-comment'>--    'reduceWith' 'getAlt'</span>
-<a name="line-86"></a><span class='hs-comment'>-- @ </span>
-<a name="line-87"></a><span class='hs-definition'>asum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-88"></a><span class='hs-definition'>asum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAlt</span>
-<a name="line-89"></a><span class='hs-comment'>{-# INLINE asum #-}</span>
-<a name="line-90"></a>
-<a name="line-91"></a><a name="mapM_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Action' monoid. A specialized version of its namesake from "Data.Foldable" and "Control.Monad"</span>
-<a name="line-92"></a><span class='hs-comment'>-- </span>
-<a name="line-93"></a><span class='hs-comment'>-- @</span>
-<a name="line-94"></a><span class='hs-comment'>--    'mapReduceWith' 'getAction'</span>
-<a name="line-95"></a><span class='hs-comment'>-- @ </span>
-<a name="line-96"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-97"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAction</span>
-<a name="line-98"></a><span class='hs-comment'>{-# INLINE mapM_ #-}</span>
-<a name="line-99"></a>
-<a name="line-100"></a><a name="forM_"></a><span class='hs-comment'>-- | Convenience function as found in "Data.Foldable" and "Control.Monad"</span>
-<a name="line-101"></a><span class='hs-comment'>--</span>
-<a name="line-102"></a><span class='hs-comment'>-- @</span>
-<a name="line-103"></a><span class='hs-comment'>--     'flip' 'mapM_'</span>
-<a name="line-104"></a><span class='hs-comment'>-- @</span>
-<a name="line-105"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-106"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
-<a name="line-107"></a><span class='hs-comment'>{-# INLINE forM_ #-}</span>
-<a name="line-108"></a>
-<a name="line-109"></a><a name="msum"></a><span class='hs-comment'>-- | The sum of a collection of actions, generalizing 'concat'</span>
-<a name="line-110"></a><span class='hs-comment'>--</span>
-<a name="line-111"></a><span class='hs-comment'>-- @</span>
-<a name="line-112"></a><span class='hs-comment'>--     'reduceWith' 'getMonadSum'</span>
-<a name="line-113"></a><span class='hs-comment'>-- @</span>
-<a name="line-114"></a><span class='hs-definition'>msum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span>
-<a name="line-115"></a><span class='hs-definition'>msum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getMonadSum</span>
-<a name="line-116"></a><span class='hs-comment'>{-# INLINE msum #-}</span>
-<a name="line-117"></a>
-<a name="line-118"></a><a name="foldMap"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-119"></a><span class='hs-comment'>--</span>
-<a name="line-120"></a><span class='hs-comment'>-- @</span>
-<a name="line-121"></a><span class='hs-comment'>--     'mapReduceWith' 'getSelf'</span>
-<a name="line-122"></a><span class='hs-comment'>-- @</span>
-<a name="line-123"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-124"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getSelf</span>
-<a name="line-125"></a><span class='hs-comment'>{-# INLINE foldMap #-}</span>
-<a name="line-126"></a>
-<a name="line-127"></a><a name="concatMap"></a><span class='hs-comment'>-- | Type specialization of "foldMap" above</span>
-<a name="line-128"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-129"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span>
-<a name="line-130"></a><span class='hs-comment'>{-# INLINE concatMap #-}</span>
-<a name="line-131"></a>
-<a name="line-132"></a><a name="fold"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-133"></a><span class='hs-comment'>--</span>
-<a name="line-134"></a><span class='hs-comment'>-- @</span>
-<a name="line-135"></a><span class='hs-comment'>--     'reduceWith' 'getSelf'</span>
-<a name="line-136"></a><span class='hs-comment'>-- @</span>
-<a name="line-137"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-138"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getSelf</span>
-<a name="line-139"></a><span class='hs-comment'>{-# INLINE fold #-}</span>
-<a name="line-140"></a>
-<a name="line-141"></a><a name="toList"></a><span class='hs-comment'>-- | Convert any 'Generator' to a list of its contents. Specialization of 'reduce'</span>
-<a name="line-142"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-143"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-144"></a><span class='hs-comment'>{-# INLINE toList #-}</span>
-<a name="line-145"></a>
-<a name="line-146"></a><a name="and"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
-<a name="line-147"></a><span class='hs-comment'>--</span>
-<a name="line-148"></a><span class='hs-comment'>-- @</span>
-<a name="line-149"></a><span class='hs-comment'>--     'reduceWith' 'getAll'</span>
-<a name="line-150"></a><span class='hs-comment'>-- @</span>
-<a name="line-151"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-152"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAll</span>
-<a name="line-153"></a><span class='hs-comment'>{-# INLINE and #-}</span>
-<a name="line-154"></a>
-<a name="line-155"></a><a name="or"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
-<a name="line-156"></a><span class='hs-comment'>--</span>
-<a name="line-157"></a><span class='hs-comment'>-- @</span>
-<a name="line-158"></a><span class='hs-comment'>--     'reduceWith' 'getAny'</span>
-<a name="line-159"></a><span class='hs-comment'>-- @</span>
-<a name="line-160"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-161"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAny</span>
-<a name="line-162"></a><span class='hs-comment'>{-# INLINE or #-}</span>
-<a name="line-163"></a>
-<a name="line-164"></a><a name="any"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if any of its values match the supplied predicate</span>
-<a name="line-165"></a><span class='hs-comment'>--</span>
-<a name="line-166"></a><span class='hs-comment'>-- @</span>
-<a name="line-167"></a><span class='hs-comment'>--     'mapReduceWith' 'getAny'</span>
-<a name="line-168"></a><span class='hs-comment'>-- @</span>
-<a name="line-169"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-170"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAny</span>
-<a name="line-171"></a><span class='hs-comment'>{-# INLINE any #-}</span>
-<a name="line-172"></a>
-<a name="line-173"></a><a name="all"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if all of its values match the supplied predicate</span>
-<a name="line-174"></a><span class='hs-comment'>--</span>
-<a name="line-175"></a><span class='hs-comment'>-- @</span>
-<a name="line-176"></a><span class='hs-comment'>--     'mapReduceWith' 'getAll'</span>
-<a name="line-177"></a><span class='hs-comment'>-- @</span>
-<a name="line-178"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-179"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAll</span>
-<a name="line-180"></a><span class='hs-comment'>{-# INLINE all #-}</span>
-<a name="line-181"></a>
-<a name="line-182"></a><a name="sum"></a><span class='hs-comment'>-- | Efficiently sum over the members of any 'Generator'</span>
-<a name="line-183"></a><span class='hs-comment'>--</span>
-<a name="line-184"></a><span class='hs-comment'>-- @</span>
-<a name="line-185"></a><span class='hs-comment'>--     'reduceWith' 'getSum'</span>
-<a name="line-186"></a><span class='hs-comment'>-- @</span>
-<a name="line-187"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-188"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getSum</span>
-<a name="line-189"></a><span class='hs-comment'>{-# INLINE sum #-}</span>
-<a name="line-190"></a>
-<a name="line-191"></a><a name="product"></a><span class='hs-comment'>-- | Efficiently take the product of every member of a 'Generator'</span>
-<a name="line-192"></a><span class='hs-comment'>--</span>
-<a name="line-193"></a><span class='hs-comment'>-- @</span>
-<a name="line-194"></a><span class='hs-comment'>--     'reduceWith' 'getProduct'</span>
-<a name="line-195"></a><span class='hs-comment'>-- @</span>
-<a name="line-196"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-197"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getProduct</span>
-<a name="line-198"></a><span class='hs-comment'>{-# INLINE product #-}</span>
-<a name="line-199"></a>
-<a name="line-200"></a><a name="elem"></a><span class='hs-comment'>-- | Check to see if 'any' member of the 'Generator' matches the supplied value</span>
-<a name="line-201"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-202"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
-<a name="line-203"></a><span class='hs-comment'>{-# INLINE elem #-}</span>
-<a name="line-204"></a>
-<a name="line-205"></a><a name="notElem"></a><span class='hs-comment'>-- | Check to make sure that the supplied value is not a member of the 'Generator'</span>
-<a name="line-206"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-207"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
-<a name="line-208"></a><span class='hs-comment'>{-# INLINE notElem #-}</span>
-<a name="line-209"></a>
-<a name="line-210"></a><a name="filter"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a subset of the elements in a 'Generator'</span>
-<a name="line-211"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-212"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-213"></a>    <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span>
-<a name="line-214"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-215"></a><span class='hs-comment'>{-# INLINE filter #-}</span>
-<a name="line-216"></a>
-<a name="line-217"></a><a name="filterWith"></a><span class='hs-comment'>-- | Allows idiomatic specialization of filter by proving a function that will be used to transform the output</span>
-<a name="line-218"></a><span class='hs-definition'>filterWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> 
-<a name="line-219"></a><span class='hs-definition'>filterWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-varid'>p</span>
-<a name="line-220"></a><span class='hs-comment'>{-# INLINE filterWith #-}</span>
-<a name="line-221"></a>
-<a name="line-222"></a><a name="find"></a><span class='hs-comment'>-- | A specialization of 'filter' using the 'First' 'Monoid', analogous to 'Data.List.find'</span>
-<a name="line-223"></a><span class='hs-comment'>--</span>
-<a name="line-224"></a><span class='hs-comment'>-- @</span>
-<a name="line-225"></a><span class='hs-comment'>--     'filterWith' 'getFirst'</span>
-<a name="line-226"></a><span class='hs-comment'>-- @</span>
-<a name="line-227"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-228"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>filterWith</span> <span class='hs-varid'>getFirst</span>
-<a name="line-229"></a><span class='hs-comment'>{-# INLINE find #-}</span>
-<a name="line-230"></a>
-<a name="line-231"></a><a name="replicate"></a><span class='hs-comment'>-- | A generalization of 'Data.List.replicate' to an arbitrary 'Monoid'. Adapted from </span>
-<a name="line-232"></a><span class='hs-comment'>-- &lt;<a href="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html">http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</a>&gt;</span>
-<a name="line-233"></a><span class='hs-definition'>replicate</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-234"></a><span class='hs-definition'>replicate</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span> 
-<a name="line-235"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span> <span class='hs-comment'>-- error "negative length"</span>
-<a name="line-236"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-237"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span>
-<a name="line-238"></a>    <span class='hs-keyword'>where</span>
-<a name="line-239"></a>        <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> 
-<a name="line-240"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span>
-<a name="line-241"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
-<a name="line-242"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-243"></a>        <span class='hs-varid'>g</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span> 
-<a name="line-244"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span>
-<a name="line-245"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span>
-<a name="line-246"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span>
-<a name="line-247"></a><span class='hs-comment'>{-# INLINE replicate #-}</span>
-<a name="line-248"></a>
-<a name="line-249"></a><a name="cycle"></a><span class='hs-comment'>-- | A generalization of 'Data.List.cycle' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
-<a name="line-250"></a><span class='hs-definition'>cycle</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-251"></a><span class='hs-definition'>cycle</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>xs'</span>
-<a name="line-252"></a>
-<a name="line-253"></a><a name="repeat"></a><span class='hs-comment'>-- | A generalization of 'Data.List.repeat' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
-<a name="line-254"></a><span class='hs-definition'>repeat</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-255"></a><span class='hs-definition'>repeat</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>cons</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs</span> 
-<a name="line-256"></a>
-<a name="line-257"></a><a name="prop_replicate_right_distributive"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-258"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
-<a name="line-259"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>y</span>
+<a name="line-20"></a>    <span class='hs-layout'>(</span> 
+<a name="line-21"></a>    <span class='hs-comment'>-- * List-Like Monoid Production</span>
+<a name="line-22"></a>      <span class='hs-varid'>repeat</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span>
+<a name="line-25"></a>    <span class='hs-comment'>-- * QuickCheck Properties</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_replicate_right_distributive</span>
+<a name="line-27"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>replicate</span><span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span><span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span><span class='hs-layout'>)</span>
+<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
+<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
+<a name="line-33"></a>
+<a name="line-34"></a>
+<a name="line-35"></a><a name="cycle"></a><span class='hs-comment'>-- | A generalization of 'Data.List.cycle' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
+<a name="line-36"></a><span class='hs-definition'>cycle</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-37"></a><span class='hs-definition'>cycle</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>xs'</span>
+<a name="line-38"></a>
+<a name="line-39"></a><a name="repeat"></a><span class='hs-comment'>-- | A generalization of 'Data.List.repeat' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
+<a name="line-40"></a><span class='hs-definition'>repeat</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-41"></a><span class='hs-definition'>repeat</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>cons</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs</span> 
+<a name="line-42"></a>
+<a name="line-43"></a><a name="replicate"></a><span class='hs-comment'>-- | A generalization of 'Data.List.replicate' to an arbitrary 'Monoid'. Adapted from </span>
+<a name="line-44"></a><span class='hs-comment'>-- &lt;<a href="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html">http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</a>&gt;</span>
+<a name="line-45"></a><span class='hs-definition'>replicate</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-46"></a><span class='hs-definition'>replicate</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span> 
+<a name="line-47"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span> <span class='hs-comment'>-- error "negative length"</span>
+<a name="line-48"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-49"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span>
+<a name="line-50"></a>    <span class='hs-keyword'>where</span>
+<a name="line-51"></a>        <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> 
+<a name="line-52"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span>
+<a name="line-53"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
+<a name="line-54"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-55"></a>        <span class='hs-varid'>g</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span> 
+<a name="line-56"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span>
+<a name="line-57"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span>
+<a name="line-58"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span>
+<a name="line-59"></a><span class='hs-comment'>{-# INLINE replicate #-}</span>
+<a name="line-60"></a>
+<a name="line-61"></a><a name="prop_replicate_right_distributive"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-62"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
+<a name="line-63"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>y</span>
hunk ./doc/html/monoids/src/Data-Monoid-FromString.html 31
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
hunk ./doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html 44
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
hunk ./doc/html/monoids/src/Data-Monoid-Lexical-Words.html 44
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
hunk ./doc/html/monoids/src/Data-Monoid-Multiplicative.html 76
-<a name="line-68"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-68"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
hunk ./doc/html/monoids/src/Data-Monoid-Self.html 36
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Natural.html 46
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Free</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>RLE</span>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Free</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Compressive</span><span class='hs-varop'>.</span><span class='hs-conid'>RLE</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Near.html 49
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
}
