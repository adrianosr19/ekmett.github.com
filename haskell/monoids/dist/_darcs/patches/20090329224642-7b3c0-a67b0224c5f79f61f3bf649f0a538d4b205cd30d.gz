[auto
ekmett@gmail.com**20090329224642] {
hunk ./doc/html/monoids/Data-Group-Combinators.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Group-Sugar.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Group.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Additive-Sugar.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Additive.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Applicative.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Categorical.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 350
+><A HREF="#v%3AtoList"
+>toList</A
+> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; c -&gt; [<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c]</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 1058
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AtoList"
+></A
+><B
+>toList</B
+> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; c -&gt; [<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Combinators.html#toList"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Convert any <TT
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+> to a list of its contents
+</TD
hunk ./doc/html/monoids/Data-Monoid-FromString.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Generator-Free.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Generator-Free.html 146
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><SPAN CLASS="keyword"
+>forall</SPAN
+> c . (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c ~ a) =&gt; <A NAME="v%3AAnyGenerator"
+></A
+><B
+>AnyGenerator</B
+> c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
hunk ./doc/html/monoids/Data-Monoid-Generator-Free.html 197
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> <A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+>Free</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Generator-Free.html 223
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+>Free</A
hunk ./doc/html/monoids/Data-Monoid-Generator-LZ78.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Generator-LZ78.html 78
+><TD
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><B
+>Contents</B
+></TD
+></TR
+><TR
+><TD
+><DL
+><DT
+><A HREF="#1"
+>Lempel-Ziv 78 
+</A
+></DT
+><DT
+><A HREF="#2"
+>Decoding
+</A
+></DT
+><DT
+><A HREF="#3"
+>Encoding
+</A
+></DT
+><DT
+><A HREF="#4"
+>QuickCheck Properties
+</A
+></DT
+></DL
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/Data-Monoid-Generator-LZ78.html 271
+><TD CLASS="section1"
+><A NAME="1"
+>Lempel-Ziv 78 
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/Data-Monoid-Generator-LZ78.html 379
+><TD CLASS="section1"
+><A NAME="2"
+>Decoding
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/Data-Monoid-Generator-LZ78.html 423
+><TD CLASS="section1"
+><A NAME="3"
+>Encoding
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/Data-Monoid-Generator-LZ78.html 503
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="4"
+>QuickCheck Properties
+</A
+></TD
+></TR
hunk ./doc/html/monoids/Data-Monoid-Generator-RLE.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Generator.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Generator.html 78
+><TD
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><B
+>Contents</B
+></TD
+></TR
+><TR
+><TD
+><DL
+><DT
+><A HREF="#1"
+>Generators
+</A
+></DT
+><DT
+><A HREF="#2"
+>Generator Transformers
+</A
+></DT
+><DT
+><A HREF="#3"
+>Combinators
+</A
+></DT
+></DL
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/Data-Monoid-Generator.html 295
-><A HREF="#v%3Areduce"
->reduce</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Generator.html 355
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3Areduce"
+>reduce</A
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; c -&gt; m</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AmapReduceWith"
+>mapReduceWith</A
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; n</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="#v%3AreduceWith"
+>reduceWith</A
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (m -&gt; n) -&gt; c -&gt; n</TD
+></TR
hunk ./doc/html/monoids/Data-Monoid-Generator.html 429
+><TD CLASS="section1"
+><A NAME="1"
+>Generators
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monoids/Data-Monoid-Generator.html 902
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areduce"
-></A
-><B
->reduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#reduce"
->Source</A
-></TD
-></TR
-></TABLE
+><TD CLASS="section1"
+><A NAME="2"
+>Generator Transformers
+</A
hunk ./doc/html/monoids/Data-Monoid-Generator.html 909
-><TD CLASS="doc"
->Apply a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> directly to the elements of a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</TD
-></TR
-><TR
hunk ./doc/html/monoids/Data-Monoid-Generator.html 1269
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="3"
+>Combinators
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Areduce"
+></A
+><B
+>reduce</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#reduce"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="doc"
+>Apply a <TT
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+></TT
+> directly to the elements of a <TT
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapReduceWith"
+></A
+><B
+>mapReduceWith</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (m -&gt; n) -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; n</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapReduceWith"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AreduceWith"
+></A
+><B
+>reduceWith</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c) m) =&gt; (m -&gt; n) -&gt; c -&gt; n</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#reduceWith"
+>Source</A
+></TD
hunk ./doc/html/monoids/Data-Monoid-Instances.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Monad.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Multiplicative.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Ord.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer-Char.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer-With.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 879
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
->Free</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 932
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Generator-Free.html#t%3AFree"
+>Free</A
+> a)</TD
hunk ./doc/html/monoids/Data-Monoid-Self.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Monoid-Union.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Boolean.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-FromNum.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Module.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Tropical.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Semi.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring-Sugar.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/Data-Ring.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/doc-index.html 7
->monoids-0.1.14: Lots of Monoids (Index)</TITLE
+>monoids-0.1.15: Lots of Monoids (Index)</TITLE
hunk ./doc/html/monoids/doc-index.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/doc-index.html 154
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 160
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 186
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 192
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 204
+>AnyGenerator</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator-Free.html#v%3AAnyGenerator"
+>Data.Monoid.Generator.Free</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monoids/doc-index.html 214
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 252
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 260
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 284
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 330
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 336
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 344
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 414
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 420
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 466
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 472
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 496
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 504
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 604
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 626
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 632
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 648
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 654
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 668
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 700
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 706
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 768
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 790
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 838
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 940
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 948
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 958
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 964
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1032
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1046
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1054
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mapReduceWith</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AmapReduceWith"
+>Data.Monoid.Generator</A
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1070
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1124
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1130
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1228
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1334
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1340
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1412
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1420
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1428
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>reduceWith</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AreduceWith"
+>Data.Monoid.Generator</A
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1472
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1620
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1702
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1708
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Generator.Free, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE, Data.Ring.Module.AutomaticDifferentiation</TD
hunk ./doc/html/monoids/doc-index.html 1727
+><TD CLASS="indexentry"
+>toList</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Combinators.html#v%3AtoList"
+>Data.Monoid.Combinators</A
+></TD
+></TR
+><TR CLASS="indexrow"
hunk ./doc/html/monoids/doc-index.html 1864
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Generator.Free, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1900
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/doc-index.html 1908
->, Data.Monoid.Generator.LZ78, Data.Monoid.Generator.Free, Data.Monoid.Combinators, Data.Monoid.Generator.RLE</TD
+>, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators, Data.Monoid.Generator.Free, Data.Monoid.Generator.RLE</TD
hunk ./doc/html/monoids/index.html 7
->monoids-0.1.14: Lots of Monoids</TITLE
+>monoids-0.1.15: Lots of Monoids</TITLE
hunk ./doc/html/monoids/index.html 22
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
hunk ./doc/html/monoids/index.html 37
->monoids-0.1.14: Lots of Monoids</TD
+>monoids-0.1.15: Lots of Monoids</TD
binary ./doc/html/monoids/monoids.haddock
oldhex
*0d0cface00040000000000010704000000000000eec4c200000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000002000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000600
*000000000000260000000000000000000000000000000600000000000000270000000000000000
*000000000000000600000000000000280000000000000000000000000000000600000000000000
*2900000000000000000000000000000006000000000000002a0000000000000000000000000000
*0006000000000000002b00000000000000000000000000000007000000000000002c0000000000
*0000000000000000000007000000000000002d0000000000000000000000000000000700000000
*0000002e00000000000000000000000000000007000000000000002f0000000000000000000000
*000000000700000000000000300000000000000000000000000000000700000000000000310000
*000000000000000000000000000700000000000000320000000000000000000000000000000700
*000000000000330000000000000000000000000000000800000000000000340000000000000000
*000000000000000800000000000000350000000000000000000000000000000800000000000000
*360000000000000000000000000000000800000000000000370000000000000000000000000000
*000800000000000000380000000000000000000000000000000800000000000000390000000000
*0000000000000000000008000000000000003a0000000000000000000000000000000800000000
*0000003b00000000000000000000000000000008000000000000003c0000000000000000000000
*0000000008000000000000003d00000000000000000000000000000009000000000000003e0000
*0000000000000000000000000009000000000000003f0000000000000000000000000000000900
*000000000000400000000000000000000000000000000a00000000000000410000000000000000
*000000000000000a00000000000000420000000000000000000000000000000a00000000000000
*430000000000000000000000000000000a00000000000000440000000000000000000000000000
*000a00000000000000450000000000000000000000000000000a00000000000000460000000000
*000000000000000000000b00000000000000470000000000000000000000000000000b00000000
*000000480000000000000000000000000000000b00000000000000490000000000000000000000
*000000000c000000000000004a0000000000000000000000000000000c000000000000004b0000
*000000000000000000000000000c000000000000004c0000000000000000000000000000000c00
*0000000000004d0000000000000000000000000000000c000000000000004e0000000000000000
*000000000000000c000000000000004f0000000000000000000000000000000d00000000000000
*500000000000000000000000000000000d00000000000000510000000000000000000000000000
*000e00000000000000520000000000000000000000000000000f00000000000000530000000000
*000000000000000000001000000000000000540000000000000000000000000000001000000000
*000000550000000000000000000000000000001000000000000000560000000000000000000000
*000000001000000000000000570000000000000000000000000000001000000000000000580000
*000000000000000000000000001000000000000000590000000000000000000000000000001000
*0000000000005a00000000000000000000000000000010000000000000005b0000000000000000
*0000000000000010000000000000005c0000000000000000000000000000001100000000000000
*5d00000000000000000000000000000012000000000000005e0000000000000000000000000000
*0012000000000000005f0000000000000000000000000000001300000000000000600000000000
*000000000000000000001400000000000000610000000000000000000000000000001400000000
*000000620000000000000000000000000000001400000000000000630000000000000000000000
*000000001400000000000000640000000000000000000000000000001400000000000000650000
*000000000000000000000000001400000000000000660000000000000000000000000000001400
*000000000000670000000000000000000000000000001400000000000000680000000000000000
*000000000000001400000000000000690000000000000000000000000000001400000000000000
*6a00000000000000000000000000000014000000000000006b0000000000000000000000000000
*0014000000000000006c00000000000000000000000000000014000000000000006d0000000000
*0000000000000000000014000000000000006e0000000000000000000000000000001500000000
*0000006f0000000000000000000000000000001500000000000000700000000000000000000000
*000000001500000000000000710000000000000000000000000000001500000000000000720000
*000000000000000000000000001500000000000000730000000000000000000000000000001500
*000000000000740000000000000000000000000000001500000000000000750000000000000000
*000000000000001600000000000000760000000000000000000000000000001600000000000000
*770000000000000000000000000000001600000000000000780000000000000000000000000000
*0016000000000000007900000000000000000000000000000017000000000000007a0000000000
*0000000000000000000017000000000000007b0000000000000000000000000000001700000000
*0000007c00000000000000000000000000000017000000000000007d0000000000000000000000
*0000000018000000000000007e00000000000000000000000000000018000000000000007f0000
*000000000000000000000000001900000000000000800000000000000000000000000000001900
*000000000000810000000000000000000000000000001900000000000000820000000000000000
*000000000000001a00000000000000830000000000000000000000000000001b00000000000000
*840000000000000000000000000000001b00000000000000850000000000000000000000000000
*001b00000000000000860000000000000000000000000000001c00000000000000870000000000
*000000000000000000001c00000000000000880000000000000000000000000000001c00000000
*000000890000000000000000000000000000001d000000000000008a0000000000000000000000
*000000001d000000000000008b0000000000000000000000000000001d000000000000008c0000
*000000000000000000000000001d000000000000008d0000000000000000000000000000001d00
*0000000000008e0000000000000000000000000000001e000000000000008f0000000000000000
*000000000000001e00000000000000900000000000000000000000000000001e00000000000000
*910000000000000000000000000000001e00000000000000920000000000000000000000000000
*001e00000000000000930000000000000000000000000000001e00000000000000940000000000
*000000000000000000001e00000000000000950000000000000000000000000000001e00000000
*000000960000000000000000000000000000001e00000000000000970000000000000000000000
*000000001e00000000000000980000000000000000000000000000001f00000000000000990000
*000000000000000000000000001f000000000000009a0000000000000000000000000000001f00
*0000000000009b0000000000000000000000000000001f000000000000009c0000000000000000
*000000000000001f000000000000009d0000000000000000000000000000001f00000000000000
*9e0000000000000000000000000000001f000000000000009f0000000000000000000000000000
*001f00000000000000a00000000000000000000000000000001f00000000000000a10000000000
*000000000000000000001f00000000000000a20000000000000000000000000000002000000000
*000000a30000000000000000000000000000002000000000000000a40000000000000000000000
*000000002000000000000000a50000000000000000000000000000002000000000000000a60000
*000000000000000000000000002000000000000000a70000000000000000000000000000002000
*000000000000a80000000000000000000000000000002000000000000000a90000000000000000
*000000000000002000000000000000aa0000000000000000000000000000002000000000000000
*ab0000000000000000000000000000002000000000000000ac0000000000000000000000000000
*002000000000000000ad0000000000000000000000000000002000000000000000ae0000000000
*000000000000000000002000000000000000af0000000000000000000000000000002000000000
*000000b00000000000000000000000000000002000000000000000b10000000000000000000000
*000000002000000000000000b20000000000000000000000000000002000000000000000b30000
*000000000000000000000000002000000000000000b40000000000000000000000000000002000
*000000000000b50000000000000000000000000000002000000000000000b60000000000000000
*000000000000002000000000000000b70000000000000000000000000000002100000000000000
*b80000000000000000000000000000002100000000000000b90000000000000000000000000000
*002100000000000000ba0000000000000000000000000000002100000000000000bb0000000000
*000000000000000000002100000000000000bc0000000000000000000000000000002100000000
*000000bd0000000000000000000000000000002100000000000000be0000000000000000000000
*000000002100000000000000bf0000000000000000000000000000002100000000000000c00000
*000000000000000000000000002100000000000000c10000000000000000000000000000002224
*00000000000000000000000000000023000108000000700000006f000000720000007400000061
*000000620000006c00000065010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c01150000006c00000069000000620000
*007200000061000000720000006900000065000000730000004000000068000000610000007300
*00006b000000650000006c0000006c0000002e0000006f00000072000000670000000000000000
*00000000000000000000010001140000006e0000006f0000006e0000002d000000700000006f00
*0000720000007400000061000000620000006c0000006500000020000000280000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c01150000006c000000690000
*006200000072000000610000007200000069000000650000007300000040000000680000006100
*0000730000006b000000650000006c0000006c0000002e0000006f000000720000006706000000
*000000000001030102240000005400000068000000690000007300000020000000740000007900
*00007000000065000000200000006d000000610000007900000020000000620000006500000020
*000000620000006500000073000000740000002000000072000000650000006100000064000000
*20000000690000006e0000006600000069000000780000002e0000002000000041000000200107
*010202000000630000002001040100000000000000000000000000000000000000000000000001
*0202000000200000006d0102060000002000000069000000730000002000000061000000200104
*010000000000000000c20000000000000024000000000000002501020100000020010702010000
*006d01020b0000002000000074000000680000006100000074000000200000006d000000610000
*0070000000730000000a0102100000002000000076000000610000006c00000075000000650000
*0073000000200000006f0000006600000020000000740000007900000070000000650000002001
*07020100000063010209000000200000007400000068000000720000006f000000750000006700
*0000680000002001070204000000750000006e0000006900000074010213000000200000007400
*00006f0000002000000076000000610000006c000000750000006500000073000000200000006f
*00000066000000200000007400000079000000700000006500000020010702010000006d010204
*0000002e00000020000000410000002001070201000000630102010000002d0104010000000000
*000000000000000000000000000000000000000101020a000000200000006d0000006100000079
*00000020000000610000006c000000730000006f0000000a010229000000200000007300000075
*00000070000000700000006c00000079000000200000006f000000700000006500000072000000
*6100000074000000690000006f0000006e00000073000000200000007700000068000000690000
*006300000068000000200000007400000061000000630000006b0000002d0000006f0000006e00
*000020000000610000006e0000006f000000740000006800000065000000720000002001070201
*0000006301021000000020000000740000006f00000020000000610000006e0000002000000065
*00000078000000690000007300000074000000690000006e000000670000002001040100000000
*00000000c20000000000000024000000000000002501020100000020010702010000006d01020d
*000000200000006f0000006e00000020000000740000006800000065000000200000006c000000
*6500000066000000740000000a010250000000200000006f000000720000002000000072000000
*690000006700000068000000740000002e00000020000000540000006800000065000000730000
*0065000000200000007300000070000000650000006300000069000000610000006c0000006900
*00007a000000650000006400000020000000720000006500000064000000750000006300000074
*000000690000006f0000006e00000073000000200000006d000000610000007900000020000000
*6200000065000000200000006d0000006f00000072000000650000002000000065000000660000
*0066000000690000006300000069000000650000006e0000007400000020000000690000006e00
*000020000000730000006f0000006d00000065000000200000007300000063000000650000006e
*0000006100000072000000690000006f000000730000000a01022400000020000000610000006e
*000000640000002000000061000000720000006500000020000000750000007300000065000000
*64000000200000007700000068000000650000006e000000200000006100000070000000700000
*00720000006f000000700000007200000069000000610000007400000065000000200000006200
*00007900000020000000610000002001020900000047000000650000006e000000650000007200
*000061000000740000006f0000007201020c0000002e0000002000000054000000680000006500
*0000200000006e000000610000006d000000650000007300000020010401000000000000000003
*0000000000000000000000000000000101020500000020000000610000006e0000006400000020
*010401000000000000000002000000000000000000000000000000010102060000002000000077
*0000006f000000720000006b0000000a023d000000200000006200000079000000200000006100
*00006e000000610000006c0000006f000000670000007900000020000000740000006f00000020
*0000007400000068000000650000002000000073000000790000006e0000006f0000006e000000
*790000006d0000006f0000007500000073000000200000006f0000007000000065000000720000
*006100000074000000690000006f0000006e0000007300000020000000690000006e0000002000
*0000740000006800000065000000200000006c000000690000007300000074000000200000006d
*0000006f0000006e0000006f00000069000000640000002e0000000a010301024c000000540000
*0068000000690000007300000020000000630000006c0000006100000073000000730000002000
*000064000000650000006c00000069000000620000006500000072000000610000007400000065
*0000006c000000790000002000000061000000760000006f000000690000006400000073000000
*2000000066000000750000006e0000006300000074000000690000006f0000006e000000610000
*006c0000002d000000640000006500000070000000650000006e00000064000000650000006e00
*0000630000006900000065000000730000002c00000020000000730000006f0000002000000074
*000000680000006100000074000000200000002800000029000000200000006300000061000000
*6e0000002000000062000000650000002000000061000000200107020100000063010209000000
*2d000000520000006500000064000000750000006300000065000000720000000a010209000000
*20000000660000006f0000007200000020000000610000006c0000006c00000020010702010000
*006301024a0000002c00000020000000610000006e0000006400000020000000730000006f0000
*00200000006d000000610000006e0000007900000020000000630000006f0000006d0000006d00
*00006f0000006e0000002000000072000000650000006400000075000000630000006500000072
*000000730000002000000063000000610000006e00000020000000770000006f00000072000000
*6b000000200000006f000000760000006500000072000000200000006d000000750000006c0000
*007400000069000000700000006c00000065000000200000007400000079000000700000006500
*0000730000002c00000020000000660000006f0000007200000020000000690000006e00000073
*00000074000000610000006e00000063000000650000002c0000000a0102200000002000000046
*0000006900000072000000730000007400000020000000610000006e0000006400000020000000
*4c000000610000007300000074000000200000006d000000610000007900000020000000720000
*00650000006400000075000000630000006500000020000000620000006f000000740000006800
*000020010702010000006101020500000020000000610000006e00000064000000200104010000
*000000000000c30000000000000024000000000000002601020100000020010702010000006101
*020a0000002e0000002000000053000000690000006e0000006300000065000000200000006100
*00002001020900000047000000650000006e000000650000007200000061000000740000006f00
*000072010215000000200000006800000061000000730000002000000061000000200000006600
*00006900000078000000650000006400000020000000650000006c000000650000006d00000065
*0000006e000000740000000a01025a00000020000000740000007900000070000000650000002c
*0000002000000074000000680000006500000020000000690000006e0000007000000075000000
*7400000020000000740000006f0000002000000074000000680000006500000020000000720000
*006500000064000000750000006300000065000000720000002000000069000000730000002000
*000067000000650000006e0000006500000072000000610000006c0000006c0000007900000020
*0000006b0000006e0000006f000000770000006e00000020000000610000006e00000064000000
*2000000065000000780000007400000072000000610000006300000074000000690000006e0000
*00670000002000000066000000720000006f0000006d0000002000000074000000680000006500
*0000200000006d0000006f0000006e0000006f0000006900000064000000200000007500000073
*00000075000000610000006c0000006c000000790000000a01025a000000200000006900000073
*000000200000007300000075000000660000006600000069000000630000006900000065000000
*6e0000007400000020000000740000006f00000020000000660000006900000078000000200000
*0074000000680000006500000020000000720000006500000073000000750000006c0000007400
*000020000000740000007900000070000000650000002e00000020000000430000006f0000006d
*00000062000000690000006e00000061000000740000006f000000720000007300000020000000
*61000000720000006500000020000000610000007600000061000000690000006c000000610000
*00620000006c0000006500000020000000660000006f00000072000000200000006d0000006f00
*00007300000074000000200000007300000063000000650000006e000000610000007200000069
*0000006f000000730000002000000077000000680000006500000072000000650000000a010258
*000000200000007400000068000000690000007300000020000000690000007300000020000000
*6e0000006f00000074000000200000007400000068000000650000002000000063000000610000
*0073000000650000002c00000020000000610000006e0000006400000020000000740000006800
*000065000000200000006600000065000000770000002000000072000000650000006d00000061
*000000690000006e000000690000006e0000006700000020000000630000006100000073000000
*65000000730000002000000063000000610000006e000000200000006200000065000000200000
*0068000000610000006e000000640000006c000000650000006400000020000000620000007900
*0000200000007500000073000000690000006e0000006700000020000000610000006e00000020
*0000006500000078000000700000006c0000006900000063000000690000007400000020000000
*0a0212000000200000007400000079000000700000006500000020000000610000006e0000006e
*0000006f000000740000006100000074000000690000006f0000006e0000002e0000000a030102
*140000004d000000690000006e000000690000006d000000610000006c00000020000000640000
*006500000066000000690000006e0000006900000074000000690000006f0000006e0000003a00
*000020010401000000000000000001000000000000000000000000000000010102040000002000
*00006f000000720000002001040100000000000000000200000000000000000000000000000001
*02010000000a000000000000000103010217000000430000006f0000006e000000760000006500
*0000720000007400000020000000610000002000000076000000610000006c0000007500000065
*00000020000000690000006e000000740000006f00000020000000610000002001040100000000
*00000000c20000000000000024000000000000002502010000000a000000000000000203010214
*000000410000007000000070000000650000006e00000064000000200000006100000020000000
*76000000610000006c000000750000006500000020000000740000006f00000020000000610000
*00200104010000000000000000c200000000000000240000000000000025022400000020000000
*660000006f000000720000002000000075000000730000006500000020000000690000006e0000
*00200000006c0000006500000066000000740000002d000000740000006f0000002d0000007200
*000069000000670000006800000074000000200000007200000065000000640000007500000063
*00000074000000690000006f0000006e0000000a00000000000000030301021700000050000000
*720000006500000070000000650000006e00000064000000200000006100000020000000760000
*00610000006c0000007500000065000000200000006f0000006e000000740000006f0000002000
*000061000000200104010000000000000000c20000000000000024000000000000002502280000
*0020000000660000006f0000007200000020000000750000007300000065000000200000006400
*00007500000072000000690000006e000000670000002000000072000000690000006700000068
*000000740000002d000000740000006f0000002d0000006c000000650000006600000074000000
*20000000720000006500000064000000750000006300000074000000690000006f0000006e0000
*000a0000000000000004030102080000004100000070000000700000006c000000790000002000
*000061000000200104010000000000000000000000000000000000000000000000000101020600
*000020000000740000006f0000002000000061000000200104010000000000000000c400000000
*000000240000000000000027024b00000020000000630000006f0000006e000000740000006100
*0000690000006e00000065000000720000002c0000002000000061000000660000007400000065
*00000072000000200000006d000000610000007000000070000000690000006e00000067000000
*2000000074000000680000006500000020000000630000006f0000006e00000074000000650000
*006e000000740000007300000020000000690000006e000000740000006f000000200000006100
*0000200000007300000075000000690000007400000061000000620000006c0000006500000020
*000000660000006f000000720000006d00000020000000660000006f0000007200000020000000
*720000006500000064000000750000006300000074000000690000006f0000006e0000002e0000
*000a0000000000000005030102080000004100000070000000700000006c000000790000002000
*000061000000200104010000000000000000000000000000000000000000000000000101020600
*000020000000740000006f0000002000000061000000200104010000000000000000c400000000
*00000024000000000000002701021e000000200000006d00000061000000700000007000000069
*0000006e0000006700000020000000650000006100000063000000680000002000000065000000
*6c000000650000006d000000650000006e00000074000000200000007400000068000000720000
*006f00000075000000670000006800000020010401000000000000000001000000000000000000
*0000000000000102010000000a2400000000000000c500000000000000c600000000000000c700
*000000000000c200000000000000c800000000000000c900000000000000ca00000000000000cb
*00000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000
*d000000000000000d100000000000000d200000000000000d300000000000000d4000000000000
*00d500000000000000d600000000000000d700000000000000d800000000000000d90000000000
*0000da00000000000000db00000000000000dc00000000000000dd00000000000000de00000000
*000000df0000000000000000000000000000000100000000000000020000000000000003000000
*000000000400000000000000050000000000000006000000000000000708000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*00000000000000070000000000000006000000000000000000000000000000020001140000006e
*0000006f0000006e0000002d000000700000006f00000072000000740000006100000062000000
*6c0000006500000020000000280000004d0000005000000054000000430000007300000029010c
*0000006500000078000000700000006500000072000000690000006d000000650000006e000000
*74000000610000006c01150000006c000000690000006200000072000000610000007200000069
*0000006500000073000000400000006800000061000000730000006b000000650000006c000000
*6c0000002e0000006f000000720000006701000000000000000803010222000000500000007200
*00006f00000076000000690000006400000065000000730000002000000061000000200000006d
*000000650000006300000068000000610000006e00000069000000730000006d00000020000000
*660000006f00000072000000200000007400000068000000650000002000000055000000540000
*004600000038000000200104010000000000000000c20000000000000024000000000000002502
*3600000020000000740000006f000000200000007200000065000000700000006f000000720000
*007400000020000000690000006e00000076000000610000006c00000069000000640000002000
*000063000000680000006100000072000000610000006300000074000000650000007200000073
*00000020000000740000006f000000200000006f0000006e00000065000000200000006f000000
*72000000200000006d0000006f0000007200000065000000200000006d0000006f0000006e0000
*006f0000006900000064000000730000002e0000000a2700000000000000c500000000000000c6
*00000000000000c700000000000000c200000000000000c800000000000000c900000000000000
*ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce000000000000
*00cf00000000000000d000000000000000d100000000000000d200000000000000d30000000000
*0000d400000000000000d500000000000000d600000000000000d700000000000000d800000000
*000000d900000000000000da00000000000000db00000000000000dc00000000000000dd000000
*00000000de00000000000000df0000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000700
*000000000000080000000000000009000000000000000a03000000000000000800000000000000
*0a0000000000000009000000000000000000000000000000030001140000006e0000006f000000
*6e0000002d000000700000006f000000720000007400000061000000620000006c000000650000
*0020000000280000004d0000005000000054000000430000007300000029010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c01150000006c00000069000000620000007200000061000000720000006900000065000000
*73000000400000006800000061000000730000006b000000650000006c0000006c0000002e0000
*006f0000007200000067002900000000000000c500000000000000c600000000000000c7000000
*00000000c200000000000000c800000000000000c900000000000000ca00000000000000cb0000
*0000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000
*000000000000d100000000000000d200000000000000d300000000000000d400000000000000d5
*00000000000000d600000000000000d700000000000000d800000000000000d900000000000000
*da00000000000000db00000000000000dc00000000000000dd00000000000000de000000000000
*00df00000000000000000000000000000001000000000000000200000000000000030000000000
*000004000000000000000500000000000000060000000000000007000000000000000800000000
*00000009000000000000000a000000000000000b000000000000000c02000000000000000b0000
*00000000000c000000000000000000000000000000040001140000006e0000006f0000006e0000
*002d000000700000006f000000720000007400000061000000620000006c000000650000002000
*0000280000004d0000005000000054000000430000007300000029010c00000065000000780000
*00700000006500000072000000690000006d000000650000006e00000074000000610000006c01
*150000006c00000069000000620000007200000061000000720000006900000065000000730000
*00400000006800000061000000730000006b000000650000006c0000006c0000002e0000006f00
*0000720000006701000000000000000d0301020300000049000000660000002001070201000000
*6d0102060000002000000069000000730000002000000061000000200107020100000063010201
*0000002d0105070000005200000065000000640000007500000063000000650000007201020c00
*00002c000000200000007400000068000000650000006e000000200000006d0000002000000069
*0000007300000020010701020300000028000000630000002001040200000000000000000e0000
*000000000000000000000000000400000000000000000d00000000000000000000000000000004
*0203000000200000006d000000290102010000002d010507000000520000006500000064000000
*750000006300000065000000720102010000000a01022800000020000000200000002000000054
*0000006800000069000000730000002000000063000000610000006e0000002000000062000000
*65000000200000007500000073000000650000006400000020000000740000006f000000200000
*00710000007500000069000000630000006b0000006c0000007900000020000000730000006500
*00006c000000650000006300000074000000200000006100000020010507000000520000006500
*0000640000007500000063000000650000007201020e00000020000000660000006f0000007200
*000020000000750000007300000065000000200000006100000073000000200000006100000020
*0104010100000000000000e00102010000000a0102030000002000000020000000200104010100
*000000000000e102020000002e0000000a2700000000000000c500000000000000c60000000000
*0000c700000000000000c200000000000000c800000000000000c900000000000000ca00000000
*000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf000000
*00000000d000000000000000d100000000000000d200000000000000d300000000000000d40000
*0000000000d500000000000000d600000000000000d700000000000000d800000000000000d900
*000000000000da00000000000000db00000000000000dc00000000000000dd00000000000000de
*00000000000000df00000000000000000000000000000001000000000000000200000000000000
*030000000000000004000000000000000500000000000000060000000000000007000000000000
*000d000000000000000e000000000000000f03000000000000000d000000000000000e00000000
*0000000f0000000000000000000000000000000500000000040000000000000010030102040000
*00540000006800000065000000200104010000000000000000c200000000000000240000000000
*0000250102010000002001070102010000002801020100000027010211000000750000006e0000
*00690000006f0000006e00000057000000690000007400000068000000200000006d0000006100
*00007000000070000000650000006e00000064010201000000270102010000002c010401000000
*00000000001a000000000000000000000000000000050201000000290221000000200000006600
*00006f0000007200000020000000630000006f0000006e0000007400000061000000690000006e
*0000006500000072000000730000002000000066000000750000006c0000006c00000020000000
*6f00000066000000200000006d0000006f0000006e0000006f0000006900000064000000730000
*002e0000000a000000000000001303024d000000500000006f0000006c000000790000006d0000
*006f000000720000007000000068000000690000006300000020000000630000006f0000006e00
*00007400000061000000690000006e000000650000007200000073000000200000007400000068
*00000061000000740000002000000077000000650000002000000063000000610000006e000000
*20000000730000007500000070000000700000006c0000007900000020000000610000006e0000
*00200000006f0000007000000065000000720000006100000074000000690000006f0000006e00
*000020000000740000006f0000002000000068000000610000006e000000640000006c00000065
*00000020000000750000006e000000690000006f0000006e000000730000002000000077000000
*6900000074000000680000000a0000000000000016030102040000005400000068000000650000
*00200104010000000000000000c200000000000000240000000000000025010201000000200107
*0102010000002801040100000000000000001b0000000000000000000000000000000501020100
*00002c01040100000000000000001a000000000000000000000000000000050201000000290201
*0000000a00000000000000190301021d0000004100000020000000430000006f0000006e000000
*7400000061000000690000006e0000006500000072000000200000007300000075000000690000
*007400000061000000620000006c0000006500000020000000660000006f000000720000002000
*000074000000680000006500000020010402000000000000000017000000000000000000000000
*000000050000000000000000160000000000000000000000000000000501020100000020010401
*0000000000000000c20000000000000024000000000000002502010000000a1300000000000000
*c500000000000000c700000000000000c200000000000000000000000000000001000000000000
*000200000000000000030000000000000010000000000000001100000000000000120000000000
*000013000000000000001400000000000000150000000000000016000000000000001700000000
*000000180000000000000019000000000000001a000000000000001b0c00000000000000190000
*00000000001a000000000000001b00000000000000160000000000000017000000000000001800
*000000000000130000000000000015000000000000001400000000000000100000000000000011
*000000000000001200000000000000000000000000000006000108000000700000006f00000072
*0000007400000061000000620000006c00000065010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c01150000006c0000
*006900000062000000720000006100000072000000690000006500000073000000400000006800
*000061000000730000006b000000650000006c0000006c0000002e0000006f0000007200000067
*05000000000000001c030102020000006100000020010401000000000000000025000000000000
*00000000000000000006010219000000200000007400000072000000610000006e000000730000
*00660000006f000000720000006d00000065000000720000002000000074000000680000006100
*000074000000200000007400000072000000650000006100000074000000730000002001040100
*00000000000000e200000000000000240000000000000028010204000000200000006100000073
*000000200104010000000000000000e30000000000000029000000000000002a0102010000000a
*0102150000002000000054000000680000006900000073000000200000006c0000006500000074
*0000007300000020000000790000006f0000007500000020000000750000007300000065000000
*20000000610000002001020a000000420000007900000074000000650000005300000074000000
*72000000690000006e000000670102060000002000000061000000730000002000000061000000
*200104010000000000000000e30000000000000029000000000000002a01022000000020000000
*730000006f00000075000000720000006300000065000000200000007700000069000000740000
*00680000006f000000750000007400000020000000670000006f000000690000006e0000006700
*0000200000007400000068000000720000006f0000007500000067000000680000002000000061
*000000200104010000000000000000c20000000000000024000000000000002501021200000020
*0000007400000072000000610000006e00000073000000660000006f000000720000006d000000
*6500000072000000200000006c000000690000006b000000650000002001020400000055000000
*54000000460000003802010000000a000000000000001f03010202000000610000002001040100
*000000000000002500000000000000000000000000000006024d00000020000000740000007200
*0000610000006e00000073000000660000006f000000720000006d000000650000007200000020
*000000740000006800000061000000740000002000000061000000730000006b00000073000000
*200000006f0000006e0000006c0000007900000020000000660000006f00000072000000200000
*007400000068000000650000002000000076000000610000006c00000075000000650000007300
*000020000000630000006f0000006e0000007400000061000000690000006e0000006500000064
*00000020000000690000006e00000020000000610000006e00000020000000690000006e000000
*640000006500000078000000650000006400000020000000630000006f0000006e000000740000
*0061000000690000006e00000065000000720000000a0000000000000022030102020000006100
*000020010401000000000000000025000000000000000000000000000000060241000000200000
*007400000072000000610000006e00000073000000660000006f000000720000006d0000006500
*00007200000020000000740000006800000061000000740000002000000061000000730000006b
*00000073000000200000006f0000006e0000006c0000007900000020000000660000006f000000
*7200000020000000740000006800000065000000200000006b0000006500000079000000730000
*00200000006f0000006600000020000000610000006e00000020000000690000006e0000006400
*00006500000078000000650000006400000020000000630000006f0000006e0000007400000061
*000000690000006e00000065000000720000000a0000000000000025030102130000006d000000
*690000006e000000690000006d000000610000006c000000200000006400000065000000660000
*00690000006e0000006900000074000000690000006f0000006e00000020010401000000000000
*00002700000000000000000000000000000006010204000000200000006f000000720000002001
*04010000000000000000280000000000000000000000000000000602010000000a000000000000
*002a030102080000004100000070000000700000006c0000007900000020000000610000002001
*04010000000000000000000000000000000000000000000000000101021f000000200000006400
*000069000000720000006500000063000000740000006c0000007900000020000000740000006f
*0000002000000074000000680000006500000020000000650000006c000000650000006d000000
*650000006e0000007400000073000000200000006f000000660000002000000061000000200104
*010000000000000000250000000000000000000000000000000602010000000a33000000000000
*00c500000000000000c600000000000000c700000000000000c200000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d400000000000000d500000000000000d600000000000000d70000
*0000000000d800000000000000d900000000000000da00000000000000db00000000000000dc00
*000000000000dd00000000000000de00000000000000df00000000000000000000000000000001
*000000000000000200000000000000030000000000000004000000000000000500000000000000
*060000000000000007000000000000001c000000000000001d000000000000001e000000000000
*001f00000000000000200000000000000021000000000000002200000000000000230000000000
*000024000000000000002500000000000000260000000000000027000000000000002800000000
*00000029000000000000002a0f0000000000000025000000000000002600000000000000270000
*0000000000280000000000000029000000000000002a0000000000000022000000000000002300
*00000000000024000000000000001f00000000000000200000000000000021000000000000001c
*000000000000001d000000000000001e000000000000000000000000000000070001270000006e
*0000006f0000006e0000002d000000700000006f00000072000000740000006100000062000000
*6c0000006500000020000000280000004d000000500000005400000043000000730000002c0000
*00200000004f0000007600000065000000720000006c0000006f00000061000000640000006500
*000064000000530000007400000072000000690000006e000000670000007300000029010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c01150000006c0000006900000062000000720000006100000072000000690000
*006500000073000000400000006800000061000000730000006b000000650000006c0000006c00
*00002e0000006f000000720000006706000000000000002b030102020000004100000020010401
*0000000000000000c20000000000000024000000000000002501023a000000200000006f000000
*66000000200000007000000061000000720000007400000069000000610000006c000000200000
*00690000006e000000660000006f000000720000006d0000006100000074000000690000006f00
*00006e0000002000000061000000620000006f0000007500000074000000200000006c0000006f
*000000630000006100000074000000690000006f0000006e000000730000002000000069000000
*6e000000200000006100000020000000730000006f000000750000007200000063000000650000
*002000000066000000690000006c000000650000002e0000000a025f0000002000000020000000
*200000005400000068000000690000007300000020000000690000007300000020000000700000
*006f0000006c000000790000006d0000006f000000720000007000000068000000690000006300
*000020000000690000006e00000020000000740000006800000065000000200000006b00000069
*0000006e00000064000000200000006f0000006600000020000000690000006e00000066000000
*6f000000720000006d0000006100000074000000690000006f0000006e00000020000000790000
*006f000000750000002000000077000000610000006e0000007400000020000000740000006f00
*0000200000006d00000061000000690000006e0000007400000061000000690000006e00000020
*00000061000000620000006f000000750000007400000020000000650000006100000063000000
*6800000020000000730000006f0000007500000072000000630000006500000020000000660000
*00690000006c000000650000002e0000000a000000000000002e03023f000000430000006f0000
*006d00000070000000750000007400000065000000200000007400000068000000650000002000
*00006c0000006f000000630000006100000074000000690000006f0000006e000000200000006f
*0000006600000020000000740000006800000065000000200000006e0000006500000078000000
*74000000200000007300000074000000610000006e000000640000006100000072000000640000
*0020000000380000002d000000630000006f0000006c000000750000006d0000006e0000002000
*0000610000006c00000069000000670000006e0000006500000064000000200000007400000061
*000000620000000a000000000000002f030102350000006c000000690000006600000074000000
*20000000690000006e000000660000006f000000720000006d0000006100000074000000690000
*006f0000006e0000002000000061000000620000006f0000007500000074000000200000006100
*000020000000730000006f00000075000000720000006300000065000000200000006600000069
*0000006c0000006500000020000000690000006e000000740000006f0000002000000061000000
*200000007300000074000000610000007200000074000000690000006e00000067000000200104
*0100000000000000002b00000000000000000000000000000007020f0000002000000066000000
*6f0000007200000020000000740000006800000061000000740000002000000066000000690000
*006c000000650000000a000000000000003003026a000000650000007800000074000000720000
*006100000063000000740000002000000070000000610000007200000074000000690000006100
*00006c00000020000000690000006e000000660000006f000000720000006d0000006100000074
*000000690000006f0000006e0000002000000061000000620000006f0000007500000074000000
*200000007400000068000000650000002000000063000000750000007200000072000000650000
*006e0000007400000020000000630000006f0000006c000000750000006d0000006e0000002c00
*0000200000006500000076000000650000006e00000020000000690000006e0000002000000074
*000000680000006500000020000000610000006200000073000000650000006e00000063000000
*65000000200000006f00000066000000200000006b0000006e0000006f000000770000006c0000
*0065000000640000006700000065000000200000006f0000006600000020000000740000006800
*00006500000020000000730000006f000000750000007200000063000000650000002000000066
*000000690000006c000000650000000a0000000000000031030246000000650000007800000074
*000000720000006100000063000000740000002000000070000000610000007200000074000000
*69000000610000006c00000020000000690000006e000000660000006f000000720000006d0000
*006100000074000000690000006f0000006e0000002000000061000000620000006f0000007500
*000074000000200000007400000068000000650000002000000063000000750000007200000072
*000000650000006e00000074000000200000006c000000690000006e0000006500000020000000
*6e000000750000006d000000620000006500000072000000200000006900000066000000200000
*00700000006f000000730000007300000069000000620000006c000000650000000a0000000000
*00003203023c000000650000007800000074000000720000006100000063000000740000002000
*0000740000006800000065000000200000007300000074000000610000006e0000006400000061
*000000720000006400000020000000660000006f000000720000006d0000006100000074000000
*20000000660000006f0000007200000020000000610000006e0000002000000061000000620000
*00730000006f0000006c00000075000000740000006500000020000000730000006f0000007500
*000072000000630000006500000020000000700000006f00000073000000690000007400000069
*0000006f0000006e0000000a2f00000000000000c500000000000000c600000000000000c70000
*0000000000c200000000000000c800000000000000c900000000000000ca00000000000000cb00
*000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0
*00000000000000d100000000000000d200000000000000d300000000000000d400000000000000
*d500000000000000d600000000000000d700000000000000d800000000000000d9000000000000
*00da00000000000000db00000000000000dc00000000000000dd00000000000000de0000000000
*0000df000000000000000000000000000000010000000000000002000000000000000300000000
*000000040000000000000005000000000000000600000000000000070000000000000008000000
*0000000009000000000000000a000000000000002b000000000000002c000000000000002d0000
*00000000002e000000000000002f00000000000000300000000000000031000000000000003208
*000000000000002e000000000000002b000000000000002d000000000000002c00000000000000
*310000000000000030000000000000002f00000000000000320000000000000000000000000000
*00080001270000006e0000006f0000006e0000002d000000700000006f00000072000000740000
*0061000000620000006c0000006500000020000000280000004d00000050000000540000004300
*0000730000002c000000200000004f0000007600000065000000720000006c0000006f00000061
*000000640000006500000064000000530000007400000072000000690000006e00000067000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c01150000006c0000006900000062000000720000006100
*000072000000690000006500000073000000400000006800000061000000730000006b00000065
*0000006c0000006c0000002e0000006f0000007200000067080000000000000033030102020000
*004100000020010401000000000000000008000000000000000000000000000000020226000000
*200000007400000072000000610000006e00000073000000660000006f000000720000006d0000
*006500000072000000200000007400000068000000610000007400000020000000730000007400
*000072000000690000007000000073000000200000006f0000007500000074000000200000006e
*00000065000000770000006c000000690000006e00000065000000730000000a00000000000000
*350301020200000041000000200104010000000000000000080000000000000000000000000000
*0002010236000000200000007400000072000000610000006e00000073000000660000006f0000
*00720000006d000000650000007200000020000000740000006800000061000000740000002000
*0000730000007400000072000000690000007000000073000000200000006f0000007500000074
*00000020000000610000006e000000790000002000000063000000680000006100000072000000
*6100000063000000740000006500000072000000200000006d0000006100000074000000630000
*00680000006500000064000000200000006200000079000000200104010000000000000000e400
*00000000000024000000000000002b02010000000a000000000000003703010202000000410000
*00200104010000000000000000080000000000000000000000000000000201021b000000200000
*007400000072000000610000006e00000073000000660000006f000000720000006d0000006500
*000072000000200000007400000068000000610000007400000020000000620000007200000065
*000000610000006b000000730000002000000061000000200104010000000000000000e3000000
*0000000029000000000000002a0102010000002001040100000000000000002500000000000000
*00000000000000000601022000000020000000690000006e000000740000006f00000020000000
*64000000690000007300000074000000690000006e0000006300000074000000200000006c0000
*00690000006e00000065000000730000002c000000200000006600000065000000650000006400
*0000690000006e000000670000002000000061000000200104010000000000000000e300000000
*00000029000000000000002a010201000000200104010000000000000000000000000000000000
*000000000000000102140000002000000065000000610000006300000068000000200000006c00
*0000690000006e0000006500000020000000690000006e00000020000000740000007500000072
*0000006e0000002e0000000a000000000000003803010202000000410000002001040100000000
*00000000080000000000000000000000000000000201021b000000200000007400000072000000
*610000006e00000073000000660000006f000000720000006d0000006500000072000000200000
*007400000068000000610000007400000020000000620000007200000065000000610000006b00
*0000730000002000000061000000200104010000000000000000e3000000000000002900000000
*0000002a0102010000002001040100000000000000002500000000000000000000000000000006
*01022000000020000000690000006e000000740000006f00000020000000640000006900000073
*00000074000000690000006e000000630000007400000020000000770000006f00000072000000
*64000000730000002c0000002000000066000000650000006500000064000000690000006e0000
*00670000002000000061000000200104010000000000000000e300000000000000290000000000
*00002a010201000000200104010000000000000000000000000000000000000000000000000102
*130000002000000065000000610000006300000068000000200000006c000000690000006e0000
*006500000020000000690000006e000000200000007400000075000000720000006e0000000a00
*000000000000390301022300000045000000780000007400000072000000610000006300000074
*00000020000000740000006800000065000000200000006d000000610000007400000063000000
*68000000650000006400000020000000770000006f000000720000006400000073000000200000
*0066000000720000006f0000006d00000020000000740000006800000065000000200104010000
*000000000000380000000000000000000000000000000801020100000020010401000000000000
*0000c20000000000000024000000000000002502010000000a000000000000003a030102230000
*004500000078000000740000007200000061000000630000007400000020000000740000006800
*000065000000200000006d00000061000000740000006300000068000000650000006400000020
*0000006c000000690000006e00000065000000730000002000000066000000720000006f000000
*6d0000002000000074000000680000006500000020010401000000000000000037000000000000
*00000000000000000008010201000000200104010000000000000000c200000000000000240000
*00000000002502010000000a000000000000003b03025e0000005500000074000000690000006c
*0000006900000074000000790000002000000066000000750000006e0000006300000074000000
*690000006f0000006e00000020000000740000006f000000200000006500000078000000740000
*007200000061000000630000007400000020000000770000006f00000072000000640000007300
*0000200000007500000073000000690000006e0000006700000020000000610000006300000063
*000000750000006d000000750000006c00000061000000740000006f000000720000002c000000
*20000000690000006e000000730000006900000064000000650000002d000000770000006f0000
*0072000000640000002c00000020000000610000006e0000006400000020000000750000006e00
*000074000000690000006c0000002d0000006e0000006500000078000000740000002d00000077
*0000006f0000007200000064000000200000006d0000006f0000006e0000006f00000069000000
*64000000730000000a000000000000003c03025e0000005500000074000000690000006c000000
*6900000074000000790000002000000066000000750000006e0000006300000074000000690000
*006f0000006e00000020000000740000006f000000200000006500000078000000740000007200
*0000610000006300000074000000200000006c000000690000006e000000650000007300000020
*0000007500000073000000690000006e0000006700000020000000610000006300000063000000
*750000006d000000750000006c00000061000000740000006f000000720000002c000000200000
*00690000006e000000730000006900000064000000650000002d0000006c000000690000006e00
*0000650000002c00000020000000610000006e0000006400000020000000750000006e00000074
*000000690000006c0000002d0000006e0000006500000078000000740000002d0000006c000000
*690000006e00000065000000200000006d0000006f0000006e0000006f00000069000000640000
*00730000000a3100000000000000c500000000000000c600000000000000c700000000000000c2
*00000000000000c800000000000000c900000000000000ca00000000000000cb00000000000000
*cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0000000000000
*00d100000000000000d200000000000000d300000000000000d400000000000000d50000000000
*0000d600000000000000d700000000000000d800000000000000d900000000000000da00000000
*000000db00000000000000dc00000000000000dd00000000000000de00000000000000df000000
*000000000000000000000000010000000000000002000000000000000300000000000000040000
*000000000005000000000000000600000000000000070000000000000008000000000000000900
*0000000000000a0000000000000033000000000000003400000000000000350000000000000036
*000000000000003700000000000000380000000000000039000000000000003a00000000000000
*3b000000000000003c0a0000000000000038000000000000003900000000000000350000000000
*000036000000000000003b0000000000000037000000000000003a000000000000003300000000
*00000034000000000000003c00000000000000000000000000000009000108000000700000006f
*000000720000007400000061000000620000006c00000065010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01150000
*006c00000069000000620000007200000061000000720000006900000065000000730000004000
*00006800000061000000730000006b000000650000006c0000006c0000002e0000006f00000072
*00000067002700000000000000c500000000000000c600000000000000c700000000000000c200
*000000000000c800000000000000c900000000000000ca00000000000000cb00000000000000cc
*00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000000000
*d100000000000000d200000000000000d300000000000000d400000000000000d5000000000000
*00d600000000000000d700000000000000d800000000000000d900000000000000da0000000000
*0000db00000000000000dc00000000000000dd00000000000000de00000000000000df00000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000003d000000000000003e0000
*00000000003f03000000000000003d000000000000003e000000000000003f0000000000000000
*000000000000000a000108000000700000006f000000720000007400000061000000620000006c
*00000065010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c01150000006c000000690000006200000072000000610000
*0072000000690000006500000073000000400000006800000061000000730000006b0000006500
*00006c0000006c0000002e0000006f00000072000000670600000000000000e503010214000000
*410000006e000000200000004c0000005a000000370000003800000020000000630000006f0000
*006d0000007000000072000000650000007300000073000000690000006e000000670000002001
*04010000000000000000250000000000000000000000000000000601021b0000002c0000002000
*000077000000680000006900000063000000680000002000000073000000750000007000000070
*0000006f0000007200000074000000730000002000000065000000660000006600000069000000
*6300000069000000650000006e0000007400000020010401000000000000000027000000000000
*00000000000000000006020c000000200000006f00000070000000650000007200000061000000
*74000000690000006f0000006e000000730000000a000000000000004103010213000000610000
*0020000000740000007900000070000000650000002d000000630000006f0000006e0000007300
*0000740000007200000061000000690000006e0000006500000064000000200104010000000000
*0000002a00000000000000000000000000000006020b000000200000006f000000700000006500
*0000720000006100000074000000690000006f0000006e0000000a00000000000000420301021c
*000000630000006f0000006e000000740000007200000075000000630000007400000020000000
*610000006e000000200000004c0000005a00000037000000380000002d000000630000006f0000
*006d00000070000000720000006500000073000000730000006500000064000000200104010000
*000000000000250000000000000000000000000000000601020900000020000000750000007300
*0000690000006e000000670000002000000061000000200104010000000000000000e600000000
*0000002c000000000000002d022a00000020000000690000006e00000074000000650000007200
*00006e000000610000006c0000006c000000790000002c00000020000000720000006500000071
*000000750000006900000072000000650000007300000020000000610000006e00000020000000
*690000006e0000007300000074000000610000006e0000006300000065000000200000006f0000
*0066000000200000004f00000072000000640000002e0000000a00000000000000430301021c00
*0000630000006f0000006e00000074000000720000007500000063000000740000002000000061
*0000006e000000200000004c0000005a00000037000000380000002d000000630000006f000000
*6d0000007000000072000000650000007300000073000000650000006400000020010401000000
*000000000025000000000000000000000000000000060236000000200000007500000073000000
*690000006e000000670000002000000061000000200000006c0000006900000073000000740000
*0020000000690000006e0000007400000065000000720000006e000000610000006c0000006c00
*0000790000002c0000002000000072000000650000007100000075000000690000007200000065
*0000007300000020000000610000006e00000020000000690000006e0000007300000074000000
*610000006e0000006300000065000000200000006f000000660000002000000045000000710000
*002e0000000a000000000000004403022a000000510000007500000069000000630000006b0000
*00430000006800000065000000630000006b0000002000000070000000720000006f0000007000
*0000650000007200000074000000790000003a000000200000006400000065000000630000006f
*0000006400000065000000200000002e00000020000000650000006e000000630000006f000000
*6400000065000000200000003d0000002000000069000000640000000a00000000000000450302
*2c000000510000007500000069000000630000006b000000430000006800000065000000630000
*006b0000002000000070000000720000006f000000700000006500000072000000740000007900
*00003a000000200000006400000065000000630000006f0000006400000065000000200000002e
*00000020000000650000006e000000630000006f00000064000000650000004500000071000000
*200000003d0000002000000069000000640000000a3900000000000000c500000000000000c600
*000000000000c700000000000000c200000000000000c800000000000000c900000000000000ca
*00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000d500000000000000d600000000000000d700000000000000d80000000000
*0000d900000000000000da00000000000000db00000000000000dc00000000000000dd00000000
*000000de00000000000000df000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070000
*00000000001c000000000000001d000000000000001e000000000000001f000000000000002000
*000000000000210000000000000022000000000000002300000000000000240000000000000025
*000000000000002600000000000000270000000000000028000000000000002900000000000000
*2a0000000000000040000000000000004100000000000000420000000000000043000000000000
*004400000000000000450600000000000000400000000000000041000000000000004200000000
*00000043000000000000004400000000000000450000000000000000000000000000000b000128
*0000006e0000006f0000006e0000002d000000700000006f000000720000007400000061000000
*620000006c0000006500000020000000280000006f0000007600000065000000720000006c0000
*006f00000061000000640000006500000064000000200000007300000074000000720000006900
*00006e00000067000000730000002c000000200000004d00000050000000540000004300000073
*00000029010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c01150000006c000000690000006200000072000000610000
*0072000000690000006500000073000000400000006800000061000000730000006b0000006500
*00006c0000006c0000002e0000006f0000007200000067002700000000000000c5000000000000
*00c600000000000000c700000000000000c200000000000000c800000000000000c90000000000
*0000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000
*000000cf00000000000000d000000000000000d100000000000000d200000000000000d3000000
*00000000d400000000000000d500000000000000d600000000000000d700000000000000d80000
*0000000000d900000000000000da00000000000000db00000000000000dc00000000000000dd00
*000000000000de00000000000000df000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*070000000000000046000000000000004700000000000000480300000000000000460000000000
*00004700000000000000480000000000000000000000000000000c000108000000700000006f00
*0000720000007400000061000000620000006c00000065010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0115000000
*6c0000006900000062000000720000006100000072000000690000006500000073000000400000
*006800000061000000730000006b000000650000006c0000006c0000002e0000006f0000007200
*0000670300000000000000490301020200000041000000200104010000000000000000c2000000
*0000000024000000000000002501020b000000200000006900000073000000200000006a000000
*7500000073000000740000002000000061000000200104010000000000000000e7000000000000
*0024000000000000002e0213000000200000007700000069000000740000006800000020000000
*6f0000006e00000065000000200000006f000000620000006a0000006500000063000000740000
*002e000000200000000a000000000000004b030102040000005400000068000000650000002001
*04010000000000000000c200000000000000240000000000000025010237000000200000006f00
*0000660000002000000074000000680000006500000020000000650000006e000000640000006f
*0000006d0000006f00000072000000700000006800000069000000730000006d00000073000000
*200000006f00000076000000650000007200000020000000730000006f0000006d000000650000
*00200000006f000000620000006a00000065000000630000007400000020000000690000006e00
*000020000000610000006e00000020000000610000007200000062000000690000007400000072
*000000610000007200000079000000200104010000000000000000e70000000000000024000000
*000000002e02020000002e0000000a000000000000004e0301020c000000450000007800000074
*000000720000006100000063000000740000002000000074000000680000006500000020010401
*0000000000000000c20000000000000024000000000000002501021e0000002000000066000000
*720000006f0000006d000000200000006900000074000000730000002000000072000000650000
*0070000000720000006500000073000000650000006e0000007400000061000000740000006900
*00006f0000006e0000002000000061000000730000002000000061000000200104010000000000
*000000e70000000000000024000000000000002e02010000000a2f00000000000000c500000000
*000000c600000000000000c700000000000000c200000000000000c800000000000000c9000000
*00000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce0000
*0000000000cf00000000000000d000000000000000d100000000000000d200000000000000d300
*000000000000d400000000000000d500000000000000d600000000000000d700000000000000d8
*00000000000000d900000000000000da00000000000000db00000000000000dc00000000000000
*dd00000000000000de00000000000000df00000000000000e800000000000000e9000000000000
*00ea00000000000000eb00000000000000e7000000000000000000000000000000010000000000
*000002000000000000000300000000000000040000000000000005000000000000000600000000
*000000070000000000000049000000000000004a000000000000004b000000000000004c000000
*000000004d000000000000004e06000000000000004b000000000000004c000000000000004d00
*00000000000049000000000000004a000000000000004e0000000000000000000000000000000d
*000108000000700000006f000000720000007400000061000000620000006c00000065010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c01150000006c0000006900000062000000720000006100000072000000690000
*006500000073000000400000006800000061000000730000006b000000650000006c0000006c00
*00002e0000006f0000007200000067001e00000000000000c500000000000000c6000000000000
*00c700000000000000c200000000000000c800000000000000c900000000000000ca0000000000
*0000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000
*000000d000000000000000d100000000000000d200000000000000d300000000000000d4000000
*00000000d500000000000000d600000000000000d700000000000000d800000000000000d90000
*0000000000da00000000000000db00000000000000dc00000000000000dd00000000000000de00
*000000000000df000000000000004f000000000000005002000000000000004f00000000000000
*500000000000000000000000000000000e000108000000700000006f0000007200000074000000
*61000000620000006c00000065010c000000650000007800000070000000650000007200000069
*0000006d000000650000006e00000074000000610000006c01150000006c000000690000006200
*000072000000610000007200000069000000650000007300000040000000680000006100000073
*0000006b000000650000006c0000006c0000002e0000006f0000007200000067001f0000000000
*0000c500000000000000c600000000000000c700000000000000c200000000000000c800000000
*000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd000000
*00000000ce00000000000000cf00000000000000d000000000000000d100000000000000d20000
*0000000000d300000000000000d400000000000000d500000000000000d600000000000000d700
*000000000000d800000000000000d900000000000000da00000000000000db00000000000000dc
*00000000000000dd00000000000000de00000000000000df000000000000004f00000000000000
*5000000000000000510100000000000000510000000000000000000000000000000f0001140000
*006e0000006f0000006e0000002d000000700000006f0000007200000074000000610000006200
*00006c0000006500000020000000280000004d0000005000000054000000430000007300000029
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c01150000006c00000069000000620000007200000061000000720000
*00690000006500000073000000400000006800000061000000730000006b000000650000006c00
*00006c0000002e0000006f0000007200000067003400000000000000c500000000000000c60000
*0000000000c700000000000000c200000000000000c800000000000000c900000000000000ca00
*000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf
*00000000000000d000000000000000d100000000000000d200000000000000d300000000000000
*d400000000000000d500000000000000d600000000000000d700000000000000d8000000000000
*00d900000000000000da00000000000000db00000000000000dc00000000000000dd0000000000
*0000de00000000000000df00000000000000000000000000000001000000000000000200000000
*000000030000000000000004000000000000000500000000000000060000000000000007000000
*000000001c000000000000001d000000000000001e000000000000001f00000000000000200000
*000000000021000000000000002200000000000000230000000000000024000000000000002500
*00000000000026000000000000002700000000000000280000000000000029000000000000002a
*000000000000005201000000000000005200000000000000000000000000000010000122000000
*700000006f000000720000007400000061000000620000006c0000006500000020000000280000
*0062000000750000007400000020000000690000006e0000007300000074000000610000006e00
*000063000000650000007300000020000000750000007300000065000000200000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c01150000006c000000690000
*006200000072000000610000007200000069000000650000007300000040000000680000006100
*0000730000006b000000650000006c0000006c0000002e0000006f000000720000006702000000
*00000000530301020a000000430000006f0000006e000000760000006500000072000000740000
*002000000061000000200104010000000000000000c20000000000000024000000000000002501
*020800000020000000690000006e000000740000006f0000002000000061000000200104010000
*000000000000590000000000000000000000000000001001020c0000002e000000200000004d00
*00006e000000650000006d0000006f0000006e00000069000000630000003a000000200107021b
*0000004500000078000000700000002000000061000000200000002a0000002000000045000000
*78000000700000002000000062000000200000003d000000200000004500000078000000700000
*00200000002800000061000000200000002b00000020000000620000002902010000000a000000
*00000000560301020a000000430000006f0000006e000000760000006500000072000000740000
*002000000061000000200104010000000000000000590000000000000000000000000000001001
*020800000020000000690000006e000000740000006f0000002000000061000000200104010000
*000000000000c20000000000000024000000000000002501020c0000002e000000200000004d00
*00006e000000650000006d0000006f0000006e00000069000000630000003a000000200107021b
*0000004c0000006f000000670000002000000061000000200000002b000000200000004c000000
*6f000000670000002000000062000000200000003d000000200000004c0000006f000000670000
*00200000002800000061000000200000002a00000020000000620000002902010000000a270000
*0000000000c500000000000000c600000000000000c700000000000000c200000000000000c800
*000000000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd
*00000000000000ce00000000000000cf00000000000000d000000000000000d100000000000000
*d200000000000000d300000000000000d400000000000000d500000000000000d6000000000000
*00d700000000000000d800000000000000d900000000000000da00000000000000db0000000000
*0000dc00000000000000dd00000000000000de00000000000000df000000000000004f00000000
*000000500000000000000053000000000000005400000000000000550000000000000056000000
*000000005700000000000000580000000000000059000000000000005a000000000000005b0900
*00000000000059000000000000005a000000000000005b00000000000000560000000000000057
*000000000000005800000000000000530000000000000054000000000000005500000000000000
*000000000000000011000108000000700000006f00000072000000740000006100000062000000
*6c00000065010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c01150000006c0000006900000062000000720000006100
*000072000000690000006500000073000000400000006800000061000000730000006b00000065
*0000006c0000006c0000002e0000006f0000007200000067002900000000000000c50000000000
*0000c600000000000000c700000000000000c200000000000000c800000000000000c900000000
*000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce000000
*00000000cf00000000000000d000000000000000d100000000000000d200000000000000d30000
*0000000000d400000000000000d500000000000000d600000000000000d700000000000000d800
*000000000000d900000000000000da00000000000000db00000000000000dc00000000000000dd
*00000000000000de00000000000000df000000000000004f000000000000005000000000000000
*510000000000000053000000000000005400000000000000550000000000000056000000000000
*005700000000000000580000000000000059000000000000005a000000000000005b0000000000
*00005c01000000000000005c0000000000000000000000000000001200011e000000700000006f
*000000720000007400000061000000620000006c00000065000000200000002800000069000000
*6e0000007300000074000000610000006e00000063000000650000007300000020000000750000
*007300000065000000200000004d0000005000000054000000430000007300000029010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c01150000006c000000690000006200000072000000610000007200000069000000
*6500000073000000400000006800000061000000730000006b000000650000006c0000006c0000
*002e0000006f000000720000006702000000000000005d0b021f00000061000000200000002a00
*0000200000002800000062000000200000002b000000200000006300000029000000200000003d
*000000200000002800000061000000200000002a00000020000000620000002900000020000000
*2b000000200000002800000061000000200000002a000000200000006300000029000000000000
*005e0b021f0000002800000061000000200000002b000000200000006200000029000000200000
*002a0000002000000063000000200000003d000000200000002800000061000000200000002a00
*0000200000006300000029000000200000002b000000200000002800000062000000200000002a
*0000002000000063000000292900000000000000c500000000000000c600000000000000c70000
*0000000000c200000000000000c800000000000000c900000000000000ca00000000000000cb00
*000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0
*00000000000000d100000000000000d200000000000000d300000000000000d400000000000000
*d500000000000000d600000000000000d700000000000000d800000000000000d9000000000000
*00da00000000000000db00000000000000dc00000000000000dd00000000000000de0000000000
*0000df000000000000004f00000000000000500000000000000053000000000000005400000000
*000000550000000000000056000000000000005700000000000000580000000000000059000000
*000000005a000000000000005b000000000000005d000000000000005e02000000000000005d00
*0000000000005e000000000000000000000000000000130001140000006e0000006f0000006e00
*00002d000000700000006f000000720000007400000061000000620000006c0000006500000020
*000000280000004d0000005000000054000000430000007300000029010c000000650000007800
*0000700000006500000072000000690000006d000000650000006e00000074000000610000006c
*01150000006c000000690000006200000072000000610000007200000069000000650000007300
*0000400000006800000061000000730000006b000000650000006c0000006c0000002e0000006f
*000000720000006701000000000000005f03010202000000410000002001040100000000000000
*005f00000000000000000000000000000013010218000000200000006900000073000000200000
*00610000006e00000020000000690000006e0000007300000074000000610000006e0000006300
*000065000000200000006f0000006600000020000000620000006f000000740000006800000020
*010401000000000000000059000000000000000000000000000000100102050000002000000061
*0000006e00000064000000200104010000000000000000c2000000000000002400000000000000
*25010208000000200000007700000068000000650000007200000065000000200000000a010203
*00000020000000200000002001040100000000000000005b000000000000000000000000000000
*100102120000002000000064000000690000007300000074000000720000006900000062000000
*75000000740000006500000073000000200000006f000000760000006500000072000000200104
*0100000000000000004f0000000000000000000000000000000d02020000002e0000000a2a0000
*0000000000c500000000000000c600000000000000c700000000000000c200000000000000c800
*000000000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd
*00000000000000ce00000000000000cf00000000000000d000000000000000d100000000000000
*d200000000000000d300000000000000d400000000000000d500000000000000d6000000000000
*00d700000000000000d800000000000000d900000000000000da00000000000000db0000000000
*0000dc00000000000000dd00000000000000de00000000000000df000000000000004f00000000
*000000500000000000000053000000000000005400000000000000550000000000000056000000
*000000005700000000000000580000000000000059000000000000005a000000000000005b0000
*00000000005d000000000000005e000000000000005f01000000000000005f0000000000000000
*000000000000001400000000040000000000000060030102040000005400000068000000650000
*00200104010000000000000000c200000000000000240000000000000025010201000000200107
*010201000000280104010000000000000000ec0000000000000024000000000000002f01020100
*00002c0104010000000000000000ed000000000000002400000000000000260201000000290102
*06000000200000006f0000007600000065000000720000002001070104010000000000000000c3
*000000000000002400000000000000260202000000200000006101020700000020000000770000
*0068000000650000007200000065000000200104010000000000000000ed000000000000002400
*000000000000260214000000200000006900000073000000200000007400000068000000650000
*0020000000740000006f0000007000000020000000650000006c000000650000006d0000006500
*00006e000000740000000a00000000000000630301020400000054000000680000006500000020
*0104010000000000000000c2000000000000002400000000000000250102010000002001070102
*01000000280104010000000000000000ee0000000000000024000000000000002f010201000000
*2c0104010000000000000000ed0000000000000024000000000000002602010000002901020600
*0000200000006f0000007600000065000000720000002001070104010000000000000000c30000
*000000000024000000000000002602020000002000000061010207000000200000007700000068
*000000650000007200000065000000200104010000000000000000ed0000000000000024000000
*000000002602170000002000000069000000730000002000000074000000680000006500000020
*000000620000006f00000074000000740000006f0000006d00000020000000650000006c000000
*650000006d000000650000006e000000740000000a000000000000006603010204000000540000
*006800000065000000200104010000000000000000c20000000000000024000000000000002501
*020a00000020000000670000006900000076000000650000006e00000020000000620000007900
*0000200107010201000000280104010000000000000000ec000000000000002400000000000000
*2f0102010000002c0104010000000000000000ef00000000000000240000000000000030020100
*00002902010000000a000000000000006903010204000000540000006800000065000000200104
*010000000000000000c20000000000000024000000000000002501020100000020010701020100
*0000280104010000000000000000ee0000000000000024000000000000002f0102010000002c01
*04010000000000000000f00000000000000024000000000000003002010000002902010000000a
*1300000000000000c500000000000000c700000000000000c20000000000000000000000000000
*000100000000000000600000000000000061000000000000006200000000000000630000000000
*000064000000000000006500000000000000660000000000000067000000000000006800000000
*00000069000000000000006a000000000000006b000000000000006c000000000000006d0e0000
*000000000069000000000000006a000000000000006b0000000000000066000000000000006700
*00000000000068000000000000006300000000000000640000000000000065000000000000006c
*000000000000006000000000000000610000000000000062000000000000006d00000000000000
*0000000000000000150000010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d02000000000000006e0301020200000041000000200104010000000000
*0000005f0000000000000000000000000000001301020c00000020000000770000006800000069
*000000630000006800000020000000610000006400000064000000730000002001040100000000
*00000000f00000000000000024000000000000003001020500000020000000610000006e000000
*64000000200104010000000000000000ef00000000000000240000000000000030021900000020
*000000740000006f0000002000000061000000200000007000000072000000650000002d000000
*6500000078000000690000007300000074000000690000006e0000006700000020000000740000
*007900000070000000650000002e0000000a000000000000007203010202000000410000002001
*040100000000000000005f0000000000000000000000000000001301020d000000200000007500
*000073000000690000006e00000067000000200000006100000020000000740000007900000070
*0000006501020100000027021d00000073000000200000006200000075000000690000006c0000
*00740000002d000000690000006e00000020000000420000006f000000750000006e0000006400
*0000650000006400000020000000690000006e0000007300000074000000610000006e00000063
*000000650000002e0000000a3100000000000000c500000000000000c600000000000000c70000
*0000000000c200000000000000c800000000000000c900000000000000ca00000000000000cb00
*000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0
*00000000000000d100000000000000d200000000000000d300000000000000d400000000000000
*d500000000000000d600000000000000d700000000000000d800000000000000d9000000000000
*00da00000000000000db00000000000000dc00000000000000dd00000000000000de0000000000
*0000df000000000000004f00000000000000500000000000000053000000000000005400000000
*000000550000000000000056000000000000005700000000000000580000000000000059000000
*000000005a000000000000005b000000000000005d000000000000005e000000000000005f0000
*00000000006e000000000000006f00000000000000700000000000000071000000000000007200
*000000000000730000000000000074070000000000000072000000000000007300000000000000
*74000000000000006e00000000000000710000000000000070000000000000006f000000000000
*000000000000000000160000000001000000000000007501030102040000005400000068000000
*650000002001040100000000000000005f00000000000000000000000000000013010201000000
*200107010201000000280104010000000000000000ec0000000000000024000000000000002f01
*02010000002c0104010000000000000000f1000000000000002400000000000000300201000000
*29010206000000200000006f000000760000006500000072000000200107010201000000610102
*0f00000020000000650000007800000074000000650000006e0000006400000065000000640000
*002000000077000000690000007400000068000000200401000000000000000078000000000000
*000000000000000000160102020000002e0000000a010208000000200000002000000020000000
*5700000068000000650000006e0000002001070201000000610102480000002000000068000000
*61000000730000002000000061000000200000004e000000750000006d00000020000000690000
*006e0000007300000074000000610000006e000000630000006500000020000000770000006900
*0000740000006800000020000000610000006e0000002000000061000000640000006400000069
*00000074000000690000006f0000006e0000002000000074000000680000006100000074000000
*200000007200000065000000730000007000000065000000630000007400000073000000200000
*006f000000720000006400000065000000720000002c0000002000000074000000680000006500
*00006e000000200000007400000068000000690000007300000020000000690000007300000020
*0000000a0102530000002000000020000000200000007400000072000000610000006e00000073
*000000660000006f000000720000006d000000650000006400000020000000690000006e000000
*740000006f00000020000000610000002000000074000000720000006f00000070000000690000
*0063000000610000006c0000002000000073000000650000006d00000069000000720000006900
*00006e000000670000002e00000020000000490000007400000020000000690000007300000020
*000000610000007300000073000000750000006d00000065000000640000002000000074000000
*680000006100000074000000200000003000000020000000690000007300000020000000740000
*006800000065000000200000006c00000065000000610000007300000074000000200000006500
*00006c000000650000006d000000650000006e000000740000000a020900000020000000200000
*00200000006f0000006600000020000000610000002e0000000a03010c41000000680000007400
*000074000000700000003a0000002f0000002f00000068000000610000006c0000002e00000061
*000000720000006300000068000000690000007600000065000000730000002d0000006f000000
*750000007600000065000000720000007400000065000000730000002e00000066000000720000
*002f000000640000006f00000063000000730000002f00000030000000300000002f0000003100
*0000310000002f00000033000000370000002f00000037000000390000002f0000005000000044
*000000460000002f00000054000000720000006f00000070000000690000006300000061000000
*6c0000002e00000070000000640000006602010000000a3000000000000000c500000000000000
*c600000000000000c700000000000000c200000000000000c800000000000000c9000000000000
*00ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce0000000000
*0000cf00000000000000d000000000000000d100000000000000d200000000000000d300000000
*000000d400000000000000d500000000000000d600000000000000d700000000000000d8000000
*00000000d900000000000000da00000000000000db00000000000000dc00000000000000dd0000
*0000000000de00000000000000df00000000000000000000000000000001000000000000004f00
*000000000000500000000000000053000000000000005400000000000000550000000000000056
*000000000000005700000000000000580000000000000059000000000000005a00000000000000
*5b000000000000005d000000000000005e000000000000005f0000000000000075000000000000
*007600000000000000770000000000000078040000000000000078000000000000007500000000
*00000076000000000000007700000000000000000000000000000031000108000000700000006f
*000000720000007400000061000000620000006c00000065010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01150000
*006c00000069000000620000007200000061000000720000006900000065000000730000004000
*00006800000061000000730000006b000000650000006c0000006c0000002e0000006f00000072
*00000067002b00000000000000c500000000000000c600000000000000c700000000000000c200
*000000000000c800000000000000c900000000000000ca00000000000000cb00000000000000cc
*00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000000000
*d100000000000000d200000000000000d300000000000000d400000000000000d5000000000000
*00d600000000000000d700000000000000d800000000000000d900000000000000da0000000000
*0000db00000000000000dc00000000000000dd00000000000000de00000000000000df00000000
*0000004f0000000000000050000000000000005100000000000000530000000000000054000000
*000000005500000000000000560000000000000057000000000000005800000000000000590000
*00000000005a000000000000005b000000000000005c000000000000005d000000000000005e00
*00000000000000000000000000000017000108000000700000006f000000720000007400000061
*000000620000006c00000065010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c011f0000004500000064000000770000
*00610000007200000064000000200000004b0000006d0000006500000074000000740000002000
*00003c000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d0000003e01000000000000
*00790301021d0000004d000000690000006e000000690000006d000000610000006c0000002000
*0000630000006f0000006d000000700000006c0000006500000074000000650000002000000064
*0000006500000066000000690000006e0000006900000074000000690000006f0000006e000000
*3a0000002001040100000000000000007a00000000000000000000000000000017010204000000
*200000006f000000720000002001040100000000000000007b0000000000000000000000000000
*001702010000000a2200000000000000c500000000000000c600000000000000c7000000000000
*00c200000000000000c800000000000000c900000000000000ca00000000000000cb0000000000
*0000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000
*000000d100000000000000d200000000000000d300000000000000d400000000000000d5000000
*00000000d600000000000000d700000000000000d800000000000000d900000000000000da0000
*0000000000db00000000000000dc00000000000000dd00000000000000de00000000000000df00
*0000000000004f00000000000000500000000000000079000000000000007a000000000000007b
*000000000000007c040000000000000079000000000000007a000000000000007c000000000000
*007b00000000000000000000000000000018000108000000700000006f00000072000000740000
*0061000000620000006c00000065010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c01150000006c0000006900000062
*000000720000006100000072000000690000006500000073000000400000006800000061000000
*730000006b000000650000006c0000006c0000002e0000006f0000007200000067002400000000
*000000c500000000000000c600000000000000c700000000000000c200000000000000c8000000
*00000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd0000
*0000000000ce00000000000000cf00000000000000d000000000000000d100000000000000d200
*000000000000d300000000000000d400000000000000d500000000000000d600000000000000d7
*00000000000000d800000000000000d900000000000000da00000000000000db00000000000000
*dc00000000000000dd00000000000000de00000000000000df000000000000004f000000000000
*00500000000000000079000000000000007a000000000000007b000000000000007c0000000000
*00007d000000000000007e02000000000000007d000000000000007e0000000000000000000000
*0000000019000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c01150000006c000000690000006200000072000000610000007200
*0000690000006500000073000000400000006800000061000000730000006b000000650000006c
*0000006c0000002e0000006f0000007200000067002600000000000000c500000000000000c600
*000000000000c700000000000000c200000000000000c800000000000000c900000000000000ca
*00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000d500000000000000d600000000000000d700000000000000d80000000000
*0000d900000000000000da00000000000000db00000000000000dc00000000000000dd00000000
*000000de00000000000000df000000000000004f00000000000000500000000000000051000000
*0000000079000000000000007a000000000000007b000000000000007c000000000000007f0000
*000000000080000000000000008103000000000000007f00000000000000800000000000000081
*0000000000000000000000000000001a00000000002f00000000000000c500000000000000c600
*000000000000c700000000000000c200000000000000c800000000000000c900000000000000ca
*00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000d500000000000000d600000000000000d700000000000000d80000000000
*0000d900000000000000da00000000000000db00000000000000dc00000000000000dd00000000
*000000de00000000000000df000000000000004f00000000000000500000000000000053000000
*000000005400000000000000550000000000000056000000000000005700000000000000580000
*000000000059000000000000005a000000000000005b000000000000005d000000000000005e00
*0000000000005f0000000000000079000000000000007a000000000000007b000000000000007c
*00000000000000820100000000000000820000000000000000000000000000001b000114000000
*6e0000006f0000006e0000002d000000700000006f000000720000007400000061000000620000
*006c0000006500000020000000280000004d000000500000005400000043000000730000002901
*0c0000006500000078000000700000006500000072000000690000006d000000650000006e0000
*0074000000610000006c01150000006c0000006900000062000000720000006100000072000000
*690000006500000073000000400000006800000061000000730000006b000000650000006c0000
*006c0000002e0000006f0000007200000067003200000000000000c500000000000000c6000000
*00000000c700000000000000c200000000000000c800000000000000c900000000000000ca0000
*0000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf00
*000000000000d000000000000000d100000000000000d200000000000000d300000000000000d4
*00000000000000d500000000000000d600000000000000d700000000000000d800000000000000
*d900000000000000da00000000000000db00000000000000dc00000000000000dd000000000000
*00de00000000000000df000000000000004f000000000000005000000000000000530000000000
*000054000000000000005500000000000000560000000000000057000000000000005800000000
*00000059000000000000005a000000000000005b000000000000005d000000000000005e000000
*000000005f0000000000000079000000000000007a000000000000007b000000000000007c0000
*000000000082000000000000008300000000000000840000000000000085030000000000000083
*000000000000008400000000000000850000000000000000000000000000001c0001140000006e
*0000006f0000006e0000002d000000700000006f00000072000000740000006100000062000000
*6c0000006500000020000000280000004d0000005000000054000000430000007300000029010c
*0000006500000078000000700000006500000072000000690000006d000000650000006e000000
*74000000610000006c01150000006c000000690000006200000072000000610000007200000069
*0000006500000073000000400000006800000061000000730000006b000000650000006c000000
*6c0000002e0000006f0000007200000067003200000000000000c500000000000000c600000000
*000000c700000000000000c200000000000000c800000000000000c900000000000000ca000000
*00000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf0000
*0000000000d000000000000000d100000000000000d200000000000000d300000000000000d400
*000000000000d500000000000000d600000000000000d700000000000000d800000000000000d9
*00000000000000da00000000000000db00000000000000dc00000000000000dd00000000000000
*de00000000000000df000000000000004f00000000000000500000000000000053000000000000
*005400000000000000550000000000000056000000000000005700000000000000580000000000
*000059000000000000005a000000000000005b000000000000005d000000000000005e00000000
*0000005f0000000000000079000000000000007a000000000000007b000000000000007c000000
*000000008200000000000000860000000000000087000000000000008803000000000000008600
*0000000000008700000000000000880000000000000000000000000000001d0001140000006e00
*00006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c
*0000006500000020000000280000004d0000005000000054000000430000007300000029010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c01150000006c00000069000000620000007200000061000000720000006900
*00006500000073000000400000006800000061000000730000006b000000650000006c0000006c
*0000002e0000006f00000072000000670300000000000000890b021e0000002000000028000000
*78000000200000002a0000002e000000200000006d00000029000000200000002e0000002a0000
*002000000079000000200000003d0000002000000078000000200000002a0000002e0000002000
*0000280000006d000000200000002e0000002a000000200000007900000029000000000000008a
*0b021c00000020000000280000006d000000200000002e0000002a000000200000007800000029
*000000200000002a0000002000000079000000200000003d000000200000006d00000020000000
*2e0000002a000000200000002800000078000000200000002a0000002000000079000000290000
*00000000008c0b021c000000200000002800000078000000200000002a00000020000000790000
*0029000000200000002a0000002e000000200000006d000000200000003d000000200000007800
*0000200000002a000000200000002800000079000000200000002a0000002e000000200000006d
*000000293400000000000000c500000000000000c600000000000000c700000000000000c20000
*0000000000c800000000000000c900000000000000ca00000000000000cb00000000000000cc00
*000000000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1
*00000000000000d200000000000000d300000000000000d400000000000000d500000000000000
*d600000000000000d700000000000000d800000000000000d900000000000000da000000000000
*00db00000000000000dc00000000000000dd00000000000000de00000000000000df0000000000
*00004f000000000000005000000000000000530000000000000054000000000000005500000000
*00000056000000000000005700000000000000580000000000000059000000000000005a000000
*000000005b000000000000005d000000000000005e000000000000005f00000000000000790000
*00000000007a000000000000007b000000000000007c0000000000000082000000000000008900
*0000000000008a000000000000008b000000000000008c000000000000008d0500000000000000
*8c000000000000008d000000000000008a000000000000008b0000000000000089000000000000
*0000000000000000001e0001140000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c0000006500000020000000280000004d0000005000
*000054000000430000007300000029010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c01150000006c00000069000000
*620000007200000061000000720000006900000065000000730000004000000068000000610000
*00730000006b000000650000006c0000006c0000002e0000006f00000072000000670400000000
*0000008e03010203000000690000006600000020010702010000006d0102060000002000000069
*000000730000002000000061000000200104010000000000000000890000000000000000000000
*000000001d01020500000020000000610000006e00000064000000200107020100000066010206
*0000002000000069000000730000002000000061000000200104010000000000000000f2000000
*00000000240000000000000032010206000000200000007400000068000000650000006e000000
*200107010202000000660000002001040200000000000000008f00000000000000000000000000
*00001e00000000000000008e0000000000000000000000000000001e0202000000200000006d01
*020600000020000000690000007300000020000000610000002001040100000000000000008900
*00000000000000000000000000001d020900000020000000610000007300000020000000770000
*00650000006c0000006c0000000a00000000000000910301020200000041000000200104020000
*000000000000920000000000000000000000000000001e00000000000000009100000000000000
*00000000000000001e01020b000000200000007400000075000000720000006e00000073000000
*20000000610000006e00000079000000200104010000000000000000f300000000000000240000
*00000000003201021100000020000000690000006e0000007300000074000000610000006e0000
*00630000006500000020000000690000006e000000740000006f00000020000000610000002001
*04010000000000000000c2000000000000002400000000000000250102020000002e0000000a01
*0216000000200000002000000020000000490000007400000020000000610000006c0000007300
*00006f0000002000000070000000720000006f0000007600000069000000640000006500000073
*000000200000006100000020010401000000000000000059000000000000000000000000000000
*1001021100000020000000690000006e0000007300000074000000610000006e00000063000000
*6500000020000000660000006f0000007200000020000000610000006e00000020010401000000
*0000000000f20000000000000024000000000000003201021a0000002000000066000000750000
*006e00000063000000740000006f00000072000000200000007700000072000000610000007000
*00007000000065000000640000002000000061000000720000006f000000750000006e00000064
*0000002000000061000000200104010000000000000000c2000000000000002400000000000000
*250102010000000a010218000000200000002000000020000000610000006e0000006400000020
*000000610000007300000073000000650000007200000074000000730000002000000074000000
*68000000610000007400000020000000610000006e000000790000002001040100000000000000
*00f30000000000000024000000000000003201020e000000200000006100000070000000700000
*006c00000069000000650000006400000020000000740000006f00000020000000610000002001
*04010000000000000000c200000000000000240000000000000025010209000000200000006600
*00006f000000720000006d0000007300000020000000610000002001040100000000000000005d
*00000000000000000000000000000012010202000000200000000a021b00000020000000200000
*0020000000750000006e0000006400000065000000720000002000000074000000680000006500
*00007300000065000000200000006f000000700000006500000072000000610000007400000069
*0000006f0000006e000000730000002e0000000a00000000000000940301020200000041000000
*200104020000000000000000950000000000000000000000000000001e00000000000000009400
*00000000000000000000000000001e010218000000200000007500000073000000650000007300
*000020000000610000006e00000020000000670000006c00000075000000650000007300000020
*000000740000006f00000067000000650000007400000068000000650000007200000020010401
*0000000000000000f2000000000000002400000000000000320102130000002000000061000000
*6300000074000000690000006f0000006e00000073000000200000007700000069000000740000
*006800000020000000280000002a0000003e000000290000000a01021400000020000000200000
*0020000000690000006e00000020000000740000006800000065000000200000006d0000006100
*00006e0000006e0000006500000072000000200000006f00000066000000200102090000007400
*0000720000006100000076000000650000007200000073000000650000005f0102060000002000
*000066000000720000006f0000006d0000002001050d0000004400000061000000740000006100
*00002e000000460000006f0000006c0000006400000061000000620000006c0000006501021a00
*00002e00000020000000410000006e000000790000002000000076000000610000006c00000075
*00000065000000730000002000000072000000650000007400000075000000720000006e000000
*6500000064000000200000006200000079000000200000000a0222000000200000002000000020
*000000720000006500000064000000750000006300000065000000640000002000000061000000
*6300000074000000690000006f0000006e00000073000000200000006100000072000000650000
*002000000064000000690000007300000063000000610000007200000064000000650000006400
*00002e0000000a0000000000000097030102320000004500000066000000660000006900000063
*00000069000000650000006e000000740000006c00000079000000200000006100000076000000
*6f0000006900000064000000200000006e0000006500000065000000640000006c000000650000
*0073000000730000006c0000007900000020000000720000006500000062000000690000006e00
*000064000000690000006e00000067000000200000007700000068000000650000006e00000020
*0000007500000073000000690000006e0000006700000020010401000000000000000002000000
*00000000000000000000000001010226000000200000006f0000006e0000002000000061000000
*6e00000020000000610000006300000074000000690000006f0000006e00000020000000740000
*0068000000610000007400000020000000610000006c0000007200000065000000610000006400
*0000790000002000000072000000650000007400000075000000720000006e0000007300000020
*00000028000000290000000a023b00000020000000200000002000000041000000200000007200
*00006500000077000000720000006900000074000000650000002000000072000000750000006c
*00000065000000200000006100000075000000740000006f0000006d0000006100000074000000
*6900000063000000610000006c0000006c00000079000000200000006100000070000000700000
*006c00000069000000650000007300000020000000740000006800000069000000730000002000
*00007700000068000000650000006e00000020000000700000006f000000730000007300000069
*000000620000006c000000650000000a4600000000000000c500000000000000c6000000000000
*00c700000000000000c200000000000000c800000000000000c900000000000000ca0000000000
*0000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000
*000000d000000000000000d100000000000000d200000000000000d300000000000000d4000000
*00000000d500000000000000d600000000000000d700000000000000d800000000000000d90000
*0000000000da00000000000000db00000000000000dc00000000000000dd00000000000000de00
*000000000000df0000000000000000000000000000000100000000000000020000000000000003
*000000000000000400000000000000050000000000000006000000000000000700000000000000
*4f0000000000000050000000000000005300000000000000540000000000000055000000000000
*0056000000000000005700000000000000580000000000000059000000000000005a0000000000
*00005b000000000000005d000000000000005e000000000000005f000000000000007900000000
*0000007a000000000000007b000000000000007c00000000000000820000000000000089000000
*000000008a000000000000008b000000000000008c000000000000008d000000000000008e0000
*00000000008f000000000000009000000000000000910000000000000092000000000000009300
*000000000000940000000000000095000000000000009600000000000000970a00000000000000
*940000000000000095000000000000009600000000000000910000000000000092000000000000
*0093000000000000008e000000000000008f000000000000009000000000000000970000000000
*000000000000000000001f0001140000006e0000006f0000006e0000002d000000700000006f00
*0000720000007400000061000000620000006c0000006500000020000000280000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c01150000006c000000690000
*006200000072000000610000007200000069000000650000007300000040000000680000006100
*0000730000006b000000650000006c0000006c0000002e0000006f000000720000006704000000
*000000009803010203000000690000006600000020010702010000006d01020600000020000000
*690000007300000020000000610000002001040100000000000000008900000000000000000000
*00000000001d010206000000200000006f00000076000000650000007200000020010702010000
*007201020500000020000000610000006e00000064000000200107020100000066010206000000
*2000000069000000730000002000000061000000200104010000000000000000f4000000000000
*00240000000000000033010206000000200000007400000068000000650000006e000000200107
*01020200000066000000200104020000000000000000990000000000000000000000000000001f
*0000000000000000980000000000000000000000000000001f0202000000200000006d01020600
*000020000000690000007300000020000000610000002001040100000000000000008900000000
*00000000000000000000001d020900000020000000610000007300000020000000770000006500
*00006c0000006c0000000a000000000000009b0301020200000041000000200104020000000000
*0000009c0000000000000000000000000000001f00000000000000009b00000000000000000000
*00000000001f01020b000000200000007400000075000000720000006e00000073000000200000
*00610000006e00000079000000200104010000000000000000f500000000000000240000000000
*00003301021100000020000000690000006e0000007300000074000000610000006e0000006300
*00006500000020000000690000006e000000740000006f00000020000000610000002001040100
*00000000000000c2000000000000002400000000000000250102020000002e0000000a01021600
*0000200000002000000020000000490000007400000020000000610000006c000000730000006f
*0000002000000070000000720000006f0000007600000069000000640000006500000073000000
*200000006100000020010401000000000000000059000000000000000000000000000000100102
*1000000020000000690000006e0000007300000074000000610000006e00000063000000650000
*0020000000660000006f000000720000002000000061000000200104010000000000000000f400
*000000000000240000000000000033010212000000200000007700000072000000610000007000
*00007000000065000000640000002000000061000000720000006f000000750000006e00000064
*0000002000000061000000200104010000000000000000c2000000000000002400000000000000
*250102010000000a010218000000200000002000000020000000610000006e0000006400000020
*000000610000007300000073000000650000007200000074000000730000002000000074000000
*68000000610000007400000020000000610000006e000000790000002001040100000000000000
*00f50000000000000024000000000000003301020e000000200000006100000070000000700000
*006c00000069000000650000006400000020000000740000006f00000020000000610000002001
*04010000000000000000c200000000000000240000000000000025010209000000200000006600
*00006f000000720000006d0000007300000020000000610000002001040100000000000000005d
*00000000000000000000000000000012010202000000200000000a021b00000020000000200000
*0020000000750000006e0000006400000065000000720000002000000074000000680000006500
*00007300000065000000200000006f000000700000006500000072000000610000007400000069
*0000006f0000006e000000730000002e0000000a000000000000009e0301020300000041000000
*6e0000002001040200000000000000009f0000000000000000000000000000001f000000000000
*00009e0000000000000000000000000000001f0102150000002000000075000000730000006500
*00007300000020000000670000006c00000075000000650000007300000020000000740000006f
*000000670000006500000074000000680000006500000072000000200104010000000000000000
*f40000000000000024000000000000003301021300000020000000610000006300000074000000
*690000006f0000006e000000730000002000000077000000690000007400000068000000200000
*00280000003e0000003e000000290000000a010214000000200000002000000020000000690000
*006e00000020000000740000006800000065000000200000006d000000610000006e0000006e00
*00006500000072000000200000006f00000066000000200104010000000000000000f600000000
*0000002400000000000000330102060000002000000066000000720000006f0000006d00000020
*01050d000000440000006100000074000000610000002e000000460000006f0000006c00000064
*00000061000000620000006c0000006501021a0000002e00000020000000410000006e00000079
*0000002000000076000000610000006c0000007500000065000000730000002000000072000000
*650000007400000075000000720000006e00000065000000640000002000000062000000790000
*00200000000a022200000020000000200000002000000072000000650000006400000075000000
*63000000650000006400000020000000610000006300000074000000690000006f0000006e0000
*007300000020000000610000007200000065000000200000006400000069000000730000006300
*000061000000720000006400000065000000640000002e0000000a00000000000000a103010232
*000000450000006600000066000000690000006300000069000000650000006e00000074000000
*6c000000790000002000000061000000760000006f0000006900000064000000200000006e0000
*006500000065000000640000006c0000006500000073000000730000006c000000790000002000
*0000720000006500000062000000690000006e00000064000000690000006e0000006700000020
*0000007700000068000000650000006e000000200000007500000073000000690000006e000000
*670000002001040100000000000000000200000000000000000000000000000001010226000000
*200000006f0000006e00000020000000610000006e000000200000006100000063000000740000
*00690000006f0000006e0000002000000074000000680000006100000074000000200000006100
*00006c000000720000006500000061000000640000007900000020000000720000006500000074
*00000075000000720000006e000000730000002000000028000000290000000a023b0000002000
*000020000000200000004100000020000000720000006500000077000000720000006900000074
*000000650000002000000072000000750000006c00000065000000200000006100000075000000
*740000006f0000006d00000061000000740000006900000063000000610000006c0000006c0000
*0079000000200000006100000070000000700000006c0000006900000065000000730000002000
*000074000000680000006900000073000000200000007700000068000000650000006e00000020
*000000700000006f000000730000007300000069000000620000006c000000650000000a3b0000
*0000000000c500000000000000c600000000000000c700000000000000c200000000000000c800
*000000000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd
*00000000000000ce00000000000000cf00000000000000d000000000000000d100000000000000
*d200000000000000d300000000000000d400000000000000d500000000000000d6000000000000
*00d700000000000000d800000000000000d900000000000000da00000000000000db0000000000
*0000dc00000000000000dd00000000000000de00000000000000df000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005000000
*00000000060000000000000007000000000000004f000000000000005000000000000000530000
*000000000054000000000000005500000000000000560000000000000057000000000000005800
*00000000000059000000000000005a000000000000005b000000000000005d000000000000005e
*00000000000000980000000000000099000000000000009a000000000000009b00000000000000
*9c000000000000009d000000000000009e000000000000009f00000000000000a0000000000000
*00a10a000000000000009e000000000000009f00000000000000a000000000000000a100000000
*000000980000000000000099000000000000009a000000000000009b000000000000009c000000
*000000009d000000000000000000000000000000200001230000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*0028000000740000007900000070000000650000002000000066000000610000006d0000006900
*00006c0000006900000065000000730000002c000000200000004d000000500000005400000043
*0000007300000029010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c01150000006c0000006900000062000000720000
*006100000072000000690000006500000073000000400000006800000061000000730000006b00
*0000650000006c0000006c0000002e0000006f00000072000000671400000000000000a2030102
*0c000000450000006600000066000000690000006300000069000000650000006e000000740000
*006c00000079000000200104010000000000000000270000000000000000000000000000000601
*020300000020000000610000002001040100000000000000002500000000000000000000000000
*00000601020b000000200000007500000073000000690000006e00000067000000200000007400
*00006800000065000000200104020000000000000000950000000000000000000000000000001e
*0000000000000000940000000000000000000000000000001e010232000000200000006d000000
*6f0000006e0000006f00000069000000640000002e000000200000004100000020000000730000
*0070000000650000006300000069000000610000006c000000690000007a000000650000006400
*00002000000076000000650000007200000073000000690000006f0000006e000000200000006f
*0000006600000020000000690000007400000073000000200000006e000000610000006d000000
*6500000073000000610000006b0000006500000020000000690000006e0000002001050d000000
*440000006100000074000000610000002e000000460000006f0000006c00000064000000610000
*00620000006c0000006502010000000a00000000000000a303010208000000660000006c000000
*6900000070000000700000006500000064000000200104010000000000000000a2000000000000
*0000000000000000002001020700000020000000610000007300000020000000690000006e0000
*002001050d000000440000006100000074000000610000002e000000460000006f0000006c0000
*006400000061000000620000006c0000006502010000000a00000000000000a40301020c000000
*450000006600000066000000690000006300000069000000650000006e000000740000006c0000
*007900000020010401000000000000000027000000000000000000000000000000060102030000
*002000000061000000200104010000000000000000250000000000000000000000000000000601
*020b000000200000007500000073000000690000006e0000006700000020000000740000006800
*0000650000002001040200000000000000009f0000000000000000000000000000001f00000000
*000000009e0000000000000000000000000000001f010234000000200000006d0000006f000000
*6e0000006f00000069000000640000002e00000020000000410000002000000073000000700000
*00650000006300000069000000610000006c000000690000007a00000065000000640000002000
*000076000000650000007200000073000000690000006f0000006e000000200000006f00000066
*00000020000000690000007400000073000000200000006e000000610000006d00000065000000
*73000000610000006b000000650000002000000066000000720000006f0000006d000000200105
*0d000000440000006100000074000000610000002e000000460000006f0000006c000000640000
*0061000000620000006c0000006501020500000020000000610000006e00000064000000200105
*0d000000430000006f0000006e00000074000000720000006f0000006c0000002e0000004d0000
*006f0000006e000000610000006402010000000a00000000000000a50301020800000066000000
*6c0000006900000070000000700000006500000064000000200104010000000000000000a40000
*000000000000000000000000002001020700000020000000610000007300000020000000690000
*006e0000002001050d000000440000006100000074000000610000002e000000460000006f0000
*006c0000006400000061000000620000006c0000006501020500000020000000610000006e0000
*00640000002001050d000000430000006f0000006e00000074000000720000006f0000006c0000
*002e0000004d0000006f0000006e000000610000006402010000000a00000000000000a6030102
*0c000000450000006600000066000000690000006300000069000000650000006e000000740000
*006c00000079000000200104010000000000000000270000000000000000000000000000000601
*020300000020000000610000002001040100000000000000002500000000000000000000000000
*00000601020b000000200000007500000073000000690000006e00000067000000200000007400
*000068000000650000002001040200000000000000003e00000000000000000000000000000009
*00000000000000003d00000000000000000000000000000009010234000000200000006d000000
*6f0000006e0000006f00000069000000640000002e000000200000004100000020000000730000
*0070000000650000006300000069000000610000006c000000690000007a000000650000006400
*00002000000076000000650000007200000073000000690000006f0000006e000000200000006f
*0000006600000020000000690000007400000073000000200000006e000000610000006d000000
*6500000073000000610000006b000000650000002000000066000000720000006f0000006d0000
*002001050d000000440000006100000074000000610000002e000000460000006f0000006c0000
*006400000061000000620000006c0000006502010000000a00000000000000a70301020c000000
*450000006600000066000000690000006300000069000000650000006e000000740000006c0000
*00790000002001040100000000000000002a000000000000000000000000000000060102030000
*002000000061000000200104010000000000000000250000000000000000000000000000000601
*020b000000200000007500000073000000690000006e0000006700000020000000740000006800
*0000650000002001040200000000000000003e0000000000000000000000000000000900000000
*000000003d00000000000000000000000000000009010234000000200000006d0000006f000000
*6e0000006f00000069000000640000002e00000020000000410000002000000073000000700000
*00650000006300000069000000610000006c000000690000007a00000065000000640000002000
*000076000000650000007200000073000000690000006f0000006e000000200000006f00000066
*00000020000000690000007400000073000000200000006e000000610000006d00000065000000
*73000000610000006b000000650000002000000066000000720000006f0000006d000000200105
*0d000000440000006100000074000000610000002e000000460000006f0000006c000000640000
*0061000000620000006c0000006502010000000a00000000000000a80301021c00000041000000
*200000006600000075000000720000007400000068000000650000007200000020000000730000
*0070000000650000006300000069000000610000006c000000690000007a000000610000007400
*0000690000006f0000006e000000200000006f0000006600000020010507000000660000006f00
*00006c000000640000004d000000610000007002010000000a00000000000000a90301020c0000
*00450000006600000066000000690000006300000069000000650000006e000000740000006c00
*0000790000002001040100000000000000002a0000000000000000000000000000000601020300
*000020000000610000002001040100000000000000002500000000000000000000000000000006
*01021e000000200000007400000068000000610000007400000020000000630000006f0000006e
*0000007400000061000000690000006e000000730000002000000076000000610000006c000000
*750000006500000073000000200000006f00000066000000200000007400000079000000700000
*0065000000200104010000000000000000f7000000000000002900000000000000340201000000
*0a00000000000000aa0301020c0000004500000066000000660000006900000063000000690000
*00650000006e000000740000006c000000790000002001040100000000000000002a0000000000
*000000000000000000000601020300000020000000610000002001040100000000000000002500
*00000000000000000000000000000601021e000000200000007400000068000000610000007400
*000020000000630000006f0000006e0000007400000061000000690000006e0000007300000020
*00000076000000610000006c000000750000006500000073000000200000006f00000066000000
*2000000074000000790000007000000065000000200104010000000000000000f7000000000000
*0029000000000000003402010000000a00000000000000ab0301020c0000004500000066000000
*66000000690000006300000069000000650000006e000000740000006c00000079000000200104
*010000000000000000270000000000000000000000000000000601020500000020000000610000
*006e00000079000000200104010000000000000000250000000000000000000000000000000602
*4300000020000000630000006800000065000000630000006b000000690000006e000000670000
*0020000000740000006f0000002000000073000000650000006500000020000000690000006600
*000020000000610000006e00000079000000200000006f00000066000000200000006900000074
*000000730000002000000076000000610000006c00000075000000650000007300000020000000
*6d0000006100000074000000630000006800000020000000740000006800000065000000200000
*00730000007500000070000000700000006c000000690000006500000064000000200000007000
*000072000000650000006400000069000000630000006100000074000000650000000a00000000
*000000ac0301020c00000045000000660000006600000069000000630000006900000065000000
*6e000000740000006c000000790000002001040100000000000000002700000000000000000000
*00000000000601020500000020000000610000006e000000790000002001040100000000000000
*002500000000000000000000000000000006024300000020000000630000006800000065000000
*630000006b000000690000006e0000006700000020000000740000006f00000020000000730000
*00650000006500000020000000690000006600000020000000610000006c0000006c0000002000
*00006f00000066000000200000006900000074000000730000002000000076000000610000006c
*000000750000006500000073000000200000006d00000061000000740000006300000068000000
*2000000074000000680000006500000020000000730000007500000070000000700000006c0000
*006900000065000000640000002000000070000000720000006500000064000000690000006300
*00006100000074000000650000000a00000000000000ad0301020c000000450000006600000066
*000000690000006300000069000000650000006e000000740000006c0000007900000020010401
*000000000000000027000000000000000000000000000000060102050000002000000061000000
*6e0000007900000020010401000000000000000025000000000000000000000000000000060102
*0b000000200000007500000073000000690000006e000000670000002000000074000000680000
*0065000000200104020000000000000000d5000000000000002400000000000000250000000000
*000000d600000000000000240000000000000025010201000000200104010000000000000000c2
*0000000000000024000000000000002502010000000a00000000000000ae0301020c0000004500
*00006600000066000000690000006300000069000000650000006e000000740000006c00000079
*000000200104010000000000000000270000000000000000000000000000000601020500000020
*000000610000006e00000079000000200104010000000000000000250000000000000000000000
*000000000601020b000000200000007500000073000000690000006e0000006700000020000000
*740000006800000065000000200104020000000000000000d80000000000000024000000000000
*00250000000000000000d900000000000000240000000000000025010201000000200104010000
*000000000000c20000000000000024000000000000002502010000000a00000000000000af0301
*0210000000430000006800000065000000630000006b00000020000000740000006f0000002000
*0000730000006500000065000000200000006900000066000000200104010000000000000000ab
*0000000000000000000000000000002001020f000000200000006d000000650000006d00000062
*0000006500000072000000200000006f0000006600000020000000740000006800000065000000
*2001040100000000000000002500000000000000000000000000000006021c000000200000006d
*000000610000007400000063000000680000006500000073000000200000007400000068000000
*6500000020000000730000007500000070000000700000006c0000006900000065000000640000
*002000000076000000610000006c00000075000000650000000a00000000000000b00301024200
*0000430000006800000065000000630000006b00000020000000740000006f000000200000006d
*000000610000006b00000065000000200000007300000075000000720000006500000020000000
*740000006800000061000000740000002000000074000000680000006500000020000000730000
*007500000070000000700000006c00000069000000650000006400000020000000760000006100
*00006c0000007500000065000000200000006900000073000000200000006e0000006f00000074
*0000002000000061000000200000006d000000650000006d000000620000006500000072000000
*200000006f00000066000000200000007400000068000000650000002001040100000000000000
*00250000000000000000000000000000000602010000000a00000000000000b10301020c000000
*450000006600000066000000690000006300000069000000650000006e000000740000006c0000
*0079000000200104010000000000000000270000000000000000000000000000000601021f0000
*002000000061000000200000007300000075000000620000007300000065000000740000002000
*00006f000000660000002000000074000000680000006500000020000000650000006c00000065
*0000006d000000650000006e000000740000007300000020000000690000006e00000020000000
*61000000200104010000000000000000250000000000000000000000000000000602010000000a
*00000000000000b203010214000000410000002000000073000000700000006500000063000000
*69000000610000006c000000690000007a0000006100000074000000690000006f0000006e0000
*00200000006f00000066000000200104010000000000000000b100000000000000000000000000
*00002001020b000000200000007500000073000000690000006e00000067000000200000007400
*00006800000065000000200104020000000000000000db00000000000000240000000000000025
*0000000000000000dc000000000000002400000000000000250102010000002001040100000000
*00000000c20000000000000024000000000000002501020f0000002c0000002000000061000000
*6e000000610000006c0000006f000000670000006f000000750000007300000020000000740000
*006f0000002001020e000000440000006100000074000000610000002e0000004c000000690000
*0073000000740000002e00000066000000690000006e0000006402010000000a00000000000000
*b303010214000000410000002000000067000000650000006e0000006500000072000000610000
*006c000000690000007a0000006100000074000000690000006f0000006e000000200000006f00
*00006600000020010213000000440000006100000074000000610000002e0000004c0000006900
*000073000000740000002e0000007200000065000000700000006c000000690000006300000061
*000000740000006501021100000020000000740000006f00000020000000610000006e00000020
*000000610000007200000062000000690000007400000072000000610000007200000079000000
*200104010000000000000000c2000000000000002400000000000000250102100000002e000000
*200000004100000064000000610000007000000074000000650000006400000020000000660000
*00720000006f0000006d000000200000000a01020100000020010c4a0000006800000074000000
*74000000700000003a0000002f0000002f00000061000000750000006700000075000000730000
*007400000073000000730000002e000000620000006c0000006f00000067000000730000007000
*00006f000000740000002e000000630000006f0000006d0000002f000000320000003000000030
*000000380000002f00000030000000370000002f0000006c0000006f0000007300000074000000
*2d000000610000006e000000640000002d000000660000006f000000750000006e000000640000
*002d00000069000000660000002d000000690000002d0000007700000072000000690000007400
*0000650000002d0000003100000030000000380000002d000000690000006e0000002e00000068
*000000740000006d0000006c02010000000a00000000000000b403010214000000410000002000
*000067000000650000006e0000006500000072000000610000006c000000690000007a00000061
*00000074000000690000006f0000006e000000200000006f000000660000002001020f00000044
*0000006100000074000000610000002e0000004c0000006900000073000000740000002e000000
*6300000079000000630000006c0000006501021100000020000000740000006f00000020000000
*610000006e00000020000000610000007200000062000000690000007400000072000000610000
*007200000079000000200104010000000000000000c20000000000000024000000000000002502
*390000002e000000200000004d0000006100000079000000200000006600000061000000690000
*006c00000020000000740000006f000000200000007400000065000000720000006d0000006900
*00006e00000061000000740000006500000020000000660000006f000000720000002000000073
*0000006f0000006d000000650000002000000076000000610000006c0000007500000065000000
*7300000020000000690000006e00000020000000730000006f0000006d00000065000000200000
*006d0000006f0000006e0000006f0000006900000064000000730000002e0000000a0000000000
*0000b503010214000000410000002000000067000000650000006e000000650000007200000061
*0000006c000000690000007a0000006100000074000000690000006f0000006e00000020000000
*6f0000006600000020010210000000440000006100000074000000610000002e0000004c000000
*6900000073000000740000002e0000007200000065000000700000006500000061000000740102
*1100000020000000740000006f00000020000000610000006e0000002000000061000000720000
*006200000069000000740000007200000061000000720000007900000020010401000000000000
*0000c20000000000000024000000000000002502390000002e000000200000004d000000610000
*0079000000200000006600000061000000690000006c00000020000000740000006f0000002000
*00007400000065000000720000006d000000690000006e00000061000000740000006500000020
*000000660000006f0000007200000020000000730000006f0000006d0000006500000020000000
*76000000610000006c00000075000000650000007300000020000000690000006e000000200000
*00730000006f0000006d00000065000000200000006d0000006f0000006e0000006f0000006900
*000064000000730000002e0000000a4800000000000000c500000000000000c600000000000000
*c700000000000000c200000000000000c800000000000000c900000000000000ca000000000000
*00cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf0000000000
*0000d000000000000000d100000000000000d200000000000000d300000000000000d400000000
*000000d500000000000000d600000000000000d700000000000000d800000000000000d9000000
*00000000da00000000000000db00000000000000dc00000000000000dd00000000000000de0000
*0000000000df000000000000000000000000000000010000000000000002000000000000000300
*00000000000004000000000000000500000000000000060000000000000007000000000000001c
*000000000000001d000000000000001e000000000000001f000000000000002000000000000000
*210000000000000022000000000000002300000000000000240000000000000025000000000000
*0026000000000000002700000000000000280000000000000029000000000000002a0000000000
*0000a200000000000000a300000000000000a400000000000000a500000000000000a600000000
*000000a700000000000000a800000000000000a900000000000000aa00000000000000ab000000
*00000000ac00000000000000ad00000000000000ae00000000000000af00000000000000b00000
*0000000000b100000000000000b200000000000000b300000000000000b400000000000000b500
*000000000000b61500000000000000a400000000000000a500000000000000a200000000000000
*a300000000000000a900000000000000aa00000000000000ab00000000000000ac000000000000
*00a600000000000000a700000000000000a800000000000000af00000000000000b10000000000
*0000b200000000000000ad00000000000000ae00000000000000b000000000000000b500000000
*000000b300000000000000b400000000000000b600000000000000000000000000000021000108
*000000700000006f000000720000007400000061000000620000006c00000065010c0000006500
*000078000000700000006500000072000000690000006d000000650000006e0000007400000061
*0000006c01150000006c0000006900000062000000720000006100000072000000690000006500
*000073000000400000006800000061000000730000006b000000650000006c0000006c0000002e
*0000006f00000072000000670400000000000000b7030102020000004100000020010401000000
*0000000000250000000000000000000000000000000601021a0000002000000077000000680000
*0069000000630000006800000020000000730000007500000070000000700000006f0000007200
*000074000000730000002000000065000000660000006600000069000000630000006900000065
*0000006e0000007400000020010401000000000000000027000000000000000000000000000000
*06022a000000200000006f0000007000000065000000720000006100000074000000690000006f
*0000006e00000073000000200000006f0000007600000065000000720000002000000072000000
*750000006e0000002d0000006c000000650000006e000000670000007400000068000000200000
*00650000006e000000630000006f00000064000000650000006400000020000000640000006100
*000074000000610000002e0000000a00000000000000ba03022300000041000000200000007300
*0000690000006e000000670000006c000000650000002000000072000000750000006e00000020
*000000770000006900000074000000680000002000000061000000200000007300000074000000
*72000000690000006300000074000000200000006c000000650000006e00000067000000740000
*00680000002e0000000a00000000000000bd03021c0000006e0000006100000069000000760000
*0065000000200000006c00000065000000660000007400000020000000740000006f0000002000
*0000720000006900000067000000680000007400000020000000650000006e000000630000006f
*0000006400000065000000720000000a00000000000000be03022a000000510000007500000069
*000000630000006b000000430000006800000065000000630000006b0000002000000070000000
*720000006f00000070000000650000007200000074000000790000003a00000020000000640000
*0065000000630000006f0000006400000065000000200000002e00000020000000650000006e00
*0000630000006f0000006400000065000000200000003d0000002000000069000000640000000a
*3d00000000000000c500000000000000c600000000000000c700000000000000c2000000000000
*00c800000000000000c900000000000000ca00000000000000cb00000000000000cc0000000000
*0000cd00000000000000ce00000000000000cf00000000000000d000000000000000d100000000
*000000d200000000000000d300000000000000d400000000000000d500000000000000d6000000
*00000000d700000000000000d800000000000000d900000000000000da00000000000000db0000
*0000000000dc00000000000000dd00000000000000de00000000000000df000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*00000000000000060000000000000007000000000000001c000000000000001d00000000000000
*1e000000000000001f000000000000002000000000000000210000000000000022000000000000
*002300000000000000240000000000000025000000000000002600000000000000270000000000
*0000280000000000000029000000000000002a00000000000000b700000000000000b800000000
*000000b900000000000000ba00000000000000bb00000000000000bc00000000000000bd000000
*00000000be00000000000000bf00000000000000c00a00000000000000b700000000000000b800
*000000000000b900000000000000ba00000000000000bb00000000000000bc00000000000000bf
*00000000000000bd00000000000000c000000000000000be000000000000000000000000000000
*2200000000003500000000000000c500000000000000c600000000000000c700000000000000c2
*00000000000000c800000000000000c900000000000000ca00000000000000cb00000000000000
*cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0000000000000
*00d100000000000000d200000000000000d300000000000000d400000000000000d50000000000
*0000d600000000000000d700000000000000d800000000000000d900000000000000da00000000
*000000db00000000000000dc00000000000000dd00000000000000de00000000000000df000000
*000000004f00000000000000500000000000000053000000000000005400000000000000550000
*000000000056000000000000005700000000000000580000000000000059000000000000005a00
*0000000000005b000000000000005d000000000000005e000000000000005f0000000000000079
*000000000000007a000000000000007b000000000000007c000000000000008200000000000000
*89000000000000008a000000000000008b000000000000008c000000000000008d000000000000
*00c10100000000000000c100000000000000f80000000000000000000000000000000103000000
*000000003500000000000000000000000000000001000000000000000036000000000000000000
*000000000000010000000000000000370000000000000000000000000000000100000000000000
*003800000000000000000000000000000001000000000000000039000000000000000000000000
*0000000100000000000000003a0000000000000000000000000000000100000000000000003b00
*00000000000000000000000000000100000000000000003c000000000000000000000000000000
*0203000000000000003d0000000000000000000000000000000200000000000000003e00000000
*00000000000000000000000200000000000000003f000000000000000000000000000000030300
*000000000000400000000000000000000000000000000300000000000000004100000000000000
*000000000000000004030000000000000042000000000000000000000000000000040100000000
*000000420000000000000000000000000000000400000000000000004300000000000000000000
*000000000005030000000000000044000000000000000000000000000000050100000000000000
*440000000000000000000000000000000500000000000000004500000000000000000000000000
*000005030000000000000046000000000000000000000000000000050000000000000000470000
*000000000000000000000000000500000000000000004800000000000000000000000000000005
*030000000000000049000000000000000000000000000000050100000000000000490000000000
*000000000000000000000500000000000000004a00000000000000000000000000000005030000
*00000000004b0000000000000000000000000000000500000000000000004c0000000000000000
*000000000000000500000000000000004d00000000000000000000000000000006030000000000
*00004e0000000000000000000000000000000601000000000000004e0000000000000000000000
*000000000600000000000000004f00000000000000000000000000000006030000000000000050
*000000000000000000000000000000060100000000000000500000000000000000000000000000
*000600000000000000005100000000000000000000000000000006030000000000000052000000
*000000000000000000000000060100000000000000520000000000000000000000000000000600
*000000000000005300000000000000000000000000000006030000000000000054000000000000
*000000000000000000060300000000000000550000000000000000000000000000000600000000
*000000005600000000000000000000000000000006000000000000000057000000000000000000
*000000000000060000000000000000580000000000000000000000000000000600000000000000
*00590000000000000000000000000000000703000000000000005a000000000000000000000000
*0000000703000000000000005b0000000000000000000000000000000703000000000000005c00
*00000000000000000000000000000700000000000000005d000000000000000000000000000000
*0700000000000000005e0000000000000000000000000000000700000000000000005f00000000
*000000000000000000000007000000000000000060000000000000000000000000000000070000
*000000000000610000000000000000000000000000000803000000000000006200000000000000
*000000000000000008000000000000000063000000000000000000000000000000080300000000
*000000640000000000000000000000000000000800000000000000006500000000000000000000
*000000000008030000000000000066000000000000000000000000000000080300000000000000
*670000000000000000000000000000000800000000000000006800000000000000000000000000
*0000080000000000000000690000000000000000000000000000000800000000000000006a0000
*000000000000000000000000000800000000000000006b00000000000000000000000000000009
*03000000000000006c0000000000000000000000000000000901000000000000006c0000000000
*000000000000000000000900000000000000006d0000000000000000000000000000000a030000
*00000000006e0000000000000000000000000000000a00000000000000006f0000000000000000
*000000000000000a0000000000000000700000000000000000000000000000000a000000000000
*0000710000000000000000000000000000000a0000000000000000720000000000000000000000
*000000000a0000000000000000730000000000000000000000000000000b030000000000000074
*0000000000000000000000000000000b0100000000000000740000000000000000000000000000
*000b0000000000000000750000000000000000000000000000000c030000000000000076000000
*0000000000000000000000000c0100000000000000760000000000000000000000000000000c03
*00000000000000770000000000000000000000000000000c010000000000000077000000000000
*0000000000000000000c0000000000000000780000000000000000000000000000000c00000000
*00000000790000000000000000000000000000000d00000000000000007a000000000000000000
*0000000000000d00000000000000007b0000000000000000000000000000000e00000000000000
*007c0000000000000000000000000000000f03000000000000007d000000000000000000000000
*0000001003000000000000007e0000000000000000000000000000001001000000000000007e00
*00000000000000000000000000001000000000000000007f000000000000000000000000000000
*100300000000000000800000000000000000000000000000001001000000000000008000000000
*000000000000000000000010000000000000000081000000000000000000000000000000100300
*000000000000820000000000000000000000000000001000000000000000008300000000000000
*000000000000000010000000000000000084000000000000000000000000000000110000000000
*000000850000000000000000000000000000001203000000000000008600000000000000000000
*000000000012030000000000000087000000000000000000000000000000130300000000000000
*880000000000000000000000000000001403000000000000008900000000000000000000000000
*0000140100000000000000890000000000000000000000000000001400000000000000008a0000
*000000000000000000000000001403000000000000008b00000000000000000000000000000014
*01000000000000008b0000000000000000000000000000001400000000000000008c0000000000
*000000000000000000001403000000000000008d00000000000000000000000000000014010000
*00000000008d0000000000000000000000000000001400000000000000008e0000000000000000
*000000000000001403000000000000008f00000000000000000000000000000014010000000000
*00008f000000000000000000000000000000140000000000000000900000000000000000000000
*000000001400000000000000009100000000000000000000000000000014000000000000000092
*000000000000000000000000000000150300000000000000930000000000000000000000000000
*001501000000000000009400000000000000000000000000000015010000000000000093000000
*000000000000000000000000150100000000000000950000000000000000000000000000001503
*000000000000009600000000000000000000000000000015010000000000000096000000000000
*000000000000000000150000000000000000970000000000000000000000000000001603000000
*000000009800000000000000000000000000000016010000000000000098000000000000000000
*000000000000160000000000000000990000000000000000000000000000001600000000000000
*00920000000000000000000000000000001703000000000000009a000000000000000000000000
*0000001700000000000000009b0000000000000000000000000000001700000000000000009c00
*00000000000000000000000000001700000000000000009d000000000000000000000000000000
*1800000000000000009e0000000000000000000000000000001800000000000000009f00000000
*0000000000000000000000190000000000000000a0000000000000000000000000000000190000
*000000000000a1000000000000000000000000000000190000000000000000a200000000000000
*00000000000000001a0300000000000000a30000000000000000000000000000001b0300000000
*000000a40000000000000000000000000000001b0100000000000000a400000000000000000000
*00000000001b0000000000000000a50000000000000000000000000000001c0300000000000000
*a60000000000000000000000000000001c0100000000000000a600000000000000000000000000
*00001c0000000000000000a70000000000000000000000000000001d0300000000000000a80000
*000000000000000000000000001d0300000000000000a90000000000000000000000000000001d
*0000000000000000aa0000000000000000000000000000001d0300000000000000ab0000000000
*000000000000000000001d0000000000000000ac0000000000000000000000000000001e030000
*0000000000ad0000000000000000000000000000001e0100000000000000ad0000000000000000
*000000000000001e0000000000000000ae0000000000000000000000000000001e030000000000
*0000af0000000000000000000000000000001e0100000000000000af0000000000000000000000
*000000001e0000000000000000b00000000000000000000000000000001e0300000000000000b1
*0000000000000000000000000000001e0100000000000000b10000000000000000000000000000
*001e0000000000000000b20000000000000000000000000000001e0000000000000000b3000000
*0000000000000000000000001f0300000000000000b40000000000000000000000000000001f01
*00000000000000b40000000000000000000000000000001f0000000000000000b5000000000000
*0000000000000000001f0300000000000000b60000000000000000000000000000001f01000000
*00000000b60000000000000000000000000000001f0000000000000000b7000000000000000000
*0000000000001f0300000000000000b80000000000000000000000000000001f01000000000000
*00b80000000000000000000000000000001f0000000000000000b9000000000000000000000000
*0000001f0000000000000000ba000000000000000000000000000000200000000000000000bb00
*0000000000000000000000000000200000000000000000bc000000000000000000000000000000
*200000000000000000bd000000000000000000000000000000200000000000000000be00000000
*0000000000000000000000200000000000000000bf000000000000000000000000000000200000
*000000000000c0000000000000000000000000000000200000000000000000c100000000000000
*0000000000000000200000000000000000c2000000000000000000000000000000200000000000
*000000c3000000000000000000000000000000200000000000000000c400000000000000000000
*0000000000200000000000000000c5000000000000000000000000000000200000000000000000
*c6000000000000000000000000000000200000000000000000c700000000000000000000000000
*0000200000000000000000c8000000000000000000000000000000200000000000000000c90000
*00000000000000000000000000200000000000000000ca00000000000000000000000000000020
*0000000000000000cb0000000000000000000000000000002000000000000000009e0000000000
*00000000000000000000200000000000000000cc00000000000000000000000000000020000000
*0000000000cd0000000000000000000000000000002000000000000000009f0000000000000000
*00000000000000210300000000000000ce00000000000000000000000000000021010000000000
*0000ce000000000000000000000000000000210000000000000000cf0000000000000000000000
*00000000210300000000000000d0000000000000000000000000000000210100000000000000d0
*0000000000000000000000000000002100000000000000006f0000000000000000000000000000
*00210000000000000000d1000000000000000000000000000000210000000000000000d2000000
*000000000000000000000000210000000000000000700000000000000000000000000000002100
*0000000000000072000000000000000000000000000000220300000000000000d3000000000000
*002400000000000000250300000000000000d40000000000000024000000000000002603000000
*00000000d5000000000000002400000000000000270300000000000000d6000000000000002400
*000000000000250000000000000000d70000000000000024000000000000002500000000000000
*00d8000000000000002400000000000000250000000000000000d9000000000000002400000000
*000000250000000000000000da000000000000002400000000000000250100000000000000db00
*0000000000002400000000000000250300000000000000db000000000000002400000000000000
*250000000000000000dc000000000000002400000000000000250100000000000000dd00000000
*0000002400000000000000250300000000000000dd000000000000002400000000000000250000
*000000000000de000000000000002400000000000000250100000000000000df00000000000000
*2400000000000000250300000000000000df000000000000002400000000000000250000000000
*000000e0000000000000002400000000000000250100000000000000e100000000000000240000
*0000000000250300000000000000e1000000000000002400000000000000250000000000000000
*e2000000000000002400000000000000250100000000000000e300000000000000240000000000
*0000250300000000000000e3000000000000002400000000000000250000000000000000e40000
*00000000002400000000000000250100000000000000e500000000000000240000000000000025
*0300000000000000e5000000000000002400000000000000250000000000000000e60000000000
*00002400000000000000250100000000000000e700000000000000240000000000000025030000
*0000000000e7000000000000002400000000000000250000000000000000e80000000000000024
*00000000000000250100000000000000e900000000000000240000000000000025030000000000
*0000e900000000000000ea00000000000000eb0300000000000000ec00000000000000ea000000
*00000000eb0000000000000000ed000000000000002400000000000000ee0300000000000000ef
*0000000000000029000000000000002a0300000000000000f00000000000000024000000000000
*002b0000000000000000f10000000000000000000000000000000a0300000000000000f2000000
*000000002c000000000000002d0300000000000000f30000000000000024000000000000002e03
*00000000000000f40000000000000024000000000000002e0000000000000000f5000000000000
*0024000000000000002e0000000000000000f60000000000000024000000000000002e00000000
*00000000f70000000000000024000000000000002e0000000000000000f8000000000000002400
*000000000000f90000000000000000fa0000000000000024000000000000002601000000000000
*00fb000000000000002400000000000000f90000000000000000fc000000000000002400000000
*000000fd0000000000000000fe000000000000002400000000000000fd0000000000000000ff00
*00000000000024000000000000010000000000000000007c000000000000002400000000000000
*320300000000000001010000000000000024000000000000003203000000000000010200000000
*000000240000000000000103030000000000000104000000000000002400000000000000330300
*00000000000105000000000000002400000000000000330000000000000000bd00000000000000
*2900000000000000340300000000000001060000000000000107000000000000000e6d6f6e6f69
*64732d302e312e31340000000000000013446174612e4d6f6e6f69642e52656475636572000000
*0000000018446174612e4d6f6e6f69642e526564756365722e4368617200000000000000204461
*74612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f646572000000000000001844
*6174612e4d6f6e6f69642e526564756365722e576974680000000000000011446174612e4d6f6e
*6f69642e556e696f6e0000000000000015446174612e4d6f6e6f69642e47656e657261746f7200
*00000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f73697469
*6f6e0000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f72647300000000
*00000010446174612e4d6f6e6f69642e53656c66000000000000001a446174612e4d6f6e6f6964
*2e47656e657261746f722e4c5a37380000000000000016446174612e4d6f6e6f69642e46726f6d
*537472696e670000000000000017446174612e4d6f6e6f69642e43617465676f726963616c0000
*000000000014446174612e4d6f6e6f69642e4164646974697665000000000000001a446174612e
*4d6f6e6f69642e41646469746976652e5375676172000000000000001a446174612e4d6f6e6f69
*642e47656e657261746f722e46726565000000000000001a446174612e4d6f6e6f69642e4d756c
*7469706c696361746976650000000000000020446174612e4d6f6e6f69642e4d756c7469706c69
*6361746976652e53756761720000000000000013446174612e52696e672e53656d692e4e656172
*000000000000000e446174612e52696e672e53656d69000000000000000f446174612e4d6f6e6f
*69642e4f72640000000000000012446174612e52696e672e53656d692e4f726400000000000000
*17446174612e52696e672e53656d692e54726f706963616c000000000000000a446174612e4772
*6f75700000000000000016446174612e47726f75702e436f6d62696e61746f7273000000000000
*0010446174612e47726f75702e53756761720000000000000009446174612e52696e6700000000
*00000011446174612e52696e672e426f6f6c65616e0000000000000011446174612e52696e672e
*46726f6d4e756d0000000000000010446174612e52696e672e4d6f64756c650000000000000017
*446174612e4d6f6e6f69642e4170706c696361746976650000000000000011446174612e4d6f6e
*6f69642e4d6f6e61640000000000000017446174612e4d6f6e6f69642e436f6d62696e61746f72
*730000000000000019446174612e4d6f6e6f69642e47656e657261746f722e524c450000000000
*000029446174612e52696e672e4d6f64756c652e4175746f6d61746963446966666572656e7469
*6174696f6e0000000000000015446174612e4d6f6e6f69642e496e7374616e6365730000000000
*00000462617365000000000000000b446174612e4d6f6e6f6964000000000000000a446174612e
*4d61796265000000000000000d446174612e466f6c6461626c650000000000000009446174612e
*576f726400000000000000086768632d7072696d00000000000000094748432e54797065730000
*00000000000b4748432e556e69636f64650000000000000012636f6e7461696e6572732d302e32
*2e302e300000000000000008446174612e4d61700000000000000010436f6e74726f6c2e436174
*65676f72790000000000000008446174612e4f726400000000000000075072656c756465000000
*000000000f446174612e52696e672e53756761720000000000000013436f6e74726f6c2e417070
*6c69636174697665000000000000000d436f6e74726f6c2e4d6f6e616400000000000000084748
*432e426f6f6c0000000000000007526564756365720000000000000004756e6974000000000000
*0004736e6f630000000000000004636f6e73000000000000000d666f6c644d6170526564756365
*000000000000000a666f6c64526564756365000000000000000a72657475726e556e6974000000
*000000000870757265556e6974000000000000000b436861725265647563657200000000000000
*0866726f6d43686172000000000000000b696e76616c6964436861720000000000000004555446
*38000000000000000772756e55544638000000000000000b576974685265647563657200000000
*0000000e776974686f7574526564756365720000000000000009556e696f6e5769746800000000
*0000000c676574556e696f6e57697468000000000000000c486173556e696f6e57697468000000
*0000000009756e696f6e576974680000000000000009656d707479576974680000000000000005
*556e696f6e0000000000000008676574556e696f6e0000000000000008486173556e696f6e0000
*000000000005656d7074790000000000000005756e696f6e000000000000000543686172380000
*0000000000086765744368617238000000000000000656616c7565730000000000000009676574
*56616c75657300000000000000044b65797300000000000000076765744b657973000000000000
*000947656e657261746f720000000000000004456c656d00000000000000096d61705265647563
*6500000000000000056d6170546f00000000000000076d617046726f6d00000000000000067265
*64756365000000000000000e536f75726365506f736974696f6e000000000000000c536f757263
*65436f6c756d6e000000000000000a536f757263654c696e6500000000000000076e6578745461
*62000000000000000b73746172744f6646696c65000000000000000c736f75726365436f6c756d
*6e000000000000000a736f757263654c696e65000000000000001273686f77536f75726365506f
*736974696f6e0000000000000007556e6c696e6564000000000000000a72756e556e6c696e6564
*0000000000000008556e737061636564000000000000000b72756e556e73706163656400000000
*000000054c696e65730000000000000005576f726473000000000000000872756e576f72647300
*0000000000000872756e4c696e65730000000000000009776f72647346726f6d00000000000000
*096c696e657346726f6d000000000000000453656c66000000000000000767657453656c660000
*0000000000044c5a373800000000000000066465636f64650000000000000006656e636f646500
*00000000000008656e636f64654571000000000000001270726f705f6465636f64655f656e636f
*6465000000000000001470726f705f6465636f64655f656e636f64654571000000000000000a46
*726f6d537472696e67000000000000000d67657446726f6d537472696e6700000000000000034d
*6f6e000000000000000547456e646f000000000000000867657447456e646f0000000000000006
*6765744d6f6e0000000000000004706c757300000000000000047a65726f00000000000000012b
*000000000000000446726565000000000000000345787000000000000000066765744578700000
*0000000000034c6f6700000000000000066765744c6f67000000000000000e4d756c7469706c69
*63617469766500000000000000036f6e65000000000000000574696d657300000000000000012a
*00000000000000104c65667453656d694e65617252696e67000000000000001152696768745365
*6d694e65617252696e67000000000000000853656d6952696e67000000000000000b4d696e5072
*696f72697479000000000000000e6765744d696e5072696f72697479000000000000000b4d6178
*5072696f72697479000000000000000e6765744d61785072696f7269747900000000000000034d
*696e00000000000000066765744d696e00000000000000034d617800000000000000066765744d
*617800000000000000096d696e66696e6974790000000000000008696e66696e69747900000000
*000000085072696f7269747900000000000000084d6178426f756e6400000000000000084d696e
*426f756e6400000000000000054f7264657200000000000000086765744f726465720000000000
*00000854726f706963616c000000000000000b67657454726f706963616c000000000000000547
*726f75700000000000000007676e656761746500000000000000056d696e757300000000000000
*0967737562747261637400000000000000097265706c6963617465000000000000002170726f70
*5f7265706c69636174655f72696768745f64697374726962757469766500000000000000012d00
*000000000000066e65676174650000000000000008737562747261637400000000000000045269
*6e670000000000000008426f6f6c52696e67000000000000000b676574426f6f6c52696e670000
*00000000000746726f6d4e756d000000000000000a67657446726f6d4e756d0000000000000006
*4d6f64756c65000000000000000b52696768744d6f64756c6500000000000000022e2a00000000
*0000000a4c6566744d6f64756c6500000000000000022a2e000000000000000d54726176657273
*616c57697468000000000000001067657454726176657273616c57697468000000000000001257
*7261707065644170706c696361746976650000000000000015676574577261707065644170706c
*69636174697665000000000000000954726176657273616c000000000000000c67657454726176
*657273616c000000000000000d736e6f6354726176657273616c000000000000000a416374696f
*6e57697468000000000000000d676574416374696f6e57697468000000000000000c5772617070
*65644d6f6e6164000000000000000f676574577261707065644d6f6e6164000000000000000641
*6374696f6e0000000000000009676574416374696f6e000000000000000a736e6f63416374696f
*6e000000000000000974726176657273655f0000000000000004666f725f00000000000000056d
*61704d5f0000000000000005666f724d5f0000000000000007666f6c644d617000000000000000
*04666f6c640000000000000009636f6e6361744d61700000000000000003616e64000000000000
*00026f720000000000000003616e790000000000000003616c6c000000000000000373756d0000
*00000000000770726f647563740000000000000004656c656d00000000000000076e6f74456c65
*6d000000000000000666696c746572000000000000000466696e6400000000000000056379636c
*6500000000000000067265706561740000000000000003524c450000000000000006676574524c
*45000000000000000352756e000000000000000a656e636f64654c697374000000000000001670
*726f705f6465636f64655f656e636f64654c69737400000000000000014400000000000000064d
*6f6e6f696400000000000000054d617962650000000000000008466f6c6461626c650000000000
*0000076d617070656e6400000000000000076d636f6e63617400000000000000066d656d707479
*00000000000000076765744475616c00000000000000044475616c000000000000000761707045
*6e646f0000000000000004456e646f0000000000000006676574416c6c0000000000000003416c
*6c0000000000000006676574416e790000000000000003416e7900000000000000066765745375
*6d000000000000000353756d000000000000000a67657450726f64756374000000000000000750
*726f64756374000000000000000867657446697273740000000000000005466972737400000000
*000000076765744c61737400000000000000044c617374000000000000000e66696e6765727472
*65652d302e30000000000000000f446174612e46696e67657254726565000000000000000a4669
*6e6765725472656500000000000000076d65617375726500000000000000084748432e576f7264
*0000000000000005576f7264380000000000000004436861720000000000000007697353706163
*650000000000000005546f6b656e00000000000000034d6170000000000000000843617465676f
*727900000000000000033e3e3e00000000000000033c3c3c00000000000000012e000000000000
*00026964000000000000000b4748432e436c617373657300000000000000036d696e0000000000
*0000074e6f7468696e6700000000000000036d617800000000000000084748432e456e756d0000
*0000000000086d6178426f756e6400000000000000086d696e426f756e64000000000000000747
*48432e4e756d000000000000000b4170706c69636174697665000000000000000b416c7465726e
*617469766500000000000000084748432e4261736500000000000000054d6f6e61640000000000
*0000094d6f6e6164506c75730000000000000004426f6f6c
newhex
*0d0cface0004000000000001090e000000000000f06ac600000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000002000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000600
*000000000000260000000000000000000000000000000600000000000000270000000000000000
*000000000000000600000000000000280000000000000000000000000000000600000000000000
*2900000000000000000000000000000006000000000000002a0000000000000000000000000000
*0006000000000000002b00000000000000000000000000000006000000000000002c0000000000
*0000000000000000000006000000000000002d0000000000000000000000000000000700000000
*0000002e00000000000000000000000000000007000000000000002f0000000000000000000000
*000000000700000000000000300000000000000000000000000000000700000000000000310000
*000000000000000000000000000700000000000000320000000000000000000000000000000700
*000000000000330000000000000000000000000000000700000000000000340000000000000000
*000000000000000700000000000000350000000000000000000000000000000800000000000000
*360000000000000000000000000000000800000000000000370000000000000000000000000000
*000800000000000000380000000000000000000000000000000800000000000000390000000000
*0000000000000000000008000000000000003a0000000000000000000000000000000800000000
*0000003b00000000000000000000000000000008000000000000003c0000000000000000000000
*0000000008000000000000003d00000000000000000000000000000008000000000000003e0000
*0000000000000000000000000008000000000000003f0000000000000000000000000000000900
*000000000000400000000000000000000000000000000900000000000000410000000000000000
*000000000000000900000000000000420000000000000000000000000000000a00000000000000
*430000000000000000000000000000000a00000000000000440000000000000000000000000000
*000a00000000000000450000000000000000000000000000000a00000000000000460000000000
*000000000000000000000a00000000000000470000000000000000000000000000000a00000000
*000000480000000000000000000000000000000b00000000000000490000000000000000000000
*000000000b000000000000004a0000000000000000000000000000000b000000000000004b0000
*000000000000000000000000000c000000000000004c0000000000000000000000000000000c00
*0000000000004d0000000000000000000000000000000c000000000000004e0000000000000000
*000000000000000c000000000000004f0000000000000000000000000000000c00000000000000
*500000000000000000000000000000000c00000000000000510000000000000000000000000000
*000d00000000000000520000000000000000000000000000000d00000000000000530000000000
*000000000000000000000e00000000000000540000000000000000000000000000000f00000000
*000000550000000000000000000000000000000f00000000000000560000000000000000000000
*000000000f00000000000000570000000000000000000000000000000f00000000000000580000
*000000000000000000000000000f00000000000000590000000000000000000000000000000f00
*0000000000005a0000000000000000000000000000000f000000000000005b0000000000000000
*000000000000000f000000000000005c0000000000000000000000000000000f00000000000000
*5d00000000000000000000000000000010000000000000005e0000000000000000000000000000
*0011000000000000005f0000000000000000000000000000001100000000000000600000000000
*000000000000000000001200000000000000610000000000000000000000000000001300000000
*000000620000000000000000000000000000001300000000000000630000000000000000000000
*000000001300000000000000640000000000000000000000000000001300000000000000650000
*000000000000000000000000001300000000000000660000000000000000000000000000001300
*000000000000670000000000000000000000000000001300000000000000680000000000000000
*000000000000001300000000000000690000000000000000000000000000001300000000000000
*6a00000000000000000000000000000013000000000000006b0000000000000000000000000000
*0013000000000000006c00000000000000000000000000000013000000000000006d0000000000
*0000000000000000000013000000000000006e0000000000000000000000000000001300000000
*0000006f0000000000000000000000000000001400000000000000700000000000000000000000
*000000001400000000000000710000000000000000000000000000001400000000000000720000
*000000000000000000000000001400000000000000730000000000000000000000000000001400
*000000000000740000000000000000000000000000001400000000000000750000000000000000
*000000000000001400000000000000760000000000000000000000000000001500000000000000
*770000000000000000000000000000001500000000000000780000000000000000000000000000
*0015000000000000007900000000000000000000000000000015000000000000007a0000000000
*0000000000000000000016000000000000007b0000000000000000000000000000001600000000
*0000007c00000000000000000000000000000016000000000000007d0000000000000000000000
*0000000016000000000000007e00000000000000000000000000000017000000000000007f0000
*000000000000000000000000001700000000000000800000000000000000000000000000001800
*000000000000810000000000000000000000000000001800000000000000820000000000000000
*000000000000001800000000000000830000000000000000000000000000001900000000000000
*840000000000000000000000000000001a00000000000000850000000000000000000000000000
*001a00000000000000860000000000000000000000000000001a00000000000000870000000000
*000000000000000000001b00000000000000880000000000000000000000000000001b00000000
*000000890000000000000000000000000000001b000000000000008a0000000000000000000000
*000000001c000000000000008b0000000000000000000000000000001c000000000000008c0000
*000000000000000000000000001c000000000000008d0000000000000000000000000000001c00
*0000000000008e0000000000000000000000000000001c000000000000008f0000000000000000
*000000000000001d00000000000000900000000000000000000000000000001d00000000000000
*910000000000000000000000000000001d00000000000000920000000000000000000000000000
*001d00000000000000930000000000000000000000000000001d00000000000000940000000000
*000000000000000000001d00000000000000950000000000000000000000000000001d00000000
*000000960000000000000000000000000000001d00000000000000970000000000000000000000
*000000001d00000000000000980000000000000000000000000000001d00000000000000990000
*000000000000000000000000001e000000000000009a0000000000000000000000000000001e00
*0000000000009b0000000000000000000000000000001e000000000000009c0000000000000000
*000000000000001e000000000000009d0000000000000000000000000000001e00000000000000
*9e0000000000000000000000000000001e000000000000009f0000000000000000000000000000
*001e00000000000000a00000000000000000000000000000001e00000000000000a10000000000
*000000000000000000001e00000000000000a20000000000000000000000000000001e00000000
*000000a30000000000000000000000000000001f00000000000000a40000000000000000000000
*000000001f00000000000000a50000000000000000000000000000001f00000000000000a60000
*000000000000000000000000001f00000000000000a70000000000000000000000000000001f00
*000000000000a80000000000000000000000000000001f00000000000000a90000000000000000
*000000000000001f00000000000000aa0000000000000000000000000000001f00000000000000
*ab0000000000000000000000000000001f00000000000000ac0000000000000000000000000000
*001f00000000000000ad0000000000000000000000000000001f00000000000000ae0000000000
*000000000000000000001f00000000000000af0000000000000000000000000000001f00000000
*000000b00000000000000000000000000000001f00000000000000b10000000000000000000000
*000000001f00000000000000b20000000000000000000000000000001f00000000000000b30000
*000000000000000000000000001f00000000000000b40000000000000000000000000000001f00
*000000000000b50000000000000000000000000000001f00000000000000b60000000000000000
*000000000000001f00000000000000b70000000000000000000000000000001f00000000000000
*b80000000000000000000000000000001f00000000000000b90000000000000000000000000000
*002000000000000000ba0000000000000000000000000000002000000000000000bb0000000000
*000000000000000000002100000000000000bc0000000000000000000000000000002100000000
*000000bd0000000000000000000000000000002100000000000000be0000000000000000000000
*000000002100000000000000bf0000000000000000000000000000002100000000000000c00000
*000000000000000000000000002100000000000000c10000000000000000000000000000002100
*000000000000c20000000000000000000000000000002100000000000000c30000000000000000
*000000000000002100000000000000c40000000000000000000000000000002100000000000000
*c50000000000000000000000000000002224000000000000000000000000000000230001080000
*00700000006f000000720000007400000061000000620000006c00000065010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c01150000006c00000069000000620000007200000061000000720000006900000065000000
*73000000400000006800000061000000730000006b000000650000006c0000006c0000002e0000
*006f0000007200000067000000000000000000000000000000000000010001140000006e000000
*6f0000006e0000002d000000700000006f000000720000007400000061000000620000006c0000
*006500000020000000280000004d0000005000000054000000430000007300000029010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c01150000006c000000690000006200000072000000610000007200000069000000
*6500000073000000400000006800000061000000730000006b000000650000006c0000006c0000
*002e0000006f000000720000006706000000000000000001030102240000005400000068000000
*69000000730000002000000074000000790000007000000065000000200000006d000000610000
*007900000020000000620000006500000020000000620000006500000073000000740000002000
*00007200000065000000610000006400000020000000690000006e000000660000006900000078
*0000002e0000002000000041000000200107010202000000630000002001040100000000000000
*0000000000000000000000000000000000010202000000200000006d0102060000002000000069
*000000730000002000000061000000200104010000000000000000c60000000000000024000000
*000000002501020100000020010702010000006d01020b00000020000000740000006800000061
*00000074000000200000006d0000006100000070000000730000000a0102100000002000000076
*000000610000006c000000750000006500000073000000200000006f0000006600000020000000
*740000007900000070000000650000002001070201000000630102090000002000000074000000
*68000000720000006f0000007500000067000000680000002001070204000000750000006e0000
*00690000007401021300000020000000740000006f0000002000000076000000610000006c0000
*00750000006500000073000000200000006f000000660000002000000074000000790000007000
*00006500000020010702010000006d0102040000002e0000002000000041000000200107020100
*0000630102010000002d0104010000000000000000000000000000000000000000000000000101
*020a000000200000006d000000610000007900000020000000610000006c000000730000006f00
*00000a01022900000020000000730000007500000070000000700000006c000000790000002000
*00006f0000007000000065000000720000006100000074000000690000006f0000006e00000073
*000000200000007700000068000000690000006300000068000000200000007400000061000000
*630000006b0000002d0000006f0000006e00000020000000610000006e0000006f000000740000
*0068000000650000007200000020010702010000006301021000000020000000740000006f0000
*0020000000610000006e0000002000000065000000780000006900000073000000740000006900
*00006e00000067000000200104010000000000000000c600000000000000240000000000000025
*01020100000020010702010000006d01020d000000200000006f0000006e000000200000007400
*00006800000065000000200000006c0000006500000066000000740000000a0102500000002000
*00006f000000720000002000000072000000690000006700000068000000740000002e00000020
*000000540000006800000065000000730000006500000020000000730000007000000065000000
*6300000069000000610000006c000000690000007a000000650000006400000020000000720000
*006500000064000000750000006300000074000000690000006f0000006e000000730000002000
*00006d0000006100000079000000200000006200000065000000200000006d0000006f00000072
*000000650000002000000065000000660000006600000069000000630000006900000065000000
*6e0000007400000020000000690000006e00000020000000730000006f0000006d000000650000
*00200000007300000063000000650000006e0000006100000072000000690000006f0000007300
*00000a01022400000020000000610000006e000000640000002000000061000000720000006500
*00002000000075000000730000006500000064000000200000007700000068000000650000006e
*00000020000000610000007000000070000000720000006f000000700000007200000069000000
*610000007400000065000000200000006200000079000000200000006100000020010209000000
*47000000650000006e000000650000007200000061000000740000006f0000007201020c000000
*2e00000020000000540000006800000065000000200000006e000000610000006d000000650000
*007300000020010401000000000000000003000000000000000000000000000000010102050000
*0020000000610000006e0000006400000020010401000000000000000002000000000000000000
*0000000000000101020600000020000000770000006f000000720000006b0000000a023d000000
*20000000620000007900000020000000610000006e000000610000006c0000006f000000670000
*007900000020000000740000006f00000020000000740000006800000065000000200000007300
*0000790000006e0000006f0000006e000000790000006d0000006f000000750000007300000020
*0000006f0000007000000065000000720000006100000074000000690000006f0000006e000000
*7300000020000000690000006e00000020000000740000006800000065000000200000006c0000
*00690000007300000074000000200000006d0000006f0000006e0000006f000000690000006400
*00002e0000000a010301024c000000540000006800000069000000730000002000000063000000
*6c0000006100000073000000730000002000000064000000650000006c00000069000000620000
*0065000000720000006100000074000000650000006c0000007900000020000000610000007600
*00006f0000006900000064000000730000002000000066000000750000006e0000006300000074
*000000690000006f0000006e000000610000006c0000002d000000640000006500000070000000
*650000006e00000064000000650000006e000000630000006900000065000000730000002c0000
*0020000000730000006f0000002000000074000000680000006100000074000000200000002800
*0000290000002000000063000000610000006e0000002000000062000000650000002000000061
*0000002001070201000000630102090000002d0000005200000065000000640000007500000063
*00000065000000720000000a01020900000020000000660000006f000000720000002000000061
*0000006c0000006c00000020010702010000006301024a0000002c00000020000000610000006e
*0000006400000020000000730000006f000000200000006d000000610000006e00000079000000
*20000000630000006f0000006d0000006d0000006f0000006e0000002000000072000000650000
*006400000075000000630000006500000072000000730000002000000063000000610000006e00
*000020000000770000006f000000720000006b000000200000006f000000760000006500000072
*000000200000006d000000750000006c0000007400000069000000700000006c00000065000000
*2000000074000000790000007000000065000000730000002c00000020000000660000006f0000
*007200000020000000690000006e0000007300000074000000610000006e000000630000006500
*00002c0000000a0102200000002000000046000000690000007200000073000000740000002000
*0000610000006e00000064000000200000004c000000610000007300000074000000200000006d
*000000610000007900000020000000720000006500000064000000750000006300000065000000
*20000000620000006f000000740000006800000020010702010000006101020500000020000000
*610000006e00000064000000200104010000000000000000c70000000000000024000000000000
*002601020100000020010702010000006101020a0000002e000000200000005300000069000000
*6e000000630000006500000020000000610000002001020900000047000000650000006e000000
*650000007200000061000000740000006f00000072010215000000200000006800000061000000
*730000002000000061000000200000006600000069000000780000006500000064000000200000
*00650000006c000000650000006d000000650000006e000000740000000a01025a000000200000
*00740000007900000070000000650000002c000000200000007400000068000000650000002000
*0000690000006e00000070000000750000007400000020000000740000006f0000002000000074
*000000680000006500000020000000720000006500000064000000750000006300000065000000
*720000002000000069000000730000002000000067000000650000006e00000065000000720000
*00610000006c0000006c00000079000000200000006b0000006e0000006f000000770000006e00
*000020000000610000006e00000064000000200000006500000078000000740000007200000061
*0000006300000074000000690000006e000000670000002000000066000000720000006f000000
*6d00000020000000740000006800000065000000200000006d0000006f0000006e0000006f0000
*00690000006400000020000000750000007300000075000000610000006c0000006c0000007900
*00000a01025a000000200000006900000073000000200000007300000075000000660000006600
*0000690000006300000069000000650000006e0000007400000020000000740000006f00000020
*000000660000006900000078000000200000007400000068000000650000002000000072000000
*6500000073000000750000006c0000007400000020000000740000007900000070000000650000
*002e00000020000000430000006f0000006d00000062000000690000006e000000610000007400
*00006f000000720000007300000020000000610000007200000065000000200000006100000076
*00000061000000690000006c00000061000000620000006c000000650000002000000066000000
*6f00000072000000200000006d0000006f00000073000000740000002000000073000000630000
*00650000006e0000006100000072000000690000006f0000007300000020000000770000006800
*00006500000072000000650000000a010258000000200000007400000068000000690000007300
*0000200000006900000073000000200000006e0000006f00000074000000200000007400000068
*0000006500000020000000630000006100000073000000650000002c0000002000000061000000
*6e0000006400000020000000740000006800000065000000200000006600000065000000770000
*002000000072000000650000006d00000061000000690000006e000000690000006e0000006700
*00002000000063000000610000007300000065000000730000002000000063000000610000006e
*0000002000000062000000650000002000000068000000610000006e000000640000006c000000
*6500000064000000200000006200000079000000200000007500000073000000690000006e0000
*006700000020000000610000006e000000200000006500000078000000700000006c0000006900
*0000630000006900000074000000200000000a0212000000200000007400000079000000700000
*006500000020000000610000006e0000006e0000006f0000007400000061000000740000006900
*00006f0000006e0000002e0000000a030102140000004d000000690000006e000000690000006d
*000000610000006c00000020000000640000006500000066000000690000006e00000069000000
*74000000690000006f0000006e0000003a00000020010401000000000000000001000000000000
*00000000000000000001010204000000200000006f000000720000002001040100000000000000
*00020000000000000000000000000000000102010000000a000000000000000103010217000000
*430000006f0000006e000000760000006500000072000000740000002000000061000000200000
*0076000000610000006c000000750000006500000020000000690000006e000000740000006f00
*00002000000061000000200104010000000000000000c600000000000000240000000000000025
*02010000000a000000000000000203010214000000410000007000000070000000650000006e00
*00006400000020000000610000002000000076000000610000006c000000750000006500000020
*000000740000006f0000002000000061000000200104010000000000000000c600000000000000
*240000000000000025022400000020000000660000006f00000072000000200000007500000073
*0000006500000020000000690000006e000000200000006c000000650000006600000074000000
*2d000000740000006f0000002d0000007200000069000000670000006800000074000000200000
*00720000006500000064000000750000006300000074000000690000006f0000006e0000000a00
*000000000000030301021700000050000000720000006500000070000000650000006e00000064
*00000020000000610000002000000076000000610000006c000000750000006500000020000000
*6f0000006e000000740000006f0000002000000061000000200104010000000000000000c60000
*0000000000240000000000000025022800000020000000660000006f0000007200000020000000
*75000000730000006500000020000000640000007500000072000000690000006e000000670000
*002000000072000000690000006700000068000000740000002d000000740000006f0000002d00
*00006c000000650000006600000074000000200000007200000065000000640000007500000063
*00000074000000690000006f0000006e0000000a00000000000000040301020800000041000000
*70000000700000006c000000790000002000000061000000200104010000000000000000000000
*000000000000000000000000000101020600000020000000740000006f00000020000000610000
*00200104010000000000000000c800000000000000240000000000000027024b00000020000000
*630000006f0000006e0000007400000061000000690000006e00000065000000720000002c0000
*00200000006100000066000000740000006500000072000000200000006d000000610000007000
*000070000000690000006e00000067000000200000007400000068000000650000002000000063
*0000006f0000006e00000074000000650000006e00000074000000730000002000000069000000
*6e000000740000006f000000200000006100000020000000730000007500000069000000740000
*0061000000620000006c0000006500000020000000660000006f000000720000006d0000002000
*0000660000006f0000007200000020000000720000006500000064000000750000006300000074
*000000690000006f0000006e0000002e0000000a00000000000000050301020800000041000000
*70000000700000006c000000790000002000000061000000200104010000000000000000000000
*000000000000000000000000000101020600000020000000740000006f00000020000000610000
*00200104010000000000000000c80000000000000024000000000000002701021e000000200000
*006d000000610000007000000070000000690000006e0000006700000020000000650000006100
*0000630000006800000020000000650000006c000000650000006d000000650000006e00000074
*000000200000007400000068000000720000006f00000075000000670000006800000020010401
*0000000000000000010000000000000000000000000000000102010000000a2400000000000000
*c900000000000000ca00000000000000cb00000000000000c600000000000000cc000000000000
*00cd00000000000000ce00000000000000cf00000000000000d000000000000000d10000000000
*0000d200000000000000d300000000000000d400000000000000d500000000000000d600000000
*000000d700000000000000d800000000000000d900000000000000da00000000000000db000000
*00000000dc00000000000000dd00000000000000de00000000000000df00000000000000e00000
*0000000000e100000000000000e200000000000000e30000000000000000000000000000000100
*000000000000020000000000000003000000000000000400000000000000050000000000000006
*000000000000000708000000000000000000000000000000010000000000000002000000000000
*000300000000000000040000000000000005000000000000000700000000000000060000000000
*00000000000000000000020001140000006e0000006f0000006e0000002d000000700000006f00
*0000720000007400000061000000620000006c0000006500000020000000280000004d00000050
*00000054000000430000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c01150000006c000000690000
*006200000072000000610000007200000069000000650000007300000040000000680000006100
*0000730000006b000000650000006c0000006c0000002e0000006f000000720000006701000000
*00000000080301022200000050000000720000006f000000760000006900000064000000650000
*00730000002000000061000000200000006d000000650000006300000068000000610000006e00
*000069000000730000006d00000020000000660000006f00000072000000200000007400000068
*000000650000002000000055000000540000004600000038000000200104010000000000000000
*c600000000000000240000000000000025023600000020000000740000006f0000002000000072
*00000065000000700000006f000000720000007400000020000000690000006e00000076000000
*610000006c00000069000000640000002000000063000000680000006100000072000000610000
*00630000007400000065000000720000007300000020000000740000006f000000200000006f00
*00006e00000065000000200000006f00000072000000200000006d0000006f0000007200000065
*000000200000006d0000006f0000006e0000006f0000006900000064000000730000002e000000
*0a2700000000000000c900000000000000ca00000000000000cb00000000000000c60000000000
*0000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000
*000000d100000000000000d200000000000000d300000000000000d400000000000000d5000000
*00000000d600000000000000d700000000000000d800000000000000d900000000000000da0000
*0000000000db00000000000000dc00000000000000dd00000000000000de00000000000000df00
*000000000000e000000000000000e100000000000000e200000000000000e30000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*050000000000000006000000000000000700000000000000080000000000000009000000000000
*000a030000000000000008000000000000000a0000000000000009000000000000000000000000
*000000030001140000006e0000006f0000006e0000002d000000700000006f0000007200000074
*00000061000000620000006c0000006500000020000000280000004d0000005000000054000000
*430000007300000029010c0000006500000078000000700000006500000072000000690000006d
*000000650000006e00000074000000610000006c01150000006c00000069000000620000007200
*00006100000072000000690000006500000073000000400000006800000061000000730000006b
*000000650000006c0000006c0000002e0000006f0000007200000067002900000000000000c900
*000000000000ca00000000000000cb00000000000000c600000000000000cc00000000000000cd
*00000000000000ce00000000000000cf00000000000000d000000000000000d100000000000000
*d200000000000000d300000000000000d400000000000000d500000000000000d6000000000000
*00d700000000000000d800000000000000d900000000000000da00000000000000db0000000000
*0000dc00000000000000dd00000000000000de00000000000000df00000000000000e000000000
*000000e100000000000000e200000000000000e300000000000000000000000000000001000000
*000000000200000000000000030000000000000004000000000000000500000000000000060000
*00000000000700000000000000080000000000000009000000000000000a000000000000000b00
*0000000000000c02000000000000000b000000000000000c000000000000000000000000000000
*040001140000006e0000006f0000006e0000002d000000700000006f0000007200000074000000
*61000000620000006c0000006500000020000000280000004d0000005000000054000000430000
*007300000029010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c01150000006c00000069000000620000007200000061
*00000072000000690000006500000073000000400000006800000061000000730000006b000000
*650000006c0000006c0000002e0000006f000000720000006701000000000000000d0301020300
*0000490000006600000020010702010000006d0102060000002000000069000000730000002000
*0000610000002001070201000000630102010000002d0105070000005200000065000000640000
*007500000063000000650000007201020c0000002c000000200000007400000068000000650000
*006e000000200000006d0000002000000069000000730000002001070102030000002800000063
*0000002001040200000000000000000e0000000000000000000000000000000400000000000000
*000d000000000000000000000000000000040203000000200000006d000000290102010000002d
*010507000000520000006500000064000000750000006300000065000000720102010000000a01
*022800000020000000200000002000000054000000680000006900000073000000200000006300
*0000610000006e0000002000000062000000650000002000000075000000730000006500000064
*00000020000000740000006f00000020000000710000007500000069000000630000006b000000
*6c000000790000002000000073000000650000006c000000650000006300000074000000200000
*006100000020010507000000520000006500000064000000750000006300000065000000720102
*0e00000020000000660000006f0000007200000020000000750000007300000065000000200000
*0061000000730000002000000061000000200104010100000000000000e40102010000000a0102
*030000002000000020000000200104010100000000000000e502020000002e0000000a27000000
*00000000c900000000000000ca00000000000000cb00000000000000c600000000000000cc0000
*0000000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d100
*000000000000d200000000000000d300000000000000d400000000000000d500000000000000d6
*00000000000000d700000000000000d800000000000000d900000000000000da00000000000000
*db00000000000000dc00000000000000dd00000000000000de00000000000000df000000000000
*00e000000000000000e100000000000000e200000000000000e300000000000000000000000000
*000001000000000000000200000000000000030000000000000004000000000000000500000000
*000000060000000000000007000000000000000d000000000000000e000000000000000f030000
*00000000000d000000000000000e000000000000000f0000000000000000000000000000000500
*000000040000000000000010030102040000005400000068000000650000002001040100000000
*00000000c600000000000000240000000000000025010201000000200107010201000000280102
*0100000027010211000000750000006e000000690000006f0000006e0000005700000069000000
*7400000068000000200000006d000000610000007000000070000000650000006e000000640102
*01000000270102010000002c01040100000000000000001a000000000000000000000000000000
*05020100000029022100000020000000660000006f0000007200000020000000630000006f0000
*006e0000007400000061000000690000006e000000650000007200000073000000200000006600
*0000750000006c0000006c000000200000006f00000066000000200000006d0000006f0000006e
*0000006f0000006900000064000000730000002e0000000a000000000000001303024d00000050
*0000006f0000006c000000790000006d0000006f00000072000000700000006800000069000000
*6300000020000000630000006f0000006e0000007400000061000000690000006e000000650000
*007200000073000000200000007400000068000000610000007400000020000000770000006500
*00002000000063000000610000006e00000020000000730000007500000070000000700000006c
*0000007900000020000000610000006e000000200000006f000000700000006500000072000000
*6100000074000000690000006f0000006e00000020000000740000006f00000020000000680000
*00610000006e000000640000006c0000006500000020000000750000006e000000690000006f00
*00006e0000007300000020000000770000006900000074000000680000000a0000000000000016
*03010204000000540000006800000065000000200104010000000000000000c600000000000000
*2400000000000000250102010000002001070102010000002801040100000000000000001b0000
*00000000000000000000000000050102010000002c01040100000000000000001a000000000000
*0000000000000000000502010000002902010000000a00000000000000190301021d0000004100
*000020000000430000006f0000006e0000007400000061000000690000006e0000006500000072
*000000200000007300000075000000690000007400000061000000620000006c00000065000000
*20000000660000006f000000720000002000000074000000680000006500000020010402000000
*000000000017000000000000000000000000000000050000000000000000160000000000000000
*0000000000000005010201000000200104010000000000000000c6000000000000002400000000
*0000002502010000000a1300000000000000c900000000000000cb00000000000000c600000000
*000000000000000000000001000000000000000200000000000000030000000000000010000000
*000000001100000000000000120000000000000013000000000000001400000000000000150000
*000000000016000000000000001700000000000000180000000000000019000000000000001a00
*0000000000001b0c0000000000000019000000000000001a000000000000001b00000000000000
*160000000000000017000000000000001800000000000000130000000000000015000000000000
*001400000000000000100000000000000011000000000000001200000000000000000000000000
*000006000108000000700000006f000000720000007400000061000000620000006c0000006501
*0c0000006500000078000000700000006500000072000000690000006d000000650000006e0000
*0074000000610000006c01150000006c0000006900000062000000720000006100000072000000
*690000006500000073000000400000006800000061000000730000006b000000650000006c0000
*006c0000002e0000006f000000720000006705000000000000001c030102020000006100000020
*010401000000000000000025000000000000000000000000000000060102190000002000000074
*00000072000000610000006e00000073000000660000006f000000720000006d00000065000000
*720000002000000074000000680000006100000074000000200000007400000072000000650000
*00610000007400000073000000200104010000000000000000e600000000000000240000000000
*000028010204000000200000006100000073000000200104010000000000000000e70000000000
*000029000000000000002a0102010000000a010215000000200000005400000068000000690000
*0073000000200000006c00000065000000740000007300000020000000790000006f0000007500
*00002000000075000000730000006500000020000000610000002001020a000000420000007900
*00007400000065000000530000007400000072000000690000006e000000670102060000002000
*000061000000730000002000000061000000200104010000000000000000e70000000000000029
*000000000000002a01022000000020000000730000006f00000075000000720000006300000065
*00000020000000770000006900000074000000680000006f000000750000007400000020000000
*670000006f000000690000006e00000067000000200000007400000068000000720000006f0000
*007500000067000000680000002000000061000000200104010000000000000000c60000000000
*0000240000000000000025010212000000200000007400000072000000610000006e0000007300
*0000660000006f000000720000006d0000006500000072000000200000006c000000690000006b
*00000065000000200102040000005500000054000000460000003802010000000a000000000000
*001f03010202000000610000002001040100000000000000002500000000000000000000000000
*000006024d000000200000007400000072000000610000006e00000073000000660000006f0000
*00720000006d000000650000007200000020000000740000006800000061000000740000002000
*000061000000730000006b00000073000000200000006f0000006e0000006c0000007900000020
*000000660000006f00000072000000200000007400000068000000650000002000000076000000
*610000006c00000075000000650000007300000020000000630000006f0000006e000000740000
*0061000000690000006e000000650000006400000020000000690000006e000000200000006100
*00006e00000020000000690000006e000000640000006500000078000000650000006400000020
*000000630000006f0000006e0000007400000061000000690000006e0000006500000072000000
*0a0000000000000022030102020000006100000020010401000000000000000025000000000000
*000000000000000000060241000000200000007400000072000000610000006e00000073000000
*660000006f000000720000006d0000006500000072000000200000007400000068000000610000
*00740000002000000061000000730000006b00000073000000200000006f0000006e0000006c00
*00007900000020000000660000006f000000720000002000000074000000680000006500000020
*0000006b000000650000007900000073000000200000006f000000660000002000000061000000
*6e00000020000000690000006e0000006400000065000000780000006500000064000000200000
*00630000006f0000006e0000007400000061000000690000006e00000065000000720000000a00
*00000000000025030102130000006d000000690000006e000000690000006d000000610000006c
*00000020000000640000006500000066000000690000006e000000690000007400000069000000
*6f0000006e00000020010401000000000000000027000000000000000000000000000000060102
*04000000200000006f000000720000002001040100000000000000002800000000000000000000
*00000000000602010000000a000000000000002a03010208000000410000007000000070000000
*6c0000007900000020000000610000002001040100000000000000000000000000000000000000
*00000000000101021f000000200000006400000069000000720000006500000063000000740000
*006c0000007900000020000000740000006f000000200000007400000068000000650000002000
*0000650000006c000000650000006d000000650000006e0000007400000073000000200000006f
*000000660000002000000061000000200104010000000000000000250000000000000000000000
*000000000602010000000a3500000000000000c900000000000000ca00000000000000cb000000
*00000000c600000000000000cc00000000000000cd00000000000000ce00000000000000cf0000
*0000000000d000000000000000d100000000000000d200000000000000d300000000000000d400
*000000000000d500000000000000d600000000000000d700000000000000d800000000000000d9
*00000000000000da00000000000000db00000000000000dc00000000000000dd00000000000000
*de00000000000000df00000000000000e000000000000000e100000000000000e2000000000000
*00e300000000000000000000000000000001000000000000000200000000000000030000000000
*000004000000000000000500000000000000060000000000000007000000000000001c00000000
*0000001d000000000000001e000000000000001f00000000000000200000000000000021000000
*000000002200000000000000230000000000000024000000000000002500000000000000260000
*00000000002700000000000000280000000000000029000000000000002a000000000000002b00
*0000000000002c1100000000000000250000000000000026000000000000002700000000000000
*280000000000000029000000000000002200000000000000230000000000000024000000000000
*001f00000000000000200000000000000021000000000000001c000000000000001d0000000000
*00001e000000000000002a000000000000002b000000000000002c000000000000000000000000
*000000070001270000006e0000006f0000006e0000002d000000700000006f0000007200000074
*00000061000000620000006c0000006500000020000000280000004d0000005000000054000000
*43000000730000002c000000200000004f0000007600000065000000720000006c0000006f0000
*0061000000640000006500000064000000530000007400000072000000690000006e0000006700
*00007300000029010c0000006500000078000000700000006500000072000000690000006d0000
*00650000006e00000074000000610000006c01150000006c000000690000006200000072000000
*6100000072000000690000006500000073000000400000006800000061000000730000006b0000
*00650000006c0000006c0000002e0000006f000000720000006706000000000000002d03010202
*00000041000000200104010000000000000000c60000000000000024000000000000002501023a
*000000200000006f00000066000000200000007000000061000000720000007400000069000000
*610000006c00000020000000690000006e000000660000006f000000720000006d000000610000
*0074000000690000006f0000006e0000002000000061000000620000006f000000750000007400
*0000200000006c0000006f000000630000006100000074000000690000006f0000006e00000073
*00000020000000690000006e000000200000006100000020000000730000006f00000075000000
*7200000063000000650000002000000066000000690000006c000000650000002e0000000a025f
*000000200000002000000020000000540000006800000069000000730000002000000069000000
*7300000020000000700000006f0000006c000000790000006d0000006f00000072000000700000
*0068000000690000006300000020000000690000006e0000002000000074000000680000006500
*0000200000006b000000690000006e00000064000000200000006f000000660000002000000069
*0000006e000000660000006f000000720000006d0000006100000074000000690000006f000000
*6e00000020000000790000006f000000750000002000000077000000610000006e000000740000
*0020000000740000006f000000200000006d00000061000000690000006e000000740000006100
*0000690000006e0000002000000061000000620000006f00000075000000740000002000000065
*00000061000000630000006800000020000000730000006f000000750000007200000063000000
*650000002000000066000000690000006c000000650000002e0000000a00000000000000300302
*3f000000430000006f0000006d0000007000000075000000740000006500000020000000740000
*006800000065000000200000006c0000006f000000630000006100000074000000690000006f00
*00006e000000200000006f0000006600000020000000740000006800000065000000200000006e
*000000650000007800000074000000200000007300000074000000610000006e00000064000000
*61000000720000006400000020000000380000002d000000630000006f0000006c000000750000
*006d0000006e00000020000000610000006c00000069000000670000006e000000650000006400
*0000200000007400000061000000620000000a0000000000000031030102350000006c00000069
*000000660000007400000020000000690000006e000000660000006f000000720000006d000000
*6100000074000000690000006f0000006e0000002000000061000000620000006f000000750000
*0074000000200000006100000020000000730000006f0000007500000072000000630000006500
*00002000000066000000690000006c0000006500000020000000690000006e000000740000006f
*000000200000006100000020000000730000007400000061000000720000007400000069000000
*6e000000670000002001040100000000000000002d00000000000000000000000000000007020f
*00000020000000660000006f000000720000002000000074000000680000006100000074000000
*2000000066000000690000006c000000650000000a000000000000003203026a00000065000000
*780000007400000072000000610000006300000074000000200000007000000061000000720000
*007400000069000000610000006c00000020000000690000006e000000660000006f0000007200
*00006d0000006100000074000000690000006f0000006e0000002000000061000000620000006f
*000000750000007400000020000000740000006800000065000000200000006300000075000000
*7200000072000000650000006e0000007400000020000000630000006f0000006c000000750000
*006d0000006e0000002c000000200000006500000076000000650000006e000000200000006900
*00006e000000200000007400000068000000650000002000000061000000620000007300000065
*0000006e0000006300000065000000200000006f00000066000000200000006b0000006e000000
*6f000000770000006c00000065000000640000006700000065000000200000006f000000660000
*002000000074000000680000006500000020000000730000006f00000075000000720000006300
*0000650000002000000066000000690000006c000000650000000a000000000000003303024600
*000065000000780000007400000072000000610000006300000074000000200000007000000061
*000000720000007400000069000000610000006c00000020000000690000006e00000066000000
*6f000000720000006d0000006100000074000000690000006f0000006e00000020000000610000
*00620000006f000000750000007400000020000000740000006800000065000000200000006300
*0000750000007200000072000000650000006e00000074000000200000006c000000690000006e
*00000065000000200000006e000000750000006d00000062000000650000007200000020000000
*690000006600000020000000700000006f000000730000007300000069000000620000006c0000
*00650000000a000000000000003403023c00000065000000780000007400000072000000610000
*006300000074000000200000007400000068000000650000002000000073000000740000006100
*00006e0000006400000061000000720000006400000020000000660000006f000000720000006d
*000000610000007400000020000000660000006f0000007200000020000000610000006e000000
*200000006100000062000000730000006f0000006c000000750000007400000065000000200000
*00730000006f0000007500000072000000630000006500000020000000700000006f0000007300
*00006900000074000000690000006f0000006e0000000a2f00000000000000c900000000000000
*ca00000000000000cb00000000000000c600000000000000cc00000000000000cd000000000000
*00ce00000000000000cf00000000000000d000000000000000d100000000000000d20000000000
*0000d300000000000000d400000000000000d500000000000000d600000000000000d700000000
*000000d800000000000000d900000000000000da00000000000000db00000000000000dc000000
*00000000dd00000000000000de00000000000000df00000000000000e000000000000000e10000
*0000000000e200000000000000e300000000000000000000000000000001000000000000000200
*000000000000030000000000000004000000000000000500000000000000060000000000000007
*00000000000000080000000000000009000000000000000a000000000000002d00000000000000
*2e000000000000002f000000000000003000000000000000310000000000000032000000000000
*00330000000000000034080000000000000030000000000000002d000000000000002f00000000
*0000002e0000000000000033000000000000003200000000000000310000000000000034000000
*000000000000000000000000080001270000006e0000006f0000006e0000002d00000070000000
*6f000000720000007400000061000000620000006c0000006500000020000000280000004d0000
*00500000005400000043000000730000002c000000200000004f00000076000000650000007200
*00006c0000006f0000006100000064000000650000006400000053000000740000007200000069
*0000006e000000670000007300000029010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c01150000006c000000690000
*006200000072000000610000007200000069000000650000007300000040000000680000006100
*0000730000006b000000650000006c0000006c0000002e0000006f000000720000006708000000
*000000003503010202000000410000002001040100000000000000000800000000000000000000
*0000000000020226000000200000007400000072000000610000006e0000007300000066000000
*6f000000720000006d000000650000007200000020000000740000006800000061000000740000
*0020000000730000007400000072000000690000007000000073000000200000006f0000007500
*000074000000200000006e00000065000000770000006c000000690000006e0000006500000073
*0000000a0000000000000037030102020000004100000020010401000000000000000008000000
*00000000000000000000000002010236000000200000007400000072000000610000006e000000
*73000000660000006f000000720000006d00000065000000720000002000000074000000680000
*006100000074000000200000007300000074000000720000006900000070000000730000002000
*00006f000000750000007400000020000000610000006e00000079000000200000006300000068
*00000061000000720000006100000063000000740000006500000072000000200000006d000000
*610000007400000063000000680000006500000064000000200000006200000079000000200104
*010000000000000000e80000000000000024000000000000002b02010000000a00000000000000
*390301020200000041000000200104010000000000000000080000000000000000000000000000
*000201021b000000200000007400000072000000610000006e00000073000000660000006f0000
*00720000006d000000650000007200000020000000740000006800000061000000740000002000
*0000620000007200000065000000610000006b0000007300000020000000610000002001040100
*00000000000000e70000000000000029000000000000002a010201000000200104010000000000
*000000250000000000000000000000000000000601022000000020000000690000006e00000074
*0000006f0000002000000064000000690000007300000074000000690000006e00000063000000
*74000000200000006c000000690000006e00000065000000730000002c00000020000000660000
*00650000006500000064000000690000006e000000670000002000000061000000200104010000
*000000000000e70000000000000029000000000000002a01020100000020010401000000000000
*000000000000000000000000000000000000010214000000200000006500000061000000630000
*0068000000200000006c000000690000006e0000006500000020000000690000006e0000002000
*00007400000075000000720000006e0000002e0000000a000000000000003a0301020200000041
*000000200104010000000000000000080000000000000000000000000000000201021b00000020
*0000007400000072000000610000006e00000073000000660000006f000000720000006d000000
*650000007200000020000000740000006800000061000000740000002000000062000000720000
*0065000000610000006b000000730000002000000061000000200104010000000000000000e700
*00000000000029000000000000002a010201000000200104010000000000000000250000000000
*000000000000000000000601022000000020000000690000006e000000740000006f0000002000
*000064000000690000007300000074000000690000006e00000063000000740000002000000077
*0000006f0000007200000064000000730000002c00000020000000660000006500000065000000
*64000000690000006e000000670000002000000061000000200104010000000000000000e70000
*000000000029000000000000002a01020100000020010401000000000000000000000000000000
*000000000000000000010213000000200000006500000061000000630000006800000020000000
*6c000000690000006e0000006500000020000000690000006e0000002000000074000000750000
*00720000006e0000000a000000000000003b030102230000004500000078000000740000007200
*000061000000630000007400000020000000740000006800000065000000200000006d00000061
*000000740000006300000068000000650000006400000020000000770000006f00000072000000
*64000000730000002000000066000000720000006f0000006d0000002000000074000000680000
*00650000002001040100000000000000003a000000000000000000000000000000080102010000
*00200104010000000000000000c60000000000000024000000000000002502010000000a000000
*000000003c03010223000000450000007800000074000000720000006100000063000000740000
*0020000000740000006800000065000000200000006d0000006100000074000000630000006800
*00006500000064000000200000006c000000690000006e00000065000000730000002000000066
*000000720000006f0000006d000000200000007400000068000000650000002001040100000000
*000000003900000000000000000000000000000008010201000000200104010000000000000000
*c60000000000000024000000000000002502010000000a000000000000003d03025e0000005500
*000074000000690000006c0000006900000074000000790000002000000066000000750000006e
*0000006300000074000000690000006f0000006e00000020000000740000006f00000020000000
*6500000078000000740000007200000061000000630000007400000020000000770000006f0000
*00720000006400000073000000200000007500000073000000690000006e000000670000002000
*0000610000006300000063000000750000006d000000750000006c00000061000000740000006f
*000000720000002c00000020000000690000006e00000073000000690000006400000065000000
*2d000000770000006f00000072000000640000002c00000020000000610000006e000000640000
*0020000000750000006e00000074000000690000006c0000002d0000006e000000650000007800
*0000740000002d000000770000006f0000007200000064000000200000006d0000006f0000006e
*0000006f0000006900000064000000730000000a000000000000003e03025e0000005500000074
*000000690000006c0000006900000074000000790000002000000066000000750000006e000000
*6300000074000000690000006f0000006e00000020000000740000006f00000020000000650000
*00780000007400000072000000610000006300000074000000200000006c000000690000006e00
*00006500000073000000200000007500000073000000690000006e000000670000002000000061
*0000006300000063000000750000006d000000750000006c00000061000000740000006f000000
*720000002c00000020000000690000006e000000730000006900000064000000650000002d0000
*006c000000690000006e000000650000002c00000020000000610000006e000000640000002000
*0000750000006e00000074000000690000006c0000002d0000006e000000650000007800000074
*0000002d0000006c000000690000006e00000065000000200000006d0000006f0000006e000000
*6f0000006900000064000000730000000a3100000000000000c900000000000000ca0000000000
*0000cb00000000000000c600000000000000cc00000000000000cd00000000000000ce00000000
*000000cf00000000000000d000000000000000d100000000000000d200000000000000d3000000
*00000000d400000000000000d500000000000000d600000000000000d700000000000000d80000
*0000000000d900000000000000da00000000000000db00000000000000dc00000000000000dd00
*000000000000de00000000000000df00000000000000e000000000000000e100000000000000e2
*00000000000000e300000000000000000000000000000001000000000000000200000000000000
*030000000000000004000000000000000500000000000000060000000000000007000000000000
*00080000000000000009000000000000000a000000000000003500000000000000360000000000
*00003700000000000000380000000000000039000000000000003a000000000000003b00000000
*0000003c000000000000003d000000000000003e0a000000000000003a000000000000003b0000
*0000000000370000000000000038000000000000003d0000000000000039000000000000003c00
*000000000000350000000000000036000000000000003e00000000000000000000000000000009
*000108000000700000006f000000720000007400000061000000620000006c00000065010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c01150000006c0000006900000062000000720000006100000072000000690000
*006500000073000000400000006800000061000000730000006b000000650000006c0000006c00
*00002e0000006f0000007200000067002700000000000000c900000000000000ca000000000000
*00cb00000000000000c600000000000000cc00000000000000cd00000000000000ce0000000000
*0000cf00000000000000d000000000000000d100000000000000d200000000000000d300000000
*000000d400000000000000d500000000000000d600000000000000d700000000000000d8000000
*00000000d900000000000000da00000000000000db00000000000000dc00000000000000dd0000
*0000000000de00000000000000df00000000000000e000000000000000e100000000000000e200
*000000000000e30000000000000000000000000000000100000000000000020000000000000003
*000000000000000400000000000000050000000000000006000000000000000700000000000000
*3f0000000000000040000000000000004103000000000000003f00000000000000400000000000
*0000410000000000000000000000000000000a000108000000700000006f000000720000007400
*000061000000620000006c00000065010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c01150000006c00000069000000
*620000007200000061000000720000006900000065000000730000004000000068000000610000
*00730000006b000000650000006c0000006c0000002e0000006f00000072000000670600000000
*000000e903010214000000410000006e000000200000004c0000005a0000003700000038000000
*20000000630000006f0000006d0000007000000072000000650000007300000073000000690000
*006e00000067000000200104010000000000000000250000000000000000000000000000000601
*021b0000002c000000200000007700000068000000690000006300000068000000200000007300
*00007500000070000000700000006f000000720000007400000073000000200000006500000066
*00000066000000690000006300000069000000650000006e000000740000002001040100000000
*000000002700000000000000000000000000000006020c000000200000006f0000007000000065
*000000720000006100000074000000690000006f0000006e000000730000000a00000000000000
*43030102130000006100000020000000740000007900000070000000650000002d000000630000
*006f0000006e00000073000000740000007200000061000000690000006e000000650000006400
*00002001040100000000000000002a00000000000000000000000000000006020b000000200000
*006f0000007000000065000000720000006100000074000000690000006f0000006e0000000a00
*000000000000440301021c000000630000006f0000006e00000074000000720000007500000063
*0000007400000020000000610000006e000000200000004c0000005a0000003700000038000000
*2d000000630000006f0000006d0000007000000072000000650000007300000073000000650000
*006400000020010401000000000000000025000000000000000000000000000000060102090000
*00200000007500000073000000690000006e000000670000002000000061000000200104010000
*000000000000ea000000000000002c000000000000002d022a00000020000000690000006e0000
*007400000065000000720000006e000000610000006c0000006c000000790000002c0000002000
*000072000000650000007100000075000000690000007200000065000000730000002000000061
*0000006e00000020000000690000006e0000007300000074000000610000006e00000063000000
*65000000200000006f00000066000000200000004f00000072000000640000002e0000000a0000
*0000000000450301021c000000630000006f0000006e0000007400000072000000750000006300
*00007400000020000000610000006e000000200000004c0000005a00000037000000380000002d
*000000630000006f0000006d000000700000007200000065000000730000007300000065000000
*640000002001040100000000000000002500000000000000000000000000000006023600000020
*0000007500000073000000690000006e000000670000002000000061000000200000006c000000
*69000000730000007400000020000000690000006e0000007400000065000000720000006e0000
*00610000006c0000006c000000790000002c000000200000007200000065000000710000007500
*00006900000072000000650000007300000020000000610000006e00000020000000690000006e
*0000007300000074000000610000006e0000006300000065000000200000006f00000066000000
*2000000045000000710000002e0000000a000000000000004603022a0000005100000075000000
*69000000630000006b000000430000006800000065000000630000006b00000020000000700000
*00720000006f00000070000000650000007200000074000000790000003a000000200000006400
*000065000000630000006f0000006400000065000000200000002e00000020000000650000006e
*000000630000006f0000006400000065000000200000003d000000200000006900000064000000
*0a000000000000004703022c000000510000007500000069000000630000006b00000043000000
*6800000065000000630000006b0000002000000070000000720000006f00000070000000650000
*007200000074000000790000003a000000200000006400000065000000630000006f0000006400
*000065000000200000002e00000020000000650000006e000000630000006f0000006400000065
*0000004500000071000000200000003d0000002000000069000000640000000a3b000000000000
*00c900000000000000ca00000000000000cb00000000000000c600000000000000cc0000000000
*0000cd00000000000000ce00000000000000cf00000000000000d000000000000000d100000000
*000000d200000000000000d300000000000000d400000000000000d500000000000000d6000000
*00000000d700000000000000d800000000000000d900000000000000da00000000000000db0000
*0000000000dc00000000000000dd00000000000000de00000000000000df00000000000000e000
*000000000000e100000000000000e200000000000000e300000000000000000000000000000001
*000000000000000200000000000000030000000000000004000000000000000500000000000000
*060000000000000007000000000000001c000000000000001d000000000000001e000000000000
*001f00000000000000200000000000000021000000000000002200000000000000230000000000
*000024000000000000002500000000000000260000000000000027000000000000002800000000
*00000029000000000000002a000000000000002b000000000000002c0000000000000042000000
*000000004300000000000000440000000000000045000000000000004600000000000000470600
*000000000000420000000000000043000000000000004400000000000000450000000000000046
*00000000000000470000000000000000000000000000000b0001280000006e0000006f0000006e
*0000002d000000700000006f000000720000007400000061000000620000006c00000065000000
*20000000280000006f0000007600000065000000720000006c0000006f00000061000000640000
*00650000006400000020000000730000007400000072000000690000006e000000670000007300
*00002c000000200000004d0000005000000054000000430000007300000029010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c01150000006c000000690000006200000072000000610000007200000069000000650000
*0073000000400000006800000061000000730000006b000000650000006c0000006c0000002e00
*00006f0000007200000067002700000000000000c900000000000000ca00000000000000cb0000
*0000000000c600000000000000cc00000000000000cd00000000000000ce00000000000000cf00
*000000000000d000000000000000d100000000000000d200000000000000d300000000000000d4
*00000000000000d500000000000000d600000000000000d700000000000000d800000000000000
*d900000000000000da00000000000000db00000000000000dc00000000000000dd000000000000
*00de00000000000000df00000000000000e000000000000000e100000000000000e20000000000
*0000e3000000000000000000000000000000010000000000000002000000000000000300000000
*000000040000000000000005000000000000000600000000000000070000000000000048000000
*0000000049000000000000004a0300000000000000480000000000000049000000000000004a00
*00000000000000000000000000000c000108000000700000006f00000072000000740000006100
*0000620000006c00000065010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c01150000006c0000006900000062000000
*720000006100000072000000690000006500000073000000400000006800000061000000730000
*006b000000650000006c0000006c0000002e0000006f000000720000006703000000000000004b
*0301020200000041000000200104010000000000000000c6000000000000002400000000000000
*2501020b000000200000006900000073000000200000006a000000750000007300000074000000
*2000000061000000200104010000000000000000eb0000000000000024000000000000002e0213
*0000002000000077000000690000007400000068000000200000006f0000006e00000065000000
*200000006f000000620000006a0000006500000063000000740000002e000000200000000a0000
*00000000004d03010204000000540000006800000065000000200104010000000000000000c600
*000000000000240000000000000025010237000000200000006f00000066000000200000007400
*0000680000006500000020000000650000006e000000640000006f0000006d0000006f00000072
*000000700000006800000069000000730000006d00000073000000200000006f00000076000000
*650000007200000020000000730000006f0000006d00000065000000200000006f000000620000
*006a00000065000000630000007400000020000000690000006e00000020000000610000006e00
*000020000000610000007200000062000000690000007400000072000000610000007200000079
*000000200104010000000000000000eb0000000000000024000000000000002e02020000002e00
*00000a00000000000000500301020c000000450000007800000074000000720000006100000063
*0000007400000020000000740000006800000065000000200104010000000000000000c6000000
*0000000024000000000000002501021e0000002000000066000000720000006f0000006d000000
*200000006900000074000000730000002000000072000000650000007000000072000000650000
*0073000000650000006e000000740000006100000074000000690000006f0000006e0000002000
*000061000000730000002000000061000000200104010000000000000000eb0000000000000024
*000000000000002e02010000000a2f00000000000000c900000000000000ca00000000000000cb
*00000000000000c600000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000d500000000000000d600000000000000d700000000000000d80000000000
*0000d900000000000000da00000000000000db00000000000000dc00000000000000dd00000000
*000000de00000000000000df00000000000000e000000000000000e100000000000000e2000000
*00000000e300000000000000ec00000000000000ed00000000000000ee00000000000000ef0000
*0000000000eb000000000000000000000000000000010000000000000002000000000000000300
*00000000000004000000000000000500000000000000060000000000000007000000000000004b
*000000000000004c000000000000004d000000000000004e000000000000004f00000000000000
*5006000000000000004d000000000000004e000000000000004f000000000000004b0000000000
*00004c00000000000000500000000000000000000000000000000d000108000000700000006f00
*0000720000007400000061000000620000006c00000065010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0115000000
*6c0000006900000062000000720000006100000072000000690000006500000073000000400000
*006800000061000000730000006b000000650000006c0000006c0000002e0000006f0000007200
*000067001e00000000000000c900000000000000ca00000000000000cb00000000000000c60000
*0000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000
*000000000000d100000000000000d200000000000000d300000000000000d400000000000000d5
*00000000000000d600000000000000d700000000000000d800000000000000d900000000000000
*da00000000000000db00000000000000dc00000000000000dd00000000000000de000000000000
*00df00000000000000e000000000000000e100000000000000e200000000000000e30000000000
*000051000000000000005202000000000000005100000000000000520000000000000000000000
*000000000e000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c01150000006c000000690000006200000072000000610000007200
*0000690000006500000073000000400000006800000061000000730000006b000000650000006c
*0000006c0000002e0000006f0000007200000067001f00000000000000c900000000000000ca00
*000000000000cb00000000000000c600000000000000cc00000000000000cd00000000000000ce
*00000000000000cf00000000000000d000000000000000d100000000000000d200000000000000
*d300000000000000d400000000000000d500000000000000d600000000000000d7000000000000
*00d800000000000000d900000000000000da00000000000000db00000000000000dc0000000000
*0000dd00000000000000de00000000000000df00000000000000e000000000000000e100000000
*000000e200000000000000e3000000000000005100000000000000520000000000000053010000
*0000000000530000000000000000000000000000000f000122000000700000006f000000720000
*007400000061000000620000006c00000065000000200000002800000062000000750000007400
*000020000000690000006e0000007300000074000000610000006e000000630000006500000073
*00000020000000750000007300000065000000200000004d000000500000005400000043000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c01150000006c0000006900000062000000720000006100
*000072000000690000006500000073000000400000006800000061000000730000006b00000065
*0000006c0000006c0000002e0000006f00000072000000670200000000000000540301020a0000
*00430000006f0000006e0000007600000065000000720000007400000020000000610000002001
*04010000000000000000c600000000000000240000000000000025010208000000200000006900
*00006e000000740000006f00000020000000610000002001040100000000000000005a00000000
*00000000000000000000000f01020c0000002e000000200000004d0000006e000000650000006d
*0000006f0000006e00000069000000630000003a000000200107021b0000004500000078000000
*700000002000000061000000200000002a00000020000000450000007800000070000000200000
*0062000000200000003d0000002000000045000000780000007000000020000000280000006100
*0000200000002b00000020000000620000002902010000000a00000000000000570301020a0000
*00430000006f0000006e0000007600000065000000720000007400000020000000610000002001
*040100000000000000005a0000000000000000000000000000000f010208000000200000006900
*00006e000000740000006f0000002000000061000000200104010000000000000000c600000000
*00000024000000000000002501020c0000002e000000200000004d0000006e000000650000006d
*0000006f0000006e00000069000000630000003a000000200107021b0000004c0000006f000000
*670000002000000061000000200000002b000000200000004c0000006f00000067000000200000
*0062000000200000003d000000200000004c0000006f0000006700000020000000280000006100
*0000200000002a00000020000000620000002902010000000a2700000000000000c90000000000
*0000ca00000000000000cb00000000000000c600000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d400000000000000d500000000000000d600000000000000d70000
*0000000000d800000000000000d900000000000000da00000000000000db00000000000000dc00
*000000000000dd00000000000000de00000000000000df00000000000000e000000000000000e1
*00000000000000e200000000000000e30000000000000051000000000000005200000000000000
*540000000000000055000000000000005600000000000000570000000000000058000000000000
*0059000000000000005a000000000000005b000000000000005c09000000000000005a00000000
*0000005b000000000000005c000000000000005700000000000000580000000000000059000000
*000000005400000000000000550000000000000056000000000000000000000000000000100001
*08000000700000006f000000720000007400000061000000620000006c00000065010c00000065
*00000078000000700000006500000072000000690000006d000000650000006e00000074000000
*610000006c01150000006c00000069000000620000007200000061000000720000006900000065
*00000073000000400000006800000061000000730000006b000000650000006c0000006c000000
*2e0000006f0000007200000067002900000000000000c900000000000000ca00000000000000cb
*00000000000000c600000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000d500000000000000d600000000000000d700000000000000d80000000000
*0000d900000000000000da00000000000000db00000000000000dc00000000000000dd00000000
*000000de00000000000000df00000000000000e000000000000000e100000000000000e2000000
*00000000e300000000000000510000000000000052000000000000005300000000000000540000
*000000000055000000000000005600000000000000570000000000000058000000000000005900
*0000000000005a000000000000005b000000000000005c000000000000005d0100000000000000
*5d0000000000000000000000000000001100011e000000700000006f0000007200000074000000
*61000000620000006c000000650000002000000028000000690000006e00000073000000740000
*00610000006e000000630000006500000073000000200000007500000073000000650000002000
*00004d0000005000000054000000430000007300000029010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0115000000
*6c0000006900000062000000720000006100000072000000690000006500000073000000400000
*006800000061000000730000006b000000650000006c0000006c0000002e0000006f0000007200
*00006702000000000000005e0b021f00000061000000200000002a000000200000002800000062
*000000200000002b000000200000006300000029000000200000003d0000002000000028000000
*61000000200000002a000000200000006200000029000000200000002b00000020000000280000
*0061000000200000002a000000200000006300000029000000000000005f0b021f000000280000
*0061000000200000002b000000200000006200000029000000200000002a000000200000006300
*0000200000003d000000200000002800000061000000200000002a000000200000006300000029
*000000200000002b000000200000002800000062000000200000002a0000002000000063000000
*292900000000000000c900000000000000ca00000000000000cb00000000000000c60000000000
*0000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000
*000000d100000000000000d200000000000000d300000000000000d400000000000000d5000000
*00000000d600000000000000d700000000000000d800000000000000d900000000000000da0000
*0000000000db00000000000000dc00000000000000dd00000000000000de00000000000000df00
*000000000000e000000000000000e100000000000000e200000000000000e30000000000000051
*000000000000005200000000000000540000000000000055000000000000005600000000000000
*5700000000000000580000000000000059000000000000005a000000000000005b000000000000
*005c000000000000005e000000000000005f02000000000000005e000000000000005f00000000
*0000000000000000000000120001140000006e0000006f0000006e0000002d000000700000006f
*000000720000007400000061000000620000006c0000006500000020000000280000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c01150000006c0000006900
*000062000000720000006100000072000000690000006500000073000000400000006800000061
*000000730000006b000000650000006c0000006c0000002e0000006f0000007200000067010000
*000000000060030102020000004100000020010401000000000000000060000000000000000000
*0000000000001201021800000020000000690000007300000020000000610000006e0000002000
*0000690000006e0000007300000074000000610000006e0000006300000065000000200000006f
*0000006600000020000000620000006f0000007400000068000000200104010000000000000000
*5a0000000000000000000000000000000f01020500000020000000610000006e00000064000000
*200104010000000000000000c60000000000000024000000000000002501020800000020000000
*7700000068000000650000007200000065000000200000000a0102030000002000000020000000
*2001040100000000000000005c0000000000000000000000000000000f01021200000020000000
*640000006900000073000000740000007200000069000000620000007500000074000000650000
*0073000000200000006f0000007600000065000000720000002001040100000000000000005100
*00000000000000000000000000000d02020000002e0000000a2a00000000000000c90000000000
*0000ca00000000000000cb00000000000000c600000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d400000000000000d500000000000000d600000000000000d70000
*0000000000d800000000000000d900000000000000da00000000000000db00000000000000dc00
*000000000000dd00000000000000de00000000000000df00000000000000e000000000000000e1
*00000000000000e200000000000000e30000000000000051000000000000005200000000000000
*540000000000000055000000000000005600000000000000570000000000000058000000000000
*0059000000000000005a000000000000005b000000000000005c000000000000005e0000000000
*00005f000000000000006001000000000000006000000000000000000000000000000013000000
*000400000000000000610301020400000054000000680000006500000020010401000000000000
*0000c6000000000000002400000000000000250102010000002001070102010000002801040100
*00000000000000f00000000000000024000000000000002f0102010000002c0104010000000000
*000000f100000000000000240000000000000026020100000029010206000000200000006f0000
*007600000065000000720000002001070104010000000000000000c70000000000000024000000
*000000002602020000002000000061010207000000200000007700000068000000650000007200
*000065000000200104010000000000000000f10000000000000024000000000000002602140000
*002000000069000000730000002000000074000000680000006500000020000000740000006f00
*00007000000020000000650000006c000000650000006d000000650000006e000000740000000a
*000000000000006403010204000000540000006800000065000000200104010000000000000000
*c60000000000000024000000000000002501020100000020010701020100000028010401000000
*0000000000f20000000000000024000000000000002f0102010000002c01040100000000000000
*00f100000000000000240000000000000026020100000029010206000000200000006f00000076
*00000065000000720000002001070104010000000000000000c700000000000000240000000000
*000026020200000020000000610102070000002000000077000000680000006500000072000000
*65000000200104010000000000000000f100000000000000240000000000000026021700000020
*00000069000000730000002000000074000000680000006500000020000000620000006f000000
*74000000740000006f0000006d00000020000000650000006c000000650000006d000000650000
*006e000000740000000a0000000000000067030102040000005400000068000000650000002001
*04010000000000000000c60000000000000024000000000000002501020a000000200000006700
*00006900000076000000650000006e000000200000006200000079000000200107010201000000
*280104010000000000000000f00000000000000024000000000000002f0102010000002c010401
*0000000000000000f30000000000000024000000000000003002010000002902010000000a0000
*00000000006a03010204000000540000006800000065000000200104010000000000000000c600
*000000000000240000000000000025010201000000200107010201000000280104010000000000
*000000f20000000000000024000000000000002f0102010000002c0104010000000000000000f4
*0000000000000024000000000000003002010000002902010000000a1300000000000000c90000
*0000000000cb00000000000000c600000000000000000000000000000001000000000000006100
*000000000000620000000000000063000000000000006400000000000000650000000000000066
*000000000000006700000000000000680000000000000069000000000000006a00000000000000
*6b000000000000006c000000000000006d000000000000006e0e000000000000006a0000000000
*00006b000000000000006c00000000000000670000000000000068000000000000006900000000
*0000006400000000000000650000000000000066000000000000006d0000000000000061000000
*00000000620000000000000063000000000000006e000000000000000000000000000000140000
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c0110000000650000006b0000006d0000006500000074000000740000
*0040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d02
*000000000000006f03010202000000410000002001040100000000000000006000000000000000
*00000000000000001201020c000000200000007700000068000000690000006300000068000000
*2000000061000000640000006400000073000000200104010000000000000000f4000000000000
*0024000000000000003001020500000020000000610000006e0000006400000020010401000000
*0000000000f300000000000000240000000000000030021900000020000000740000006f000000
*2000000061000000200000007000000072000000650000002d0000006500000078000000690000
*007300000074000000690000006e00000067000000200000007400000079000000700000006500
*00002e0000000a0000000000000073030102020000004100000020010401000000000000000060
*0000000000000000000000000000001201020d000000200000007500000073000000690000006e
*000000670000002000000061000000200000007400000079000000700000006501020100000027
*021d00000073000000200000006200000075000000690000006c000000740000002d0000006900
*00006e00000020000000420000006f000000750000006e00000064000000650000006400000020
*000000690000006e0000007300000074000000610000006e00000063000000650000002e000000
*0a3100000000000000c900000000000000ca00000000000000cb00000000000000c60000000000
*0000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000
*000000d100000000000000d200000000000000d300000000000000d400000000000000d5000000
*00000000d600000000000000d700000000000000d800000000000000d900000000000000da0000
*0000000000db00000000000000dc00000000000000dd00000000000000de00000000000000df00
*000000000000e000000000000000e100000000000000e200000000000000e30000000000000051
*000000000000005200000000000000540000000000000055000000000000005600000000000000
*5700000000000000580000000000000059000000000000005a000000000000005b000000000000
*005c000000000000005e000000000000005f0000000000000060000000000000006f0000000000
*000070000000000000007100000000000000720000000000000073000000000000007400000000
*0000007507000000000000007300000000000000740000000000000075000000000000006f0000
*000000000072000000000000007100000000000000700000000000000000000000000000001500
*000000010000000000000076010301020400000054000000680000006500000020010401000000
*000000000060000000000000000000000000000000120102010000002001070102010000002801
*04010000000000000000f00000000000000024000000000000002f0102010000002c0104010000
*000000000000f50000000000000024000000000000003002010000002901020600000020000000
*6f0000007600000065000000720000002001070102010000006101020f00000020000000650000
*007800000074000000650000006e00000064000000650000006400000020000000770000006900
*000074000000680000002004010000000000000000790000000000000000000000000000001501
*02020000002e0000000a0102080000002000000020000000200000005700000068000000650000
*006e00000020010702010000006101024800000020000000680000006100000073000000200000
*0061000000200000004e000000750000006d00000020000000690000006e000000730000007400
*0000610000006e0000006300000065000000200000007700000069000000740000006800000020
*000000610000006e00000020000000610000006400000064000000690000007400000069000000
*6f0000006e00000020000000740000006800000061000000740000002000000072000000650000
*00730000007000000065000000630000007400000073000000200000006f000000720000006400
*000065000000720000002c000000200000007400000068000000650000006e0000002000000074
*000000680000006900000073000000200000006900000073000000200000000a01025300000020
*00000020000000200000007400000072000000610000006e00000073000000660000006f000000
*720000006d000000650000006400000020000000690000006e000000740000006f000000200000
*00610000002000000074000000720000006f000000700000006900000063000000610000006c00
*00002000000073000000650000006d0000006900000072000000690000006e000000670000002e
*000000200000004900000074000000200000006900000073000000200000006100000073000000
*73000000750000006d000000650000006400000020000000740000006800000061000000740000
*002000000030000000200000006900000073000000200000007400000068000000650000002000
*00006c0000006500000061000000730000007400000020000000650000006c000000650000006d
*000000650000006e000000740000000a02090000002000000020000000200000006f0000006600
*000020000000610000002e0000000a03010c41000000680000007400000074000000700000003a
*0000002f0000002f00000068000000610000006c0000002e000000610000007200000063000000
*68000000690000007600000065000000730000002d0000006f0000007500000076000000650000
*00720000007400000065000000730000002e00000066000000720000002f000000640000006f00
*000063000000730000002f00000030000000300000002f00000031000000310000002f00000033
*000000370000002f00000037000000390000002f0000005000000044000000460000002f000000
*54000000720000006f000000700000006900000063000000610000006c0000002e000000700000
*00640000006602010000000a3000000000000000c900000000000000ca00000000000000cb0000
*0000000000c600000000000000cc00000000000000cd00000000000000ce00000000000000cf00
*000000000000d000000000000000d100000000000000d200000000000000d300000000000000d4
*00000000000000d500000000000000d600000000000000d700000000000000d800000000000000
*d900000000000000da00000000000000db00000000000000dc00000000000000dd000000000000
*00de00000000000000df00000000000000e000000000000000e100000000000000e20000000000
*0000e3000000000000000000000000000000010000000000000051000000000000005200000000
*000000540000000000000055000000000000005600000000000000570000000000000058000000
*0000000059000000000000005a000000000000005b000000000000005c000000000000005e0000
*00000000005f000000000000006000000000000000760000000000000077000000000000007800
*000000000000790400000000000000790000000000000076000000000000007700000000000000
*7800000000000000000000000000000031000108000000700000006f0000007200000074000000
*61000000620000006c00000065010c000000650000007800000070000000650000007200000069
*0000006d000000650000006e00000074000000610000006c01150000006c000000690000006200
*000072000000610000007200000069000000650000007300000040000000680000006100000073
*0000006b000000650000006c0000006c0000002e0000006f0000007200000067002b0000000000
*0000c900000000000000ca00000000000000cb00000000000000c600000000000000cc00000000
*000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1000000
*00000000d200000000000000d300000000000000d400000000000000d500000000000000d60000
*0000000000d700000000000000d800000000000000d900000000000000da00000000000000db00
*000000000000dc00000000000000dd00000000000000de00000000000000df00000000000000e0
*00000000000000e100000000000000e200000000000000e3000000000000005100000000000000
*520000000000000053000000000000005400000000000000550000000000000056000000000000
*005700000000000000580000000000000059000000000000005a000000000000005b0000000000
*00005c000000000000005d000000000000005e000000000000005f000000000000000000000000
*0000000016000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c011f00000045000000640000007700000061000000720000006400
*0000200000004b0000006d000000650000007400000074000000200000003c000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d0000003e01000000000000007a0301021d0000004d00
*0000690000006e000000690000006d000000610000006c00000020000000630000006f0000006d
*000000700000006c00000065000000740000006500000020000000640000006500000066000000
*690000006e0000006900000074000000690000006f0000006e0000003a00000020010401000000
*00000000007b00000000000000000000000000000016010204000000200000006f000000720000
*002001040100000000000000007c0000000000000000000000000000001602010000000a220000
*0000000000c900000000000000ca00000000000000cb00000000000000c600000000000000cc00
*000000000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1
*00000000000000d200000000000000d300000000000000d400000000000000d500000000000000
*d600000000000000d700000000000000d800000000000000d900000000000000da000000000000
*00db00000000000000dc00000000000000dd00000000000000de00000000000000df0000000000
*0000e000000000000000e100000000000000e200000000000000e3000000000000005100000000
*00000052000000000000007a000000000000007b000000000000007c000000000000007d040000
*00000000007a000000000000007b000000000000007d000000000000007c000000000000000000
*00000000000017000108000000700000006f000000720000007400000061000000620000006c00
*000065010c0000006500000078000000700000006500000072000000690000006d000000650000
*006e00000074000000610000006c01150000006c00000069000000620000007200000061000000
*72000000690000006500000073000000400000006800000061000000730000006b000000650000
*006c0000006c0000002e0000006f0000007200000067002400000000000000c900000000000000
*ca00000000000000cb00000000000000c600000000000000cc00000000000000cd000000000000
*00ce00000000000000cf00000000000000d000000000000000d100000000000000d20000000000
*0000d300000000000000d400000000000000d500000000000000d600000000000000d700000000
*000000d800000000000000d900000000000000da00000000000000db00000000000000dc000000
*00000000dd00000000000000de00000000000000df00000000000000e000000000000000e10000
*0000000000e200000000000000e300000000000000510000000000000052000000000000007a00
*0000000000007b000000000000007c000000000000007d000000000000007e000000000000007f
*02000000000000007e000000000000007f00000000000000000000000000000018000108000000
*700000006f000000720000007400000061000000620000006c00000065010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c01150000006c0000006900000062000000720000006100000072000000690000006500000073
*000000400000006800000061000000730000006b000000650000006c0000006c0000002e000000
*6f0000007200000067002600000000000000c900000000000000ca00000000000000cb00000000
*000000c600000000000000cc00000000000000cd00000000000000ce00000000000000cf000000
*00000000d000000000000000d100000000000000d200000000000000d300000000000000d40000
*0000000000d500000000000000d600000000000000d700000000000000d800000000000000d900
*000000000000da00000000000000db00000000000000dc00000000000000dd00000000000000de
*00000000000000df00000000000000e000000000000000e100000000000000e200000000000000
*e3000000000000005100000000000000520000000000000053000000000000007a000000000000
*007b000000000000007c000000000000007d000000000000008000000000000000810000000000
*000082030000000000000080000000000000008100000000000000820000000000000000000000
*000000001900000000002f00000000000000c900000000000000ca00000000000000cb00000000
*000000c600000000000000cc00000000000000cd00000000000000ce00000000000000cf000000
*00000000d000000000000000d100000000000000d200000000000000d300000000000000d40000
*0000000000d500000000000000d600000000000000d700000000000000d800000000000000d900
*000000000000da00000000000000db00000000000000dc00000000000000dd00000000000000de
*00000000000000df00000000000000e000000000000000e100000000000000e200000000000000
*e30000000000000051000000000000005200000000000000540000000000000055000000000000
*0056000000000000005700000000000000580000000000000059000000000000005a0000000000
*00005b000000000000005c000000000000005e000000000000005f000000000000006000000000
*0000007a000000000000007b000000000000007c000000000000007d0000000000000083010000
*0000000000830000000000000000000000000000001a0001140000006e0000006f0000006e0000
*002d000000700000006f000000720000007400000061000000620000006c000000650000002000
*0000280000004d0000005000000054000000430000007300000029010c00000065000000780000
*00700000006500000072000000690000006d000000650000006e00000074000000610000006c01
*150000006c00000069000000620000007200000061000000720000006900000065000000730000
*00400000006800000061000000730000006b000000650000006c0000006c0000002e0000006f00
*00007200000067003200000000000000c900000000000000ca00000000000000cb000000000000
*00c600000000000000cc00000000000000cd00000000000000ce00000000000000cf0000000000
*0000d000000000000000d100000000000000d200000000000000d300000000000000d400000000
*000000d500000000000000d600000000000000d700000000000000d800000000000000d9000000
*00000000da00000000000000db00000000000000dc00000000000000dd00000000000000de0000
*0000000000df00000000000000e000000000000000e100000000000000e200000000000000e300
*000000000000510000000000000052000000000000005400000000000000550000000000000056
*000000000000005700000000000000580000000000000059000000000000005a00000000000000
*5b000000000000005c000000000000005e000000000000005f0000000000000060000000000000
*007a000000000000007b000000000000007c000000000000007d00000000000000830000000000
*000084000000000000008500000000000000860300000000000000840000000000000085000000
*00000000860000000000000000000000000000001b0001140000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000004d0000005000000054000000430000007300000029010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c0115
*0000006c0000006900000062000000720000006100000072000000690000006500000073000000
*400000006800000061000000730000006b000000650000006c0000006c0000002e0000006f0000
*007200000067003200000000000000c900000000000000ca00000000000000cb00000000000000
*c600000000000000cc00000000000000cd00000000000000ce00000000000000cf000000000000
*00d000000000000000d100000000000000d200000000000000d300000000000000d40000000000
*0000d500000000000000d600000000000000d700000000000000d800000000000000d900000000
*000000da00000000000000db00000000000000dc00000000000000dd00000000000000de000000
*00000000df00000000000000e000000000000000e100000000000000e200000000000000e30000
*000000000051000000000000005200000000000000540000000000000055000000000000005600
*0000000000005700000000000000580000000000000059000000000000005a000000000000005b
*000000000000005c000000000000005e000000000000005f000000000000006000000000000000
*7a000000000000007b000000000000007c000000000000007d0000000000000083000000000000
*008700000000000000880000000000000089030000000000000087000000000000008800000000
*000000890000000000000000000000000000001c0001140000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*280000004d0000005000000054000000430000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011500
*00006c000000690000006200000072000000610000007200000069000000650000007300000040
*0000006800000061000000730000006b000000650000006c0000006c0000002e0000006f000000
*720000006703000000000000008a0b021e000000200000002800000078000000200000002a0000
*002e000000200000006d00000029000000200000002e0000002a00000020000000790000002000
*00003d0000002000000078000000200000002a0000002e00000020000000280000006d00000020
*0000002e0000002a000000200000007900000029000000000000008b0b021c0000002000000028
*0000006d000000200000002e0000002a000000200000007800000029000000200000002a000000
*2000000079000000200000003d000000200000006d000000200000002e0000002a000000200000
*002800000078000000200000002a000000200000007900000029000000000000008d0b021c0000
*00200000002800000078000000200000002a000000200000007900000029000000200000002a00
*00002e000000200000006d000000200000003d0000002000000078000000200000002a00000020
*0000002800000079000000200000002a0000002e000000200000006d0000002934000000000000
*00c900000000000000ca00000000000000cb00000000000000c600000000000000cc0000000000
*0000cd00000000000000ce00000000000000cf00000000000000d000000000000000d100000000
*000000d200000000000000d300000000000000d400000000000000d500000000000000d6000000
*00000000d700000000000000d800000000000000d900000000000000da00000000000000db0000
*0000000000dc00000000000000dd00000000000000de00000000000000df00000000000000e000
*000000000000e100000000000000e200000000000000e300000000000000510000000000000052
*000000000000005400000000000000550000000000000056000000000000005700000000000000
*580000000000000059000000000000005a000000000000005b000000000000005c000000000000
*005e000000000000005f0000000000000060000000000000007a000000000000007b0000000000
*00007c000000000000007d0000000000000083000000000000008a000000000000008b00000000
*0000008c000000000000008d000000000000008e05000000000000008d000000000000008e0000
*00000000008b000000000000008c000000000000008a0000000000000000000000000000001d00
*01140000006e0000006f0000006e0000002d000000700000006f00000072000000740000006100
*0000620000006c0000006500000020000000280000004d00000050000000540000004300000073
*00000029010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c01150000006c000000690000006200000072000000610000
*0072000000690000006500000073000000400000006800000061000000730000006b0000006500
*00006c0000006c0000002e0000006f000000720000006704000000000000008f03010203000000
*690000006600000020010702010000006d01020600000020000000690000007300000020000000
*610000002001040100000000000000008a0000000000000000000000000000001c010205000000
*20000000610000006e000000640000002001070201000000660102060000002000000069000000
*730000002000000061000000200104010000000000000000f60000000000000024000000000000
*0032010206000000200000007400000068000000650000006e0000002001070102020000006600
*0000200104020000000000000000900000000000000000000000000000001d0000000000000000
*8f0000000000000000000000000000001d0202000000200000006d010206000000200000006900
*00007300000020000000610000002001040100000000000000008a000000000000000000000000
*0000001c02090000002000000061000000730000002000000077000000650000006c0000006c00
*00000a000000000000009203010202000000410000002001040200000000000000009300000000
*00000000000000000000001d0000000000000000920000000000000000000000000000001d0102
*0b000000200000007400000075000000720000006e0000007300000020000000610000006e0000
*0079000000200104010000000000000000f7000000000000002400000000000000320102110000
*0020000000690000006e0000007300000074000000610000006e00000063000000650000002000
*0000690000006e000000740000006f0000002000000061000000200104010000000000000000c6
*000000000000002400000000000000250102020000002e0000000a010216000000200000002000
*000020000000490000007400000020000000610000006c000000730000006f0000002000000070
*000000720000006f00000076000000690000006400000065000000730000002000000061000000
*2001040100000000000000005a0000000000000000000000000000000f01021100000020000000
*690000006e0000007300000074000000610000006e000000630000006500000020000000660000
*006f0000007200000020000000610000006e000000200104010000000000000000f60000000000
*000024000000000000003201021a0000002000000066000000750000006e000000630000007400
*00006f000000720000002000000077000000720000006100000070000000700000006500000064
*0000002000000061000000720000006f000000750000006e000000640000002000000061000000
*200104010000000000000000c6000000000000002400000000000000250102010000000a010218
*000000200000002000000020000000610000006e00000064000000200000006100000073000000
*730000006500000072000000740000007300000020000000740000006800000061000000740000
*0020000000610000006e00000079000000200104010000000000000000f7000000000000002400
*0000000000003201020e000000200000006100000070000000700000006c000000690000006500
*00006400000020000000740000006f0000002000000061000000200104010000000000000000c6
*0000000000000024000000000000002501020900000020000000660000006f000000720000006d
*0000007300000020000000610000002001040100000000000000005e0000000000000000000000
*0000000011010202000000200000000a021b000000200000002000000020000000750000006e00
*000064000000650000007200000020000000740000006800000065000000730000006500000020
*0000006f0000007000000065000000720000006100000074000000690000006f0000006e000000
*730000002e0000000a000000000000009503010202000000410000002001040200000000000000
*00960000000000000000000000000000001d000000000000000095000000000000000000000000
*0000001d010218000000200000007500000073000000650000007300000020000000610000006e
*00000020000000670000006c00000075000000650000007300000020000000740000006f000000
*670000006500000074000000680000006500000072000000200104010000000000000000f60000
*000000000024000000000000003201021300000020000000610000006300000074000000690000
*006f0000006e000000730000002000000077000000690000007400000068000000200000002800
*00002a0000003e000000290000000a010214000000200000002000000020000000690000006e00
*000020000000740000006800000065000000200000006d000000610000006e0000006e00000065
*00000072000000200000006f000000660000002001020900000074000000720000006100000076
*000000650000007200000073000000650000005f0102060000002000000066000000720000006f
*0000006d0000002001050d000000440000006100000074000000610000002e000000460000006f
*0000006c0000006400000061000000620000006c0000006501021a0000002e0000002000000041
*0000006e000000790000002000000076000000610000006c000000750000006500000073000000
*2000000072000000650000007400000075000000720000006e0000006500000064000000200000
*006200000079000000200000000a02220000002000000020000000200000007200000065000000
*640000007500000063000000650000006400000020000000610000006300000074000000690000
*006f0000006e000000730000002000000061000000720000006500000020000000640000006900
*0000730000006300000061000000720000006400000065000000640000002e0000000a00000000
*000000980301023200000045000000660000006600000069000000630000006900000065000000
*6e000000740000006c000000790000002000000061000000760000006f00000069000000640000
*00200000006e0000006500000065000000640000006c0000006500000073000000730000006c00
*00007900000020000000720000006500000062000000690000006e00000064000000690000006e
*00000067000000200000007700000068000000650000006e000000200000007500000073000000
*690000006e00000067000000200104010000000000000000020000000000000000000000000000
*0001010226000000200000006f0000006e00000020000000610000006e00000020000000610000
*006300000074000000690000006f0000006e000000200000007400000068000000610000007400
*000020000000610000006c00000072000000650000006100000064000000790000002000000072
*000000650000007400000075000000720000006e00000073000000200000002800000029000000
*0a023b000000200000002000000020000000410000002000000072000000650000007700000072
*0000006900000074000000650000002000000072000000750000006c0000006500000020000000
*6100000075000000740000006f0000006d00000061000000740000006900000063000000610000
*006c0000006c00000079000000200000006100000070000000700000006c000000690000006500
*000073000000200000007400000068000000690000007300000020000000770000006800000065
*0000006e00000020000000700000006f000000730000007300000069000000620000006c000000
*650000000a4600000000000000c900000000000000ca00000000000000cb00000000000000c600
*000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0
*00000000000000d100000000000000d200000000000000d300000000000000d400000000000000
*d500000000000000d600000000000000d700000000000000d800000000000000d9000000000000
*00da00000000000000db00000000000000dc00000000000000dd00000000000000de0000000000
*0000df00000000000000e000000000000000e100000000000000e200000000000000e300000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000005100000000000000520000
*000000000054000000000000005500000000000000560000000000000057000000000000005800
*00000000000059000000000000005a000000000000005b000000000000005c000000000000005e
*000000000000005f0000000000000060000000000000007a000000000000007b00000000000000
*7c000000000000007d0000000000000083000000000000008a000000000000008b000000000000
*008c000000000000008d000000000000008e000000000000008f00000000000000900000000000
*000091000000000000009200000000000000930000000000000094000000000000009500000000
*00000096000000000000009700000000000000980a000000000000009500000000000000960000
*000000000097000000000000009200000000000000930000000000000094000000000000008f00
*00000000000090000000000000009100000000000000980000000000000000000000000000001e
*0001140000006e0000006f0000006e0000002d000000700000006f000000720000007400000061
*000000620000006c0000006500000020000000280000004d000000500000005400000043000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c01150000006c0000006900000062000000720000006100
*000072000000690000006500000073000000400000006800000061000000730000006b00000065
*0000006c0000006c0000002e0000006f0000007200000067040000000000000099030102030000
*00690000006600000020010702010000006d010206000000200000006900000073000000200000
*00610000002001040100000000000000008a0000000000000000000000000000001c0102060000
*00200000006f000000760000006500000072000000200107020100000072010205000000200000
*00610000006e000000640000002001070201000000660102060000002000000069000000730000
*002000000061000000200104010000000000000000f80000000000000024000000000000003301
*0206000000200000007400000068000000650000006e0000002001070102020000006600000020
*01040200000000000000009a0000000000000000000000000000001e0000000000000000990000
*000000000000000000000000001e0202000000200000006d010206000000200000006900000073
*00000020000000610000002001040100000000000000008a000000000000000000000000000000
*1c02090000002000000061000000730000002000000077000000650000006c0000006c0000000a
*000000000000009c03010202000000410000002001040200000000000000009d00000000000000
*00000000000000001e00000000000000009c0000000000000000000000000000001e01020b0000
*00200000007400000075000000720000006e0000007300000020000000610000006e0000007900
*0000200104010000000000000000f9000000000000002400000000000000330102110000002000
*0000690000006e0000007300000074000000610000006e00000063000000650000002000000069
*0000006e000000740000006f0000002000000061000000200104010000000000000000c6000000
*000000002400000000000000250102020000002e0000000a010216000000200000002000000020
*000000490000007400000020000000610000006c000000730000006f0000002000000070000000
*720000006f00000076000000690000006400000065000000730000002000000061000000200104
*0100000000000000005a0000000000000000000000000000000f01021000000020000000690000
*006e0000007300000074000000610000006e000000630000006500000020000000660000006f00
*0000720000002000000061000000200104010000000000000000f8000000000000002400000000
*000000330102120000002000000077000000720000006100000070000000700000006500000064
*0000002000000061000000720000006f000000750000006e000000640000002000000061000000
*200104010000000000000000c6000000000000002400000000000000250102010000000a010218
*000000200000002000000020000000610000006e00000064000000200000006100000073000000
*730000006500000072000000740000007300000020000000740000006800000061000000740000
*0020000000610000006e00000079000000200104010000000000000000f9000000000000002400
*0000000000003301020e000000200000006100000070000000700000006c000000690000006500
*00006400000020000000740000006f0000002000000061000000200104010000000000000000c6
*0000000000000024000000000000002501020900000020000000660000006f000000720000006d
*0000007300000020000000610000002001040100000000000000005e0000000000000000000000
*0000000011010202000000200000000a021b000000200000002000000020000000750000006e00
*000064000000650000007200000020000000740000006800000065000000730000006500000020
*0000006f0000007000000065000000720000006100000074000000690000006f0000006e000000
*730000002e0000000a000000000000009f03010203000000410000006e00000020010402000000
*0000000000a00000000000000000000000000000001e00000000000000009f0000000000000000
*000000000000001e01021500000020000000750000007300000065000000730000002000000067
*0000006c00000075000000650000007300000020000000740000006f0000006700000065000000
*74000000680000006500000072000000200104010000000000000000f800000000000000240000
*00000000003301021300000020000000610000006300000074000000690000006f0000006e0000
*0073000000200000007700000069000000740000006800000020000000280000003e0000003e00
*0000290000000a010214000000200000002000000020000000690000006e000000200000007400
*00006800000065000000200000006d000000610000006e0000006e000000650000007200000020
*0000006f00000066000000200104010000000000000000fa000000000000002400000000000000
*330102060000002000000066000000720000006f0000006d0000002001050d0000004400000061
*00000074000000610000002e000000460000006f0000006c000000640000006100000062000000
*6c0000006501021a0000002e00000020000000410000006e000000790000002000000076000000
*610000006c00000075000000650000007300000020000000720000006500000074000000750000
*00720000006e0000006500000064000000200000006200000079000000200000000a0222000000
*200000002000000020000000720000006500000064000000750000006300000065000000640000
*0020000000610000006300000074000000690000006f0000006e00000073000000200000006100
*000072000000650000002000000064000000690000007300000063000000610000007200000064
*00000065000000640000002e0000000a00000000000000a2030102320000004500000066000000
*66000000690000006300000069000000650000006e000000740000006c00000079000000200000
*0061000000760000006f0000006900000064000000200000006e00000065000000650000006400
*00006c0000006500000073000000730000006c0000007900000020000000720000006500000062
*000000690000006e00000064000000690000006e00000067000000200000007700000068000000
*650000006e000000200000007500000073000000690000006e0000006700000020010401000000
*00000000000200000000000000000000000000000001010226000000200000006f0000006e0000
*0020000000610000006e00000020000000610000006300000074000000690000006f0000006e00
*0000200000007400000068000000610000007400000020000000610000006c0000007200000065
*000000610000006400000079000000200000007200000065000000740000007500000072000000
*6e000000730000002000000028000000290000000a023b00000020000000200000002000000041
*000000200000007200000065000000770000007200000069000000740000006500000020000000
*72000000750000006c00000065000000200000006100000075000000740000006f0000006d0000
*0061000000740000006900000063000000610000006c0000006c00000079000000200000006100
*000070000000700000006c00000069000000650000007300000020000000740000006800000069
*00000073000000200000007700000068000000650000006e00000020000000700000006f000000
*730000007300000069000000620000006c000000650000000a3b00000000000000c90000000000
*0000ca00000000000000cb00000000000000c600000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d400000000000000d500000000000000d600000000000000d70000
*0000000000d800000000000000d900000000000000da00000000000000db00000000000000dc00
*000000000000dd00000000000000de00000000000000df00000000000000e000000000000000e1
*00000000000000e200000000000000e30000000000000000000000000000000100000000000000
*020000000000000003000000000000000400000000000000050000000000000006000000000000
*000700000000000000510000000000000052000000000000005400000000000000550000000000
*000056000000000000005700000000000000580000000000000059000000000000005a00000000
*0000005b000000000000005c000000000000005e000000000000005f0000000000000099000000
*000000009a000000000000009b000000000000009c000000000000009d000000000000009e0000
*00000000009f00000000000000a000000000000000a100000000000000a20a000000000000009f
*00000000000000a000000000000000a100000000000000a2000000000000009900000000000000
*9a000000000000009b000000000000009c000000000000009d000000000000009e000000000000
*0000000000000000001f0001230000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c000000650000002000000028000000740000007900
*000070000000650000002000000066000000610000006d000000690000006c0000006900000065
*000000730000002c000000200000004d0000005000000054000000430000007300000029010c00
*00006500000078000000700000006500000072000000690000006d000000650000006e00000074
*000000610000006c01150000006c00000069000000620000007200000061000000720000006900
*00006500000073000000400000006800000061000000730000006b000000650000006c0000006c
*0000002e0000006f00000072000000671500000000000000a30301020c00000045000000660000
*0066000000690000006300000069000000650000006e000000740000006c000000790000002001
*040100000000000000002700000000000000000000000000000006010203000000200000006100
*0000200104010000000000000000250000000000000000000000000000000601020b0000002000
*00007500000073000000690000006e000000670000002000000074000000680000006500000020
*0104020000000000000000960000000000000000000000000000001d0000000000000000950000
*000000000000000000000000001d010232000000200000006d0000006f0000006e0000006f0000
*0069000000640000002e0000002000000041000000200000007300000070000000650000006300
*000069000000610000006c000000690000007a0000006500000064000000200000007600000065
*0000007200000073000000690000006f0000006e000000200000006f0000006600000020000000
*690000007400000073000000200000006e000000610000006d0000006500000073000000610000
*006b0000006500000020000000690000006e0000002001050d0000004400000061000000740000
*00610000002e000000460000006f0000006c0000006400000061000000620000006c0000006502
*010000000a00000000000000a403010208000000660000006c0000006900000070000000700000
*006500000064000000200104010000000000000000a30000000000000000000000000000001f01
*020700000020000000610000007300000020000000690000006e0000002001050d000000440000
*006100000074000000610000002e000000460000006f0000006c00000064000000610000006200
*00006c0000006502010000000a00000000000000a50301020c0000004500000066000000660000
*00690000006300000069000000650000006e000000740000006c00000079000000200104010000
*000000000000270000000000000000000000000000000601020300000020000000610000002001
*04010000000000000000250000000000000000000000000000000601020b000000200000007500
*000073000000690000006e00000067000000200000007400000068000000650000002001040200
*00000000000000a00000000000000000000000000000001e00000000000000009f000000000000
*0000000000000000001e010234000000200000006d0000006f0000006e0000006f000000690000
*00640000002e000000200000004100000020000000730000007000000065000000630000006900
*0000610000006c000000690000007a000000650000006400000020000000760000006500000072
*00000073000000690000006f0000006e000000200000006f000000660000002000000069000000
*7400000073000000200000006e000000610000006d0000006500000073000000610000006b0000
*00650000002000000066000000720000006f0000006d0000002001050d00000044000000610000
*0074000000610000002e000000460000006f0000006c0000006400000061000000620000006c00
*00006501020500000020000000610000006e000000640000002001050d000000430000006f0000
*006e00000074000000720000006f0000006c0000002e0000004d0000006f0000006e0000006100
*00006402010000000a00000000000000a603010208000000660000006c00000069000000700000
*00700000006500000064000000200104010000000000000000a500000000000000000000000000
*00001f01020700000020000000610000007300000020000000690000006e0000002001050d0000
*00440000006100000074000000610000002e000000460000006f0000006c000000640000006100
*0000620000006c0000006501020500000020000000610000006e000000640000002001050d0000
*00430000006f0000006e00000074000000720000006f0000006c0000002e0000004d0000006f00
*00006e000000610000006402010000000a00000000000000a70301020c00000045000000660000
*0066000000690000006300000069000000650000006e000000740000006c000000790000002001
*040100000000000000002700000000000000000000000000000006010203000000200000006100
*0000200104010000000000000000250000000000000000000000000000000601020b0000002000
*00007500000073000000690000006e000000670000002000000074000000680000006500000020
*0104020000000000000000400000000000000000000000000000000900000000000000003f0000
*0000000000000000000000000009010234000000200000006d0000006f0000006e0000006f0000
*0069000000640000002e0000002000000041000000200000007300000070000000650000006300
*000069000000610000006c000000690000007a0000006500000064000000200000007600000065
*0000007200000073000000690000006f0000006e000000200000006f0000006600000020000000
*690000007400000073000000200000006e000000610000006d0000006500000073000000610000
*006b000000650000002000000066000000720000006f0000006d0000002001050d000000440000
*006100000074000000610000002e000000460000006f0000006c00000064000000610000006200
*00006c0000006502010000000a00000000000000a80301021c0000004100000020000000660000
*007500000072000000740000006800000065000000720000002000000073000000700000006500
*00006300000069000000610000006c000000690000007a0000006100000074000000690000006f
*0000006e000000200000006f0000006600000020010507000000660000006f0000006c00000064
*0000004d000000610000007002010000000a00000000000000a90301020c000000450000006600
*000066000000690000006300000069000000650000006e000000740000006c0000007900000020
*01040100000000000000002a000000000000000000000000000000060102030000002000000061
*000000200104010000000000000000250000000000000000000000000000000601020b00000020
*0000007500000073000000690000006e0000006700000020000000740000006800000065000000
*200104020000000000000000400000000000000000000000000000000900000000000000003f00
*000000000000000000000000000009010234000000200000006d0000006f0000006e0000006f00
*000069000000640000002e00000020000000410000002000000073000000700000006500000063
*00000069000000610000006c000000690000007a00000065000000640000002000000076000000
*650000007200000073000000690000006f0000006e000000200000006f00000066000000200000
*00690000007400000073000000200000006e000000610000006d00000065000000730000006100
*00006b000000650000002000000066000000720000006f0000006d0000002001050d0000004400
*00006100000074000000610000002e000000460000006f0000006c000000640000006100000062
*0000006c0000006502010000000a00000000000000aa0301020c000000430000006f0000006e00
*00007600000065000000720000007400000020000000610000006e000000790000002001040100
*000000000000002500000000000000000000000000000006021b00000020000000740000006f00
*00002000000061000000200000006c000000690000007300000074000000200000006f00000066
*0000002000000069000000740000007300000020000000630000006f0000006e00000074000000
*650000006e00000074000000730000000a00000000000000ab0301020c00000045000000660000
*0066000000690000006300000069000000650000006e000000740000006c000000790000002001
*040100000000000000002a00000000000000000000000000000006010203000000200000006100
*0000200104010000000000000000250000000000000000000000000000000601021e0000002000
*00007400000068000000610000007400000020000000630000006f0000006e0000007400000061
*000000690000006e000000730000002000000076000000610000006c0000007500000065000000
*73000000200000006f000000660000002000000074000000790000007000000065000000200104
*010000000000000000fb0000000000000029000000000000003402010000000a00000000000000
*ac0301020c000000450000006600000066000000690000006300000069000000650000006e0000
*00740000006c000000790000002001040100000000000000002a00000000000000000000000000
*000006010203000000200000006100000020010401000000000000000025000000000000000000
*0000000000000601021e0000002000000074000000680000006100000074000000200000006300
*00006f0000006e0000007400000061000000690000006e00000073000000200000007600000061
*0000006c000000750000006500000073000000200000006f000000660000002000000074000000
*790000007000000065000000200104010000000000000000fb0000000000000029000000000000
*003402010000000a00000000000000ad0301020c00000045000000660000006600000069000000
*6300000069000000650000006e000000740000006c000000790000002001040100000000000000
*00270000000000000000000000000000000601020500000020000000610000006e000000790000
*002001040100000000000000002500000000000000000000000000000006024300000020000000
*630000006800000065000000630000006b000000690000006e0000006700000020000000740000
*006f00000020000000730000006500000065000000200000006900000066000000200000006100
*00006e00000079000000200000006f000000660000002000000069000000740000007300000020
*00000076000000610000006c000000750000006500000073000000200000006d00000061000000
*740000006300000068000000200000007400000068000000650000002000000073000000750000
*0070000000700000006c0000006900000065000000640000002000000070000000720000006500
*00006400000069000000630000006100000074000000650000000a00000000000000ae0301020c
*000000450000006600000066000000690000006300000069000000650000006e00000074000000
*6c0000007900000020010401000000000000000027000000000000000000000000000000060102
*0500000020000000610000006e0000007900000020010401000000000000000025000000000000
*00000000000000000006024300000020000000630000006800000065000000630000006b000000
*690000006e0000006700000020000000740000006f000000200000007300000065000000650000
*0020000000690000006600000020000000610000006c0000006c000000200000006f0000006600
*0000200000006900000074000000730000002000000076000000610000006c0000007500000065
*00000073000000200000006d000000610000007400000063000000680000002000000074000000
*680000006500000020000000730000007500000070000000700000006c00000069000000650000
*006400000020000000700000007200000065000000640000006900000063000000610000007400
*0000650000000a00000000000000af0301020c0000004500000066000000660000006900000063
*00000069000000650000006e000000740000006c00000079000000200104010000000000000000
*270000000000000000000000000000000601020500000020000000610000006e00000079000000
*200104010000000000000000250000000000000000000000000000000601020b00000020000000
*7500000073000000690000006e0000006700000020000000740000006800000065000000200104
*020000000000000000d9000000000000002400000000000000250000000000000000da00000000
*000000240000000000000025010201000000200104010000000000000000c60000000000000024
*000000000000002502010000000a00000000000000b00301020c00000045000000660000006600
*0000690000006300000069000000650000006e000000740000006c000000790000002001040100
*00000000000000270000000000000000000000000000000601020500000020000000610000006e
*00000079000000200104010000000000000000250000000000000000000000000000000601020b
*000000200000007500000073000000690000006e00000067000000200000007400000068000000
*65000000200104020000000000000000dc00000000000000240000000000000025000000000000
*0000dd00000000000000240000000000000025010201000000200104010000000000000000c600
*00000000000024000000000000002502010000000a00000000000000b103010210000000430000
*006800000065000000630000006b00000020000000740000006f00000020000000730000006500
*000065000000200000006900000066000000200104010000000000000000ad0000000000000000
*000000000000001f01020f000000200000006d000000650000006d000000620000006500000072
*000000200000006f00000066000000200000007400000068000000650000002001040100000000
*000000002500000000000000000000000000000006021c000000200000006d0000006100000074
*000000630000006800000065000000730000002000000074000000680000006500000020000000
*730000007500000070000000700000006c00000069000000650000006400000020000000760000
*00610000006c00000075000000650000000a00000000000000b203010242000000430000006800
*000065000000630000006b00000020000000740000006f000000200000006d000000610000006b
*000000650000002000000073000000750000007200000065000000200000007400000068000000
*610000007400000020000000740000006800000065000000200000007300000075000000700000
*00700000006c0000006900000065000000640000002000000076000000610000006c0000007500
*000065000000200000006900000073000000200000006e0000006f000000740000002000000061
*000000200000006d000000650000006d000000620000006500000072000000200000006f000000
*660000002000000074000000680000006500000020010401000000000000000025000000000000
*0000000000000000000602010000000a00000000000000b30301020c0000004500000066000000
*66000000690000006300000069000000650000006e000000740000006c00000079000000200104
*010000000000000000270000000000000000000000000000000601021f00000020000000610000
*0020000000730000007500000062000000730000006500000074000000200000006f0000006600
*00002000000074000000680000006500000020000000650000006c000000650000006d00000065
*0000006e000000740000007300000020000000690000006e000000200000006100000020010401
*0000000000000000250000000000000000000000000000000602010000000a00000000000000b4
*030102140000004100000020000000730000007000000065000000630000006900000061000000
*6c000000690000007a0000006100000074000000690000006f0000006e000000200000006f0000
*0066000000200104010000000000000000b30000000000000000000000000000001f01020b0000
*00200000007500000073000000690000006e000000670000002000000074000000680000006500
*0000200104020000000000000000df000000000000002400000000000000250000000000000000
*e000000000000000240000000000000025010201000000200104010000000000000000c6000000
*0000000024000000000000002501020f0000002c00000020000000610000006e00000061000000
*6c0000006f000000670000006f000000750000007300000020000000740000006f000000200102
*0e000000440000006100000074000000610000002e0000004c0000006900000073000000740000
*002e00000066000000690000006e0000006402010000000a00000000000000b503010214000000
*410000002000000067000000650000006e0000006500000072000000610000006c000000690000
*007a0000006100000074000000690000006f0000006e000000200000006f000000660000002001
*0213000000440000006100000074000000610000002e0000004c00000069000000730000007400
*00002e0000007200000065000000700000006c0000006900000063000000610000007400000065
*01021100000020000000740000006f00000020000000610000006e000000200000006100000072
*000000620000006900000074000000720000006100000072000000790000002001040100000000
*00000000c6000000000000002400000000000000250102100000002e0000002000000041000000
*6400000061000000700000007400000065000000640000002000000066000000720000006f0000
*006d000000200000000a01020100000020010c4a00000068000000740000007400000070000000
*3a0000002f0000002f000000610000007500000067000000750000007300000074000000730000
*00730000002e000000620000006c0000006f0000006700000073000000700000006f0000007400
*00002e000000630000006f0000006d0000002f000000320000003000000030000000380000002f
*00000030000000370000002f0000006c0000006f00000073000000740000002d00000061000000
*6e000000640000002d000000660000006f000000750000006e000000640000002d000000690000
*00660000002d000000690000002d00000077000000720000006900000074000000650000002d00
*00003100000030000000380000002d000000690000006e0000002e00000068000000740000006d
*0000006c02010000000a00000000000000b6030102140000004100000020000000670000006500
*00006e0000006500000072000000610000006c000000690000007a000000610000007400000069
*0000006f0000006e000000200000006f000000660000002001020f000000440000006100000074
*000000610000002e0000004c0000006900000073000000740000002e0000006300000079000000
*630000006c0000006501021100000020000000740000006f00000020000000610000006e000000
*200000006100000072000000620000006900000074000000720000006100000072000000790000
*00200104010000000000000000c60000000000000024000000000000002502390000002e000000
*200000004d0000006100000079000000200000006600000061000000690000006c000000200000
*00740000006f000000200000007400000065000000720000006d000000690000006e0000006100
*0000740000006500000020000000660000006f0000007200000020000000730000006f0000006d
*000000650000002000000076000000610000006c00000075000000650000007300000020000000
*690000006e00000020000000730000006f0000006d00000065000000200000006d0000006f0000
*006e0000006f0000006900000064000000730000002e0000000a00000000000000b70301021400
*0000410000002000000067000000650000006e0000006500000072000000610000006c00000069
*0000007a0000006100000074000000690000006f0000006e000000200000006f00000066000000
*20010210000000440000006100000074000000610000002e0000004c0000006900000073000000
*740000002e00000072000000650000007000000065000000610000007401021100000020000000
*740000006f00000020000000610000006e00000020000000610000007200000062000000690000
*007400000072000000610000007200000079000000200104010000000000000000c60000000000
*000024000000000000002502390000002e000000200000004d0000006100000079000000200000
*006600000061000000690000006c00000020000000740000006f00000020000000740000006500
*0000720000006d000000690000006e00000061000000740000006500000020000000660000006f
*0000007200000020000000730000006f0000006d00000065000000200000007600000061000000
*6c00000075000000650000007300000020000000690000006e00000020000000730000006f0000
*006d00000065000000200000006d0000006f0000006e0000006f00000069000000640000007300
*00002e0000000a4b00000000000000c900000000000000ca00000000000000cb00000000000000
*c600000000000000cc00000000000000cd00000000000000ce00000000000000cf000000000000
*00d000000000000000d100000000000000d200000000000000d300000000000000d40000000000
*0000d500000000000000d600000000000000d700000000000000d800000000000000d900000000
*000000da00000000000000db00000000000000dc00000000000000dd00000000000000de000000
*00000000df00000000000000e000000000000000e100000000000000e200000000000000e30000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*0000000000000500000000000000060000000000000007000000000000001c000000000000001d
*000000000000001e000000000000001f0000000000000020000000000000002100000000000000
*220000000000000023000000000000002400000000000000250000000000000026000000000000
*002700000000000000280000000000000029000000000000002a000000000000002b0000000000
*00002c00000000000000a300000000000000a400000000000000a500000000000000a600000000
*000000a700000000000000a800000000000000a900000000000000aa00000000000000ab000000
*00000000ac00000000000000ad00000000000000ae00000000000000af00000000000000b00000
*0000000000b100000000000000b200000000000000b300000000000000b400000000000000b500
*000000000000b600000000000000b700000000000000b81600000000000000a500000000000000
*a600000000000000a300000000000000a400000000000000ab00000000000000ac000000000000
*00ad00000000000000ae00000000000000a700000000000000a900000000000000aa0000000000
*0000a800000000000000b100000000000000b300000000000000b400000000000000af00000000
*000000b000000000000000b200000000000000b700000000000000b500000000000000b6000000
*00000000b8000000000000000000000000000000200001140000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000004d0000005000000054000000430000007300000029010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c0115
*0000006c0000006900000062000000720000006100000072000000690000006500000073000000
*400000006800000061000000730000006b000000650000006c0000006c0000002e0000006f0000
*007200000067003700000000000000c900000000000000ca00000000000000cb00000000000000
*c600000000000000cc00000000000000cd00000000000000ce00000000000000cf000000000000
*00d000000000000000d100000000000000d200000000000000d300000000000000d40000000000
*0000d500000000000000d600000000000000d700000000000000d800000000000000d900000000
*000000da00000000000000db00000000000000dc00000000000000dd00000000000000de000000
*00000000df00000000000000e000000000000000e100000000000000e200000000000000e30000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*0000000000000500000000000000060000000000000007000000000000001c000000000000001d
*000000000000001e000000000000001f0000000000000020000000000000002100000000000000
*220000000000000023000000000000002400000000000000250000000000000026000000000000
*002700000000000000280000000000000029000000000000002a000000000000002b0000000000
*00002c00000000000000b900000000000000ba0200000000000000b900000000000000ba000000
*00000000000000000000000021000108000000700000006f000000720000007400000061000000
*620000006c00000065010c0000006500000078000000700000006500000072000000690000006d
*000000650000006e00000074000000610000006c01150000006c00000069000000620000007200
*00006100000072000000690000006500000073000000400000006800000061000000730000006b
*000000650000006c0000006c0000002e0000006f00000072000000670400000000000000bb0301
*020200000041000000200104010000000000000000250000000000000000000000000000000601
*021a00000020000000770000006800000069000000630000006800000020000000730000007500
*000070000000700000006f00000072000000740000007300000020000000650000006600000066
*000000690000006300000069000000650000006e00000074000000200104010000000000000000
*2700000000000000000000000000000006022a000000200000006f000000700000006500000072
*0000006100000074000000690000006f0000006e00000073000000200000006f00000076000000
*65000000720000002000000072000000750000006e0000002d0000006c000000650000006e0000
*0067000000740000006800000020000000650000006e000000630000006f000000640000006500
*00006400000020000000640000006100000074000000610000002e0000000a00000000000000be
*030223000000410000002000000073000000690000006e000000670000006c0000006500000020
*00000072000000750000006e000000200000007700000069000000740000006800000020000000
*6100000020000000730000007400000072000000690000006300000074000000200000006c0000
*00650000006e0000006700000074000000680000002e0000000a00000000000000c103021c0000
*006e00000061000000690000007600000065000000200000006c00000065000000660000007400
*000020000000740000006f00000020000000720000006900000067000000680000007400000020
*000000650000006e000000630000006f0000006400000065000000720000000a00000000000000
*c203022a000000510000007500000069000000630000006b000000430000006800000065000000
*630000006b0000002000000070000000720000006f000000700000006500000072000000740000
*00790000003a000000200000006400000065000000630000006f00000064000000650000002000
*00002e00000020000000650000006e000000630000006f0000006400000065000000200000003d
*0000002000000069000000640000000a3f00000000000000c900000000000000ca000000000000
*00cb00000000000000c600000000000000cc00000000000000cd00000000000000ce0000000000
*0000cf00000000000000d000000000000000d100000000000000d200000000000000d300000000
*000000d400000000000000d500000000000000d600000000000000d700000000000000d8000000
*00000000d900000000000000da00000000000000db00000000000000dc00000000000000dd0000
*0000000000de00000000000000df00000000000000e000000000000000e100000000000000e200
*000000000000e30000000000000000000000000000000100000000000000020000000000000003
*000000000000000400000000000000050000000000000006000000000000000700000000000000
*1c000000000000001d000000000000001e000000000000001f0000000000000020000000000000
*002100000000000000220000000000000023000000000000002400000000000000250000000000
*000026000000000000002700000000000000280000000000000029000000000000002a00000000
*0000002b000000000000002c00000000000000bb00000000000000bc00000000000000bd000000
*00000000be00000000000000bf00000000000000c000000000000000c100000000000000c20000
*0000000000c300000000000000c40a00000000000000bb00000000000000bc00000000000000bd
*00000000000000be00000000000000bf00000000000000c000000000000000c300000000000000
*c100000000000000c400000000000000c200000000000000000000000000000022000000000035
*00000000000000c900000000000000ca00000000000000cb00000000000000c600000000000000
*cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0000000000000
*00d100000000000000d200000000000000d300000000000000d400000000000000d50000000000
*0000d600000000000000d700000000000000d800000000000000d900000000000000da00000000
*000000db00000000000000dc00000000000000dd00000000000000de00000000000000df000000
*00000000e000000000000000e100000000000000e200000000000000e300000000000000510000
*000000000052000000000000005400000000000000550000000000000056000000000000005700
*000000000000580000000000000059000000000000005a000000000000005b000000000000005c
*000000000000005e000000000000005f0000000000000060000000000000007a00000000000000
*7b000000000000007c000000000000007d0000000000000083000000000000008a000000000000
*008b000000000000008c000000000000008d000000000000008e00000000000000c50100000000
*000000c500000000000000fc000000000000000000000000000000010300000000000000350000
*000000000000000000000000000100000000000000003600000000000000000000000000000001
*000000000000000037000000000000000000000000000000010000000000000000380000000000
*000000000000000000000100000000000000003900000000000000000000000000000001000000
*00000000003a0000000000000000000000000000000100000000000000003b0000000000000000
*000000000000000100000000000000003c00000000000000000000000000000002030000000000
*00003d0000000000000000000000000000000200000000000000003e0000000000000000000000
*000000000200000000000000003f00000000000000000000000000000003030000000000000040
*000000000000000000000000000000030000000000000000410000000000000000000000000000
*000403000000000000004200000000000000000000000000000004010000000000000042000000
*000000000000000000000000040000000000000000430000000000000000000000000000000503
*000000000000004400000000000000000000000000000005010000000000000044000000000000
*000000000000000000050000000000000000450000000000000000000000000000000503000000
*000000004600000000000000000000000000000005000000000000000047000000000000000000
*000000000000050000000000000000480000000000000000000000000000000503000000000000
*004900000000000000000000000000000005010000000000000049000000000000000000000000
*0000000500000000000000004a0000000000000000000000000000000503000000000000004b00
*00000000000000000000000000000500000000000000004c000000000000000000000000000000
*0500000000000000004d0000000000000000000000000000000603000000000000004e00000000
*00000000000000000000000601000000000000004e000000000000000000000000000000060000
*0000000000004f0000000000000000000000000000000603000000000000005000000000000000
*000000000000000006010000000000000050000000000000000000000000000000060000000000
*000000510000000000000000000000000000000603000000000000005200000000000000000000
*000000000006010000000000000052000000000000000000000000000000060000000000000000
*530000000000000000000000000000000603000000000000005400000000000000000000000000
*000006030000000000000055000000000000000000000000000000060000000000000000560000
*000000000000000000000000000600000000000000005700000000000000000000000000000006
*000000000000000058000000000000000000000000000000060000000000000000590000000000
*000000000000000000000600000000000000005a00000000000000000000000000000006000000
*00000000005b0000000000000000000000000000000703000000000000005c0000000000000000
*000000000000000703000000000000005d00000000000000000000000000000007030000000000
*00005e0000000000000000000000000000000700000000000000005f0000000000000000000000
*000000000700000000000000006000000000000000000000000000000007000000000000000061
*000000000000000000000000000000070000000000000000620000000000000000000000000000
*000700000000000000006300000000000000000000000000000008030000000000000064000000
*000000000000000000000000080000000000000000650000000000000000000000000000000803
*000000000000006600000000000000000000000000000008000000000000000067000000000000
*000000000000000000080300000000000000680000000000000000000000000000000803000000
*00000000690000000000000000000000000000000800000000000000006a000000000000000000
*0000000000000800000000000000006b0000000000000000000000000000000800000000000000
*006c0000000000000000000000000000000800000000000000006d000000000000000000000000
*0000000903000000000000006e0000000000000000000000000000000901000000000000006e00
*00000000000000000000000000000900000000000000006f000000000000000000000000000000
*0a0300000000000000700000000000000000000000000000000a00000000000000007100000000
*00000000000000000000000a0000000000000000720000000000000000000000000000000a0000
*000000000000730000000000000000000000000000000a00000000000000007400000000000000
*00000000000000000a0000000000000000750000000000000000000000000000000b0300000000
*000000760000000000000000000000000000000b01000000000000007600000000000000000000
*00000000000b0000000000000000770000000000000000000000000000000c0300000000000000
*780000000000000000000000000000000c01000000000000007800000000000000000000000000
*00000c0300000000000000790000000000000000000000000000000c0100000000000000790000
*000000000000000000000000000c00000000000000007a0000000000000000000000000000000c
*00000000000000007b0000000000000000000000000000000d00000000000000007c0000000000
*000000000000000000000d00000000000000007d0000000000000000000000000000000e000000
*00000000007e0000000000000000000000000000000f03000000000000007f0000000000000000
*000000000000000f01000000000000007f0000000000000000000000000000000f000000000000
*0000800000000000000000000000000000000f0300000000000000810000000000000000000000
*000000000f0100000000000000810000000000000000000000000000000f000000000000000082
*0000000000000000000000000000000f0300000000000000830000000000000000000000000000
*000f0000000000000000840000000000000000000000000000000f000000000000000085000000
*000000000000000000000000100000000000000000860000000000000000000000000000001103
*000000000000008700000000000000000000000000000011030000000000000088000000000000
*000000000000000000120300000000000000890000000000000000000000000000001303000000
*000000008a0000000000000000000000000000001301000000000000008a000000000000000000
*0000000000001300000000000000008b0000000000000000000000000000001303000000000000
*008c0000000000000000000000000000001301000000000000008c000000000000000000000000
*0000001300000000000000008d0000000000000000000000000000001303000000000000008e00
*00000000000000000000000000001301000000000000008e000000000000000000000000000000
*1300000000000000008f0000000000000000000000000000001303000000000000009000000000
*000000000000000000000013010000000000000090000000000000000000000000000000130000
*000000000000910000000000000000000000000000001300000000000000009200000000000000
*000000000000000013000000000000000093000000000000000000000000000000140300000000
*000000940000000000000000000000000000001401000000000000009500000000000000000000
*000000000014010000000000000094000000000000000000000000000000140100000000000000
*960000000000000000000000000000001403000000000000009700000000000000000000000000
*000014010000000000000097000000000000000000000000000000140000000000000000980000
*000000000000000000000000001503000000000000009900000000000000000000000000000015
*0100000000000000990000000000000000000000000000001500000000000000009a0000000000
*000000000000000000001500000000000000009300000000000000000000000000000016030000
*00000000009b0000000000000000000000000000001600000000000000009c0000000000000000
*000000000000001600000000000000009d00000000000000000000000000000016000000000000
*00009e0000000000000000000000000000001700000000000000009f0000000000000000000000
*00000000170000000000000000a0000000000000000000000000000000180000000000000000a1
*000000000000000000000000000000180000000000000000a20000000000000000000000000000
*00180000000000000000a3000000000000000000000000000000190300000000000000a4000000
*0000000000000000000000001a0300000000000000a50000000000000000000000000000001a01
*00000000000000a50000000000000000000000000000001a0000000000000000a6000000000000
*0000000000000000001b0300000000000000a70000000000000000000000000000001b01000000
*00000000a70000000000000000000000000000001b0000000000000000a8000000000000000000
*0000000000001c0300000000000000a90000000000000000000000000000001c03000000000000
*00aa0000000000000000000000000000001c0000000000000000ab000000000000000000000000
*0000001c0300000000000000ac0000000000000000000000000000001c0000000000000000ad00
*00000000000000000000000000001d0300000000000000ae000000000000000000000000000000
*1d0100000000000000ae0000000000000000000000000000001d0000000000000000af00000000
*00000000000000000000001d0300000000000000b00000000000000000000000000000001d0100
*000000000000b00000000000000000000000000000001d0000000000000000b100000000000000
*00000000000000001d0300000000000000b20000000000000000000000000000001d0100000000
*000000b20000000000000000000000000000001d0000000000000000b300000000000000000000
*00000000001d0000000000000000b40000000000000000000000000000001e0300000000000000
*b50000000000000000000000000000001e0100000000000000b500000000000000000000000000
*00001e0000000000000000b60000000000000000000000000000001e0300000000000000b70000
*000000000000000000000000001e0100000000000000b70000000000000000000000000000001e
*0000000000000000b80000000000000000000000000000001e0300000000000000b90000000000
*000000000000000000001e0100000000000000b90000000000000000000000000000001e000000
*0000000000ba0000000000000000000000000000001e0000000000000000bb0000000000000000
*000000000000001f0000000000000000bc0000000000000000000000000000001f000000000000
*0000bd0000000000000000000000000000001f0000000000000000be0000000000000000000000
*000000001f0000000000000000bf0000000000000000000000000000001f0000000000000000c0
*0000000000000000000000000000001f0000000000000000c10000000000000000000000000000
*001f0000000000000000c20000000000000000000000000000001f0000000000000000c3000000
*0000000000000000000000001f0000000000000000c40000000000000000000000000000001f00
*00000000000000c50000000000000000000000000000001f0000000000000000c6000000000000
*0000000000000000001f0000000000000000c70000000000000000000000000000001f00000000
*00000000c80000000000000000000000000000001f0000000000000000c9000000000000000000
*0000000000001f0000000000000000ca0000000000000000000000000000001f00000000000000
*00cb0000000000000000000000000000001f0000000000000000cc000000000000000000000000
*0000001f0000000000000000cd0000000000000000000000000000001f00000000000000009f00
*00000000000000000000000000001f0000000000000000ce000000000000000000000000000000
*1f0000000000000000cf0000000000000000000000000000001f0000000000000000a000000000
*0000000000000000000000200300000000000000d0000000000000000000000000000000200100
*000000000000d1000000000000000000000000000000210300000000000000d200000000000000
*0000000000000000210100000000000000d2000000000000000000000000000000210000000000
*000000d3000000000000000000000000000000210300000000000000d400000000000000000000
*0000000000210100000000000000d4000000000000000000000000000000210000000000000000
*71000000000000000000000000000000210000000000000000d500000000000000000000000000
*0000210000000000000000d6000000000000000000000000000000210000000000000000720000
*000000000000000000000000002100000000000000007400000000000000000000000000000022
*0300000000000000d7000000000000002400000000000000250300000000000000d80000000000
*00002400000000000000260300000000000000d900000000000000240000000000000027030000
*0000000000da000000000000002400000000000000250000000000000000db0000000000000024
*00000000000000250000000000000000dc00000000000000240000000000000025000000000000
*0000dd000000000000002400000000000000250000000000000000de0000000000000024000000
*00000000250100000000000000df000000000000002400000000000000250300000000000000df
*000000000000002400000000000000250000000000000000e00000000000000024000000000000
*00250100000000000000e1000000000000002400000000000000250300000000000000e1000000
*000000002400000000000000250000000000000000e20000000000000024000000000000002501
*00000000000000e3000000000000002400000000000000250300000000000000e3000000000000
*002400000000000000250000000000000000e40000000000000024000000000000002501000000
*00000000e5000000000000002400000000000000250300000000000000e5000000000000002400
*000000000000250000000000000000e60000000000000024000000000000002501000000000000
*00e7000000000000002400000000000000250300000000000000e7000000000000002400000000
*000000250000000000000000e8000000000000002400000000000000250100000000000000e900
*0000000000002400000000000000250300000000000000e9000000000000002400000000000000
*250000000000000000ea000000000000002400000000000000250100000000000000eb00000000
*0000002400000000000000250300000000000000eb000000000000002400000000000000250000
*000000000000ec000000000000002400000000000000250100000000000000ed00000000000000
*2400000000000000250300000000000000ed00000000000000ee00000000000000ef0300000000
*000000f000000000000000ee00000000000000ef0000000000000000f100000000000000240000
*0000000000f20300000000000000f30000000000000029000000000000002a0300000000000000
*f40000000000000024000000000000002b0000000000000000f500000000000000000000000000
*00000a0300000000000000f6000000000000002c000000000000002d0300000000000000f70000
*000000000024000000000000002e0300000000000000f80000000000000024000000000000002e
*0000000000000000f90000000000000024000000000000002e0000000000000000fa0000000000
*000024000000000000002e0000000000000000fb0000000000000024000000000000002e000000
*0000000000fc000000000000002400000000000000fd0000000000000000fe0000000000000024
*00000000000000260100000000000000ff000000000000002400000000000000fd000000000000
*000100000000000000002400000000000001010000000000000001020000000000000024000000
*00000001010000000000000001030000000000000024000000000000010400000000000000007e
*000000000000002400000000000000320300000000000001050000000000000024000000000000
*003203000000000000010600000000000000240000000000000107030000000000000108000000
*000000002400000000000000330300000000000001090000000000000024000000000000003300
*00000000000000be0000000000000029000000000000003403000000000000010a000000000000
*010b000000000000000e6d6f6e6f6964732d302e312e31350000000000000013446174612e4d6f
*6e6f69642e526564756365720000000000000018446174612e4d6f6e6f69642e52656475636572
*2e436861720000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e44
*65636f6465720000000000000018446174612e4d6f6e6f69642e526564756365722e5769746800
*00000000000011446174612e4d6f6e6f69642e556e696f6e0000000000000015446174612e4d6f
*6e6f69642e47656e657261746f720000000000000022446174612e4d6f6e6f69642e4c65786963
*616c2e536f75726365506f736974696f6e0000000000000019446174612e4d6f6e6f69642e4c65
*786963616c2e576f7264730000000000000010446174612e4d6f6e6f69642e53656c6600000000
*0000001a446174612e4d6f6e6f69642e47656e657261746f722e4c5a3738000000000000001644
*6174612e4d6f6e6f69642e46726f6d537472696e670000000000000017446174612e4d6f6e6f69
*642e43617465676f726963616c0000000000000014446174612e4d6f6e6f69642e416464697469
*7665000000000000001a446174612e4d6f6e6f69642e41646469746976652e5375676172000000
*000000001a446174612e4d6f6e6f69642e4d756c7469706c696361746976650000000000000020
*446174612e4d6f6e6f69642e4d756c7469706c696361746976652e537567617200000000000000
*13446174612e52696e672e53656d692e4e656172000000000000000e446174612e52696e672e53
*656d69000000000000000f446174612e4d6f6e6f69642e4f72640000000000000012446174612e
*52696e672e53656d692e4f72640000000000000017446174612e52696e672e53656d692e54726f
*706963616c000000000000000a446174612e47726f75700000000000000016446174612e47726f
*75702e436f6d62696e61746f72730000000000000010446174612e47726f75702e537567617200
*00000000000009446174612e52696e670000000000000011446174612e52696e672e426f6f6c65
*616e0000000000000011446174612e52696e672e46726f6d4e756d000000000000001044617461
*2e52696e672e4d6f64756c650000000000000017446174612e4d6f6e6f69642e4170706c696361
*746976650000000000000011446174612e4d6f6e6f69642e4d6f6e616400000000000000174461
*74612e4d6f6e6f69642e436f6d62696e61746f7273000000000000001a446174612e4d6f6e6f69
*642e47656e657261746f722e467265650000000000000019446174612e4d6f6e6f69642e47656e
*657261746f722e524c450000000000000029446174612e52696e672e4d6f64756c652e4175746f
*6d61746963446966666572656e74696174696f6e0000000000000015446174612e4d6f6e6f6964
*2e496e7374616e636573000000000000000462617365000000000000000b446174612e4d6f6e6f
*6964000000000000000a446174612e4d61796265000000000000000d446174612e466f6c646162
*6c650000000000000009446174612e576f726400000000000000086768632d7072696d00000000
*000000094748432e5479706573000000000000000b4748432e556e69636f646500000000000000
*12636f6e7461696e6572732d302e322e302e300000000000000008446174612e4d617000000000
*00000010436f6e74726f6c2e43617465676f72790000000000000008446174612e4f7264000000
*00000000075072656c756465000000000000000f446174612e52696e672e537567617200000000
*00000013436f6e74726f6c2e4170706c69636174697665000000000000000d436f6e74726f6c2e
*4d6f6e616400000000000000084748432e426f6f6c000000000000000752656475636572000000
*0000000004756e69740000000000000004736e6f630000000000000004636f6e73000000000000
*000d666f6c644d6170526564756365000000000000000a666f6c64526564756365000000000000
*000a72657475726e556e6974000000000000000870757265556e6974000000000000000b436861
*7252656475636572000000000000000866726f6d43686172000000000000000b696e76616c6964
*43686172000000000000000455544638000000000000000772756e55544638000000000000000b
*5769746852656475636572000000000000000e776974686f757452656475636572000000000000
*0009556e696f6e57697468000000000000000c676574556e696f6e57697468000000000000000c
*486173556e696f6e576974680000000000000009756e696f6e576974680000000000000009656d
*707479576974680000000000000005556e696f6e0000000000000008676574556e696f6e000000
*0000000008486173556e696f6e0000000000000005656d7074790000000000000005756e696f6e
*000000000000000543686172380000000000000008676574436861723800000000000000065661
*6c756573000000000000000967657456616c75657300000000000000044b657973000000000000
*00076765744b657973000000000000000947656e657261746f720000000000000004456c656d00
*000000000000096d617052656475636500000000000000056d6170546f00000000000000076d61
*7046726f6d0000000000000006726564756365000000000000000d6d6170526564756365576974
*68000000000000000a72656475636557697468000000000000000e536f75726365506f73697469
*6f6e000000000000000c536f75726365436f6c756d6e000000000000000a536f757263654c696e
*6500000000000000076e657874546162000000000000000b73746172744f6646696c6500000000
*0000000c736f75726365436f6c756d6e000000000000000a736f757263654c696e650000000000
*00001273686f77536f75726365506f736974696f6e0000000000000007556e6c696e6564000000
*000000000a72756e556e6c696e65640000000000000008556e737061636564000000000000000b
*72756e556e73706163656400000000000000054c696e65730000000000000005576f7264730000
*00000000000872756e576f726473000000000000000872756e4c696e6573000000000000000977
*6f72647346726f6d00000000000000096c696e657346726f6d000000000000000453656c660000
*00000000000767657453656c6600000000000000044c5a373800000000000000066465636f6465
*0000000000000006656e636f64650000000000000008656e636f64654571000000000000001270
*726f705f6465636f64655f656e636f6465000000000000001470726f705f6465636f64655f656e
*636f64654571000000000000000a46726f6d537472696e67000000000000000d67657446726f6d
*537472696e6700000000000000034d6f6e000000000000000547456e646f000000000000000867
*657447456e646f00000000000000066765744d6f6e0000000000000004706c7573000000000000
*00047a65726f00000000000000012b000000000000000345787000000000000000066765744578
*7000000000000000034c6f6700000000000000066765744c6f67000000000000000e4d756c7469
*706c6963617469766500000000000000036f6e65000000000000000574696d6573000000000000
*00012a00000000000000104c65667453656d694e65617252696e67000000000000001152696768
*7453656d694e65617252696e67000000000000000853656d6952696e67000000000000000b4d69
*6e5072696f72697479000000000000000e6765744d696e5072696f72697479000000000000000b
*4d61785072696f72697479000000000000000e6765744d61785072696f72697479000000000000
*00034d696e00000000000000066765744d696e00000000000000034d6178000000000000000667
*65744d617800000000000000096d696e66696e6974790000000000000008696e66696e69747900
*000000000000085072696f7269747900000000000000084d6178426f756e640000000000000008
*4d696e426f756e6400000000000000054f7264657200000000000000086765744f726465720000
*00000000000854726f706963616c000000000000000b67657454726f706963616c000000000000
*000547726f75700000000000000007676e656761746500000000000000056d696e757300000000
*0000000967737562747261637400000000000000097265706c6963617465000000000000002170
*726f705f7265706c69636174655f72696768745f64697374726962757469766500000000000000
*012d00000000000000066e65676174650000000000000008737562747261637400000000000000
*0452696e670000000000000008426f6f6c52696e67000000000000000b676574426f6f6c52696e
*67000000000000000746726f6d4e756d000000000000000a67657446726f6d4e756d0000000000
*0000064d6f64756c65000000000000000b52696768744d6f64756c6500000000000000022e2a00
*0000000000000a4c6566744d6f64756c6500000000000000022a2e000000000000000d54726176
*657273616c57697468000000000000001067657454726176657273616c57697468000000000000
*0012577261707065644170706c6963617469766500000000000000156765745772617070656441
*70706c69636174697665000000000000000954726176657273616c000000000000000c67657454
*726176657273616c000000000000000d736e6f6354726176657273616c000000000000000a4163
*74696f6e57697468000000000000000d676574416374696f6e57697468000000000000000c5772
*61707065644d6f6e6164000000000000000f676574577261707065644d6f6e6164000000000000
*0006416374696f6e0000000000000009676574416374696f6e000000000000000a736e6f634163
*74696f6e000000000000000974726176657273655f0000000000000004666f725f000000000000
*00056d61704d5f0000000000000005666f724d5f0000000000000007666f6c644d617000000000
*00000009636f6e6361744d61700000000000000004666f6c640000000000000006746f4c697374
*0000000000000003616e6400000000000000026f720000000000000003616e7900000000000000
*03616c6c000000000000000373756d000000000000000770726f64756374000000000000000465
*6c656d00000000000000076e6f74456c656d000000000000000666696c74657200000000000000
*0466696e6400000000000000056379636c65000000000000000672657065617400000000000000
*0446726565000000000000000c416e7947656e657261746f720000000000000003524c45000000
*0000000006676574524c45000000000000000352756e000000000000000a656e636f64654c6973
*74000000000000001670726f705f6465636f64655f656e636f64654c6973740000000000000001
*4400000000000000064d6f6e6f696400000000000000054d617962650000000000000008466f6c
*6461626c6500000000000000076d617070656e6400000000000000076d636f6e63617400000000
*000000066d656d70747900000000000000076765744475616c00000000000000044475616c0000
*000000000007617070456e646f0000000000000004456e646f0000000000000006676574416c6c
*0000000000000003416c6c0000000000000006676574416e790000000000000003416e79000000
*000000000667657453756d000000000000000353756d000000000000000a67657450726f647563
*74000000000000000750726f647563740000000000000008676574466972737400000000000000
*05466972737400000000000000076765744c61737400000000000000044c617374000000000000
*000e66696e676572747265652d302e30000000000000000f446174612e46696e67657254726565
*000000000000000a46696e6765725472656500000000000000076d656173757265000000000000
*00084748432e576f72640000000000000005576f72643800000000000000044368617200000000
*00000007697353706163650000000000000005546f6b656e00000000000000034d617000000000
*0000000843617465676f727900000000000000033e3e3e00000000000000033c3c3c0000000000
*0000012e00000000000000026964000000000000000b4748432e436c6173736573000000000000
*00036d696e00000000000000074e6f7468696e6700000000000000036d61780000000000000008
*4748432e456e756d00000000000000086d6178426f756e6400000000000000086d696e426f756e
*6400000000000000074748432e4e756d000000000000000b4170706c6963617469766500000000
*0000000b416c7465726e617469766500000000000000084748432e426173650000000000000005
*4d6f6e616400000000000000094d6f6e6164506c75730000000000000004426f6f6c
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 43
-<a name="line-35"></a>    <span class='hs-comment'>-- * List-Like Reduction</span>
-<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
-<a name="line-37"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
-<a name="line-38"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
-<a name="line-39"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>find</span>
-<a name="line-40"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
-<a name="line-41"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
-<a name="line-42"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
-<a name="line-43"></a>    <span class='hs-comment'>-- * List-Like Monoid Generation</span>
-<a name="line-44"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span>
-<a name="line-45"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span>
-<a name="line-46"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span>
-<a name="line-47"></a>    <span class='hs-comment'>-- * QuickCheck Properties</span>
-<a name="line-48"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_replicate_right_distributive</span>
-<a name="line-49"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span><span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span><span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span><span class='hs-layout'>)</span>
-<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
-<a name="line-58"></a>
-<a name="line-59"></a><a name="traverse_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Traversal' monoid. A specialized version of its namesake in "Data.Foldable"</span>
-<a name="line-60"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-61"></a><span class='hs-definition'>traverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-62"></a>    
-<a name="line-63"></a><a name="for_"></a><span class='hs-comment'>-- | flipped 'traverse_' as in "Data.Foldable"</span>
-<a name="line-64"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-65"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
-<a name="line-66"></a>
-<a name="line-67"></a><a name="mapM_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Action' monoid. A specialized version of its namesake from "Data.Foldable" and "Control.Monad"</span>
-<a name="line-68"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-69"></a><span class='hs-definition'>mapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-70"></a>
-<a name="line-71"></a><a name="forM_"></a><span class='hs-comment'>-- | flipped 'mapM_' as in "Data.Foldable" and "Control.Monad"</span>
-<a name="line-72"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-73"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>toList</span> 
+<a name="line-36"></a>    <span class='hs-comment'>-- * List-Like Reduction</span>
+<a name="line-37"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
+<a name="line-38"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
+<a name="line-39"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
+<a name="line-40"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>find</span>
+<a name="line-41"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
+<a name="line-42"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
+<a name="line-43"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
+<a name="line-44"></a>    <span class='hs-comment'>-- * List-Like Monoid Generation</span>
+<a name="line-45"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span>
+<a name="line-46"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span>
+<a name="line-47"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span>
+<a name="line-48"></a>    <span class='hs-comment'>-- * QuickCheck Properties</span>
+<a name="line-49"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_replicate_right_distributive</span>
+<a name="line-50"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span><span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span><span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span><span class='hs-layout'>)</span>
+<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-58"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
+<a name="line-59"></a>
+<a name="line-60"></a><a name="traverse_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Traversal' monoid. A specialized version of its namesake in "Data.Foldable"</span>
+<a name="line-61"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-62"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getTraversal</span>
+<a name="line-63"></a><span class='hs-comment'>{-# INLINE traverse_ #-}</span>
+<a name="line-64"></a>    
+<a name="line-65"></a><a name="for_"></a><span class='hs-comment'>-- | flipped 'traverse_' as in "Data.Foldable"</span>
+<a name="line-66"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-67"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
+<a name="line-68"></a><span class='hs-comment'>{-# INLINE for_ #-}</span>
+<a name="line-69"></a>
+<a name="line-70"></a><a name="mapM_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Action' monoid. A specialized version of its namesake from "Data.Foldable" and "Control.Monad"</span>
+<a name="line-71"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-72"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAction</span>
+<a name="line-73"></a><span class='hs-comment'>{-# INLINE mapM_ #-}</span>
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 83
-<a name="line-75"></a><a name="foldMap"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-76"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-77"></a><span class='hs-definition'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-78"></a>
-<a name="line-79"></a><a name="fold"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-80"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-81"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-82"></a>
-<a name="line-83"></a><a name="concatMap"></a><span class='hs-comment'>-- | A further specialization of "foldMap"</span>
-<a name="line-84"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-85"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span>
-<a name="line-86"></a>
-<a name="line-87"></a><a name="and"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
-<a name="line-88"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-89"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-90"></a>
-<a name="line-91"></a><a name="or"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
-<a name="line-92"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-93"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-75"></a><a name="forM_"></a><span class='hs-comment'>-- | flipped 'mapM_' as in "Data.Foldable" and "Control.Monad"</span>
+<a name="line-76"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-77"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
+<a name="line-78"></a><span class='hs-comment'>{-# INLINE forM_ #-}</span>
+<a name="line-79"></a>
+<a name="line-80"></a><a name="foldMap"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
+<a name="line-81"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-82"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getSelf</span>
+<a name="line-83"></a><span class='hs-comment'>{-# INLINE foldMap #-}</span>
+<a name="line-84"></a>
+<a name="line-85"></a><a name="concatMap"></a><span class='hs-comment'>-- | A further specialization of "foldMap"</span>
+<a name="line-86"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-87"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span>
+<a name="line-88"></a><span class='hs-comment'>{-# INLINE concatMap #-}</span>
+<a name="line-89"></a>
+<a name="line-90"></a><a name="fold"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
+<a name="line-91"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-92"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getSelf</span>
+<a name="line-93"></a><span class='hs-comment'>{-# INLINE fold #-}</span>
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 103
-<a name="line-95"></a><a name="any"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if any of its values match the supplied predicate</span>
-<a name="line-96"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-97"></a><span class='hs-definition'>any</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-98"></a>
-<a name="line-99"></a><a name="all"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if all of its values match the supplied predicate</span>
-<a name="line-100"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-101"></a><span class='hs-definition'>all</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-102"></a>
-<a name="line-103"></a><a name="sum"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' using the 'Sum' 'Monoid'</span>
-<a name="line-104"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-105"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSum</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-106"></a>
-<a name="line-107"></a><a name="product"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' using the 'Product' 'Monoid'</span>
-<a name="line-108"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-109"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getProduct</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-110"></a>
-<a name="line-111"></a><a name="elem"></a><span class='hs-comment'>-- | Check to see if 'any' member of the 'Generator' matches the supplied value</span>
-<a name="line-112"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-113"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
+<a name="line-95"></a><a name="toList"></a><span class='hs-comment'>-- | Convert any 'Generator' to a list of its contents</span>
+<a name="line-96"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
+<a name="line-97"></a><span class='hs-definition'>toList</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
+<a name="line-98"></a><span class='hs-comment'>{-# INLINE toList #-}</span>
+<a name="line-99"></a>
+<a name="line-100"></a><a name="and"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
+<a name="line-101"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-102"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAll</span>
+<a name="line-103"></a><span class='hs-comment'>{-# INLINE and #-}</span>
+<a name="line-104"></a>
+<a name="line-105"></a><a name="or"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
+<a name="line-106"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-107"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getAny</span>
+<a name="line-108"></a><span class='hs-comment'>{-# INLINE or #-}</span>
+<a name="line-109"></a>
+<a name="line-110"></a><a name="any"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if any of its values match the supplied predicate</span>
+<a name="line-111"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-112"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAny</span>
+<a name="line-113"></a><span class='hs-comment'>{-# INLINE any #-}</span>
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 123
-<a name="line-115"></a><a name="notElem"></a><span class='hs-comment'>-- | Check to make sure that the supplied value is not a member of the 'Generator'</span>
-<a name="line-116"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-117"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
-<a name="line-118"></a>
-<a name="line-119"></a><a name="filter"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a subset of the elements in a 'Generator'</span>
-<a name="line-120"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-121"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-122"></a>    <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span>
-<a name="line-123"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-115"></a><a name="all"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if all of its values match the supplied predicate</span>
+<a name="line-116"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-117"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduceWith</span> <span class='hs-varid'>getAll</span>
+<a name="line-118"></a><span class='hs-comment'>{-# INLINE all #-}</span>
+<a name="line-119"></a>
+<a name="line-120"></a><a name="sum"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' using the 'Sum' 'Monoid'</span>
+<a name="line-121"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
+<a name="line-122"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getSum</span>
+<a name="line-123"></a><span class='hs-comment'>{-# INLINE sum #-}</span>
hunk ./doc/html/monoids/src/Data-Monoid-Combinators.html 133
-<a name="line-125"></a><a name="find"></a><span class='hs-comment'>-- | A specialization of 'filter' using the 'First' 'Monoid', analogous to 'Data.List.find'</span>
-<a name="line-126"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-127"></a><span class='hs-definition'>find</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getFirst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-varid'>p</span>
-<a name="line-128"></a>
-<a name="line-129"></a><a name="replicate"></a><span class='hs-comment'>-- | A generalization of 'Data.List.replicate' to an arbitrary 'Monoid'. Adapted from </span>
-<a name="line-130"></a><span class='hs-comment'>-- &lt;<a href="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html">http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</a>&gt;</span>
-<a name="line-131"></a><span class='hs-definition'>replicate</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-132"></a><span class='hs-definition'>replicate</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span> 
-<a name="line-133"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span> <span class='hs-comment'>-- error "negative length"</span>
-<a name="line-134"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-135"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span>
-<a name="line-136"></a>    <span class='hs-keyword'>where</span>
-<a name="line-137"></a>        <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> 
-<a name="line-138"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span>
-<a name="line-139"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
-<a name="line-140"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-141"></a>        <span class='hs-varid'>g</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span> 
-<a name="line-142"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span>
-<a name="line-143"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span>
-<a name="line-144"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span>
-<a name="line-145"></a>
-<a name="line-146"></a><a name="cycle"></a><span class='hs-comment'>-- | A generalization of 'Data.List.cycle' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
-<a name="line-147"></a><span class='hs-definition'>cycle</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-148"></a><span class='hs-definition'>cycle</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>xs'</span>
-<a name="line-149"></a>
-<a name="line-150"></a><a name="repeat"></a><span class='hs-comment'>-- | A generalization of 'Data.List.repeat' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
-<a name="line-151"></a><span class='hs-definition'>repeat</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-152"></a><span class='hs-definition'>repeat</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>cons</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs</span> 
-<a name="line-153"></a>
-<a name="line-154"></a><a name="prop_replicate_right_distributive"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-155"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
-<a name="line-156"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>y</span>
+<a name="line-125"></a><a name="product"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' using the 'Product' 'Monoid'</span>
+<a name="line-126"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
+<a name="line-127"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceWith</span> <span class='hs-varid'>getProduct</span>
+<a name="line-128"></a><span class='hs-comment'>{-# INLINE product #-}</span>
+<a name="line-129"></a>
+<a name="line-130"></a><a name="elem"></a><span class='hs-comment'>-- | Check to see if 'any' member of the 'Generator' matches the supplied value</span>
+<a name="line-131"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-132"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
+<a name="line-133"></a><span class='hs-comment'>{-# INLINE elem #-}</span>
+<a name="line-134"></a>
+<a name="line-135"></a><a name="notElem"></a><span class='hs-comment'>-- | Check to make sure that the supplied value is not a member of the 'Generator'</span>
+<a name="line-136"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-137"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
+<a name="line-138"></a><span class='hs-comment'>{-# INLINE notElem #-}</span>
+<a name="line-139"></a>
+<a name="line-140"></a><a name="filter"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a subset of the elements in a 'Generator'</span>
+<a name="line-141"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-142"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
+<a name="line-143"></a>    <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span>
+<a name="line-144"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-145"></a><span class='hs-comment'>{-# INLINE filter #-}</span>
+<a name="line-146"></a>
+<a name="line-147"></a><a name="filterWith"></a><span class='hs-definition'>filterWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> 
+<a name="line-148"></a><span class='hs-definition'>filterWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-varid'>p</span>
+<a name="line-149"></a><span class='hs-comment'>{-# INLINE filterWith #-}</span>
+<a name="line-150"></a>
+<a name="line-151"></a><a name="find"></a><span class='hs-comment'>-- | A specialization of 'filter' using the 'First' 'Monoid', analogous to 'Data.List.find'</span>
+<a name="line-152"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-153"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>filterWith</span> <span class='hs-varid'>getFirst</span>
+<a name="line-154"></a><span class='hs-comment'>{-# INLINE find #-}</span>
+<a name="line-155"></a>
+<a name="line-156"></a><a name="replicate"></a><span class='hs-comment'>-- | A generalization of 'Data.List.replicate' to an arbitrary 'Monoid'. Adapted from </span>
+<a name="line-157"></a><span class='hs-comment'>-- &lt;<a href="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html">http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</a>&gt;</span>
+<a name="line-158"></a><span class='hs-definition'>replicate</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-159"></a><span class='hs-definition'>replicate</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span> 
+<a name="line-160"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span> <span class='hs-comment'>-- error "negative length"</span>
+<a name="line-161"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-162"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span>
+<a name="line-163"></a>    <span class='hs-keyword'>where</span>
+<a name="line-164"></a>        <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> 
+<a name="line-165"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span>
+<a name="line-166"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
+<a name="line-167"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
+<a name="line-168"></a>        <span class='hs-varid'>g</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span> 
+<a name="line-169"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span>
+<a name="line-170"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span>
+<a name="line-171"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span>
+<a name="line-172"></a><span class='hs-comment'>{-# INLINE replicate #-}</span>
+<a name="line-173"></a>
+<a name="line-174"></a><a name="cycle"></a><span class='hs-comment'>-- | A generalization of 'Data.List.cycle' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
+<a name="line-175"></a><span class='hs-definition'>cycle</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-176"></a><span class='hs-definition'>cycle</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>xs'</span>
+<a name="line-177"></a>
+<a name="line-178"></a><a name="repeat"></a><span class='hs-comment'>-- | A generalization of 'Data.List.repeat' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
+<a name="line-179"></a><span class='hs-definition'>repeat</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-180"></a><span class='hs-definition'>repeat</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>cons</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs</span> 
+<a name="line-181"></a>
+<a name="line-182"></a><a name="prop_replicate_right_distributive"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-183"></a><span class='hs-definition'>prop_replicate_right_distributive</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
+<a name="line-184"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>replicate</span> <span class='hs-varid'>m</span> <span class='hs-varid'>y</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator-Free.html 25
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Free</span> <span class='hs-comment'>-- (AnyGen)</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Free</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator-Free.html 29
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="Free"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> 
-<a name="line-28"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span>
-<a name="line-29"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>a</span>
-<a name="line-30"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span>
-<a name="line-31"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span>
-<a name="line-32"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Empty</span>
-<a name="line-33"></a><span class='hs-comment'>--    | forall c. (Generator c, Elem c ~ a) =&gt; AnyGen c</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
-<a name="line-37"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Plus</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
-<a name="line-41"></a>
-<a name="line-42"></a>    <span class='hs-varid'>snoc</span> <span class='hs-conid'>Empty</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span>
-<a name="line-43"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Snoc</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span>
-<a name="line-44"></a>
-<a name="line-45"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>b</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>b</span>
-<a name="line-46"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cons</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> 
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>M</span>
+<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-28"></a>
+<a name="line-29"></a><a name="Free"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> 
+<a name="line-30"></a>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span>
+<a name="line-31"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>a</span>
+<a name="line-32"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-conid'>Free</span> <span class='hs-varid'>a</span>
+<a name="line-33"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span>
+<a name="line-34"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Empty</span>
+<a name="line-35"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>c</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span>
+<a name="line-36"></a>
+<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-39"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>/=</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>==</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-40"></a>
+<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-42"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-43"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;=</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-44"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;</span> <span class='hs-varid'>b</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;</span>  <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-45"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;</span> <span class='hs-varid'>b</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;</span>  <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
+<a name="line-46"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span> <span class='hs-varid'>b</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator-Free.html 56
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-50"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-51"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-52"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
-<a name="line-54"></a><span class='hs-comment'>--    fmap f (AnyGen c) = mapReduce f c</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
-<a name="line-58"></a>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
-<a name="line-61"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
-<a name="line-62"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span>
-<a name="line-63"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
-<a name="line-64"></a>    <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span>
-<a name="line-65"></a>    <span class='hs-conid'>Empty</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
-<a name="line-66"></a><span class='hs-comment'>--  AnyGen c &gt;&gt;= k = ...</span>
-<a name="line-67"></a>
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-70"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-71"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-72"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
-<a name="line-73"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-74"></a><span class='hs-comment'>--    foldMap f (AnyGen c) = getSelf . mapReduce f c</span>
-<a name="line-75"></a>
-<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-77"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-78"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-79"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-80"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-81"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-83"></a><span class='hs-comment'>--    mapReduce f (AnyGen c) = getSelf . mapReduce f c</span>
-<a name="line-84"></a>    
-<a name="line-85"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-86"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-87"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
-<a name="line-88"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-89"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Empty</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
-<a name="line-90"></a><span class='hs-comment'>--    mapTo f m (AnyGen c)   = getSelf . mapTo f m c</span>
-<a name="line-91"></a>    
-<a name="line-92"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varid'>m</span> 
-<a name="line-93"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varid'>m</span>
-<a name="line-95"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span>
-<a name="line-96"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>        <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
-<a name="line-97"></a><span class='hs-comment'>--    mapFrom f (AnyGen c)   m = getSelf . mapFrom f c m </span>
+<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-49"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-50"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Plus</span>
+<a name="line-51"></a>
+<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-53"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
+<a name="line-54"></a>
+<a name="line-55"></a>    <span class='hs-varid'>snoc</span> <span class='hs-conid'>Empty</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span>
+<a name="line-56"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Snoc</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span>
+<a name="line-57"></a>
+<a name="line-58"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>b</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>b</span>
+<a name="line-59"></a>    <span class='hs-varid'>cons</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cons</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span> 
+<a name="line-60"></a>
+<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-62"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-63"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-64"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-65"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-66"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-67"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span>
+<a name="line-68"></a>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-70"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
+<a name="line-71"></a>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-73"></a>    <span class='hs-varid'>return</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span>
+<a name="line-74"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-75"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>     <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span>
+<a name="line-76"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>     <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varop'>`Plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>    <span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span>
+<a name="line-78"></a>    <span class='hs-conid'>Empty</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-79"></a>    <span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>k</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-80"></a>
+<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-82"></a>    <span class='hs-varid'>mzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Empty</span>
+<a name="line-83"></a>    <span class='hs-varid'>mplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Plus</span>
+<a name="line-84"></a>
+<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-conid'>Free</span> <span class='hs-keyword'>where</span>
+<a name="line-86"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-87"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-88"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-89"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
+<a name="line-90"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-91"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>M</span><span class='hs-varop'>.</span><span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span>
+<a name="line-92"></a>
+<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-94"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-95"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-96"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-97"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-98"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-99"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>            <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-100"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span>
+<a name="line-101"></a>    
+<a name="line-102"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`plus`</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-103"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-104"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span>
+<a name="line-105"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>           <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
+<a name="line-106"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-conid'>Empty</span>              <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
+<a name="line-107"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span>
+<a name="line-108"></a>    
+<a name="line-109"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Cons`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varid'>m</span> 
+<a name="line-110"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Snoc`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-111"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Plus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>     <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span> <span class='hs-varid'>m</span>
+<a name="line-112"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>         <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span>
+<a name="line-113"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>Empty</span>            <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
+<a name="line-114"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>AnyGenerator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> 
hunk ./doc/html/monoids/src/Data-Monoid-Generator-LZ78.html 34
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LZ78</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>decode</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encode</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encodeEq</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encode</span>
-<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encodeEq</span>
-<a name="line-32"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>List</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-comment'>-- | An LZ78 compressing 'Generator', which supports efficient 'mapReduce' operations</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="Token"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int</span> 
-<a name="line-46"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-comment'>-- after using the Functor instance the encoding may no longer be minimal</span>
-<a name="line-49"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Token</span> <span class='hs-keyword'>where</span>
-<a name="line-50"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span>
+<a name="line-26"></a>    <span class='hs-comment'>-- * Lempel-Ziv 78 </span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LZ78</span>
+<a name="line-28"></a>    <span class='hs-comment'>-- * Decoding</span>
+<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>decode</span>
+<a name="line-30"></a>    <span class='hs-comment'>-- * Encoding</span>
+<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encode</span>
+<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encodeEq</span>
+<a name="line-33"></a>    <span class='hs-comment'>-- * QuickCheck Properties</span>
+<a name="line-34"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encode</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>prop_decode_encodeEq</span>
+<a name="line-36"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-37"></a>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>List</span>
+<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
+<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-comment'>-- | An LZ78 compressing 'Generator', which supports efficient 'mapReduce' operations</span>
+<a name="line-48"></a>
+<a name="line-49"></a><a name="Token"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Int</span> 
+<a name="line-50"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator-LZ78.html 60
-<a name="line-52"></a><a name="LZ78"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLZ78</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
-<a name="line-53"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>
-<a name="line-55"></a><a name="emptyDict"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span>
-<a name="line-56"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-59"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-60"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>emptyDict</span> <span class='hs-varid'>xs</span>
+<a name="line-52"></a><span class='hs-comment'>-- after using the Functor instance the encoding may no longer be minimal</span>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Token</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span>
+<a name="line-55"></a>
+<a name="line-56"></a><a name="LZ78"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLZ78</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
+<a name="line-57"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
+<a name="line-58"></a>
+<a name="line-59"></a><a name="emptyDict"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span>
+<a name="line-60"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator-LZ78.html 70
-<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>LZ78</span> <span class='hs-keyword'>where</span>
-<a name="line-63"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>fmap</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getLZ78</span>
-<a name="line-64"></a>
-<a name="line-65"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-conid'>LZ78</span> <span class='hs-keyword'>where</span>
-<a name="line-66"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-67"></a>    <span class='hs-varid'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-68"></a>    
-<a name="line-69"></a><a name="mapTo'"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-70"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-71"></a><span class='hs-definition'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>w</span><span class='hs-conop'>:</span><span class='hs-varid'>ws</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>v</span> <span class='hs-layout'>(</span><span class='hs-varid'>s</span> <span class='hs-varop'>|&gt;</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-varid'>ws</span> 
-<a name="line-72"></a>    <span class='hs-keyword'>where</span> 
-<a name="line-73"></a>        <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>index</span> <span class='hs-varid'>s</span> <span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-74"></a>
-<a name="line-75"></a><span class='hs-comment'>-- | a type-constrained 'reduce' operation</span>
-<a name="line-76"></a>    
-<a name="line-77"></a><a name="decode"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-78"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-79"></a>
-<a name="line-80"></a><span class='hs-comment'>-- | contruct an LZ78-compressed 'Generator' using a 'Map' internally, requires an instance of Ord.</span>
-<a name="line-81"></a>
-<a name="line-82"></a><a name="encode"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
-<a name="line-83"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encode'</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
-<a name="line-84"></a>
-<a name="line-85"></a><a name="encode'"></a><span class='hs-definition'>encode'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-86"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-keyglyph'>]</span>
-<a name="line-87"></a><span class='hs-definition'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-varid'>t</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
-<a name="line-88"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
-<a name="line-89"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-conop'>:</span> <span class='hs-varid'>encode'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-varid'>t</span> <span class='hs-varid'>f</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
-<a name="line-90"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
-<a name="line-91"></a>
-<a name="line-92"></a><span class='hs-comment'>-- | contruct an LZ78-compressed 'Generator' using a list internally, requires an instance of Eq.</span>
-<a name="line-93"></a>
-<a name="line-94"></a><a name="encodeEq"></a><span class='hs-definition'>encodeEq</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
-<a name="line-95"></a><span class='hs-definition'>encodeEq</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-conid'>[]</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
-<a name="line-96"></a>
-<a name="line-97"></a><a name="encodeEq'"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Int</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-98"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-keyglyph'>]</span>
-<a name="line-99"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>List</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-varid'>t</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
-<a name="line-100"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
-<a name="line-101"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-conop'>:</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>t</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
-<a name="line-102"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
-<a name="line-103"></a>
-<a name="line-104"></a><a name="prop_decode_encode"></a><span class='hs-comment'>-- | QuickCheck property: decode . encode = id</span>
-<a name="line-105"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-106"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encode</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
+<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-63"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-64"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>emptyDict</span> <span class='hs-varid'>xs</span>
+<a name="line-65"></a>
+<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>LZ78</span> <span class='hs-keyword'>where</span>
+<a name="line-67"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>fmap</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getLZ78</span>
+<a name="line-68"></a>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Foldable</span> <span class='hs-conid'>LZ78</span> <span class='hs-keyword'>where</span>
+<a name="line-70"></a>    <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-71"></a>    <span class='hs-varid'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-72"></a>    
+<a name="line-73"></a><a name="mapTo'"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-74"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-75"></a><span class='hs-definition'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>w</span><span class='hs-conop'>:</span><span class='hs-varid'>ws</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>v</span> <span class='hs-layout'>(</span><span class='hs-varid'>s</span> <span class='hs-varop'>|&gt;</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-varid'>ws</span> 
+<a name="line-76"></a>    <span class='hs-keyword'>where</span> 
+<a name="line-77"></a>        <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>index</span> <span class='hs-varid'>s</span> <span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-78"></a>
+<a name="line-79"></a><span class='hs-comment'>-- | a type-constrained 'reduce' operation</span>
+<a name="line-80"></a>    
+<a name="line-81"></a><a name="decode"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-82"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
+<a name="line-83"></a>
+<a name="line-84"></a><span class='hs-comment'>-- | contruct an LZ78-compressed 'Generator' using a 'Map' internally, requires an instance of Ord.</span>
+<a name="line-85"></a>
+<a name="line-86"></a><a name="encode"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
+<a name="line-87"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encode'</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
+<a name="line-88"></a>
+<a name="line-89"></a><a name="encode'"></a><span class='hs-definition'>encode'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-90"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-keyglyph'>]</span>
+<a name="line-91"></a><span class='hs-definition'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-varid'>t</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
+<a name="line-92"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
+<a name="line-93"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-conop'>:</span> <span class='hs-varid'>encode'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-varid'>t</span> <span class='hs-varid'>f</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
+<a name="line-94"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
+<a name="line-95"></a>
+<a name="line-96"></a><span class='hs-comment'>-- | contruct an LZ78-compressed 'Generator' using a list internally, requires an instance of Eq.</span>
+<a name="line-97"></a>
+<a name="line-98"></a><a name="encodeEq"></a><span class='hs-definition'>encodeEq</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
+<a name="line-99"></a><span class='hs-definition'>encodeEq</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-conid'>[]</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
+<a name="line-100"></a>
+<a name="line-101"></a><a name="encodeEq'"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-conid'>Int</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-102"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-keyglyph'>]</span>
+<a name="line-103"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>let</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Token</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span> <span class='hs-keyword'>in</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>List</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-varid'>t</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
+<a name="line-104"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
+<a name="line-105"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>t</span> <span class='hs-conop'>:</span> <span class='hs-varid'>encodeEq'</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>t</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
+<a name="line-106"></a><span class='hs-definition'>encodeEq'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator-LZ78.html 116
-<a name="line-108"></a><a name="prop_decode_encodeEq"></a><span class='hs-comment'>-- | QuickCheck property: decode . encodeEq = id</span>
-<a name="line-109"></a><span class='hs-definition'>prop_decode_encodeEq</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-110"></a><span class='hs-definition'>prop_decode_encodeEq</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encodeEq</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
+<a name="line-108"></a><a name="prop_decode_encode"></a><span class='hs-comment'>-- | QuickCheck property: decode . encode = id</span>
+<a name="line-109"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-110"></a><span class='hs-definition'>prop_decode_encode</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encode</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
+<a name="line-111"></a>
+<a name="line-112"></a><a name="prop_decode_encodeEq"></a><span class='hs-comment'>-- | QuickCheck property: decode . encodeEq = id</span>
+<a name="line-113"></a><span class='hs-definition'>prop_decode_encodeEq</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-114"></a><span class='hs-definition'>prop_decode_encodeEq</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encodeEq</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
hunk ./doc/html/monoids/src/Data-Monoid-Generator.html 31
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Keys</span><span class='hs-layout'>(</span><span class='hs-conid'>Keys</span><span class='hs-layout'>,</span> <span class='hs-varid'>getKeys</span><span class='hs-layout'>)</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Values</span><span class='hs-layout'>(</span><span class='hs-conid'>Values</span><span class='hs-layout'>,</span> <span class='hs-varid'>getValues</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>(</span><span class='hs-conid'>Char8</span><span class='hs-layout'>,</span> <span class='hs-varid'>getChar8</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Array</span> 
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict8</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
-<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy8</span> <span class='hs-layout'>(</span><span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
-<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
-<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
-<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
-<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
-<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
-<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
-<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-comment'>-- | minimal definition 'mapReduce' or 'mapTo'</span>
-<a name="line-59"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-61"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-62"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-63"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-64"></a>
-<a name="line-65"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-66"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-67"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-71"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-74"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-75"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-78"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-79"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-83"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>cons</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-84"></a>
-<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-86"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
-<a name="line-87"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-88"></a>
-<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-90"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-91"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
-<a name="line-94"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-95"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-99"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-100"></a>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-102"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> 
-<a name="line-107"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-108"></a>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>i</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>assocs</span>
-<a name="line-112"></a>
-<a name="line-113"></a><a name="Keys"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the keys of an indexed container</span>
-<a name="line-114"></a><a name="Keys"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Keys</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Keys</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKeys</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-115"></a>
-<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-117"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-118"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-119"></a>
-<a name="line-120"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-121"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span>
-<a name="line-122"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-123"></a>
-<a name="line-124"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-125"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>i</span>
-<a name="line-126"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>range</span> <span class='hs-varop'>.</span> <span class='hs-varid'>bounds</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-127"></a>
-<a name="line-128"></a><a name="Values"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the values contained in an indexed container</span>
-<a name="line-129"></a><a name="Values"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Values</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Values</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getValues</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-130"></a>
-<a name="line-131"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-132"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-133"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-134"></a>
-<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-136"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-137"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-138"></a>
-<a name="line-139"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-140"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
-<a name="line-141"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-142"></a>
-<a name="line-143"></a><a name="Char8"></a><span class='hs-comment'>-- | a 'Generator' transformer that treats 'Word8' as 'Char'</span>
-<a name="line-144"></a><a name="Char8"></a><span class='hs-comment'>-- This lets you use a 'ByteString' as a 'Char' source without going through a 'Monoid' transformer like 'UTF8'</span>
-<a name="line-145"></a><a name="Char8"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Char8</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char8</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getChar8</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-146"></a>
-<a name="line-147"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-148"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-149"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict8</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
-<a name="line-150"></a>
-<a name="line-151"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-152"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-153"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy8</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
-<a name="line-154"></a>
-<a name="line-155"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
-<a name="line-156"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
-<a name="line-157"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Strict.ByteString -&gt; m #-}</span>
-<a name="line-158"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Lazy.ByteString -&gt; m #-}</span>
-<a name="line-159"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (c `Reducer` m) =&gt; [c] -&gt; m #-}</span>
-<a name="line-160"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Generator (FingerTree v e), e `Reducer` m) =&gt; FingerTree v e -&gt; m #-}</span>
-<a name="line-161"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
-<a name="line-162"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (e `Reducer` m) =&gt; Seq e -&gt; m #-}</span>
-<a name="line-163"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; IntSet -&gt; m #-}</span>
-<a name="line-164"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (a `Reducer` m) =&gt; Set a -&gt; m #-}</span>
-<a name="line-165"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((Int,v) `Reducer` m) =&gt; IntMap v -&gt; m #-}</span>
-<a name="line-166"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((k,v) `Reducer` m) =&gt; Map k v -&gt; m #-}</span>
-<a name="line-167"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; Keys (IntMap v) -&gt; m #-}</span>
-<a name="line-168"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (k `Reducer` m) =&gt; Keys (Map k v) -&gt; m #-}</span>
-<a name="line-169"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (IntMap v) -&gt; m #-}</span>
-<a name="line-170"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (Map k v) -&gt; m #-}</span>
-<a name="line-171"></a><span class='hs-comment'>-- | Apply a 'Reducer' directly to the elements of a 'Generator'</span>
-<a name="line-172"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-173"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
+<a name="line-23"></a>    <span class='hs-comment'>-- * Generators</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
+<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
+<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
+<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
+<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
+<a name="line-29"></a>    <span class='hs-comment'>-- * Generator Transformers</span>
+<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Keys</span><span class='hs-layout'>(</span><span class='hs-conid'>Keys</span><span class='hs-layout'>,</span> <span class='hs-varid'>getKeys</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Values</span><span class='hs-layout'>(</span><span class='hs-conid'>Values</span><span class='hs-layout'>,</span> <span class='hs-varid'>getValues</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>(</span><span class='hs-conid'>Char8</span><span class='hs-layout'>,</span> <span class='hs-varid'>getChar8</span><span class='hs-layout'>)</span>
+<a name="line-33"></a>    <span class='hs-comment'>-- * Combinators</span>
+<a name="line-34"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span>
+<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduceWith</span>
+<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduceWith</span>
+<a name="line-37"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Array</span> 
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
+<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
+<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
+<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict8</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
+<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
+<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy8</span> <span class='hs-layout'>(</span><span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
+<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
+<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
+<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
+<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
+<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
+<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
+<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
+<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
+<a name="line-57"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
+<a name="line-58"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
+<a name="line-59"></a>
+<a name="line-60"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
+<a name="line-61"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-62"></a>
+<a name="line-63"></a><span class='hs-comment'>-- | minimal definition 'mapReduce' or 'mapTo'</span>
+<a name="line-64"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
+<a name="line-65"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
+<a name="line-66"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-67"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-68"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-69"></a>
+<a name="line-70"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
+<a name="line-71"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-72"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-73"></a>
+<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-75"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-76"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>
+<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-79"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-80"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
+<a name="line-81"></a>
+<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
+<a name="line-83"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-84"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-85"></a>
+<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-87"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-88"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>cons</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
+<a name="line-89"></a>
+<a name="line-90"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-91"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
+<a name="line-92"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-93"></a>
+<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-95"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-96"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-97"></a>
+<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
+<a name="line-99"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-100"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-101"></a>
+<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-103"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-104"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-105"></a>
+<a name="line-106"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-107"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
+<a name="line-108"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-109"></a>
+<a name="line-110"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-111"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> 
+<a name="line-112"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-113"></a>
+<a name="line-114"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-115"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>i</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span>
+<a name="line-116"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>assocs</span>
+<a name="line-117"></a>
+<a name="line-118"></a><a name="Keys"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the keys of an indexed container</span>
+<a name="line-119"></a><a name="Keys"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Keys</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Keys</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKeys</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-120"></a>
+<a name="line-121"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-122"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-123"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-124"></a>
+<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-126"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span>
+<a name="line-127"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-128"></a>
+<a name="line-129"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-130"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>i</span>
+<a name="line-131"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>range</span> <span class='hs-varop'>.</span> <span class='hs-varid'>bounds</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-132"></a>
+<a name="line-133"></a><a name="Values"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the values contained in an indexed container</span>
+<a name="line-134"></a><a name="Values"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Values</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Values</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getValues</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-135"></a>
+<a name="line-136"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-137"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-138"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-139"></a>
+<a name="line-140"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-141"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-142"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-143"></a>
+<a name="line-144"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-145"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
+<a name="line-146"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-147"></a>
+<a name="line-148"></a><a name="Char8"></a><span class='hs-comment'>-- | a 'Generator' transformer that treats 'Word8' as 'Char'</span>
+<a name="line-149"></a><a name="Char8"></a><span class='hs-comment'>-- This lets you use a 'ByteString' as a 'Char' source without going through a 'Monoid' transformer like 'UTF8'</span>
+<a name="line-150"></a><a name="Char8"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Char8</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char8</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getChar8</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-151"></a>
+<a name="line-152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-153"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-154"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict8</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
+<a name="line-155"></a>
+<a name="line-156"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-157"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-158"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy8</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
+<a name="line-159"></a>
+<a name="line-160"></a><a name="reduce"></a><span class='hs-comment'>-- | Apply a 'Reducer' directly to the elements of a 'Generator'</span>
+<a name="line-161"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-162"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
+<a name="line-163"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
+<a name="line-164"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
+<a name="line-165"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Strict.ByteString -&gt; m #-}</span>
+<a name="line-166"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Lazy.ByteString -&gt; m #-}</span>
+<a name="line-167"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (c `Reducer` m) =&gt; [c] -&gt; m #-}</span>
+<a name="line-168"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Generator (FingerTree v e), e `Reducer` m) =&gt; FingerTree v e -&gt; m #-}</span>
+<a name="line-169"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
+<a name="line-170"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (e `Reducer` m) =&gt; Seq e -&gt; m #-}</span>
+<a name="line-171"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; IntSet -&gt; m #-}</span>
+<a name="line-172"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (a `Reducer` m) =&gt; Set a -&gt; m #-}</span>
+<a name="line-173"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((Int,v) `Reducer` m) =&gt; IntMap v -&gt; m #-}</span>
+<a name="line-174"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((k,v) `Reducer` m) =&gt; Map k v -&gt; m #-}</span>
+<a name="line-175"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; Keys (IntMap v) -&gt; m #-}</span>
+<a name="line-176"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (k `Reducer` m) =&gt; Keys (Map k v) -&gt; m #-}</span>
+<a name="line-177"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (IntMap v) -&gt; m #-}</span>
+<a name="line-178"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (Map k v) -&gt; m #-}</span>
+<a name="line-179"></a>
+<a name="line-180"></a><a name="mapReduceWith"></a><span class='hs-definition'>mapReduceWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span>
+<a name="line-181"></a><span class='hs-definition'>mapReduceWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>g</span>
+<a name="line-182"></a><span class='hs-comment'>{-# INLINE mapReduceWith #-}</span>
+<a name="line-183"></a>
+<a name="line-184"></a><a name="reduceWith"></a><span class='hs-definition'>reduceWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span>
+<a name="line-185"></a><span class='hs-definition'>reduceWith</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-186"></a><span class='hs-comment'>{-# INLINE reduceWith #-}</span>
}
