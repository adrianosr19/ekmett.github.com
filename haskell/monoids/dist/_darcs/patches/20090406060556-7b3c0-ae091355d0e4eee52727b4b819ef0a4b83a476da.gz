[auto
ekmett@gmail.com**20090406060556
 Ignore-this: 6eec725e269f097800e4f16237a697ce
] {
addfile ./doc/html/monoids/Data-Ring-Semi-Kleene.html
addfile ./doc/html/monoids/src/Data-Ring-Semi-Kleene.html
hunk ./doc/html/monoids/Data-Field-VectorSpace.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Field.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator-Combinators.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator-Compressive-LZ78.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator-Compressive-RLE.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator-Free.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Generator.html 774
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AEnum"
->Enum</A
-> a =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+><A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Group-Combinators.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group-Multiplicative-Sugar.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group-Multiplicative.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group-Sugar.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Group.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Additive-Sugar.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Additive.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Applicative.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Applicative.html 692
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlt"
+>Alt</A
+> f a)</TD
+></TR
hunk ./doc/html/monoids/Data-Monoid-Categorical.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Combinators.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-FromString.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-FromString.html 317
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
+>FromString</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Instances.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Lexical-Words.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Monad.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Monad.html 779
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
hunk ./doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Multiplicative.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Ord.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer-Char.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer-With.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Reducer.html 1779
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Reducer.html#t%3AReducedBy"
+>ReducedBy</A
+> m s)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Self.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Monoid-Self.html 336
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
+>Self</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Monoid-Union.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Algebra.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Algebra.html 88
-> m) =&gt; <A HREF="#t%3AAlgebra"
->Algebra</A
+> m) =&gt; <A HREF="#t%3ARAlgebra"
+>RAlgebra</A
hunk ./doc/html/monoids/Data-Ring-Algebra.html 128
-> m) =&gt; <A NAME="t%3AAlgebra"
+> m) =&gt; <A NAME="t%3ARAlgebra"
hunk ./doc/html/monoids/Data-Ring-Algebra.html 131
->Algebra</B
+>RAlgebra</B
hunk ./doc/html/monoids/Data-Ring-Algebra.html 134
-><A HREF="src/Data-Ring-Algebra.html#Algebra"
+><A HREF="src/Data-Ring-Algebra.html#RAlgebra"
hunk ./doc/html/monoids/Data-Ring-Algebra.html 146
+><P
+>Algebra over a (near) (semi) ring.
+</P
hunk ./doc/html/monoids/Data-Ring-Algebra.html 161
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Algebra')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:RAlgebra')" ALT="show/hide"
hunk ./doc/html/monoids/Data-Ring-Algebra.html 166
-><DIV ID="i:Algebra" STYLE="display:block;"
+><DIV ID="i:RAlgebra" STYLE="display:block;"
hunk ./doc/html/monoids/Data-Ring-Algebra.html 174
-> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3AAlgebra"
->Algebra</A
+> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3ARAlgebra"
+>RAlgebra</A
hunk ./doc/html/monoids/Data-Ring-Algebra.html 188
-> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3AAlgebra"
->Algebra</A
+> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3ARAlgebra"
+>RAlgebra</A
hunk ./doc/html/monoids/Data-Ring-Boolean.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Boolean.html 289
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
+>BoolRing</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-FromNum.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-FromNum.html 285
+> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
+>FromNum</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
hunk ./doc/html/monoids/Data-Ring-ModularArithmetic.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-ModularArithmetic.html 229
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-ModularArithmetic.html#t%3AMod"
+>Mod</A
+> a s)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Ring-ModularArithmetic.html#t%3AModular"
+>Modular</A
+> s a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
+>Integral</A
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 279
+>(<A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> r, <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> r m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
+>D</A
+> s r m)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 349
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> r, <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
+> :: (<A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> r m, <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
hunk ./doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 381
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; r -&gt; <A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
+> :: <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> r m =&gt; r -&gt; <A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
hunk ./doc/html/monoids/Data-Ring-Module.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-BitSet.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-BitSet.html 572
-> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3AAlgebra"
->Algebra</A
+> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3ARAlgebra"
+>RAlgebra</A
hunk ./doc/html/monoids/Data-Ring-Semi-BitSet.html 638
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AEnum"
->Enum</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
hunk ./doc/html/monoids/Data-Ring-Semi-BitSet.html 640
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
hunk ./doc/html/monoids/Data-Ring-Semi-BitSet.html 658
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AEnum"
->Enum</A
-> a =&gt; <A HREF="Data-Generator.html#t%3AGenerator"
+><A HREF="Data-Generator.html#t%3AGenerator"
hunk ./doc/html/monoids/Data-Ring-Semi-BitSet.html 706
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-BitSet.html#t%3ABitSet"
+>BitSet</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AEnum"
+>Enum</A
hunk ./doc/html/monoids/Data-Ring-Semi-Kleene.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Ring.Semi.Kleene</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Ring-Semi-Kleene.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Ring.Semi.Kleene</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Ring-Semi.html"
+>Data.Ring.Semi</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+> <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
+>SemiRing</A
+> r =&gt; <A NAME="t%3AKleeneAlgebra"
+></A
+><B
+>KleeneAlgebra</B
+> r  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Ring-Semi-Kleene.html#KleeneAlgebra"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Astar"
+></A
+><B
+>star</B
+> :: r -&gt; r</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Ring-Semi-Kleene.html#star"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Astar"
+></A
+><B
+>star</B
+> :: <A HREF="Data-Ring-Semi-Kleene.html#t%3AKleeneAlgebra"
+>KleeneAlgebra</A
+> r =&gt; r -&gt; r</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Ring-Semi-Kleene.html#star"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 251
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monoids/Data-Ring-Semi-Natural.html 919
-> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3AAlgebra"
->Algebra</A
+> a) =&gt; <A HREF="Data-Ring-Algebra.html#t%3ARAlgebra"
+>RAlgebra</A
hunk ./doc/html/monoids/Data-Ring-Semi-Near-Trie.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 139
-> m) =&gt; <A HREF="#t%3ALeftSemiNearRing"
+> m) =&gt; <A HREF="#t%3ARingoid"
+>Ringoid</A
+> m </TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>class</SPAN
+> <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="#t%3ALeftSemiNearRing"
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 165
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="#t%3ARightSemiNearRing"
+> <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="#t%3ARightSemiNearRing"
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 207
-> m) =&gt; <A NAME="t%3ALeftSemiNearRing"
+> m) =&gt; <A NAME="t%3ARingoid"
+></A
+><B
+>Ringoid</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Ring-Semi-Near.html#Ringoid"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+><TT
+>0</TT
+> annihilates <TT
+><A HREF="Data-Monoid-Multiplicative.html#v%3Atimes"
+>times</A
+></TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Ringoid')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Ringoid" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
+>BoolRing</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> <A HREF="Data-Ring-Semi-Natural.html#t%3ANatural"
+>Natural</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> ([] m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
+>Dual</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
+>Seq</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
+>Self</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
+>FromString</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
+>Order</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
+>Tropical</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
+>FromNum</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AEnum"
+>Enum</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-BitSet.html#t%3ABitSet"
+>BitSet</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(Measured v m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (FingerTree v m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Reducer.html#t%3AReducedBy"
+>ReducedBy</A
+> m s)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Ring-ModularArithmetic.html#t%3AModular"
+>Modular</A
+> s a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
+>Integral</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-ModularArithmetic.html#t%3AMod"
+>Mod</A
+> a s)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlt"
+>Alt</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriterT"
+>WriterT</A
+> w m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriterT"
+>WriterT</A
+> w m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AStateT"
+>StateT</A
+> s m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AStateT"
+>StateT</A
+> s m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
+>ReaderT</A
+> e m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> r, <A HREF="Data-Ring-Module.html#t%3AModule"
+>Module</A
+> r m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
+>D</A
+> s r m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(Stream s m t, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (ParsecT s u m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWST"
+>RWST</A
+> r w s m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWST"
+>RWST</A
+> r w s m n)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+> <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A NAME="t%3ALeftSemiNearRing"
hunk ./doc/html/monoids/Data-Ring-Semi-Near.html 752
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ARightSemiNearRing"
+> <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> m =&gt; <A NAME="t%3ARightSemiNearRing"
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 431
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
+>Order</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
hunk ./doc/html/monoids/Data-Ring-Semi-Ord.html 677
+> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
hunk ./doc/html/monoids/Data-Ring-Semi-Tropical.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Semi-Tropical.html 452
+> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Ringoid</A
+> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
+>Tropical</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
hunk ./doc/html/monoids/Data-Ring-Semi.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring-Sugar.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/Data-Ring.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/doc-index.html 7
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework (Index)</TITLE
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework (Index)</TITLE
hunk ./doc/html/monoids/doc-index.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/doc-index.html 135
-><TD CLASS="indexentry"
->Algebra</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Algebra.html#t%3AAlgebra"
->Data.Ring.Algebra</A
-></TD
-></TR
-><TR CLASS="indexrow"
hunk ./doc/html/monoids/doc-index.html 142
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 148
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 194
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 200
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 242
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 430
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 436
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 534
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 540
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 552
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 560
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 602
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 608
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 778
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 792
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 822
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 830
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 836
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 874
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 882
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 952
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 982
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1152
+>KleeneAlgebra</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Ring-Semi-Kleene.html#t%3AKleeneAlgebra"
+>Data.Ring.Semi.Kleene</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monoids/doc-index.html 1174
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1180
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1196
->, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1244
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1252
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1282
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1360
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1374
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1516
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1540
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1616
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1660
->, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1698
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1704
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1780
+>RAlgebra</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Ring-Algebra.html#t%3ARAlgebra"
+>Data.Ring.Algebra</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monoids/doc-index.html 1884
->, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 1895
+><TD CLASS="indexentry"
+>Ringoid</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Ring-Semi-Near.html#t%3ARingoid"
+>Data.Ring.Semi.Near</A
+>, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+></TR
+><TR CLASS="indexrow"
hunk ./doc/html/monoids/doc-index.html 2008
->, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 2112
+>star</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Ring-Semi-Kleene.html#v%3Astar"
+>Data.Ring.Semi.Kleene</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monoids/doc-index.html 2142
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 2148
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Generator.Compressive.LZ78, Data.Monoid.FromString, Data.Generator.Compressive.RLE, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Generator.Combinators, Data.Generator.Free, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 2172
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group.Multiplicative, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/doc-index.html 2460
->, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
+>, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Kleene, Data.Ring.Semi.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Near.Trie, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Multiplicative, Data.Group.Sugar, Data.Group.Multiplicative.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.ModularArithmetic, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Semi.Natural, Data.Ring.Algebra, Data.Ring.Semi.BitSet, Data.Ring.Module.AutomaticDifferentiation, Data.Field, Data.Field.VectorSpace</TD
hunk ./doc/html/monoids/index.html 7
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TITLE
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TITLE
hunk ./doc/html/monoids/index.html 22
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/index.html 37
->monoids-0.1.32: Monoids, specialized containers and a general map/reduce framework</TD
+>monoids-0.1.33: Monoids, specialized containers and a general map/reduce framework</TD
hunk ./doc/html/monoids/index.html 589
+><A HREF="Data-Ring-Semi-Kleene.html"
+>Data.Ring.Semi.Kleene</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
binary ./doc/html/monoids/monoids.haddock
oldhex
*0d0cface00040000000000016ab20000000000014aedfc00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000200
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000005000000000000001d0000000000000000000000000000
*0005000000000000001e00000000000000000000000000000005000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000600
*000000000000260000000000000000000000000000000600000000000000270000000000000000
*000000000000000600000000000000280000000000000000000000000000000600000000000000
*2900000000000000000000000000000006000000000000002a0000000000000000000000000000
*0006000000000000002b00000000000000000000000000000006000000000000002c0000000000
*0000000000000000000006000000000000002d0000000000000000000000000000000600000000
*0000002e00000000000000000000000000000006000000000000002f0000000000000000000000
*000000000600000000000000300000000000000000000000000000000700000000000000310000
*000000000000000000000000000700000000000000320000000000000000000000000000000700
*000000000000330000000000000000000000000000000700000000000000340000000000000000
*000000000000000700000000000000350000000000000000000000000000000700000000000000
*360000000000000000000000000000000700000000000000370000000000000000000000000000
*000700000000000000380000000000000000000000000000000700000000000000390000000000
*0000000000000000000007000000000000003a0000000000000000000000000000000700000000
*0000003b00000000000000000000000000000007000000000000003c0000000000000000000000
*0000000008000000000000003d00000000000000000000000000000008000000000000003e0000
*0000000000000000000000000008000000000000003f0000000000000000000000000000000800
*000000000000400000000000000000000000000000000800000000000000410000000000000000
*000000000000000800000000000000420000000000000000000000000000000800000000000000
*430000000000000000000000000000000800000000000000440000000000000000000000000000
*000800000000000000450000000000000000000000000000000800000000000000460000000000
*000000000000000000000900000000000000470000000000000000000000000000000900000000
*000000480000000000000000000000000000000900000000000000490000000000000000000000
*000000000a000000000000004a0000000000000000000000000000000a000000000000004b0000
*000000000000000000000000000a000000000000004c0000000000000000000000000000000a00
*0000000000004d0000000000000000000000000000000a000000000000004e0000000000000000
*000000000000000a000000000000004f0000000000000000000000000000000b00000000000000
*500000000000000000000000000000000b00000000000000510000000000000000000000000000
*000b00000000000000520000000000000000000000000000000c00000000000000530000000000
*000000000000000000000c00000000000000540000000000000000000000000000000c00000000
*000000550000000000000000000000000000000c00000000000000560000000000000000000000
*000000000d00000000000000570000000000000000000000000000000d00000000000000580000
*000000000000000000000000000d00000000000000590000000000000000000000000000000d00
*0000000000005a0000000000000000000000000000000d000000000000005b0000000000000000
*000000000000000d000000000000005c0000000000000000000000000000000d00000000000000
*5d0000000000000000000000000000000d000000000000005e0000000000000000000000000000
*000d000000000000005f0000000000000000000000000000000d00000000000000600000000000
*000000000000000000000e00000000000000610000000000000000000000000000000e00000000
*000000620000000000000000000000000000000e00000000000000630000000000000000000000
*000000000e00000000000000640000000000000000000000000000000e00000000000000650000
*000000000000000000000000000e00000000000000660000000000000000000000000000000f00
*000000000000670000000000000000000000000000000f00000000000000680000000000000000
*000000000000001000000000000000690000000000000000000000000000001100000000000000
*6a00000000000000000000000000000011000000000000006b0000000000000000000000000000
*0011000000000000006c00000000000000000000000000000011000000000000006d0000000000
*0000000000000000000011000000000000006e0000000000000000000000000000001100000000
*0000006f0000000000000000000000000000001100000000000000700000000000000000000000
*000000001100000000000000710000000000000000000000000000001100000000000000720000
*000000000000000000000000001200000000000000730000000000000000000000000000001300
*000000000000740000000000000000000000000000001300000000000000750000000000000000
*000000000000001400000000000000760000000000000000000000000000001500000000000000
*770000000000000000000000000000001500000000000000780000000000000000000000000000
*0015000000000000007900000000000000000000000000000015000000000000007a0000000000
*0000000000000000000015000000000000007b0000000000000000000000000000001500000000
*0000007c00000000000000000000000000000015000000000000007d0000000000000000000000
*0000000015000000000000007e00000000000000000000000000000015000000000000007f0000
*000000000000000000000000001500000000000000800000000000000000000000000000001500
*000000000000810000000000000000000000000000001500000000000000820000000000000000
*000000000000001500000000000000830000000000000000000000000000001500000000000000
*840000000000000000000000000000001600000000000000850000000000000000000000000000
*001600000000000000860000000000000000000000000000001600000000000000870000000000
*000000000000000000001600000000000000880000000000000000000000000000001600000000
*0000008900000000000000000000000000000016000000000000008a0000000000000000000000
*0000000016000000000000008b00000000000000000000000000000017000000000000008c0000
*0000000000000000000000000017000000000000008d0000000000000000000000000000001700
*0000000000008e00000000000000000000000000000017000000000000008f0000000000000000
*000000000000001800000000000000900000000000000000000000000000001800000000000000
*910000000000000000000000000000001800000000000000920000000000000000000000000000
*001800000000000000930000000000000000000000000000001800000000000000940000000000
*000000000000000000001800000000000000950000000000000000000000000000001800000000
*000000960000000000000000000000000000001800000000000000970000000000000000000000
*000000001900000000000000980000000000000000000000000000001900000000000000990000
*0000000000000000000000000019000000000000009a0000000000000000000000000000001900
*0000000000009b0000000000000000000000000000001a000000000000009c0000000000000000
*000000000000001a000000000000009d0000000000000000000000000000001b00000000000000
*9e0000000000000000000000000000001b000000000000009f0000000000000000000000000000
*001b00000000000000a00000000000000000000000000000001b00000000000000a10000000000
*000000000000000000001c00000000000000a20000000000000000000000000000001c00000000
*000000a30000000000000000000000000000001c00000000000000a40000000000000000000000
*000000001d00000000000000a50000000000000000000000000000001d00000000000000a60000
*000000000000000000000000001d00000000000000a70000000000000000000000000000001e00
*000000000000a80000000000000000000000000000001f00000000000000a90000000000000000
*000000000000001f00000000000000aa0000000000000000000000000000001f00000000000000
*ab0000000000000000000000000000002000000000000000ac0000000000000000000000000000
*002000000000000000ad0000000000000000000000000000002000000000000000ae0000000000
*000000000000000000002100000000000000af0000000000000000000000000000002100000000
*000000b00000000000000000000000000000002100000000000000b10000000000000000000000
*000000002100000000000000b20000000000000000000000000000002100000000000000b30000
*000000000000000000000000002200000000000000b40000000000000000000000000000002200
*000000000000b50000000000000000000000000000002200000000000000b60000000000000000
*000000000000002200000000000000b70000000000000000000000000000002200000000000000
*b80000000000000000000000000000002300000000000000b90000000000000000000000000000
*002300000000000000ba0000000000000000000000000000002300000000000000bb0000000000
*000000000000000000002300000000000000bc0000000000000000000000000000002300000000
*000000bd0000000000000000000000000000002300000000000000be0000000000000000000000
*000000002300000000000000bf0000000000000000000000000000002300000000000000c00000
*000000000000000000000000002300000000000000c10000000000000000000000000000002300
*000000000000c20000000000000000000000000000002400000000000000c30000000000000000
*000000000000002400000000000000c40000000000000000000000000000002400000000000000
*c50000000000000000000000000000002400000000000000c60000000000000000000000000000
*002400000000000000c70000000000000000000000000000002400000000000000c80000000000
*000000000000000000002400000000000000c90000000000000000000000000000002400000000
*000000ca0000000000000000000000000000002400000000000000cb0000000000000000000000
*000000002400000000000000cc0000000000000000000000000000002500000000000000cd0000
*000000000000000000000000002500000000000000ce0000000000000000000000000000002500
*000000000000cf0000000000000000000000000000002500000000000000d00000000000000000
*000000000000002500000000000000d10000000000000000000000000000002500000000000000
*d20000000000000000000000000000002500000000000000d30000000000000000000000000000
*002500000000000000d40000000000000000000000000000002500000000000000d50000000000
*000000000000000000002500000000000000d60000000000000000000000000000002500000000
*000000d70000000000000000000000000000002500000000000000d80000000000000000000000
*000000002500000000000000d90000000000000000000000000000002500000000000000da0000
*000000000000000000000000002500000000000000db0000000000000000000000000000002500
*000000000000dc0000000000000000000000000000002500000000000000dd0000000000000000
*000000000000002500000000000000de0000000000000000000000000000002500000000000000
*df0000000000000000000000000000002500000000000000e00000000000000000000000000000
*002500000000000000e10000000000000000000000000000002600000000000000e20000000000
*000000000000000000002600000000000000e30000000000000000000000000000002700000000
*000000e40000000000000000000000000000002700000000000000e50000000000000000000000
*000000002800000000000000e60000000000000000000000000000002900000000000000e70000
*000000000000000000000000002900000000000000e80000000000000000000000000000002900
*000000000000e90000000000000000000000000000002900000000000000ea0000000000000000
*000000000000002900000000000000eb0000000000000000000000000000002900000000000000
*ec0000000000000000000000000000002900000000000000ed0000000000000000000000000000
*002900000000000000ee0000000000000000000000000000002900000000000000ef0000000000
*000000000000000000002900000000000000f00000000000000000000000000000002900000000
*000000f10000000000000000000000000000002900000000000000f20000000000000000000000
*000000002900000000000000f30000000000000000000000000000002900000000000000f40000
*000000000000000000000000002900000000000000f50000000000000000000000000000002900
*000000000000f60000000000000000000000000000002900000000000000f70000000000000000
*000000000000002a00000000000000f80000000000000000000000000000002a00000000000000
*f90000000000000000000000000000002a00000000000000fa0000000000000000000000000000
*002b00000000000000fb0000000000000000000000000000002c2e000000000000000000000000
*0000002d000108000000700000006f000000720000007400000061000000620000006c00000065
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c0110000000650000006b0000006d0000006500000074000000740000
*0040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d00
*0000000000000000000000000000000000010001140000006e0000006f0000006e0000002d0000
*00700000006f000000720000007400000061000000620000006c00000065000000200000002800
*00004d0000005000000054000000430000007300000029010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0110000000
*650000006b0000006d00000065000000740000007400000040000000670000006d000000610000
*00690000006c0000002e000000630000006f0000006d0600000000000000030103010224000000
*540000006800000069000000730000002000000074000000790000007000000065000000200000
*006d00000061000000790000002000000062000000650000002000000062000000650000007300
*000074000000200000007200000065000000610000006400000020000000690000006e00000066
*00000069000000780000002e000000200000004100000020010701020200000063000000200104
*01000000000000000003000000000000000000000000000000010202000000200000006d010206
*0000002000000069000000730000002000000061000000200104010000000000000000fc000000
*000000002e000000000000002f01020100000020010702010000006d01020b0000002000000074
*000000680000006100000074000000200000006d0000006100000070000000730000000a010210
*0000002000000076000000610000006c000000750000006500000073000000200000006f000000
*660000002000000074000000790000007000000065000000200107020100000063010209000000
*200000007400000068000000720000006f00000075000000670000006800000020010702040000
*00750000006e000000690000007401021300000020000000740000006f00000020000000760000
*00610000006c000000750000006500000073000000200000006f00000066000000200000007400
*000079000000700000006500000020010702010000006d0102040000002e000000200000004100
*00002001070201000000630102010000002d010401000000000000000003000000000000000000
*0000000000000101020a000000200000006d000000610000007900000020000000610000006c00
*0000730000006f0000000a01022900000020000000730000007500000070000000700000006c00
*000079000000200000006f0000007000000065000000720000006100000074000000690000006f
*0000006e0000007300000020000000770000006800000069000000630000006800000020000000
*7400000061000000630000006b0000002d0000006f0000006e00000020000000610000006e0000
*006f00000074000000680000006500000072000000200107020100000063010210000000200000
*00740000006f00000020000000610000006e000000200000006500000078000000690000007300
*000074000000690000006e00000067000000200104010000000000000000fc000000000000002e
*000000000000002f01020100000020010702010000006d01020d000000200000006f0000006e00
*000020000000740000006800000065000000200000006c0000006500000066000000740000000a
*010250000000200000006f00000072000000200000007200000069000000670000006800000074
*0000002e0000002000000054000000680000006500000073000000650000002000000073000000
*70000000650000006300000069000000610000006c000000690000007a00000065000000640000
*0020000000720000006500000064000000750000006300000074000000690000006f0000006e00
*000073000000200000006d0000006100000079000000200000006200000065000000200000006d
*0000006f0000007200000065000000200000006500000066000000660000006900000063000000
*69000000650000006e0000007400000020000000690000006e00000020000000730000006f0000
*006d00000065000000200000007300000063000000650000006e00000061000000720000006900
*00006f000000730000000a01022400000020000000610000006e00000064000000200000006100
*000072000000650000002000000075000000730000006500000064000000200000007700000068
*000000650000006e00000020000000610000007000000070000000720000006f00000070000000
*720000006900000061000000740000006500000020000000620000007900000020000000610000
*002001020900000047000000650000006e000000650000007200000061000000740000006f0000
*007201020c0000002e00000020000000540000006800000065000000200000006e000000610000
*006d00000065000000730000002001040100000000000000000600000000000000000000000000
*00000101020500000020000000610000006e000000640000002001040100000000000000000500
*00000000000000000000000000000101020600000020000000770000006f000000720000006b00
*00000a023d00000020000000620000007900000020000000610000006e000000610000006c0000
*006f000000670000007900000020000000740000006f0000002000000074000000680000006500
*00002000000073000000790000006e0000006f0000006e000000790000006d0000006f00000075
*00000073000000200000006f000000700000006500000072000000610000007400000069000000
*6f0000006e0000007300000020000000690000006e000000200000007400000068000000650000
*00200000006c000000690000007300000074000000200000006d0000006f0000006e0000006f00
*000069000000640000002e0000000a010301024c00000054000000680000006900000073000000
*20000000630000006c0000006100000073000000730000002000000064000000650000006c0000
*00690000006200000065000000720000006100000074000000650000006c000000790000002000
*000061000000760000006f0000006900000064000000730000002000000066000000750000006e
*0000006300000074000000690000006f0000006e000000610000006c0000002d00000064000000
*6500000070000000650000006e00000064000000650000006e0000006300000069000000650000
*00730000002c00000020000000730000006f000000200000007400000068000000610000007400
*00002000000028000000290000002000000063000000610000006e000000200000006200000065
*00000020000000610000002001070201000000630102090000002d000000520000006500000064
*000000750000006300000065000000720000000a01020900000020000000660000006f00000072
*00000020000000610000006c0000006c00000020010702010000006301024a0000002c00000020
*000000610000006e0000006400000020000000730000006f000000200000006d00000061000000
*6e0000007900000020000000630000006f0000006d0000006d0000006f0000006e000000200000
*007200000065000000640000007500000063000000650000007200000073000000200000006300
*0000610000006e00000020000000770000006f000000720000006b000000200000006f00000076
*0000006500000072000000200000006d000000750000006c000000740000006900000070000000
*6c000000650000002000000074000000790000007000000065000000730000002c000000200000
*00660000006f0000007200000020000000690000006e0000007300000074000000610000006e00
*000063000000650000002c0000000a010220000000200000004600000069000000720000007300
*00007400000020000000610000006e00000064000000200000004c000000610000007300000074
*000000200000006d00000061000000790000002000000072000000650000006400000075000000
*630000006500000020000000620000006f00000074000000680000002001070201000000610102
*0500000020000000610000006e00000064000000200104010000000000000000fd000000000000
*002e000000000000003001020100000020010702010000006101020a0000002e00000020000000
*53000000690000006e000000630000006500000020000000610000002001020900000047000000
*650000006e000000650000007200000061000000740000006f0000007201021500000020000000
*680000006100000073000000200000006100000020000000660000006900000078000000650000
*006400000020000000650000006c000000650000006d000000650000006e000000740000000a01
*025a00000020000000740000007900000070000000650000002c00000020000000740000006800
*00006500000020000000690000006e00000070000000750000007400000020000000740000006f
*000000200000007400000068000000650000002000000072000000650000006400000075000000
*6300000065000000720000002000000069000000730000002000000067000000650000006e0000
*006500000072000000610000006c0000006c00000079000000200000006b0000006e0000006f00
*0000770000006e00000020000000610000006e0000006400000020000000650000007800000074
*00000072000000610000006300000074000000690000006e000000670000002000000066000000
*720000006f0000006d00000020000000740000006800000065000000200000006d0000006f0000
*006e0000006f000000690000006400000020000000750000007300000075000000610000006c00
*00006c000000790000000a01025a00000020000000690000007300000020000000730000007500
*00006600000066000000690000006300000069000000650000006e000000740000002000000074
*0000006f0000002000000066000000690000007800000020000000740000006800000065000000
*20000000720000006500000073000000750000006c000000740000002000000074000000790000
*0070000000650000002e00000020000000430000006f0000006d00000062000000690000006e00
*000061000000740000006f00000072000000730000002000000061000000720000006500000020
*000000610000007600000061000000690000006c00000061000000620000006c00000065000000
*20000000660000006f00000072000000200000006d0000006f0000007300000074000000200000
*007300000063000000650000006e0000006100000072000000690000006f000000730000002000
*000077000000680000006500000072000000650000000a01025800000020000000740000006800
*00006900000073000000200000006900000073000000200000006e0000006f0000007400000020
*00000074000000680000006500000020000000630000006100000073000000650000002c000000
*20000000610000006e000000640000002000000074000000680000006500000020000000660000
*0065000000770000002000000072000000650000006d00000061000000690000006e0000006900
*00006e000000670000002000000063000000610000007300000065000000730000002000000063
*000000610000006e0000002000000062000000650000002000000068000000610000006e000000
*640000006c00000065000000640000002000000062000000790000002000000075000000730000
*00690000006e0000006700000020000000610000006e0000002000000065000000780000007000
*00006c00000069000000630000006900000074000000200000000a021200000020000000740000
*0079000000700000006500000020000000610000006e0000006e0000006f000000740000006100
*000074000000690000006f0000006e0000002e0000000a030102140000004d000000690000006e
*000000690000006d000000610000006c0000002000000064000000650000006600000069000000
*6e0000006900000074000000690000006f0000006e0000003a0000002001040100000000000000
*000400000000000000000000000000000001010204000000200000006f00000072000000200104
*010000000000000000050000000000000000000000000000000102010000000a00000000000000
*0403010217000000430000006f0000006e00000076000000650000007200000074000000200000
*00610000002000000076000000610000006c000000750000006500000020000000690000006e00
*0000740000006f0000002000000061000000200104010000000000000000fc000000000000002e
*000000000000002f02010000000a00000000000000050301021400000041000000700000007000
*0000650000006e0000006400000020000000610000002000000076000000610000006c00000075
*0000006500000020000000740000006f0000002000000061000000200104010000000000000000
*fc000000000000002e000000000000002f022400000020000000660000006f0000007200000020
*00000075000000730000006500000020000000690000006e000000200000006c00000065000000
*66000000740000002d000000740000006f0000002d000000720000006900000067000000680000
*007400000020000000720000006500000064000000750000006300000074000000690000006f00
*00006e0000000a0000000000000006030102170000005000000072000000650000007000000065
*0000006e0000006400000020000000610000002000000076000000610000006c00000075000000
*65000000200000006f0000006e000000740000006f000000200000006100000020010401000000
*0000000000fc000000000000002e000000000000002f022800000020000000660000006f000000
*720000002000000075000000730000006500000020000000640000007500000072000000690000
*006e000000670000002000000072000000690000006700000068000000740000002d0000007400
*00006f0000002d0000006c00000065000000660000007400000020000000720000006500000064
*000000750000006300000074000000690000006f0000006e0000000a0000000000000007030102
*080000004100000070000000700000006c00000079000000200000006100000020010401000000
*0000000000030000000000000000000000000000000101020600000020000000740000006f0000
*002000000061000000200104010000000000000000fe000000000000002e000000000000003102
*4b00000020000000630000006f0000006e0000007400000061000000690000006e000000650000
*00720000002c000000200000006100000066000000740000006500000072000000200000006d00
*0000610000007000000070000000690000006e0000006700000020000000740000006800000065
*00000020000000630000006f0000006e00000074000000650000006e0000007400000073000000
*20000000690000006e000000740000006f00000020000000610000002000000073000000750000
*00690000007400000061000000620000006c0000006500000020000000660000006f0000007200
*00006d00000020000000660000006f000000720000002000000072000000650000006400000075
*0000006300000074000000690000006f0000006e0000002e0000000a0000000000000008030102
*080000004100000070000000700000006c00000079000000200000006100000020010401000000
*0000000000030000000000000000000000000000000101020600000020000000740000006f0000
*002000000061000000200104010000000000000000fe000000000000002e000000000000003101
*021e000000200000006d000000610000007000000070000000690000006e000000670000002000
*00006500000061000000630000006800000020000000650000006c000000650000006d00000065
*0000006e00000074000000200000007400000068000000720000006f0000007500000067000000
*68000000200104010000000000000000040000000000000000000000000000000102010000000a
*2700000000000000ff0000000000000100000000000000010100000000000000fc000000000000
*010200000000000001030000000000000104000000000000010500000000000001060000000000
*00010700000000000001080000000000000109000000000000010a000000000000010b00000000
*0000010c000000000000010d000000000000010e000000000000010f0000000000000110000000
*000000011100000000000001120000000000000113000000000000011400000000000001150000
*000000000116000000000000011700000000000001180000000000000119000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*000000000000000600000000000000070000000000000008000000000000000900000000000000
*0a0b00000000000000030000000000000004000000000000000500000000000000060000000000
*0000070000000000000008000000000000000a0000000000000009000000000000000000000000
*000000010000000000000002000000000000000000000000000000020001140000006e0000006f
*0000006e0000002d000000700000006f000000720000007400000061000000620000006c000000
*6500000020000000280000004d0000005000000054000000430000007300000029010c00000065
*00000078000000700000006500000072000000690000006d000000650000006e00000074000000
*610000006c0110000000650000006b0000006d0000006500000074000000740000004000000067
*0000006d00000061000000690000006c0000002e000000630000006f0000006d01000000000000
*000b0301022200000050000000720000006f000000760000006900000064000000650000007300
*00002000000061000000200000006d000000650000006300000068000000610000006e00000069
*000000730000006d00000020000000660000006f00000072000000200000007400000068000000
*650000002000000055000000540000004600000038000000200104010000000000000000fc0000
*00000000002e000000000000002f023600000020000000740000006f0000002000000072000000
*65000000700000006f000000720000007400000020000000690000006e00000076000000610000
*006c00000069000000640000002000000063000000680000006100000072000000610000006300
*00007400000065000000720000007300000020000000740000006f000000200000006f0000006e
*00000065000000200000006f00000072000000200000006d0000006f0000007200000065000000
*200000006d0000006f0000006e0000006f0000006900000064000000730000002e0000000a2a00
*000000000000ff0000000000000100000000000000010100000000000000fc0000000000000102
*000000000000010300000000000001040000000000000105000000000000010600000000000001
*0700000000000001080000000000000109000000000000010a000000000000010b000000000000
*010c000000000000010d000000000000010e000000000000010f00000000000001100000000000
*000111000000000000011200000000000001130000000000000114000000000000011500000000
*000001160000000000000117000000000000011800000000000001190000000000000000000000
*000000000100000000000000020000000000000003000000000000000400000000000000050000
*000000000006000000000000000700000000000000080000000000000009000000000000000a00
*0000000000000b000000000000000c000000000000000d03000000000000000b00000000000000
*0d000000000000000c000000000000000000000000000000030001140000006e0000006f000000
*6e0000002d000000700000006f000000720000007400000061000000620000006c000000650000
*0020000000280000004d0000005000000054000000430000007300000029010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c0110000000650000006b0000006d0000006500000074000000740000004000000067000000
*6d00000061000000690000006c0000002e000000630000006f0000006d002c00000000000000ff
*0000000000000100000000000000010100000000000000fc000000000000010200000000000001
*030000000000000104000000000000010500000000000001060000000000000107000000000000
*01080000000000000109000000000000010a000000000000010b000000000000010c0000000000
*00010d000000000000010e000000000000010f0000000000000110000000000000011100000000
*000001120000000000000113000000000000011400000000000001150000000000000116000000
*000000011700000000000001180000000000000119000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000005000000000000000600
*0000000000000700000000000000080000000000000009000000000000000a000000000000000b
*000000000000000c000000000000000d000000000000000e000000000000000f02000000000000
*000e000000000000000f000000000000000000000000000000040001140000006e0000006f0000
*006e0000002d000000700000006f000000720000007400000061000000620000006c0000006500
*000020000000280000004d0000005000000054000000430000007300000029010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d010000000000000010
*03010203000000490000006600000020010702010000006d010206000000200000006900000073
*00000020000000610000002001070201000000630102010000002d010507000000520000006500
*0000640000007500000063000000650000007201020c0000002c00000020000000740000006800
*0000650000006e000000200000006d000000200000006900000073000000200107010203000000
*280000006300000020010402000000000000000011000000000000000000000000000000040000
*00000000000010000000000000000000000000000000040203000000200000006d000000290102
*010000002d01050700000052000000650000006400000075000000630000006500000072010201
*0000000a0102280000002000000020000000200000005400000068000000690000007300000020
*00000063000000610000006e000000200000006200000065000000200000007500000073000000
*650000006400000020000000740000006f00000020000000710000007500000069000000630000
*006b0000006c000000790000002000000073000000650000006c00000065000000630000007400
*000020000000610000002001050700000052000000650000006400000075000000630000006500
*00007201020e00000020000000660000006f000000720000002000000075000000730000006500
*000020000000610000007300000020000000610000002001040101000000000000011a01020100
*00000a01020300000020000000200000002001040101000000000000011b02020000002e000000
*0a2a00000000000000ff0000000000000100000000000000010100000000000000fc0000000000
*000102000000000000010300000000000001040000000000000105000000000000010600000000
*0000010700000000000001080000000000000109000000000000010a000000000000010b000000
*000000010c000000000000010d000000000000010e000000000000010f00000000000001100000
*000000000111000000000000011200000000000001130000000000000114000000000000011500
*000000000001160000000000000117000000000000011800000000000001190000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*050000000000000006000000000000000700000000000000080000000000000009000000000000
*000a00000000000000100000000000000011000000000000001203000000000000001000000000
*000000110000000000000012000000000000000000000000000000050000000004000000000000
*001303010204000000540000006800000065000000200104010000000000000000fc0000000000
*00002e000000000000002f01020100000020010701020100000028010201000000270102110000
*00750000006e000000690000006f0000006e000000570000006900000074000000680000002000
*00006d000000610000007000000070000000650000006e00000064010201000000270102010000
*002c01040100000000000000001d00000000000000000000000000000005020100000029022100
*000020000000660000006f0000007200000020000000630000006f0000006e0000007400000061
*000000690000006e0000006500000072000000730000002000000066000000750000006c000000
*6c000000200000006f00000066000000200000006d0000006f0000006e0000006f000000690000
*0064000000730000002e0000000a000000000000001603024d000000500000006f0000006c0000
*00790000006d0000006f0000007200000070000000680000006900000063000000200000006300
*00006f0000006e0000007400000061000000690000006e00000065000000720000007300000020
*000000740000006800000061000000740000002000000077000000650000002000000063000000
*610000006e00000020000000730000007500000070000000700000006c00000079000000200000
*00610000006e000000200000006f00000070000000650000007200000061000000740000006900
*00006f0000006e00000020000000740000006f0000002000000068000000610000006e00000064
*0000006c0000006500000020000000750000006e000000690000006f0000006e00000073000000
*20000000770000006900000074000000680000000a000000000000001903010204000000540000
*006800000065000000200104010000000000000000fc000000000000002e000000000000002f01
*02010000002001070102010000002801040100000000000000001e000000000000000000000000
*000000050102010000002c01040100000000000000001d00000000000000000000000000000005
*02010000002902010000000a000000000000001c0301021d000000410000002000000043000000
*6f0000006e0000007400000061000000690000006e000000650000007200000020000000730000
*0075000000690000007400000061000000620000006c0000006500000020000000660000006f00
*000072000000200000007400000068000000650000002001040200000000000000001a00000000
*000000000000000000000005000000000000000019000000000000000000000000000000050102
*01000000200104010000000000000000fc000000000000002e000000000000002f02010000000a
*3300000000000000ff0000000000000100000000000000010100000000000000fc000000000000
*010200000000000001030000000000000104000000000000010500000000000001060000000000
*00010700000000000001080000000000000109000000000000010a000000000000010b00000000
*0000010c000000000000010d000000000000010e000000000000010f0000000000000110000000
*000000011100000000000001120000000000000113000000000000011400000000000001150000
*000000000116000000000000011700000000000001180000000000000119000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*000000000000000600000000000000070000000000000008000000000000000900000000000000
*0a0000000000000013000000000000001400000000000000150000000000000016000000000000
*001700000000000000180000000000000019000000000000001a000000000000001b0000000000
*00001c000000000000001d000000000000001e0c000000000000001c000000000000001d000000
*000000001e0000000000000019000000000000001a000000000000001b00000000000000160000
*000000000018000000000000001700000000000000130000000000000014000000000000001500
*000000000000000000000000000006000108000000700000006f00000072000000740000006100
*0000620000006c00000065010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d05000000000000001f0301020200000061000000200104010000000000
*000000280000000000000000000000000000000601021900000020000000740000007200000061
*0000006e00000073000000660000006f000000720000006d000000650000007200000020000000
*740000006800000061000000740000002000000074000000720000006500000061000000740000
*00730000002001040100000000000000011c000000000000002e00000000000000320102040000
*002000000061000000730000002001040100000000000000011d00000000000000330000000000
*0000340102010000000a0102150000002000000054000000680000006900000073000000200000
*006c00000065000000740000007300000020000000790000006f00000075000000200000007500
*0000730000006500000020000000610000002001020a0000004200000079000000740000006500
*0000530000007400000072000000690000006e0000006701020600000020000000610000007300
*000020000000610000002001040100000000000000011d00000000000000330000000000000034
*01022000000020000000730000006f000000750000007200000063000000650000002000000077
*0000006900000074000000680000006f000000750000007400000020000000670000006f000000
*690000006e00000067000000200000007400000068000000720000006f00000075000000670000
*00680000002000000061000000200104010000000000000000fc000000000000002e0000000000
*00002f010212000000200000007400000072000000610000006e00000073000000660000006f00
*0000720000006d0000006500000072000000200000006c000000690000006b0000006500000020
*0102040000005500000054000000460000003802010000000a0000000000000022030102020000
*00610000002001040100000000000000002800000000000000000000000000000006024d000000
*200000007400000072000000610000006e00000073000000660000006f000000720000006d0000
*006500000072000000200000007400000068000000610000007400000020000000610000007300
*00006b00000073000000200000006f0000006e0000006c0000007900000020000000660000006f
*00000072000000200000007400000068000000650000002000000076000000610000006c000000
*75000000650000007300000020000000630000006f0000006e0000007400000061000000690000
*006e000000650000006400000020000000690000006e00000020000000610000006e0000002000
*0000690000006e000000640000006500000078000000650000006400000020000000630000006f
*0000006e0000007400000061000000690000006e00000065000000720000000a00000000000000
*250301020200000061000000200104010000000000000000280000000000000000000000000000
*00060241000000200000007400000072000000610000006e00000073000000660000006f000000
*720000006d00000065000000720000002000000074000000680000006100000074000000200000
*0061000000730000006b00000073000000200000006f0000006e0000006c000000790000002000
*0000660000006f0000007200000020000000740000006800000065000000200000006b00000065
*0000007900000073000000200000006f0000006600000020000000610000006e00000020000000
*690000006e000000640000006500000078000000650000006400000020000000630000006f0000
*006e0000007400000061000000690000006e00000065000000720000000a000000000000002803
*0102130000006d000000690000006e000000690000006d000000610000006c0000002000000064
*0000006500000066000000690000006e0000006900000074000000690000006f0000006e000000
*2001040100000000000000002a0000000000000000000000000000000601020400000020000000
*6f000000720000002001040100000000000000002b000000000000000000000000000000060201
*0000000a000000000000002d030102080000004100000070000000700000006c00000079000000
*200000006100000020010401000000000000000003000000000000000000000000000000010102
*1f000000200000006400000069000000720000006500000063000000740000006c000000790000
*0020000000740000006f0000002000000074000000680000006500000020000000650000006c00
*0000650000006d000000650000006e0000007400000073000000200000006f0000006600000020
*000000610000002001040100000000000000002800000000000000000000000000000006020100
*00000a3800000000000000ff0000000000000100000000000000010100000000000000fc000000
*000000010200000000000001030000000000000104000000000000010500000000000001060000
*00000000010700000000000001080000000000000109000000000000010a000000000000010b00
*0000000000010c000000000000010d000000000000010e000000000000010f0000000000000110
*000000000000011100000000000001120000000000000113000000000000011400000000000001
*150000000000000116000000000000011700000000000001180000000000000119000000000000
*000000000000000000010000000000000002000000000000000300000000000000040000000000
*000005000000000000000600000000000000070000000000000008000000000000000900000000
*0000000a000000000000001f000000000000002000000000000000210000000000000022000000
*000000002300000000000000240000000000000025000000000000002600000000000000270000
*0000000000280000000000000029000000000000002a000000000000002b000000000000002c00
*0000000000002d000000000000002e000000000000002f11000000000000002800000000000000
*29000000000000002a000000000000002b000000000000002c0000000000000025000000000000
*002600000000000000270000000000000022000000000000002300000000000000240000000000
*00001f00000000000000200000000000000021000000000000002d000000000000002e00000000
*0000002f000000000000000000000000000000070001270000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*280000004d000000500000005400000043000000730000002c000000200000004f000000760000
*0065000000720000006c0000006f00000061000000640000006500000064000000530000007400
*000072000000690000006e000000670000007300000029010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0110000000
*650000006b0000006d00000065000000740000007400000040000000670000006d000000610000
*00690000006c0000002e000000630000006f0000006d0600000000000000300301020200000041
*000000200104010000000000000000fc000000000000002e000000000000002f01023a00000020
*0000006f0000006600000020000000700000006100000072000000740000006900000061000000
*6c00000020000000690000006e000000660000006f000000720000006d00000061000000740000
*00690000006f0000006e0000002000000061000000620000006f00000075000000740000002000
*00006c0000006f000000630000006100000074000000690000006f0000006e0000007300000020
*000000690000006e000000200000006100000020000000730000006f0000007500000072000000
*63000000650000002000000066000000690000006c000000650000002e0000000a025f00000020
*000000200000002000000054000000680000006900000073000000200000006900000073000000
*20000000700000006f0000006c000000790000006d0000006f0000007200000070000000680000
*00690000006300000020000000690000006e000000200000007400000068000000650000002000
*00006b000000690000006e00000064000000200000006f0000006600000020000000690000006e
*000000660000006f000000720000006d0000006100000074000000690000006f0000006e000000
*20000000790000006f000000750000002000000077000000610000006e00000074000000200000
*00740000006f000000200000006d00000061000000690000006e00000074000000610000006900
*00006e0000002000000061000000620000006f0000007500000074000000200000006500000061
*000000630000006800000020000000730000006f00000075000000720000006300000065000000
*2000000066000000690000006c000000650000002e0000000a000000000000003703023f000000
*430000006f0000006d000000700000007500000074000000650000002000000074000000680000
*0065000000200000006c0000006f000000630000006100000074000000690000006f0000006e00
*0000200000006f0000006600000020000000740000006800000065000000200000006e00000065
*0000007800000074000000200000007300000074000000610000006e0000006400000061000000
*720000006400000020000000380000002d000000630000006f0000006c000000750000006d0000
*006e00000020000000610000006c00000069000000670000006e00000065000000640000002000
*00007400000061000000620000000a0000000000000038030102350000006c0000006900000066
*0000007400000020000000690000006e000000660000006f000000720000006d00000061000000
*74000000690000006f0000006e0000002000000061000000620000006f00000075000000740000
*00200000006100000020000000730000006f000000750000007200000063000000650000002000
*000066000000690000006c0000006500000020000000690000006e000000740000006f00000020
*00000061000000200000007300000074000000610000007200000074000000690000006e000000
*670000002001040100000000000000003000000000000000000000000000000007020f00000020
*000000660000006f00000072000000200000007400000068000000610000007400000020000000
*66000000690000006c000000650000000a000000000000003903026a0000006500000078000000
*740000007200000061000000630000007400000020000000700000006100000072000000740000
*0069000000610000006c00000020000000690000006e000000660000006f000000720000006d00
*00006100000074000000690000006f0000006e0000002000000061000000620000006f00000075
*000000740000002000000074000000680000006500000020000000630000007500000072000000
*72000000650000006e0000007400000020000000630000006f0000006c000000750000006d0000
*006e0000002c000000200000006500000076000000650000006e00000020000000690000006e00
*00002000000074000000680000006500000020000000610000006200000073000000650000006e
*0000006300000065000000200000006f00000066000000200000006b0000006e0000006f000000
*770000006c00000065000000640000006700000065000000200000006f00000066000000200000
*0074000000680000006500000020000000730000006f0000007500000072000000630000006500
*00002000000066000000690000006c000000650000000a000000000000003a0302460000006500
*000078000000740000007200000061000000630000007400000020000000700000006100000072
*0000007400000069000000610000006c00000020000000690000006e000000660000006f000000
*720000006d0000006100000074000000690000006f0000006e0000002000000061000000620000
*006f00000075000000740000002000000074000000680000006500000020000000630000007500
*00007200000072000000650000006e00000074000000200000006c000000690000006e00000065
*000000200000006e000000750000006d0000006200000065000000720000002000000069000000
*6600000020000000700000006f000000730000007300000069000000620000006c000000650000
*000a000000000000003b03023c0000006500000078000000740000007200000061000000630000
*007400000020000000740000006800000065000000200000007300000074000000610000006e00
*00006400000061000000720000006400000020000000660000006f000000720000006d00000061
*0000007400000020000000660000006f0000007200000020000000610000006e00000020000000
*6100000062000000730000006f0000006c00000075000000740000006500000020000000730000
*006f0000007500000072000000630000006500000020000000700000006f000000730000006900
*000074000000690000006f0000006e0000000a3600000000000000ff0000000000000100000000
*000000010100000000000000fc0000000000000102000000000000010300000000000001040000
*000000000105000000000000010600000000000001070000000000000108000000000000010900
*0000000000010a000000000000010b000000000000010c000000000000010d000000000000010e
*000000000000010f00000000000001100000000000000111000000000000011200000000000001
*130000000000000114000000000000011500000000000001160000000000000117000000000000
*011800000000000001190000000000000000000000000000000100000000000000020000000000
*000003000000000000000400000000000000050000000000000006000000000000000700000000
*000000080000000000000009000000000000000a000000000000000b000000000000000c000000
*000000000d00000000000000300000000000000031000000000000003200000000000000330000
*000000000034000000000000003500000000000000360000000000000037000000000000003800
*00000000000039000000000000003a000000000000003b0c000000000000003700000000000000
*300000000000000034000000000000003300000000000000320000000000000031000000000000
*00360000000000000035000000000000003a000000000000003900000000000000380000000000
*00003b000000000000000000000000000000080001270000006e0000006f0000006e0000002d00
*0000700000006f000000720000007400000061000000620000006c000000650000002000000028
*0000004d000000500000005400000043000000730000002c000000200000004f00000076000000
*65000000720000006c0000006f0000006100000064000000650000006400000053000000740000
*0072000000690000006e000000670000007300000029010c000000650000007800000070000000
*6500000072000000690000006d000000650000006e00000074000000610000006c011000000065
*0000006b0000006d00000065000000740000007400000040000000670000006d00000061000000
*690000006c0000002e000000630000006f0000006d08000000000000003c030102020000004100
*00002001040100000000000000000b000000000000000000000000000000020226000000200000
*007400000072000000610000006e00000073000000660000006f000000720000006d0000006500
*000072000000200000007400000068000000610000007400000020000000730000007400000072
*000000690000007000000073000000200000006f0000007500000074000000200000006e000000
*65000000770000006c000000690000006e00000065000000730000000a000000000000003e0301
*0202000000410000002001040100000000000000000b0000000000000000000000000000000201
*0236000000200000007400000072000000610000006e00000073000000660000006f0000007200
*00006d000000650000007200000020000000740000006800000061000000740000002000000073
*0000007400000072000000690000007000000073000000200000006f0000007500000074000000
*20000000610000006e000000790000002000000063000000680000006100000072000000610000
*0063000000740000006500000072000000200000006d0000006100000074000000630000006800
*000065000000640000002000000062000000790000002001040100000000000000011e00000000
*0000002e000000000000003502010000000a000000000000004003010202000000410000002001
*040100000000000000000b0000000000000000000000000000000201021b000000200000007400
*000072000000610000006e00000073000000660000006f000000720000006d0000006500000072
*000000200000007400000068000000610000007400000020000000620000007200000065000000
*610000006b0000007300000020000000610000002001040100000000000000011d000000000000
*003300000000000000340102010000002001040100000000000000002800000000000000000000
*00000000000601022000000020000000690000006e000000740000006f00000020000000640000
*00690000007300000074000000690000006e0000006300000074000000200000006c0000006900
*00006e00000065000000730000002c000000200000006600000065000000650000006400000069
*0000006e0000006700000020000000610000002001040100000000000000011d00000000000000
*330000000000000034010201000000200104010000000000000000030000000000000000000000
*000000000102140000002000000065000000610000006300000068000000200000006c00000069
*0000006e0000006500000020000000690000006e00000020000000740000007500000072000000
*6e0000002e0000000a000000000000004103010202000000410000002001040100000000000000
*000b0000000000000000000000000000000201021b000000200000007400000072000000610000
*006e00000073000000660000006f000000720000006d0000006500000072000000200000007400
*000068000000610000007400000020000000620000007200000065000000610000006b00000073
*00000020000000610000002001040100000000000000011d000000000000003300000000000000
*340102010000002001040100000000000000002800000000000000000000000000000006010220
*00000020000000690000006e000000740000006f00000020000000640000006900000073000000
*74000000690000006e000000630000007400000020000000770000006f00000072000000640000
*00730000002c0000002000000066000000650000006500000064000000690000006e0000006700
*000020000000610000002001040100000000000000011d00000000000000330000000000000034
*010201000000200104010000000000000000030000000000000000000000000000000102130000
*002000000065000000610000006300000068000000200000006c000000690000006e0000006500
*000020000000690000006e000000200000007400000075000000720000006e0000000a00000000
*000000420301022300000045000000780000007400000072000000610000006300000074000000
*20000000740000006800000065000000200000006d000000610000007400000063000000680000
*00650000006400000020000000770000006f000000720000006400000073000000200000006600
*0000720000006f0000006d00000020000000740000006800000065000000200104010000000000
*0000004100000000000000000000000000000008010201000000200104010000000000000000fc
*000000000000002e000000000000002f02010000000a0000000000000043030102230000004500
*000078000000740000007200000061000000630000007400000020000000740000006800000065
*000000200000006d00000061000000740000006300000068000000650000006400000020000000
*6c000000690000006e00000065000000730000002000000066000000720000006f0000006d0000
*002000000074000000680000006500000020010401000000000000000040000000000000000000
*00000000000008010201000000200104010000000000000000fc000000000000002e0000000000
*00002f02010000000a000000000000004403025e0000005500000074000000690000006c000000
*6900000074000000790000002000000066000000750000006e0000006300000074000000690000
*006f0000006e00000020000000740000006f000000200000006500000078000000740000007200
*000061000000630000007400000020000000770000006f00000072000000640000007300000020
*0000007500000073000000690000006e0000006700000020000000610000006300000063000000
*750000006d000000750000006c00000061000000740000006f000000720000002c000000200000
*00690000006e000000730000006900000064000000650000002d000000770000006f0000007200
*0000640000002c00000020000000610000006e0000006400000020000000750000006e00000074
*000000690000006c0000002d0000006e0000006500000078000000740000002d00000077000000
*6f0000007200000064000000200000006d0000006f0000006e0000006f00000069000000640000
*00730000000a000000000000004503025e0000005500000074000000690000006c000000690000
*0074000000790000002000000066000000750000006e0000006300000074000000690000006f00
*00006e00000020000000740000006f000000200000006500000078000000740000007200000061
*0000006300000074000000200000006c000000690000006e000000650000007300000020000000
*7500000073000000690000006e0000006700000020000000610000006300000063000000750000
*006d000000750000006c00000061000000740000006f000000720000002c000000200000006900
*00006e000000730000006900000064000000650000002d0000006c000000690000006e00000065
*0000002c00000020000000610000006e0000006400000020000000750000006e00000074000000
*690000006c0000002d0000006e0000006500000078000000740000002d0000006c000000690000
*006e00000065000000200000006d0000006f0000006e0000006f00000069000000640000007300
*00000a3400000000000000ff0000000000000100000000000000010100000000000000fc000000
*000000010200000000000001030000000000000104000000000000010500000000000001060000
*00000000010700000000000001080000000000000109000000000000010a000000000000010b00
*0000000000010c000000000000010d000000000000010e000000000000010f0000000000000110
*000000000000011100000000000001120000000000000113000000000000011400000000000001
*150000000000000116000000000000011700000000000001180000000000000119000000000000
*000000000000000000010000000000000002000000000000000300000000000000040000000000
*000005000000000000000600000000000000070000000000000008000000000000000900000000
*0000000a000000000000000b000000000000000c000000000000000d000000000000003c000000
*000000003d000000000000003e000000000000003f000000000000004000000000000000410000
*0000000000420000000000000043000000000000004400000000000000450a0000000000000041
*0000000000000042000000000000003e000000000000003f000000000000004400000000000000
*400000000000000043000000000000003c000000000000003d0000000000000045000000000000
*00000000000000000009000108000000700000006f000000720000007400000061000000620000
*006c00000065010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c0110000000650000006b0000006d0000006500000074
*0000007400000040000000670000006d00000061000000690000006c0000002e00000063000000
*6f0000006d002a00000000000000ff0000000000000100000000000000010100000000000000fc
*000000000000010200000000000001030000000000000104000000000000010500000000000001
*06000000000000010700000000000001080000000000000109000000000000010a000000000000
*010b000000000000010c000000000000010d000000000000010e000000000000010f0000000000
*000110000000000000011100000000000001120000000000000113000000000000011400000000
*000001150000000000000116000000000000011700000000000001180000000000000119000000
*000000000000000000000000010000000000000002000000000000000300000000000000040000
*000000000005000000000000000600000000000000070000000000000008000000000000000900
*0000000000000a0000000000000046000000000000004700000000000000480300000000000000
*46000000000000004700000000000000480000000000000000000000000000000a000108000000
*700000006f000000720000007400000061000000620000006c00000065010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c0110000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d06000000000000011f0301
*0214000000410000006e000000200000004c0000005a0000003700000038000000200000006300
*00006f0000006d0000007000000072000000650000007300000073000000690000006e00000067
*000000200104010000000000000000280000000000000000000000000000000601021b0000002c
*000000200000007700000068000000690000006300000068000000200000007300000075000000
*70000000700000006f000000720000007400000073000000200000006500000066000000660000
*00690000006300000069000000650000006e000000740000002001040100000000000000002a00
*000000000000000000000000000006020c000000200000006f0000007000000065000000720000
*006100000074000000690000006f0000006e000000730000000a000000000000004a0301021300
*00006100000020000000740000007900000070000000650000002d000000630000006f0000006e
*00000073000000740000007200000061000000690000006e000000650000006400000020010401
*00000000000000002d00000000000000000000000000000006020b000000200000006f00000070
*00000065000000720000006100000074000000690000006f0000006e0000000a00000000000000
*4b0301021c000000630000006f0000006e00000074000000720000007500000063000000740000
*0020000000610000006e000000200000004c0000005a00000037000000380000002d0000006300
*00006f0000006d0000007000000072000000650000007300000073000000650000006400000020
*010401000000000000000028000000000000000000000000000000060102090000002000000075
*00000073000000690000006e000000670000002000000061000000200104010000000000000001
*2000000000000000360000000000000037022a00000020000000690000006e0000007400000065
*000000720000006e000000610000006c0000006c000000790000002c0000002000000072000000
*6500000071000000750000006900000072000000650000007300000020000000610000006e0000
*0020000000690000006e0000007300000074000000610000006e00000063000000650000002000
*00006f00000066000000200000004f00000072000000640000002e0000000a000000000000004c
*0301021c000000630000006f0000006e0000007400000072000000750000006300000074000000
*20000000610000006e000000200000004c0000005a00000037000000380000002d000000630000
*006f0000006d000000700000007200000065000000730000007300000065000000640000002001
*040100000000000000002800000000000000000000000000000006023600000020000000750000
*0073000000690000006e000000670000002000000061000000200000006c000000690000007300
*00007400000020000000690000006e0000007400000065000000720000006e000000610000006c
*0000006c000000790000002c000000200000007200000065000000710000007500000069000000
*72000000650000007300000020000000610000006e00000020000000690000006e000000730000
*0074000000610000006e0000006300000065000000200000006f00000066000000200000004500
*0000710000002e0000000a000000000000004d03022a0000005100000075000000690000006300
*00006b000000430000006800000065000000630000006b0000002000000070000000720000006f
*00000070000000650000007200000074000000790000003a000000200000006400000065000000
*630000006f0000006400000065000000200000002e00000020000000650000006e000000630000
*006f0000006400000065000000200000003d0000002000000069000000640000000a0000000000
*00004e03022c000000510000007500000069000000630000006b00000043000000680000006500
*0000630000006b0000002000000070000000720000006f00000070000000650000007200000074
*000000790000003a000000200000006400000065000000630000006f0000006400000065000000
*200000002e00000020000000650000006e000000630000006f0000006400000065000000450000
*0071000000200000003d0000002000000069000000640000000a3e00000000000000ff00000000
*00000100000000000000010100000000000000fc00000000000001020000000000000103000000
*000000010400000000000001050000000000000106000000000000010700000000000001080000
*000000000109000000000000010a000000000000010b000000000000010c000000000000010d00
*0000000000010e000000000000010f000000000000011000000000000001110000000000000112
*000000000000011300000000000001140000000000000115000000000000011600000000000001
*170000000000000118000000000000011900000000000000000000000000000001000000000000
*000200000000000000030000000000000004000000000000000500000000000000060000000000
*00000700000000000000080000000000000009000000000000000a000000000000001f00000000
*000000200000000000000021000000000000002200000000000000230000000000000024000000
*000000002500000000000000260000000000000027000000000000002800000000000000290000
*00000000002a000000000000002b000000000000002c000000000000002d000000000000002e00
*0000000000002f0000000000000049000000000000004a000000000000004b000000000000004c
*000000000000004d000000000000004e060000000000000049000000000000004a000000000000
*004b000000000000004c000000000000004d000000000000004e00000000000000000000000000
*00000b0001280000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c0000006500000020000000280000006f000000760000006500000072
*0000006c0000006f00000061000000640000006500000064000000200000007300000074000000
*72000000690000006e00000067000000730000002c000000200000004d00000050000000540000
*00430000007300000029010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c0110000000650000006b0000006d00000065
*000000740000007400000040000000670000006d00000061000000690000006c0000002e000000
*630000006f0000006d002a00000000000000ff0000000000000100000000000000010100000000
*000000fc0000000000000102000000000000010300000000000001040000000000000105000000
*0000000106000000000000010700000000000001080000000000000109000000000000010a0000
*00000000010b000000000000010c000000000000010d000000000000010e000000000000010f00
*000000000001100000000000000111000000000000011200000000000001130000000000000114
*000000000000011500000000000001160000000000000117000000000000011800000000000001
*190000000000000000000000000000000100000000000000020000000000000003000000000000
*000400000000000000050000000000000006000000000000000700000000000000080000000000
*000009000000000000000a000000000000004f0000000000000050000000000000005103000000
*000000004f000000000000005000000000000000510000000000000000000000000000000c0001
*230000006e0000006f0000006e0000002d000000700000006f0000007200000074000000610000
*00620000006c000000650000002000000028000000740000007900000070000000650000002000
*000066000000610000006d000000690000006c0000006900000065000000730000002c00000020
*0000004d0000005000000054000000430000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d03000000000000005203010214000000
*410000002000000067000000650000006e0000006500000072000000610000006c000000690000
*007a0000006100000074000000690000006f0000006e000000200000006f000000660000002001
*020f000000440000006100000074000000610000002e0000004c00000069000000730000007400
*00002e0000006300000079000000630000006c0000006501021100000020000000740000006f00
*000020000000610000006e00000020000000610000007200000062000000690000007400000072
*000000610000007200000079000000200104010000000000000000fc000000000000002e000000
*000000002f02390000002e000000200000004d0000006100000079000000200000006600000061
*000000690000006c00000020000000740000006f00000020000000740000006500000072000000
*6d000000690000006e00000061000000740000006500000020000000660000006f000000720000
*0020000000730000006f0000006d000000650000002000000076000000610000006c0000007500
*0000650000007300000020000000690000006e00000020000000730000006f0000006d00000065
*000000200000006d0000006f0000006e0000006f0000006900000064000000730000002e000000
*0a000000000000005303010214000000410000002000000067000000650000006e000000650000
*0072000000610000006c000000690000007a0000006100000074000000690000006f0000006e00
*0000200000006f0000006600000020010210000000440000006100000074000000610000002e00
*00004c0000006900000073000000740000002e0000007200000065000000700000006500000061
*0000007401021100000020000000740000006f00000020000000610000006e0000002000000061
*000000720000006200000069000000740000007200000061000000720000007900000020010401
*0000000000000000fc000000000000002e000000000000002f02390000002e000000200000004d
*0000006100000079000000200000006600000061000000690000006c0000002000000074000000
*6f000000200000007400000065000000720000006d000000690000006e00000061000000740000
*006500000020000000660000006f0000007200000020000000730000006f0000006d0000006500
*00002000000076000000610000006c00000075000000650000007300000020000000690000006e
*00000020000000730000006f0000006d00000065000000200000006d0000006f0000006e000000
*6f0000006900000064000000730000002e0000000a000000000000005403010214000000410000
*002000000067000000650000006e0000006500000072000000610000006c000000690000007a00
*00006100000074000000690000006f0000006e000000200000006f000000660000002001021300
*0000440000006100000074000000610000002e0000004c0000006900000073000000740000002e
*0000007200000065000000700000006c0000006900000063000000610000007400000065010211
*00000020000000740000006f00000020000000610000006e000000200000006100000072000000
*620000006900000074000000720000006100000072000000790000002001040100000000000000
*00fc000000000000002e000000000000002f0102100000002e0000002000000041000000640000
*0061000000700000007400000065000000640000002000000066000000720000006f0000006d00
*0000200000000a01020100000020010c4a000000680000007400000074000000700000003a0000
*002f0000002f000000610000007500000067000000750000007300000074000000730000007300
*00002e000000620000006c0000006f0000006700000073000000700000006f000000740000002e
*000000630000006f0000006d0000002f000000320000003000000030000000380000002f000000
*30000000370000002f0000006c0000006f00000073000000740000002d000000610000006e0000
*00640000002d000000660000006f000000750000006e000000640000002d000000690000006600
*00002d000000690000002d00000077000000720000006900000074000000650000002d00000031
*00000030000000380000002d000000690000006e0000002e00000068000000740000006d000000
*6c02010000000a0400000000000000520000000000000053000000000000005400000000000000
*550400000000000000530000000000000054000000000000005200000000000000550000000000
*000000000000000000000d000108000000700000006f0000007200000074000000610000006200
*00006c00000065010c0000006500000078000000700000006500000072000000690000006d0000
*00650000006e00000074000000610000006c0110000000650000006b0000006d00000065000000
*740000007400000040000000670000006d00000061000000690000006c0000002e000000630000
*006f0000006d040000000000000056030102020000004100000020010401000000000000000028
*0000000000000000000000000000000601021a0000002000000077000000680000006900000063
*0000006800000020000000730000007500000070000000700000006f0000007200000074000000
*7300000020000000650000006600000066000000690000006300000069000000650000006e0000
*00740000002001040100000000000000002a00000000000000000000000000000006022a000000
*200000006f0000007000000065000000720000006100000074000000690000006f0000006e0000
*0073000000200000006f0000007600000065000000720000002000000072000000750000006e00
*00002d0000006c000000650000006e00000067000000740000006800000020000000650000006e
*000000630000006f00000064000000650000006400000020000000640000006100000074000000
*610000002e0000000a000000000000005903022300000041000000200000007300000069000000
*6e000000670000006c000000650000002000000072000000750000006e00000020000000770000
*006900000074000000680000002000000061000000200000007300000074000000720000006900
*00006300000074000000200000006c000000650000006e0000006700000074000000680000002e
*0000000a000000000000005c03023c0000006e0000006100000069000000760000006500000020
*0000006c00000065000000660000007400000020000000740000006f0000002000000072000000
*6900000067000000680000007400000020000000650000006e000000630000006f000000640000
*0065000000720000002c0000002000000077000000680000006900000063000000680000002000
*000063000000610000006e0000002000000068000000610000006e000000640000006c00000065
*00000020000000690000006e00000066000000690000006e000000690000007400000065000000
*20000000640000006100000074000000610000000a000000000000005d03022a00000051000000
*7500000069000000630000006b000000430000006800000065000000630000006b000000200000
*0070000000720000006f00000070000000650000007200000074000000790000003a0000002000
*00006400000065000000630000006f0000006400000065000000200000002e0000002000000065
*0000006e000000630000006f0000006400000065000000200000003d0000002000000069000000
*640000000a4200000000000000ff0000000000000100000000000000010100000000000000fc00
*000000000001020000000000000103000000000000010400000000000001050000000000000106
*000000000000010700000000000001080000000000000109000000000000010a00000000000001
*0b000000000000010c000000000000010d000000000000010e000000000000010f000000000000
*011000000000000001110000000000000112000000000000011300000000000001140000000000
*000115000000000000011600000000000001170000000000000118000000000000011900000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000001f00000000000000200000000000000021000000000000002200
*000000000000230000000000000024000000000000002500000000000000260000000000000027
*00000000000000280000000000000029000000000000002a000000000000002b00000000000000
*2c000000000000002d000000000000002e000000000000002f0000000000000056000000000000
*005700000000000000580000000000000059000000000000005a000000000000005b0000000000
*00005c000000000000005d000000000000005e000000000000005f0a0000000000000056000000
*000000005700000000000000580000000000000059000000000000005a000000000000005b0000
*00000000005e000000000000005c000000000000005f000000000000005d000000000000000000
*0000000000000e000108000000700000006f000000720000007400000061000000620000006c00
*000065010c0000006500000078000000700000006500000072000000690000006d000000650000
*006e00000074000000610000006c0110000000650000006b0000006d0000006500000074000000
*7400000040000000670000006d00000061000000690000006c0000002e000000630000006f0000
*006d0400000000000000600301020200000041000000200104010000000000000000fc00000000
*0000002e000000000000002f01020b000000200000006900000073000000200000006a00000075
*000000730000007400000020000000610000002001040100000000000000012100000000000000
*2e0000000000000038022e0000002000000077000000690000007400000068000000200000006f
*0000006e00000065000000200000006f000000620000006a000000650000006300000074000000
*2e00000020000000540000006800000069000000730000002000000066000000610000006b0000
*006500000073000000200000007400000068000000610000007400000020000000770000006900
*00007400000068000000200000006100000020000000470000004100000044000000540000000a
*000000000000006103010204000000540000006800000065000000200104010000000000000000
*fc000000000000002e000000000000002f010237000000200000006f0000006600000020000000
*74000000680000006500000020000000650000006e000000640000006f0000006d0000006f0000
*0072000000700000006800000069000000730000006d00000073000000200000006f0000007600
*0000650000007200000020000000730000006f0000006d00000065000000200000006f00000062
*0000006a00000065000000630000007400000020000000690000006e0000002000000061000000
*6e0000002000000061000000720000006200000069000000740000007200000061000000720000
*007900000020010401000000000000000121000000000000002e00000000000000380202000000
*2e0000000a00000000000000640301020c00000045000000780000007400000072000000610000
*00630000007400000020000000740000006800000065000000200104010000000000000000fc00
*0000000000002e000000000000002f01021e0000002000000066000000720000006f0000006d00
*000020000000690000007400000073000000200000007200000065000000700000007200000065
*00000073000000650000006e000000740000006100000074000000690000006f0000006e000000
*200000006100000073000000200000006100000020010401000000000000000121000000000000
*002e000000000000003802010000000a000000000000006503010215000000430000006f000000
*6e0000007600000065000000720000007400000020000000610000002000000076000000610000
*006c000000750000006500000020000000690000006e0000002000000061000000200104010000
*000000000000fc000000000000002e000000000000002f01021400000020000000690000006e00
*0000740000006f00000020000000610000006e000000200000006100000072000000720000006f
*0000007700000020000000690000006e0000002000000061000000200104010000000000000001
*21000000000000002e000000000000003802020000002e0000000a3200000000000000ff000000
*0000000100000000000000010100000000000000fc000000000000010200000000000001030000
*000000000104000000000000010500000000000001060000000000000107000000000000010800
*00000000000109000000000000010a000000000000010b000000000000010c000000000000010d
*000000000000010e000000000000010f0000000000000110000000000000011100000000000001
*120000000000000113000000000000011400000000000001150000000000000116000000000000
*011700000000000001180000000000000119000000000000012200000000000001230000000000
*000124000000000000012500000000000001210000000000000000000000000000000100000000
*000000020000000000000003000000000000000400000000000000050000000000000006000000
*000000000700000000000000080000000000000009000000000000000a00000000000000600000
*000000000061000000000000006200000000000000630000000000000064000000000000006506
*000000000000006100000000000000620000000000000063000000000000006000000000000000
*6400000000000000650000000000000000000000000000000f000108000000700000006f000000
*720000007400000061000000620000006c00000065010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d001e00000000000000ff000000000000010000
*0000000000010100000000000000fc000000000000010200000000000001030000000000000104
*000000000000010500000000000001060000000000000107000000000000010800000000000001
*09000000000000010a000000000000010b000000000000010c000000000000010d000000000000
*010e000000000000010f0000000000000110000000000000011100000000000001120000000000
*000113000000000000011400000000000001150000000000000116000000000000011700000000
*000001180000000000000119000000000000006600000000000000670200000000000000660000
*00000000006700000000000000000000000000000010000108000000700000006f000000720000
*007400000061000000620000006c00000065010c00000065000000780000007000000065000000
*72000000690000006d000000650000006e00000074000000610000006c0110000000650000006b
*0000006d00000065000000740000007400000040000000670000006d0000006100000069000000
*6c0000002e000000630000006f0000006d001f00000000000000ff000000000000010000000000
*0000010100000000000000fc000000000000010200000000000001030000000000000104000000
*000000010500000000000001060000000000000107000000000000010800000000000001090000
*00000000010a000000000000010b000000000000010c000000000000010d000000000000010e00
*0000000000010f0000000000000110000000000000011100000000000001120000000000000113
*000000000000011400000000000001150000000000000116000000000000011700000000000001
*180000000000000119000000000000006600000000000000670000000000000068010000000000
*00006800000000000000000000000000000011000122000000700000006f000000720000007400
*000061000000620000006c00000065000000200000002800000062000000750000007400000020
*000000690000006e0000007300000074000000610000006e000000630000006500000073000000
*20000000750000007300000065000000200000004d000000500000005400000043000000730000
*0029010c0000006500000078000000700000006500000072000000690000006d00000065000000
*6e00000074000000610000006c0110000000650000006b0000006d000000650000007400000074
*00000040000000670000006d00000061000000690000006c0000002e000000630000006f000000
*6d0200000000000000690301020a000000430000006f0000006e00000076000000650000007200
*0000740000002000000061000000200104010000000000000000fc000000000000002e00000000
*0000002f01020800000020000000690000006e000000740000006f000000200000006100000020
*01040100000000000000006f0000000000000000000000000000001101020c0000002e00000020
*0000004d0000006e000000650000006d0000006f0000006e00000069000000630000003a000000
*200107021b0000004500000078000000700000002000000061000000200000002a000000200000
*004500000078000000700000002000000062000000200000003d00000020000000450000007800
*000070000000200000002800000061000000200000002b00000020000000620000002902010000
*000a000000000000006c0301020a000000430000006f0000006e00000076000000650000007200
*00007400000020000000610000002001040100000000000000006f000000000000000000000000
*0000001101020800000020000000690000006e000000740000006f000000200000006100000020
*0104010000000000000000fc000000000000002e000000000000002f01020c0000002e00000020
*0000004d0000006e000000650000006d0000006f0000006e00000069000000630000003a000000
*200107021b0000004c0000006f000000670000002000000061000000200000002b000000200000
*004c0000006f000000670000002000000062000000200000003d000000200000004c0000006f00
*000067000000200000002800000061000000200000002a00000020000000620000002902010000
*000a2700000000000000ff0000000000000100000000000000010100000000000000fc00000000
*000001020000000000000103000000000000010400000000000001050000000000000106000000
*000000010700000000000001080000000000000109000000000000010a000000000000010b0000
*00000000010c000000000000010d000000000000010e000000000000010f000000000000011000
*000000000001110000000000000112000000000000011300000000000001140000000000000115
*000000000000011600000000000001170000000000000118000000000000011900000000000000
*6600000000000000670000000000000069000000000000006a000000000000006b000000000000
*006c000000000000006d000000000000006e000000000000006f00000000000000700000000000
*00007109000000000000006f00000000000000700000000000000071000000000000006c000000
*000000006d000000000000006e0000000000000069000000000000006a000000000000006b0000
*0000000000000000000000000012000108000000700000006f0000007200000074000000610000
*00620000006c00000065010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c0110000000650000006b0000006d00000065
*000000740000007400000040000000670000006d00000061000000690000006c0000002e000000
*630000006f0000006d002900000000000000ff0000000000000100000000000000010100000000
*000000fc0000000000000102000000000000010300000000000001040000000000000105000000
*0000000106000000000000010700000000000001080000000000000109000000000000010a0000
*00000000010b000000000000010c000000000000010d000000000000010e000000000000010f00
*000000000001100000000000000111000000000000011200000000000001130000000000000114
*000000000000011500000000000001160000000000000117000000000000011800000000000001
*190000000000000066000000000000006700000000000000680000000000000069000000000000
*006a000000000000006b000000000000006c000000000000006d000000000000006e0000000000
*00006f000000000000007000000000000000710000000000000072010000000000000072000000
*0000000000000000000000001300011e000000700000006f000000720000007400000061000000
*620000006c000000650000002000000028000000690000006e0000007300000074000000610000
*006e00000063000000650000007300000020000000750000007300000065000000200000004d00
*00005000000054000000430000007300000029010c000000650000007800000070000000650000
*0072000000690000006d000000650000006e00000074000000610000006c011000000065000000
*6b0000006d00000065000000740000007400000040000000670000006d00000061000000690000
*006c0000002e000000630000006f0000006d0200000000000000730b021f000000280000006100
*0000200000002b000000200000006200000029000000200000002a000000200000006300000020
*0000003d000000200000002800000061000000200000002a000000200000006300000029000000
*200000002b000000200000002800000062000000200000002a0000002000000063000000290000
*0000000000740b021f00000061000000200000002a000000200000002800000062000000200000
*002b000000200000006300000029000000200000003d0000002000000028000000610000002000
*00002a000000200000006200000029000000200000002b00000020000000280000006100000020
*0000002a0000002000000063000000292900000000000000ff0000000000000100000000000000
*010100000000000000fc0000000000000102000000000000010300000000000001040000000000
*000105000000000000010600000000000001070000000000000108000000000000010900000000
*0000010a000000000000010b000000000000010c000000000000010d000000000000010e000000
*000000010f00000000000001100000000000000111000000000000011200000000000001130000
*000000000114000000000000011500000000000001160000000000000117000000000000011800
*00000000000119000000000000006600000000000000670000000000000069000000000000006a
*000000000000006b000000000000006c000000000000006d000000000000006e00000000000000
*6f0000000000000070000000000000007100000000000000730000000000000074020000000000
*0000740000000000000073000000000000000000000000000000140001140000006e0000006f00
*00006e0000002d000000700000006f000000720000007400000061000000620000006c00000065
*00000020000000280000004d0000005000000054000000430000007300000029010c0000006500
*000078000000700000006500000072000000690000006d000000650000006e0000007400000061
*0000006c0110000000650000006b0000006d000000650000007400000074000000400000006700
*00006d00000061000000690000006c0000002e000000630000006f0000006d0100000000000000
*750301020200000041000000200104010000000000000000750000000000000000000000000000
*001401021800000020000000690000007300000020000000610000006e00000020000000690000
*006e0000007300000074000000610000006e0000006300000065000000200000006f0000006600
*000020000000620000006f00000074000000680000002001040100000000000000006f00000000
*00000000000000000000001101020500000020000000610000006e000000640000002001040100
*00000000000000fc000000000000002e000000000000002f010208000000200000007700000068
*000000650000007200000065000000200000000a01020300000020000000200000002001040100
*000000000000007100000000000000000000000000000011010212000000200000006400000069
*000000730000007400000072000000690000006200000075000000740000006500000073000000
*200000006f00000076000000650000007200000020010401000000000000000066000000000000
*0000000000000000000f02020000002e0000000a2a00000000000000ff00000000000001000000
*00000000010100000000000000fc00000000000001020000000000000103000000000000010400
*000000000001050000000000000106000000000000010700000000000001080000000000000109
*000000000000010a000000000000010b000000000000010c000000000000010d00000000000001
*0e000000000000010f000000000000011000000000000001110000000000000112000000000000
*011300000000000001140000000000000115000000000000011600000000000001170000000000
*000118000000000000011900000000000000660000000000000067000000000000006900000000
*0000006a000000000000006b000000000000006c000000000000006d000000000000006e000000
*000000006f00000000000000700000000000000071000000000000007300000000000000740000
*000000000075010000000000000075000000000000000000000000000000150000000004000000
*000000007603010204000000540000006800000065000000200104010000000000000000fc0000
*00000000002e000000000000002f01020100000020010701020100000028010401000000000000
*000126000000000000002e00000000000000390102010000002c01040100000000000000012700
*0000000000002e0000000000000030020100000029010206000000200000006f00000076000000
*65000000720000002001070104010000000000000000fd000000000000002e0000000000000030
*020200000020000000610102070000002000000077000000680000006500000072000000650000
*0020010401000000000000000127000000000000002e0000000000000030021400000020000000
*69000000730000002000000074000000680000006500000020000000740000006f000000700000
*0020000000650000006c000000650000006d000000650000006e000000740000000a0000000000
*00007903010204000000540000006800000065000000200104010000000000000000fc00000000
*0000002e000000000000002f010201000000200107010201000000280104010000000000000001
*28000000000000002e00000000000000390102010000002c010401000000000000000127000000
*000000002e0000000000000030020100000029010206000000200000006f000000760000006500
*0000720000002001070104010000000000000000fd000000000000002e00000000000000300202
*000000200000006101020700000020000000770000006800000065000000720000006500000020
*010401000000000000000127000000000000002e00000000000000300217000000200000006900
*0000730000002000000074000000680000006500000020000000620000006f0000007400000074
*0000006f0000006d00000020000000650000006c000000650000006d000000650000006e000000
*740000000a000000000000007c0301020400000054000000680000006500000020010401000000
*0000000000fc000000000000002e000000000000002f01020a0000002000000067000000690000
*0076000000650000006e0000002000000062000000790000002001070102010000002801040100
*0000000000000126000000000000002e00000000000000390102010000002c0104010000000000
*00000129000000000000002e000000000000003a02010000002902010000000a00000000000000
*7f03010204000000540000006800000065000000200104010000000000000000fc000000000000
*002e000000000000002f0102010000002001070102010000002801040100000000000000012800
*0000000000002e00000000000000390102010000002c01040100000000000000012a0000000000
*00002e000000000000003a02010000002902010000000a1300000000000000ff00000000000001
*0100000000000000fc000000000000000300000000000000040000000000000076000000000000
*007700000000000000780000000000000079000000000000007a000000000000007b0000000000
*00007c000000000000007d000000000000007e000000000000007f000000000000008000000000
*00000081000000000000008200000000000000830e000000000000007f00000000000000800000
*000000000081000000000000007c000000000000007d000000000000007e000000000000007900
*0000000000007a000000000000007b000000000000008200000000000000760000000000000077
*00000000000000780000000000000083000000000000000000000000000000160000010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c0110000000650000006b0000006d00000065000000740000007400000040000000
*670000006d00000061000000690000006c0000002e000000630000006f0000006d020000000000
*000084030102020000004100000020010401000000000000000075000000000000000000000000
*0000001401020c0000002000000077000000680000006900000063000000680000002000000061
*0000006400000064000000730000002001040100000000000000012a000000000000002e000000
*000000003a01020500000020000000610000006e00000064000000200104010000000000000001
*29000000000000002e000000000000003a021900000020000000740000006f0000002000000061
*000000200000007000000072000000650000002d00000065000000780000006900000073000000
*74000000690000006e0000006700000020000000740000007900000070000000650000002e0000
*000a00000000000000880301020200000041000000200104010000000000000000750000000000
*000000000000000000001401020d000000200000007500000073000000690000006e0000006700
*00002000000061000000200000007400000079000000700000006501020100000027021d000000
*73000000200000006200000075000000690000006c000000740000002d000000690000006e0000
*0020000000420000006f000000750000006e000000640000006500000064000000200000006900
*00006e0000007300000074000000610000006e00000063000000650000002e0000000a31000000
*00000000ff0000000000000100000000000000010100000000000000fc00000000000001020000
*000000000103000000000000010400000000000001050000000000000106000000000000010700
*000000000001080000000000000109000000000000010a000000000000010b000000000000010c
*000000000000010d000000000000010e000000000000010f000000000000011000000000000001
*110000000000000112000000000000011300000000000001140000000000000115000000000000
*011600000000000001170000000000000118000000000000011900000000000000660000000000
*0000670000000000000069000000000000006a000000000000006b000000000000006c00000000
*0000006d000000000000006e000000000000006f00000000000000700000000000000071000000
*000000007300000000000000740000000000000075000000000000008400000000000000850000
*000000000086000000000000008700000000000000880000000000000089000000000000008a07
*00000000000000880000000000000089000000000000008a000000000000008400000000000000
*870000000000000086000000000000008500000000000000000000000000000017000000000100
*0000000000008b0103010204000000540000006800000065000000200104010000000000000000
*750000000000000000000000000000001401020100000020010701020100000028010401000000
*000000000126000000000000002e00000000000000390102010000002c01040100000000000000
*012b000000000000002e000000000000003a020100000029010206000000200000006f00000076
*00000065000000720000002001070102010000006101020f000000200000006500000078000000
*74000000650000006e000000640000006500000064000000200000007700000069000000740000
*006800000020040100000000000000008e00000000000000000000000000000017010202000000
*2e0000000a0102080000002000000020000000200000005700000068000000650000006e000000
*200107020100000061010248000000200000006800000061000000730000002000000061000000
*200000004e000000750000006d00000020000000690000006e0000007300000074000000610000
*006e00000063000000650000002000000077000000690000007400000068000000200000006100
*00006e000000200000006100000064000000640000006900000074000000690000006f0000006e
*000000200000007400000068000000610000007400000020000000720000006500000073000000
*7000000065000000630000007400000073000000200000006f0000007200000064000000650000
*00720000002c000000200000007400000068000000650000006e00000020000000740000006800
*00006900000073000000200000006900000073000000200000000a010253000000200000002000
*0000200000007400000072000000610000006e00000073000000660000006f000000720000006d
*000000650000006400000020000000690000006e000000740000006f0000002000000061000000
*2000000074000000720000006f000000700000006900000063000000610000006c000000200000
*0073000000650000006d0000006900000072000000690000006e000000670000002e0000002000
*000049000000740000002000000069000000730000002000000061000000730000007300000075
*0000006d0000006500000064000000200000007400000068000000610000007400000020000000
*3000000020000000690000007300000020000000740000006800000065000000200000006c0000
*006500000061000000730000007400000020000000650000006c000000650000006d0000006500
*00006e000000740000000a02090000002000000020000000200000006f00000066000000200000
*00610000002e0000000a03010c41000000680000007400000074000000700000003a0000002f00
*00002f00000068000000610000006c0000002e0000006100000072000000630000006800000069
*0000007600000065000000730000002d0000006f00000075000000760000006500000072000000
*7400000065000000730000002e00000066000000720000002f000000640000006f000000630000
*00730000002f00000030000000300000002f00000031000000310000002f000000330000003700
*00002f00000037000000390000002f0000005000000044000000460000002f0000005400000072
*0000006f000000700000006900000063000000610000006c0000002e0000007000000064000000
*6602010000000a3000000000000000ff0000000000000100000000000000010100000000000000
*fc0000000000000102000000000000010300000000000001040000000000000105000000000000
*0106000000000000010700000000000001080000000000000109000000000000010a0000000000
*00010b000000000000010c000000000000010d000000000000010e000000000000010f00000000
*000001100000000000000111000000000000011200000000000001130000000000000114000000
*000000011500000000000001160000000000000117000000000000011800000000000001190000
*000000000003000000000000000400000000000000660000000000000067000000000000006900
*0000000000006a000000000000006b000000000000006c000000000000006d000000000000006e
*000000000000006f00000000000000700000000000000071000000000000007300000000000000
*740000000000000075000000000000008b000000000000008c000000000000008d000000000000
*008e04000000000000008e000000000000008b000000000000008c000000000000008d00000000
*00000000000000000000001800000000003100000000000000ff00000000000001000000000000
*00010100000000000000fc00000000000001020000000000000103000000000000010400000000
*000001050000000000000106000000000000010700000000000001080000000000000109000000
*000000010a000000000000010b000000000000010c000000000000010d000000000000010e0000
*00000000010f000000000000011000000000000001110000000000000112000000000000011300
*000000000001140000000000000115000000000000011600000000000001170000000000000118
*000000000000011900000000000000660000000000000067000000000000006900000000000000
*6a000000000000006b000000000000006c000000000000006d000000000000006e000000000000
*006f00000000000000700000000000000071000000000000007300000000000000740000000000
*00008f000000000000009000000000000000910000000000000092000000000000009300000000
*000000940000000000000095000000000000009608000000000000008f00000000000000900000
*000000000091000000000000009200000000000000930000000000000094000000000000009500
*000000000000960000000000000000000000000000003b000108000000700000006f0000007200
*00007400000061000000620000006c00000065010c000000650000007800000070000000650000
*0072000000690000006d000000650000006e00000074000000610000006c011000000065000000
*6b0000006d00000065000000740000007400000040000000670000006d00000061000000690000
*006c0000002e000000630000006f0000006d002b00000000000000ff0000000000000100000000
*000000010100000000000000fc0000000000000102000000000000010300000000000001040000
*000000000105000000000000010600000000000001070000000000000108000000000000010900
*0000000000010a000000000000010b000000000000010c000000000000010d000000000000010e
*000000000000010f00000000000001100000000000000111000000000000011200000000000001
*130000000000000114000000000000011500000000000001160000000000000117000000000000
*011800000000000001190000000000000066000000000000006700000000000000680000000000
*000069000000000000006a000000000000006b000000000000006c000000000000006d00000000
*0000006e000000000000006f000000000000007000000000000000710000000000000072000000
*000000007300000000000000740000000000000000000000000000000019000108000000700000
*006f000000720000007400000061000000620000006c00000065010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c011f
*000000450000006400000077000000610000007200000064000000200000004b0000006d000000
*650000007400000074000000200000003c000000650000006b0000006d00000065000000740000
*007400000040000000670000006d00000061000000690000006c0000002e000000630000006f00
*00006d0000003e0100000000000000970301021d0000004d000000690000006e00000069000000
*6d000000610000006c00000020000000630000006f0000006d000000700000006c000000650000
*00740000006500000020000000640000006500000066000000690000006e000000690000007400
*0000690000006f0000006e0000003a000000200104010000000000000000980000000000000000
*0000000000000019010204000000200000006f0000007200000020010401000000000000000099
*0000000000000000000000000000001902010000000a2200000000000000ff0000000000000100
*000000000000010100000000000000fc0000000000000102000000000000010300000000000001
*040000000000000105000000000000010600000000000001070000000000000108000000000000
*0109000000000000010a000000000000010b000000000000010c000000000000010d0000000000
*00010e000000000000010f00000000000001100000000000000111000000000000011200000000
*000001130000000000000114000000000000011500000000000001160000000000000117000000
*000000011800000000000001190000000000000066000000000000006700000000000000970000
*0000000000980000000000000099000000000000009a0400000000000000970000000000000098
*000000000000009a00000000000000990000000000000000000000000000001a00010800000070
*0000006f000000720000007400000061000000620000006c00000065010c000000650000007800
*0000700000006500000072000000690000006d000000650000006e00000074000000610000006c
*0110000000650000006b0000006d00000065000000740000007400000040000000670000006d00
*000061000000690000006c0000002e000000630000006f0000006d002400000000000000ff0000
*000000000100000000000000010100000000000000fc0000000000000102000000000000010300
*000000000001040000000000000105000000000000010600000000000001070000000000000108
*0000000000000109000000000000010a000000000000010b000000000000010c00000000000001
*0d000000000000010e000000000000010f00000000000001100000000000000111000000000000
*011200000000000001130000000000000114000000000000011500000000000001160000000000
*000117000000000000011800000000000001190000000000000066000000000000006700000000
*0000009700000000000000980000000000000099000000000000009a000000000000009b000000
*000000009c02000000000000009b000000000000009c0000000000000000000000000000001b00
*0108000000700000006f000000720000007400000061000000620000006c00000065010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c0110000000650000006b0000006d00000065000000740000007400000040000000
*670000006d00000061000000690000006c0000002e000000630000006f0000006d030000000000
*00009d0302220000004d000000690000006e000000690000006d000000610000006c0000002000
*0000640000006500000066000000690000006e0000006900000074000000690000006f0000006e
*000000200000006f000000760000006500000072000000200000006f0000007200000020000000
*6700000072000000650000006300000069000000700000000a000000000000009e0b0102020000
*0078000000200102010000002f02020000002000000079000000000000009f0b01020200000078
*00000020010201000000200201000000792f00000000000000ff00000000000001000000000000
*00010100000000000000fc00000000000001020000000000000103000000000000010400000000
*000001050000000000000106000000000000010700000000000001080000000000000109000000
*000000010a000000000000010b000000000000010c000000000000010d000000000000010e0000
*00000000010f000000000000011000000000000001110000000000000112000000000000011300
*000000000001140000000000000115000000000000011600000000000001170000000000000118
*000000000000011900000000000000660000000000000067000000000000006900000000000000
*6a000000000000006b000000000000006c000000000000006d000000000000006e000000000000
*006f00000000000000700000000000000071000000000000009700000000000000980000000000
*000099000000000000009a000000000000009d000000000000009e000000000000009f00000000
*000000a004000000000000009d000000000000009e000000000000009f00000000000000a00000
*000000000000000000000000001c000108000000700000006f0000007200000074000000610000
*00620000006c00000065010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c0110000000650000006b0000006d00000065
*000000740000007400000040000000670000006d00000061000000690000006c0000002e000000
*630000006f0000006d002600000000000000ff0000000000000100000000000000010100000000
*000000fc0000000000000102000000000000010300000000000001040000000000000105000000
*0000000106000000000000010700000000000001080000000000000109000000000000010a0000
*00000000010b000000000000010c000000000000010d000000000000010e000000000000010f00
*000000000001100000000000000111000000000000011200000000000001130000000000000114
*000000000000011500000000000001160000000000000117000000000000011800000000000001
*190000000000000066000000000000006700000000000000680000000000000097000000000000
*00980000000000000099000000000000009a00000000000000a100000000000000a20000000000
*0000a30300000000000000a100000000000000a200000000000000a30000000000000000000000
*000000001d000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c0110000000650000006b0000006d00000065000000740000007400
*000040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d
*003700000000000000ff0000000000000100000000000000010100000000000000fc0000000000
*000102000000000000010300000000000001040000000000000105000000000000010600000000
*0000010700000000000001080000000000000109000000000000010a000000000000010b000000
*000000010c000000000000010d000000000000010e000000000000010f00000000000001100000
*000000000111000000000000011200000000000001130000000000000114000000000000011500
*000000000001160000000000000117000000000000011800000000000001190000000000000066
*000000000000006700000000000000680000000000000069000000000000006a00000000000000
*6b000000000000006c000000000000006d000000000000006e000000000000006f000000000000
*007000000000000000710000000000000072000000000000009700000000000000980000000000
*000099000000000000009a000000000000009d000000000000009e000000000000009f00000000
*000000a000000000000000a100000000000000a200000000000000a300000000000000a4000000
*00000000a500000000000000a60300000000000000a400000000000000a500000000000000a600
*00000000000000000000000000001e00011e000000700000006f00000072000000740000006100
*0000620000006c000000650000002000000028000000690000006e000000730000007400000061
*0000006e0000006300000065000000730000002000000075000000730000006500000020000000
*4d0000005000000054000000430000007300000029010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d002f00000000000000ff000000000000010000
*0000000000010100000000000000fc000000000000010200000000000001030000000000000104
*000000000000010500000000000001060000000000000107000000000000010800000000000001
*09000000000000010a000000000000010b000000000000010c000000000000010d000000000000
*010e000000000000010f0000000000000110000000000000011100000000000001120000000000
*000113000000000000011400000000000001150000000000000116000000000000011700000000
*000001180000000000000119000000000000006600000000000000670000000000000069000000
*000000006a000000000000006b000000000000006c000000000000006d000000000000006e0000
*00000000006f000000000000007000000000000000710000000000000073000000000000007400
*00000000000075000000000000009700000000000000980000000000000099000000000000009a
*00000000000000a70100000000000000a70000000000000000000000000000001f000114000000
*6e0000006f0000006e0000002d000000700000006f000000720000007400000061000000620000
*006c0000006500000020000000280000004d000000500000005400000043000000730000002901
*0c0000006500000078000000700000006500000072000000690000006d000000650000006e0000
*0074000000610000006c0110000000650000006b0000006d000000650000007400000074000000
*40000000670000006d00000061000000690000006c0000002e000000630000006f0000006d0032
*00000000000000ff0000000000000100000000000000010100000000000000fc00000000000001
*020000000000000103000000000000010400000000000001050000000000000106000000000000
*010700000000000001080000000000000109000000000000010a000000000000010b0000000000
*00010c000000000000010d000000000000010e000000000000010f000000000000011000000000
*000001110000000000000112000000000000011300000000000001140000000000000115000000
*000000011600000000000001170000000000000118000000000000011900000000000000660000
*0000000000670000000000000069000000000000006a000000000000006b000000000000006c00
*0000000000006d000000000000006e000000000000006f00000000000000700000000000000071
*000000000000007300000000000000740000000000000075000000000000009700000000000000
*980000000000000099000000000000009a00000000000000a700000000000000a8000000000000
*00a900000000000000aa0300000000000000a800000000000000a900000000000000aa00000000
*0000000000000000000000200001140000006e0000006f0000006e0000002d000000700000006f
*000000720000007400000061000000620000006c0000006500000020000000280000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c0110000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d003200000000000000ff00000000000001000000000000
*00010100000000000000fc00000000000001020000000000000103000000000000010400000000
*000001050000000000000106000000000000010700000000000001080000000000000109000000
*000000010a000000000000010b000000000000010c000000000000010d000000000000010e0000
*00000000010f000000000000011000000000000001110000000000000112000000000000011300
*000000000001140000000000000115000000000000011600000000000001170000000000000118
*000000000000011900000000000000660000000000000067000000000000006900000000000000
*6a000000000000006b000000000000006c000000000000006d000000000000006e000000000000
*006f00000000000000700000000000000071000000000000007300000000000000740000000000
*000075000000000000009700000000000000980000000000000099000000000000009a00000000
*000000a700000000000000ab00000000000000ac00000000000000ad0300000000000000ab0000
*0000000000ac00000000000000ad0000000000000000000000000000002100013f0000006e0000
*006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c00
*00006500000020000000280000004d000000500000005400000043000000730000002c00000020
*00000073000000630000006f000000700000006500000064000000200000007400000079000000
*7000000065000000730000002c00000020000000650000006d0000007000000074000000790000
*00200000006400000065000000630000006c000000730000002c00000020000000740000007900
*00007000000065000000200000006f00000070000000650000007200000061000000740000006f
*000000720000007300000029010c00000065000000780000007000000065000000720000006900
*00006d000000650000006e00000074000000610000006c011f0000004500000064000000770000
*00610000007200000064000000200000004b0000006d0000006500000074000000740000002000
*00003c000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d0000003e00340000000000
*0000ff0000000000000100000000000000010100000000000000fc000000000000010200000000
*000001030000000000000104000000000000010500000000000001060000000000000107000000
*00000001080000000000000109000000000000010a000000000000010b000000000000010c0000
*00000000010d000000000000010e000000000000010f0000000000000110000000000000011100
*000000000001120000000000000113000000000000011400000000000001150000000000000116
*000000000000011700000000000001180000000000000119000000000000006600000000000000
*670000000000000069000000000000006a000000000000006b000000000000006c000000000000
*006d000000000000006e000000000000006f000000000000007000000000000000710000000000
*000073000000000000007400000000000000750000000000000097000000000000009800000000
*00000099000000000000009a00000000000000a700000000000000ae00000000000000af000000
*00000000b000000000000000b100000000000000b20500000000000000b000000000000000b100
*000000000000ae00000000000000af00000000000000b200000000000000000000000000000022
*0001140000006e0000006f0000006e0000002d000000700000006f000000720000007400000061
*000000620000006c0000006500000020000000280000004d000000500000005400000043000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d0300000000000000b30b021e000000200000002800000078000000200000002a000000
*2e000000200000006d00000029000000200000002e0000002a0000002000000079000000200000
*003d0000002000000078000000200000002a0000002e00000020000000280000006d0000002000
*00002e0000002a00000020000000790000002900000000000000b40b021c000000200000002800
*00006d000000200000002e0000002a000000200000007800000029000000200000002a00000020
*00000079000000200000003d000000200000006d000000200000002e0000002a00000020000000
*2800000078000000200000002a00000020000000790000002900000000000000b60b021c000000
*200000002800000078000000200000002a000000200000007900000029000000200000002a0000
*002e000000200000006d000000200000003d0000002000000078000000200000002a0000002000
*00002800000079000000200000002a0000002e000000200000006d000000293400000000000000
*ff0000000000000100000000000000010100000000000000fc0000000000000102000000000000
*010300000000000001040000000000000105000000000000010600000000000001070000000000
*0001080000000000000109000000000000010a000000000000010b000000000000010c00000000
*0000010d000000000000010e000000000000010f00000000000001100000000000000111000000
*000000011200000000000001130000000000000114000000000000011500000000000001160000
*000000000117000000000000011800000000000001190000000000000066000000000000006700
*00000000000069000000000000006a000000000000006b000000000000006c000000000000006d
*000000000000006e000000000000006f0000000000000070000000000000007100000000000000
*730000000000000074000000000000007500000000000000970000000000000098000000000000
*0099000000000000009a00000000000000a700000000000000b300000000000000b40000000000
*0000b500000000000000b600000000000000b70500000000000000b600000000000000b7000000
*00000000b400000000000000b500000000000000b3000000000000000000000000000000230001
*140000006e0000006f0000006e0000002d000000700000006f0000007200000074000000610000
*00620000006c0000006500000020000000280000004d0000005000000054000000430000007300
*000029010c0000006500000078000000700000006500000072000000690000006d000000650000
*006e00000074000000610000006c0110000000650000006b0000006d0000006500000074000000
*7400000040000000670000006d00000061000000690000006c0000002e000000630000006f0000
*006d0400000000000000b803010203000000690000006600000020010702010000006d01020600
*00002000000069000000730000002000000061000000200104010000000000000000b300000000
*000000000000000000000022010206000000200000006f00000076000000650000007200000020
*010702010000007201020500000020000000610000006e00000064000000200107020100000066
*01020600000020000000690000007300000020000000610000002001040100000000000000012c
*000000000000002e000000000000003c010206000000200000007400000068000000650000006e
*00000020010701020200000066000000200104020000000000000000b900000000000000000000
*0000000000230000000000000000b8000000000000000000000000000000230202000000200000
*006d01020600000020000000690000007300000020000000610000002001040100000000000000
*00b300000000000000000000000000000022010206000000200000006f00000076000000650000
*007200000020010702010000007202090000002000000061000000730000002000000077000000
*650000006c0000006c0000000a00000000000000bb030102020000004100000020010402000000
*0000000000bc000000000000000000000000000000230000000000000000bb0000000000000000
*000000000000002301020b000000200000007400000075000000720000006e0000007300000020
*000000610000006e000000790000002001040100000000000000012d000000000000002e000000
*000000003c01021100000020000000690000006e0000007300000074000000610000006e000000
*630000006500000020000000690000006e000000740000006f0000002000000061000000200104
*010000000000000000fc000000000000002e000000000000002f0102020000002e0000000a0102
*16000000200000002000000020000000490000007400000020000000610000006c000000730000
*006f0000002000000070000000720000006f000000760000006900000064000000650000007300
*000020000000610000002001040100000000000000006f00000000000000000000000000000011
*01021100000020000000690000006e0000007300000074000000610000006e0000006300000065
*00000020000000660000006f0000007200000020000000610000006e0000002001040100000000
*000000012c000000000000002e000000000000003c01021a000000200000006600000075000000
*6e00000063000000740000006f0000007200000020000000770000007200000061000000700000
*007000000065000000640000002000000061000000720000006f000000750000006e0000006400
*00002000000061000000200104010000000000000000fc000000000000002e000000000000002f
*0102010000000a010218000000200000002000000020000000610000006e000000640000002000
*000061000000730000007300000065000000720000007400000073000000200000007400000068
*000000610000007400000020000000610000006e00000079000000200104010000000000000001
*2d000000000000002e000000000000003c01020e00000020000000610000007000000070000000
*6c00000069000000650000006400000020000000740000006f0000002000000061000000200104
*010000000000000000fc000000000000002e000000000000002f01020900000020000000660000
*006f000000720000006d0000007300000020000000610000002001040100000000000000007300
*000000000000000000000000000013010202000000200000000a021b0000002000000020000000
*20000000750000006e000000640000006500000072000000200000007400000068000000650000
*007300000065000000200000006f00000070000000650000007200000061000000740000006900
*00006f0000006e000000730000002e0000000a00000000000000be030102020000004100000020
*0104020000000000000000bf000000000000000000000000000000230000000000000000be0000
*000000000000000000000000002301021800000020000000750000007300000065000000730000
*0020000000610000006e00000020000000670000006c0000007500000065000000730000002000
*0000740000006f0000006700000065000000740000006800000065000000720000002001040100
*000000000000012c000000000000002e000000000000003c010213000000200000006100000063
*00000074000000690000006f0000006e0000007300000020000000770000006900000074000000
*6800000020000000280000002a0000003e000000290000000a0102140000002000000020000000
*20000000690000006e00000020000000740000006800000065000000200000006d000000610000
*006e0000006e0000006500000072000000200000006f0000006600000020010209000000740000
*00720000006100000076000000650000007200000073000000650000005f010206000000200000
*0066000000720000006f0000006d0000002001050d000000440000006100000074000000610000
*002e000000460000006f0000006c0000006400000061000000620000006c0000006501021a0000
*002e00000020000000410000006e000000790000002000000076000000610000006c0000007500
*000065000000730000002000000072000000650000007400000075000000720000006e00000065
*00000064000000200000006200000079000000200000000a022200000020000000200000002000
*000072000000650000006400000075000000630000006500000064000000200000006100000063
*00000074000000690000006f0000006e0000007300000020000000610000007200000065000000
*200000006400000069000000730000006300000061000000720000006400000065000000640000
*002e0000000a00000000000000c103010232000000450000006600000066000000690000006300
*000069000000650000006e000000740000006c000000790000002000000061000000760000006f
*0000006900000064000000200000006e0000006500000065000000640000006c00000065000000
*73000000730000006c0000007900000020000000720000006500000062000000690000006e0000
*0064000000690000006e00000067000000200000007700000068000000650000006e0000002000
*00007500000073000000690000006e000000670000002001040100000000000000000500000000
*000000000000000000000001010226000000200000006f0000006e00000020000000610000006e
*00000020000000610000006300000074000000690000006f0000006e0000002000000074000000
*68000000610000007400000020000000610000006c000000720000006500000061000000640000
*00790000002000000072000000650000007400000075000000720000006e000000730000002000
*000028000000290000000a023b0000002000000020000000200000004100000020000000720000
*006500000077000000720000006900000074000000650000002000000072000000750000006c00
*000065000000200000006100000075000000740000006f0000006d000000610000007400000069
*00000063000000610000006c0000006c0000007900000020000000610000007000000070000000
*6c0000006900000065000000730000002000000074000000680000006900000073000000200000
*007700000068000000650000006e00000020000000700000006f00000073000000730000006900
*0000620000006c000000650000000a4900000000000000ff000000000000010000000000000001
*0100000000000000fc000000000000010200000000000001030000000000000104000000000000
*010500000000000001060000000000000107000000000000010800000000000001090000000000
*00010a000000000000010b000000000000010c000000000000010d000000000000010e00000000
*0000010f0000000000000110000000000000011100000000000001120000000000000113000000
*000000011400000000000001150000000000000116000000000000011700000000000001180000
*000000000119000000000000000000000000000000010000000000000002000000000000000300
*000000000000040000000000000005000000000000000600000000000000070000000000000008
*0000000000000009000000000000000a0000000000000066000000000000006700000000000000
*69000000000000006a000000000000006b000000000000006c000000000000006d000000000000
*006e000000000000006f0000000000000070000000000000007100000000000000730000000000
*000074000000000000007500000000000000970000000000000098000000000000009900000000
*0000009a00000000000000a700000000000000b300000000000000b400000000000000b5000000
*00000000b600000000000000b700000000000000b800000000000000b900000000000000ba0000
*0000000000bb00000000000000bc00000000000000bd00000000000000be00000000000000bf00
*000000000000c000000000000000c10a00000000000000be00000000000000bf00000000000000
*c000000000000000bb00000000000000bc00000000000000bd00000000000000b8000000000000
*00b900000000000000ba00000000000000c1000000000000000000000000000000240001140000
*006e0000006f0000006e0000002d000000700000006f0000007200000074000000610000006200
*00006c0000006500000020000000280000004d0000005000000054000000430000007300000029
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c0110000000650000006b0000006d0000006500000074000000740000
*0040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d04
*00000000000000c203010203000000690000006600000020010702010000006d01020600000020
*00000069000000730000002000000061000000200104010000000000000000b300000000000000
*000000000000000022010206000000200000006f00000076000000650000007200000020010702
*010000007201020500000020000000610000006e00000064000000200107020100000066010206
*00000020000000690000007300000020000000610000002001040100000000000000012e000000
*000000002e000000000000003d010206000000200000007400000068000000650000006e000000
*20010701020200000066000000200104020000000000000000c300000000000000000000000000
*0000240000000000000000c2000000000000000000000000000000240202000000200000006d01
*02060000002000000069000000730000002000000061000000200104010000000000000000b300
*000000000000000000000000000022020900000020000000610000007300000020000000770000
*00650000006c0000006c0000000a00000000000000c50301020200000041000000200104020000
*000000000000c6000000000000000000000000000000240000000000000000c500000000000000
*00000000000000002401020b000000200000007400000075000000720000006e00000073000000
*20000000610000006e000000790000002001040100000000000000012f000000000000002e0000
*00000000003d01021100000020000000690000006e0000007300000074000000610000006e0000
*00630000006500000020000000690000006e000000740000006f00000020000000610000002001
*04010000000000000000fc000000000000002e000000000000002f0102020000002e0000000a01
*0216000000200000002000000020000000490000007400000020000000610000006c0000007300
*00006f0000002000000070000000720000006f0000007600000069000000640000006500000073
*00000020000000610000002001040100000000000000006f000000000000000000000000000000
*1101021000000020000000690000006e0000007300000074000000610000006e00000063000000
*6500000020000000660000006f0000007200000020000000610000002001040100000000000000
*012e000000000000002e000000000000003d010212000000200000007700000072000000610000
*00700000007000000065000000640000002000000061000000720000006f000000750000006e00
*0000640000002000000061000000200104010000000000000000fc000000000000002e00000000
*0000002f0102010000000a010218000000200000002000000020000000610000006e0000006400
*000020000000610000007300000073000000650000007200000074000000730000002000000074
*00000068000000610000007400000020000000610000006e000000790000002001040100000000
*000000012f000000000000002e000000000000003d01020e000000200000006100000070000000
*700000006c00000069000000650000006400000020000000740000006f00000020000000610000
*00200104010000000000000000fc000000000000002e000000000000002f010209000000200000
*00660000006f000000720000006d00000073000000200000006100000020010401000000000000
*00007300000000000000000000000000000013010202000000200000000a021b00000020000000
*2000000020000000750000006e0000006400000065000000720000002000000074000000680000
*00650000007300000065000000200000006f000000700000006500000072000000610000007400
*0000690000006f0000006e000000730000002e0000000a00000000000000c80301020300000041
*0000006e000000200104020000000000000000c900000000000000000000000000000024000000
*0000000000c8000000000000000000000000000000240102150000002000000075000000730000
*00650000007300000020000000670000006c000000750000006500000073000000200000007400
*00006f000000670000006500000074000000680000006500000072000000200104010000000000
*0000012e000000000000002e000000000000003d01021300000020000000610000006300000074
*000000690000006f0000006e000000730000002000000077000000690000007400000068000000
*20000000280000003e0000003e000000290000000a010214000000200000002000000020000000
*690000006e00000020000000740000006800000065000000200000006d000000610000006e0000
*006e0000006500000072000000200000006f000000660000002001040100000000000000013000
*0000000000002e000000000000003d0102060000002000000066000000720000006f0000006d00
*00002001050d000000440000006100000074000000610000002e000000460000006f0000006c00
*00006400000061000000620000006c0000006501021a0000002e00000020000000410000006e00
*0000790000002000000076000000610000006c0000007500000065000000730000002000000072
*000000650000007400000075000000720000006e00000065000000640000002000000062000000
*79000000200000000a022200000020000000200000002000000072000000650000006400000075
*00000063000000650000006400000020000000610000006300000074000000690000006f000000
*6e0000007300000020000000610000007200000065000000200000006400000069000000730000
*006300000061000000720000006400000065000000640000002e0000000a00000000000000cb03
*010232000000450000006600000066000000690000006300000069000000650000006e00000074
*0000006c000000790000002000000061000000760000006f000000690000006400000020000000
*6e0000006500000065000000640000006c0000006500000073000000730000006c000000790000
*0020000000720000006500000062000000690000006e00000064000000690000006e0000006700
*0000200000007700000068000000650000006e000000200000007500000073000000690000006e
*000000670000002001040100000000000000000500000000000000000000000000000001010226
*000000200000006f0000006e00000020000000610000006e000000200000006100000063000000
*74000000690000006f0000006e0000002000000074000000680000006100000074000000200000
*00610000006c000000720000006500000061000000640000007900000020000000720000006500
*00007400000075000000720000006e000000730000002000000028000000290000000a023b0000
*002000000020000000200000004100000020000000720000006500000077000000720000006900
*000074000000650000002000000072000000750000006c00000065000000200000006100000075
*000000740000006f0000006d00000061000000740000006900000063000000610000006c000000
*6c00000079000000200000006100000070000000700000006c0000006900000065000000730000
*002000000074000000680000006900000073000000200000007700000068000000650000006e00
*000020000000700000006f000000730000007300000069000000620000006c000000650000000a
*3e00000000000000ff0000000000000100000000000000010100000000000000fc000000000000
*010200000000000001030000000000000104000000000000010500000000000001060000000000
*00010700000000000001080000000000000109000000000000010a000000000000010b00000000
*0000010c000000000000010d000000000000010e000000000000010f0000000000000110000000
*000000011100000000000001120000000000000113000000000000011400000000000001150000
*000000000116000000000000011700000000000001180000000000000119000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*000000000000000600000000000000070000000000000008000000000000000900000000000000
*0a000000000000006600000000000000670000000000000069000000000000006a000000000000
*006b000000000000006c000000000000006d000000000000006e000000000000006f0000000000
*00007000000000000000710000000000000073000000000000007400000000000000c200000000
*000000c300000000000000c400000000000000c500000000000000c600000000000000c7000000
*00000000c800000000000000c900000000000000ca00000000000000cb0a00000000000000c800
*000000000000c900000000000000ca00000000000000cb00000000000000c500000000000000c6
*00000000000000c700000000000000c200000000000000c300000000000000c400000000000000
*0000000000000000250001230000006e0000006f0000006e0000002d000000700000006f000000
*720000007400000061000000620000006c00000065000000200000002800000074000000790000
*0070000000650000002000000066000000610000006d000000690000006c000000690000006500
*0000730000002c000000200000004d0000005000000054000000430000007300000029010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c0110000000650000006b0000006d000000650000007400000074000000400000
*00670000006d00000061000000690000006c0000002e000000630000006f0000006d1500000000
*000000cc010301020c000000450000006600000066000000690000006300000069000000650000
*006e000000740000006c000000790000002001040100000000000000002a000000000000000000
*000000000000060102030000002000000061000000200104010000000000000000280000000000
*000000000000000000000601020b000000200000007500000073000000690000006e0000006700
*000020000000740000006800000065000000200104020000000000000000bf0000000000000000
*00000000000000230000000000000000be00000000000000000000000000000023010234000000
*200000006d0000006f0000006e0000006f00000069000000640000002e00000020000000410000
*00200000007300000070000000650000006300000069000000610000006c000000690000007a00
*000065000000640000002000000076000000650000007200000073000000690000006f0000006e
*000000200000006f0000006600000020000000690000007400000073000000200000006e000000
*610000006d0000006500000073000000610000006b000000650000002000000066000000720000
*006f0000006d0000002001050d000000440000006100000074000000610000002e000000460000
*006f0000006c0000006400000061000000620000006c0000006502010000000a0b010201000000
*0a010205000000200000002000000020000000200000002001040100000000000000002a000000
*00000000000000000000000006010201000000200104010000000000000000c000000000000000
*0000000000000000230102010000000a020000000000000000cd0103010221000000430000006f
*0000006e00000076000000650000006e00000069000000650000006e0000006300000065000000
*2000000066000000750000006e0000006300000074000000690000006f0000006e000000200000
*00610000007300000020000000660000006f000000750000006e00000064000000200000006900
*00006e0000002001050d000000440000006100000074000000610000002e000000460000006f00
*00006c0000006400000061000000620000006c0000006502010000000a0b0102010000000a0102
*050000002000000020000000200000002000000020010401000000000000000131000000000000
*002e000000000000003a010201000000200104010000000000000000cc00000000000000000000
*0000000000250102010000000a020000000000000000ce01030102310000005400000068000000
*650000002000000073000000750000006d000000200000006f0000006600000020000000610000
*0020000000630000006f0000006c0000006c000000650000006300000074000000690000006f00
*00006e000000200000006f0000006600000020000000610000006300000074000000690000006f
*0000006e000000730000002c0000002000000067000000650000006e0000006500000072000000
*610000006c000000690000007a000000690000006e000000670000002001040100000000000000
*0132000000000000002e000000000000003e02010000000a0b0102010000000a01020400000020
*00000020000000200000002001040100000000000000002f000000000000000000000000000000
*06010201000000200104010000000000000000bd00000000000000000000000000000023010201
*0000000a020000000000000000cf010301020c0000004500000066000000660000006900000063
*00000069000000650000006e000000740000006c00000079000000200104010000000000000000
*2a0000000000000000000000000000000601020300000020000000610000002001040100000000
*00000000280000000000000000000000000000000601020b000000200000007500000073000000
*690000006e00000067000000200000007400000068000000650000002001040200000000000000
*00c9000000000000000000000000000000240000000000000000c8000000000000000000000000
*00000024010234000000200000006d0000006f0000006e0000006f00000069000000640000002e
*000000200000004100000020000000730000007000000065000000630000006900000061000000
*6c000000690000007a000000650000006400000020000000760000006500000072000000730000
*00690000006f0000006e000000200000006f000000660000002000000069000000740000007300
*0000200000006e000000610000006d0000006500000073000000610000006b0000006500000020
*00000066000000720000006f0000006d0000002001050d00000044000000610000007400000061
*0000002e000000460000006f0000006c0000006400000061000000620000006c00000065010205
*00000020000000610000006e000000640000002001050d000000430000006f0000006e00000074
*000000720000006f0000006c0000002e0000004d0000006f0000006e0000006100000064020100
*00000a0b0102010000000a01020400000020000000200000002000000020010401000000000000
*00002e00000000000000000000000000000006010201000000200104010000000000000000ca00
*0000000000000000000000000000240102010000000a020000000000000000d001030102210000
*00430000006f0000006e00000076000000650000006e00000069000000650000006e0000006300
*0000650000002000000066000000750000006e0000006300000074000000690000006f0000006e
*00000020000000610000007300000020000000660000006f000000750000006e00000064000000
*20000000690000006e0000002001050d000000440000006100000074000000610000002e000000
*460000006f0000006c0000006400000061000000620000006c0000006501020500000020000000
*610000006e000000640000002001050d000000430000006f0000006e0000007400000072000000
*6f0000006c0000002e0000004d0000006f0000006e000000610000006402010000000a0b010201
*0000000a0102050000002000000020000000200000002000000020010401000000000000000131
*000000000000002e000000000000003a010201000000200104010000000000000000cf00000000
*0000000000000000000000250102010000000a020000000000000000d101030102310000005400
*000068000000650000002000000073000000750000006d000000200000006f0000006600000020
*0000006100000020000000630000006f0000006c0000006c000000650000006300000074000000
*690000006f0000006e000000200000006f00000066000000200000006100000063000000740000
*00690000006f0000006e000000730000002c0000002000000067000000650000006e0000006500
*000072000000610000006c000000690000007a000000690000006e000000670000002001040100
*0000000000000132000000000000002e000000000000003e02010000000a0b0102010000000a01
*0205000000200000002000000020000000200000002001040100000000000000002f0000000000
*0000000000000000000006010201000000200104010000000000000000c7000000000000000000
*000000000000240102010000000a020000000000000000d2010301020c00000045000000660000
*0066000000690000006300000069000000650000006e000000740000006c000000790000002001
*040100000000000000002a00000000000000000000000000000006010203000000200000006100
*0000200104010000000000000000280000000000000000000000000000000601020b0000002000
*00007500000073000000690000006e000000670000002000000074000000680000006500000020
*010402000000000000000047000000000000000000000000000000090000000000000000460000
*0000000000000000000000000009010234000000200000006d0000006f0000006e0000006f0000
*0069000000640000002e0000002000000041000000200000007300000070000000650000006300
*000069000000610000006c000000690000007a0000006500000064000000200000007600000065
*0000007200000073000000690000006f0000006e000000200000006f0000006600000020000000
*690000007400000073000000200000006e000000610000006d0000006500000073000000610000
*006b000000650000002000000066000000720000006f0000006d0000002001050d000000440000
*006100000074000000610000002e000000460000006f0000006c00000064000000610000006200
*00006c0000006502010000000a0b0102010000000a010205000000200000002000000020000000
*200000002001040100000000000000002e00000000000000000000000000000006010201000000
*20010401000000000000000048000000000000000000000000000000090102010000000a020000
*000000000000d30301021700000054000000790000007000000065000000200000007300000070
*000000650000006300000069000000610000006c000000690000007a0000006100000074000000
*690000006f0000006e000000200000006f0000006600000020010507000000660000006f000000
*6c000000640000004d000000610000007002070000002000000061000000620000006f00000076
*000000650000000a00000000000000d4010301020c000000450000006600000066000000690000
*006300000069000000650000006e000000740000006c0000007900000020010401000000000000
*00002d000000000000000000000000000000060102030000002000000061000000200104010000
*000000000000280000000000000000000000000000000601020b00000020000000750000007300
*0000690000006e0000006700000020000000740000006800000065000000200104020000000000
*000000470000000000000000000000000000000900000000000000004600000000000000000000
*000000000009010234000000200000006d0000006f0000006e0000006f00000069000000640000
*002e00000020000000410000002000000073000000700000006500000063000000690000006100
*00006c000000690000007a00000065000000640000002000000076000000650000007200000073
*000000690000006f0000006e000000200000006f00000066000000200000006900000074000000
*73000000200000006e000000610000006d0000006500000073000000610000006b000000650000
*002000000066000000720000006f0000006d0000002001050d0000004400000061000000740000
*00610000002e000000460000006f0000006c0000006400000061000000620000006c0000006502
*010000000a0b0102010000000a0102050000002000000020000000200000002000000020010401
*00000000000000002f000000000000000000000000000000060102010000002001040100000000
*0000000048000000000000000000000000000000090102010000000a020000000000000000d503
*01020c000000430000006f0000006e000000760000006500000072000000740000002000000061
*0000006e0000007900000020010401000000000000000028000000000000000000000000000000
*0601022e00000020000000740000006f0000002000000061000000200000006c00000069000000
*7300000074000000200000006f0000006600000020000000690000007400000073000000200000
*00630000006f0000006e00000074000000650000006e00000074000000730000002e0000002000
*00005300000070000000650000006300000069000000610000006c000000690000007a00000061
*00000074000000690000006f0000006e000000200000006f000000660000002001040100000000
*000000002d0000000000000000000000000000000602010000000a00000000000000d601030102
*0c000000450000006600000066000000690000006300000069000000650000006e000000740000
*006c000000790000002001040100000000000000002d0000000000000000000000000000000601
*020300000020000000610000002001040100000000000000002800000000000000000000000000
*00000601021e000000200000007400000068000000610000007400000020000000630000006f00
*00006e0000007400000061000000690000006e000000730000002000000076000000610000006c
*000000750000006500000073000000200000006f00000066000000200000007400000079000000
*7000000065000000200104010000000000000001330000000000000033000000000000003f0201
*0000000a0b0102010000000a010205000000200000002000000020000000200000002001040100
*000000000000002f00000000000000000000000000000006010201000000200104010000000000
*00000108000000000000002e000000000000002f0102010000000a020000000000000000d70103
*01020c000000450000006600000066000000690000006300000069000000650000006e00000074
*0000006c000000790000002001040100000000000000002d000000000000000000000000000000
*060102030000002000000061000000200104010000000000000000280000000000000000000000
*000000000601021e00000020000000740000006800000061000000740000002000000063000000
*6f0000006e0000007400000061000000690000006e000000730000002000000076000000610000
*006c000000750000006500000073000000200000006f0000006600000020000000740000007900
*00007000000065000000200104010000000000000001330000000000000033000000000000003f
*02010000000a0b0102010000000a01020500000020000000200000002000000020000000200104
*0100000000000000002f0000000000000000000000000000000601020100000020010401000000
*00000000010b000000000000002e000000000000002f0102010000000a020000000000000000d8
*010301020c000000450000006600000066000000690000006300000069000000650000006e0000
*00740000006c000000790000002001040100000000000000002a00000000000000000000000000
*00000601020500000020000000610000006e000000790000002001040100000000000000002800
*000000000000000000000000000006024300000020000000630000006800000065000000630000
*006b000000690000006e0000006700000020000000740000006f00000020000000730000006500
*00006500000020000000690000006600000020000000610000006e00000079000000200000006f
*00000066000000200000006900000074000000730000002000000076000000610000006c000000
*750000006500000073000000200000006d00000061000000740000006300000068000000200000
*0074000000680000006500000020000000730000007500000070000000700000006c0000006900
*000065000000640000002000000070000000720000006500000064000000690000006300000061
*00000074000000650000000a0b0102010000000a01020500000020000000200000002000000020
*0000002001040100000000000000002e0000000000000000000000000000000601020100000020
*01040100000000000000010b000000000000002e000000000000002f0102010000000a02000000
*0000000000d9010301020c00000045000000660000006600000069000000630000006900000065
*0000006e000000740000006c000000790000002001040100000000000000002a00000000000000
*00000000000000000601020500000020000000610000006e000000790000002001040100000000
*000000002800000000000000000000000000000006024300000020000000630000006800000065
*000000630000006b000000690000006e0000006700000020000000740000006f00000020000000
*73000000650000006500000020000000690000006600000020000000610000006c0000006c0000
*00200000006f000000660000002000000069000000740000007300000020000000760000006100
*00006c000000750000006500000073000000200000006d00000061000000740000006300000068
*000000200000007400000068000000650000002000000073000000750000007000000070000000
*6c0000006900000065000000640000002000000070000000720000006500000064000000690000
*00630000006100000074000000650000000a0b0102010000000a01020500000020000000200000
*0020000000200000002001040100000000000000002e0000000000000000000000000000000601
*020100000020010401000000000000000108000000000000002e000000000000002f0102010000
*000a020000000000000000da010301022800000045000000660000006600000069000000630000
*0069000000650000006e000000740000006c000000790000002000000073000000750000006d00
*0000200000006f0000007600000065000000720000002000000074000000680000006500000020
*0000006d000000650000006d00000062000000650000007200000073000000200000006f000000
*6600000020000000610000006e0000007900000020010401000000000000000028000000000000
*0000000000000000000602010000000a0b0102010000000a010205000000200000002000000020
*000000200000002001040100000000000000002f00000000000000000000000000000006010201
*0000002001040100000000000000010e000000000000002e000000000000002f0102010000000a
*020000000000000000db0103010232000000450000006600000066000000690000006300000069
*000000650000006e000000740000006c000000790000002000000074000000610000006b000000
*65000000200000007400000068000000650000002000000070000000720000006f000000640000
*00750000006300000074000000200000006f000000660000002000000065000000760000006500
*00007200000079000000200000006d000000650000006d00000062000000650000007200000020
*0000006f0000006600000020000000610000002001040100000000000000002800000000000000
*00000000000000000602010000000a0b0102010000000a01020500000020000000200000002000
*0000200000002001040100000000000000002f0000000000000000000000000000000601020100
*000020010401000000000000000111000000000000002e000000000000002f0102010000000a02
*0000000000000000dc03010210000000430000006800000065000000630000006b000000200000
*00740000006f000000200000007300000065000000650000002000000069000000660000002001
*04010000000000000000d80000000000000000000000000000002501020f000000200000006d00
*0000650000006d000000620000006500000072000000200000006f000000660000002000000074
*000000680000006500000020010401000000000000000028000000000000000000000000000000
*06021c000000200000006d00000061000000740000006300000068000000650000007300000020
*00000074000000680000006500000020000000730000007500000070000000700000006c000000
*6900000065000000640000002000000076000000610000006c00000075000000650000000a0000
*0000000000dd03010242000000430000006800000065000000630000006b000000200000007400
*00006f000000200000006d000000610000006b0000006500000020000000730000007500000072
*000000650000002000000074000000680000006100000074000000200000007400000068000000
*6500000020000000730000007500000070000000700000006c0000006900000065000000640000
*002000000076000000610000006c00000075000000650000002000000069000000730000002000
*00006e0000006f000000740000002000000061000000200000006d000000650000006d00000062
*0000006500000072000000200000006f0000006600000020000000740000006800000065000000
*200104010000000000000000280000000000000000000000000000000602010000000a00000000
*000000de0301020c00000045000000660000006600000069000000630000006900000065000000
*6e000000740000006c000000790000002001040100000000000000002a00000000000000000000
*00000000000601021f000000200000006100000020000000730000007500000062000000730000
*006500000074000000200000006f00000066000000200000007400000068000000650000002000
*0000650000006c000000650000006d000000650000006e00000074000000730000002000000069
*0000006e0000002000000061000000200104010000000000000000280000000000000000000000
*000000000602010000000a00000000000000df03026a000000410000006c0000006c0000006f00
*00007700000073000000200000006900000064000000690000006f0000006d0000006100000074
*000000690000006300000020000000730000007000000065000000630000006900000061000000
*6c000000690000007a0000006100000074000000690000006f0000006e000000200000006f0000
*00660000002000000066000000690000006c000000740000006500000072000000200000006200
*0000790000002000000070000000720000006f00000076000000690000006e0000006700000020
*000000610000002000000066000000750000006e0000006300000074000000690000006f000000
*6e00000020000000740000006800000061000000740000002000000077000000690000006c0000
*006c00000020000000620000006500000020000000750000007300000065000000640000002000
*0000740000006f000000200000007400000072000000610000006e00000073000000660000006f
*000000720000006d00000020000000740000006800000065000000200000006f00000075000000
*740000007000000075000000740000000a00000000000000e00103010214000000410000002000
*00007300000070000000650000006300000069000000610000006c000000690000007a00000061
*00000074000000690000006f0000006e000000200000006f000000660000002001040100000000
*00000000de0000000000000000000000000000002501020b000000200000007500000073000000
*690000006e00000067000000200000007400000068000000650000002001040200000000000000
*0115000000000000002e000000000000002f000000000000000116000000000000002e00000000
*0000002f010201000000200104010000000000000000fc000000000000002e000000000000002f
*01020f0000002c00000020000000610000006e000000610000006c0000006f000000670000006f
*000000750000007300000020000000740000006f0000002001020e000000440000006100000074
*000000610000002e0000004c0000006900000073000000740000002e0000006600000069000000
*6e0000006402010000000a0b0102010000000a0102050000002000000020000000200000002000
*0000200104010000000000000000df000000000000000000000000000000250102010000002001
*0401000000000000000114000000000000002e000000000000002f0102010000000a02004d0000
*0000000000ff0000000000000100000000000000010100000000000000fc000000000000010200
*000000000001030000000000000104000000000000010500000000000001060000000000000107
*00000000000001080000000000000109000000000000010a000000000000010b00000000000001
*0c000000000000010d000000000000010e000000000000010f0000000000000110000000000000
*011100000000000001120000000000000113000000000000011400000000000001150000000000
*000116000000000000011700000000000001180000000000000119000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005000000
*0000000006000000000000000700000000000000080000000000000009000000000000000a0000
*00000000001f000000000000002000000000000000210000000000000022000000000000002300
*000000000000240000000000000025000000000000002600000000000000270000000000000028
*0000000000000029000000000000002a000000000000002b000000000000002c00000000000000
*2d000000000000002e000000000000002f00000000000000cc00000000000000cd000000000000
*00ce00000000000000cf00000000000000d000000000000000d100000000000000d20000000000
*0000d300000000000000d400000000000000d500000000000000d600000000000000d700000000
*000000d800000000000000d900000000000000da00000000000000db00000000000000dc000000
*00000000dd00000000000000de00000000000000df00000000000000e01500000000000000cf00
*000000000000d000000000000000d100000000000000cc00000000000000cd00000000000000ce
*00000000000000d600000000000000d700000000000000d800000000000000d900000000000000
*d200000000000000d400000000000000d500000000000000d300000000000000dc000000000000
*00de00000000000000df00000000000000e000000000000000da00000000000000db0000000000
*0000dd000000000000000000000000000000260001140000006e0000006f0000006e0000002d00
*0000700000006f000000720000007400000061000000620000006c000000650000002000000028
*0000004d0000005000000054000000430000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d003a00000000000000ff000000000000
*0100000000000000010100000000000000fc000000000000010200000000000001030000000000
*000104000000000000010500000000000001060000000000000107000000000000010800000000
*00000109000000000000010a000000000000010b000000000000010c000000000000010d000000
*000000010e000000000000010f0000000000000110000000000000011100000000000001120000
*000000000113000000000000011400000000000001150000000000000116000000000000011700
*000000000001180000000000000119000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*0700000000000000080000000000000009000000000000000a000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000025000000000000002600000000000000270000000000000028000000000000002900000000
*0000002a000000000000002b000000000000002c000000000000002d000000000000002e000000
*000000002f00000000000000e100000000000000e20200000000000000e100000000000000e200
*0000000000000000000000000000270001230000006e0000006f0000006e0000002d0000007000
*00006f000000720000007400000061000000620000006c00000065000000200000002800000074
*0000007900000070000000650000002000000066000000610000006d000000690000006c000000
*6900000065000000730000002c000000200000004d000000500000005400000043000000730000
*0029010c0000006500000078000000700000006500000072000000690000006d00000065000000
*6e00000074000000610000006c0110000000650000006b0000006d000000650000007400000074
*00000040000000670000006d00000061000000690000006c0000002e000000630000006f000000
*6d002c00000000000000ff0000000000000100000000000000010100000000000000fc00000000
*000001020000000000000103000000000000010400000000000001050000000000000106000000
*000000010700000000000001080000000000000109000000000000010a000000000000010b0000
*00000000010c000000000000010d000000000000010e000000000000010f000000000000011000
*000000000001110000000000000112000000000000011300000000000001140000000000000115
*000000000000011600000000000001170000000000000118000000000000011900000000000000
*6600000000000000670000000000000069000000000000006a000000000000006b000000000000
*006c000000000000006d000000000000006e000000000000006f00000000000000700000000000
*00007100000000000000730000000000000074000000000000007500000000000000e300000000
*000000e40200000000000000e300000000000000e4000000000000000000000000000000280000
*00000100000000000000e5010b022a00000072000000200000002a0000002e0000002000000028
*00000078000000200000002a000000200000007900000029000000200000003d00000020000000
*2800000072000000200000002a0000002e000000200000007800000029000000200000002a0000
*002000000079000000200000003d0000002000000078000000200000002a000000200000002800
*000072000000200000002a0000002e0000002000000079000000290b022a000000280000007800
*0000200000002a000000200000007900000029000000200000002e0000002a0000002000000072
*000000200000003d0000002000000079000000200000002a000000200000002800000078000000
*200000002e0000002a000000200000007200000029000000200000003d00000020000000280000
*0079000000200000002e0000002a000000200000007200000029000000200000002a0000002000
*0000783500000000000000ff0000000000000100000000000000010100000000000000fc000000
*000000010200000000000001030000000000000104000000000000010500000000000001060000
*00000000010700000000000001080000000000000109000000000000010a000000000000010b00
*0000000000010c000000000000010d000000000000010e000000000000010f0000000000000110
*000000000000011100000000000001120000000000000113000000000000011400000000000001
*150000000000000116000000000000011700000000000001180000000000000119000000000000
*006600000000000000670000000000000069000000000000006a000000000000006b0000000000
*00006c000000000000006d000000000000006e000000000000006f000000000000007000000000
*000000710000000000000073000000000000007400000000000000750000000000000097000000
*00000000980000000000000099000000000000009a00000000000000a700000000000000b30000
*0000000000b400000000000000b500000000000000b600000000000000b700000000000000e501
*00000000000000e50000000000000000000000000000002900011e000000700000006f00000072
*0000007400000061000000620000006c000000650000002000000028000000690000006e000000
*7300000074000000610000006e0000006300000065000000730000002000000075000000730000
*0065000000200000004d0000005000000054000000430000007300000029010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c0110000000650000006b0000006d0000006500000074000000740000004000000067000000
*6d00000061000000690000006c0000002e000000630000006f0000006d2200000000000000e603
*010276000000530000006500000074000000200000006f00000070000000650000007200000061
*00000074000000690000006f0000006e00000073000000200000006f0000007000000074000000
*690000006d000000690000007a000000650000006400000020000000660000006f000000720000
*002000000074000000690000006700000068000000740000006c00000079000000200000006700
*0000720000006f0000007500000070000000650000006400000020000000730000006500000074
*00000073000000200000006f00000072000000200000006e000000650000006100000072000000
*6c0000007900000020000000750000006e00000069000000760000006500000072000000730000
*00610000006c000000200000007300000065000000740000007300000020000000770000006900
*00007400000068000000200000006100000020000000630000006c0000006f0000007300000065
*0000002000000062000000790000002000000067000000720000006f0000007500000070000000
*200000006f0000006600000020000000650000006c000000650000006d000000650000006e0000
*007400000073000000200000006d000000690000007300000073000000690000006e0000006700
*00002e0000000a01027700000020000000200000002000000053000000740000006f0000007200
*0000650000007300000020000000690000007400000073000000650000006c0000006600000020
*0000006c000000690000006b0000006500000020000000610000006e0000002000000061000000
*720000006200000069000000740000007200000061000000720000007900000020000000700000
*007200000065000000630000006900000073000000690000006f0000006e000000200000006600
*00006c0000006f0000006100000074000000690000006e0000006700000020000000700000006f
*000000690000006e00000074000000200000006e000000750000006d0000006200000065000000
*720000002c00000020000000740000007200000061000000630000006b000000690000006e0000
*006700000020000000740000006800000065000000200000006c00000065000000610000007300
*0000740000002000000076000000610000006c000000750000006500000064000000200000006d
*000000650000006d000000620000006500000072000000200000006f0000006600000020000000
*7400000068000000650000002000000073000000650000007400000020000000610000006e0000
*006400000020000000610000006e0000000a022600000020000000200000002000000049000000
*6e000000740000006500000067000000650000007200000020000000630000006f0000006d0000
*00700000007200000069000000730000006500000064000000200000006f000000660000002000
*0000740000006800000065000000200000006d000000650000006d000000620000006500000072
*000000730000002e000000200000000a0000000000000134030102310000004100000020000000
*630000006f0000006e000000730000006500000072000000760000006100000074000000690000
*007600000065000000200000007500000070000000700000006500000072000000200000006200
*00006f000000750000006e00000064000000200000006f0000006e000000200000007400000068
*0000006500000020000000650000006c000000650000006d000000650000006e00000074000000
*20000000630000006f000000750000006e000000740000002e0000000a02410000002000000020
*000000200000004900000066000000200000006e00000065000000670000006100000074000000
*6900000076000000650000002c0000002000000077000000650000002000000061000000720000
*006500000020000000630000006f0000006d000000700000006c000000650000006d0000006500
*00006e000000740000006500000064000000200000007700000069000000740000006800000020
*000000720000006500000073000000700000006500000063000000740000002000000074000000
*6f0000002000000074000000680000006500000020000000750000006e00000069000000760000
*00650000007200000073000000650000000a000000000000013503010231000000410000002000
*0000630000006f0000006e00000073000000650000007200000076000000610000007400000069
*0000007600000065000000200000006c0000006f00000077000000650000007200000020000000
*620000006f000000750000006e00000064000000200000006f0000006e00000020000000740000
*00680000006500000020000000650000006c000000650000006d000000650000006e0000007400
*000020000000630000006f000000750000006e000000740000002e0000000a0241000000200000
*0020000000200000004900000066000000200000006e0000006500000067000000610000007400
*00006900000076000000650000002c000000200000007700000065000000200000006100000072
*0000006500000020000000630000006f0000006d000000700000006c000000650000006d000000
*650000006e00000074000000650000006400000020000000770000006900000074000000680000
*002000000072000000650000007300000070000000650000006300000074000000200000007400
*00006f0000002000000074000000680000006500000020000000750000006e0000006900000076
*000000650000007200000073000000650000000a000000000000013603024b0000004c00000061
*0000007a0000007900000020000000650000006c000000650000006d000000650000006e000000
*7400000020000000630000006f000000750000006e000000740000002000000075000000730000
*006500000064000000200000007700000068000000650000006e00000020000000740000006800
*0000650000002000000061000000620000006f0000007600000065000000200000007400000077
*0000006f0000002000000064000000690000007300000061000000670000007200000065000000
*650000002e000000200000004f00000028000000310000002900000020000000650000006e0000
*007600000069000000720000006f0000006e0000006d000000650000006e000000740000002000
*000073000000690000007a000000650000000a00000000000001370302430000004c0000006f00
*000077000000200000007700000061000000740000006500000072000000200000006d00000061
*000000720000006b0000002e00000020000000690000006e000000640000006500000078000000
*200000006f0000006600000020000000740000006800000065000000200000006c000000650000
*0061000000730000007400000020000000650000006c000000650000006d000000650000006e00
*00007400000020000000700000006f00000074000000650000006e000000740000006900000061
*0000006c0000006c0000007900000020000000690000006e000000200000007400000068000000
*65000000200000007300000065000000740000002e0000000a0000000000000138030247000000
*480000006900000067000000680000002000000077000000610000007400000065000000720000
*00200000006d00000061000000720000006b0000002e00000020000000690000006e0000006400
*00006500000078000000200000006f000000660000002000000074000000680000006500000020
*000000670000007200000065000000610000007400000065000000730000007400000020000000
*650000006c000000650000006d000000650000006e0000007400000020000000700000006f0000
*0074000000650000006e0000007400000069000000610000006c0000006c000000790000002000
*0000690000006e0000002000000074000000680000006500000020000000730000006500000074
*0000002e0000000a00000000000001390301022c00000074000000680000006500000020000000
*730000006500000074000000200000006f00000066000000200000006200000069000000740000
*0073000000200000007300000074000000610000007200000074000000690000006e0000006700
*00002000000066000000720000006f0000006d0000002000000074000000680000006500000020
*0000006500000078000000700000006f0000006e000000650000006e000000740000002e000000
*0a02430000002000000020000000200000006900000066000000200000006e0000006500000067
*00000061000000740000006900000076000000650000002c000000200000007400000068000000
*650000006e00000020000000770000006500000020000000610000007200000065000000200000
*00630000006f0000006d000000700000006c0000006d000000650000006e000000650000006e00
*000074000000650000006400000020000000770000006900000074000000680000002000000072
*00000065000000730000007000000065000000630000007400000020000000740000006f000000
*20000000750000006e0000006900000076000000650000007200000073000000650000000a0000
*00000000013a0301021d000000690000006e000000760000006100000072000000690000006100
*00006e000000740000003a000000200000007700000068000000650000006e0000006500000076
*0000006500000072000000200000006d000000610000006e000000740000006900000073000000
*7300000061000000200102010000003c023500000020000000300000002c000000200000007500
*00006e000000690000007600000065000000720000007300000065000000200000003d00000020
*0000002800000066000000720000006f0000006d000000450000006e000000750000006d000000
*200000006d000000690000006e000000420000006f000000750000006e000000640000002c0000
*0066000000720000006f0000006d000000450000006e000000750000006d000000200000006d00
*00006100000078000000420000006f000000750000006e00000064000000290000000a00000000
*0000013b03023500000073000000650000006c000000660000002d000000630000006f0000006e
*0000007400000061000000690000006e0000006500000064000000200000006500000078000000
*7400000072000000610000006300000074000000690000006f0000006e00000020000000620000
*0065000000680000006100000076000000690000006f000000720000002c000000200000006500
*00006e00000061000000620000006c000000650000007300000020000000460000006f0000006c
*0000006400000061000000620000006c000000650000000a000000000000013c03024500000049
*0000006e0000007400000065000000720000006e000000610000006c0000002000000073000000
*6d00000061000000720000007400000020000000630000006f0000006e00000073000000740000
*00720000007500000063000000740000006f000000720000002e00000020000000460000006f00
*00007200000063000000650000007300000020000000630000006f000000750000006e00000074
*000000200000007700000068000000650000006e00000065000000760000006500000072000000
*200000006900000074000000200000006900000073000000200000007000000069000000670000
*00650000006f0000006e000000680000006f0000006c00000065000000640000002e0000000a00
*0000000000013d03010602040000004f0000002800000064000000290102070000002000000077
*00000068000000650000007200000065000000200106020100000064023e000000200000006900
*000073000000200000006100000062000000730000006f0000006c000000750000007400000065
*00000020000000640000006500000076000000690000006100000074000000690000006f000000
*6e00000020000000690000006e00000020000000740000006800000065000000200000006f0000
*007500000074000000700000007500000074000000200000006f00000066000000200000006600
*0000720000006f0000006d000000450000006e000000750000006d000000200000006f00000076
*000000650000007200000020000000740000006800000065000000200000007300000065000000
*740000000a00000000000000e703010602040000004f0000002800000031000000290102180000
*002000000054000000680000006500000020000000650000006d00000070000000740000007900
*0000200000007300000065000000740000002e000000200000005000000065000000720000006d
*00000069000000740000007300000020010602040000004f000000280000003100000029021000
*0000200000006e000000750000006c0000006c00000020000000610000006e0000006400000020
*00000073000000690000007a000000650000002e0000000a00000000000000e803010602040000
*004f00000028000000310000002901020d00000020000000430000006f0000006e000000730000
*007400000072000000750000006300000074000000200000006100000020010702060000004200
*000069000000740000005300000065000000740102200000002000000077000000690000007400
*00006800000020000000610000002000000073000000690000006e000000670000006c00000065
*00000020000000650000006c000000650000006d000000650000006e000000740000002e000000
*200000005000000065000000720000006d00000069000000740000007300000020010602040000
*004f000000280000003100000029020f000000200000006e000000750000006c0000006c000000
*20000000610000006e000000640000002000000073000000690000007a000000650000000a0000
*0000000000e903010602040000004f000000280000003100000029010218000000200000006100
*00006d0000006f0000007200000074000000690000007a00000065000000640000002000000063
*0000006f00000073000000740000002e0000002000000049000000730000002000000074000000
*6800000065000000200104010000000000000000e6000000000000000000000000000000290102
*2700000020000000650000006d0000007000000074000000790000003f000000200000004d0000
*006100000079000000200000006200000065000000200000006600000061000000730000007400
*00006500000072000000200000007400000068000000610000006e000000200000006300000068
*00000065000000630000006b000000690000006e00000067000000200000006900000066000000
*2001070104010000000000000000ea000000000000000000000000000000290205000000200000
*003d0000003d000000200000003002020000002e0000000a00000000000000ea03010602040000
*004f000000280000003100000029023800000020000000610000006d0000006f00000072000000
*74000000690000007a000000650000006400000020000000630000006f00000073000000740000
*002e00000020000000540000006800000065000000200000006e000000750000006d0000006200
*00006500000072000000200000006f0000006600000020000000650000006c000000650000006d
*000000650000006e000000740000007300000020000000690000006e0000002000000074000000
*680000006500000020000000620000006900000074000000200000007300000065000000740000
*002e0000000a00000000000000eb03010602040000004f00000028000000640000002901020300
*00002000000041000000200104010000000000000000e600000000000000000000000000000029
*01022f00000020000000630000006f0000006e0000007400000061000000690000006e00000069
*0000006e0000006700000020000000650000007600000065000000720000007900000020000000
*6d000000650000006d000000620000006500000072000000200000006f00000066000000200000
*0074000000680000006500000020000000650000006e000000750000006d000000650000007200
*00006100000074000000690000006f0000006e000000200000006f000000660000002001070201
*0000006102020000002e0000000a00000000000000ec03010602040000004f0000002800000064
*0000002901020f00000020000000430000006f0000006d000000700000006c000000650000006d
*000000650000006e00000074000000730000002000000061000000200104010000000000000000
*e60000000000000000000000000000002901021f00000020000000770000006900000074000000
*680000002000000072000000650000007300000070000000650000006300000074000000200000
*00740000006f0000002000000074000000680000006500000020000000620000006f0000007500
*00006e0000006400000073000000200000006f0000006600000020010702010000006101021500
*00002e000000200000005000000072000000650000007300000065000000720000007600000065
*00000073000000200000006f00000072000000640000006500000072000000200000006f000000
*66000000200104010000000000000000e900000000000000000000000000000029010205000000
*20000000610000006e00000064000000200104010000000000000000ea00000000000000000000
*00000000002902010000000a000000000000013e03010602040000004f00000028000000640000
*0029025c00000020000000750000006e0000007300000061000000660000006500000020000000
*690000006e0000007400000065000000720000006e000000610000006c000000200000006d0000
*006500000074000000680000006f000000640000003a00000020000000630000006f0000006d00
*0000700000006c000000650000006d000000650000006e00000074000000200000006100000020
*000000730000006500000074000000200000007400000068000000610000007400000020000000
*68000000610000007300000020000000610000006c000000720000006500000061000000640000
*0079000000200000006200000065000000650000006e00000020000000630000006f0000006d00
*0000700000006c000000650000006d000000650000006e00000074000000650000006400000020
*0000006100000074000000200000006c0000006500000061000000730000007400000020000000
*6f0000006e00000063000000650000002e0000000a000000000000013f03010602040000004f00
*0000280000006400000029025c00000020000000750000006e0000007300000061000000660000
*006500000020000000690000006e0000007400000065000000720000006e000000610000006c00
*0000200000006d0000006500000074000000680000006f000000640000003a0000002000000063
*0000006f0000006d000000700000006c000000650000006d000000650000006e00000074000000
*200000006100000020000000730000006500000074000000200000007400000068000000610000
*00740000002000000068000000610000007300000020000000610000006c000000720000006500
*0000610000006400000079000000200000006200000065000000650000006e0000002000000063
*0000006f0000006d000000700000006c000000650000006d000000650000006e00000074000000
*6500000064000000200000006100000074000000200000006c0000006500000061000000730000
*0074000000200000006f0000006e00000063000000650000002e0000000a00000000000000ed03
*010602080000004f0000002800000064000000200000002a000000200000006e00000029010208
*000000200000004d000000610000006b0000006500000020000000610000002001040100000000
*00000000e60000000000000000000000000000002902170000002000000066000000720000006f
*0000006d0000002000000061000000200000006c00000069000000730000007400000020000000
*6f00000066000000200000006900000074000000650000006d000000730000002e0000000a0000
*0000000000ee03010602080000004f0000002800000064000000200000002a000000200000006e
*00000029010208000000200000004d000000610000006b00000065000000200000006100000020
*0104010000000000000000e6000000000000000000000000000000290229000000200000006600
*0000720000006f0000006d00000020000000610000002000000064000000690000007300000074
*000000690000006e00000063000000740000002000000061000000730000006300000065000000
*6e00000064000000690000006e00000067000000200000006c0000006900000073000000740000
*00200000006f00000066000000200000006900000074000000650000006d000000730000000a00
*000000000000ef03010602040000004f0000002800000064000000290102210000002000000049
*0000006e0000007300000065000000720000007400000020000000610000002000000073000000
*690000006e000000670000006c0000006500000020000000650000006c000000650000006d0000
*00650000006e00000074000000200000006f000000660000002000000074000000790000007000
*00006500000020010702010000006101020a00000020000000690000006e000000740000006f00
*000020000000740000006800000065000000200104010000000000000000e60000000000000000
*00000000000000290102150000002e000000200000005000000072000000650000007300000065
*00000072000000760000006500000073000000200000006f000000720000006400000065000000
*72000000200000006f00000066000000200104010000000000000000e900000000000000000000
*00000000002901020500000020000000610000006e000000640000002001040100000000000000
*00ea0000000000000000000000000000002902010000000a00000000000000f003010602040000
*004f00000028000000640000002901021f0000002000000044000000650000006c000000650000
*00740000006500000020000000610000002000000073000000690000006e000000670000006c00
*000065000000200000006900000074000000650000006d0000002000000066000000720000006f
*0000006d00000020000000740000006800000065000000200104010000000000000000e6000000
*000000000000000000000000290102150000002e00000020000000500000007200000065000000
*730000006500000072000000760000006500000073000000200000006f00000072000000640000
*006500000072000000200000006f00000066000000200104010000000000000000e90000000000
*000000000000000000002901020500000020000000610000006e00000064000000200104010000
*000000000000ea0000000000000000000000000000002902010000000a00000000000000f10301
*0602040000004f00000028000000310000002901021a0000002000000054000000650000007300
*00007400000020000000660000006f00000072000000200000006d000000650000006d00000062
*00000065000000720000007300000068000000690000007000000020000000690000006e000000
*2000000061000000200104010000000000000000e6000000000000000000000000000000290201
*0000000a00000000000000f203010602040000004f000000280000006400000029024200000020
*000000630000006f0000006e000000760000006500000072000000740000002000000074000000
*6f00000020000000610000006e00000020000000490000006e0000007400000065000000670000
*006500000072000000200000007200000065000000700000007200000065000000730000006500
*00006e000000740000006100000074000000690000006f0000006e0000002e0000002000000044
*00000069000000730000006300000061000000720000006400000073000000200000006e000000
*6500000067000000610000007400000069000000760000006500000020000000650000006c0000
*00650000006d000000650000006e00000074000000730000000a00000000000000f30301060204
*0000004f00000028000000640000002902020000002e0000000a00000000000000f40301060204
*0000004f0000002800000031000000290102360000002000000043000000680000006500000063
*0000006b00000020000000740000006f0000002000000073000000650000006500000020000000
*690000006600000020000000770000006500000020000000610000007200000065000000200000
*00720000006500000070000000720000006500000073000000650000006e000000740000006500
*000064000000200000006100000073000000200000006100000020000000630000006f0000006d
*000000700000006c000000650000006d000000650000006e000000740000006500000064000000
*200104010000000000000000e60000000000000000000000000000002902030000002e00000020
*0000000a00000000000000f503010602040000004f000000280000006400000029020200000020
*0000000a000000000000014001030253000000550000006e000000730000006100000066000000
*6500000020000000690000006e0000007400000065000000720000006e000000610000006c0000
*00200000006d0000006500000074000000680000006f0000006400000020000000660000006f00
*00007200000020000000630000006f0000006d000000700000007500000074000000690000006e
*000000670000002000000064000000690000006600000066000000650000007200000065000000
*6e00000063000000650000007300000020000000690000006e0000002000000061000000200000
*006b0000006e0000006f000000770000006e00000020000000750000006e000000690000007600
*000065000000720000007300000065000000200000006f00000066000000200000006400000069
*00000073000000630000006f000000750000007200000073000000650000002e0000000a010302
*0f000000500000007200000065000000630000006f0000006e0000006400000069000000740000
*00690000006f0000006e000000730000003a0000000a0901030102010000002001070206000000
*6d000000200000003e0000003d00000020000000300102010000000a0102050000002000000032
*00000020000000200000002001070102010000006d010201000000270205000000200000003e00
*00003d00000020000000300102010000000a010205000000200000003300000020000000200000
*0020010701020200000061000000200102010000002f02040000003d000000200000002d000000
*310102010000000a01020500000020000000340000002000000020000000200107010201000000
*6101020100000027010201000000200102010000002f02040000003d000000200000002d000000
*310102010000000a01020500000020000000350000002000000020000000200107010202000000
*62000000200102010000002f02030000003d00000020000000300102010000000a010205000000
*200000003600000020000000200000002001070102010000006201020100000027010201000000
*200102010000002f02030000003d00000020000000300102010000000a01020500000020000000
*370000002000000020000000200107010201000000750102010000002702010000002701022200
*000020000000690000007300000020000000610000002000000070000000720000006500000076
*000000690000006f00000075000000730000006c00000079000000200000006f00000062000000
*7400000061000000690000006e000000650000006400000020000000630000006f000000700000
*0079000000200000006f0000006600000020010702260000002800000066000000720000006f00
*00006d000000450000006e000000750000006d000000200000006d000000690000006e00000042
*0000006f000000750000006e000000640000002c0000002000000066000000720000006f000000
*6d000000450000006e000000750000006d000000200000006d0000006100000078000000420000
*006f000000750000006e000000640000002902010000000a000000000000014103010602040000
*004f00000028000000640000002902410000002000000052000000650000006d0000006f000000
*760000006500000020000000610000006c0000006c00000020000000650000006c000000650000
*006d000000650000006e0000007400000073000000200000007000000072000000650000007300
*0000650000006e0000007400000020000000690000006e00000020000000740000006800000065
*000000200000007300000065000000630000006f0000006e000000640000002000000062000000
*69000000740000007300000065000000740000002000000066000000720000006f0000006d0000
*002000000074000000680000006500000020000000660000006900000072000000730000007400
*00000a00000000000000f603010602040000004f00000028000000640000002901020700000020
*000000490000006e00000066000000690000007800000020010401010000000000000141020100
*00000a00000000000001420302380000005500000074000000690000006c000000690000007400
*0000790000002000000066000000750000006e0000006300000074000000690000006f0000006e
*00000020000000740000006f0000002000000061000000760000006f0000006900000064000000
*20000000720000006500000071000000750000006900000072000000690000006e000000670000
*002000000053000000630000006f00000070000000650000006400000054000000790000007000
*0000650000005600000061000000720000006900000061000000620000006c0000006500000073
*0000000a000000000000014303010602040000004f00000028000000640000002902010000000a
*000000000000014403010602040000004f000000280000006400000029024f0000002e00000020
*000000430000006f0000006d000000700000007500000074000000650000007300000020000000
*740000006800000065000000200000006500000071000000750000006900000076000000610000
*006c000000650000006e00000074000000200000006f0000006600000020000000280000007400
*000072000000750000006e00000063000000610000007400000065000000200000002e00000020
*0000006c0000006f00000067000000420000006100000073000000650000002000000032000000
*200000002e00000020000000610000006200000073000000290000002000000065000000780000
*0074000000650000006e0000006400000065000000640000002000000077000000690000007400
*000068000000200000003000000020000000610000007400000020000000300000000a46000000
*00000000ff0000000000000100000000000000010100000000000000fc00000000000001020000
*000000000103000000000000010400000000000001050000000000000106000000000000010700
*000000000001080000000000000109000000000000010a000000000000010b000000000000010c
*000000000000010d000000000000010e000000000000010f000000000000011000000000000001
*110000000000000112000000000000011300000000000001140000000000000115000000000000
*011600000000000001170000000000000118000000000000011900000000000000000000000000
*000001000000000000000200000000000000030000000000000004000000000000000500000000
*00000006000000000000000700000000000000080000000000000009000000000000000a000000
*000000006600000000000000670000000000000069000000000000006a000000000000006b0000
*00000000006c000000000000006d000000000000006e000000000000006f000000000000007000
*0000000000007100000000000000730000000000000074000000000000007500000000000000e6
*00000000000000e700000000000000e800000000000000e900000000000000ea00000000000000
*eb00000000000000ec00000000000000ed00000000000000ee00000000000000ef000000000000
*00f000000000000000f100000000000000f200000000000000f300000000000000f40000000000
*0000f500000000000000f61100000000000000e600000000000000e700000000000000e8000000
*00000000eb00000000000000f300000000000000f500000000000000ec00000000000000ef0000
*0000000000f000000000000000f600000000000000ed00000000000000ee00000000000000f100
*000000000000e900000000000000ea00000000000000f400000000000000f20000000000000000
*000000000000002a00011e000000700000006f000000720000007400000061000000620000006c
*000000650000002000000028000000690000006e0000007300000074000000610000006e000000
*63000000650000007300000020000000750000007300000065000000200000004d000000500000
*0054000000430000007300000029010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d003700000000000000ff00000000000001000000000000000101
*00000000000000fc00000000000001020000000000000103000000000000010400000000000001
*050000000000000106000000000000010700000000000001080000000000000109000000000000
*010a000000000000010b000000000000010c000000000000010d000000000000010e0000000000
*00010f000000000000011000000000000001110000000000000112000000000000011300000000
*000001140000000000000115000000000000011600000000000001170000000000000118000000
*0000000119000000000000006600000000000000670000000000000069000000000000006a0000
*00000000006b000000000000006c000000000000006d000000000000006e000000000000006f00
*000000000000700000000000000071000000000000007300000000000000740000000000000075
*000000000000009700000000000000980000000000000099000000000000009a00000000000000
*a700000000000000b300000000000000b400000000000000b500000000000000b6000000000000
*00b700000000000000f700000000000000f800000000000000f90300000000000000f700000000
*000000f900000000000000f80000000000000000000000000000002b000108000000700000006f
*000000720000007400000061000000620000006c00000065010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d003400000000000000ff000000000000
*0100000000000000010100000000000000fc000000000000010200000000000001030000000000
*000104000000000000010500000000000001060000000000000107000000000000010800000000
*00000109000000000000010a000000000000010b000000000000010c000000000000010d000000
*000000010e000000000000010f0000000000000110000000000000011100000000000001120000
*000000000113000000000000011400000000000001150000000000000116000000000000011700
*000000000001180000000000000119000000000000006600000000000000670000000000000069
*000000000000006a000000000000006b000000000000006c000000000000006d00000000000000
*6e000000000000006f000000000000007000000000000000710000000000000073000000000000
*007400000000000000750000000000000097000000000000009800000000000000990000000000
*00009a000000000000009d000000000000009e000000000000009f00000000000000a000000000
*000000a700000000000000fa0100000000000000fa0000000000000000000000000000002c0000
*0000003a00000000000000ff0000000000000100000000000000010100000000000000fc000000
*000000010200000000000001030000000000000104000000000000010500000000000001060000
*00000000010700000000000001080000000000000109000000000000010a000000000000010b00
*0000000000010c000000000000010d000000000000010e000000000000010f0000000000000110
*000000000000011100000000000001120000000000000113000000000000011400000000000001
*150000000000000116000000000000011700000000000001180000000000000119000000000000
*006600000000000000670000000000000069000000000000006a000000000000006b0000000000
*00006c000000000000006d000000000000006e000000000000006f000000000000007000000000
*000000710000000000000073000000000000007400000000000000750000000000000097000000
*00000000980000000000000099000000000000009a000000000000009d000000000000009e0000
*00000000009f00000000000000a000000000000000a700000000000000b300000000000000b400
*000000000000b500000000000000b600000000000000b700000000000000fa00000000000000fb
*0100000000000000fb000000000000014500000000000000000000000000000001030000000000
*000040000000000000000000000000000000010100000000000000410000000000000000000000
*000000000100000000000000004200000000000000000000000000000001030000000000000043
*000000000000000000000000000000010000000000000000440000000000000000000000000000
*000100000000000000004500000000000000000000000000000001000000000000000046000000
*000000000000000000000000010000000000000000470000000000000000000000000000000100
*000000000000004800000000000000000000000000000001000000000000000049000000000000
*0000000000000000000100000000000000004a0000000000000000000000000000000203000000
*000000004b0000000000000000000000000000000200000000000000004c000000000000000000
*0000000000000200000000000000004d0000000000000000000000000000000303000000000000
*004e0000000000000000000000000000000300000000000000004f000000000000000000000000
*000000040300000000000000500000000000000000000000000000000401000000000000005000
*000000000000000000000000000004000000000000000051000000000000000000000000000000
*050300000000000000520000000000000000000000000000000501000000000000005200000000
*000000000000000000000005000000000000000053000000000000000000000000000000050300
*000000000000540000000000000000000000000000000500000000000000005500000000000000
*000000000000000005000000000000000056000000000000000000000000000000050300000000
*000000570000000000000000000000000000000501000000000000005700000000000000000000
*000000000005000000000000000058000000000000000000000000000000050300000000000000
*590000000000000000000000000000000500000000000000005a00000000000000000000000000
*00000500000000000000005b0000000000000000000000000000000603000000000000005c0000
*000000000000000000000000000601000000000000005c00000000000000000000000000000006
*00000000000000005d0000000000000000000000000000000603000000000000005e0000000000
*000000000000000000000601000000000000005e00000000000000000000000000000006000000
*00000000005f000000000000000000000000000000060300000000000000600000000000000000
*000000000000000601000000000000006000000000000000000000000000000006000000000000
*000061000000000000000000000000000000060300000000000000620000000000000000000000
*000000000603000000000000006300000000000000000000000000000006000000000000000064
*000000000000000000000000000000060000000000000000650000000000000000000000000000
*000600000000000000006600000000000000000000000000000006000000000000000067000000
*000000000000000000000000060000000000000000680000000000000000000000000000000600
*00000000000000690000000000000000000000000000000703000000000000006a000000000000
*0000000000000000000701000000000000006b0000000000000000000000000000000701000000
*000000006c0000000000000000000000000000000701000000000000006d000000000000000000
*0000000000000701000000000000006e0000000000000000000000000000000703000000000000
*006f00000000000000000000000000000007030000000000000070000000000000000000000000
*000000070000000000000000710000000000000000000000000000000700000000000000007200
*000000000000000000000000000007000000000000000073000000000000000000000000000000
*070000000000000000740000000000000000000000000000000700000000000000007500000000
*000000000000000000000008030000000000000076000000000000000000000000000000080000
*000000000000770000000000000000000000000000000803000000000000007800000000000000
*000000000000000008000000000000000079000000000000000000000000000000080300000000
*0000006d0000000000000000000000000000000803000000000000007a00000000000000000000
*00000000000800000000000000007b000000000000000000000000000000080000000000000000
*7c0000000000000000000000000000000800000000000000007d00000000000000000000000000
*00000800000000000000007e0000000000000000000000000000000903000000000000007f0000
*000000000000000000000000000901000000000000007f00000000000000000000000000000009
*0000000000000000800000000000000000000000000000000a0300000000000000810000000000
*000000000000000000000a0000000000000000820000000000000000000000000000000a000000
*0000000000830000000000000000000000000000000a0000000000000000840000000000000000
*000000000000000a0000000000000000850000000000000000000000000000000a000000000000
*0000860000000000000000000000000000000b0300000000000000870000000000000000000000
*000000000b0100000000000000870000000000000000000000000000000b000000000000000088
*0000000000000000000000000000000c0000000000000000890000000000000000000000000000
*000c00000000000000008a0000000000000000000000000000000c00000000000000008b000000
*0000000000000000000000000c00000000000000008c0000000000000000000000000000000d03
*000000000000008d0000000000000000000000000000000d01000000000000008d000000000000
*0000000000000000000d00000000000000008e0000000000000000000000000000000d03000000
*000000008f0000000000000000000000000000000d01000000000000008f000000000000000000
*0000000000000d0000000000000000820000000000000000000000000000000d00000000000000
*00900000000000000000000000000000000d000000000000000091000000000000000000000000
*0000000d0000000000000000830000000000000000000000000000000d00000000000000008500
*00000000000000000000000000000e030000000000000092000000000000000000000000000000
*0e0300000000000000930000000000000000000000000000000e01000000000000009300000000
*00000000000000000000000e0000000000000000940000000000000000000000000000000e0000
*000000000000950000000000000000000000000000000e00000000000000009600000000000000
*00000000000000000f0000000000000000970000000000000000000000000000000f0000000000
*000000980000000000000000000000000000001000000000000000009900000000000000000000
*00000000001103000000000000009a000000000000000000000000000000110100000000000000
*9a0000000000000000000000000000001100000000000000009b00000000000000000000000000
*00001103000000000000009c0000000000000000000000000000001101000000000000009c0000
*000000000000000000000000001100000000000000009d00000000000000000000000000000011
*03000000000000009e0000000000000000000000000000001100000000000000009f0000000000
*00000000000000000000110000000000000000a000000000000000000000000000000012000000
*0000000000a1000000000000000000000000000000130300000000000000a20000000000000000
*00000000000000130300000000000000a300000000000000000000000000000014030000000000
*0000a4000000000000000000000000000000150300000000000000a50000000000000000000000
*00000000150100000000000000a5000000000000000000000000000000150000000000000000a6
*000000000000000000000000000000150300000000000000a70000000000000000000000000000
*00150100000000000000a7000000000000000000000000000000150000000000000000a8000000
*000000000000000000000000150300000000000000a90000000000000000000000000000001501
*00000000000000a9000000000000000000000000000000150000000000000000aa000000000000
*000000000000000000150300000000000000ab0000000000000000000000000000001501000000
*00000000ab000000000000000000000000000000150000000000000000ac000000000000000000
*000000000000150000000000000000ad0000000000000000000000000000001500000000000000
*00ae000000000000000000000000000000160300000000000000af000000000000000000000000
*000000160100000000000000b0000000000000000000000000000000160100000000000000af00
*0000000000000000000000000000160100000000000000b1000000000000000000000000000000
*160300000000000000b2000000000000000000000000000000160100000000000000b200000000
*0000000000000000000000160000000000000000b3000000000000000000000000000000170300
*000000000000b4000000000000000000000000000000170100000000000000b400000000000000
*0000000000000000170000000000000000b5000000000000000000000000000000170000000000
*000000ae000000000000000000000000000000180300000000000000b600000000000000000000
*0000000000180100000000000000b6000000000000000000000000000000180000000000000000
*b7000000000000000000000000000000180000000000000000b800000000000000000000000000
*0000180000000000000000b9000000000000000000000000000000180000000000000000ba0000
*000000000000000000000000001800000000000000005a00000000000000000000000000000018
*0000000000000000bb000000000000000000000000000000190300000000000000bc0000000000
*00000000000000000000190000000000000000bd00000000000000000000000000000019000000
*0000000000be000000000000000000000000000000190000000000000000bf0000000000000000
*000000000000001a00000000000000008b0000000000000000000000000000001a000000000000
*00008c0000000000000000000000000000001b0300000000000000c00000000000000000000000
*000000001b0000000000000000c10000000000000000000000000000001b0000000000000000c2
*0000000000000000000000000000001b0000000000000000c30000000000000000000000000000
*001c0000000000000000c40000000000000000000000000000001c0000000000000000c5000000
*0000000000000000000000001c0000000000000000c60000000000000000000000000000001d00
*00000000000000c70000000000000000000000000000001d0000000000000000c8000000000000
*0000000000000000001d0000000000000000c90000000000000000000000000000001e03000000
*00000000ca0000000000000000000000000000001f0300000000000000cb000000000000000000
*0000000000001f0100000000000000cb0000000000000000000000000000001f00000000000000
*00cc000000000000000000000000000000200300000000000000cd000000000000000000000000
*000000200100000000000000cd000000000000000000000000000000200000000000000000ce00
*0000000000000000000000000000210300000000000000cf000000000000000000000000000000
*210000000000000000d0000000000000000000000000000000210300000000000000d100000000
*0000000000000000000000210000000000000000d2000000000000000000000000000000210000
*000000000000d3000000000000000000000000000000220300000000000000d400000000000000
*0000000000000000220300000000000000d5000000000000000000000000000000220000000000
*000000d6000000000000000000000000000000220300000000000000d700000000000000000000
*0000000000220000000000000000d8000000000000000000000000000000230300000000000000
*d9000000000000000000000000000000230100000000000000d900000000000000000000000000
*0000230000000000000000da000000000000000000000000000000230300000000000000db0000
*00000000000000000000000000230100000000000000db00000000000000000000000000000023
*0000000000000000dc000000000000000000000000000000230300000000000000dd0000000000
*00000000000000000000230100000000000000dd00000000000000000000000000000023000000
*0000000000de000000000000000000000000000000230000000000000000df0000000000000000
*00000000000000240300000000000000e000000000000000000000000000000024010000000000
*0000e0000000000000000000000000000000240000000000000000e10000000000000000000000
*00000000240300000000000000e2000000000000000000000000000000240100000000000000e2
*000000000000000000000000000000240000000000000000e30000000000000000000000000000
*00240300000000000000e4000000000000000000000000000000240100000000000000e4000000
*000000000000000000000000240000000000000000e50000000000000000000000000000002400
*00000000000000e6000000000000000000000000000000250000000000000000e7000000000000
*000000000000000000250000000000000000e80000000000000000000000000000002500000000
*00000000e9000000000000000000000000000000250000000000000000ea000000000000000000
*000000000000250000000000000000eb0000000000000000000000000000002500000000000000
*00ec000000000000000000000000000000250000000000000000ed000000000000000000000000
*000000250000000000000000ee000000000000000000000000000000250000000000000000ef00
*0000000000000000000000000000250000000000000000f0000000000000000000000000000000
*250000000000000000f1000000000000000000000000000000250000000000000000f200000000
*0000000000000000000000250000000000000000f3000000000000000000000000000000250000
*000000000000f4000000000000000000000000000000250000000000000000f500000000000000
*0000000000000000250000000000000000f6000000000000000000000000000000250000000000
*000000f7000000000000000000000000000000250000000000000000f800000000000000000000
*0000000000250000000000000000f9000000000000000000000000000000250000000000000000
*fa000000000000000000000000000000250000000000000000fb00000000000000000000000000
*0000260300000000000000fc000000000000000000000000000000260100000000000000fd0000
*00000000000000000000000000270300000000000000fe00000000000000000000000000000027
*0000000000000000ff000000000000000000000000000000280300000000000001000000000000
*000000000000000000002903000000000000010100000000000000000000000000000029000000
*00000000005a000000000000000000000000000000290000000000000000ba0000000000000000
*00000000000000290000000000000000bb00000000000000000000000000000029000000000000
*000102000000000000000000000000000000290000000000000001030000000000000000000000
*000000002900000000000000010400000000000000000000000000000029000000000000000105
*000000000000000000000000000000290000000000000001060000000000000000000000000000
*002900000000000000010700000000000000000000000000000029000000000000000108000000
*000000000000000000000000290000000000000001090000000000000000000000000000002900
*000000000000010a0000000000000000000000000000002900000000000000005b000000000000
*0000000000000000002900000000000000010b0000000000000000000000000000002900000000
*000000010c000000000000000000000000000000290000000000000000c8000000000000000000
*0000000000002a03000000000000010d0000000000000000000000000000002a00000000000000
*010e0000000000000000000000000000002a00000000000000010f000000000000000000000000
*0000002b0300000000000001100000000000000000000000000000002c03000000000000011100
*0000000000002e000000000000002f030000000000000112000000000000002e00000000000000
*30030000000000000113000000000000002e000000000000003103000000000000011400000000
*0000002e000000000000002f000000000000000115000000000000002e000000000000002f0000
*00000000000116000000000000002e000000000000002f00000000000000011700000000000000
*2e000000000000002f000000000000000118000000000000002e000000000000002f0100000000
*00000119000000000000002e000000000000002f030000000000000119000000000000002e0000
*00000000002f00000000000000011a000000000000002e000000000000002f0100000000000001
*1b000000000000002e000000000000002f03000000000000011b000000000000002e0000000000
*00002f00000000000000011c000000000000002e000000000000002f01000000000000011d0000
*00000000002e000000000000002f03000000000000011d000000000000002e000000000000002f
*00000000000000011e000000000000002e000000000000002f01000000000000011f0000000000
*00002e000000000000002f03000000000000011f000000000000002e000000000000002f000000
*000000000120000000000000002e000000000000002f010000000000000121000000000000002e
*000000000000002f030000000000000121000000000000002e000000000000002f000000000000
*000122000000000000002e000000000000002f010000000000000123000000000000002e000000
*000000002f030000000000000123000000000000002e000000000000002f000000000000000124
*000000000000002e000000000000002f010000000000000125000000000000002e000000000000
*002f030000000000000125000000000000002e000000000000002f000000000000000126000000
*000000002e000000000000002f010000000000000127000000000000002e000000000000002f03
*00000000000001270000000000000128000000000000012903000000000000012a000000000000
*0128000000000000012900000000000000012b000000000000002e000000000000012c03000000
*000000012d0000000000000033000000000000003403000000000000012e000000000000002e00
*0000000000003500000000000000012f0000000000000000000000000000000a03000000000000
*013000000000000000360000000000000037030000000000000131000000000000002e00000000
*00000038030000000000000132000000000000002e000000000000003800000000000000013300
*0000000000002e0000000000000038000000000000000134000000000000002e00000000000000
*38000000000000000135000000000000002e000000000000003800000000000000013600000000
*0000002e0000000000000137000000000000000138000000000000002e00000000000000300100
*00000000000139000000000000002e000000000000013700000000000000013a00000000000000
*2e000000000000013b00000000000000013c000000000000002e000000000000013b0000000000
*0000013d000000000000002e000000000000013e000000000000000099000000000000002e0000
*00000000003c03000000000000013f000000000000002e000000000000003c0300000000000001
*40000000000000002e0000000000000141030000000000000142000000000000002e0000000000
*00003d030000000000000143000000000000002e000000000000003d0000000000000000ea0000
*00000000002e0000000000000141000000000000000144000000000000002e0000000000000145
*0000000000000001460000000000000033000000000000003f0300000000000001470000000000
*000000000000000000002900000000000000014800000000000000000000000000000029000000
*0000000001490000000000000000000000000000002900000000000000014a0000000000000000
*000000000000002900000000000000014b00000000000000000000000000000029000000000000
*00014c0000000000000000000000000000002900000000000000014d0000000000000000000000
*000000002900000000000000014e0000000000000000000000000000002900000000000000014f
*000000000000000000000000000000290000000000000001500000000000000000000000000000
*00290000000000000000f000000000000000000000000000000029000000000000000151000000
*000000000000000000000000290000000000000001520000000000000000000000000000002900
*000000000000015300000000000000000000000000000029000000000000000154000000000000
*000000000000000000290000000000000001550000000000000000000000000000002900000000
*000000015600000000000000000000000000000029000000000000000157000000000000015800
*0000000000000e6d6f6e6f6964732d302e312e33320000000000000013446174612e4d6f6e6f69
*642e526564756365720000000000000018446174612e4d6f6e6f69642e526564756365722e4368
*61720000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f
*6465720000000000000018446174612e4d6f6e6f69642e526564756365722e5769746800000000
*00000011446174612e4d6f6e6f69642e556e696f6e000000000000000e446174612e47656e6572
*61746f720000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f7572636550
*6f736974696f6e0000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f7264
*730000000000000010446174612e4d6f6e6f69642e53656c66000000000000001f446174612e47
*656e657261746f722e436f6d70726573736976652e4c5a37380000000000000016446174612e4d
*6f6e6f69642e46726f6d537472696e670000000000000017446174612e4d6f6e6f69642e436f6d
*62696e61746f7273000000000000001e446174612e47656e657261746f722e436f6d7072657373
*6976652e524c450000000000000017446174612e4d6f6e6f69642e43617465676f726963616c00
*00000000000014446174612e4d6f6e6f69642e4164646974697665000000000000001a44617461
*2e4d6f6e6f69642e41646469746976652e5375676172000000000000001a446174612e4d6f6e6f
*69642e4d756c7469706c696361746976650000000000000020446174612e4d6f6e6f69642e4d75
*6c7469706c696361746976652e53756761720000000000000013446174612e52696e672e53656d
*692e4e656172000000000000000e446174612e52696e672e53656d69000000000000000f446174
*612e4d6f6e6f69642e4f72640000000000000012446174612e52696e672e53656d692e4f726400
*00000000000017446174612e52696e672e53656d692e54726f706963616c000000000000001844
*6174612e52696e672e53656d692e4e6561722e54726965000000000000000a446174612e47726f
*75700000000000000016446174612e47726f75702e436f6d62696e61746f727300000000000000
*19446174612e47726f75702e4d756c7469706c696361746976650000000000000010446174612e
*47726f75702e5375676172000000000000001f446174612e47726f75702e4d756c7469706c6963
*61746976652e53756761720000000000000009446174612e52696e670000000000000011446174
*612e52696e672e426f6f6c65616e0000000000000011446174612e52696e672e46726f6d4e756d
*000000000000001b446174612e52696e672e4d6f64756c617241726974686d6574696300000000
*00000010446174612e52696e672e4d6f64756c650000000000000017446174612e4d6f6e6f6964
*2e4170706c696361746976650000000000000011446174612e4d6f6e6f69642e4d6f6e61640000
*00000000001a446174612e47656e657261746f722e436f6d62696e61746f727300000000000000
*13446174612e47656e657261746f722e467265650000000000000016446174612e52696e672e53
*656d692e4e61747572616c0000000000000011446174612e52696e672e416c6765627261000000
*0000000015446174612e52696e672e53656d692e4269745365740000000000000029446174612e
*52696e672e4d6f64756c652e4175746f6d61746963446966666572656e74696174696f6e000000
*000000000a446174612e4669656c640000000000000016446174612e4669656c642e566563746f
*7253706163650000000000000015446174612e4d6f6e6f69642e496e7374616e63657300000000
*0000000462617365000000000000000b446174612e4d6f6e6f6964000000000000000a44617461
*2e4d61796265000000000000000d446174612e466f6c6461626c65000000000000000944617461
*2e576f726400000000000000086768632d7072696d00000000000000094748432e547970657300
*0000000000000b4748432e556e69636f64650000000000000012636f6e7461696e6572732d302e
*322e302e300000000000000008446174612e4d61700000000000000010436f6e74726f6c2e4361
*7465676f72790000000000000008446174612e4f726400000000000000075072656c7564650000
*00000000000f446174612e52696e672e53756761720000000000000013436f6e74726f6c2e4170
*706c69636174697665000000000000000d436f6e74726f6c2e4d6f6e6164000000000000000944
*6174612e4c69737400000000000000084748432e426f6f6c000000000000000952656475636564
*42790000000000000009526564756374696f6e000000000000000c676574526564756374696f6e
*0000000000000007526564756365720000000000000004756e69740000000000000004736e6f63
*0000000000000004636f6e73000000000000000d666f6c644d6170526564756365000000000000
*000a666f6c64526564756365000000000000000a72657475726e556e6974000000000000000870
*757265556e6974000000000000000b4368617252656475636572000000000000000866726f6d43
*686172000000000000000b696e76616c6964436861720000000000000004555446380000000000
*00000772756e55544638000000000000000b5769746852656475636572000000000000000e7769
*74686f7574526564756365720000000000000009556e696f6e57697468000000000000000c6765
*74556e696f6e57697468000000000000000c486173556e696f6e57697468000000000000000975
*6e696f6e576974680000000000000009656d707479576974680000000000000005556e696f6e00
*00000000000008676574556e696f6e0000000000000008486173556e696f6e0000000000000005
*656d7074790000000000000005756e696f6e000000000000000543686172380000000000000008
*6765744368617238000000000000000656616c756573000000000000000967657456616c756573
*00000000000000044b65797300000000000000076765744b657973000000000000000947656e65
*7261746f720000000000000004456c656d00000000000000096d61705265647563650000000000
*0000056d6170546f00000000000000076d617046726f6d00000000000000067265647563650000
*00000000000d6d617052656475636557697468000000000000000a726564756365576974680000
*00000000000e536f75726365506f736974696f6e00000000000000035461620000000000000007
*436f6c756d6e7300000000000000054c696e65730000000000000003506f73000000000000000c
*536f75726365436f6c756d6e000000000000000a536f757263654c696e6500000000000000076e
*657874546162000000000000000b73746172744f6646696c65000000000000000c736f75726365
*436f6c756d6e000000000000000a736f757263654c696e65000000000000001273686f77536f75
*726365506f736974696f6e0000000000000007556e6c696e6564000000000000000a72756e556e
*6c696e65640000000000000008556e737061636564000000000000000b72756e556e7370616365
*640000000000000005576f726473000000000000000872756e576f726473000000000000000872
*756e4c696e65730000000000000009776f72647346726f6d00000000000000096c696e65734672
*6f6d000000000000000453656c66000000000000000767657453656c6600000000000000044c5a
*373800000000000000066465636f64650000000000000006656e636f6465000000000000000865
*6e636f64654571000000000000001270726f705f6465636f64655f656e636f6465000000000000
*001470726f705f6465636f64655f656e636f64654571000000000000000a46726f6d537472696e
*67000000000000000d67657446726f6d537472696e6700000000000000056379636c6500000000
*0000000672657065617400000000000000097265706c6963617465000000000000002170726f70
*5f7265706c69636174655f72696768745f6469737472696275746976650000000000000003524c
*450000000000000006676574524c45000000000000000352756e000000000000000a656e636f64
*654c697374000000000000001670726f705f6465636f64655f656e636f64654c69737400000000
*00000007434d6f6e6f6964000000000000000547456e646f000000000000000867657447456e64
*6f000000000000001063617465676f7279546f4d6f6e6f696400000000000000106d6f6e6f6964
*546f43617465676f72790000000000000004706c757300000000000000047a65726f0000000000
*0000012b0000000000000003457870000000000000000667657445787000000000000000034c6f
*6700000000000000066765744c6f67000000000000000e4d756c7469706c696361746976650000
*0000000000036f6e65000000000000000574696d657300000000000000012a0000000000000011
*526967687453656d694e65617252696e6700000000000000104c65667453656d694e6561725269
*6e67000000000000000853656d6952696e67000000000000000b4d696e5072696f726974790000
*00000000000e6765744d696e5072696f72697479000000000000000b4d61785072696f72697479
*000000000000000e6765744d61785072696f7269747900000000000000034d696e000000000000
*00066765744d696e00000000000000034d617800000000000000066765744d6178000000000000
*00096d696e66696e6974790000000000000008696e66696e69747900000000000000085072696f
*7269747900000000000000084d6178426f756e6400000000000000084d696e426f756e64000000
*00000000054f7264657200000000000000086765744f72646572000000000000000854726f7069
*63616c000000000000000b67657454726f706963616c0000000000000004547269650000000000
*000005746f74616c00000000000000056c6162656c00000000000000086368696c6472656e0000
*00000000000973696e676c65746f6e00000000000000046e756c6c000000000000000547726f75
*700000000000000007676e656761746500000000000000056d696e757300000000000000096773
*7562747261637400000000000000134d756c7469706c6963617469766547726f75700000000000
*0000046f7665720000000000000005756e64657200000000000000066772656369700000000000
*0000012d00000000000000066e6567617465000000000000000873756274726163740000000000
*0000012f00000000000000025c5c00000000000000057265636970000000000000000452696e67
*0000000000000008426f6f6c52696e67000000000000000b676574426f6f6c52696e6700000000
*0000000746726f6d4e756d000000000000000a67657446726f6d4e756d00000000000000074d6f
*64756c617200000000000000076d6f64756c757300000000000000034d6f640000000000000006
*6765744d6f64000000000000001377697468496e74656772616c4d6f64756c7573000000000000
*00064d6f64756c65000000000000000b52696768744d6f64756c6500000000000000022e2a0000
*00000000000a4c6566744d6f64756c6500000000000000022a2e00000000000000034170700000
*0000000000066765744170700000000000000003416c740000000000000006676574416c740000
*00000000000954726176657273616c000000000000000c67657454726176657273616c00000000
*0000000d736e6f6354726176657273616c00000000000000034d6f6e0000000000000006676574
*4d6f6e00000000000000084d6f6e616453756d000000000000000b6765744d6f6e616453756d00
*00000000000006416374696f6e0000000000000009676574416374696f6e000000000000000a73
*6e6f63416374696f6e000000000000000974726176657273655f0000000000000004666f725f00
*000000000000046173756d00000000000000056d61704d5f0000000000000005666f724d5f0000
*0000000000046d73756d0000000000000007666f6c644d61700000000000000009636f6e636174
*4d61700000000000000004666f6c640000000000000006746f4c6973740000000000000003616e
*6400000000000000026f720000000000000003616e790000000000000003616c6c000000000000
*000373756d000000000000000770726f647563740000000000000004656c656d00000000000000
*076e6f74456c656d000000000000000666696c746572000000000000000a66696c746572576974
*68000000000000000466696e64000000000000000446726565000000000000000c416e7947656e
*657261746f7200000000000000074e61747572616c00000000000000076e61747572616c000000
*0000000007416c67656272610000000000000006426974536574000000000000000473697a6500
*0000000000000466756c6c000000000000000a636f6d706c656d656e7400000000000000086672
*6f6d4c697374000000000000001366726f6d44697374696e63744173634c697374000000000000
*0006696e73657274000000000000000664656c65746500000000000000066d656d626572000000
*0000000009746f496e7465676572000000000000000e6973436f6d706c656d656e746564000000
*000000000c696e74657273656374696f6e00000000000000014400000000000000046c69667400
*000000000000016400000000000000054669656c64000000000000000b566563746f7253706163
*6500000000000000064d6f6e6f696400000000000000054d617962650000000000000008466f6c
*6461626c6500000000000000076d617070656e6400000000000000076d636f6e63617400000000
*000000066d656d70747900000000000000076765744475616c00000000000000044475616c0000
*000000000007617070456e646f0000000000000004456e646f0000000000000006676574416c6c
*0000000000000003416c6c0000000000000006676574416e790000000000000003416e79000000
*000000000667657453756d000000000000000353756d000000000000000a67657450726f647563
*74000000000000000750726f647563740000000000000008676574466972737400000000000000
*05466972737400000000000000076765744c61737400000000000000044c617374000000000000
*000e66696e676572747265652d302e30000000000000000f446174612e46696e67657254726565
*000000000000000a46696e6765725472656500000000000000076d656173757265000000000000
*00084748432e576f72640000000000000005576f72643800000000000000044368617200000000
*00000007697353706163650000000000000005546f6b656e00000000000000034d617000000000
*0000000843617465676f727900000000000000033e3e3e00000000000000033c3c3c0000000000
*0000012e00000000000000026964000000000000000b4748432e436c6173736573000000000000
*00036d696e00000000000000074e6f7468696e6700000000000000036d61780000000000000008
*4748432e456e756d00000000000000086d6178426f756e6400000000000000086d696e426f756e
*6400000000000000074748432e4e756d000000000000000b4170706c6963617469766500000000
*0000000b416c7465726e617469766500000000000000084748432e426173650000000000000005
*4d6f6e616400000000000000094d6f6e6164506c75730000000000000004666c69700000000000
*0000084748432e4c6973740000000000000006636f6e6361740000000000000004426f6f6c0000
*00000000000d5f636f756e7441744c65617374000000000000000c5f636f756e7441744d6f7374
*00000000000000065f636f756e7400000000000000086578706f6e656e7400000000000000045f
*68776d00000000000000086d616e746973736100000000000000095f756e697665727365000000
*00000000095f66726f6d456e756d00000000000000026273000000000000000c7265636f6d706c
*656d656e74000000000000001070736575646f436f6d706c656d656e7400000000000000046469
*6666000000000000000a646966666572656e6365000000000000000b6173417267547970654f66
*00000000000000077265636f756e74000000000000000368776d
newhex
*0d0cface00040000000000016e720000000000014e62ff000000ff000000000000000000000000
*000000000000000000000001000000000000000100000000000000000000000000000001000000
*000000000200000000000000000000000000000001000000000000000300000000000000000000
*000000000001000000000000000400000000000000000000000000000001000000000000000500
*000000000000000000000000000001000000000000000600000000000000000000000000000001
*000000000000000700000000000000000000000000000001000000000000000800000000000000
*000000000000000001000000000000000900000000000000000000000000000001000000000000
*000a00000000000000000000000000000001000000000000000b00000000000000000000000000
*000002000000000000000c00000000000000000000000000000002000000000000000d00000000
*000000000000000000000002000000000000000e00000000000000000000000000000003000000
*000000000f00000000000000000000000000000003000000000000001000000000000000000000
*000000000004000000000000001100000000000000000000000000000004000000000000001200
*000000000000000000000000000004000000000000001300000000000000000000000000000005
*000000000000001400000000000000000000000000000005000000000000001500000000000000
*000000000000000005000000000000001600000000000000000000000000000005000000000000
*001700000000000000000000000000000005000000000000001800000000000000000000000000
*000005000000000000001900000000000000000000000000000005000000000000001a00000000
*000000000000000000000005000000000000001b00000000000000000000000000000005000000
*000000001c00000000000000000000000000000005000000000000001d00000000000000000000
*000000000005000000000000001e00000000000000000000000000000005000000000000001f00
*000000000000000000000000000006000000000000002000000000000000000000000000000006
*000000000000002100000000000000000000000000000006000000000000002200000000000000
*000000000000000006000000000000002300000000000000000000000000000006000000000000
*002400000000000000000000000000000006000000000000002500000000000000000000000000
*000006000000000000002600000000000000000000000000000006000000000000002700000000
*000000000000000000000006000000000000002800000000000000000000000000000006000000
*000000002900000000000000000000000000000006000000000000002a00000000000000000000
*000000000006000000000000002b00000000000000000000000000000006000000000000002c00
*000000000000000000000000000006000000000000002d00000000000000000000000000000006
*000000000000002e00000000000000000000000000000006000000000000002f00000000000000
*000000000000000006000000000000003000000000000000000000000000000007000000000000
*003100000000000000000000000000000007000000000000003200000000000000000000000000
*000007000000000000003300000000000000000000000000000007000000000000003400000000
*000000000000000000000007000000000000003500000000000000000000000000000007000000
*000000003600000000000000000000000000000007000000000000003700000000000000000000
*000000000007000000000000003800000000000000000000000000000007000000000000003900
*000000000000000000000000000007000000000000003a00000000000000000000000000000007
*000000000000003b00000000000000000000000000000007000000000000003c00000000000000
*000000000000000008000000000000003d00000000000000000000000000000008000000000000
*003e00000000000000000000000000000008000000000000003f00000000000000000000000000
*000008000000000000004000000000000000000000000000000008000000000000004100000000
*000000000000000000000008000000000000004200000000000000000000000000000008000000
*000000004300000000000000000000000000000008000000000000004400000000000000000000
*000000000008000000000000004500000000000000000000000000000008000000000000004600
*000000000000000000000000000009000000000000004700000000000000000000000000000009
*000000000000004800000000000000000000000000000009000000000000004900000000000000
*00000000000000000a000000000000004a0000000000000000000000000000000a000000000000
*004b0000000000000000000000000000000a000000000000004c00000000000000000000000000
*00000a000000000000004d0000000000000000000000000000000a000000000000004e00000000
*00000000000000000000000a000000000000004f0000000000000000000000000000000b000000
*00000000500000000000000000000000000000000b000000000000005100000000000000000000
*00000000000b00000000000000520000000000000000000000000000000c000000000000005300
*00000000000000000000000000000c00000000000000540000000000000000000000000000000c
*00000000000000550000000000000000000000000000000c000000000000005600000000000000
*00000000000000000d00000000000000570000000000000000000000000000000d000000000000
*00580000000000000000000000000000000d000000000000005900000000000000000000000000
*00000d000000000000005a0000000000000000000000000000000d000000000000005b00000000
*00000000000000000000000d000000000000005c0000000000000000000000000000000d000000
*000000005d0000000000000000000000000000000d000000000000005e00000000000000000000
*00000000000d000000000000005f0000000000000000000000000000000d000000000000006000
*00000000000000000000000000000e00000000000000610000000000000000000000000000000e
*00000000000000620000000000000000000000000000000e000000000000006300000000000000
*00000000000000000e00000000000000640000000000000000000000000000000e000000000000
*00650000000000000000000000000000000e000000000000006600000000000000000000000000
*00000f00000000000000670000000000000000000000000000000f000000000000006800000000
*000000000000000000000010000000000000006900000000000000000000000000000011000000
*000000006a00000000000000000000000000000011000000000000006b00000000000000000000
*000000000011000000000000006c00000000000000000000000000000011000000000000006d00
*000000000000000000000000000011000000000000006e00000000000000000000000000000011
*000000000000006f00000000000000000000000000000011000000000000007000000000000000
*000000000000000011000000000000007100000000000000000000000000000011000000000000
*007200000000000000000000000000000012000000000000007300000000000000000000000000
*000013000000000000007400000000000000000000000000000013000000000000007500000000
*000000000000000000000013000000000000007600000000000000000000000000000014000000
*000000007700000000000000000000000000000015000000000000007800000000000000000000
*000000000015000000000000007900000000000000000000000000000015000000000000007a00
*000000000000000000000000000015000000000000007b00000000000000000000000000000015
*000000000000007c00000000000000000000000000000015000000000000007d00000000000000
*000000000000000015000000000000007e00000000000000000000000000000015000000000000
*007f00000000000000000000000000000015000000000000008000000000000000000000000000
*000015000000000000008100000000000000000000000000000015000000000000008200000000
*000000000000000000000015000000000000008300000000000000000000000000000015000000
*000000008400000000000000000000000000000015000000000000008500000000000000000000
*000000000016000000000000008600000000000000000000000000000016000000000000008700
*000000000000000000000000000017000000000000008800000000000000000000000000000017
*000000000000008900000000000000000000000000000017000000000000008a00000000000000
*000000000000000017000000000000008b00000000000000000000000000000017000000000000
*008c00000000000000000000000000000017000000000000008d00000000000000000000000000
*000017000000000000008e00000000000000000000000000000018000000000000008f00000000
*000000000000000000000018000000000000009000000000000000000000000000000018000000
*000000009100000000000000000000000000000018000000000000009200000000000000000000
*000000000019000000000000009300000000000000000000000000000019000000000000009400
*000000000000000000000000000019000000000000009500000000000000000000000000000019
*000000000000009600000000000000000000000000000019000000000000009700000000000000
*000000000000000019000000000000009800000000000000000000000000000019000000000000
*009900000000000000000000000000000019000000000000009a00000000000000000000000000
*00001a000000000000009b0000000000000000000000000000001a000000000000009c00000000
*00000000000000000000001a000000000000009d0000000000000000000000000000001a000000
*000000009e0000000000000000000000000000001b000000000000009f00000000000000000000
*00000000001b00000000000000a00000000000000000000000000000001c00000000000000a100
*00000000000000000000000000001c00000000000000a20000000000000000000000000000001c
*00000000000000a30000000000000000000000000000001c00000000000000a400000000000000
*00000000000000001d00000000000000a50000000000000000000000000000001d000000000000
*00a60000000000000000000000000000001d00000000000000a700000000000000000000000000
*00001e00000000000000a80000000000000000000000000000001e00000000000000a900000000
*00000000000000000000001e00000000000000aa0000000000000000000000000000001f000000
*00000000ab0000000000000000000000000000002000000000000000ac00000000000000000000
*00000000002000000000000000ad0000000000000000000000000000002000000000000000ae00
*00000000000000000000000000002100000000000000af00000000000000000000000000000021
*00000000000000b00000000000000000000000000000002100000000000000b100000000000000
*00000000000000002200000000000000b200000000000000000000000000000022000000000000
*00b30000000000000000000000000000002200000000000000b400000000000000000000000000
*00002200000000000000b50000000000000000000000000000002200000000000000b600000000
*00000000000000000000002300000000000000b700000000000000000000000000000023000000
*00000000b80000000000000000000000000000002300000000000000b900000000000000000000
*00000000002300000000000000ba0000000000000000000000000000002300000000000000bb00
*00000000000000000000000000002400000000000000bc00000000000000000000000000000024
*00000000000000bd0000000000000000000000000000002400000000000000be00000000000000
*00000000000000002400000000000000bf00000000000000000000000000000024000000000000
*00c00000000000000000000000000000002400000000000000c100000000000000000000000000
*00002400000000000000c20000000000000000000000000000002400000000000000c300000000
*00000000000000000000002400000000000000c400000000000000000000000000000024000000
*00000000c50000000000000000000000000000002500000000000000c600000000000000000000
*00000000002500000000000000c70000000000000000000000000000002500000000000000c800
*00000000000000000000000000002500000000000000c900000000000000000000000000000025
*00000000000000ca0000000000000000000000000000002500000000000000cb00000000000000
*00000000000000002500000000000000cc00000000000000000000000000000025000000000000
*00cd0000000000000000000000000000002500000000000000ce00000000000000000000000000
*00002500000000000000cf0000000000000000000000000000002600000000000000d000000000
*00000000000000000000002600000000000000d100000000000000000000000000000026000000
*00000000d20000000000000000000000000000002600000000000000d300000000000000000000
*00000000002600000000000000d40000000000000000000000000000002600000000000000d500
*00000000000000000000000000002600000000000000d600000000000000000000000000000026
*00000000000000d70000000000000000000000000000002600000000000000d800000000000000
*00000000000000002600000000000000d900000000000000000000000000000026000000000000
*00da0000000000000000000000000000002600000000000000db00000000000000000000000000
*00002600000000000000dc0000000000000000000000000000002600000000000000dd00000000
*00000000000000000000002600000000000000de00000000000000000000000000000026000000
*00000000df0000000000000000000000000000002600000000000000e000000000000000000000
*00000000002600000000000000e10000000000000000000000000000002600000000000000e200
*00000000000000000000000000002600000000000000e300000000000000000000000000000026
*00000000000000e40000000000000000000000000000002700000000000000e500000000000000
*00000000000000002700000000000000e600000000000000000000000000000028000000000000
*00e70000000000000000000000000000002800000000000000e800000000000000000000000000
*00002900000000000000e90000000000000000000000000000002a00000000000000ea00000000
*00000000000000000000002a00000000000000eb0000000000000000000000000000002a000000
*00000000ec0000000000000000000000000000002a00000000000000ed00000000000000000000
*00000000002a00000000000000ee0000000000000000000000000000002a00000000000000ef00
*00000000000000000000000000002a00000000000000f00000000000000000000000000000002a
*00000000000000f10000000000000000000000000000002a00000000000000f200000000000000
*00000000000000002a00000000000000f30000000000000000000000000000002a000000000000
*00f40000000000000000000000000000002a00000000000000f500000000000000000000000000
*00002a00000000000000f60000000000000000000000000000002a00000000000000f700000000
*00000000000000000000002a00000000000000f80000000000000000000000000000002a000000
*00000000f90000000000000000000000000000002a00000000000000fa00000000000000000000
*00000000002b00000000000000fb0000000000000000000000000000002b00000000000000fc00
*00000000000000000000000000002b00000000000000fd0000000000000000000000000000002c
*00000000000000fe0000000000000000000000000000002d2f0000000000000000000000000000
*002e000108000000700000006f000000720000007400000061000000620000006c00000065010c
*0000006500000078000000700000006500000072000000690000006d000000650000006e000000
*74000000610000006c0110000000650000006b0000006d00000065000000740000007400000040
*000000670000006d00000061000000690000006c0000002e000000630000006f0000006d000000
*000000000000000000000000000000010001140000006e0000006f0000006e0000002d00000070
*0000006f000000720000007400000061000000620000006c000000650000002000000028000000
*4d0000005000000054000000430000007300000029010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d06000000000000000301030102240000005400
*00006800000069000000730000002000000074000000790000007000000065000000200000006d
*000000610000007900000020000000620000006500000020000000620000006500000073000000
*74000000200000007200000065000000610000006400000020000000690000006e000000660000
*0069000000780000002e0000002000000041000000200107010202000000630000002001040100
*0000000000000003000000000000000000000000000000010202000000200000006d0102060000
*002000000069000000730000002000000061000000200104010000000000000000ff0000000000
*00002f000000000000003001020100000020010702010000006d01020b00000020000000740000
*00680000006100000074000000200000006d0000006100000070000000730000000a0102100000
*002000000076000000610000006c000000750000006500000073000000200000006f0000006600
*000020000000740000007900000070000000650000002001070201000000630102090000002000
*00007400000068000000720000006f000000750000006700000068000000200107020400000075
*0000006e000000690000007401021300000020000000740000006f000000200000007600000061
*0000006c000000750000006500000073000000200000006f000000660000002000000074000000
*79000000700000006500000020010702010000006d0102040000002e0000002000000041000000
*2001070201000000630102010000002d0104010000000000000000030000000000000000000000
*000000000101020a000000200000006d000000610000007900000020000000610000006c000000
*730000006f0000000a01022900000020000000730000007500000070000000700000006c000000
*79000000200000006f0000007000000065000000720000006100000074000000690000006f0000
*006e00000073000000200000007700000068000000690000006300000068000000200000007400
*000061000000630000006b0000002d0000006f0000006e00000020000000610000006e0000006f
*000000740000006800000065000000720000002001070201000000630102100000002000000074
*0000006f00000020000000610000006e0000002000000065000000780000006900000073000000
*74000000690000006e00000067000000200104010000000000000000ff000000000000002f0000
*00000000003001020100000020010702010000006d01020d000000200000006f0000006e000000
*20000000740000006800000065000000200000006c0000006500000066000000740000000a0102
*50000000200000006f000000720000002000000072000000690000006700000068000000740000
*002e00000020000000540000006800000065000000730000006500000020000000730000007000
*0000650000006300000069000000610000006c000000690000007a000000650000006400000020
*000000720000006500000064000000750000006300000074000000690000006f0000006e000000
*73000000200000006d0000006100000079000000200000006200000065000000200000006d0000
*006f00000072000000650000002000000065000000660000006600000069000000630000006900
*0000650000006e0000007400000020000000690000006e00000020000000730000006f0000006d
*00000065000000200000007300000063000000650000006e000000610000007200000069000000
*6f000000730000000a01022400000020000000610000006e000000640000002000000061000000
*720000006500000020000000750000007300000065000000640000002000000077000000680000
*00650000006e00000020000000610000007000000070000000720000006f000000700000007200
*000069000000610000007400000065000000200000006200000079000000200000006100000020
*01020900000047000000650000006e000000650000007200000061000000740000006f00000072
*01020c0000002e00000020000000540000006800000065000000200000006e000000610000006d
*000000650000007300000020010401000000000000000006000000000000000000000000000000
*0101020500000020000000610000006e0000006400000020010401000000000000000005000000
*0000000000000000000000000101020600000020000000770000006f000000720000006b000000
*0a023d00000020000000620000007900000020000000610000006e000000610000006c0000006f
*000000670000007900000020000000740000006f00000020000000740000006800000065000000
*2000000073000000790000006e0000006f0000006e000000790000006d0000006f000000750000
*0073000000200000006f0000007000000065000000720000006100000074000000690000006f00
*00006e0000007300000020000000690000006e0000002000000074000000680000006500000020
*0000006c000000690000007300000074000000200000006d0000006f0000006e0000006f000000
*69000000640000002e0000000a010301024c000000540000006800000069000000730000002000
*0000630000006c0000006100000073000000730000002000000064000000650000006c00000069
*0000006200000065000000720000006100000074000000650000006c0000007900000020000000
*61000000760000006f0000006900000064000000730000002000000066000000750000006e0000
*006300000074000000690000006f0000006e000000610000006c0000002d000000640000006500
*000070000000650000006e00000064000000650000006e00000063000000690000006500000073
*0000002c00000020000000730000006f0000002000000074000000680000006100000074000000
*2000000028000000290000002000000063000000610000006e0000002000000062000000650000
*0020000000610000002001070201000000630102090000002d0000005200000065000000640000
*00750000006300000065000000720000000a01020900000020000000660000006f000000720000
*0020000000610000006c0000006c00000020010702010000006301024a0000002c000000200000
*00610000006e0000006400000020000000730000006f000000200000006d000000610000006e00
*00007900000020000000630000006f0000006d0000006d0000006f0000006e0000002000000072
*000000650000006400000075000000630000006500000072000000730000002000000063000000
*610000006e00000020000000770000006f000000720000006b000000200000006f000000760000
*006500000072000000200000006d000000750000006c0000007400000069000000700000006c00
*0000650000002000000074000000790000007000000065000000730000002c0000002000000066
*0000006f0000007200000020000000690000006e0000007300000074000000610000006e000000
*63000000650000002c0000000a0102200000002000000046000000690000007200000073000000
*7400000020000000610000006e00000064000000200000004c0000006100000073000000740000
*00200000006d000000610000007900000020000000720000006500000064000000750000006300
*00006500000020000000620000006f000000740000006800000020010702010000006101020500
*000020000000610000006e0000006400000020010401000000000000000100000000000000002f
*000000000000003101020100000020010702010000006101020a0000002e000000200000005300
*0000690000006e0000006300000065000000200000006100000020010209000000470000006500
*00006e000000650000007200000061000000740000006f00000072010215000000200000006800
*000061000000730000002000000061000000200000006600000069000000780000006500000064
*00000020000000650000006c000000650000006d000000650000006e000000740000000a01025a
*00000020000000740000007900000070000000650000002c000000200000007400000068000000
*6500000020000000690000006e00000070000000750000007400000020000000740000006f0000
*002000000074000000680000006500000020000000720000006500000064000000750000006300
*000065000000720000002000000069000000730000002000000067000000650000006e00000065
*00000072000000610000006c0000006c00000079000000200000006b0000006e0000006f000000
*770000006e00000020000000610000006e00000064000000200000006500000078000000740000
*0072000000610000006300000074000000690000006e0000006700000020000000660000007200
*00006f0000006d00000020000000740000006800000065000000200000006d0000006f0000006e
*0000006f000000690000006400000020000000750000007300000075000000610000006c000000
*6c000000790000000a01025a000000200000006900000073000000200000007300000075000000
*6600000066000000690000006300000069000000650000006e0000007400000020000000740000
*006f00000020000000660000006900000078000000200000007400000068000000650000002000
*0000720000006500000073000000750000006c0000007400000020000000740000007900000070
*000000650000002e00000020000000430000006f0000006d00000062000000690000006e000000
*61000000740000006f000000720000007300000020000000610000007200000065000000200000
*00610000007600000061000000690000006c00000061000000620000006c000000650000002000
*0000660000006f00000072000000200000006d0000006f00000073000000740000002000000073
*00000063000000650000006e0000006100000072000000690000006f0000007300000020000000
*77000000680000006500000072000000650000000a010258000000200000007400000068000000
*6900000073000000200000006900000073000000200000006e0000006f00000074000000200000
*0074000000680000006500000020000000630000006100000073000000650000002c0000002000
*0000610000006e0000006400000020000000740000006800000065000000200000006600000065
*000000770000002000000072000000650000006d00000061000000690000006e00000069000000
*6e0000006700000020000000630000006100000073000000650000007300000020000000630000
*00610000006e0000002000000062000000650000002000000068000000610000006e0000006400
*00006c000000650000006400000020000000620000007900000020000000750000007300000069
*0000006e0000006700000020000000610000006e00000020000000650000007800000070000000
*6c00000069000000630000006900000074000000200000000a0212000000200000007400000079
*000000700000006500000020000000610000006e0000006e0000006f0000007400000061000000
*74000000690000006f0000006e0000002e0000000a030102140000004d000000690000006e0000
*00690000006d000000610000006c00000020000000640000006500000066000000690000006e00
*00006900000074000000690000006f0000006e0000003a00000020010401000000000000000004
*00000000000000000000000000000001010204000000200000006f000000720000002001040100
*00000000000000050000000000000000000000000000000102010000000a000000000000000403
*010217000000430000006f0000006e000000760000006500000072000000740000002000000061
*0000002000000076000000610000006c000000750000006500000020000000690000006e000000
*740000006f0000002000000061000000200104010000000000000000ff000000000000002f0000
*00000000003002010000000a000000000000000503010214000000410000007000000070000000
*650000006e0000006400000020000000610000002000000076000000610000006c000000750000
*006500000020000000740000006f0000002000000061000000200104010000000000000000ff00
*0000000000002f0000000000000030022400000020000000660000006f00000072000000200000
*0075000000730000006500000020000000690000006e000000200000006c000000650000006600
*0000740000002d000000740000006f0000002d0000007200000069000000670000006800000074
*00000020000000720000006500000064000000750000006300000074000000690000006f000000
*6e0000000a00000000000000060301021700000050000000720000006500000070000000650000
*006e0000006400000020000000610000002000000076000000610000006c000000750000006500
*0000200000006f0000006e000000740000006f0000002000000061000000200104010000000000
*000000ff000000000000002f0000000000000030022800000020000000660000006f0000007200
*00002000000075000000730000006500000020000000640000007500000072000000690000006e
*000000670000002000000072000000690000006700000068000000740000002d00000074000000
*6f0000002d0000006c000000650000006600000074000000200000007200000065000000640000
*00750000006300000074000000690000006f0000006e0000000a00000000000000070301020800
*00004100000070000000700000006c000000790000002000000061000000200104010000000000
*000000030000000000000000000000000000000101020600000020000000740000006f00000020
*0000006100000020010401000000000000000101000000000000002f0000000000000032024b00
*000020000000630000006f0000006e0000007400000061000000690000006e0000006500000072
*0000002c000000200000006100000066000000740000006500000072000000200000006d000000
*610000007000000070000000690000006e00000067000000200000007400000068000000650000
*0020000000630000006f0000006e00000074000000650000006e00000074000000730000002000
*0000690000006e000000740000006f000000200000006100000020000000730000007500000069
*0000007400000061000000620000006c0000006500000020000000660000006f00000072000000
*6d00000020000000660000006f0000007200000020000000720000006500000064000000750000
*006300000074000000690000006f0000006e0000002e0000000a00000000000000080301020800
*00004100000070000000700000006c000000790000002000000061000000200104010000000000
*000000030000000000000000000000000000000101020600000020000000740000006f00000020
*0000006100000020010401000000000000000101000000000000002f000000000000003201021e
*000000200000006d000000610000007000000070000000690000006e0000006700000020000000
*6500000061000000630000006800000020000000650000006c000000650000006d000000650000
*006e00000074000000200000007400000068000000720000006f00000075000000670000006800
*0000200104010000000000000000040000000000000000000000000000000102010000000a2700
*000000000001020000000000000103000000000000010400000000000000ff0000000000000105
*000000000000010600000000000001070000000000000108000000000000010900000000000001
*0a000000000000010b000000000000010c000000000000010d000000000000010e000000000000
*010f00000000000001100000000000000111000000000000011200000000000001130000000000
*000114000000000000011500000000000001160000000000000117000000000000011800000000
*00000119000000000000011a000000000000011b000000000000011c0000000000000000000000
*000000000100000000000000020000000000000003000000000000000400000000000000050000
*000000000006000000000000000700000000000000080000000000000009000000000000000a0b
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*070000000000000008000000000000000a00000000000000090000000000000000000000000000
*00010000000000000002000000000000000000000000000000020001140000006e0000006f0000
*006e0000002d000000700000006f000000720000007400000061000000620000006c0000006500
*000020000000280000004d0000005000000054000000430000007300000029010c000000650000
*0078000000700000006500000072000000690000006d000000650000006e000000740000006100
*00006c0110000000650000006b0000006d00000065000000740000007400000040000000670000
*006d00000061000000690000006c0000002e000000630000006f0000006d01000000000000000b
*0301022200000050000000720000006f0000007600000069000000640000006500000073000000
*2000000061000000200000006d000000650000006300000068000000610000006e000000690000
*00730000006d00000020000000660000006f000000720000002000000074000000680000006500
*00002000000055000000540000004600000038000000200104010000000000000000ff00000000
*0000002f0000000000000030023600000020000000740000006f00000020000000720000006500
*0000700000006f000000720000007400000020000000690000006e00000076000000610000006c
*000000690000006400000020000000630000006800000061000000720000006100000063000000
*7400000065000000720000007300000020000000740000006f000000200000006f0000006e0000
*0065000000200000006f00000072000000200000006d0000006f00000072000000650000002000
*00006d0000006f0000006e0000006f0000006900000064000000730000002e0000000a2a000000
*00000001020000000000000103000000000000010400000000000000ff00000000000001050000
*000000000106000000000000010700000000000001080000000000000109000000000000010a00
*0000000000010b000000000000010c000000000000010d000000000000010e000000000000010f
*000000000000011000000000000001110000000000000112000000000000011300000000000001
*140000000000000115000000000000011600000000000001170000000000000118000000000000
*0119000000000000011a000000000000011b000000000000011c00000000000000000000000000
*000001000000000000000200000000000000030000000000000004000000000000000500000000
*00000006000000000000000700000000000000080000000000000009000000000000000a000000
*000000000b000000000000000c000000000000000d03000000000000000b000000000000000d00
*0000000000000c000000000000000000000000000000030001140000006e0000006f0000006e00
*00002d000000700000006f000000720000007400000061000000620000006c0000006500000020
*000000280000004d0000005000000054000000430000007300000029010c000000650000007800
*0000700000006500000072000000690000006d000000650000006e00000074000000610000006c
*0110000000650000006b0000006d00000065000000740000007400000040000000670000006d00
*000061000000690000006c0000002e000000630000006f0000006d002c00000000000001020000
*000000000103000000000000010400000000000000ff0000000000000105000000000000010600
*0000000000010700000000000001080000000000000109000000000000010a000000000000010b
*000000000000010c000000000000010d000000000000010e000000000000010f00000000000001
*100000000000000111000000000000011200000000000001130000000000000114000000000000
*011500000000000001160000000000000117000000000000011800000000000001190000000000
*00011a000000000000011b000000000000011c0000000000000000000000000000000100000000
*000000020000000000000003000000000000000400000000000000050000000000000006000000
*000000000700000000000000080000000000000009000000000000000a000000000000000b0000
*00000000000c000000000000000d000000000000000e000000000000000f02000000000000000e
*000000000000000f000000000000000000000000000000040001140000006e0000006f0000006e
*0000002d000000700000006f000000720000007400000061000000620000006c00000065000000
*20000000280000004d0000005000000054000000430000007300000029010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c0110000000650000006b0000006d00000065000000740000007400000040000000670000006d
*00000061000000690000006c0000002e000000630000006f0000006d0100000000000000100301
*0203000000490000006600000020010702010000006d0102060000002000000069000000730000
*0020000000610000002001070201000000630102010000002d0105070000005200000065000000
*640000007500000063000000650000007201020c0000002c000000200000007400000068000000
*650000006e000000200000006d0000002000000069000000730000002001070102030000002800
*000063000000200104020000000000000000110000000000000000000000000000000400000000
*0000000010000000000000000000000000000000040203000000200000006d0000002901020100
*00002d010507000000520000006500000064000000750000006300000065000000720102010000
*000a01022800000020000000200000002000000054000000680000006900000073000000200000
*0063000000610000006e0000002000000062000000650000002000000075000000730000006500
*00006400000020000000740000006f00000020000000710000007500000069000000630000006b
*0000006c000000790000002000000073000000650000006c000000650000006300000074000000
*200000006100000020010507000000520000006500000064000000750000006300000065000000
*7201020e00000020000000660000006f0000007200000020000000750000007300000065000000
*20000000610000007300000020000000610000002001040101000000000000011d010201000000
*0a01020300000020000000200000002001040101000000000000011e02020000002e0000000a2a
*00000000000001020000000000000103000000000000010400000000000000ff00000000000001
*050000000000000106000000000000010700000000000001080000000000000109000000000000
*010a000000000000010b000000000000010c000000000000010d000000000000010e0000000000
*00010f000000000000011000000000000001110000000000000112000000000000011300000000
*000001140000000000000115000000000000011600000000000001170000000000000118000000
*0000000119000000000000011a000000000000011b000000000000011c00000000000000000000
*000000000001000000000000000200000000000000030000000000000004000000000000000500
*00000000000006000000000000000700000000000000080000000000000009000000000000000a
*000000000000001000000000000000110000000000000012030000000000000010000000000000
*001100000000000000120000000000000000000000000000000500000000040000000000000013
*03010204000000540000006800000065000000200104010000000000000000ff00000000000000
*2f0000000000000030010201000000200107010201000000280102010000002701021100000075
*0000006e000000690000006f0000006e0000005700000069000000740000006800000020000000
*6d000000610000007000000070000000650000006e00000064010201000000270102010000002c
*01040100000000000000001d000000000000000000000000000000050201000000290221000000
*20000000660000006f0000007200000020000000630000006f0000006e00000074000000610000
*00690000006e0000006500000072000000730000002000000066000000750000006c0000006c00
*0000200000006f00000066000000200000006d0000006f0000006e0000006f0000006900000064
*000000730000002e0000000a000000000000001603024d000000500000006f0000006c00000079
*0000006d0000006f00000072000000700000006800000069000000630000002000000063000000
*6f0000006e0000007400000061000000690000006e000000650000007200000073000000200000
*007400000068000000610000007400000020000000770000006500000020000000630000006100
*00006e00000020000000730000007500000070000000700000006c000000790000002000000061
*0000006e000000200000006f000000700000006500000072000000610000007400000069000000
*6f0000006e00000020000000740000006f0000002000000068000000610000006e000000640000
*006c0000006500000020000000750000006e000000690000006f0000006e000000730000002000
*0000770000006900000074000000680000000a0000000000000019030102040000005400000068
*00000065000000200104010000000000000000ff000000000000002f0000000000000030010201
*0000002001070102010000002801040100000000000000001e0000000000000000000000000000
*00050102010000002c01040100000000000000001d000000000000000000000000000000050201
*0000002902010000000a000000000000001c0301021d0000004100000020000000430000006f00
*00006e0000007400000061000000690000006e0000006500000072000000200000007300000075
*000000690000007400000061000000620000006c0000006500000020000000660000006f000000
*72000000200000007400000068000000650000002001040200000000000000001a000000000000
*000000000000000000050000000000000000190000000000000000000000000000000501020100
*0000200104010000000000000000ff000000000000002f000000000000003002010000000a3300
*000000000001020000000000000103000000000000010400000000000000ff0000000000000105
*000000000000010600000000000001070000000000000108000000000000010900000000000001
*0a000000000000010b000000000000010c000000000000010d000000000000010e000000000000
*010f00000000000001100000000000000111000000000000011200000000000001130000000000
*000114000000000000011500000000000001160000000000000117000000000000011800000000
*00000119000000000000011a000000000000011b000000000000011c0000000000000000000000
*000000000100000000000000020000000000000003000000000000000400000000000000050000
*000000000006000000000000000700000000000000080000000000000009000000000000000a00
*000000000000130000000000000014000000000000001500000000000000160000000000000017
*00000000000000180000000000000019000000000000001a000000000000001b00000000000000
*1c000000000000001d000000000000001e0c000000000000001c000000000000001d0000000000
*00001e0000000000000019000000000000001a000000000000001b000000000000001600000000
*000000180000000000000017000000000000001300000000000000140000000000000015000000
*00000000000000000000000006000108000000700000006f000000720000007400000061000000
*620000006c00000065010c0000006500000078000000700000006500000072000000690000006d
*000000650000006e00000074000000610000006c0110000000650000006b0000006d0000006500
*0000740000007400000040000000670000006d00000061000000690000006c0000002e00000063
*0000006f0000006d05000000000000001f03010202000000610000002001040100000000000000
*002800000000000000000000000000000006010219000000200000007400000072000000610000
*006e00000073000000660000006f000000720000006d0000006500000072000000200000007400
*000068000000610000007400000020000000740000007200000065000000610000007400000073
*0000002001040100000000000000011f000000000000002f000000000000003301020400000020
*000000610000007300000020010401000000000000000120000000000000003400000000000000
*350102010000000a0102150000002000000054000000680000006900000073000000200000006c
*00000065000000740000007300000020000000790000006f000000750000002000000075000000
*730000006500000020000000610000002001020a00000042000000790000007400000065000000
*530000007400000072000000690000006e00000067010206000000200000006100000073000000
*200000006100000020010401000000000000000120000000000000003400000000000000350102
*2000000020000000730000006f0000007500000072000000630000006500000020000000770000
*006900000074000000680000006f000000750000007400000020000000670000006f0000006900
*00006e00000067000000200000007400000068000000720000006f000000750000006700000068
*0000002000000061000000200104010000000000000000ff000000000000002f00000000000000
*30010212000000200000007400000072000000610000006e00000073000000660000006f000000
*720000006d0000006500000072000000200000006c000000690000006b00000065000000200102
*040000005500000054000000460000003802010000000a00000000000000220301020200000061
*0000002001040100000000000000002800000000000000000000000000000006024d0000002000
*00007400000072000000610000006e00000073000000660000006f000000720000006d00000065
*000000720000002000000074000000680000006100000074000000200000006100000073000000
*6b00000073000000200000006f0000006e0000006c0000007900000020000000660000006f0000
*0072000000200000007400000068000000650000002000000076000000610000006c0000007500
*0000650000007300000020000000630000006f0000006e0000007400000061000000690000006e
*000000650000006400000020000000690000006e00000020000000610000006e00000020000000
*690000006e000000640000006500000078000000650000006400000020000000630000006f0000
*006e0000007400000061000000690000006e00000065000000720000000a000000000000002503
*010202000000610000002001040100000000000000002800000000000000000000000000000006
*0241000000200000007400000072000000610000006e00000073000000660000006f0000007200
*00006d000000650000007200000020000000740000006800000061000000740000002000000061
*000000730000006b00000073000000200000006f0000006e0000006c0000007900000020000000
*660000006f0000007200000020000000740000006800000065000000200000006b000000650000
*007900000073000000200000006f0000006600000020000000610000006e000000200000006900
*00006e000000640000006500000078000000650000006400000020000000630000006f0000006e
*0000007400000061000000690000006e00000065000000720000000a0000000000000028030102
*130000006d000000690000006e000000690000006d000000610000006c00000020000000640000
*006500000066000000690000006e0000006900000074000000690000006f0000006e0000002001
*040100000000000000002a00000000000000000000000000000006010204000000200000006f00
*0000720000002001040100000000000000002b0000000000000000000000000000000602010000
*000a000000000000002d030102080000004100000070000000700000006c000000790000002000
*000061000000200104010000000000000000030000000000000000000000000000000101021f00
*0000200000006400000069000000720000006500000063000000740000006c0000007900000020
*000000740000006f0000002000000074000000680000006500000020000000650000006c000000
*650000006d000000650000006e0000007400000073000000200000006f00000066000000200000
*006100000020010401000000000000000028000000000000000000000000000000060201000000
*0a3800000000000001020000000000000103000000000000010400000000000000ff0000000000
*000105000000000000010600000000000001070000000000000108000000000000010900000000
*0000010a000000000000010b000000000000010c000000000000010d000000000000010e000000
*000000010f00000000000001100000000000000111000000000000011200000000000001130000
*000000000114000000000000011500000000000001160000000000000117000000000000011800
*00000000000119000000000000011a000000000000011b000000000000011c0000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*050000000000000006000000000000000700000000000000080000000000000009000000000000
*000a000000000000001f0000000000000020000000000000002100000000000000220000000000
*000023000000000000002400000000000000250000000000000026000000000000002700000000
*000000280000000000000029000000000000002a000000000000002b000000000000002c000000
*000000002d000000000000002e000000000000002f110000000000000028000000000000002900
*0000000000002a000000000000002b000000000000002c00000000000000250000000000000026
*000000000000002700000000000000220000000000000023000000000000002400000000000000
*1f00000000000000200000000000000021000000000000002d000000000000002e000000000000
*002f000000000000000000000000000000070001270000006e0000006f0000006e0000002d0000
*00700000006f000000720000007400000061000000620000006c00000065000000200000002800
*00004d000000500000005400000043000000730000002c000000200000004f0000007600000065
*000000720000006c0000006f000000610000006400000065000000640000005300000074000000
*72000000690000006e000000670000007300000029010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01100000006500
*00006b0000006d00000065000000740000007400000040000000670000006d0000006100000069
*0000006c0000002e000000630000006f0000006d06000000000000003003010202000000410000
*00200104010000000000000000ff000000000000002f000000000000003001023a000000200000
*006f00000066000000200000007000000061000000720000007400000069000000610000006c00
*000020000000690000006e000000660000006f000000720000006d000000610000007400000069
*0000006f0000006e0000002000000061000000620000006f000000750000007400000020000000
*6c0000006f000000630000006100000074000000690000006f0000006e00000073000000200000
*00690000006e000000200000006100000020000000730000006f00000075000000720000006300
*0000650000002000000066000000690000006c000000650000002e0000000a025f000000200000
*002000000020000000540000006800000069000000730000002000000069000000730000002000
*0000700000006f0000006c000000790000006d0000006f00000072000000700000006800000069
*0000006300000020000000690000006e0000002000000074000000680000006500000020000000
*6b000000690000006e00000064000000200000006f0000006600000020000000690000006e0000
*00660000006f000000720000006d0000006100000074000000690000006f0000006e0000002000
*0000790000006f000000750000002000000077000000610000006e000000740000002000000074
*0000006f000000200000006d00000061000000690000006e000000740000006100000069000000
*6e0000002000000061000000620000006f00000075000000740000002000000065000000610000
*00630000006800000020000000730000006f000000750000007200000063000000650000002000
*000066000000690000006c000000650000002e0000000a000000000000003703023f0000004300
*00006f0000006d0000007000000075000000740000006500000020000000740000006800000065
*000000200000006c0000006f000000630000006100000074000000690000006f0000006e000000
*200000006f0000006600000020000000740000006800000065000000200000006e000000650000
*007800000074000000200000007300000074000000610000006e00000064000000610000007200
*00006400000020000000380000002d000000630000006f0000006c000000750000006d0000006e
*00000020000000610000006c00000069000000670000006e000000650000006400000020000000
*7400000061000000620000000a0000000000000038030102350000006c00000069000000660000
*007400000020000000690000006e000000660000006f000000720000006d000000610000007400
*0000690000006f0000006e0000002000000061000000620000006f000000750000007400000020
*0000006100000020000000730000006f0000007500000072000000630000006500000020000000
*66000000690000006c0000006500000020000000690000006e000000740000006f000000200000
*0061000000200000007300000074000000610000007200000074000000690000006e0000006700
*00002001040100000000000000003000000000000000000000000000000007020f000000200000
*00660000006f000000720000002000000074000000680000006100000074000000200000006600
*0000690000006c000000650000000a000000000000003903026a00000065000000780000007400
*000072000000610000006300000074000000200000007000000061000000720000007400000069
*000000610000006c00000020000000690000006e000000660000006f000000720000006d000000
*6100000074000000690000006f0000006e0000002000000061000000620000006f000000750000
*007400000020000000740000006800000065000000200000006300000075000000720000007200
*0000650000006e0000007400000020000000630000006f0000006c000000750000006d0000006e
*0000002c000000200000006500000076000000650000006e00000020000000690000006e000000
*2000000074000000680000006500000020000000610000006200000073000000650000006e0000
*006300000065000000200000006f00000066000000200000006b0000006e0000006f0000007700
*00006c00000065000000640000006700000065000000200000006f000000660000002000000074
*000000680000006500000020000000730000006f00000075000000720000006300000065000000
*2000000066000000690000006c000000650000000a000000000000003a03024600000065000000
*780000007400000072000000610000006300000074000000200000007000000061000000720000
*007400000069000000610000006c00000020000000690000006e000000660000006f0000007200
*00006d0000006100000074000000690000006f0000006e0000002000000061000000620000006f
*000000750000007400000020000000740000006800000065000000200000006300000075000000
*7200000072000000650000006e00000074000000200000006c000000690000006e000000650000
*00200000006e000000750000006d00000062000000650000007200000020000000690000006600
*000020000000700000006f000000730000007300000069000000620000006c000000650000000a
*000000000000003b03023c00000065000000780000007400000072000000610000006300000074
*00000020000000740000006800000065000000200000007300000074000000610000006e000000
*6400000061000000720000006400000020000000660000006f000000720000006d000000610000
*007400000020000000660000006f0000007200000020000000610000006e000000200000006100
*000062000000730000006f0000006c00000075000000740000006500000020000000730000006f
*0000007500000072000000630000006500000020000000700000006f0000007300000069000000
*74000000690000006f0000006e0000000a36000000000000010200000000000001030000000000
*00010400000000000000ff00000000000001050000000000000106000000000000010700000000
*000001080000000000000109000000000000010a000000000000010b000000000000010c000000
*000000010d000000000000010e000000000000010f000000000000011000000000000001110000
*000000000112000000000000011300000000000001140000000000000115000000000000011600
*0000000000011700000000000001180000000000000119000000000000011a000000000000011b
*000000000000011c00000000000000000000000000000001000000000000000200000000000000
*030000000000000004000000000000000500000000000000060000000000000007000000000000
*00080000000000000009000000000000000a000000000000000b000000000000000c0000000000
*00000d000000000000003000000000000000310000000000000032000000000000003300000000
*000000340000000000000035000000000000003600000000000000370000000000000038000000
*0000000039000000000000003a000000000000003b0c0000000000000037000000000000003000
*000000000000340000000000000033000000000000003200000000000000310000000000000036
*0000000000000035000000000000003a0000000000000039000000000000003800000000000000
*3b000000000000000000000000000000080001270000006e0000006f0000006e0000002d000000
*700000006f000000720000007400000061000000620000006c0000006500000020000000280000
*004d000000500000005400000043000000730000002c000000200000004f000000760000006500
*0000720000006c0000006f00000061000000640000006500000064000000530000007400000072
*000000690000006e000000670000007300000029010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c0110000000650000
*006b0000006d00000065000000740000007400000040000000670000006d000000610000006900
*00006c0000002e000000630000006f0000006d08000000000000003c0301020200000041000000
*2001040100000000000000000b0000000000000000000000000000000202260000002000000074
*00000072000000610000006e00000073000000660000006f000000720000006d00000065000000
*720000002000000074000000680000006100000074000000200000007300000074000000720000
*00690000007000000073000000200000006f0000007500000074000000200000006e0000006500
*0000770000006c000000690000006e00000065000000730000000a000000000000003e03010202
*000000410000002001040100000000000000000b00000000000000000000000000000002010236
*000000200000007400000072000000610000006e00000073000000660000006f00000072000000
*6d0000006500000072000000200000007400000068000000610000007400000020000000730000
*007400000072000000690000007000000073000000200000006f00000075000000740000002000
*0000610000006e0000007900000020000000630000006800000061000000720000006100000063
*000000740000006500000072000000200000006d00000061000000740000006300000068000000
*650000006400000020000000620000007900000020010401000000000000000121000000000000
*002f000000000000003602010000000a0000000000000040030102020000004100000020010401
*00000000000000000b0000000000000000000000000000000201021b0000002000000074000000
*72000000610000006e00000073000000660000006f000000720000006d00000065000000720000
*002000000074000000680000006100000074000000200000006200000072000000650000006100
*00006b000000730000002000000061000000200104010000000000000001200000000000000034
*000000000000003501020100000020010401000000000000000028000000000000000000000000
*0000000601022000000020000000690000006e000000740000006f000000200000006400000069
*0000007300000074000000690000006e0000006300000074000000200000006c00000069000000
*6e00000065000000730000002c0000002000000066000000650000006500000064000000690000
*006e00000067000000200000006100000020010401000000000000000120000000000000003400
*000000000000350102010000002001040100000000000000000300000000000000000000000000
*00000102140000002000000065000000610000006300000068000000200000006c000000690000
*006e0000006500000020000000690000006e000000200000007400000075000000720000006e00
*00002e0000000a000000000000004103010202000000410000002001040100000000000000000b
*0000000000000000000000000000000201021b000000200000007400000072000000610000006e
*00000073000000660000006f000000720000006d00000065000000720000002000000074000000
*68000000610000007400000020000000620000007200000065000000610000006b000000730000
*002000000061000000200104010000000000000001200000000000000034000000000000003501
*020100000020010401000000000000000028000000000000000000000000000000060102200000
*0020000000690000006e000000740000006f000000200000006400000069000000730000007400
*0000690000006e000000630000007400000020000000770000006f000000720000006400000073
*0000002c0000002000000066000000650000006500000064000000690000006e00000067000000
*200000006100000020010401000000000000000120000000000000003400000000000000350102
*010000002001040100000000000000000300000000000000000000000000000001021300000020
*00000065000000610000006300000068000000200000006c000000690000006e00000065000000
*20000000690000006e000000200000007400000075000000720000006e0000000a000000000000
*004203010223000000450000007800000074000000720000006100000063000000740000002000
*0000740000006800000065000000200000006d0000006100000074000000630000006800000065
*0000006400000020000000770000006f0000007200000064000000730000002000000066000000
*720000006f0000006d000000200000007400000068000000650000002001040100000000000000
*004100000000000000000000000000000008010201000000200104010000000000000000ff0000
*00000000002f000000000000003002010000000a00000000000000430301022300000045000000
*780000007400000072000000610000006300000074000000200000007400000068000000650000
*00200000006d000000610000007400000063000000680000006500000064000000200000006c00
*0000690000006e00000065000000730000002000000066000000720000006f0000006d00000020
*000000740000006800000065000000200104010000000000000000400000000000000000000000
*0000000008010201000000200104010000000000000000ff000000000000002f00000000000000
*3002010000000a000000000000004403025e0000005500000074000000690000006c0000006900
*000074000000790000002000000066000000750000006e0000006300000074000000690000006f
*0000006e00000020000000740000006f0000002000000065000000780000007400000072000000
*61000000630000007400000020000000770000006f000000720000006400000073000000200000
*007500000073000000690000006e00000067000000200000006100000063000000630000007500
*00006d000000750000006c00000061000000740000006f000000720000002c0000002000000069
*0000006e000000730000006900000064000000650000002d000000770000006f00000072000000
*640000002c00000020000000610000006e0000006400000020000000750000006e000000740000
*00690000006c0000002d0000006e0000006500000078000000740000002d000000770000006f00
*00007200000064000000200000006d0000006f0000006e0000006f000000690000006400000073
*0000000a000000000000004503025e0000005500000074000000690000006c0000006900000074
*000000790000002000000066000000750000006e0000006300000074000000690000006f000000
*6e00000020000000740000006f0000002000000065000000780000007400000072000000610000
*006300000074000000200000006c000000690000006e0000006500000073000000200000007500
*000073000000690000006e0000006700000020000000610000006300000063000000750000006d
*000000750000006c00000061000000740000006f000000720000002c0000002000000069000000
*6e000000730000006900000064000000650000002d0000006c000000690000006e000000650000
*002c00000020000000610000006e0000006400000020000000750000006e000000740000006900
*00006c0000002d0000006e0000006500000078000000740000002d0000006c000000690000006e
*00000065000000200000006d0000006f0000006e0000006f000000690000006400000073000000
*0a3400000000000001020000000000000103000000000000010400000000000000ff0000000000
*000105000000000000010600000000000001070000000000000108000000000000010900000000
*0000010a000000000000010b000000000000010c000000000000010d000000000000010e000000
*000000010f00000000000001100000000000000111000000000000011200000000000001130000
*000000000114000000000000011500000000000001160000000000000117000000000000011800
*00000000000119000000000000011a000000000000011b000000000000011c0000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*050000000000000006000000000000000700000000000000080000000000000009000000000000
*000a000000000000000b000000000000000c000000000000000d000000000000003c0000000000
*00003d000000000000003e000000000000003f0000000000000040000000000000004100000000
*000000420000000000000043000000000000004400000000000000450a00000000000000410000
*000000000042000000000000003e000000000000003f0000000000000044000000000000004000
*00000000000043000000000000003c000000000000003d00000000000000450000000000000000
*0000000000000009000108000000700000006f000000720000007400000061000000620000006c
*00000065010c0000006500000078000000700000006500000072000000690000006d0000006500
*00006e00000074000000610000006c0110000000650000006b0000006d00000065000000740000
*007400000040000000670000006d00000061000000690000006c0000002e000000630000006f00
*00006d002a00000000000001020000000000000103000000000000010400000000000000ff0000
*000000000105000000000000010600000000000001070000000000000108000000000000010900
*0000000000010a000000000000010b000000000000010c000000000000010d000000000000010e
*000000000000010f00000000000001100000000000000111000000000000011200000000000001
*130000000000000114000000000000011500000000000001160000000000000117000000000000
*01180000000000000119000000000000011a000000000000011b000000000000011c0000000000
*000000000000000000000100000000000000020000000000000003000000000000000400000000
*000000050000000000000006000000000000000700000000000000080000000000000009000000
*000000000a00000000000000460000000000000047000000000000004803000000000000004600
*0000000000004700000000000000480000000000000000000000000000000a0001080000007000
*00006f000000720000007400000061000000620000006c00000065010c00000065000000780000
*00700000006500000072000000690000006d000000650000006e00000074000000610000006c01
*10000000650000006b0000006d00000065000000740000007400000040000000670000006d0000
*0061000000690000006c0000002e000000630000006f0000006d06000000000000012203010214
*000000410000006e000000200000004c0000005a00000037000000380000002000000063000000
*6f0000006d0000007000000072000000650000007300000073000000690000006e000000670000
*00200104010000000000000000280000000000000000000000000000000601021b0000002c0000
*002000000077000000680000006900000063000000680000002000000073000000750000007000
*0000700000006f0000007200000074000000730000002000000065000000660000006600000069
*0000006300000069000000650000006e000000740000002001040100000000000000002a000000
*00000000000000000000000006020c000000200000006f00000070000000650000007200000061
*00000074000000690000006f0000006e000000730000000a000000000000004a03010213000000
*6100000020000000740000007900000070000000650000002d000000630000006f0000006e0000
*0073000000740000007200000061000000690000006e0000006500000064000000200104010000
*0000000000002d00000000000000000000000000000006020b000000200000006f000000700000
*0065000000720000006100000074000000690000006f0000006e0000000a000000000000004b03
*01021c000000630000006f0000006e000000740000007200000075000000630000007400000020
*000000610000006e000000200000004c0000005a00000037000000380000002d00000063000000
*6f0000006d00000070000000720000006500000073000000730000006500000064000000200104
*010000000000000000280000000000000000000000000000000601020900000020000000750000
*0073000000690000006e0000006700000020000000610000002001040100000000000000012300
*000000000000370000000000000038022a00000020000000690000006e00000074000000650000
*00720000006e000000610000006c0000006c000000790000002c00000020000000720000006500
*000071000000750000006900000072000000650000007300000020000000610000006e00000020
*000000690000006e0000007300000074000000610000006e000000630000006500000020000000
*6f00000066000000200000004f00000072000000640000002e0000000a000000000000004c0301
*021c000000630000006f0000006e00000074000000720000007500000063000000740000002000
*0000610000006e000000200000004c0000005a00000037000000380000002d000000630000006f
*0000006d0000007000000072000000650000007300000073000000650000006400000020010401
*000000000000000028000000000000000000000000000000060236000000200000007500000073
*000000690000006e000000670000002000000061000000200000006c0000006900000073000000
*7400000020000000690000006e0000007400000065000000720000006e000000610000006c0000
*006c000000790000002c0000002000000072000000650000007100000075000000690000007200
*0000650000007300000020000000610000006e00000020000000690000006e0000007300000074
*000000610000006e0000006300000065000000200000006f000000660000002000000045000000
*710000002e0000000a000000000000004d03022a00000051000000750000006900000063000000
*6b000000430000006800000065000000630000006b0000002000000070000000720000006f0000
*0070000000650000007200000074000000790000003a0000002000000064000000650000006300
*00006f0000006400000065000000200000002e00000020000000650000006e000000630000006f
*0000006400000065000000200000003d0000002000000069000000640000000a00000000000000
*4e03022c000000510000007500000069000000630000006b000000430000006800000065000000
*630000006b0000002000000070000000720000006f000000700000006500000072000000740000
*00790000003a000000200000006400000065000000630000006f00000064000000650000002000
*00002e00000020000000650000006e000000630000006f00000064000000650000004500000071
*000000200000003d0000002000000069000000640000000a3e0000000000000102000000000000
*0103000000000000010400000000000000ff000000000000010500000000000001060000000000
*00010700000000000001080000000000000109000000000000010a000000000000010b00000000
*0000010c000000000000010d000000000000010e000000000000010f0000000000000110000000
*000000011100000000000001120000000000000113000000000000011400000000000001150000
*000000000116000000000000011700000000000001180000000000000119000000000000011a00
*0000000000011b000000000000011c000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*0700000000000000080000000000000009000000000000000a000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000025000000000000002600000000000000270000000000000028000000000000002900000000
*0000002a000000000000002b000000000000002c000000000000002d000000000000002e000000
*000000002f0000000000000049000000000000004a000000000000004b000000000000004c0000
*00000000004d000000000000004e060000000000000049000000000000004a000000000000004b
*000000000000004c000000000000004d000000000000004e000000000000000000000000000000
*0b0001280000006e0000006f0000006e0000002d000000700000006f0000007200000074000000
*61000000620000006c0000006500000020000000280000006f0000007600000065000000720000
*006c0000006f000000610000006400000065000000640000002000000073000000740000007200
*0000690000006e00000067000000730000002c000000200000004d000000500000005400000043
*0000007300000029010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d002a000000000000010200000000000001030000000000000104000000000000
*00ff00000000000001050000000000000106000000000000010700000000000001080000000000
*000109000000000000010a000000000000010b000000000000010c000000000000010d00000000
*0000010e000000000000010f000000000000011000000000000001110000000000000112000000
*000000011300000000000001140000000000000115000000000000011600000000000001170000
*0000000001180000000000000119000000000000011a000000000000011b000000000000011c00
*000000000000000000000000000001000000000000000200000000000000030000000000000004
*000000000000000500000000000000060000000000000007000000000000000800000000000000
*09000000000000000a000000000000004f00000000000000500000000000000051030000000000
*00004f000000000000005000000000000000510000000000000000000000000000000c00012300
*00006e0000006f0000006e0000002d000000700000006f00000072000000740000006100000062
*0000006c0000006500000020000000280000007400000079000000700000006500000020000000
*66000000610000006d000000690000006c0000006900000065000000730000002c000000200000
*004d0000005000000054000000430000007300000029010c000000650000007800000070000000
*6500000072000000690000006d000000650000006e00000074000000610000006c011000000065
*0000006b0000006d00000065000000740000007400000040000000670000006d00000061000000
*690000006c0000002e000000630000006f0000006d030000000000000052030102140000004100
*00002000000067000000650000006e0000006500000072000000610000006c000000690000007a
*0000006100000074000000690000006f0000006e000000200000006f000000660000002001020f
*000000440000006100000074000000610000002e0000004c000000690000007300000074000000
*2e0000006300000079000000630000006c0000006501021100000020000000740000006f000000
*20000000610000006e000000200000006100000072000000620000006900000074000000720000
*00610000007200000079000000200104010000000000000000ff000000000000002f0000000000
*00003002390000002e000000200000004d00000061000000790000002000000066000000610000
*00690000006c00000020000000740000006f000000200000007400000065000000720000006d00
*0000690000006e00000061000000740000006500000020000000660000006f0000007200000020
*000000730000006f0000006d000000650000002000000076000000610000006c00000075000000
*650000007300000020000000690000006e00000020000000730000006f0000006d000000650000
*00200000006d0000006f0000006e0000006f0000006900000064000000730000002e0000000a00
*0000000000005303010214000000410000002000000067000000650000006e0000006500000072
*000000610000006c000000690000007a0000006100000074000000690000006f0000006e000000
*200000006f0000006600000020010210000000440000006100000074000000610000002e000000
*4c0000006900000073000000740000002e00000072000000650000007000000065000000610000
*007401021100000020000000740000006f00000020000000610000006e00000020000000610000
*007200000062000000690000007400000072000000610000007200000079000000200104010000
*000000000000ff000000000000002f000000000000003002390000002e000000200000004d0000
*006100000079000000200000006600000061000000690000006c00000020000000740000006f00
*0000200000007400000065000000720000006d000000690000006e000000610000007400000065
*00000020000000660000006f0000007200000020000000730000006f0000006d00000065000000
*2000000076000000610000006c00000075000000650000007300000020000000690000006e0000
*0020000000730000006f0000006d00000065000000200000006d0000006f0000006e0000006f00
*00006900000064000000730000002e0000000a0000000000000054030102140000004100000020
*00000067000000650000006e0000006500000072000000610000006c000000690000007a000000
*6100000074000000690000006f0000006e000000200000006f0000006600000020010213000000
*440000006100000074000000610000002e0000004c0000006900000073000000740000002e0000
*007200000065000000700000006c00000069000000630000006100000074000000650102110000
*0020000000740000006f00000020000000610000006e0000002000000061000000720000006200
*0000690000007400000072000000610000007200000079000000200104010000000000000000ff
*000000000000002f00000000000000300102100000002e00000020000000410000006400000061
*000000700000007400000065000000640000002000000066000000720000006f0000006d000000
*200000000a01020100000020010c4a000000680000007400000074000000700000003a0000002f
*0000002f0000006100000075000000670000007500000073000000740000007300000073000000
*2e000000620000006c0000006f0000006700000073000000700000006f000000740000002e0000
*00630000006f0000006d0000002f000000320000003000000030000000380000002f0000003000
*0000370000002f0000006c0000006f00000073000000740000002d000000610000006e00000064
*0000002d000000660000006f000000750000006e000000640000002d0000006900000066000000
*2d000000690000002d00000077000000720000006900000074000000650000002d000000310000
*0030000000380000002d000000690000006e0000002e00000068000000740000006d0000006c02
*010000000a04000000000000005200000000000000530000000000000054000000000000005504
*000000000000005300000000000000540000000000000052000000000000005500000000000000
*00000000000000000d000108000000700000006f00000072000000740000006100000062000000
*6c00000065010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c0110000000650000006b0000006d000000650000007400
*00007400000040000000670000006d00000061000000690000006c0000002e000000630000006f
*0000006d0400000000000000560301020200000041000000200104010000000000000000280000
*000000000000000000000000000601021a00000020000000770000006800000069000000630000
*006800000020000000730000007500000070000000700000006f00000072000000740000007300
*000020000000650000006600000066000000690000006300000069000000650000006e00000074
*0000002001040100000000000000002a00000000000000000000000000000006022a0000002000
*00006f0000007000000065000000720000006100000074000000690000006f0000006e00000073
*000000200000006f0000007600000065000000720000002000000072000000750000006e000000
*2d0000006c000000650000006e00000067000000740000006800000020000000650000006e0000
*00630000006f000000640000006500000064000000200000006400000061000000740000006100
*00002e0000000a0000000000000059030223000000410000002000000073000000690000006e00
*0000670000006c000000650000002000000072000000750000006e000000200000007700000069
*000000740000006800000020000000610000002000000073000000740000007200000069000000
*6300000074000000200000006c000000650000006e0000006700000074000000680000002e0000
*000a000000000000005c03023c0000006e00000061000000690000007600000065000000200000
*006c00000065000000660000007400000020000000740000006f00000020000000720000006900
*000067000000680000007400000020000000650000006e000000630000006f0000006400000065
*000000720000002c00000020000000770000006800000069000000630000006800000020000000
*63000000610000006e0000002000000068000000610000006e000000640000006c000000650000
*0020000000690000006e00000066000000690000006e0000006900000074000000650000002000
*0000640000006100000074000000610000000a000000000000005d03022a000000510000007500
*000069000000630000006b000000430000006800000065000000630000006b0000002000000070
*000000720000006f00000070000000650000007200000074000000790000003a00000020000000
*6400000065000000630000006f0000006400000065000000200000002e00000020000000650000
*006e000000630000006f0000006400000065000000200000003d00000020000000690000006400
*00000a4200000000000001020000000000000103000000000000010400000000000000ff000000
*000000010500000000000001060000000000000107000000000000010800000000000001090000
*00000000010a000000000000010b000000000000010c000000000000010d000000000000010e00
*0000000000010f0000000000000110000000000000011100000000000001120000000000000113
*000000000000011400000000000001150000000000000116000000000000011700000000000001
*180000000000000119000000000000011a000000000000011b000000000000011c000000000000
*000000000000000000010000000000000002000000000000000300000000000000040000000000
*000005000000000000000600000000000000070000000000000008000000000000000900000000
*0000000a000000000000001f000000000000002000000000000000210000000000000022000000
*000000002300000000000000240000000000000025000000000000002600000000000000270000
*0000000000280000000000000029000000000000002a000000000000002b000000000000002c00
*0000000000002d000000000000002e000000000000002f00000000000000560000000000000057
*00000000000000580000000000000059000000000000005a000000000000005b00000000000000
*5c000000000000005d000000000000005e000000000000005f0a00000000000000560000000000
*00005700000000000000580000000000000059000000000000005a000000000000005b00000000
*0000005e000000000000005c000000000000005f000000000000005d0000000000000000000000
*000000000e000108000000700000006f000000720000007400000061000000620000006c000000
*65010c0000006500000078000000700000006500000072000000690000006d000000650000006e
*00000074000000610000006c0110000000650000006b0000006d00000065000000740000007400
*000040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d
*0400000000000000600301020200000041000000200104010000000000000000ff000000000000
*002f000000000000003001020b000000200000006900000073000000200000006a000000750000
*007300000074000000200000006100000020010401000000000000000124000000000000002f00
*00000000000039022e0000002000000077000000690000007400000068000000200000006f0000
*006e00000065000000200000006f000000620000006a0000006500000063000000740000002e00
*000020000000540000006800000069000000730000002000000066000000610000006b00000065
*000000730000002000000074000000680000006100000074000000200000007700000069000000
*7400000068000000200000006100000020000000470000004100000044000000540000000a0000
*00000000006103010204000000540000006800000065000000200104010000000000000000ff00
*0000000000002f0000000000000030010237000000200000006f00000066000000200000007400
*0000680000006500000020000000650000006e000000640000006f0000006d0000006f00000072
*000000700000006800000069000000730000006d00000073000000200000006f00000076000000
*650000007200000020000000730000006f0000006d00000065000000200000006f000000620000
*006a00000065000000630000007400000020000000690000006e00000020000000610000006e00
*000020000000610000007200000062000000690000007400000072000000610000007200000079
*00000020010401000000000000000124000000000000002f000000000000003902020000002e00
*00000a00000000000000640301020c000000450000007800000074000000720000006100000063
*0000007400000020000000740000006800000065000000200104010000000000000000ff000000
*000000002f000000000000003001021e0000002000000066000000720000006f0000006d000000
*200000006900000074000000730000002000000072000000650000007000000072000000650000
*0073000000650000006e000000740000006100000074000000690000006f0000006e0000002000
*00006100000073000000200000006100000020010401000000000000000124000000000000002f
*000000000000003902010000000a000000000000006503010215000000430000006f0000006e00
*00007600000065000000720000007400000020000000610000002000000076000000610000006c
*000000750000006500000020000000690000006e00000020000000610000002001040100000000
*00000000ff000000000000002f000000000000003001021400000020000000690000006e000000
*740000006f00000020000000610000006e000000200000006100000072000000720000006f0000
*007700000020000000690000006e00000020000000610000002001040100000000000000012400
*0000000000002f000000000000003902020000002e0000000a3200000000000001020000000000
*000103000000000000010400000000000000ff0000000000000105000000000000010600000000
*0000010700000000000001080000000000000109000000000000010a000000000000010b000000
*000000010c000000000000010d000000000000010e000000000000010f00000000000001100000
*000000000111000000000000011200000000000001130000000000000114000000000000011500
*00000000000116000000000000011700000000000001180000000000000119000000000000011a
*000000000000011b000000000000011c0000000000000125000000000000012600000000000001
*270000000000000128000000000000012400000000000000000000000000000001000000000000
*000200000000000000030000000000000004000000000000000500000000000000060000000000
*00000700000000000000080000000000000009000000000000000a000000000000006000000000
*000000610000000000000062000000000000006300000000000000640000000000000065060000
*000000000061000000000000006200000000000000630000000000000060000000000000006400
*000000000000650000000000000000000000000000000f000108000000700000006f0000007200
*00007400000061000000620000006c00000065010c000000650000007800000070000000650000
*0072000000690000006d000000650000006e00000074000000610000006c011000000065000000
*6b0000006d00000065000000740000007400000040000000670000006d00000061000000690000
*006c0000002e000000630000006f0000006d001e00000000000001020000000000000103000000
*000000010400000000000000ff0000000000000105000000000000010600000000000001070000
*0000000001080000000000000109000000000000010a000000000000010b000000000000010c00
*0000000000010d000000000000010e000000000000010f00000000000001100000000000000111
*000000000000011200000000000001130000000000000114000000000000011500000000000001
*16000000000000011700000000000001180000000000000119000000000000011a000000000000
*011b000000000000011c0000000000000066000000000000006702000000000000006600000000
*0000006700000000000000000000000000000010000108000000700000006f0000007200000074
*00000061000000620000006c00000065010c000000650000007800000070000000650000007200
*0000690000006d000000650000006e00000074000000610000006c0110000000650000006b0000
*006d00000065000000740000007400000040000000670000006d00000061000000690000006c00
*00002e000000630000006f0000006d001f00000000000001020000000000000103000000000000
*010400000000000000ff0000000000000105000000000000010600000000000001070000000000
*0001080000000000000109000000000000010a000000000000010b000000000000010c00000000
*0000010d000000000000010e000000000000010f00000000000001100000000000000111000000
*000000011200000000000001130000000000000114000000000000011500000000000001160000
*00000000011700000000000001180000000000000119000000000000011a000000000000011b00
*0000000000011c0000000000000066000000000000006700000000000000680100000000000000
*6800000000000000000000000000000011000122000000700000006f0000007200000074000000
*61000000620000006c000000650000002000000028000000620000007500000074000000200000
*00690000006e0000007300000074000000610000006e0000006300000065000000730000002000
*0000750000007300000065000000200000004d0000005000000054000000430000007300000029
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c0110000000650000006b0000006d0000006500000074000000740000
*0040000000670000006d00000061000000690000006c0000002e000000630000006f0000006d02
*00000000000000690301020a000000430000006f0000006e000000760000006500000072000000
*740000002000000061000000200104010000000000000000ff000000000000002f000000000000
*003001020800000020000000690000006e000000740000006f0000002000000061000000200104
*0100000000000000006f0000000000000000000000000000001101020c0000002e000000200000
*004d0000006e000000650000006d0000006f0000006e00000069000000630000003a0000002001
*07021b0000004500000078000000700000002000000061000000200000002a0000002000000045
*00000078000000700000002000000062000000200000003d000000200000004500000078000000
*70000000200000002800000061000000200000002b00000020000000620000002902010000000a
*000000000000006c0301020a000000430000006f0000006e000000760000006500000072000000
*7400000020000000610000002001040100000000000000006f0000000000000000000000000000
*001101020800000020000000690000006e000000740000006f0000002000000061000000200104
*010000000000000000ff000000000000002f000000000000003001020c0000002e000000200000
*004d0000006e000000650000006d0000006f0000006e00000069000000630000003a0000002001
*07021b0000004c0000006f000000670000002000000061000000200000002b000000200000004c
*0000006f000000670000002000000062000000200000003d000000200000004c0000006f000000
*67000000200000002800000061000000200000002a00000020000000620000002902010000000a
*2700000000000001020000000000000103000000000000010400000000000000ff000000000000
*010500000000000001060000000000000107000000000000010800000000000001090000000000
*00010a000000000000010b000000000000010c000000000000010d000000000000010e00000000
*0000010f0000000000000110000000000000011100000000000001120000000000000113000000
*000000011400000000000001150000000000000116000000000000011700000000000001180000
*000000000119000000000000011a000000000000011b000000000000011c000000000000006600
*000000000000670000000000000069000000000000006a000000000000006b000000000000006c
*000000000000006d000000000000006e000000000000006f000000000000007000000000000000
*7109000000000000006f00000000000000700000000000000071000000000000006c0000000000
*00006d000000000000006e0000000000000069000000000000006a000000000000006b00000000
*000000000000000000000012000108000000700000006f00000072000000740000006100000062
*0000006c00000065010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d0029000000000000010200000000000001030000000000000104000000000000
*00ff00000000000001050000000000000106000000000000010700000000000001080000000000
*000109000000000000010a000000000000010b000000000000010c000000000000010d00000000
*0000010e000000000000010f000000000000011000000000000001110000000000000112000000
*000000011300000000000001140000000000000115000000000000011600000000000001170000
*0000000001180000000000000119000000000000011a000000000000011b000000000000011c00
*00000000000066000000000000006700000000000000680000000000000069000000000000006a
*000000000000006b000000000000006c000000000000006d000000000000006e00000000000000
*6f0000000000000070000000000000007100000000000000720100000000000000720000000000
*000000000000000000001300011e000000700000006f0000007200000074000000610000006200
*00006c000000650000002000000028000000690000006e0000007300000074000000610000006e
*00000063000000650000007300000020000000750000007300000065000000200000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c0110000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d0300000000000000730b021f0000002800000061000000
*200000002b000000200000006200000029000000200000002a0000002000000063000000200000
*003d000000200000002800000061000000200000002a0000002000000063000000290000002000
*00002b000000200000002800000062000000200000002a00000020000000630000002900000000
*000000740b021f00000061000000200000002a000000200000002800000062000000200000002b
*000000200000006300000029000000200000003d00000020000000280000006100000020000000
*2a000000200000006200000029000000200000002b000000200000002800000061000000200000
*002a000000200000006300000029000000000000007503010702010000003001020d0000002000
*0000610000006e0000006e0000006900000068000000690000006c000000610000007400000065
*000000730000002001040100000000000000007100000000000000000000000000000011020100
*00000a2a00000000000001020000000000000103000000000000010400000000000000ff000000
*000000010500000000000001060000000000000107000000000000010800000000000001090000
*00000000010a000000000000010b000000000000010c000000000000010d000000000000010e00
*0000000000010f0000000000000110000000000000011100000000000001120000000000000113
*000000000000011400000000000001150000000000000116000000000000011700000000000001
*180000000000000119000000000000011a000000000000011b000000000000011c000000000000
*006600000000000000670000000000000069000000000000006a000000000000006b0000000000
*00006c000000000000006d000000000000006e000000000000006f000000000000007000000000
*000000710000000000000073000000000000007400000000000000750300000000000000750000
*0000000000740000000000000073000000000000000000000000000000140001140000006e0000
*006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c00
*00006500000020000000280000004d0000005000000054000000430000007300000029010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c0110000000650000006b0000006d000000650000007400000074000000400000
*00670000006d00000061000000690000006c0000002e000000630000006f0000006d0100000000
*000000760301020200000041000000200104010000000000000000760000000000000000000000
*000000001401021800000020000000690000007300000020000000610000006e00000020000000
*690000006e0000007300000074000000610000006e0000006300000065000000200000006f0000
*006600000020000000620000006f00000074000000680000002001040100000000000000006f00
*00000000000000000000000000001101020500000020000000610000006e000000640000002001
*04010000000000000000ff000000000000002f0000000000000030010208000000200000007700
*000068000000650000007200000065000000200000000a01020300000020000000200000002001
*040100000000000000007100000000000000000000000000000011010212000000200000006400
*000069000000730000007400000072000000690000006200000075000000740000006500000073
*000000200000006f00000076000000650000007200000020010401000000000000000066000000
*0000000000000000000000000f02020000002e0000000a2b000000000000010200000000000001
*03000000000000010400000000000000ff00000000000001050000000000000106000000000000
*010700000000000001080000000000000109000000000000010a000000000000010b0000000000
*00010c000000000000010d000000000000010e000000000000010f000000000000011000000000
*000001110000000000000112000000000000011300000000000001140000000000000115000000
*0000000116000000000000011700000000000001180000000000000119000000000000011a0000
*00000000011b000000000000011c00000000000000660000000000000067000000000000006900
*0000000000006a000000000000006b000000000000006c000000000000006d000000000000006e
*000000000000006f00000000000000700000000000000071000000000000007300000000000000
*740000000000000075000000000000007601000000000000007600000000000000000000000000
*000015000000000400000000000000770301020400000054000000680000006500000020010401
*0000000000000000ff000000000000002f00000000000000300102010000002001070102010000
*0028010401000000000000000129000000000000002f000000000000003a0102010000002c0104
*0100000000000000012a000000000000002f000000000000003102010000002901020600000020
*0000006f0000007600000065000000720000002001070104010000000000000001000000000000
*00002f000000000000003102020000002000000061010207000000200000007700000068000000
*6500000072000000650000002001040100000000000000012a000000000000002f000000000000
*003102140000002000000069000000730000002000000074000000680000006500000020000000
*740000006f0000007000000020000000650000006c000000650000006d000000650000006e0000
*00740000000a000000000000007a03010204000000540000006800000065000000200104010000
*000000000000ff000000000000002f000000000000003001020100000020010701020100000028
*01040100000000000000012b000000000000002f000000000000003a0102010000002c01040100
*000000000000012a000000000000002f0000000000000031020100000029010206000000200000
*006f00000076000000650000007200000020010701040100000000000000010000000000000000
*2f0000000000000031020200000020000000610102070000002000000077000000680000006500
*000072000000650000002001040100000000000000012a000000000000002f0000000000000031
*021700000020000000690000007300000020000000740000006800000065000000200000006200
*00006f00000074000000740000006f0000006d00000020000000650000006c000000650000006d
*000000650000006e000000740000000a000000000000007d030102040000005400000068000000
*65000000200104010000000000000000ff000000000000002f000000000000003001020a000000
*20000000670000006900000076000000650000006e000000200000006200000079000000200107
*01020100000028010401000000000000000129000000000000002f000000000000003a01020100
*00002c01040100000000000000012c000000000000002f000000000000003b0201000000290201
*0000000a0000000000000080030102040000005400000068000000650000002001040100000000
*00000000ff000000000000002f0000000000000030010201000000200107010201000000280104
*0100000000000000012b000000000000002f000000000000003a0102010000002c010401000000
*00000000012d000000000000002f000000000000003b02010000002902010000000a1300000000
*00000102000000000000010400000000000000ff00000000000000030000000000000004000000
*000000007700000000000000780000000000000079000000000000007a000000000000007b0000
*00000000007c000000000000007d000000000000007e000000000000007f000000000000008000
*000000000000810000000000000082000000000000008300000000000000840e00000000000000
*8000000000000000810000000000000082000000000000007d000000000000007e000000000000
*007f000000000000007a000000000000007b000000000000007c00000000000000830000000000
*000077000000000000007800000000000000790000000000000084000000000000000000000000
*0000001600000000002d0000000000000102000000000000010300000000000001040000000000
*0000ff000000000000010500000000000001060000000000000107000000000000010800000000
*00000109000000000000010a000000000000010b000000000000010c000000000000010d000000
*000000010e000000000000010f0000000000000110000000000000011100000000000001120000
*000000000113000000000000011400000000000001150000000000000116000000000000011700
*000000000001180000000000000119000000000000011a000000000000011b000000000000011c
*000000000000006600000000000000670000000000000069000000000000006a00000000000000
*6b000000000000006c000000000000006d000000000000006e000000000000006f000000000000
*007000000000000000710000000000000073000000000000007400000000000000750000000000
*000076000000000000008500000000000000860200000000000000850000000000000086000000
*000000000000000000000000170000010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d02000000000000008703010202000000410000002001040100
*00000000000000760000000000000000000000000000001401020c000000200000007700000068
*000000690000006300000068000000200000006100000064000000640000007300000020010401
*00000000000000012d000000000000002f000000000000003b0102050000002000000061000000
*6e000000640000002001040100000000000000012c000000000000002f000000000000003b0219
*00000020000000740000006f000000200000006100000020000000700000007200000065000000
*2d0000006500000078000000690000007300000074000000690000006e00000067000000200000
*00740000007900000070000000650000002e0000000a000000000000008b030102020000004100
*0000200104010000000000000000760000000000000000000000000000001401020d0000002000
*00007500000073000000690000006e000000670000002000000061000000200000007400000079
*000000700000006501020100000027021d00000073000000200000006200000075000000690000
*006c000000740000002d000000690000006e00000020000000420000006f000000750000006e00
*000064000000650000006400000020000000690000006e0000007300000074000000610000006e
*00000063000000650000002e0000000a3200000000000001020000000000000103000000000000
*010400000000000000ff0000000000000105000000000000010600000000000001070000000000
*0001080000000000000109000000000000010a000000000000010b000000000000010c00000000
*0000010d000000000000010e000000000000010f00000000000001100000000000000111000000
*000000011200000000000001130000000000000114000000000000011500000000000001160000
*00000000011700000000000001180000000000000119000000000000011a000000000000011b00
*0000000000011c000000000000006600000000000000670000000000000069000000000000006a
*000000000000006b000000000000006c000000000000006d000000000000006e00000000000000
*6f0000000000000070000000000000007100000000000000730000000000000074000000000000
*007500000000000000760000000000000087000000000000008800000000000000890000000000
*00008a000000000000008b000000000000008c000000000000008d07000000000000008b000000
*000000008c000000000000008d0000000000000087000000000000008a00000000000000890000
*000000000088000000000000000000000000000000180000000001000000000000008e01030102
*040000005400000068000000650000002001040100000000000000007600000000000000000000
*000000000014010201000000200107010201000000280104010000000000000001290000000000
*00002f000000000000003a0102010000002c01040100000000000000012e000000000000002f00
*0000000000003b020100000029010206000000200000006f000000760000006500000072000000
*2001070102010000006101020f00000020000000650000007800000074000000650000006e0000
*006400000065000000640000002000000077000000690000007400000068000000200401000000
*000000000091000000000000000000000000000000180102020000002e0000000a010208000000
*2000000020000000200000005700000068000000650000006e0000002001070201000000610102
*48000000200000006800000061000000730000002000000061000000200000004e000000750000
*006d00000020000000690000006e0000007300000074000000610000006e000000630000006500
*0000200000007700000069000000740000006800000020000000610000006e0000002000000061
*00000064000000640000006900000074000000690000006f0000006e0000002000000074000000
*680000006100000074000000200000007200000065000000730000007000000065000000630000
*007400000073000000200000006f000000720000006400000065000000720000002c0000002000
*00007400000068000000650000006e000000200000007400000068000000690000007300000020
*0000006900000073000000200000000a0102530000002000000020000000200000007400000072
*000000610000006e00000073000000660000006f000000720000006d0000006500000064000000
*20000000690000006e000000740000006f00000020000000610000002000000074000000720000
*006f000000700000006900000063000000610000006c0000002000000073000000650000006d00
*00006900000072000000690000006e000000670000002e00000020000000490000007400000020
*000000690000007300000020000000610000007300000073000000750000006d00000065000000
*640000002000000074000000680000006100000074000000200000003000000020000000690000
*007300000020000000740000006800000065000000200000006c00000065000000610000007300
*00007400000020000000650000006c000000650000006d000000650000006e000000740000000a
*02090000002000000020000000200000006f0000006600000020000000610000002e0000000a03
*010c41000000680000007400000074000000700000003a0000002f0000002f0000006800000061
*0000006c0000002e00000061000000720000006300000068000000690000007600000065000000
*730000002d0000006f000000750000007600000065000000720000007400000065000000730000
*002e00000066000000720000002f000000640000006f00000063000000730000002f0000003000
*0000300000002f00000031000000310000002f00000033000000370000002f0000003700000039
*0000002f0000005000000044000000460000002f00000054000000720000006f00000070000000
*6900000063000000610000006c0000002e00000070000000640000006602010000000a31000000
*00000001020000000000000103000000000000010400000000000000ff00000000000001050000
*000000000106000000000000010700000000000001080000000000000109000000000000010a00
*0000000000010b000000000000010c000000000000010d000000000000010e000000000000010f
*000000000000011000000000000001110000000000000112000000000000011300000000000001
*140000000000000115000000000000011600000000000001170000000000000118000000000000
*0119000000000000011a000000000000011b000000000000011c00000000000000030000000000
*000004000000000000006600000000000000670000000000000069000000000000006a00000000
*0000006b000000000000006c000000000000006d000000000000006e000000000000006f000000
*000000007000000000000000710000000000000073000000000000007400000000000000750000
*000000000076000000000000008e000000000000008f0000000000000090000000000000009104
*0000000000000091000000000000008e000000000000008f000000000000009000000000000000
*000000000000000019000000000032000000000000010200000000000001030000000000000104
*00000000000000ff00000000000001050000000000000106000000000000010700000000000001
*080000000000000109000000000000010a000000000000010b000000000000010c000000000000
*010d000000000000010e000000000000010f000000000000011000000000000001110000000000
*000112000000000000011300000000000001140000000000000115000000000000011600000000
*0000011700000000000001180000000000000119000000000000011a000000000000011b000000
*000000011c000000000000006600000000000000670000000000000069000000000000006a0000
*00000000006b000000000000006c000000000000006d000000000000006e000000000000006f00
*000000000000700000000000000071000000000000007300000000000000740000000000000075
*000000000000009200000000000000930000000000000094000000000000009500000000000000
*960000000000000097000000000000009800000000000000990800000000000000920000000000
*000093000000000000009400000000000000950000000000000096000000000000009700000000
*0000009800000000000000990000000000000000000000000000003c000108000000700000006f
*000000720000007400000061000000620000006c00000065010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01100000
*00650000006b0000006d00000065000000740000007400000040000000670000006d0000006100
*0000690000006c0000002e000000630000006f0000006d002c0000000000000102000000000000
*0103000000000000010400000000000000ff000000000000010500000000000001060000000000
*00010700000000000001080000000000000109000000000000010a000000000000010b00000000
*0000010c000000000000010d000000000000010e000000000000010f0000000000000110000000
*000000011100000000000001120000000000000113000000000000011400000000000001150000
*000000000116000000000000011700000000000001180000000000000119000000000000011a00
*0000000000011b000000000000011c000000000000006600000000000000670000000000000068
*0000000000000069000000000000006a000000000000006b000000000000006c00000000000000
*6d000000000000006e000000000000006f00000000000000700000000000000071000000000000
*007200000000000000730000000000000074000000000000007500000000000000000000000000
*0000001a000108000000700000006f000000720000007400000061000000620000006c00000065
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c011f0000004500000064000000770000006100000072000000640000
*00200000004b0000006d000000650000007400000074000000200000003c000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d0000003e01000000000000009a0301021d0000004d0000
*00690000006e000000690000006d000000610000006c00000020000000630000006f0000006d00
*0000700000006c0000006500000074000000650000002000000064000000650000006600000069
*0000006e0000006900000074000000690000006f0000006e0000003a0000002001040100000000
*000000009b0000000000000000000000000000001a010204000000200000006f00000072000000
*2001040100000000000000009c0000000000000000000000000000001a02010000000a22000000
*00000001020000000000000103000000000000010400000000000000ff00000000000001050000
*000000000106000000000000010700000000000001080000000000000109000000000000010a00
*0000000000010b000000000000010c000000000000010d000000000000010e000000000000010f
*000000000000011000000000000001110000000000000112000000000000011300000000000001
*140000000000000115000000000000011600000000000001170000000000000118000000000000
*0119000000000000011a000000000000011b000000000000011c00000000000000660000000000
*000067000000000000009a000000000000009b000000000000009c000000000000009d04000000
*000000009a000000000000009b000000000000009d000000000000009c00000000000000000000
*00000000001b000108000000700000006f000000720000007400000061000000620000006c0000
*0065010c0000006500000078000000700000006500000072000000690000006d00000065000000
*6e00000074000000610000006c0110000000650000006b0000006d000000650000007400000074
*00000040000000670000006d00000061000000690000006c0000002e000000630000006f000000
*6d002400000000000001020000000000000103000000000000010400000000000000ff00000000
*000001050000000000000106000000000000010700000000000001080000000000000109000000
*000000010a000000000000010b000000000000010c000000000000010d000000000000010e0000
*00000000010f000000000000011000000000000001110000000000000112000000000000011300
*000000000001140000000000000115000000000000011600000000000001170000000000000118
*0000000000000119000000000000011a000000000000011b000000000000011c00000000000000
*660000000000000067000000000000009a000000000000009b000000000000009c000000000000
*009d000000000000009e000000000000009f02000000000000009e000000000000009f00000000
*00000000000000000000001c000108000000700000006f00000072000000740000006100000062
*0000006c00000065010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c0110000000650000006b0000006d000000650000
*00740000007400000040000000670000006d00000061000000690000006c0000002e0000006300
*00006f0000006d0300000000000000a00302220000004d000000690000006e000000690000006d
*000000610000006c00000020000000640000006500000066000000690000006e00000069000000
*74000000690000006f0000006e000000200000006f000000760000006500000072000000200000
*006f00000072000000200000006700000072000000650000006300000069000000700000000a00
*000000000000a10b01020200000078000000200102010000002f02020000002000000079000000
*00000000a20b0102020000007800000020010201000000200201000000792f0000000000000102
*0000000000000103000000000000010400000000000000ff000000000000010500000000000001
*06000000000000010700000000000001080000000000000109000000000000010a000000000000
*010b000000000000010c000000000000010d000000000000010e000000000000010f0000000000
*000110000000000000011100000000000001120000000000000113000000000000011400000000
*000001150000000000000116000000000000011700000000000001180000000000000119000000
*000000011a000000000000011b000000000000011c000000000000006600000000000000670000
*000000000069000000000000006a000000000000006b000000000000006c000000000000006d00
*0000000000006e000000000000006f00000000000000700000000000000071000000000000009a
*000000000000009b000000000000009c000000000000009d00000000000000a000000000000000
*a100000000000000a200000000000000a30400000000000000a000000000000000a10000000000
*0000a200000000000000a30000000000000000000000000000001d000108000000700000006f00
*0000720000007400000061000000620000006c00000065010c0000006500000078000000700000
*006500000072000000690000006d000000650000006e00000074000000610000006c0110000000
*650000006b0000006d00000065000000740000007400000040000000670000006d000000610000
*00690000006c0000002e000000630000006f0000006d0026000000000000010200000000000001
*03000000000000010400000000000000ff00000000000001050000000000000106000000000000
*010700000000000001080000000000000109000000000000010a000000000000010b0000000000
*00010c000000000000010d000000000000010e000000000000010f000000000000011000000000
*000001110000000000000112000000000000011300000000000001140000000000000115000000
*0000000116000000000000011700000000000001180000000000000119000000000000011a0000
*00000000011b000000000000011c00000000000000660000000000000067000000000000006800
*0000000000009a000000000000009b000000000000009c000000000000009d00000000000000a4
*00000000000000a500000000000000a60300000000000000a400000000000000a5000000000000
*00a60000000000000000000000000000001e000108000000700000006f00000072000000740000
*0061000000620000006c00000065010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c0110000000650000006b0000006d
*00000065000000740000007400000040000000670000006d00000061000000690000006c000000
*2e000000630000006f0000006d0037000000000000010200000000000001030000000000000104
*00000000000000ff00000000000001050000000000000106000000000000010700000000000001
*080000000000000109000000000000010a000000000000010b000000000000010c000000000000
*010d000000000000010e000000000000010f000000000000011000000000000001110000000000
*000112000000000000011300000000000001140000000000000115000000000000011600000000
*0000011700000000000001180000000000000119000000000000011a000000000000011b000000
*000000011c00000000000000660000000000000067000000000000006800000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000006e00
*0000000000006f000000000000007000000000000000710000000000000072000000000000009a
*000000000000009b000000000000009c000000000000009d00000000000000a000000000000000
*a100000000000000a200000000000000a300000000000000a400000000000000a5000000000000
*00a600000000000000a700000000000000a800000000000000a90300000000000000a700000000
*000000a800000000000000a90000000000000000000000000000001f00011e000000700000006f
*000000720000007400000061000000620000006c00000065000000200000002800000069000000
*6e0000007300000074000000610000006e00000063000000650000007300000020000000750000
*007300000065000000200000004d0000005000000054000000430000007300000029010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c0110000000650000006b0000006d00000065000000740000007400000040000000
*670000006d00000061000000690000006c0000002e000000630000006f0000006d003000000000
*000001020000000000000103000000000000010400000000000000ff0000000000000105000000
*0000000106000000000000010700000000000001080000000000000109000000000000010a0000
*00000000010b000000000000010c000000000000010d000000000000010e000000000000010f00
*000000000001100000000000000111000000000000011200000000000001130000000000000114
*000000000000011500000000000001160000000000000117000000000000011800000000000001
*19000000000000011a000000000000011b000000000000011c0000000000000066000000000000
*00670000000000000069000000000000006a000000000000006b000000000000006c0000000000
*00006d000000000000006e000000000000006f0000000000000070000000000000007100000000
*00000073000000000000007400000000000000750000000000000076000000000000009a000000
*000000009b000000000000009c000000000000009d00000000000000aa0100000000000000aa00
*0000000000000000000000000000200001140000006e0000006f0000006e0000002d0000007000
*00006f000000720000007400000061000000620000006c0000006500000020000000280000004d
*0000005000000054000000430000007300000029010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c0110000000650000
*006b0000006d00000065000000740000007400000040000000670000006d000000610000006900
*00006c0000002e000000630000006f0000006d0033000000000000010200000000000001030000
*00000000010400000000000000ff00000000000001050000000000000106000000000000010700
*000000000001080000000000000109000000000000010a000000000000010b000000000000010c
*000000000000010d000000000000010e000000000000010f000000000000011000000000000001
*110000000000000112000000000000011300000000000001140000000000000115000000000000
*0116000000000000011700000000000001180000000000000119000000000000011a0000000000
*00011b000000000000011c00000000000000660000000000000067000000000000006900000000
*0000006a000000000000006b000000000000006c000000000000006d000000000000006e000000
*000000006f00000000000000700000000000000071000000000000007300000000000000740000
*0000000000750000000000000076000000000000009a000000000000009b000000000000009c00
*0000000000009d00000000000000aa00000000000000ab00000000000000ac00000000000000ad
*0300000000000000ab00000000000000ac00000000000000ad0000000000000000000000000000
*00210001140000006e0000006f0000006e0000002d000000700000006f00000072000000740000
*0061000000620000006c0000006500000020000000280000004d00000050000000540000004300
*00007300000029010c0000006500000078000000700000006500000072000000690000006d0000
*00650000006e00000074000000610000006c0110000000650000006b0000006d00000065000000
*740000007400000040000000670000006d00000061000000690000006c0000002e000000630000
*006f0000006d003300000000000001020000000000000103000000000000010400000000000000
*ff0000000000000105000000000000010600000000000001070000000000000108000000000000
*0109000000000000010a000000000000010b000000000000010c000000000000010d0000000000
*00010e000000000000010f00000000000001100000000000000111000000000000011200000000
*000001130000000000000114000000000000011500000000000001160000000000000117000000
*00000001180000000000000119000000000000011a000000000000011b000000000000011c0000
*00000000006600000000000000670000000000000069000000000000006a000000000000006b00
*0000000000006c000000000000006d000000000000006e000000000000006f0000000000000070
*000000000000007100000000000000730000000000000074000000000000007500000000000000
*76000000000000009a000000000000009b000000000000009c000000000000009d000000000000
*00aa00000000000000ae00000000000000af00000000000000b00300000000000000ae00000000
*000000af00000000000000b00000000000000000000000000000002200013f0000006e0000006f
*0000006e0000002d000000700000006f000000720000007400000061000000620000006c000000
*6500000020000000280000004d000000500000005400000043000000730000002c000000200000
*0073000000630000006f0000007000000065000000640000002000000074000000790000007000
*000065000000730000002c00000020000000650000006d00000070000000740000007900000020
*0000006400000065000000630000006c000000730000002c000000200000007400000079000000
*7000000065000000200000006f00000070000000650000007200000061000000740000006f0000
*00720000007300000029010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c011f00000045000000640000007700000061
*0000007200000064000000200000004b0000006d00000065000000740000007400000020000000
*3c000000650000006b0000006d00000065000000740000007400000040000000670000006d0000
*0061000000690000006c0000002e000000630000006f0000006d0000003e003500000000000001
*020000000000000103000000000000010400000000000000ff0000000000000105000000000000
*0106000000000000010700000000000001080000000000000109000000000000010a0000000000
*00010b000000000000010c000000000000010d000000000000010e000000000000010f00000000
*000001100000000000000111000000000000011200000000000001130000000000000114000000
*000000011500000000000001160000000000000117000000000000011800000000000001190000
*00000000011a000000000000011b000000000000011c0000000000000066000000000000006700
*00000000000069000000000000006a000000000000006b000000000000006c000000000000006d
*000000000000006e000000000000006f0000000000000070000000000000007100000000000000
*73000000000000007400000000000000750000000000000076000000000000009a000000000000
*009b000000000000009c000000000000009d00000000000000aa00000000000000b10000000000
*0000b200000000000000b300000000000000b400000000000000b50500000000000000b3000000
*00000000b400000000000000b100000000000000b200000000000000b500000000000000000000
*0000000000230001140000006e0000006f0000006e0000002d000000700000006f000000720000
*007400000061000000620000006c0000006500000020000000280000004d000000500000005400
*0000430000007300000029010c0000006500000078000000700000006500000072000000690000
*006d000000650000006e00000074000000610000006c0110000000650000006b0000006d000000
*65000000740000007400000040000000670000006d00000061000000690000006c0000002e0000
*00630000006f0000006d0300000000000000b60b021e0000002000000028000000780000002000
*00002a0000002e000000200000006d00000029000000200000002e0000002a0000002000000079
*000000200000003d0000002000000078000000200000002a0000002e0000002000000028000000
*6d000000200000002e0000002a00000020000000790000002900000000000000b70b021c000000
*20000000280000006d000000200000002e0000002a000000200000007800000029000000200000
*002a0000002000000079000000200000003d000000200000006d000000200000002e0000002a00
*0000200000002800000078000000200000002a00000020000000790000002900000000000000b9
*0b021c000000200000002800000078000000200000002a00000020000000790000002900000020
*0000002a0000002e000000200000006d000000200000003d000000200000007800000020000000
*2a000000200000002800000079000000200000002a0000002e000000200000006d000000293500
*000000000001020000000000000103000000000000010400000000000000ff0000000000000105
*000000000000010600000000000001070000000000000108000000000000010900000000000001
*0a000000000000010b000000000000010c000000000000010d000000000000010e000000000000
*010f00000000000001100000000000000111000000000000011200000000000001130000000000
*000114000000000000011500000000000001160000000000000117000000000000011800000000
*00000119000000000000011a000000000000011b000000000000011c0000000000000066000000
*00000000670000000000000069000000000000006a000000000000006b000000000000006c0000
*00000000006d000000000000006e000000000000006f0000000000000070000000000000007100
*00000000000073000000000000007400000000000000750000000000000076000000000000009a
*000000000000009b000000000000009c000000000000009d00000000000000aa00000000000000
*b600000000000000b700000000000000b800000000000000b900000000000000ba050000000000
*0000b900000000000000ba00000000000000b700000000000000b800000000000000b600000000
*0000000000000000000000240001140000006e0000006f0000006e0000002d000000700000006f
*000000720000007400000061000000620000006c0000006500000020000000280000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c0110000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d0400000000000000bb0301020300000069000000660000
*0020010702010000006d0102060000002000000069000000730000002000000061000000200104
*010000000000000000b600000000000000000000000000000023010206000000200000006f0000
*0076000000650000007200000020010702010000007201020500000020000000610000006e0000
*006400000020010702010000006601020600000020000000690000007300000020000000610000
*002001040100000000000000012f000000000000002f000000000000003d010206000000200000
*007400000068000000650000006e00000020010701020200000066000000200104020000000000
*000000bc000000000000000000000000000000240000000000000000bb00000000000000000000
*0000000000240202000000200000006d0102060000002000000069000000730000002000000061
*000000200104010000000000000000b60000000000000000000000000000002301020600000020
*0000006f0000007600000065000000720000002001070201000000720209000000200000006100
*0000730000002000000077000000650000006c0000006c0000000a00000000000000be03010202
*00000041000000200104020000000000000000bf00000000000000000000000000000024000000
*0000000000be0000000000000000000000000000002401020b0000002000000074000000750000
*00720000006e0000007300000020000000610000006e0000007900000020010401000000000000
*000130000000000000002f000000000000003d01021100000020000000690000006e0000007300
*000074000000610000006e000000630000006500000020000000690000006e000000740000006f
*0000002000000061000000200104010000000000000000ff000000000000002f00000000000000
*300102020000002e0000000a010216000000200000002000000020000000490000007400000020
*000000610000006c000000730000006f0000002000000070000000720000006f00000076000000
*6900000064000000650000007300000020000000610000002001040100000000000000006f0000
*000000000000000000000000001101021100000020000000690000006e00000073000000740000
*00610000006e000000630000006500000020000000660000006f00000072000000200000006100
*00006e0000002001040100000000000000012f000000000000002f000000000000003d01021a00
*00002000000066000000750000006e00000063000000740000006f000000720000002000000077
*000000720000006100000070000000700000006500000064000000200000006100000072000000
*6f000000750000006e000000640000002000000061000000200104010000000000000000ff0000
*00000000002f00000000000000300102010000000a010218000000200000002000000020000000
*610000006e00000064000000200000006100000073000000730000006500000072000000740000
*0073000000200000007400000068000000610000007400000020000000610000006e0000007900
*000020010401000000000000000130000000000000002f000000000000003d01020e0000002000
*00006100000070000000700000006c00000069000000650000006400000020000000740000006f
*0000002000000061000000200104010000000000000000ff000000000000002f00000000000000
*3001020900000020000000660000006f000000720000006d000000730000002000000061000000
*200104010000000000000000730000000000000000000000000000001301020200000020000000
*0a021b000000200000002000000020000000750000006e00000064000000650000007200000020
*0000007400000068000000650000007300000065000000200000006f0000007000000065000000
*720000006100000074000000690000006f0000006e000000730000002e0000000a000000000000
*00c10301020200000041000000200104020000000000000000c200000000000000000000000000
*0000240000000000000000c1000000000000000000000000000000240102180000002000000075
*00000073000000650000007300000020000000610000006e00000020000000670000006c000000
*75000000650000007300000020000000740000006f000000670000006500000074000000680000
*0065000000720000002001040100000000000000012f000000000000002f000000000000003d01
*021300000020000000610000006300000074000000690000006f0000006e000000730000002000
*00007700000069000000740000006800000020000000280000002a0000003e000000290000000a
*010214000000200000002000000020000000690000006e00000020000000740000006800000065
*000000200000006d000000610000006e0000006e0000006500000072000000200000006f000000
*660000002001020900000074000000720000006100000076000000650000007200000073000000
*650000005f0102060000002000000066000000720000006f0000006d0000002001050d00000044
*0000006100000074000000610000002e000000460000006f0000006c0000006400000061000000
*620000006c0000006501021a0000002e00000020000000410000006e0000007900000020000000
*76000000610000006c000000750000006500000073000000200000007200000065000000740000
*0075000000720000006e0000006500000064000000200000006200000079000000200000000a02
*220000002000000020000000200000007200000065000000640000007500000063000000650000
*006400000020000000610000006300000074000000690000006f0000006e000000730000002000
*000061000000720000006500000020000000640000006900000073000000630000006100000072
*0000006400000065000000640000002e0000000a00000000000000c40301023200000045000000
*6600000066000000690000006300000069000000650000006e000000740000006c000000790000
*002000000061000000760000006f0000006900000064000000200000006e000000650000006500
*0000640000006c0000006500000073000000730000006c00000079000000200000007200000065
*00000062000000690000006e00000064000000690000006e000000670000002000000077000000
*68000000650000006e000000200000007500000073000000690000006e00000067000000200104
*0100000000000000000500000000000000000000000000000001010226000000200000006f0000
*006e00000020000000610000006e00000020000000610000006300000074000000690000006f00
*00006e000000200000007400000068000000610000007400000020000000610000006c00000072
*000000650000006100000064000000790000002000000072000000650000007400000075000000
*720000006e000000730000002000000028000000290000000a023b000000200000002000000020
*000000410000002000000072000000650000007700000072000000690000007400000065000000
*2000000072000000750000006c00000065000000200000006100000075000000740000006f0000
*006d00000061000000740000006900000063000000610000006c0000006c000000790000002000
*00006100000070000000700000006c000000690000006500000073000000200000007400000068
*0000006900000073000000200000007700000068000000650000006e0000002000000070000000
*6f000000730000007300000069000000620000006c000000650000000a4a000000000000010200
*00000000000103000000000000010400000000000000ff00000000000001050000000000000106
*000000000000010700000000000001080000000000000109000000000000010a00000000000001
*0b000000000000010c000000000000010d000000000000010e000000000000010f000000000000
*011000000000000001110000000000000112000000000000011300000000000001140000000000
*000115000000000000011600000000000001170000000000000118000000000000011900000000
*0000011a000000000000011b000000000000011c00000000000000000000000000000001000000
*000000000200000000000000030000000000000004000000000000000500000000000000060000
*00000000000700000000000000080000000000000009000000000000000a000000000000006600
*000000000000670000000000000069000000000000006a000000000000006b000000000000006c
*000000000000006d000000000000006e000000000000006f000000000000007000000000000000
*710000000000000073000000000000007400000000000000750000000000000076000000000000
*009a000000000000009b000000000000009c000000000000009d00000000000000aa0000000000
*0000b600000000000000b700000000000000b800000000000000b900000000000000ba00000000
*000000bb00000000000000bc00000000000000bd00000000000000be00000000000000bf000000
*00000000c000000000000000c100000000000000c200000000000000c300000000000000c40a00
*000000000000c100000000000000c200000000000000c300000000000000be00000000000000bf
*00000000000000c000000000000000bb00000000000000bc00000000000000bd00000000000000
*c4000000000000000000000000000000250001140000006e0000006f0000006e0000002d000000
*700000006f000000720000007400000061000000620000006c0000006500000020000000280000
*004d0000005000000054000000430000007300000029010c000000650000007800000070000000
*6500000072000000690000006d000000650000006e00000074000000610000006c011000000065
*0000006b0000006d00000065000000740000007400000040000000670000006d00000061000000
*690000006c0000002e000000630000006f0000006d0400000000000000c5030102030000006900
*00006600000020010702010000006d010206000000200000006900000073000000200000006100
*0000200104010000000000000000b6000000000000000000000000000000230102060000002000
*00006f000000760000006500000072000000200107020100000072010205000000200000006100
*00006e000000640000002001070201000000660102060000002000000069000000730000002000
*00006100000020010401000000000000000131000000000000002f000000000000003e01020600
*0000200000007400000068000000650000006e0000002001070102020000006600000020010402
*0000000000000000c6000000000000000000000000000000250000000000000000c50000000000
*00000000000000000000250202000000200000006d010206000000200000006900000073000000
*2000000061000000200104010000000000000000b6000000000000000000000000000000230209
*0000002000000061000000730000002000000077000000650000006c0000006c0000000a000000
*00000000c80301020200000041000000200104020000000000000000c900000000000000000000
*0000000000250000000000000000c80000000000000000000000000000002501020b0000002000
*00007400000075000000720000006e0000007300000020000000610000006e0000007900000020
*010401000000000000000132000000000000002f000000000000003e0102110000002000000069
*0000006e0000007300000074000000610000006e00000063000000650000002000000069000000
*6e000000740000006f0000002000000061000000200104010000000000000000ff000000000000
*002f00000000000000300102020000002e0000000a010216000000200000002000000020000000
*490000007400000020000000610000006c000000730000006f0000002000000070000000720000
*006f00000076000000690000006400000065000000730000002000000061000000200104010000
*0000000000006f0000000000000000000000000000001101021000000020000000690000006e00
*00007300000074000000610000006e000000630000006500000020000000660000006f00000072
*000000200000006100000020010401000000000000000131000000000000002f00000000000000
*3e0102120000002000000077000000720000006100000070000000700000006500000064000000
*2000000061000000720000006f000000750000006e000000640000002000000061000000200104
*010000000000000000ff000000000000002f00000000000000300102010000000a010218000000
*200000002000000020000000610000006e00000064000000200000006100000073000000730000
*006500000072000000740000007300000020000000740000006800000061000000740000002000
*0000610000006e0000007900000020010401000000000000000132000000000000002f00000000
*0000003e01020e000000200000006100000070000000700000006c000000690000006500000064
*00000020000000740000006f0000002000000061000000200104010000000000000000ff000000
*000000002f000000000000003001020900000020000000660000006f000000720000006d000000
*730000002000000061000000200104010000000000000000730000000000000000000000000000
*0013010202000000200000000a021b000000200000002000000020000000750000006e00000064
*000000650000007200000020000000740000006800000065000000730000006500000020000000
*6f0000007000000065000000720000006100000074000000690000006f0000006e000000730000
*002e0000000a00000000000000cb03010203000000410000006e00000020010402000000000000
*0000cc000000000000000000000000000000250000000000000000cb0000000000000000000000
*000000002501021500000020000000750000007300000065000000730000002000000067000000
*6c00000075000000650000007300000020000000740000006f0000006700000065000000740000
*0068000000650000007200000020010401000000000000000131000000000000002f0000000000
*00003e01021300000020000000610000006300000074000000690000006f0000006e0000007300
*0000200000007700000069000000740000006800000020000000280000003e0000003e00000029
*0000000a010214000000200000002000000020000000690000006e000000200000007400000068
*00000065000000200000006d000000610000006e0000006e000000650000007200000020000000
*6f0000006600000020010401000000000000000133000000000000002f000000000000003e0102
*060000002000000066000000720000006f0000006d0000002001050d0000004400000061000000
*74000000610000002e000000460000006f0000006c0000006400000061000000620000006c0000
*006501021a0000002e00000020000000410000006e000000790000002000000076000000610000
*006c00000075000000650000007300000020000000720000006500000074000000750000007200
*00006e0000006500000064000000200000006200000079000000200000000a0222000000200000
*002000000020000000720000006500000064000000750000006300000065000000640000002000
*0000610000006300000074000000690000006f0000006e00000073000000200000006100000072
*000000650000002000000064000000690000007300000063000000610000007200000064000000
*65000000640000002e0000000a00000000000000ce030102320000004500000066000000660000
*00690000006300000069000000650000006e000000740000006c00000079000000200000006100
*0000760000006f0000006900000064000000200000006e0000006500000065000000640000006c
*0000006500000073000000730000006c0000007900000020000000720000006500000062000000
*690000006e00000064000000690000006e00000067000000200000007700000068000000650000
*006e000000200000007500000073000000690000006e0000006700000020010401000000000000
*00000500000000000000000000000000000001010226000000200000006f0000006e0000002000
*0000610000006e00000020000000610000006300000074000000690000006f0000006e00000020
*0000007400000068000000610000007400000020000000610000006c0000007200000065000000
*6100000064000000790000002000000072000000650000007400000075000000720000006e0000
*00730000002000000028000000290000000a023b00000020000000200000002000000041000000
*200000007200000065000000770000007200000069000000740000006500000020000000720000
*00750000006c00000065000000200000006100000075000000740000006f0000006d0000006100
*0000740000006900000063000000610000006c0000006c00000079000000200000006100000070
*000000700000006c00000069000000650000007300000020000000740000006800000069000000
*73000000200000007700000068000000650000006e00000020000000700000006f000000730000
*007300000069000000620000006c000000650000000a3f00000000000001020000000000000103
*000000000000010400000000000000ff0000000000000105000000000000010600000000000001
*0700000000000001080000000000000109000000000000010a000000000000010b000000000000
*010c000000000000010d000000000000010e000000000000010f00000000000001100000000000
*000111000000000000011200000000000001130000000000000114000000000000011500000000
*00000116000000000000011700000000000001180000000000000119000000000000011a000000
*000000011b000000000000011c0000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000700
*000000000000080000000000000009000000000000000a00000000000000660000000000000067
*0000000000000069000000000000006a000000000000006b000000000000006c00000000000000
*6d000000000000006e000000000000006f00000000000000700000000000000071000000000000
*00730000000000000074000000000000007500000000000000c500000000000000c60000000000
*0000c700000000000000c800000000000000c900000000000000ca00000000000000cb00000000
*000000cc00000000000000cd00000000000000ce0a00000000000000cb00000000000000cc0000
*0000000000cd00000000000000ce00000000000000c800000000000000c900000000000000ca00
*000000000000c500000000000000c600000000000000c700000000000000000000000000000026
*0001230000006e0000006f0000006e0000002d000000700000006f000000720000007400000061
*000000620000006c00000065000000200000002800000074000000790000007000000065000000
*2000000066000000610000006d000000690000006c0000006900000065000000730000002c0000
*00200000004d0000005000000054000000430000007300000029010c0000006500000078000000
*700000006500000072000000690000006d000000650000006e00000074000000610000006c0110
*000000650000006b0000006d00000065000000740000007400000040000000670000006d000000
*61000000690000006c0000002e000000630000006f0000006d1500000000000000cf010301020c
*000000450000006600000066000000690000006300000069000000650000006e00000074000000
*6c000000790000002001040100000000000000002a000000000000000000000000000000060102
*030000002000000061000000200104010000000000000000280000000000000000000000000000
*000601020b000000200000007500000073000000690000006e0000006700000020000000740000
*006800000065000000200104020000000000000000c20000000000000000000000000000002400
*00000000000000c100000000000000000000000000000024010234000000200000006d0000006f
*0000006e0000006f00000069000000640000002e00000020000000410000002000000073000000
*70000000650000006300000069000000610000006c000000690000007a00000065000000640000
*002000000076000000650000007200000073000000690000006f0000006e000000200000006f00
*00006600000020000000690000007400000073000000200000006e000000610000006d00000065
*00000073000000610000006b000000650000002000000066000000720000006f0000006d000000
*2001050d000000440000006100000074000000610000002e000000460000006f0000006c000000
*6400000061000000620000006c0000006502010000000a0b0102010000000a0102050000002000
*00002000000020000000200000002001040100000000000000002a000000000000000000000000
*00000006010201000000200104010000000000000000c300000000000000000000000000000024
*0102010000000a020000000000000000d00103010221000000430000006f0000006e0000007600
*0000650000006e00000069000000650000006e0000006300000065000000200000006600000075
*0000006e0000006300000074000000690000006f0000006e000000200000006100000073000000
*20000000660000006f000000750000006e0000006400000020000000690000006e000000200105
*0d000000440000006100000074000000610000002e000000460000006f0000006c000000640000
*0061000000620000006c0000006502010000000a0b0102010000000a0102050000002000000020
*000000200000002000000020010401000000000000000134000000000000002f00000000000000
*3b010201000000200104010000000000000000cf00000000000000000000000000000026010201
*0000000a020000000000000000d101030102310000005400000068000000650000002000000073
*000000750000006d000000200000006f0000006600000020000000610000002000000063000000
*6f0000006c0000006c000000650000006300000074000000690000006f0000006e000000200000
*006f0000006600000020000000610000006300000074000000690000006f0000006e0000007300
*00002c0000002000000067000000650000006e0000006500000072000000610000006c00000069
*0000007a000000690000006e000000670000002001040100000000000000013500000000000000
*2f000000000000003f02010000000a0b0102010000000a01020400000020000000200000002000
*00002001040100000000000000002f000000000000000000000000000000060102010000002001
*04010000000000000000c0000000000000000000000000000000240102010000000a0200000000
*00000000d2010301020c0000004500000066000000660000006900000063000000690000006500
*00006e000000740000006c000000790000002001040100000000000000002a0000000000000000
*000000000000000601020300000020000000610000002001040100000000000000002800000000
*00000000000000000000000601020b000000200000007500000073000000690000006e00000067
*00000020000000740000006800000065000000200104020000000000000000cc00000000000000
*0000000000000000250000000000000000cb000000000000000000000000000000250102340000
*00200000006d0000006f0000006e0000006f00000069000000640000002e000000200000004100
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*00000065000000640000002000000076000000650000007200000073000000690000006f000000
*6e000000200000006f0000006600000020000000690000007400000073000000200000006e0000
*00610000006d0000006500000073000000610000006b0000006500000020000000660000007200
*00006f0000006d0000002001050d000000440000006100000074000000610000002e0000004600
*00006f0000006c0000006400000061000000620000006c00000065010205000000200000006100
*00006e000000640000002001050d000000430000006f0000006e00000074000000720000006f00
*00006c0000002e0000004d0000006f0000006e000000610000006402010000000a0b0102010000
*000a0102040000002000000020000000200000002001040100000000000000002e000000000000
*00000000000000000006010201000000200104010000000000000000cd00000000000000000000
*0000000000250102010000000a020000000000000000d30103010221000000430000006f000000
*6e00000076000000650000006e00000069000000650000006e0000006300000065000000200000
*0066000000750000006e0000006300000074000000690000006f0000006e000000200000006100
*00007300000020000000660000006f000000750000006e0000006400000020000000690000006e
*0000002001050d000000440000006100000074000000610000002e000000460000006f0000006c
*0000006400000061000000620000006c0000006501020500000020000000610000006e00000064
*0000002001050d000000430000006f0000006e00000074000000720000006f0000006c0000002e
*0000004d0000006f0000006e000000610000006402010000000a0b0102010000000a0102050000
*002000000020000000200000002000000020010401000000000000000134000000000000002f00
*0000000000003b010201000000200104010000000000000000d200000000000000000000000000
*0000260102010000000a020000000000000000d401030102310000005400000068000000650000
*002000000073000000750000006d000000200000006f0000006600000020000000610000002000
*0000630000006f0000006c0000006c000000650000006300000074000000690000006f0000006e
*000000200000006f0000006600000020000000610000006300000074000000690000006f000000
*6e000000730000002c0000002000000067000000650000006e0000006500000072000000610000
*006c000000690000007a000000690000006e000000670000002001040100000000000000013500
*0000000000002f000000000000003f02010000000a0b0102010000000a01020500000020000000
*2000000020000000200000002001040100000000000000002f0000000000000000000000000000
*0006010201000000200104010000000000000000ca000000000000000000000000000000250102
*010000000a020000000000000000d5010301020c00000045000000660000006600000069000000
*6300000069000000650000006e000000740000006c000000790000002001040100000000000000
*002a00000000000000000000000000000006010203000000200000006100000020010401000000
*0000000000280000000000000000000000000000000601020b0000002000000075000000730000
*00690000006e000000670000002000000074000000680000006500000020010402000000000000
*000047000000000000000000000000000000090000000000000000460000000000000000000000
*0000000009010234000000200000006d0000006f0000006e0000006f0000006900000064000000
*2e0000002000000041000000200000007300000070000000650000006300000069000000610000
*006c000000690000007a0000006500000064000000200000007600000065000000720000007300
*0000690000006f0000006e000000200000006f0000006600000020000000690000007400000073
*000000200000006e000000610000006d0000006500000073000000610000006b00000065000000
*2000000066000000720000006f0000006d0000002001050d000000440000006100000074000000
*610000002e000000460000006f0000006c0000006400000061000000620000006c000000650201
*0000000a0b0102010000000a010205000000200000002000000020000000200000002001040100
*000000000000002e00000000000000000000000000000006010201000000200104010000000000
*00000048000000000000000000000000000000090102010000000a020000000000000000d60301
*021700000054000000790000007000000065000000200000007300000070000000650000006300
*000069000000610000006c000000690000007a0000006100000074000000690000006f0000006e
*000000200000006f0000006600000020010507000000660000006f0000006c000000640000004d
*000000610000007002070000002000000061000000620000006f00000076000000650000000a00
*000000000000d7010301020c000000450000006600000066000000690000006300000069000000
*650000006e000000740000006c000000790000002001040100000000000000002d000000000000
*000000000000000000060102030000002000000061000000200104010000000000000000280000
*000000000000000000000000000601020b000000200000007500000073000000690000006e0000
*006700000020000000740000006800000065000000200104020000000000000000470000000000
*000000000000000000000900000000000000004600000000000000000000000000000009010234
*000000200000006d0000006f0000006e0000006f00000069000000640000002e00000020000000
*41000000200000007300000070000000650000006300000069000000610000006c000000690000
*007a00000065000000640000002000000076000000650000007200000073000000690000006f00
*00006e000000200000006f0000006600000020000000690000007400000073000000200000006e
*000000610000006d0000006500000073000000610000006b000000650000002000000066000000
*720000006f0000006d0000002001050d000000440000006100000074000000610000002e000000
*460000006f0000006c0000006400000061000000620000006c0000006502010000000a0b010201
*0000000a010205000000200000002000000020000000200000002001040100000000000000002f
*000000000000000000000000000000060102010000002001040100000000000000004800000000
*0000000000000000000000090102010000000a020000000000000000d80301020c000000430000
*006f0000006e0000007600000065000000720000007400000020000000610000006e0000007900
*0000200104010000000000000000280000000000000000000000000000000601022e0000002000
*0000740000006f0000002000000061000000200000006c00000069000000730000007400000020
*0000006f000000660000002000000069000000740000007300000020000000630000006f000000
*6e00000074000000650000006e00000074000000730000002e0000002000000053000000700000
*00650000006300000069000000610000006c000000690000007a00000061000000740000006900
*00006f0000006e000000200000006f000000660000002001040100000000000000002d00000000
*00000000000000000000000602010000000a00000000000000d9010301020c0000004500000066
*00000066000000690000006300000069000000650000006e000000740000006c00000079000000
*2001040100000000000000002d0000000000000000000000000000000601020300000020000000
*61000000200104010000000000000000280000000000000000000000000000000601021e000000
*200000007400000068000000610000007400000020000000630000006f0000006e000000740000
*0061000000690000006e000000730000002000000076000000610000006c000000750000006500
*000073000000200000006f00000066000000200000007400000079000000700000006500000020
*0104010000000000000001360000000000000034000000000000004002010000000a0b01020100
*00000a010205000000200000002000000020000000200000002001040100000000000000002f00
*0000000000000000000000000000060102010000002001040100000000000000010b0000000000
*00002f00000000000000300102010000000a020000000000000000da010301020c000000450000
*006600000066000000690000006300000069000000650000006e000000740000006c0000007900
*00002001040100000000000000002d000000000000000000000000000000060102030000002000
*000061000000200104010000000000000000280000000000000000000000000000000601021e00
*0000200000007400000068000000610000007400000020000000630000006f0000006e00000074
*00000061000000690000006e000000730000002000000076000000610000006c00000075000000
*6500000073000000200000006f0000006600000020000000740000007900000070000000650000
*00200104010000000000000001360000000000000034000000000000004002010000000a0b0102
*010000000a01020500000020000000200000002000000020000000200104010000000000000000
*2f000000000000000000000000000000060102010000002001040100000000000000010e000000
*000000002f00000000000000300102010000000a020000000000000000db010301020c00000045
*0000006600000066000000690000006300000069000000650000006e000000740000006c000000
*790000002001040100000000000000002a00000000000000000000000000000006010205000000
*20000000610000006e000000790000002001040100000000000000002800000000000000000000
*000000000006024300000020000000630000006800000065000000630000006b00000069000000
*6e0000006700000020000000740000006f00000020000000730000006500000065000000200000
*00690000006600000020000000610000006e00000079000000200000006f000000660000002000
*00006900000074000000730000002000000076000000610000006c000000750000006500000073
*000000200000006d00000061000000740000006300000068000000200000007400000068000000
*6500000020000000730000007500000070000000700000006c0000006900000065000000640000
*002000000070000000720000006500000064000000690000006300000061000000740000006500
*00000a0b0102010000000a01020500000020000000200000002000000020000000200104010000
*0000000000002e0000000000000000000000000000000601020100000020010401000000000000
*00010e000000000000002f00000000000000300102010000000a020000000000000000dc010301
*020c000000450000006600000066000000690000006300000069000000650000006e0000007400
*00006c000000790000002001040100000000000000002a00000000000000000000000000000006
*01020500000020000000610000006e000000790000002001040100000000000000002800000000
*000000000000000000000006024300000020000000630000006800000065000000630000006b00
*0000690000006e0000006700000020000000740000006f00000020000000730000006500000065
*00000020000000690000006600000020000000610000006c0000006c000000200000006f000000
*66000000200000006900000074000000730000002000000076000000610000006c000000750000
*006500000073000000200000006d00000061000000740000006300000068000000200000007400
*0000680000006500000020000000730000007500000070000000700000006c0000006900000065
*000000640000002000000070000000720000006500000064000000690000006300000061000000
*74000000650000000a0b0102010000000a01020500000020000000200000002000000020000000
*2001040100000000000000002e0000000000000000000000000000000601020100000020010401
*00000000000000010b000000000000002f00000000000000300102010000000a02000000000000
*0000dd010301022800000045000000660000006600000069000000630000006900000065000000
*6e000000740000006c000000790000002000000073000000750000006d000000200000006f0000
*0076000000650000007200000020000000740000006800000065000000200000006d0000006500
*00006d00000062000000650000007200000073000000200000006f000000660000002000000061
*0000006e0000007900000020010401000000000000000028000000000000000000000000000000
*0602010000000a0b0102010000000a010205000000200000002000000020000000200000002001
*040100000000000000002f00000000000000000000000000000006010201000000200104010000
*00000000000111000000000000002f00000000000000300102010000000a020000000000000000
*de0103010232000000450000006600000066000000690000006300000069000000650000006e00
*0000740000006c000000790000002000000074000000610000006b000000650000002000000074
*00000068000000650000002000000070000000720000006f000000640000007500000063000000
*74000000200000006f000000660000002000000065000000760000006500000072000000790000
*00200000006d000000650000006d000000620000006500000072000000200000006f0000006600
*000020000000610000002001040100000000000000002800000000000000000000000000000006
*02010000000a0b0102010000000a01020500000020000000200000002000000020000000200104
*0100000000000000002f0000000000000000000000000000000601020100000020010401000000
*000000000114000000000000002f00000000000000300102010000000a020000000000000000df
*03010210000000430000006800000065000000630000006b00000020000000740000006f000000
*200000007300000065000000650000002000000069000000660000002001040100000000000000
*00db0000000000000000000000000000002601020f000000200000006d000000650000006d0000
*00620000006500000072000000200000006f000000660000002000000074000000680000006500
*00002001040100000000000000002800000000000000000000000000000006021c000000200000
*006d00000061000000740000006300000068000000650000007300000020000000740000006800
*00006500000020000000730000007500000070000000700000006c000000690000006500000064
*0000002000000076000000610000006c00000075000000650000000a00000000000000e0030102
*42000000430000006800000065000000630000006b00000020000000740000006f000000200000
*006d000000610000006b0000006500000020000000730000007500000072000000650000002000
*000074000000680000006100000074000000200000007400000068000000650000002000000073
*0000007500000070000000700000006c0000006900000065000000640000002000000076000000
*610000006c0000007500000065000000200000006900000073000000200000006e0000006f0000
*00740000002000000061000000200000006d000000650000006d00000062000000650000007200
*0000200000006f0000006600000020000000740000006800000065000000200104010000000000
*000000280000000000000000000000000000000602010000000a00000000000000e10301020c00
*0000450000006600000066000000690000006300000069000000650000006e000000740000006c
*000000790000002001040100000000000000002a0000000000000000000000000000000601021f
*000000200000006100000020000000730000007500000062000000730000006500000074000000
*200000006f000000660000002000000074000000680000006500000020000000650000006c0000
*00650000006d000000650000006e000000740000007300000020000000690000006e0000002000
*000061000000200104010000000000000000280000000000000000000000000000000602010000
*000a00000000000000e203026a000000410000006c0000006c0000006f00000077000000730000
*00200000006900000064000000690000006f0000006d0000006100000074000000690000006300
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*0000006100000074000000690000006f0000006e000000200000006f0000006600000020000000
*66000000690000006c000000740000006500000072000000200000006200000079000000200000
*0070000000720000006f00000076000000690000006e0000006700000020000000610000002000
*000066000000750000006e0000006300000074000000690000006f0000006e0000002000000074
*0000006800000061000000740000002000000077000000690000006c0000006c00000020000000
*6200000065000000200000007500000073000000650000006400000020000000740000006f0000
*00200000007400000072000000610000006e00000073000000660000006f000000720000006d00
*000020000000740000006800000065000000200000006f00000075000000740000007000000075
*000000740000000a00000000000000e30103010214000000410000002000000073000000700000
*00650000006300000069000000610000006c000000690000007a00000061000000740000006900
*00006f0000006e000000200000006f00000066000000200104010000000000000000e100000000
*00000000000000000000002601020b000000200000007500000073000000690000006e00000067
*000000200000007400000068000000650000002001040200000000000000011800000000000000
*2f0000000000000030000000000000000119000000000000002f00000000000000300102010000
*00200104010000000000000000ff000000000000002f000000000000003001020f0000002c0000
*0020000000610000006e000000610000006c0000006f000000670000006f000000750000007300
*000020000000740000006f0000002001020e000000440000006100000074000000610000002e00
*00004c0000006900000073000000740000002e00000066000000690000006e0000006402010000
*000a0b0102010000000a0102050000002000000020000000200000002000000020010401000000
*0000000000e2000000000000000000000000000000260102010000002001040100000000000000
*0117000000000000002f00000000000000300102010000000a02004d0000000000000102000000
*0000000103000000000000010400000000000000ff000000000000010500000000000001060000
*00000000010700000000000001080000000000000109000000000000010a000000000000010b00
*0000000000010c000000000000010d000000000000010e000000000000010f0000000000000110
*000000000000011100000000000001120000000000000113000000000000011400000000000001
*150000000000000116000000000000011700000000000001180000000000000119000000000000
*011a000000000000011b000000000000011c000000000000000000000000000000010000000000
*000002000000000000000300000000000000040000000000000005000000000000000600000000
*0000000700000000000000080000000000000009000000000000000a000000000000001f000000
*000000002000000000000000210000000000000022000000000000002300000000000000240000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002a000000000000002b000000000000002c000000000000002d000000000000002e
*000000000000002f00000000000000cf00000000000000d000000000000000d100000000000000
*d200000000000000d300000000000000d400000000000000d500000000000000d6000000000000
*00d700000000000000d800000000000000d900000000000000da00000000000000db0000000000
*0000dc00000000000000dd00000000000000de00000000000000df00000000000000e000000000
*000000e100000000000000e200000000000000e31500000000000000d200000000000000d30000
*0000000000d400000000000000cf00000000000000d000000000000000d100000000000000d900
*000000000000da00000000000000db00000000000000dc00000000000000d500000000000000d7
*00000000000000d800000000000000d600000000000000df00000000000000e100000000000000
*e200000000000000e300000000000000dd00000000000000de00000000000000e0000000000000
*000000000000000000270001140000006e0000006f0000006e0000002d000000700000006f0000
*00720000007400000061000000620000006c0000006500000020000000280000004d0000005000
*000054000000430000007300000029010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d003a0000000000000102000000000000010300000000000001
*0400000000000000ff000000000000010500000000000001060000000000000107000000000000
*01080000000000000109000000000000010a000000000000010b000000000000010c0000000000
*00010d000000000000010e000000000000010f0000000000000110000000000000011100000000
*000001120000000000000113000000000000011400000000000001150000000000000116000000
*000000011700000000000001180000000000000119000000000000011a000000000000011b0000
*00000000011c000000000000000000000000000000010000000000000002000000000000000300
*000000000000040000000000000005000000000000000600000000000000070000000000000008
*0000000000000009000000000000000a000000000000001f000000000000002000000000000000
*210000000000000022000000000000002300000000000000240000000000000025000000000000
*0026000000000000002700000000000000280000000000000029000000000000002a0000000000
*00002b000000000000002c000000000000002d000000000000002e000000000000002f00000000
*000000e400000000000000e50200000000000000e400000000000000e500000000000000000000
*0000000000280001230000006e0000006f0000006e0000002d000000700000006f000000720000
*007400000061000000620000006c00000065000000200000002800000074000000790000007000
*0000650000002000000066000000610000006d000000690000006c000000690000006500000073
*0000002c000000200000004d0000005000000054000000430000007300000029010c0000006500
*000078000000700000006500000072000000690000006d000000650000006e0000007400000061
*0000006c0110000000650000006b0000006d000000650000007400000074000000400000006700
*00006d00000061000000690000006c0000002e000000630000006f0000006d002d000000000000
*01020000000000000103000000000000010400000000000000ff00000000000001050000000000
*000106000000000000010700000000000001080000000000000109000000000000010a00000000
*0000010b000000000000010c000000000000010d000000000000010e000000000000010f000000
*000000011000000000000001110000000000000112000000000000011300000000000001140000
*000000000115000000000000011600000000000001170000000000000118000000000000011900
*0000000000011a000000000000011b000000000000011c00000000000000660000000000000067
*0000000000000069000000000000006a000000000000006b000000000000006c00000000000000
*6d000000000000006e000000000000006f00000000000000700000000000000071000000000000
*007300000000000000740000000000000075000000000000007600000000000000e60000000000
*0000e70200000000000000e600000000000000e700000000000000000000000000000029000000
*000100000000000000e801030223000000410000006c0000006700000065000000620000007200
*000061000000200000006f00000076000000650000007200000020000000610000002000000028
*0000006e0000006500000061000000720000002900000020000000280000007300000065000000
*6d00000069000000290000002000000072000000690000006e000000670000002e0000000a010b
*022a00000072000000200000002a0000002e000000200000002800000078000000200000002a00
*0000200000007900000029000000200000003d000000200000002800000072000000200000002a
*0000002e000000200000007800000029000000200000002a000000200000007900000020000000
*3d0000002000000078000000200000002a000000200000002800000072000000200000002a0000
*002e0000002000000079000000290b022a0000002800000078000000200000002a000000200000
*007900000029000000200000002e0000002a0000002000000072000000200000003d0000002000
*000079000000200000002a000000200000002800000078000000200000002e0000002a00000020
*0000007200000029000000200000003d000000200000002800000079000000200000002e000000
*2a000000200000007200000029000000200000002a000000200000007836000000000000010200
*00000000000103000000000000010400000000000000ff00000000000001050000000000000106
*000000000000010700000000000001080000000000000109000000000000010a00000000000001
*0b000000000000010c000000000000010d000000000000010e000000000000010f000000000000
*011000000000000001110000000000000112000000000000011300000000000001140000000000
*000115000000000000011600000000000001170000000000000118000000000000011900000000
*0000011a000000000000011b000000000000011c00000000000000660000000000000067000000
*0000000069000000000000006a000000000000006b000000000000006c000000000000006d0000
*00000000006e000000000000006f00000000000000700000000000000071000000000000007300
*0000000000007400000000000000750000000000000076000000000000009a000000000000009b
*000000000000009c000000000000009d00000000000000aa00000000000000b600000000000000
*b700000000000000b800000000000000b900000000000000ba00000000000000e8010000000000
*0000e80000000000000000000000000000002a00011e000000700000006f000000720000007400
*000061000000620000006c000000650000002000000028000000690000006e0000007300000074
*000000610000006e00000063000000650000007300000020000000750000007300000065000000
*200000004d0000005000000054000000430000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011000
*0000650000006b0000006d00000065000000740000007400000040000000670000006d00000061
*000000690000006c0000002e000000630000006f0000006d2200000000000000e9030102760000
*00530000006500000074000000200000006f000000700000006500000072000000610000007400
*0000690000006f0000006e00000073000000200000006f0000007000000074000000690000006d
*000000690000007a000000650000006400000020000000660000006f0000007200000020000000
*74000000690000006700000068000000740000006c000000790000002000000067000000720000
*006f00000075000000700000006500000064000000200000007300000065000000740000007300
*0000200000006f00000072000000200000006e0000006500000061000000720000006c00000079
*00000020000000750000006e000000690000007600000065000000720000007300000061000000
*6c0000002000000073000000650000007400000073000000200000007700000069000000740000
*0068000000200000006100000020000000630000006c0000006f00000073000000650000002000
*000062000000790000002000000067000000720000006f0000007500000070000000200000006f
*0000006600000020000000650000006c000000650000006d000000650000006e00000074000000
*73000000200000006d000000690000007300000073000000690000006e000000670000002e0000
*000a01027700000020000000200000002000000053000000740000006f00000072000000650000
*007300000020000000690000007400000073000000650000006c00000066000000200000006c00
*0000690000006b0000006500000020000000610000006e00000020000000610000007200000062
*000000690000007400000072000000610000007200000079000000200000007000000072000000
*65000000630000006900000073000000690000006f0000006e00000020000000660000006c0000
*006f0000006100000074000000690000006e0000006700000020000000700000006f0000006900
*00006e00000074000000200000006e000000750000006d0000006200000065000000720000002c
*00000020000000740000007200000061000000630000006b000000690000006e00000067000000
*20000000740000006800000065000000200000006c000000650000006100000073000000740000
*002000000076000000610000006c000000750000006500000064000000200000006d0000006500
*00006d000000620000006500000072000000200000006f00000066000000200000007400000068
*000000650000002000000073000000650000007400000020000000610000006e00000064000000
*20000000610000006e0000000a0226000000200000002000000020000000490000006e00000074
*0000006500000067000000650000007200000020000000630000006f0000006d00000070000000
*7200000069000000730000006500000064000000200000006f0000006600000020000000740000
*006800000065000000200000006d000000650000006d0000006200000065000000720000007300
*00002e000000200000000a0000000000000137030102310000004100000020000000630000006f
*0000006e0000007300000065000000720000007600000061000000740000006900000076000000
*6500000020000000750000007000000070000000650000007200000020000000620000006f0000
*00750000006e00000064000000200000006f0000006e0000002000000074000000680000006500
*000020000000650000006c000000650000006d000000650000006e000000740000002000000063
*0000006f000000750000006e000000740000002e0000000a024100000020000000200000002000
*00004900000066000000200000006e000000650000006700000061000000740000006900000076
*000000650000002c00000020000000770000006500000020000000610000007200000065000000
*20000000630000006f0000006d000000700000006c000000650000006d000000650000006e0000
*007400000065000000640000002000000077000000690000007400000068000000200000007200
*000065000000730000007000000065000000630000007400000020000000740000006f00000020
*00000074000000680000006500000020000000750000006e000000690000007600000065000000
*7200000073000000650000000a0000000000000138030102310000004100000020000000630000
*006f0000006e000000730000006500000072000000760000006100000074000000690000007600
*000065000000200000006c0000006f00000077000000650000007200000020000000620000006f
*000000750000006e00000064000000200000006f0000006e000000200000007400000068000000
*6500000020000000650000006c000000650000006d000000650000006e00000074000000200000
*00630000006f000000750000006e000000740000002e0000000a02410000002000000020000000
*200000004900000066000000200000006e00000065000000670000006100000074000000690000
*0076000000650000002c0000002000000077000000650000002000000061000000720000006500
*000020000000630000006f0000006d000000700000006c000000650000006d000000650000006e
*000000740000006500000064000000200000007700000069000000740000006800000020000000
*7200000065000000730000007000000065000000630000007400000020000000740000006f0000
*002000000074000000680000006500000020000000750000006e00000069000000760000006500
*00007200000073000000650000000a000000000000013903024b0000004c000000610000007a00
*00007900000020000000650000006c000000650000006d000000650000006e0000007400000020
*000000630000006f000000750000006e0000007400000020000000750000007300000065000000
*64000000200000007700000068000000650000006e000000200000007400000068000000650000
*002000000061000000620000006f00000076000000650000002000000074000000770000006f00
*00002000000064000000690000007300000061000000670000007200000065000000650000002e
*000000200000004f00000028000000310000002900000020000000650000006e00000076000000
*69000000720000006f0000006e0000006d000000650000006e0000007400000020000000730000
*00690000007a000000650000000a000000000000013a0302430000004c0000006f000000770000
*00200000007700000061000000740000006500000072000000200000006d000000610000007200
*00006b0000002e00000020000000690000006e000000640000006500000078000000200000006f
*0000006600000020000000740000006800000065000000200000006c0000006500000061000000
*730000007400000020000000650000006c000000650000006d000000650000006e000000740000
*0020000000700000006f00000074000000650000006e0000007400000069000000610000006c00
*00006c0000007900000020000000690000006e0000002000000074000000680000006500000020
*0000007300000065000000740000002e0000000a000000000000013b0302470000004800000069
*000000670000006800000020000000770000006100000074000000650000007200000020000000
*6d00000061000000720000006b0000002e00000020000000690000006e00000064000000650000
*0078000000200000006f0000006600000020000000740000006800000065000000200000006700
*00007200000065000000610000007400000065000000730000007400000020000000650000006c
*000000650000006d000000650000006e0000007400000020000000700000006f00000074000000
*650000006e0000007400000069000000610000006c0000006c0000007900000020000000690000
*006e00000020000000740000006800000065000000200000007300000065000000740000002e00
*00000a000000000000013c0301022c000000740000006800000065000000200000007300000065
*00000074000000200000006f000000660000002000000062000000690000007400000073000000
*200000007300000074000000610000007200000074000000690000006e00000067000000200000
*0066000000720000006f0000006d00000020000000740000006800000065000000200000006500
*000078000000700000006f0000006e000000650000006e000000740000002e0000000a02430000
*002000000020000000200000006900000066000000200000006e00000065000000670000006100
*0000740000006900000076000000650000002c000000200000007400000068000000650000006e
*000000200000007700000065000000200000006100000072000000650000002000000063000000
*6f0000006d000000700000006c0000006d000000650000006e000000650000006e000000740000
*006500000064000000200000007700000069000000740000006800000020000000720000006500
*0000730000007000000065000000630000007400000020000000740000006f0000002000000075
*0000006e0000006900000076000000650000007200000073000000650000000a00000000000001
*3d0301021d000000690000006e00000076000000610000007200000069000000610000006e0000
*00740000003a000000200000007700000068000000650000006e00000065000000760000006500
*000072000000200000006d000000610000006e0000007400000069000000730000007300000061
*000000200102010000003c023500000020000000300000002c00000020000000750000006e0000
*00690000007600000065000000720000007300000065000000200000003d000000200000002800
*000066000000720000006f0000006d000000450000006e000000750000006d000000200000006d
*000000690000006e000000420000006f000000750000006e000000640000002c00000066000000
*720000006f0000006d000000450000006e000000750000006d000000200000006d000000610000
*0078000000420000006f000000750000006e00000064000000290000000a000000000000013e03
*023500000073000000650000006c000000660000002d000000630000006f0000006e0000007400
*000061000000690000006e00000065000000640000002000000065000000780000007400000072
*000000610000006300000074000000690000006f0000006e000000200000006200000065000000
*680000006100000076000000690000006f000000720000002c00000020000000650000006e0000
*0061000000620000006c000000650000007300000020000000460000006f0000006c0000006400
*000061000000620000006c000000650000000a000000000000013f030245000000490000006e00
*00007400000065000000720000006e000000610000006c00000020000000730000006d00000061
*000000720000007400000020000000630000006f0000006e000000730000007400000072000000
*7500000063000000740000006f000000720000002e00000020000000460000006f000000720000
*0063000000650000007300000020000000630000006f000000750000006e000000740000002000
*00007700000068000000650000006e000000650000007600000065000000720000002000000069
*000000740000002000000069000000730000002000000070000000690000006700000065000000
*6f0000006e000000680000006f0000006c00000065000000640000002e0000000a000000000000
*014003010602040000004f00000028000000640000002901020700000020000000770000006800
*0000650000007200000065000000200106020100000064023e0000002000000069000000730000
*00200000006100000062000000730000006f0000006c0000007500000074000000650000002000
*0000640000006500000076000000690000006100000074000000690000006f0000006e00000020
*000000690000006e00000020000000740000006800000065000000200000006f00000075000000
*74000000700000007500000074000000200000006f000000660000002000000066000000720000
*006f0000006d000000450000006e000000750000006d000000200000006f000000760000006500
*00007200000020000000740000006800000065000000200000007300000065000000740000000a
*00000000000000ea03010602040000004f00000028000000310000002901021800000020000000
*54000000680000006500000020000000650000006d000000700000007400000079000000200000
*007300000065000000740000002e000000200000005000000065000000720000006d0000006900
*0000740000007300000020010602040000004f0000002800000031000000290210000000200000
*006e000000750000006c0000006c00000020000000610000006e00000064000000200000007300
*0000690000007a000000650000002e0000000a00000000000000eb03010602040000004f000000
*28000000310000002901020d00000020000000430000006f0000006e0000007300000074000000
*720000007500000063000000740000002000000061000000200107020600000042000000690000
*007400000053000000650000007401022000000020000000770000006900000074000000680000
*0020000000610000002000000073000000690000006e000000670000006c000000650000002000
*0000650000006c000000650000006d000000650000006e000000740000002e0000002000000050
*00000065000000720000006d00000069000000740000007300000020010602040000004f000000
*280000003100000029020f000000200000006e000000750000006c0000006c0000002000000061
*0000006e000000640000002000000073000000690000007a000000650000000a00000000000000
*ec03010602040000004f00000028000000310000002901021800000020000000610000006d0000
*006f0000007200000074000000690000007a000000650000006400000020000000630000006f00
*000073000000740000002e00000020000000490000007300000020000000740000006800000065
*000000200104010000000000000000e90000000000000000000000000000002a01022700000020
*000000650000006d0000007000000074000000790000003f000000200000004d00000061000000
*790000002000000062000000650000002000000066000000610000007300000074000000650000
*0072000000200000007400000068000000610000006e0000002000000063000000680000006500
*0000630000006b000000690000006e000000670000002000000069000000660000002001070104
*010000000000000000ed0000000000000000000000000000002a0205000000200000003d000000
*3d000000200000003002020000002e0000000a00000000000000ed03010602040000004f000000
*280000003100000029023800000020000000610000006d0000006f000000720000007400000069
*0000007a000000650000006400000020000000630000006f00000073000000740000002e000000
*20000000540000006800000065000000200000006e000000750000006d00000062000000650000
*0072000000200000006f0000006600000020000000650000006c000000650000006d0000006500
*00006e000000740000007300000020000000690000006e00000020000000740000006800000065
*00000020000000620000006900000074000000200000007300000065000000740000002e000000
*0a00000000000000ee03010602040000004f000000280000006400000029010203000000200000
*0041000000200104010000000000000000e90000000000000000000000000000002a01022f0000
*0020000000630000006f0000006e0000007400000061000000690000006e000000690000006e00
*000067000000200000006500000076000000650000007200000079000000200000006d00000065
*0000006d000000620000006500000072000000200000006f000000660000002000000074000000
*680000006500000020000000650000006e000000750000006d0000006500000072000000610000
*0074000000690000006f0000006e000000200000006f0000006600000020010702010000006102
*020000002e0000000a00000000000000ef03010602040000004f00000028000000640000002901
*020f00000020000000430000006f0000006d000000700000006c000000650000006d0000006500
*00006e00000074000000730000002000000061000000200104010000000000000000e900000000
*00000000000000000000002a01021f000000200000007700000069000000740000006800000020
*000000720000006500000073000000700000006500000063000000740000002000000074000000
*6f0000002000000074000000680000006500000020000000620000006f000000750000006e0000
*006400000073000000200000006f000000660000002001070201000000610102150000002e0000
*002000000050000000720000006500000073000000650000007200000076000000650000007300
*0000200000006f00000072000000640000006500000072000000200000006f0000006600000020
*0104010000000000000000ec0000000000000000000000000000002a0102050000002000000061
*0000006e00000064000000200104010000000000000000ed000000000000000000000000000000
*2a02010000000a000000000000014103010602040000004f000000280000006400000029025c00
*000020000000750000006e0000007300000061000000660000006500000020000000690000006e
*0000007400000065000000720000006e000000610000006c000000200000006d00000065000000
*74000000680000006f000000640000003a00000020000000630000006f0000006d000000700000
*006c000000650000006d000000650000006e000000740000002000000061000000200000007300
*000065000000740000002000000074000000680000006100000074000000200000006800000061
*0000007300000020000000610000006c0000007200000065000000610000006400000079000000
*200000006200000065000000650000006e00000020000000630000006f0000006d000000700000
*006c000000650000006d000000650000006e000000740000006500000064000000200000006100
*000074000000200000006c00000065000000610000007300000074000000200000006f0000006e
*00000063000000650000002e0000000a000000000000014203010602040000004f000000280000
*006400000029025c00000020000000750000006e00000073000000610000006600000065000000
*20000000690000006e0000007400000065000000720000006e000000610000006c000000200000
*006d0000006500000074000000680000006f000000640000003a00000020000000630000006f00
*00006d000000700000006c000000650000006d000000650000006e000000740000002000000061
*000000200000007300000065000000740000002000000074000000680000006100000074000000
*2000000068000000610000007300000020000000610000006c0000007200000065000000610000
*006400000079000000200000006200000065000000650000006e00000020000000630000006f00
*00006d000000700000006c000000650000006d000000650000006e000000740000006500000064
*000000200000006100000074000000200000006c00000065000000610000007300000074000000
*200000006f0000006e00000063000000650000002e0000000a00000000000000f0030106020800
*00004f0000002800000064000000200000002a000000200000006e000000290102080000002000
*00004d000000610000006b000000650000002000000061000000200104010000000000000000e9
*0000000000000000000000000000002a02170000002000000066000000720000006f0000006d00
*00002000000061000000200000006c000000690000007300000074000000200000006f00000066
*000000200000006900000074000000650000006d000000730000002e0000000a00000000000000
*f103010602080000004f0000002800000064000000200000002a000000200000006e0000002901
*0208000000200000004d000000610000006b000000650000002000000061000000200104010000
*000000000000e90000000000000000000000000000002a02290000002000000066000000720000
*006f0000006d000000200000006100000020000000640000006900000073000000740000006900
*00006e000000630000007400000020000000610000007300000063000000650000006e00000064
*000000690000006e00000067000000200000006c00000069000000730000007400000020000000
*6f00000066000000200000006900000074000000650000006d000000730000000a000000000000
*00f203010602040000004f00000028000000640000002901022100000020000000490000006e00
*00007300000065000000720000007400000020000000610000002000000073000000690000006e
*000000670000006c0000006500000020000000650000006c000000650000006d00000065000000
*6e00000074000000200000006f0000006600000020000000740000007900000070000000650000
*0020010702010000006101020a00000020000000690000006e000000740000006f000000200000
*00740000006800000065000000200104010000000000000000e900000000000000000000000000
*00002a0102150000002e0000002000000050000000720000006500000073000000650000007200
*0000760000006500000073000000200000006f0000007200000064000000650000007200000020
*0000006f00000066000000200104010000000000000000ec000000000000000000000000000000
*2a01020500000020000000610000006e00000064000000200104010000000000000000ed000000
*0000000000000000000000002a02010000000a00000000000000f303010602040000004f000000
*28000000640000002901021f0000002000000044000000650000006c0000006500000074000000
*6500000020000000610000002000000073000000690000006e000000670000006c000000650000
*00200000006900000074000000650000006d0000002000000066000000720000006f0000006d00
*000020000000740000006800000065000000200104010000000000000000e90000000000000000
*000000000000002a0102150000002e000000200000005000000072000000650000007300000065
*00000072000000760000006500000073000000200000006f000000720000006400000065000000
*72000000200000006f00000066000000200104010000000000000000ec00000000000000000000
*00000000002a01020500000020000000610000006e000000640000002001040100000000000000
*00ed0000000000000000000000000000002a02010000000a00000000000000f403010602040000
*004f00000028000000310000002901021a00000020000000540000006500000073000000740000
*0020000000660000006f00000072000000200000006d000000650000006d000000620000006500
*0000720000007300000068000000690000007000000020000000690000006e0000002000000061
*000000200104010000000000000000e90000000000000000000000000000002a02010000000a00
*000000000000f503010602040000004f0000002800000064000000290242000000200000006300
*00006f0000006e0000007600000065000000720000007400000020000000740000006f00000020
*000000610000006e00000020000000490000006e00000074000000650000006700000065000000
*7200000020000000720000006500000070000000720000006500000073000000650000006e0000
*00740000006100000074000000690000006f0000006e0000002e00000020000000440000006900
*0000730000006300000061000000720000006400000073000000200000006e0000006500000067
*000000610000007400000069000000760000006500000020000000650000006c00000065000000
*6d000000650000006e00000074000000730000000a00000000000000f603010602040000004f00
*000028000000640000002902020000002e0000000a00000000000000f703010602040000004f00
*000028000000310000002901023600000020000000430000006800000065000000630000006b00
*000020000000740000006f00000020000000730000006500000065000000200000006900000066
*000000200000007700000065000000200000006100000072000000650000002000000072000000
*6500000070000000720000006500000073000000650000006e0000007400000065000000640000
*00200000006100000073000000200000006100000020000000630000006f0000006d0000007000
*00006c000000650000006d000000650000006e0000007400000065000000640000002001040100
*00000000000000e90000000000000000000000000000002a02030000002e000000200000000a00
*000000000000f803010602040000004f0000002800000064000000290202000000200000000a00
*0000000000014301030253000000550000006e0000007300000061000000660000006500000020
*000000690000006e0000007400000065000000720000006e000000610000006c00000020000000
*6d0000006500000074000000680000006f0000006400000020000000660000006f000000720000
*0020000000630000006f0000006d000000700000007500000074000000690000006e0000006700
*000020000000640000006900000066000000660000006500000072000000650000006e00000063
*000000650000007300000020000000690000006e0000002000000061000000200000006b000000
*6e0000006f000000770000006e00000020000000750000006e0000006900000076000000650000
*00720000007300000065000000200000006f000000660000002000000064000000690000007300
*0000630000006f000000750000007200000073000000650000002e0000000a0103020f00000050
*0000007200000065000000630000006f0000006e00000064000000690000007400000069000000
*6f0000006e000000730000003a0000000a09010301020100000020010702060000006d00000020
*0000003e0000003d00000020000000300102010000000a01020500000020000000320000002000
*0000200000002001070102010000006d010201000000270205000000200000003e0000003d0000
*0020000000300102010000000a0102050000002000000033000000200000002000000020010701
*020200000061000000200102010000002f02040000003d000000200000002d0000003101020100
*00000a010205000000200000003400000020000000200000002001070102010000006101020100
*000027010201000000200102010000002f02040000003d000000200000002d0000003101020100
*00000a010205000000200000003500000020000000200000002001070102020000006200000020
*0102010000002f02030000003d00000020000000300102010000000a0102050000002000000036
*000000200000002000000020010701020100000062010201000000270102010000002001020100
*00002f02030000003d00000020000000300102010000000a010205000000200000003700000020
*000000200000002001070102010000007501020100000027020100000027010222000000200000
*006900000073000000200000006100000020000000700000007200000065000000760000006900
*00006f00000075000000730000006c00000079000000200000006f000000620000007400000061
*000000690000006e000000650000006400000020000000630000006f0000007000000079000000
*200000006f0000006600000020010702260000002800000066000000720000006f0000006d0000
*00450000006e000000750000006d000000200000006d000000690000006e000000420000006f00
*0000750000006e000000640000002c0000002000000066000000720000006f0000006d00000045
*0000006e000000750000006d000000200000006d0000006100000078000000420000006f000000
*750000006e000000640000002902010000000a000000000000014403010602040000004f000000
*28000000640000002902410000002000000052000000650000006d0000006f0000007600000065
*00000020000000610000006c0000006c00000020000000650000006c000000650000006d000000
*650000006e00000074000000730000002000000070000000720000006500000073000000650000
*006e0000007400000020000000690000006e000000200000007400000068000000650000002000
*00007300000065000000630000006f0000006e0000006400000020000000620000006900000074
*0000007300000065000000740000002000000066000000720000006f0000006d00000020000000
*7400000068000000650000002000000066000000690000007200000073000000740000000a0000
*0000000000f903010602040000004f000000280000006400000029010207000000200000004900
*00006e0000006600000069000000780000002001040101000000000000014402010000000a0000
*0000000001450302380000005500000074000000690000006c0000006900000074000000790000
*002000000066000000750000006e0000006300000074000000690000006f0000006e0000002000
*0000740000006f0000002000000061000000760000006f00000069000000640000002000000072
*0000006500000071000000750000006900000072000000690000006e0000006700000020000000
*53000000630000006f000000700000006500000064000000540000007900000070000000650000
*005600000061000000720000006900000061000000620000006c00000065000000730000000a00
*0000000000014603010602040000004f00000028000000640000002902010000000a0000000000
*00014703010602040000004f000000280000006400000029024f0000002e000000200000004300
*00006f0000006d0000007000000075000000740000006500000073000000200000007400000068
*00000065000000200000006500000071000000750000006900000076000000610000006c000000
*650000006e00000074000000200000006f00000066000000200000002800000074000000720000
*00750000006e00000063000000610000007400000065000000200000002e000000200000006c00
*00006f00000067000000420000006100000073000000650000002000000032000000200000002e
*000000200000006100000062000000730000002900000020000000650000007800000074000000
*650000006e00000064000000650000006400000020000000770000006900000074000000680000
*00200000003000000020000000610000007400000020000000300000000a470000000000000102
*0000000000000103000000000000010400000000000000ff000000000000010500000000000001
*06000000000000010700000000000001080000000000000109000000000000010a000000000000
*010b000000000000010c000000000000010d000000000000010e000000000000010f0000000000
*000110000000000000011100000000000001120000000000000113000000000000011400000000
*000001150000000000000116000000000000011700000000000001180000000000000119000000
*000000011a000000000000011b000000000000011c000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000005000000000000000600
*0000000000000700000000000000080000000000000009000000000000000a0000000000000066
*00000000000000670000000000000069000000000000006a000000000000006b00000000000000
*6c000000000000006d000000000000006e000000000000006f0000000000000070000000000000
*007100000000000000730000000000000074000000000000007500000000000000760000000000
*0000e900000000000000ea00000000000000eb00000000000000ec00000000000000ed00000000
*000000ee00000000000000ef00000000000000f000000000000000f100000000000000f2000000
*00000000f300000000000000f400000000000000f500000000000000f600000000000000f70000
*0000000000f800000000000000f91100000000000000e900000000000000ea00000000000000eb
*00000000000000ee00000000000000f600000000000000f800000000000000ef00000000000000
*f200000000000000f300000000000000f900000000000000f000000000000000f1000000000000
*00f400000000000000ec00000000000000ed00000000000000f700000000000000f50000000000
*000000000000000000002b00011e000000700000006f0000007200000074000000610000006200
*00006c000000650000002000000028000000690000006e0000007300000074000000610000006e
*00000063000000650000007300000020000000750000007300000065000000200000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c0110000000650000006b00
*00006d00000065000000740000007400000040000000670000006d00000061000000690000006c
*0000002e000000630000006f0000006d0038000000000000010200000000000001030000000000
*00010400000000000000ff00000000000001050000000000000106000000000000010700000000
*000001080000000000000109000000000000010a000000000000010b000000000000010c000000
*000000010d000000000000010e000000000000010f000000000000011000000000000001110000
*000000000112000000000000011300000000000001140000000000000115000000000000011600
*0000000000011700000000000001180000000000000119000000000000011a000000000000011b
*000000000000011c00000000000000660000000000000067000000000000006900000000000000
*6a000000000000006b000000000000006c000000000000006d000000000000006e000000000000
*006f00000000000000700000000000000071000000000000007300000000000000740000000000
*0000750000000000000076000000000000009a000000000000009b000000000000009c00000000
*0000009d00000000000000aa00000000000000b600000000000000b700000000000000b8000000
*00000000b900000000000000ba00000000000000fa00000000000000fb00000000000000fc0300
*000000000000fa00000000000000fc00000000000000fb0000000000000000000000000000002c
*000108000000700000006f000000720000007400000061000000620000006c00000065010c0000
*006500000078000000700000006500000072000000690000006d000000650000006e0000007400
*0000610000006c0110000000650000006b0000006d000000650000007400000074000000400000
*00670000006d00000061000000690000006c0000002e000000630000006f0000006d0035000000
*00000001020000000000000103000000000000010400000000000000ff00000000000001050000
*000000000106000000000000010700000000000001080000000000000109000000000000010a00
*0000000000010b000000000000010c000000000000010d000000000000010e000000000000010f
*000000000000011000000000000001110000000000000112000000000000011300000000000001
*140000000000000115000000000000011600000000000001170000000000000118000000000000
*0119000000000000011a000000000000011b000000000000011c00000000000000660000000000
*0000670000000000000069000000000000006a000000000000006b000000000000006c00000000
*0000006d000000000000006e000000000000006f00000000000000700000000000000071000000
*0000000073000000000000007400000000000000750000000000000076000000000000009a0000
*00000000009b000000000000009c000000000000009d00000000000000a000000000000000a100
*000000000000a200000000000000a300000000000000aa00000000000000fd0100000000000000
*fd0000000000000000000000000000002d00000000003b00000000000001020000000000000103
*000000000000010400000000000000ff0000000000000105000000000000010600000000000001
*0700000000000001080000000000000109000000000000010a000000000000010b000000000000
*010c000000000000010d000000000000010e000000000000010f00000000000001100000000000
*000111000000000000011200000000000001130000000000000114000000000000011500000000
*00000116000000000000011700000000000001180000000000000119000000000000011a000000
*000000011b000000000000011c0000000000000066000000000000006700000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000006e00
*0000000000006f0000000000000070000000000000007100000000000000730000000000000074
*00000000000000750000000000000076000000000000009a000000000000009b00000000000000
*9c000000000000009d00000000000000a000000000000000a100000000000000a2000000000000
*00a300000000000000aa00000000000000b600000000000000b700000000000000b80000000000
*0000b900000000000000ba00000000000000fd00000000000000fe0100000000000000fe000000
*000000014800000000000000000000000000000001030000000000000041000000000000000000
*000000000000010100000000000000420000000000000000000000000000000100000000000000
*004300000000000000000000000000000001030000000000000044000000000000000000000000
*000000010000000000000000450000000000000000000000000000000100000000000000004600
*000000000000000000000000000001000000000000000047000000000000000000000000000000
*010000000000000000480000000000000000000000000000000100000000000000004900000000
*00000000000000000000000100000000000000004a000000000000000000000000000000010000
*0000000000004b0000000000000000000000000000000203000000000000004c00000000000000
*00000000000000000200000000000000004d000000000000000000000000000000020000000000
*0000004e0000000000000000000000000000000303000000000000004f00000000000000000000
*000000000003000000000000000050000000000000000000000000000000040300000000000000
*510000000000000000000000000000000401000000000000005100000000000000000000000000
*000004000000000000000052000000000000000000000000000000050300000000000000530000
*000000000000000000000000000501000000000000005300000000000000000000000000000005
*000000000000000054000000000000000000000000000000050300000000000000550000000000
*000000000000000000000500000000000000005600000000000000000000000000000005000000
*000000000057000000000000000000000000000000050300000000000000580000000000000000
*000000000000000501000000000000005800000000000000000000000000000005000000000000
*0000590000000000000000000000000000000503000000000000005a0000000000000000000000
*000000000500000000000000005b0000000000000000000000000000000500000000000000005c
*0000000000000000000000000000000603000000000000005d0000000000000000000000000000
*000601000000000000005d0000000000000000000000000000000600000000000000005e000000
*0000000000000000000000000603000000000000005f0000000000000000000000000000000601
*000000000000005f00000000000000000000000000000006000000000000000060000000000000
*000000000000000000060300000000000000610000000000000000000000000000000601000000
*000000006100000000000000000000000000000006000000000000000062000000000000000000
*000000000000060300000000000000630000000000000000000000000000000603000000000000
*006400000000000000000000000000000006000000000000000065000000000000000000000000
*000000060000000000000000660000000000000000000000000000000600000000000000006700
*000000000000000000000000000006000000000000000068000000000000000000000000000000
*060000000000000000690000000000000000000000000000000600000000000000006a00000000
*00000000000000000000000703000000000000006b000000000000000000000000000000070100
*0000000000006c0000000000000000000000000000000701000000000000006d00000000000000
*00000000000000000701000000000000006e000000000000000000000000000000070100000000
*0000006f0000000000000000000000000000000703000000000000007000000000000000000000
*000000000007030000000000000071000000000000000000000000000000070000000000000000
*720000000000000000000000000000000700000000000000007300000000000000000000000000
*000007000000000000000074000000000000000000000000000000070000000000000000750000
*000000000000000000000000000700000000000000007600000000000000000000000000000008
*030000000000000077000000000000000000000000000000080000000000000000780000000000
*000000000000000000000803000000000000007900000000000000000000000000000008000000
*00000000007a0000000000000000000000000000000803000000000000006e0000000000000000
*000000000000000803000000000000007b00000000000000000000000000000008000000000000
*00007c0000000000000000000000000000000800000000000000007d0000000000000000000000
*000000000800000000000000007e0000000000000000000000000000000800000000000000007f
*000000000000000000000000000000090300000000000000800000000000000000000000000000
*000901000000000000008000000000000000000000000000000009000000000000000081000000
*0000000000000000000000000a0300000000000000820000000000000000000000000000000a00
*00000000000000830000000000000000000000000000000a000000000000000084000000000000
*0000000000000000000a0000000000000000850000000000000000000000000000000a00000000
*00000000860000000000000000000000000000000a000000000000000087000000000000000000
*0000000000000b0300000000000000880000000000000000000000000000000b01000000000000
*00880000000000000000000000000000000b000000000000000089000000000000000000000000
*0000000c00000000000000008a0000000000000000000000000000000c00000000000000008b00
*00000000000000000000000000000c00000000000000008c000000000000000000000000000000
*0c00000000000000008d0000000000000000000000000000000d03000000000000008e00000000
*00000000000000000000000d01000000000000008e0000000000000000000000000000000d0000
*0000000000008f0000000000000000000000000000000d03000000000000009000000000000000
*00000000000000000d0100000000000000900000000000000000000000000000000d0000000000
*000000830000000000000000000000000000000d00000000000000009100000000000000000000
*00000000000d0000000000000000920000000000000000000000000000000d0000000000000000
*840000000000000000000000000000000d00000000000000008600000000000000000000000000
*00000e0300000000000000930000000000000000000000000000000e0300000000000000940000
*000000000000000000000000000e0100000000000000940000000000000000000000000000000e
*0000000000000000950000000000000000000000000000000e0000000000000000960000000000
*000000000000000000000e0000000000000000970000000000000000000000000000000f000000
*0000000000980000000000000000000000000000000f0000000000000000990000000000000000
*000000000000001000000000000000009a00000000000000000000000000000011030000000000
*00009b0000000000000000000000000000001101000000000000009b0000000000000000000000
*000000001100000000000000009c0000000000000000000000000000001103000000000000009d
*0000000000000000000000000000001101000000000000009d0000000000000000000000000000
*001100000000000000009e0000000000000000000000000000001103000000000000009f000000
*000000000000000000000000110000000000000000a00000000000000000000000000000001100
*00000000000000a1000000000000000000000000000000120000000000000000a2000000000000
*000000000000000000130300000000000000a30000000000000000000000000000001303000000
*00000000a4000000000000000000000000000000130300000000000000a5000000000000000000
*000000000000140300000000000000a60000000000000000000000000000001503000000000000
*00a7000000000000000000000000000000150100000000000000a7000000000000000000000000
*000000150000000000000000a8000000000000000000000000000000150300000000000000a900
*0000000000000000000000000000150100000000000000a9000000000000000000000000000000
*150000000000000000aa000000000000000000000000000000150300000000000000ab00000000
*0000000000000000000000150100000000000000ab000000000000000000000000000000150000
*000000000000ac000000000000000000000000000000150300000000000000ad00000000000000
*0000000000000000150100000000000000ad000000000000000000000000000000150000000000
*000000ae000000000000000000000000000000150000000000000000af00000000000000000000
*0000000000150000000000000000b0000000000000000000000000000000160300000000000000
*b1000000000000000000000000000000160000000000000000b200000000000000000000000000
*0000170300000000000000b3000000000000000000000000000000170100000000000000b40000
*00000000000000000000000000170100000000000000b300000000000000000000000000000017
*0100000000000000b5000000000000000000000000000000170300000000000000b60000000000
*00000000000000000000170100000000000000b600000000000000000000000000000017000000
*0000000000b7000000000000000000000000000000180300000000000000b80000000000000000
*00000000000000180100000000000000b800000000000000000000000000000018000000000000
*0000b9000000000000000000000000000000180000000000000000b00000000000000000000000
*00000000190300000000000000ba000000000000000000000000000000190100000000000000ba
*000000000000000000000000000000190000000000000000bb0000000000000000000000000000
*00190000000000000000bc000000000000000000000000000000190000000000000000bd000000
*000000000000000000000000190000000000000000be0000000000000000000000000000001900
*000000000000005b000000000000000000000000000000190000000000000000bf000000000000
*0000000000000000001a0300000000000000c00000000000000000000000000000001a00000000
*00000000c10000000000000000000000000000001a0000000000000000c2000000000000000000
*0000000000001a0000000000000000c30000000000000000000000000000001b00000000000000
*008c0000000000000000000000000000001b00000000000000008d000000000000000000000000
*0000001c0300000000000000c40000000000000000000000000000001c0000000000000000c500
*00000000000000000000000000001c0000000000000000c6000000000000000000000000000000
*1c0000000000000000c70000000000000000000000000000001d0000000000000000c800000000
*00000000000000000000001d0000000000000000c90000000000000000000000000000001d0000
*000000000000ca0000000000000000000000000000001e0000000000000000cb00000000000000
*00000000000000001e0000000000000000cc0000000000000000000000000000001e0000000000
*000000cd0000000000000000000000000000001f0300000000000000ce00000000000000000000
*0000000000200300000000000000cf000000000000000000000000000000200100000000000000
*cf000000000000000000000000000000200000000000000000d000000000000000000000000000
*0000210300000000000000d1000000000000000000000000000000210100000000000000d10000
*00000000000000000000000000210000000000000000d200000000000000000000000000000022
*0300000000000000d3000000000000000000000000000000220000000000000000d40000000000
*00000000000000000000220300000000000000d500000000000000000000000000000022000000
*0000000000d6000000000000000000000000000000220000000000000000d70000000000000000
*00000000000000230300000000000000d800000000000000000000000000000023030000000000
*0000d9000000000000000000000000000000230000000000000000da0000000000000000000000
*00000000230300000000000000db000000000000000000000000000000230000000000000000dc
*000000000000000000000000000000240300000000000000dd0000000000000000000000000000
*00240100000000000000dd000000000000000000000000000000240000000000000000de000000
*000000000000000000000000240300000000000000df0000000000000000000000000000002401
*00000000000000df000000000000000000000000000000240000000000000000e0000000000000
*000000000000000000240300000000000000e10000000000000000000000000000002401000000
*00000000e1000000000000000000000000000000240000000000000000e2000000000000000000
*000000000000240000000000000000e30000000000000000000000000000002503000000000000
*00e4000000000000000000000000000000250100000000000000e4000000000000000000000000
*000000250000000000000000e5000000000000000000000000000000250300000000000000e600
*0000000000000000000000000000250100000000000000e6000000000000000000000000000000
*250000000000000000e7000000000000000000000000000000250300000000000000e800000000
*0000000000000000000000250100000000000000e8000000000000000000000000000000250000
*000000000000e9000000000000000000000000000000250000000000000000ea00000000000000
*0000000000000000260000000000000000eb000000000000000000000000000000260000000000
*000000ec000000000000000000000000000000260000000000000000ed00000000000000000000
*0000000000260000000000000000ee000000000000000000000000000000260000000000000000
*ef000000000000000000000000000000260000000000000000f000000000000000000000000000
*0000260000000000000000f1000000000000000000000000000000260000000000000000f20000
*00000000000000000000000000260000000000000000f300000000000000000000000000000026
*0000000000000000f4000000000000000000000000000000260000000000000000f50000000000
*00000000000000000000260000000000000000f600000000000000000000000000000026000000
*0000000000f7000000000000000000000000000000260000000000000000f80000000000000000
*00000000000000260000000000000000f900000000000000000000000000000026000000000000
*0000fa000000000000000000000000000000260000000000000000fb0000000000000000000000
*00000000260000000000000000fc000000000000000000000000000000260000000000000000fd
*000000000000000000000000000000260000000000000000fe0000000000000000000000000000
*00260000000000000000ff00000000000000000000000000000027030000000000000100000000
*000000000000000000000000270100000000000001010000000000000000000000000000002803
*000000000000010200000000000000000000000000000028000000000000000103000000000000
*000000000000000000290300000000000001040000000000000000000000000000002a03000000
*00000001050000000000000000000000000000002a00000000000000005b000000000000000000
*0000000000002a0000000000000000be0000000000000000000000000000002a00000000000000
*00bf0000000000000000000000000000002a000000000000000106000000000000000000000000
*0000002a0000000000000001070000000000000000000000000000002a00000000000000010800
*00000000000000000000000000002a000000000000000109000000000000000000000000000000
*2a00000000000000010a0000000000000000000000000000002a00000000000000010b00000000
*00000000000000000000002a00000000000000010c0000000000000000000000000000002a0000
*0000000000010d0000000000000000000000000000002a00000000000000010e00000000000000
*00000000000000002a00000000000000005c0000000000000000000000000000002a0000000000
*0000010f0000000000000000000000000000002a00000000000000011000000000000000000000
*00000000002a0000000000000000cc0000000000000000000000000000002b0300000000000001
*110000000000000000000000000000002b00000000000000011200000000000000000000000000
*00002b0000000000000001130000000000000000000000000000002c0300000000000001140000
*000000000000000000000000002d030000000000000115000000000000002f0000000000000030
*030000000000000116000000000000002f00000000000000310300000000000001170000000000
*00002f0000000000000032030000000000000118000000000000002f0000000000000030000000
*000000000119000000000000002f000000000000003000000000000000011a000000000000002f
*000000000000003000000000000000011b000000000000002f0000000000000030000000000000
*00011c000000000000002f000000000000003001000000000000011d000000000000002f000000
*000000003003000000000000011d000000000000002f000000000000003000000000000000011e
*000000000000002f000000000000003001000000000000011f000000000000002f000000000000
*003003000000000000011f000000000000002f0000000000000030000000000000000120000000
*000000002f0000000000000030010000000000000121000000000000002f000000000000003003
*0000000000000121000000000000002f0000000000000030000000000000000122000000000000
*002f0000000000000030010000000000000123000000000000002f000000000000003003000000
*0000000123000000000000002f0000000000000030000000000000000124000000000000002f00
*00000000000030010000000000000125000000000000002f000000000000003003000000000000
*0125000000000000002f0000000000000030000000000000000126000000000000002f00000000
*00000030010000000000000127000000000000002f000000000000003003000000000000012700
*0000000000002f0000000000000030000000000000000128000000000000002f00000000000000
*30010000000000000129000000000000002f000000000000003003000000000000012900000000
*0000002f000000000000003000000000000000012a000000000000002f00000000000000300100
*0000000000012b000000000000002f000000000000003003000000000000012b00000000000001
*2c000000000000012d03000000000000012e000000000000012c000000000000012d0000000000
*0000012f000000000000002f000000000000013003000000000000013100000000000000340000
*000000000035030000000000000132000000000000002f00000000000000360000000000000001
*330000000000000000000000000000000a03000000000000013400000000000000370000000000
*000038030000000000000135000000000000002f00000000000000390300000000000001360000
*00000000002f0000000000000039000000000000000137000000000000002f0000000000000039
*000000000000000138000000000000002f00000000000000390000000000000001390000000000
*00002f000000000000003900000000000000013a000000000000002f000000000000013b000000
*00000000013c000000000000002f000000000000003101000000000000013d000000000000002f
*000000000000013b00000000000000013e000000000000002f000000000000013f000000000000
*000140000000000000002f000000000000013f000000000000000141000000000000002f000000
*000000014200000000000000009a000000000000002f000000000000003d030000000000000143
*000000000000002f000000000000003d030000000000000144000000000000002f000000000000
*0145030000000000000146000000000000002f000000000000003e030000000000000147000000
*000000002f000000000000003e0000000000000000ee000000000000002f000000000000014500
*0000000000000148000000000000002f000000000000014900000000000000014a000000000000
*0034000000000000004003000000000000014b0000000000000000000000000000002a00000000
*000000014c0000000000000000000000000000002a00000000000000014d000000000000000000
*0000000000002a00000000000000014e0000000000000000000000000000002a00000000000000
*014f0000000000000000000000000000002a000000000000000150000000000000000000000000
*0000002a0000000000000001510000000000000000000000000000002a00000000000000015200
*00000000000000000000000000002a000000000000000153000000000000000000000000000000
*2a0000000000000001540000000000000000000000000000002a0000000000000000f400000000
*00000000000000000000002a0000000000000001550000000000000000000000000000002a0000
*000000000001560000000000000000000000000000002a00000000000000015700000000000000
*00000000000000002a0000000000000001580000000000000000000000000000002a0000000000
*000001590000000000000000000000000000002a00000000000000015a00000000000000000000
*00000000002a00000000000000015b000000000000015c000000000000000e6d6f6e6f6964732d
*302e312e33330000000000000013446174612e4d6f6e6f69642e52656475636572000000000000
*0018446174612e4d6f6e6f69642e526564756365722e436861720000000000000020446174612e
*4d6f6e6f69642e4c65786963616c2e555446382e4465636f646572000000000000001844617461
*2e4d6f6e6f69642e526564756365722e576974680000000000000011446174612e4d6f6e6f6964
*2e556e696f6e000000000000000e446174612e47656e657261746f720000000000000022446174
*612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e0000000000000019
*446174612e4d6f6e6f69642e4c65786963616c2e576f7264730000000000000010446174612e4d
*6f6e6f69642e53656c66000000000000001f446174612e47656e657261746f722e436f6d707265
*73736976652e4c5a37380000000000000016446174612e4d6f6e6f69642e46726f6d537472696e
*670000000000000017446174612e4d6f6e6f69642e436f6d62696e61746f727300000000000000
*1e446174612e47656e657261746f722e436f6d70726573736976652e524c450000000000000017
*446174612e4d6f6e6f69642e43617465676f726963616c0000000000000014446174612e4d6f6e
*6f69642e4164646974697665000000000000001a446174612e4d6f6e6f69642e41646469746976
*652e5375676172000000000000001a446174612e4d6f6e6f69642e4d756c7469706c6963617469
*76650000000000000020446174612e4d6f6e6f69642e4d756c7469706c696361746976652e5375
*6761720000000000000013446174612e52696e672e53656d692e4e656172000000000000000e44
*6174612e52696e672e53656d69000000000000000f446174612e4d6f6e6f69642e4f7264000000
*0000000015446174612e52696e672e53656d692e4b6c65656e650000000000000012446174612e
*52696e672e53656d692e4f72640000000000000017446174612e52696e672e53656d692e54726f
*706963616c0000000000000018446174612e52696e672e53656d692e4e6561722e547269650000
*00000000000a446174612e47726f75700000000000000016446174612e47726f75702e436f6d62
*696e61746f72730000000000000019446174612e47726f75702e4d756c7469706c696361746976
*650000000000000010446174612e47726f75702e5375676172000000000000001f446174612e47
*726f75702e4d756c7469706c696361746976652e53756761720000000000000009446174612e52
*696e670000000000000011446174612e52696e672e426f6f6c65616e0000000000000011446174
*612e52696e672e46726f6d4e756d000000000000001b446174612e52696e672e4d6f64756c6172
*41726974686d657469630000000000000010446174612e52696e672e4d6f64756c650000000000
*000017446174612e4d6f6e6f69642e4170706c696361746976650000000000000011446174612e
*4d6f6e6f69642e4d6f6e6164000000000000001a446174612e47656e657261746f722e436f6d62
*696e61746f72730000000000000013446174612e47656e657261746f722e467265650000000000
*000016446174612e52696e672e53656d692e4e61747572616c0000000000000011446174612e52
*696e672e416c67656272610000000000000015446174612e52696e672e53656d692e4269745365
*740000000000000029446174612e52696e672e4d6f64756c652e4175746f6d6174696344696666
*6572656e74696174696f6e000000000000000a446174612e4669656c6400000000000000164461
*74612e4669656c642e566563746f7253706163650000000000000015446174612e4d6f6e6f6964
*2e496e7374616e636573000000000000000462617365000000000000000b446174612e4d6f6e6f
*6964000000000000000a446174612e4d61796265000000000000000d446174612e466f6c646162
*6c650000000000000009446174612e576f726400000000000000086768632d7072696d00000000
*000000094748432e5479706573000000000000000b4748432e556e69636f646500000000000000
*12636f6e7461696e6572732d302e322e302e300000000000000008446174612e4d617000000000
*00000010436f6e74726f6c2e43617465676f72790000000000000008446174612e4f7264000000
*00000000075072656c756465000000000000000f446174612e52696e672e537567617200000000
*00000013436f6e74726f6c2e4170706c69636174697665000000000000000d436f6e74726f6c2e
*4d6f6e61640000000000000009446174612e4c69737400000000000000084748432e426f6f6c00
*000000000000095265647563656442790000000000000009526564756374696f6e000000000000
*000c676574526564756374696f6e0000000000000007526564756365720000000000000004756e
*69740000000000000004736e6f630000000000000004636f6e73000000000000000d666f6c644d
*6170526564756365000000000000000a666f6c64526564756365000000000000000a7265747572
*6e556e6974000000000000000870757265556e6974000000000000000b43686172526564756365
*72000000000000000866726f6d43686172000000000000000b696e76616c696443686172000000
*000000000455544638000000000000000772756e55544638000000000000000b57697468526564
*75636572000000000000000e776974686f7574526564756365720000000000000009556e696f6e
*57697468000000000000000c676574556e696f6e57697468000000000000000c486173556e696f
*6e576974680000000000000009756e696f6e576974680000000000000009656d70747957697468
*0000000000000005556e696f6e0000000000000008676574556e696f6e00000000000000084861
*73556e696f6e0000000000000005656d7074790000000000000005756e696f6e00000000000000
*05436861723800000000000000086765744368617238000000000000000656616c756573000000
*000000000967657456616c75657300000000000000044b65797300000000000000076765744b65
*7973000000000000000947656e657261746f720000000000000004456c656d0000000000000009
*6d617052656475636500000000000000056d6170546f00000000000000076d617046726f6d0000
*000000000006726564756365000000000000000d6d617052656475636557697468000000000000
*000a72656475636557697468000000000000000e536f75726365506f736974696f6e0000000000
*0000035461620000000000000007436f6c756d6e7300000000000000054c696e65730000000000
*000003506f73000000000000000c536f75726365436f6c756d6e000000000000000a536f757263
*654c696e6500000000000000076e657874546162000000000000000b73746172744f6646696c65
*000000000000000c736f75726365436f6c756d6e000000000000000a736f757263654c696e6500
*0000000000001273686f77536f75726365506f736974696f6e0000000000000007556e6c696e65
*64000000000000000a72756e556e6c696e65640000000000000008556e73706163656400000000
*0000000b72756e556e7370616365640000000000000005576f726473000000000000000872756e
*576f726473000000000000000872756e4c696e65730000000000000009776f72647346726f6d00
*000000000000096c696e657346726f6d000000000000000453656c660000000000000007676574
*53656c6600000000000000044c5a373800000000000000066465636f6465000000000000000665
*6e636f64650000000000000008656e636f64654571000000000000001270726f705f6465636f64
*655f656e636f6465000000000000001470726f705f6465636f64655f656e636f64654571000000
*000000000a46726f6d537472696e67000000000000000d67657446726f6d537472696e67000000
*00000000056379636c65000000000000000672657065617400000000000000097265706c696361
*7465000000000000002170726f705f7265706c69636174655f72696768745f6469737472696275
*746976650000000000000003524c450000000000000006676574524c4500000000000000035275
*6e000000000000000a656e636f64654c697374000000000000001670726f705f6465636f64655f
*656e636f64654c6973740000000000000007434d6f6e6f6964000000000000000547456e646f00
*0000000000000867657447456e646f000000000000001063617465676f7279546f4d6f6e6f6964
*00000000000000106d6f6e6f6964546f43617465676f72790000000000000004706c7573000000
*00000000047a65726f00000000000000012b000000000000000345787000000000000000066765
*7445787000000000000000034c6f6700000000000000066765744c6f67000000000000000e4d75
*6c7469706c6963617469766500000000000000036f6e65000000000000000574696d6573000000
*00000000012a0000000000000011526967687453656d694e65617252696e670000000000000010
*4c65667453656d694e65617252696e67000000000000000752696e676f69640000000000000008
*53656d6952696e67000000000000000b4d696e5072696f72697479000000000000000e6765744d
*696e5072696f72697479000000000000000b4d61785072696f72697479000000000000000e6765
*744d61785072696f7269747900000000000000034d696e00000000000000066765744d696e0000
*0000000000034d617800000000000000066765744d617800000000000000096d696e66696e6974
*790000000000000008696e66696e697479000000000000000d4b6c65656e65416c676562726100
*000000000000047374617200000000000000085072696f7269747900000000000000084d617842
*6f756e6400000000000000084d696e426f756e6400000000000000054f72646572000000000000
*00086765744f72646572000000000000000854726f706963616c000000000000000b6765745472
*6f706963616c0000000000000004547269650000000000000005746f74616c0000000000000005
*6c6162656c00000000000000086368696c6472656e000000000000000973696e676c65746f6e00
*000000000000046e756c6c000000000000000547726f75700000000000000007676e6567617465
*00000000000000056d696e7573000000000000000967737562747261637400000000000000134d
*756c7469706c6963617469766547726f757000000000000000046f766572000000000000000575
*6e646572000000000000000667726563697000000000000000012d00000000000000066e656761
*74650000000000000008737562747261637400000000000000012f00000000000000025c5c0000
*0000000000057265636970000000000000000452696e670000000000000008426f6f6c52696e67
*000000000000000b676574426f6f6c52696e67000000000000000746726f6d4e756d0000000000
*00000a67657446726f6d4e756d00000000000000074d6f64756c617200000000000000076d6f64
*756c757300000000000000034d6f6400000000000000066765744d6f6400000000000000137769
*7468496e74656772616c4d6f64756c757300000000000000064d6f64756c65000000000000000b
*52696768744d6f64756c6500000000000000022e2a000000000000000a4c6566744d6f64756c65
*00000000000000022a2e0000000000000003417070000000000000000667657441707000000000
*00000003416c740000000000000006676574416c74000000000000000954726176657273616c00
*0000000000000c67657454726176657273616c000000000000000d736e6f635472617665727361
*6c00000000000000034d6f6e00000000000000066765744d6f6e00000000000000084d6f6e6164
*53756d000000000000000b6765744d6f6e616453756d0000000000000006416374696f6e000000
*0000000009676574416374696f6e000000000000000a736e6f63416374696f6e00000000000000
*0974726176657273655f0000000000000004666f725f00000000000000046173756d0000000000
*0000056d61704d5f0000000000000005666f724d5f00000000000000046d73756d000000000000
*0007666f6c644d61700000000000000009636f6e6361744d61700000000000000004666f6c6400
*00000000000006746f4c6973740000000000000003616e6400000000000000026f720000000000
*000003616e790000000000000003616c6c000000000000000373756d000000000000000770726f
*647563740000000000000004656c656d00000000000000076e6f74456c656d0000000000000006
*66696c746572000000000000000a66696c74657257697468000000000000000466696e64000000
*000000000446726565000000000000000c416e7947656e657261746f7200000000000000074e61
*747572616c00000000000000076e61747572616c000000000000000852416c6765627261000000
*0000000006426974536574000000000000000473697a65000000000000000466756c6c00000000
*0000000a636f6d706c656d656e74000000000000000866726f6d4c697374000000000000001366
*726f6d44697374696e63744173634c6973740000000000000006696e7365727400000000000000
*0664656c65746500000000000000066d656d6265720000000000000009746f496e746567657200
*0000000000000e6973436f6d706c656d656e746564000000000000000c696e7465727365637469
*6f6e00000000000000014400000000000000046c69667400000000000000016400000000000000
*054669656c64000000000000000b566563746f72537061636500000000000000064d6f6e6f6964
*00000000000000054d617962650000000000000008466f6c6461626c6500000000000000076d61
*7070656e6400000000000000076d636f6e63617400000000000000066d656d7074790000000000
*0000076765744475616c00000000000000044475616c0000000000000007617070456e646f0000
*000000000004456e646f0000000000000006676574416c6c0000000000000003416c6c00000000
*00000006676574416e790000000000000003416e79000000000000000667657453756d00000000
*0000000353756d000000000000000a67657450726f64756374000000000000000750726f647563
*740000000000000008676574466972737400000000000000054669727374000000000000000767
*65744c61737400000000000000044c617374000000000000000e66696e676572747265652d302e
*30000000000000000f446174612e46696e67657254726565000000000000000a46696e67657254
*72656500000000000000076d65617375726500000000000000084748432e576f72640000000000
*000005576f72643800000000000000044368617200000000000000076973537061636500000000
*00000005546f6b656e00000000000000034d6170000000000000000843617465676f7279000000
*00000000033e3e3e00000000000000033c3c3c00000000000000012e0000000000000002696400
*0000000000000b4748432e436c617373657300000000000000036d696e00000000000000074e6f
*7468696e6700000000000000036d617800000000000000084748432e456e756d00000000000000
*086d6178426f756e6400000000000000086d696e426f756e6400000000000000074748432e4e75
*6d000000000000000b4170706c69636174697665000000000000000b416c7465726e6174697665
*00000000000000084748432e4261736500000000000000054d6f6e616400000000000000094d6f
*6e6164506c75730000000000000004666c697000000000000000084748432e4c69737400000000
*00000006636f6e6361740000000000000004426f6f6c000000000000000d5f636f756e7441744c
*65617374000000000000000c5f636f756e7441744d6f737400000000000000065f636f756e7400
*000000000000086578706f6e656e7400000000000000045f68776d00000000000000086d616e74
*6973736100000000000000095f756e69766572736500000000000000095f66726f6d456e756d00
*000000000000026273000000000000000c7265636f6d706c656d656e7400000000000000107073
*6575646f436f6d706c656d656e74000000000000000464696666000000000000000a6469666665
*72656e6365000000000000000b6173417267547970654f6600000000000000077265636f756e74
*000000000000000368776d
hunk ./doc/html/monoids/src/Data-Monoid-Applicative.html 84
-<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Applicative.html 86
-<a name="line-78"></a><span class='hs-comment'>-- | if @m@ is a 'Module' over @r@ and @f@ is a 'Applicative' then @f `App` m@ is a 'Module' over @r@ as well</span>
+<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Applicative.html 88
-<a name="line-80"></a><a name="App"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getApp</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-81"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span><span class='hs-conid'>Copointed</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>
-<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-84"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span>
-<a name="line-85"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>gnegate</span>
-<a name="line-89"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>minus</span>
-<a name="line-90"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>gsubtract</span>
-<a name="line-91"></a>
-<a name="line-92"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-93"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-94"></a>
-<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-96"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-80"></a><span class='hs-comment'>-- | if @m@ is a 'Module' over @r@ and @f@ is a 'Applicative' then @f `App` m@ is a 'Module' over @r@ as well</span>
+<a name="line-81"></a>
+<a name="line-82"></a><a name="App"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>App</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>App</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getApp</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
+<a name="line-83"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span><span class='hs-conid'>Copointed</span><span class='hs-layout'>)</span>
+<a name="line-84"></a>
+<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-86"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span>
+<a name="line-87"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span>
+<a name="line-88"></a>
+<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-90"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>gnegate</span>
+<a name="line-91"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>minus</span>
+<a name="line-92"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>gsubtract</span>
+<a name="line-93"></a>
+<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-95"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
+<a name="line-96"></a>
+<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`App`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Monad.html 94
-<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Monad.html 96
-<a name="line-88"></a><span class='hs-comment'>-- | if @m@ is a 'Module' over @r@ and @f@ is a 'Monad' then @f `Mon` m@ is a 'Module' as well</span>
+<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Monoid-Monad.html 98
-<a name="line-90"></a><a name="Mon"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMon</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-91"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-94"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-95"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-varid'>gnegate</span>
-<a name="line-99"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>minus</span>
-<a name="line-100"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>gsubtract</span>
-<a name="line-101"></a>
-<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-103"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-107"></a>
-<a name="line-108"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-109"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-110"></a>
-<a name="line-111"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-90"></a><span class='hs-comment'>-- | if @m@ is a 'Module' over @r@ and @f@ is a 'Monad' then @f `Mon` m@ is a 'Module' as well</span>
+<a name="line-91"></a>
+<a name="line-92"></a><a name="Mon"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMon</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
+<a name="line-93"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
+<a name="line-94"></a>
+<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-96"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
+<a name="line-97"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
+<a name="line-98"></a>
+<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-100"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-varid'>gnegate</span>
+<a name="line-101"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>minus</span>
+<a name="line-102"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>gsubtract</span>
+<a name="line-103"></a>
+<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-105"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
+<a name="line-106"></a>
+<a name="line-107"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-108"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
+<a name="line-109"></a>
+<a name="line-110"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-111"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
+<a name="line-112"></a>
+<a name="line-113"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`Mon`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Ring-Algebra.html 12
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Algebra</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RAlgebra</span>
hunk ./doc/html/monoids/src/Data-Ring-Algebra.html 17
-<a name="line-9"></a><a name="Algebra"></a><span class='hs-comment'>-- |  </span>
-<a name="line-10"></a><a name="Algebra"></a><span class='hs-comment'>-- @r *. (x * y) = (r *. x) * y = x * (r *. y)@</span>
-<a name="line-11"></a><a name="Algebra"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><a name="Algebra"></a><span class='hs-comment'>-- @(x * y) .* r = y * (x .* r) = (y .* r) * x@</span>
-<a name="line-13"></a><a name="Algebra"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Algebra</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> 
+<a name="line-9"></a><a name="RAlgebra"></a><span class='hs-comment'>-- | Algebra over a (near) (semi) ring.</span>
+<a name="line-10"></a><a name="RAlgebra"></a><span class='hs-comment'>--</span>
+<a name="line-11"></a><a name="RAlgebra"></a><span class='hs-comment'>-- @r *. (x * y) = (r *. x) * y = x * (r *. y)@</span>
+<a name="line-12"></a><a name="RAlgebra"></a><span class='hs-comment'>--</span>
+<a name="line-13"></a><a name="RAlgebra"></a><span class='hs-comment'>-- @(x * y) .* r = y * (x .* r) = (y .* r) * x@</span>
+<a name="line-14"></a><a name="RAlgebra"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RAlgebra</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> 
hunk ./doc/html/monoids/src/Data-Ring-Boolean.html 48
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>SemiRing</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ring</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span>
+<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ringoid</span> <span class='hs-conid'>BoolRing</span>
+<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-conid'>BoolRing</span>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-conid'>BoolRing</span>
+<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>SemiRing</span> <span class='hs-conid'>BoolRing</span>
+<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ring</span> <span class='hs-conid'>BoolRing</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyword'>where</span>
+<a name="line-47"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span>
hunk ./doc/html/monoids/src/Data-Ring-FromNum.html 49
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>    
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Integer</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span>
-<a name="line-48"></a>
+<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-46"></a>    
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Integer</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span>
+<a name="line-49"></a>
hunk ./doc/html/monoids/src/Data-Ring-ModularArithmetic.html 76
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Modular</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`Mod`</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Ring-Module-AutomaticDifferentiation.html 37
-<a name="line-29"></a><a name="lift"></a><span class='hs-definition'>lift</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span>
+<a name="line-29"></a><a name="lift"></a><span class='hs-definition'>lift</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span>
hunk ./doc/html/monoids/src/Data-Ring-Module-AutomaticDifferentiation.html 40
-<a name="line-32"></a><a name="infinitesimal"></a><span class='hs-definition'>infinitesimal</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span>
+<a name="line-32"></a><a name="infinitesimal"></a><span class='hs-definition'>infinitesimal</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span>
hunk ./doc/html/monoids/src/Data-Ring-Module-AutomaticDifferentiation.html 75
-<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>SemiRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ring</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-73"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-74"></a>    <span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-75"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-78"></a>    <span class='hs-varid'>arbitrary</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-conid'>D</span> <span class='hs-varid'>arbitrary</span> <span class='hs-varid'>arbitrary</span>
-<a name="line-79"></a>    <span class='hs-varid'>shrink</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>shrink</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>shrink</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CoArbitrary</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>coarbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&gt;&lt;</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>m</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="d"></a><span class='hs-definition'>d</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-keyword'>forall</span> <span class='hs-varid'>s</span><span class='hs-varop'>.</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span><span class='hs-layout'>,</span><span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-85"></a><span class='hs-definition'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>y'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-conid'>D</span> <span class='hs-varid'>y</span> <span class='hs-varid'>y'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>infinitesimal</span>
-<a name="line-86"></a>
+<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ringoid</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>SemiRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ring</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-72"></a>
+<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-74"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-75"></a>    <span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-76"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>
+<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-79"></a>    <span class='hs-varid'>arbitrary</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-conid'>D</span> <span class='hs-varid'>arbitrary</span> <span class='hs-varid'>arbitrary</span>
+<a name="line-80"></a>    <span class='hs-varid'>shrink</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>shrink</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>shrink</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-81"></a>
+<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CoArbitrary</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-83"></a>    <span class='hs-varid'>coarbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>r</span> <span class='hs-varop'>&gt;&lt;</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>m</span>
+<a name="line-84"></a>
+<a name="line-85"></a><a name="d"></a><span class='hs-definition'>d</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`Module`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-keyword'>forall</span> <span class='hs-varid'>s</span><span class='hs-varop'>.</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>D</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span><span class='hs-layout'>,</span><span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-86"></a><span class='hs-definition'>d</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>y'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-conid'>D</span> <span class='hs-varid'>y</span> <span class='hs-varid'>y'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>infinitesimal</span>
+<a name="line-87"></a>
hunk ./doc/html/monoids/src/Data-Ring-Semi-BitSet.html 359
-<a name="line-351"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-351"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Show</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Show</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-BitSet.html 409
-<a name="line-401"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-402"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-403"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-404"></a>
-<a name="line-405"></a><span class='hs-comment'>-- idempotent monoid</span>
-<a name="line-406"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-407"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
-<a name="line-408"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-409"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-410"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
-<a name="line-411"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-412"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-413"></a>
-<a name="line-414"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>times</span>
-<a name="line-415"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>times</span>
-<a name="line-416"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-417"></a>
-<a name="line-418"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Algebra</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-419"></a>    
-<a name="line-420"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-421"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-422"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toList</span>
+<a name="line-401"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-402"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-403"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-404"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-405"></a>
+<a name="line-406"></a><span class='hs-comment'>-- idempotent monoid</span>
+<a name="line-407"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-408"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
+<a name="line-409"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-410"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-411"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
+<a name="line-412"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-413"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-414"></a>
+<a name="line-415"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>times</span>
+<a name="line-416"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>times</span>
+<a name="line-417"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-418"></a>
+<a name="line-419"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Enum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RAlgebra</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-420"></a>    
+<a name="line-421"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-422"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>BitSet</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-423"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toList</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Kleene.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Ring/Semi/Kleene.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Kleene</span> 
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
+<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>KleeneAlgebra</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>star</span>
+<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-6"></a>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
+<a name="line-8"></a>
+<a name="line-9"></a><a name="KleeneAlgebra"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>SemiRing</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>KleeneAlgebra</span> <span class='hs-varid'>r</span> <span class='hs-keyword'>where</span>
+<a name="line-10"></a>    <span class='hs-varid'>star</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
+</pre></body>
+</html>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Natural.html 107
-<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-conid'>Natural</span>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-conid'>Natural</span>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>SemiRing</span> <span class='hs-conid'>Natural</span>
-<a name="line-102"></a>
-<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>()</span>
-<a name="line-106"></a>
-<a name="line-107"></a><span class='hs-comment'>-- idempotent monoids</span>
-<a name="line-108"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span> 
-<a name="line-109"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-110"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-111"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span> 
-<a name="line-112"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-113"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
-<a name="line-114"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Any</span> 
-<a name="line-115"></a>
-<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span> 
-<a name="line-117"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-118"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-119"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span> 
-<a name="line-120"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-121"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-122"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>All</span>
-<a name="line-123"></a>
-<a name="line-124"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-125"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-126"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-127"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-128"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-129"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-130"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
-<a name="line-131"></a>
-<a name="line-132"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-133"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-134"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-136"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-137"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-138"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-139"></a>
-<a name="line-140"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Ordering</span> <span class='hs-keyword'>where</span> 
-<a name="line-141"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-142"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-143"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Ordering</span> <span class='hs-keyword'>where</span> 
-<a name="line-144"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-145"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
-<a name="line-146"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Ordering</span>
-<a name="line-147"></a>
-<a name="line-148"></a><span class='hs-comment'>-- other monoids</span>
-<a name="line-149"></a>
-<a name="line-150"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-151"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-153"></a>
-<a name="line-154"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-155"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-156"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-157"></a>
-<a name="line-158"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-159"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-160"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-161"></a>
-<a name="line-162"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span>
-<a name="line-163"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-conid'>Product</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-conid'>Natural</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>^</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-164"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-165"></a>
-<a name="line-166"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-167"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-168"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-169"></a>
-<a name="line-170"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-171"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-172"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-173"></a>
-<a name="line-174"></a><span class='hs-comment'>-- FromString</span>
-<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-176"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-177"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-178"></a>
-<a name="line-179"></a><span class='hs-comment'>-- Self</span>
-<a name="line-180"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-181"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-182"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-183"></a>
-<a name="line-184"></a><span class='hs-comment'>-- Free Generator</span>
-<a name="line-185"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-186"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-187"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-188"></a>
-<a name="line-189"></a><span class='hs-comment'>-- RLE Seq</span>
-<a name="line-190"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-191"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-192"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-193"></a>
-<a name="line-194"></a><span class='hs-comment'>-- Categorical</span>
-<a name="line-195"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-196"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-197"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-198"></a>
-<a name="line-199"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>CMonoid</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-200"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>CMonoid</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-201"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>CMonoid</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-202"></a>
-<a name="line-203"></a><span class='hs-comment'>-- Alternative</span>
-<a name="line-204"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-205"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-206"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> 
-<a name="line-207"></a>
-<a name="line-208"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-209"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-210"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
-<a name="line-211"></a>
-<a name="line-212"></a><span class='hs-comment'>--instance (Alternative f, Monoid m) =&gt; LeftModule Natural  (App f m) where (*.) = flip Monoid.replicate</span>
-<a name="line-213"></a><span class='hs-comment'>--instance (Alternative f, Monoid m) =&gt; RightModule Natural (App f m) where (.*) = Monoid.replicate</span>
-<a name="line-214"></a><span class='hs-comment'>--instance (Alternative f, Monoid m) =&gt; Module Natural (App f m)  </span>
-<a name="line-215"></a>
-<a name="line-216"></a><span class='hs-comment'>-- Monad</span>
-<a name="line-217"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-218"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-219"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> 
-<a name="line-220"></a>
-<a name="line-221"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-222"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-223"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
-<a name="line-224"></a>
-<a name="line-225"></a><span class='hs-comment'>--instance (MonadPlus f, Monoid m) =&gt; LeftModule Natural  (Mon f m) where (*.) = flip Monoid.replicate</span>
-<a name="line-226"></a><span class='hs-comment'>--instance (MonadPlus f, Monoid m)  =&gt; RightModule Natural (Mon f m) where (.*) = Monoid.replicate</span>
-<a name="line-227"></a><span class='hs-comment'>--instance (MonadPlus f, Monoid m) =&gt; Module Natural (Mon f m)  </span>
-<a name="line-228"></a>
-<a name="line-229"></a><span class='hs-comment'>-- Lexical </span>
-<a name="line-230"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-231"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-232"></a>    <span class='hs-varid'>n</span> <span class='hs-varop'>*.</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromIntegral</span> <span class='hs-varid'>n</span> <span class='hs-varop'>*</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> 
-<a name="line-233"></a>    <span class='hs-varid'>n</span> <span class='hs-varop'>*.</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromIntegral</span> <span class='hs-varid'>n</span> <span class='hs-varop'>*</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span>
-<a name="line-234"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> 
-<a name="line-235"></a>    <span class='hs-varid'>n</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span> <span class='hs-varid'>t</span> <span class='hs-varid'>n</span> 
-<a name="line-236"></a>
-<a name="line-237"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span>
-<a name="line-238"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> 
-<a name="line-239"></a>
-<a name="line-240"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-241"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-242"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
-<a name="line-243"></a>
-<a name="line-244"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-245"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
-<a name="line-246"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
-<a name="line-247"></a>
+<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ringoid</span> <span class='hs-conid'>Natural</span>
+<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-conid'>Natural</span>
+<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-conid'>Natural</span>
+<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>SemiRing</span> <span class='hs-conid'>Natural</span>
+<a name="line-103"></a>
+<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
+<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
+<a name="line-106"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>()</span>
+<a name="line-107"></a>
+<a name="line-108"></a><span class='hs-comment'>-- idempotent monoids</span>
+<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span> 
+<a name="line-110"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-111"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-112"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span> 
+<a name="line-113"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-114"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
+<a name="line-115"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Any</span> 
+<a name="line-116"></a>
+<a name="line-117"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span> 
+<a name="line-118"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-119"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-120"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span> 
+<a name="line-121"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-122"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-123"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>All</span>
+<a name="line-124"></a>
+<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-126"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-127"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-128"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-129"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-130"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-131"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-132"></a>
+<a name="line-133"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-134"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-135"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-136"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-137"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-138"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-139"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-140"></a>
+<a name="line-141"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Ordering</span> <span class='hs-keyword'>where</span> 
+<a name="line-142"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-143"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
+<a name="line-144"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Ordering</span> <span class='hs-keyword'>where</span> 
+<a name="line-145"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>.*</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-146"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
+<a name="line-147"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-conid'>Ordering</span>
+<a name="line-148"></a>
+<a name="line-149"></a><span class='hs-comment'>-- other monoids</span>
+<a name="line-150"></a>
+<a name="line-151"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-153"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
+<a name="line-154"></a>
+<a name="line-155"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-156"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-157"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-158"></a>
+<a name="line-159"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-160"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-161"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-162"></a>
+<a name="line-163"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span>
+<a name="line-164"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-conid'>Product</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-conid'>Natural</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>^</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-165"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-166"></a>
+<a name="line-167"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-168"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-169"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-170"></a>
+<a name="line-171"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-172"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-173"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-174"></a>
+<a name="line-175"></a><span class='hs-comment'>-- FromString</span>
+<a name="line-176"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-177"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-178"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-179"></a>
+<a name="line-180"></a><span class='hs-comment'>-- Self</span>
+<a name="line-181"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-182"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-183"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-184"></a>
+<a name="line-185"></a><span class='hs-comment'>-- Free Generator</span>
+<a name="line-186"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-187"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-188"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Free</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-189"></a>
+<a name="line-190"></a><span class='hs-comment'>-- RLE Seq</span>
+<a name="line-191"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span>  <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-192"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-193"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-194"></a>
+<a name="line-195"></a><span class='hs-comment'>-- Categorical</span>
+<a name="line-196"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-197"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-198"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-199"></a>
+<a name="line-200"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>CMonoid</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-201"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>CMonoid</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-202"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>CMonoid</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-203"></a>
+<a name="line-204"></a><span class='hs-comment'>-- Alternative</span>
+<a name="line-205"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-206"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-207"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> 
+<a name="line-208"></a>
+<a name="line-209"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-210"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-211"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alt</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-212"></a>
+<a name="line-213"></a><span class='hs-comment'>--instance (Alternative f, Monoid m) =&gt; LeftModule Natural  (App f m) where (*.) = flip Monoid.replicate</span>
+<a name="line-214"></a><span class='hs-comment'>--instance (Alternative f, Monoid m) =&gt; RightModule Natural (App f m) where (.*) = Monoid.replicate</span>
+<a name="line-215"></a><span class='hs-comment'>--instance (Alternative f, Monoid m) =&gt; Module Natural (App f m)  </span>
+<a name="line-216"></a>
+<a name="line-217"></a><span class='hs-comment'>-- Monad</span>
+<a name="line-218"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-219"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-220"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> 
+<a name="line-221"></a>
+<a name="line-222"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-223"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-224"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> 
+<a name="line-225"></a>
+<a name="line-226"></a><span class='hs-comment'>--instance (MonadPlus f, Monoid m) =&gt; LeftModule Natural  (Mon f m) where (*.) = flip Monoid.replicate</span>
+<a name="line-227"></a><span class='hs-comment'>--instance (MonadPlus f, Monoid m)  =&gt; RightModule Natural (Mon f m) where (.*) = Monoid.replicate</span>
+<a name="line-228"></a><span class='hs-comment'>--instance (MonadPlus f, Monoid m) =&gt; Module Natural (Mon f m)  </span>
+<a name="line-229"></a>
+<a name="line-230"></a><span class='hs-comment'>-- Lexical </span>
+<a name="line-231"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
+<a name="line-232"></a>    <span class='hs-num'>0</span> <span class='hs-varop'>*.</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-233"></a>    <span class='hs-varid'>n</span> <span class='hs-varop'>*.</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromIntegral</span> <span class='hs-varid'>n</span> <span class='hs-varop'>*</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> 
+<a name="line-234"></a>    <span class='hs-varid'>n</span> <span class='hs-varop'>*.</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromIntegral</span> <span class='hs-varid'>n</span> <span class='hs-varop'>*</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>c</span>
+<a name="line-235"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>*.</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> 
+<a name="line-236"></a>    <span class='hs-varid'>n</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>t</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span> <span class='hs-varid'>t</span> <span class='hs-varid'>n</span> 
+<a name="line-237"></a>
+<a name="line-238"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span>
+<a name="line-239"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> 
+<a name="line-240"></a>
+<a name="line-241"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span>  <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-242"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-243"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
+<a name="line-244"></a>
+<a name="line-245"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-246"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-varid'>replicate</span>
+<a name="line-247"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-conid'>Natural</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
hunk ./doc/html/monoids/src/Data-Ring-Semi-Natural.html 257
-<a name="line-249"></a><span class='hs-comment'>-- TODO</span>
-<a name="line-250"></a><span class='hs-comment'>--</span>
-<a name="line-251"></a><span class='hs-comment'>-- Control.Monad.*</span>
-<a name="line-252"></a><span class='hs-comment'>-- ParsecT</span>
-<a name="line-253"></a><span class='hs-comment'>-- FingerTree</span>
-<a name="line-254"></a><span class='hs-comment'>-- Int, Integer, Ratio</span>
-<a name="line-255"></a><span class='hs-comment'>-- SourcePosition</span>
-<a name="line-256"></a><span class='hs-comment'>-- Replace Natural here with some other notion of NonNegative a </span>
-<a name="line-257"></a><span class='hs-comment'>-- Words, Lines, Unspaced, Unlined</span>
-<a name="line-258"></a><span class='hs-comment'>-- Union/UnionWith, Map, Set, etc.</span>
-<a name="line-259"></a><span class='hs-comment'>-- Max, Min, MaxPriority, MinPriority idempotent</span>
-<a name="line-260"></a><span class='hs-comment'>-- BoolRing</span>
-<a name="line-261"></a><span class='hs-comment'>-- Seq</span>
+<a name="line-249"></a>
+<a name="line-250"></a><span class='hs-comment'>-- TODO</span>
+<a name="line-251"></a><span class='hs-comment'>--</span>
+<a name="line-252"></a><span class='hs-comment'>-- Control.Monad.*</span>
+<a name="line-253"></a><span class='hs-comment'>-- ParsecT</span>
+<a name="line-254"></a><span class='hs-comment'>-- FingerTree</span>
+<a name="line-255"></a><span class='hs-comment'>-- Int, Integer, Ratio</span>
+<a name="line-256"></a><span class='hs-comment'>-- SourcePosition</span>
+<a name="line-257"></a><span class='hs-comment'>-- Replace Natural here with some other notion of NonNegative a </span>
+<a name="line-258"></a><span class='hs-comment'>-- Words, Lines, Unspaced, Unlined</span>
+<a name="line-259"></a><span class='hs-comment'>-- Union/UnionWith, Map, Set, etc.</span>
+<a name="line-260"></a><span class='hs-comment'>-- Max, Min, MaxPriority, MinPriority idempotent</span>
+<a name="line-261"></a><span class='hs-comment'>-- BoolRing</span>
+<a name="line-262"></a><span class='hs-comment'>-- Seq</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Near.html 30
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LeftSemiNearRing</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RightSemiNearRing</span>
-<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LRWS</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SRWS</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LState</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SState</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LWriter</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SWriter</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-47"></a>
-<a name="line-48"></a><a name="LeftSemiNearRing"></a><span class='hs-comment'>-- | @a * (b + c) = (a * b) + (a * c)@</span>
-<a name="line-49"></a><a name="LeftSemiNearRing"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> 
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-comment'>-- 'Monoid' transformers</span>
-<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-54"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReducedBy</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-56"></a>
-<a name="line-57"></a><a name="RightSemiNearRing"></a><span class='hs-comment'>-- | @(a + b) * c = (a * c) + (b * c)@</span>
-<a name="line-58"></a><a name="RightSemiNearRing"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> 
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-comment'>-- 'Monoid' transformers</span>
-<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReducedBy</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-64"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-comment'>-- non-'Monad' instances</span>
-<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-comment'>-- 'Monad' instances</span>
-<a name="line-70"></a><span class='hs-comment'>-- Every 'MonadPlus' over a 'Monoid' with an appropriate 'Multiplicative' instance</span>
-<a name="line-71"></a><span class='hs-comment'>-- for 'liftM2 mappend' is a 'RightSemiNearRing' by 'MonadPlus' left-distributivity</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Ringoid</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LeftSemiNearRing</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RightSemiNearRing</span>
+<a name="line-25"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-26"></a>
+<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LRWS</span>
+<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SRWS</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LState</span>
+<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SState</span>
+<a name="line-34"></a>
+<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LWriter</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SWriter</span>
+<a name="line-37"></a>
+<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
+<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
+<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
+<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
+<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-43"></a>
+<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
+<a name="line-48"></a>
+<a name="line-49"></a><a name="Ringoid"></a><span class='hs-comment'>-- | @0@ annihilates `times`</span>
+<a name="line-50"></a><a name="Ringoid"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span>
+<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReducedBy</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-54"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
+<a name="line-57"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-58"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>LState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-64"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>LRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-65"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>LWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-67"></a>
+<a name="line-68"></a><a name="LeftSemiNearRing"></a><span class='hs-comment'>-- | @a * (b + c) = (a * b) + (a * c)@</span>
+<a name="line-69"></a><a name="LeftSemiNearRing"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> 
+<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReducedBy</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Near.html 83
-<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-78"></a>
-<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>
-<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-84"></a>
-<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-88"></a>
-<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>
+<a name="line-75"></a><a name="RightSemiNearRing"></a><span class='hs-comment'>-- | @(a + b) * c = (a * c) + (b * c)@</span>
+<a name="line-76"></a><a name="RightSemiNearRing"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Ringoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> 
+<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReducedBy</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-80"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
+<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-84"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-90"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Near.html 100
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>
+<a name="line-92"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-93"></a>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Ord.html 46
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-42"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-51"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getOrder</span>
-<a name="line-52"></a>
-<a name="line-53"></a><a name="Priority"></a><span class='hs-comment'>-- | A 'SemiRing' which adds 'minBound' and 'maxBound' to a pre-existing type.</span>
-<a name="line-54"></a><a name="Priority"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Bounded</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>minBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-58"></a>    <span class='hs-varid'>maxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-62"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MinBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-63"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>b</span>
-<a name="line-64"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-65"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-66"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-67"></a>
-<a name="line-68"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-69"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-70"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-71"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
-<a name="line-72"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-73"></a>  
-<a name="line-74"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-75"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
-<a name="line-76"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-77"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-78"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-79"></a>
-<a name="line-80"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-81"></a>  <span class='hs-varid'>arbitrary</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>frequency</span> <span class='hs-keyglyph'>[</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MinBound</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>10</span><span class='hs-layout'>,</span> <span class='hs-varid'>fmap</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>arbitrary</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MaxBound</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>]</span>
-<a name="line-84"></a>  <span class='hs-varid'>shrink</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span> <span class='hs-conop'>:</span> <span class='hs-conid'>MaxBound</span> <span class='hs-conop'>:</span> <span class='hs-varid'>fmap</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>shrink</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-85"></a>  <span class='hs-varid'>shrink</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
-<a name="line-86"></a>  <span class='hs-varid'>shrink</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
-<a name="line-87"></a>
-<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-89"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MinBound</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-layout'>(</span><span class='hs-num'>0</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>a</span>
-<a name="line-91"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MaxBound</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-layout'>(</span><span class='hs-num'>2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span>
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-94"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-95"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minBound</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-99"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maxBound</span>
-<a name="line-100"></a>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
-<a name="line-107"></a>
-<a name="line-108"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-109"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-110"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
-<a name="line-111"></a>
-<a name="line-112"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-113"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-114"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
-<a name="line-115"></a>
-<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
-<a name="line-117"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-118"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-119"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-120"></a>
-<a name="line-121"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
-<a name="line-122"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
+<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-43"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
+<a name="line-44"></a>
+<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
+<a name="line-46"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-47"></a>
+<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
+<a name="line-49"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
+<a name="line-50"></a>
+<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
+<a name="line-52"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getOrder</span>
+<a name="line-53"></a>
+<a name="line-54"></a><a name="Priority"></a><span class='hs-comment'>-- | A 'SemiRing' which adds 'minBound' and 'maxBound' to a pre-existing type.</span>
+<a name="line-55"></a><a name="Priority"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
+<a name="line-56"></a>
+<a name="line-57"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Bounded</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-58"></a>    <span class='hs-varid'>minBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
+<a name="line-59"></a>    <span class='hs-varid'>maxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
+<a name="line-60"></a>
+<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-62"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
+<a name="line-63"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MinBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
+<a name="line-64"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>b</span>
+<a name="line-65"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
+<a name="line-66"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
+<a name="line-67"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
+<a name="line-68"></a>
+<a name="line-69"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
+<a name="line-70"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
+<a name="line-71"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-72"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
+<a name="line-73"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-74"></a>  
+<a name="line-75"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-76"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
+<a name="line-77"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-78"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
+<a name="line-79"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
+<a name="line-80"></a>
+<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-82"></a>  <span class='hs-varid'>arbitrary</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>frequency</span> <span class='hs-keyglyph'>[</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MinBound</span><span class='hs-layout'>)</span>
+<a name="line-83"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>10</span><span class='hs-layout'>,</span> <span class='hs-varid'>fmap</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>arbitrary</span><span class='hs-layout'>)</span>
+<a name="line-84"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MaxBound</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>]</span>
+<a name="line-85"></a>  <span class='hs-varid'>shrink</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span> <span class='hs-conop'>:</span> <span class='hs-conid'>MaxBound</span> <span class='hs-conop'>:</span> <span class='hs-varid'>fmap</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>shrink</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-86"></a>  <span class='hs-varid'>shrink</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
+<a name="line-87"></a>  <span class='hs-varid'>shrink</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
+<a name="line-88"></a>
+<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CoArbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-90"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MinBound</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-layout'>(</span><span class='hs-num'>0</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span>
+<a name="line-91"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>a</span>
+<a name="line-92"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MaxBound</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-layout'>(</span><span class='hs-num'>2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span><span class='hs-layout'>)</span>
+<a name="line-93"></a>
+<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-95"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-96"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minBound</span>
+<a name="line-97"></a>
+<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-99"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+<a name="line-100"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maxBound</span>
+<a name="line-101"></a>
+<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-106"></a>
+<a name="line-107"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-108"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
+<a name="line-109"></a>
+<a name="line-110"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-111"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
+<a name="line-112"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
+<a name="line-113"></a>
+<a name="line-114"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-115"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
+<a name="line-116"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
+<a name="line-117"></a>
+<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
+<a name="line-119"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
+<a name="line-120"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-121"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
+<a name="line-122"></a>
+<a name="line-123"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
+<a name="line-124"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
hunk ./doc/html/monoids/src/Data-Ring-Semi-Tropical.html 79
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ringoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
+<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
}
