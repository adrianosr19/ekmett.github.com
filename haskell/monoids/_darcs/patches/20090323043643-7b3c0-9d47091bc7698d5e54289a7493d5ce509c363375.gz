[added Data.Monoid.Ord to correct for the lack of Priority, Min, and Max monoids
ekmett@gmail.com**20090323043643] {
addfile ./Data/Monoid/Ord.hs
hunk ./Data/Monoid/Ord.hs 1
+module Data.Monoid.Ord 
+    ( module Data.Monoid
+    , Min(Min,getMin)
+    , Max(Max,getMax)
+    , Priority(Priority,getPriority)
+    ) where
+
+import Data.Monoid (Monoid, mappend, mempty)
+    
+newtype Min a = Min { getMin :: a } deriving (Eq,Ord,Show,Read,Bounded)
+
+instance (Ord a, Bounded a) => Monoid (Min a) where
+    mempty = Min maxBound
+    Min a `mappend` Min b = Min (a `min` b)
+
+newtype Max a = Max { getMax :: a } deriving (Eq,Ord,Show,Read,Bounded)
+
+instance (Ord a, Bounded a) => Monoid (Max a) where
+    mempty = Max minBound
+    Max a `mappend` Max b = Max (a `max` b)
+
+newtype Priority a = Priority { getPriority :: Maybe a } deriving (Eq,Ord,Show,Read)
+
+instance (Ord a) => Monoid (Priority a) where
+    mempty = Priority Nothing
+    Priority a `mappend` Priority b = Priority (a `max` b)
addfile ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Ord</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>lexical-monoids-0.1.1: Lexical monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Ord.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Ord</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMin"
+></A
+><B
+>Min</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#Min"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMin"
+></A
+><B
+>Min</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMin"
+></A
+><B
+>getMin</B
+> :: a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Min')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Min" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMax"
+></A
+><B
+>Max</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#Max"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMax"
+></A
+><B
+>Max</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMax"
+></A
+><B
+>getMax</B
+> :: a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Max" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3APriority"
+></A
+><B
+>Priority</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#Priority"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3APriority"
+></A
+><B
+>Priority</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetPriority"
+></A
+><B
+>getPriority</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Priority')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Priority" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
+>Priority</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
hunk ./dist/doc/html/lexical-monoids/doc-index.html 190
+>getMax</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMax"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMin</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMin"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getPriority</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 268
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/lexical-monoids/doc-index.html 295
+><TD CLASS="indexentry" COLSPAN="2"
+>Max</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMax"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 324
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Min</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMin"
+>Data.Monoid.Ord</A
+></TD
hunk ./dist/doc/html/lexical-monoids/doc-index.html 350
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Priority</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3APriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3APriority"
+>Data.Monoid.Ord</A
+></TD
hunk ./dist/doc/html/lexical-monoids/index.html 145
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Ord.html"
+>Data.Monoid.Ord</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
binary ./dist/doc/html/lexical-monoids/lexical-monoids.haddock
oldhex
*0d0cface00040000000000000eb800000000000008892300000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000600000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000007000000000000001a0000000000000000
*0000000000000007000000000000001b0000000000000000000000000000000700000000000000
*1c00000000000000000000000000000007000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000707000000000000000000000000000000010000000000070000000000000023000000
*000000002400000000000000250000000000000000000000000000000100000000000000020000
*000000000003040000000000000000000000000000000100000000000000020000000000000003
*0000000000000000000000000000000200000000000a0000000000000023000000000000002400
*000000000000250000000000000000000000000000000100000000000000020000000000000003
*000000000000000400000000000000050000000000000006030000000000000004000000000000
*000600000000000000050000000000000000000000000000000300000000001100000000000000
*230000000000000024000000000000002500000000000000000000000000000001000000000000
*000200000000000000030000000000000004000000000000000500000000000000060000000000
*00000700000000000000080000000000000009000000000000000a000000000000000b00000000
*0000000c000000000000000d070000000000000007000000000000000900000000000000080000
*00000000000c000000000000000b000000000000000a000000000000000d000000000000000000
*0000000000000400000000000c0000000000000023000000000000002400000000000000250000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*000000000000050000000000000006000000000000000e000000000000000f0200000000000000
*0e000000000000000f0000000000000000000000000000000500000000000b0000000000000023
*000000000000002400000000000000250000000000000000000000000000000100000000000000
*020000000000000003000000000000001000000000000000110000000000000012000000000000
*001304000000000000001000000000000000110000000000000012000000000000001300000000
*000000000000000000000006000000000021000000000000002300000000000000260000000000
*000024000000000000002500000000000000270000000000000028000000000000002900000000
*0000002a000000000000002b000000000000002c000000000000002d000000000000002e000000
*000000002f00000000000000300000000000000031000000000000003200000000000000330000
*000000000034000000000000003500000000000000360000000000000037000000000000003800
*00000000000039000000000000003a000000000000003b000000000000003c000000000000003d
*000000000000003e00000000000000140000000000000015000000000000001600000000000000
*170000000000000018050000000000000014000000000000001500000000000000160000000000
*000017000000000000001800000000000000000000000000000007000000000014000000000000
*002300000000000000240000000000000025000000000000000000000000000000010000000000
*000002000000000000000300000000000000040000000000000005000000000000000600000000
*00000019000000000000001a000000000000001b000000000000001c000000000000001d000000
*000000001e000000000000001f0000000000000020000000000000002100000000000000220a00
*0000000000001e000000000000001f000000000000001d0000000000000020000000000000001b
*000000000000001c0000000000000019000000000000001a000000000000002100000000000000
*22000000000000003f000000000000000000000000000000010300000000000000080000000000
*000000000000000000000100000000000000000900000000000000000000000000000001000000
*00000000000a0000000000000000000000000000000100000000000000000b0000000000000000
*000000000000000203000000000000000c00000000000000000000000000000002000000000000
*00000d0000000000000000000000000000000200000000000000000e0000000000000000000000
*000000000303000000000000000f00000000000000000000000000000003030000000000000010
*000000000000000000000000000000030300000000000000110000000000000000000000000000
*000300000000000000001200000000000000000000000000000003000000000000000013000000
*000000000000000000000000030000000000000000140000000000000000000000000000000300
*000000000000001500000000000000000000000000000004030000000000000016000000000000
*000000000000000000040000000000000000170000000000000000000000000000000503000000
*000000001800000000000000000000000000000005000000000000000019000000000000000000
*0000000000000500000000000000001a0000000000000000000000000000000500000000000000
*001b0000000000000000000000000000000603000000000000001c000000000000000000000000
*0000000603000000000000001d0000000000000000000000000000000600000000000000001e00
*00000000000000000000000000000600000000000000001f000000000000000000000000000000
*060000000000000000200000000000000000000000000000000703000000000000002100000000
*000000000000000000000007000000000000000022000000000000000000000000000000070300
*000000000000230000000000000000000000000000000700000000000000002400000000000000
*000000000000000007030000000000000025000000000000000000000000000000070300000000
*000000260000000000000000000000000000000700000000000000002700000000000000000000
*000000000007000000000000000028000000000000000000000000000000070000000000000000
*290000000000000000000000000000000700000000000000002a000000000000002b0000000000
*00002c00000000000000002d000000000000002b000000000000002c00000000000000002e0000
*00000000002b000000000000002c03000000000000002f000000000000002b000000000000002c
*000000000000000030000000000000002b000000000000002c0000000000000000310000000000
*00002b000000000000002c010000000000000032000000000000002b000000000000002c030000
*000000000032000000000000002b000000000000002c000000000000000033000000000000002b
*000000000000002c010000000000000034000000000000002b000000000000002c030000000000
*000034000000000000002b000000000000002c000000000000000035000000000000002b000000
*000000002c010000000000000036000000000000002b000000000000002c030000000000000036
*000000000000002b000000000000002c000000000000000037000000000000002b000000000000
*002c010000000000000038000000000000002b000000000000002c030000000000000038000000
*000000002b000000000000002c000000000000000039000000000000002b000000000000002c01
*000000000000003a000000000000002b000000000000002c03000000000000003a000000000000
*002b000000000000002c00000000000000003b000000000000002b000000000000002c01000000
*000000003c000000000000002b000000000000002c03000000000000003c000000000000002b00
*0000000000002c00000000000000003d000000000000002b000000000000002c01000000000000
*003e000000000000002b000000000000002c03000000000000003e000000000000002b00000000
*0000002c00000000000000003f000000000000002b000000000000002c01000000000000004000
*0000000000002b000000000000002c030000000000000040000000000000004100000000000000
*156c65786963616c2d6d6f6e6f6964732d302e312e310000000000000013446174612e4d6f6e6f
*69642e526564756365720000000000000018446174612e4d6f6e6f69642e526564756365722e43
*6861720000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f
*736974696f6e0000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e
*4465636f6465720000000000000018446174612e4d6f6e6f69642e526564756365722e57697468
*0000000000000015446174612e4d6f6e6f69642e47656e657261746f7200000000000000194461
*74612e4d6f6e6f69642e4c65786963616c2e576f72647300000000000000075265647563657200
*000000000000067265647563650000000000000007726564756365720000000000000007726564
*7563656c000000000000000b4368617252656475636572000000000000000a7265647563654368
*6172000000000000000b696e76616c696443686172000000000000000e536f75726365506f7369
*74696f6e000000000000000c536f75726365436f6c756d6e000000000000000a536f757263654c
*696e65000000000000000b73746172744f6646696c65000000000000000c736f75726365436f6c
*756d6e000000000000000a736f757263654c696e65000000000000001273686f77536f75726365
*506f736974696f6e000000000000000455544638000000000000000772756e5554463800000000
*0000000b5769746852656475636572000000000000000e72756e57697468526564756365720000
*00000000000b7769746852656475636572000000000000000e776974686f757452656475636572
*000000000000000947656e657261746f720000000000000004456c656d00000000000000096d61
*70726564756365000000000000000a6d617072656475636572000000000000000a6d6170726564
*7563656c0000000000000007556e6c696e6564000000000000000a72756e556e6c696e65640000
*000000000008556e737061636564000000000000000b72756e556e737061636564000000000000
*00054c696e65730000000000000005576f726473000000000000000872756e576f726473000000
*000000000872756e4c696e65730000000000000009776f72647346726f6d00000000000000096c
*696e657346726f6d000000000000000462617365000000000000000b446174612e4d6f6e6f6964
*00000000000000076d617070656e6400000000000000066d656d70747900000000000000064d6f
*6e6f696400000000000000076d636f6e63617400000000000000076765744475616c0000000000
*0000044475616c0000000000000007617070456e646f0000000000000004456e646f0000000000
*000006676574416c6c0000000000000003416c6c0000000000000006676574416e790000000000
*000003416e79000000000000000667657453756d000000000000000353756d000000000000000a
*67657450726f64756374000000000000000750726f647563740000000000000008676574466972
*73740000000000000005466972737400000000000000076765744c61737400000000000000044c
*617374
newhex
*0d0cface000400000000000011300000000000000a202c00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000002000000000000000b0000000000000000000000000000000200
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000800000000000000250000000000000000000000000000000800
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b0000000000000000000000000000000808000000000000000000000000
*0000000100000000000c000000000000002c000000000000002d000000000000002e0000000000
*000000000000000000000100000000000000020000000000000003000000000000000400000000
*000000050000000000000006000000000000000700000000000000080900000000000000060000
*000000000007000000000000000800000000000000030000000000000004000000000000000500
*000000000000000000000000000001000000000000000200000000000000000000000000000002
*000000000007000000000000002c000000000000002d000000000000002e000000000000000900
*0000000000000a000000000000000b000000000000000c04000000000000000900000000000000
*0a000000000000000b000000000000000c0000000000000000000000000000000300000000000a
*000000000000002c000000000000002d000000000000002e000000000000000900000000000000
*0a000000000000000b000000000000000c000000000000000d000000000000000e000000000000
*000f03000000000000000d000000000000000f000000000000000e000000000000000000000000
*00000004000000000011000000000000002c000000000000002d000000000000002e0000000000
*000009000000000000000a000000000000000b000000000000000c000000000000000d00000000
*0000000e000000000000000f000000000000001000000000000000110000000000000012000000
*000000001300000000000000140000000000000015000000000000001607000000000000001000
*000000000000120000000000000011000000000000001500000000000000140000000000000013
*00000000000000160000000000000000000000000000000500000000000c000000000000002c00
*0000000000002d000000000000002e0000000000000009000000000000000a000000000000000b
*000000000000000c000000000000000d000000000000000e000000000000000f00000000000000
*170000000000000018020000000000000017000000000000001800000000000000000000000000
*00000600000000000b000000000000002c000000000000002d000000000000002e000000000000
*0009000000000000000a000000000000000b000000000000000c00000000000000190000000000
*00001a000000000000001b000000000000001c040000000000000019000000000000001a000000
*000000001b000000000000001c0000000000000000000000000000000700000000002100000000
*0000002c000000000000002f000000000000002d000000000000002e0000000000000030000000
*000000003100000000000000320000000000000033000000000000003400000000000000350000
*000000000036000000000000003700000000000000380000000000000039000000000000003a00
*0000000000003b000000000000003c000000000000003d000000000000003e000000000000003f
*000000000000004000000000000000410000000000000042000000000000004300000000000000
*44000000000000004500000000000000460000000000000047000000000000001d000000000000
*001e000000000000001f0000000000000020000000000000002105000000000000001d00000000
*0000001e000000000000001f000000000000002000000000000000210000000000000000000000
*0000000008000000000014000000000000002c000000000000002d000000000000002e00000000
*00000009000000000000000a000000000000000b000000000000000c000000000000000d000000
*000000000e000000000000000f0000000000000022000000000000002300000000000000240000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002a000000000000002b0a0000000000000027000000000000002800000000000000
*260000000000000029000000000000002400000000000000250000000000000022000000000000
*0023000000000000002a000000000000002b000000000000004800000000000000000000000000
*000001030000000000000009000000000000000000000000000000010100000000000000090000
*000000000000000000000000000100000000000000000a00000000000000000000000000000001
*03000000000000000b0000000000000000000000000000000101000000000000000b0000000000
*000000000000000000000100000000000000000c00000000000000000000000000000001030000
*00000000000d0000000000000000000000000000000101000000000000000d0000000000000000
*000000000000000100000000000000000e00000000000000000000000000000002030000000000
*00000f000000000000000000000000000000020000000000000000100000000000000000000000
*000000000200000000000000001100000000000000000000000000000002000000000000000012
*000000000000000000000000000000030300000000000000130000000000000000000000000000
*000300000000000000001400000000000000000000000000000003000000000000000015000000
*000000000000000000000000040300000000000000160000000000000000000000000000000403
*000000000000001700000000000000000000000000000004030000000000000018000000000000
*000000000000000000040000000000000000190000000000000000000000000000000400000000
*000000001a0000000000000000000000000000000400000000000000001b000000000000000000
*0000000000000400000000000000001c0000000000000000000000000000000503000000000000
*001d0000000000000000000000000000000500000000000000001e000000000000000000000000
*0000000603000000000000001f0000000000000000000000000000000600000000000000002000
*000000000000000000000000000006000000000000000021000000000000000000000000000000
*060000000000000000220000000000000000000000000000000703000000000000002300000000
*000000000000000000000007030000000000000024000000000000000000000000000000070000
*000000000000250000000000000000000000000000000700000000000000002600000000000000
*000000000000000007000000000000000027000000000000000000000000000000080300000000
*000000280000000000000000000000000000000800000000000000002900000000000000000000
*00000000000803000000000000002a000000000000000000000000000000080000000000000000
*2b0000000000000000000000000000000803000000000000002c00000000000000000000000000
*00000803000000000000002d0000000000000000000000000000000800000000000000002e0000
*000000000000000000000000000800000000000000002f00000000000000000000000000000008
*000000000000000030000000000000000000000000000000080000000000000000310000000000
*000032000000000000003300000000000000003400000000000000320000000000000033000000
*000000000035000000000000003200000000000000330300000000000000360000000000000032
*000000000000003300000000000000003700000000000000320000000000000033000000000000
*000038000000000000003200000000000000330100000000000000390000000000000032000000
*00000000330300000000000000390000000000000032000000000000003300000000000000003a
*0000000000000032000000000000003301000000000000003b0000000000000032000000000000
*003303000000000000003b0000000000000032000000000000003300000000000000003c000000
*0000000032000000000000003301000000000000003d0000000000000032000000000000003303
*000000000000003d0000000000000032000000000000003300000000000000003e000000000000
*0032000000000000003301000000000000003f0000000000000032000000000000003303000000
*000000003f00000000000000320000000000000033000000000000000040000000000000003200
*000000000000330100000000000000410000000000000032000000000000003303000000000000
*004100000000000000320000000000000033000000000000000042000000000000003200000000
*000000330100000000000000430000000000000032000000000000003303000000000000004300
*000000000000320000000000000033000000000000000044000000000000003200000000000000
*330100000000000000450000000000000032000000000000003303000000000000004500000000
*000000320000000000000033000000000000000046000000000000003200000000000000330100
*000000000000470000000000000032000000000000003303000000000000004700000000000000
*4800000000000000156c65786963616c2d6d6f6e6f6964732d302e312e31000000000000000f44
*6174612e4d6f6e6f69642e4f72640000000000000013446174612e4d6f6e6f69642e5265647563
*65720000000000000018446174612e4d6f6e6f69642e526564756365722e436861720000000000
*000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e0000
*000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f64657200
*00000000000018446174612e4d6f6e6f69642e526564756365722e576974680000000000000015
*446174612e4d6f6e6f69642e47656e657261746f720000000000000019446174612e4d6f6e6f69
*642e4c65786963616c2e576f72647300000000000000085072696f72697479000000000000000b
*6765745072696f7269747900000000000000034d617800000000000000066765744d6178000000
*00000000034d696e00000000000000066765744d696e0000000000000007526564756365720000
*000000000006726564756365000000000000000772656475636572000000000000000772656475
*63656c000000000000000b4368617252656475636572000000000000000a726564756365436861
*72000000000000000b696e76616c696443686172000000000000000e536f75726365506f736974
*696f6e000000000000000c536f75726365436f6c756d6e000000000000000a536f757263654c69
*6e65000000000000000b73746172744f6646696c65000000000000000c736f75726365436f6c75
*6d6e000000000000000a736f757263654c696e65000000000000001273686f77536f7572636550
*6f736974696f6e000000000000000455544638000000000000000772756e555446380000000000
*00000b5769746852656475636572000000000000000e72756e5769746852656475636572000000
*000000000b7769746852656475636572000000000000000e776974686f75745265647563657200
*0000000000000947656e657261746f720000000000000004456c656d00000000000000096d6170
*726564756365000000000000000a6d617072656475636572000000000000000a6d617072656475
*63656c0000000000000007556e6c696e6564000000000000000a72756e556e6c696e6564000000
*0000000008556e737061636564000000000000000b72756e556e73706163656400000000000000
*054c696e65730000000000000005576f726473000000000000000872756e576f72647300000000
*0000000872756e4c696e65730000000000000009776f72647346726f6d00000000000000096c69
*6e657346726f6d000000000000000462617365000000000000000b446174612e4d6f6e6f696400
*000000000000076d617070656e6400000000000000066d656d70747900000000000000064d6f6e
*6f696400000000000000076d636f6e63617400000000000000076765744475616c000000000000
*00044475616c0000000000000007617070456e646f0000000000000004456e646f000000000000
*0006676574416c6c0000000000000003416c6c0000000000000006676574416e79000000000000
*0003416e79000000000000000667657453756d000000000000000353756d000000000000000a67
*657450726f64756374000000000000000750726f64756374000000000000000867657446697273
*740000000000000005466972737400000000000000076765744c61737400000000000000044c61
*7374
addfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Ord.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Priority</span><span class='hs-layout'>(</span><span class='hs-conid'>Priority</span><span class='hs-layout'>,</span><span class='hs-varid'>getPriority</span><span class='hs-layout'>)</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-9"></a>    
+<a name="line-10"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-11"></a>
+<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
+<a name="line-14"></a>    <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-15"></a>
+<a name="line-16"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>
+<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-19"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
+<a name="line-20"></a>    <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>
+<a name="line-22"></a><a name="Priority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>
+<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-25"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-26"></a>    <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+</pre></body>
+</html>
hunk ./lexical-monoids.cabal 21
+    Data.Monoid.Ord
}
