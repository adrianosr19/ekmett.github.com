[data.monoid.generator cleanup
ekmett@gmail.com**20090325073324] {
hunk ./Data/Monoid/Generator.hs 10
-    , mtraverse_
-    , mfor_
-    , mmapM_
-    , mforM_
-    , mconcatMap
+    , m_traverse_
+    , m_for_
+    , m_mapM_
+    , m_forM_
+    , m_concatMap
+    , m_and
+    , m_or
+    , m_any
+    , m_all
hunk ./Data/Monoid/Generator.hs 68
-mtraverse_ :: (Generator c, Applicative f) => (Elem c -> f b) -> c -> f ()
-mtraverse_ f = getTraversal . mapReduce f
+m_traverse_ :: (Generator c, Applicative f) => (Elem c -> f b) -> c -> f ()
+m_traverse_ f = getTraversal . mapReduce f
hunk ./Data/Monoid/Generator.hs 71
-mfor_ :: (Generator c, Applicative f) => c -> (Elem c -> f b) -> f ()
-mfor_ = flip mtraverse_
+m_for_ :: (Generator c, Applicative f) => c -> (Elem c -> f b) -> f ()
+m_for_ = flip m_traverse_
hunk ./Data/Monoid/Generator.hs 74
-mmapM_ :: (Generator c, Monad m) => (Elem c -> m b) -> c -> m ()
-mmapM_ f = getAction . mapReduce f
+m_mapM_ :: (Generator c, Monad m) => (Elem c -> m b) -> c -> m ()
+m_mapM_ f = getAction . mapReduce f
hunk ./Data/Monoid/Generator.hs 77
-mforM_ :: (Generator c, Monad m) => c -> (Elem c -> m b) -> m ()
-mforM_ = flip mmapM_
+m_forM_ :: (Generator c, Monad m) => c -> (Elem c -> m b) -> m ()
+m_forM_ = flip m_mapM_
hunk ./Data/Monoid/Generator.hs 80
-mconcatMap :: Generator c => (Elem c -> [b]) -> c -> [b]
-mconcatMap = mapReduce
+m_concatMap :: Generator c => (Elem c -> [b]) -> c -> [b]
+m_concatMap = mapReduce
+
+m_and :: (Generator c, Elem c ~ Bool) => c -> Bool
+m_and = getAll . reduce
+
+m_or :: (Generator c, Elem c ~ Bool) => c -> Bool
+m_or = getAny . reduce
+
+m_any :: Generator c => (Elem c -> Bool) -> c -> Bool
+m_any f = getAny . mapReduce f
+
+m_all :: Generator c => (Elem c -> Bool) -> c -> Bool
+m_all f = getAll . mapReduce f
hunk ./Data/Monoid/Ord.hs 1
+{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}
hunk ./Data/Monoid/Ord.hs 16
-    ( module Data.Monoid
+    ( module Data.Monoid.Reducer
hunk ./Data/Monoid/Ord.hs 27
-import Data.Monoid (Monoid, mappend, mempty)
+import Data.Monoid.Reducer (Reducer, unit, Monoid, mappend, mempty)
hunk ./Data/Monoid/Ord.hs 37
+instance (Ord a, Bounded a) => Reducer a (Max a) where
+    unit = Max
+
hunk ./Data/Monoid/Ord.hs 47
+instance (Ord a, Bounded a) => Reducer a (Min a) where
+    unit = Min
+
hunk ./Data/Monoid/Ord.hs 57
+instance Ord a => Reducer (Maybe a) (MaxPriority a) where
+    unit = MaxPriority
+
+instance Ord a => Reducer a (MaxPriority a) where
+    unit = MaxPriority . Just
+
hunk ./Data/Monoid/Ord.hs 76
+instance Ord a => Reducer (Maybe a) (MinPriority a) where
+    unit = MinPriority
+
+instance Ord a => Reducer a (MinPriority a) where
+    unit = MinPriority . Just
+
hunk ./Data/Monoid/Reducer.hs 8
-import Data.Monoid (Monoid, mempty, mappend)
+import Data.Monoid
hunk ./Data/Monoid/Reducer.hs 50
+instance Reducer Bool Any where
+    unit = Any
+
+instance Reducer Bool All where
+    unit = All
+
+instance Reducer (a -> a) (Endo a) where
+    unit = Endo
+
+instance Monoid a => Reducer a (Dual a) where
+    unit = Dual
+    
+instance Num a => Reducer a (Sum a) where
+    unit = Sum
+
+instance Num a => Reducer a (Product a) where
+    unit = Product
+
+instance Reducer (Maybe a) (First a) where
+    unit = First
+
+instance Reducer a (First a) where
+    unit = First . Just
+
+instance Reducer (Maybe a) (Last a) where
+    unit = Last
+
+instance Reducer a (Last a) where
+    unit = Last . Just
+
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 387
-><A NAME="v%3Amtraverse_"
+><A NAME="v%3Am_traverse_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 390
->mtraverse_</B
+>m_traverse_</B
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 399
-><A HREF="src/Data-Monoid-Generator.html#mtraverse_"
+><A HREF="src/Data-Monoid-Generator.html#m_traverse_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 415
-><A NAME="v%3Amfor_"
+><A NAME="v%3Am_for_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 418
->mfor_</B
+>m_for_</B
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 427
-><A HREF="src/Data-Monoid-Generator.html#mfor_"
+><A HREF="src/Data-Monoid-Generator.html#m_for_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 443
-><A NAME="v%3AmmapM_"
+><A NAME="v%3Am_mapM_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 446
->mmapM_</B
+>m_mapM_</B
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 455
-><A HREF="src/Data-Monoid-Generator.html#mmapM_"
+><A HREF="src/Data-Monoid-Generator.html#m_mapM_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 471
-><A NAME="v%3AmforM_"
+><A NAME="v%3Am_forM_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 474
->mforM_</B
+>m_forM_</B
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 483
-><A HREF="src/Data-Monoid-Generator.html#mforM_"
+><A HREF="src/Data-Monoid-Generator.html#m_forM_"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 499
-><A NAME="v%3AmconcatMap"
+><A NAME="v%3Am_concatMap"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 502
->mconcatMap</B
+>m_concatMap</B
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 509
-><A HREF="src/Data-Monoid-Generator.html#mconcatMap"
+><A HREF="src/Data-Monoid-Generator.html#m_concatMap"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Am_and"
+></A
+><B
+>m_and</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#m_and"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Am_or"
+></A
+><B
+>m_or</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#m_or"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Am_any"
+></A
+><B
+>m_any</B
+> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#m_any"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Am_all"
+></A
+><B
+>m_all</B
+> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+>) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#m_all"
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 114
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 218
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 335
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 518
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 713
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 771
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 906
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 962
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 191
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
+>All</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
+>All</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
+>Any</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
+>Bool</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
+>Any</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 393
+> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
+>Last</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
+>First</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AProduct"
+>Product</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
+>Num</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ASum"
+>Sum</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
+>Dual</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 443
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 555
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
+>Last</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
+>Last</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
+>First</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
+>First</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 715
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
+>Endo</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
+>Endo</A
+> a)</TD
+></TR
hunk ./dist/doc/html/monoids/doc-index.html 112
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 118
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 154
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 160
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 166
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 204
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 210
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 256
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 262
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 278
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 284
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 326
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 340
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 346
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 352
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 358
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 404
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 410
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 476
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 482
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 512
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 574
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mconcatMap</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmconcatMap"
->Data.Monoid.Generator</A
-></TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 592
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mforM_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmforM_"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mfor_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Amfor_"
->Data.Monoid.Generator</A
-></TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 636
->mmapM_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmmapM_"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./dist/doc/html/monoids/doc-index.html 664
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 674
->mtraverse_</TD
+>mzero</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Monad</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_all</TD
hunk ./dist/doc/html/monoids/doc-index.html 682
-><A HREF="Data-Monoid-Generator.html#v%3Amtraverse_"
+><A HREF="Data-Monoid-Generator.html#v%3Am_all"
hunk ./dist/doc/html/monoids/doc-index.html 688
->mzero</TD
+>m_and</TD
hunk ./dist/doc/html/monoids/doc-index.html 690
->Data.Monoid.Monad</TD
+><A HREF="Data-Monoid-Generator.html#v%3Am_and"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_any</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_any"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_concatMap</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_concatMap"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_forM_</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_forM_"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_for_</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_for_"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_mapM_</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_mapM_"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_or</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_or"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>m_traverse_</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3Am_traverse_"
+>Data.Monoid.Generator</A
+></TD
hunk ./dist/doc/html/monoids/doc-index.html 764
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 770
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 792
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 932
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 938
->Data.Monoid.Generator</TD
+>Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
hunk ./dist/doc/html/monoids/doc-index.html 1018
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*0d0cface000400000000000022ff000000000000154b4900000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000200000000000000
*0f0000000000000000000000000000000200000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000009000000000000002d0000000000000000000000000000000900000000
*0000002e00000000000000000000000000000009000000000000002f0000000000000000000000
*000000000900000000000000300000000000000000000000000000000a00000000000000310000
*000000000000000000000000000a00000000000000320000000000000000000000000000000a00
*000000000000330000000000000000000000000000000a00000000000000340000000000000000
*000000000000000b00000000000000350000000000000000000000000000000b00000000000000
*360000000000000000000000000000000b00000000000000370000000000000000000000000000
*000b00000000000000380000000000000000000000000000000b00000000000000390000000000
*000000000000000000000b000000000000003a0000000000000000000000000000000b00000000
*0000003b0000000000000000000000000000000b000000000000003c0000000000000000000000
*000000000b000000000000003d0000000000000000000000000000000b000000000000003e0000
*000000000000000000000000000b000000000000003f0000000000000000000000000000000c00
*000000000000400000000000000000000000000000000c00000000000000410000000000000000
*000000000000000c00000000000000420000000000000000000000000000000c00000000000000
*430000000000000000000000000000000c00000000000000440000000000000000000000000000
*000c00000000000000450000000000000000000000000000000c00000000000000460000000000
*000000000000000000000c00000000000000470000000000000000000000000000000c00000000
*000000480000000000000000000000000000000c0d000000000000000000000000000000010000
*000004000000000000000003010204000000540000006800000065000000200104010000000000
*00000049000000000000000d000000000000000e01020100000020010701020100000028010401
*00000000000000004a000000000000000d000000000000000f0102010000002c01040100000000
*000000004b000000000000000d0000000000000010020100000029010206000000200000006f00
*000076000000650000007200000020010701040100000000000000004c000000000000000d0000
*000000000010020200000020000000610102070000002000000077000000680000006500000072
*000000650000002001040100000000000000004b000000000000000d0000000000000010021400
*00002000000069000000730000002000000074000000680000006500000020000000740000006f
*0000007000000020000000650000006c000000650000006d000000650000006e00000074000000
*0a0000000000000003030102040000005400000068000000650000002001040100000000000000
*0049000000000000000d000000000000000e010201000000200107010201000000280104010000
*0000000000004d000000000000000d000000000000000f0102010000002c010401000000000000
*00004b000000000000000d0000000000000010020100000029010206000000200000006f000000
*76000000650000007200000020010701040100000000000000004c000000000000000d00000000
*000000100202000000200000006101020700000020000000770000006800000065000000720000
*00650000002001040100000000000000004b000000000000000d00000000000000100217000000
*2000000069000000730000002000000074000000680000006500000020000000620000006f0000
*0074000000740000006f0000006d00000020000000650000006c000000650000006d0000006500
*00006e000000740000000a00000000000000060301020400000054000000680000006500000020
*010401000000000000000049000000000000000d000000000000000e01020a0000002000000067
*0000006900000076000000650000006e0000002000000062000000790000002001070102010000
*002801040100000000000000004a000000000000000d000000000000000f0102010000002c0104
*0100000000000000004e000000000000000d000000000000001102010000002902010000000a00
*000000000000090301020400000054000000680000006500000020010401000000000000000049
*000000000000000d000000000000000e0102010000002001070102010000002801040100000000
*000000004d000000000000000d000000000000000f0102010000002c0104010000000000000000
*4f000000000000000d000000000000001102010000002902010000000a0f000000000000005000
*000000000000510000000000000049000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*0700000000000000080000000000000009000000000000000a000000000000000b0c0000000000
*000009000000000000000a000000000000000b0000000000000006000000000000000700000000
*000000080000000000000003000000000000000400000000000000050000000000000000000000
*000000000100000000000000020000000000000000000000000000000200000000000700000000
*0000005000000000000000510000000000000049000000000000000c000000000000000d000000
*000000000e000000000000000f04000000000000000c000000000000000d000000000000000e00
*0000000000000f0000000000000000000000000000000300000000000a00000000000000500000
*0000000000510000000000000049000000000000000c000000000000000d000000000000000e00
*0000000000000f0000000000000010000000000000001100000000000000120300000000000000
*100000000000000012000000000000001100000000000000000000000000000004000000000011
*000000000000005000000000000000510000000000000049000000000000000c00000000000000
*0d000000000000000e000000000000000f00000000000000100000000000000011000000000000
*001200000000000000130000000000000014000000000000001500000000000000160000000000
*000017000000000000001800000000000000190700000000000000130000000000000015000000
*000000001400000000000000180000000000000017000000000000001600000000000000190000
*000000000000000000000000000500000000000c00000000000000500000000000000051000000
*0000000049000000000000000c000000000000000d000000000000000e000000000000000f0000
*00000000001000000000000000110000000000000012000000000000001a000000000000001b02
*000000000000001a000000000000001b0000000000000000000000000000000600000000000b00
*0000000000005000000000000000510000000000000049000000000000000c000000000000000d
*000000000000000e000000000000000f000000000000001c000000000000001d00000000000000
*1e000000000000001f04000000000000001c000000000000001d000000000000001e0000000000
*00001f000000000000000000000000000000070000000000100000000000000052000000000000
*005000000000000000510000000000000049000000000000005300000000000000540000000000
*00000c000000000000000d000000000000000e000000000000000f000000000000002000000000
*000000210000000000000022000000000000002300000000000000240000000000000025060000
*000000000023000000000000002400000000000000250000000000000020000000000000002100
*000000000000220000000000000000000000000000000800000000001300000000000000500000
*000000000055000000000000005600000000000000570000000000000058000000000000005900
*0000000000005a00000000000000510000000000000049000000000000000c000000000000000d
*000000000000000e000000000000000f0000000000000026000000000000002700000000000000
*280000000000000029000000000000002a000000000000002b0600000000000000290000000000
*00002a000000000000002b00000000000000260000000000000027000000000000002800000000
*00000000000000000000001200000000001f000000000000005000000000000000510000000000
*000049000000000000000c000000000000000d000000000000000e000000000000000f00000000
*0000005b000000000000005c000000000000005d000000000000005e000000000000005f000000
*000000006000000000000000610000000000000062000000000000006300000000000000640000
*000000000065000000000000006600000000000000670000000000000068000000000000006900
*0000000000006a000000000000006b000000000000006c000000000000006d000000000000006e
*000000000000006f00000000000000700000000000000071000000000000007200000000000000
*0000000000000000000900000000000b0000000000000050000000000000005100000000000000
*49000000000000000c000000000000000d000000000000000e000000000000000f000000000000
*002c000000000000002d000000000000002e000000000000002f04000000000000002e00000000
*0000002f000000000000002c000000000000002d0000000000000000000000000000000a000000
*00000b000000000000005000000000000000510000000000000049000000000000000c00000000
*0000000d000000000000000e000000000000000f00000000000000300000000000000031000000
*000000003200000000000000330400000000000000320000000000000033000000000000003000
*000000000000310000000000000000000000000000000b00000000002700000000000000500000
*000000000073000000000000005100000000000000490000000000000074000000000000007500
*00000000000076000000000000007700000000000000780000000000000079000000000000007a
*000000000000007b000000000000007c000000000000007d000000000000007e00000000000000
*7f0000000000000080000000000000008100000000000000820000000000000083000000000000
*008400000000000000850000000000000086000000000000008700000000000000880000000000
*000089000000000000008a000000000000008b0000000000000034000000000000003500000000
*00000036000000000000003700000000000000380000000000000039000000000000003a000000
*000000003b000000000000003c000000000000003d000000000000003e0b000000000000003400
*000000000000350000000000000036000000000000003700000000000000380000000000000039
*000000000000003a000000000000003b000000000000003c000000000000003d00000000000000
*3e0000000000000000000000000000000c00000000001400000000000000500000000000000051
*0000000000000049000000000000000c000000000000000d000000000000000e00000000000000
*0f000000000000001000000000000000110000000000000012000000000000003f000000000000
*004000000000000000410000000000000042000000000000004300000000000000440000000000
*0000450000000000000046000000000000004700000000000000480a0000000000000044000000
*000000004500000000000000430000000000000046000000000000004100000000000000420000
*00000000003f000000000000004000000000000000470000000000000048000000000000008c00
*000000000000000000000000000001030000000000000013000000000000000000000000000000
*010100000000000000130000000000000000000000000000000100000000000000001400000000
*000000000000000000000001030000000000000015000000000000000000000000000000010100
*000000000000150000000000000000000000000000000100000000000000001600000000000000
*000000000000000001030000000000000017000000000000000000000000000000010100000000
*000000170000000000000000000000000000000100000000000000001800000000000000000000
*000000000001030000000000000019000000000000000000000000000000010100000000000000
*190000000000000000000000000000000100000000000000001a00000000000000000000000000
*00000203000000000000001b0000000000000000000000000000000200000000000000001c0000
*000000000000000000000000000200000000000000001d00000000000000000000000000000002
*00000000000000001e0000000000000000000000000000000303000000000000001f0000000000
*000000000000000000000300000000000000002000000000000000000000000000000003000000
*000000000021000000000000000000000000000000040300000000000000220000000000000000
*000000000000000403000000000000002300000000000000000000000000000004030000000000
*000024000000000000000000000000000000040000000000000000250000000000000000000000
*000000000400000000000000002600000000000000000000000000000004000000000000000027
*000000000000000000000000000000040000000000000000280000000000000000000000000000
*00050300000000000000290000000000000000000000000000000500000000000000002a000000
*0000000000000000000000000603000000000000002b0000000000000000000000000000000601
*000000000000002b0000000000000000000000000000000600000000000000002c000000000000
*0000000000000000000600000000000000002d0000000000000000000000000000000703000000
*000000002e0000000000000000000000000000000701000000000000002e000000000000000000
*0000000000000700000000000000002f0000000000000000000000000000000703000000000000
*003000000000000000000000000000000007010000000000000030000000000000000000000000
*000000070000000000000000310000000000000000000000000000000803000000000000003200
*000000000000000000000000000008010000000000000032000000000000000000000000000000
*080000000000000000330000000000000000000000000000000803000000000000003400000000
*000000000000000000000008010000000000000034000000000000000000000000000000080000
*000000000000350000000000000000000000000000000903000000000000003600000000000000
*000000000000000009000000000000000037000000000000000000000000000000090300000000
*000000380000000000000000000000000000000900000000000000003900000000000000000000
*00000000000a0300000000000000360000000000000000000000000000000a0000000000000000
*370000000000000000000000000000000a03000000000000003800000000000000000000000000
*00000a0000000000000000390000000000000000000000000000000b03000000000000003a0000
*000000000000000000000000000b03000000000000003b0000000000000000000000000000000b
*00000000000000003c0000000000000000000000000000000b00000000000000003d0000000000
*000000000000000000000b00000000000000003e0000000000000000000000000000000b000000
*00000000003f0000000000000000000000000000000b0000000000000000400000000000000000
*000000000000000b0000000000000000410000000000000000000000000000000b000000000000
*0000420000000000000000000000000000000b0000000000000000430000000000000000000000
*000000000b0000000000000000440000000000000000000000000000000c030000000000000045
*0000000000000000000000000000000c0000000000000000460000000000000000000000000000
*000c0300000000000000470000000000000000000000000000000c000000000000000048000000
*0000000000000000000000000c0300000000000000490000000000000000000000000000000c03
*000000000000004a0000000000000000000000000000000c00000000000000004b000000000000
*0000000000000000000c00000000000000004c0000000000000000000000000000000c00000000
*000000004d0000000000000000000000000000000c00000000000000004e000000000000000d00
*0000000000000e03000000000000004f000000000000000d000000000000005000000000000000
*0051000000000000000d0000000000000010010000000000000052000000000000000d00000000
*00000010030000000000000053000000000000000d000000000000005000000000000000005400
*0000000000000d0000000000000055000000000000000056000000000000000d00000000000000
*55000000000000000057000000000000000d000000000000000e00000000000000005800000000
*0000000d000000000000000e000000000000000059000000000000000d000000000000005a0300
*0000000000005b000000000000000d000000000000005a00000000000000005c00000000000000
*0d000000000000005a00000000000000005d000000000000000d000000000000005e0000000000
*0000005f000000000000000d000000000000005e000000000000000060000000000000000d0000
*00000000005e030000000000000061000000000000000d000000000000005e0000000000000000
*62000000000000000d000000000000005e000000000000000063000000000000000d0000000000
*00005e030000000000000064000000000000006500000000000000660000000000000000670000
*000000000065000000000000006600000000000000006800000000000000650000000000000066
*0100000000000000690000000000000065000000000000006601000000000000006a0000000000
*000065000000000000006601000000000000006b00000000000000650000000000000066010000
*00000000006c0000000000000065000000000000006603000000000000006d0000000000000065
*000000000000006603000000000000006e00000000000000650000000000000066030000000000
*00006f000000000000006500000000000000660300000000000000700000000000000065000000
*000000006600000000000000007100000000000000650000000000000066000000000000000072
*000000000000006500000000000000660000000000000000730000000000000065000000000000
*006600000000000000006300000000000000650000000000000066000000000000000074000000
*000000006500000000000000660000000000000000750000000000000065000000000000006600
*000000000000007600000000000000650000000000000066000000000000000077000000000000
*006500000000000000660000000000000000780000000000000065000000000000006600000000
*00000000790000000000000065000000000000006600000000000000007a000000000000006500
*0000000000006600000000000000007b0000000000000065000000000000006600000000000000
*007c0000000000000065000000000000006600000000000000007d000000000000000d00000000
*0000000e00000000000000007e000000000000000d000000000000000e00000000000000007f00
*0000000000000d000000000000000e010000000000000080000000000000000d00000000000000
*0e030000000000000080000000000000000d000000000000000e00000000000000008100000000
*0000000d000000000000000e010000000000000082000000000000000d000000000000000e0300
*00000000000082000000000000000d000000000000000e00000000000000008300000000000000
*0d000000000000000e010000000000000084000000000000000d000000000000000e0300000000
*00000084000000000000000d000000000000000e000000000000000085000000000000000d0000
*00000000000e010000000000000086000000000000000d000000000000000e0300000000000000
*86000000000000000d000000000000000e000000000000000087000000000000000d0000000000
*00000e010000000000000088000000000000000d000000000000000e0300000000000000880000
*00000000000d000000000000000e000000000000000089000000000000000d000000000000000e
*01000000000000008a000000000000000d000000000000000e03000000000000008a0000000000
*00000d000000000000000e00000000000000008b000000000000000d000000000000000e010000
*00000000008c000000000000000d000000000000000e03000000000000008c000000000000000d
*000000000000000e00000000000000008d000000000000000d000000000000000e010000000000
*00008e000000000000000d000000000000000e03000000000000008e000000000000008f000000
*000000000d6d6f6e6f6964732d302e312e31000000000000000f446174612e4d6f6e6f69642e4f
*72640000000000000013446174612e4d6f6e6f69642e5265647563657200000000000000184461
*74612e4d6f6e6f69642e526564756365722e436861720000000000000022446174612e4d6f6e6f
*69642e4c65786963616c2e536f75726365506f736974696f6e0000000000000020446174612e4d
*6f6e6f69642e4c65786963616c2e555446382e4465636f6465720000000000000018446174612e
*4d6f6e6f69642e526564756365722e576974680000000000000011446174612e4d6f6e6f69642e
*4d6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c69636174697665000000
*000000000f446174612e4d6f6e6f69642e4d61700000000000000012446174612e4d6f6e6f6964
*2e496e744d61700000000000000015446174612e4d6f6e6f69642e47656e657261746f72000000
*0000000019446174612e4d6f6e6f69642e4c65786963616c2e576f726473000000000000000462
*617365000000000000000b446174612e4d6f6e6f69640000000000000008446174612e4f726400
*0000000000000a446174612e4d6179626500000000000000075072656c75646500000000000000
*16446174612e4d6f6e6f69642e46696e67657254726565000000000000000b4d696e5072696f72
*697479000000000000000e6765744d696e5072696f72697479000000000000000b4d6178507269
*6f72697479000000000000000e6765744d61785072696f7269747900000000000000034d696e00
*000000000000066765744d696e00000000000000034d617800000000000000066765744d617800
*00000000000007526564756365720000000000000004756e69740000000000000004736e6f6300
*00000000000004636f6e73000000000000000b4368617252656475636572000000000000000866
*726f6d43686172000000000000000b696e76616c696443686172000000000000000e536f757263
*65506f736974696f6e000000000000000c536f75726365436f6c756d6e000000000000000a536f
*757263654c696e65000000000000000b73746172744f6646696c65000000000000000c736f7572
*6365436f6c756d6e000000000000000a736f757263654c696e65000000000000001273686f7753
*6f75726365506f736974696f6e000000000000000455544638000000000000000772756e555446
*38000000000000000b5769746852656475636572000000000000000e72756e5769746852656475
*636572000000000000000e776974686f75745265647563657200000000000000084d6f6e616453
*756d000000000000000b6765744d6f6e616453756d0000000000000006416374696f6e00000000
*00000009676574416374696f6e0000000000000009416c7465726e617465000000000000000c67
*6574416c7465726e617465000000000000000954726176657273616c000000000000000c676574
*54726176657273616c0000000000000009556e696f6e57697468000000000000000c676574556e
*696f6e576974680000000000000005556e696f6e0000000000000008676574556e696f6e000000
*000000000947656e657261746f720000000000000004456c656d00000000000000096d61705265
*6475636500000000000000056d6170546f00000000000000076d617046726f6d00000000000000
*06726564756365000000000000000a6d74726176657273655f00000000000000056d666f725f00
*000000000000066d6d61704d5f00000000000000066d666f724d5f000000000000000a6d636f6e
*6361744d61700000000000000007556e6c696e6564000000000000000a72756e556e6c696e6564
*0000000000000008556e737061636564000000000000000b72756e556e73706163656400000000
*000000054c696e65730000000000000005576f726473000000000000000872756e576f72647300
*0000000000000872756e4c696e65730000000000000009776f72647346726f6d00000000000000
*096c696e657346726f6d00000000000000064d6f6e6f6964000000000000000b4748432e436c61
*7373657300000000000000036d696e00000000000000074e6f7468696e6700000000000000054d
*6179626500000000000000036d617800000000000000084748432e456e756d0000000000000008
*6d6178426f756e6400000000000000086d696e426f756e6400000000000000076d617070656e64
*00000000000000066d656d707479000000000000000d436f6e74726f6c2e4d6f6e616400000000
*000000094d6f6e6164506c757300000000000000056d706c757300000000000000056d7a65726f
*0000000000000013436f6e74726f6c2e4170706c6963617469766500000000000000022a3e0000
*00000000000470757265000000000000000b4170706c6963617469766500000000000000033c7c
*3e0000000000000005656d707479000000000000000b416c7465726e6174697665000000000000
*000e66696e676572747265652d302e30000000000000000f446174612e46696e67657254726565
*00000000000000023c7c000000000000000573706c697400000000000000023a3e000000000000
*0006456d7074795200000000000000023a3c0000000000000006456d7074794c00000000000000
*05566965774c00000000000000055669657752000000000000000a46696e676572547265650000
*0000000000084d6561737572656400000000000000023e3c00000000000000076d656173757265
*000000000000000964726f70556e74696c0000000000000005666d617027000000000000000866
*726f6d4c69737400000000000000046e756c6c0000000000000007726576657273650000000000
*00000973696e676c65746f6e000000000000000974616b65556e74696c00000000000000097472
*617665727365270000000000000005766965776c00000000000000057669657772000000000000
*00027c3e00000000000000076d636f6e63617400000000000000076765744475616c0000000000
*0000044475616c0000000000000007617070456e646f0000000000000004456e646f0000000000
*000006676574416c6c0000000000000003416c6c0000000000000006676574416e790000000000
*000003416e79000000000000000667657453756d000000000000000353756d000000000000000a
*67657450726f64756374000000000000000750726f647563740000000000000008676574466972
*73740000000000000005466972737400000000000000076765744c61737400000000000000044c
*617374
newhex
*0d0cface00040000000000002a530000000000001c3b4d00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000600000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000009000000000000002d0000000000000000000000000000000900000000
*0000002e00000000000000000000000000000009000000000000002f0000000000000000000000
*000000000900000000000000300000000000000000000000000000000a00000000000000310000
*000000000000000000000000000a00000000000000320000000000000000000000000000000a00
*000000000000330000000000000000000000000000000a00000000000000340000000000000000
*000000000000000b00000000000000350000000000000000000000000000000b00000000000000
*360000000000000000000000000000000b00000000000000370000000000000000000000000000
*000b00000000000000380000000000000000000000000000000b00000000000000390000000000
*000000000000000000000b000000000000003a0000000000000000000000000000000b00000000
*0000003b0000000000000000000000000000000b000000000000003c0000000000000000000000
*000000000b000000000000003d0000000000000000000000000000000b000000000000003e0000
*000000000000000000000000000b000000000000003f0000000000000000000000000000000b00
*000000000000400000000000000000000000000000000b00000000000000410000000000000000
*000000000000000b00000000000000420000000000000000000000000000000b00000000000000
*430000000000000000000000000000000c00000000000000440000000000000000000000000000
*000c00000000000000450000000000000000000000000000000c00000000000000460000000000
*000000000000000000000c00000000000000470000000000000000000000000000000c00000000
*000000480000000000000000000000000000000c00000000000000490000000000000000000000
*000000000c000000000000004a0000000000000000000000000000000c000000000000004b0000
*000000000000000000000000000c000000000000004c0000000000000000000000000000000c0d
*00000000000000000000000000000001000000000020000000000000004d000000000000004e00
*0000000000004f0000000000000050000000000000005100000000000000520000000000000053
*000000000000005400000000000000550000000000000056000000000000005700000000000000
*580000000000000059000000000000005a000000000000005b000000000000005c000000000000
*005d000000000000005e000000000000005f000000000000006000000000000000610000000000
*000062000000000000006300000000000000640000000000000065000000000000006600000000
*000000670000000000000068000000000000000000000000000000010000000000000002000000
*000000000304000000000000000000000000000000010000000000000002000000000000000300
*000000000000000000000000000002000000000023000000000000004d000000000000004e0000
*00000000004f000000000000005000000000000000510000000000000052000000000000005300
*000000000000540000000000000055000000000000005600000000000000570000000000000058
*0000000000000059000000000000005a000000000000005b000000000000005c00000000000000
*5d000000000000005e000000000000005f00000000000000600000000000000061000000000000
*006200000000000000630000000000000064000000000000006500000000000000660000000000
*000067000000000000006800000000000000000000000000000001000000000000000200000000
*000000030000000000000004000000000000000500000000000000060300000000000000040000
*00000000000600000000000000050000000000000000000000000000000300000000002a000000
*000000004d000000000000004e000000000000004f000000000000005000000000000000510000
*000000000052000000000000005300000000000000540000000000000055000000000000005600
*0000000000005700000000000000580000000000000059000000000000005a000000000000005b
*000000000000005c000000000000005d000000000000005e000000000000005f00000000000000
*600000000000000061000000000000006200000000000000630000000000000064000000000000
*006500000000000000660000000000000067000000000000006800000000000000000000000000
*000001000000000000000200000000000000030000000000000004000000000000000500000000
*00000006000000000000000700000000000000080000000000000009000000000000000a000000
*000000000b000000000000000c000000000000000d070000000000000007000000000000000900
*00000000000008000000000000000c000000000000000b000000000000000a000000000000000d
*00000000000000000000000000000004000000000025000000000000004d000000000000004e00
*0000000000004f0000000000000050000000000000005100000000000000520000000000000053
*000000000000005400000000000000550000000000000056000000000000005700000000000000
*580000000000000059000000000000005a000000000000005b000000000000005c000000000000
*005d000000000000005e000000000000005f000000000000006000000000000000610000000000
*000062000000000000006300000000000000640000000000000065000000000000006600000000
*000000670000000000000068000000000000000000000000000000010000000000000002000000
*0000000003000000000000000400000000000000050000000000000006000000000000000e0000
*00000000000f02000000000000000e000000000000000f00000000000000000000000000000005
*000000000024000000000000004d000000000000004e000000000000004f000000000000005000
*000000000000510000000000000052000000000000005300000000000000540000000000000055
*000000000000005600000000000000570000000000000058000000000000005900000000000000
*5a000000000000005b000000000000005c000000000000005d000000000000005e000000000000
*005f00000000000000600000000000000061000000000000006200000000000000630000000000
*000064000000000000006500000000000000660000000000000067000000000000006800000000
*000000000000000000000001000000000000000200000000000000030000000000000010000000
*000000001100000000000000120000000000000013040000000000000010000000000000001100
*000000000000120000000000000013000000000000000000000000000000060000000004000000
*000000001403010204000000540000006800000065000000200104010000000000000000500000
*00000000000d000000000000000e01020100000020010701020100000028010401000000000000
*000069000000000000000d000000000000000f0102010000002c01040100000000000000006a00
*0000000000000d0000000000000010020100000029010206000000200000006f00000076000000
*650000007200000020010701040100000000000000006b000000000000000d0000000000000010
*020200000020000000610102070000002000000077000000680000006500000072000000650000
*002001040100000000000000006a000000000000000d0000000000000010021400000020000000
*69000000730000002000000074000000680000006500000020000000740000006f000000700000
*0020000000650000006c000000650000006d000000650000006e000000740000000a0000000000
*000017030102040000005400000068000000650000002001040100000000000000005000000000
*0000000d000000000000000e010201000000200107010201000000280104010000000000000000
*6c000000000000000d000000000000000f0102010000002c01040100000000000000006a000000
*000000000d0000000000000010020100000029010206000000200000006f000000760000006500
*00007200000020010701040100000000000000006b000000000000000d00000000000000100202
*000000200000006101020700000020000000770000006800000065000000720000006500000020
*01040100000000000000006a000000000000000d00000000000000100217000000200000006900
*0000730000002000000074000000680000006500000020000000620000006f0000007400000074
*0000006f0000006d00000020000000650000006c000000650000006d000000650000006e000000
*740000000a000000000000001a0301020400000054000000680000006500000020010401000000
*000000000050000000000000000d000000000000000e01020a0000002000000067000000690000
*0076000000650000006e0000002000000062000000790000002001070102010000002801040100
*0000000000000069000000000000000d000000000000000f0102010000002c0104010000000000
*0000006d000000000000000d000000000000001102010000002902010000000a00000000000000
*1d0301020400000054000000680000006500000020010401000000000000000050000000000000
*000d000000000000000e0102010000002001070102010000002801040100000000000000006c00
*0000000000000d000000000000000f0102010000002c01040100000000000000006e0000000000
*00000d000000000000001102010000002902010000000a11000000000000004d00000000000000
*4f0000000000000050000000000000000000000000000000010000000000000014000000000000
*001500000000000000160000000000000017000000000000001800000000000000190000000000
*00001a000000000000001b000000000000001c000000000000001d000000000000001e00000000
*0000001f0c000000000000001d000000000000001e000000000000001f000000000000001a0000
*00000000001b000000000000001c00000000000000170000000000000018000000000000001900
*000000000000140000000000000015000000000000001600000000000000000000000000000007
*000000000029000000000000006f000000000000004d000000000000004e000000000000004f00
*000000000000500000000000000051000000000000005200000000000000530000000000000054
*000000000000005500000000000000560000000000000057000000000000005800000000000000
*59000000000000005a000000000000005b000000000000005c000000000000005d000000000000
*005e000000000000005f0000000000000060000000000000006100000000000000620000000000
*000063000000000000006400000000000000650000000000000066000000000000006700000000
*000000680000000000000070000000000000007100000000000000000000000000000001000000
*000000000200000000000000030000000000000020000000000000002100000000000000220000
*000000000023000000000000002400000000000000250600000000000000230000000000000024
*000000000000002500000000000000200000000000000021000000000000002200000000000000
*00000000000000000800000000002c000000000000004d00000000000000720000000000000073
*000000000000007400000000000000750000000000000076000000000000007700000000000000
*4e000000000000004f000000000000005000000000000000510000000000000052000000000000
*005300000000000000540000000000000055000000000000005600000000000000570000000000
*0000580000000000000059000000000000005a000000000000005b000000000000005c00000000
*0000005d000000000000005e000000000000005f00000000000000600000000000000061000000
*000000006200000000000000630000000000000064000000000000006500000000000000660000
*000000000067000000000000006800000000000000000000000000000001000000000000000200
*000000000000030000000000000026000000000000002700000000000000280000000000000029
*000000000000002a000000000000002b060000000000000029000000000000002a000000000000
*002b00000000000000260000000000000027000000000000002800000000000000000000000000
*00001200000000001f000000000000004d000000000000004f0000000000000050000000000000
*000000000000000000010000000000000002000000000000000300000000000000780000000000
*000079000000000000007a000000000000007b000000000000007c000000000000007d00000000
*0000007e000000000000007f000000000000008000000000000000810000000000000082000000
*000000008300000000000000840000000000000085000000000000008600000000000000870000
*0000000000880000000000000089000000000000008a000000000000008b000000000000008c00
*0000000000008d000000000000008e000000000000008f00000000000000000000000000000000
*0900000000000b000000000000004d000000000000004f00000000000000500000000000000000
*000000000000000100000000000000020000000000000003000000000000002c00000000000000
*2d000000000000002e000000000000002f04000000000000002e000000000000002f0000000000
*00002c000000000000002d0000000000000000000000000000000a00000000000b000000000000
*004d000000000000004f0000000000000050000000000000000000000000000000010000000000
*000002000000000000000300000000000000300000000000000031000000000000003200000000
*000000330400000000000000320000000000000033000000000000003000000000000000310000
*000000000000000000000000000b00000000002b000000000000004d000000000000004e000000
*000000004f00000000000000500000000000000051000000000000005200000000000000530000
*000000000054000000000000005500000000000000560000000000000057000000000000005800
*00000000000059000000000000005a000000000000005b000000000000005c000000000000005d
*000000000000005e000000000000005f0000000000000060000000000000006100000000000000
*620000000000000063000000000000006400000000000000650000000000000066000000000000
*006700000000000000680000000000000034000000000000003500000000000000360000000000
*00003700000000000000380000000000000039000000000000003a000000000000003b00000000
*0000003c000000000000003d000000000000003e000000000000003f0000000000000040000000
*000000004100000000000000420f00000000000000340000000000000035000000000000003600
*0000000000003700000000000000380000000000000039000000000000003a000000000000003b
*000000000000003c000000000000003d000000000000003e000000000000003f00000000000000
*40000000000000004100000000000000420000000000000000000000000000000c00000000002d
*000000000000004d000000000000004e000000000000004f000000000000005000000000000000
*510000000000000052000000000000005300000000000000540000000000000055000000000000
*0056000000000000005700000000000000580000000000000059000000000000005a0000000000
*00005b000000000000005c000000000000005d000000000000005e000000000000005f00000000
*000000600000000000000061000000000000006200000000000000630000000000000064000000
*000000006500000000000000660000000000000067000000000000006800000000000000000000
*000000000001000000000000000200000000000000030000000000000004000000000000000500
*000000000000060000000000000043000000000000004400000000000000450000000000000046
*000000000000004700000000000000480000000000000049000000000000004a00000000000000
*4b000000000000004c0a0000000000000048000000000000004900000000000000470000000000
*00004a000000000000004500000000000000460000000000000043000000000000004400000000
*0000004b000000000000004c000000000000009000000000000000000000000000000001030000
*000000000013000000000000000000000000000000010000000000000000140000000000000000
*000000000000000100000000000000001500000000000000000000000000000001000000000000
*000016000000000000000000000000000000020300000000000000170000000000000000000000
*000000000200000000000000001800000000000000000000000000000002000000000000000019
*0000000000000000000000000000000303000000000000001a0000000000000000000000000000
*000303000000000000001b0000000000000000000000000000000303000000000000001c000000
*0000000000000000000000000300000000000000001d0000000000000000000000000000000300
*000000000000001e0000000000000000000000000000000300000000000000001f000000000000
*000000000000000000030000000000000000200000000000000000000000000000000403000000
*000000002100000000000000000000000000000004000000000000000022000000000000000000
*000000000000050300000000000000230000000000000000000000000000000501000000000000
*002300000000000000000000000000000005000000000000000024000000000000000000000000
*000000050000000000000000250000000000000000000000000000000603000000000000002600
*000000000000000000000000000006010000000000000026000000000000000000000000000000
*060000000000000000270000000000000000000000000000000603000000000000002800000000
*000000000000000000000006010000000000000028000000000000000000000000000000060000
*000000000000290000000000000000000000000000000603000000000000002a00000000000000
*00000000000000000601000000000000002a000000000000000000000000000000060000000000
*0000002b0000000000000000000000000000000603000000000000002c00000000000000000000
*00000000000601000000000000002c000000000000000000000000000000060000000000000000
*2d0000000000000000000000000000000703000000000000002e00000000000000000000000000
*00000701000000000000002e0000000000000000000000000000000700000000000000002f0000
*000000000000000000000000000703000000000000003000000000000000000000000000000007
*010000000000000030000000000000000000000000000000070000000000000000310000000000
*000000000000000000000803000000000000003200000000000000000000000000000008010000
*000000000032000000000000000000000000000000080000000000000000330000000000000000
*000000000000000803000000000000003400000000000000000000000000000008010000000000
*000034000000000000000000000000000000080000000000000000350000000000000000000000
*000000000903000000000000003600000000000000000000000000000009000000000000000037
*000000000000000000000000000000090300000000000000380000000000000000000000000000
*00090000000000000000390000000000000000000000000000000a030000000000000036000000
*0000000000000000000000000a0000000000000000370000000000000000000000000000000a03
*00000000000000380000000000000000000000000000000a000000000000000039000000000000
*0000000000000000000b03000000000000003a0000000000000000000000000000000b03000000
*000000003b0000000000000000000000000000000b00000000000000003c000000000000000000
*0000000000000b00000000000000003d0000000000000000000000000000000b00000000000000
*003e0000000000000000000000000000000b00000000000000003f000000000000000000000000
*0000000b0000000000000000400000000000000000000000000000000b00000000000000004100
*00000000000000000000000000000b000000000000000042000000000000000000000000000000
*0b0000000000000000430000000000000000000000000000000b00000000000000004400000000
*00000000000000000000000b0000000000000000450000000000000000000000000000000b0000
*000000000000460000000000000000000000000000000b00000000000000004700000000000000
*00000000000000000b0000000000000000480000000000000000000000000000000c0300000000
*000000490000000000000000000000000000000c00000000000000004a00000000000000000000
*00000000000c03000000000000004b0000000000000000000000000000000c0000000000000000
*4c0000000000000000000000000000000c03000000000000004d00000000000000000000000000
*00000c03000000000000004e0000000000000000000000000000000c00000000000000004f0000
*000000000000000000000000000c0000000000000000500000000000000000000000000000000c
*0000000000000000510000000000000000000000000000000c0000000000000000520000000000
*00000d000000000000000e000000000000000053000000000000000d000000000000000e000000
*000000000054000000000000000d000000000000000e000000000000000055000000000000000d
*000000000000000e030000000000000056000000000000000d000000000000000e000000000000
*000057000000000000000d000000000000000e010000000000000058000000000000000d000000
*000000000e030000000000000058000000000000000d000000000000000e000000000000000059
*000000000000000d000000000000000e01000000000000005a000000000000000d000000000000
*000e03000000000000005a000000000000000d000000000000000e00000000000000005b000000
*000000000d000000000000000e01000000000000005c000000000000000d000000000000000e03
*000000000000005c000000000000000d000000000000000e00000000000000005d000000000000
*000d000000000000000e01000000000000005e000000000000000d000000000000000e03000000
*000000005e000000000000000d000000000000000e00000000000000005f000000000000000d00
*0000000000000e010000000000000060000000000000000d000000000000000e03000000000000
*0060000000000000000d000000000000000e000000000000000061000000000000000d00000000
*0000000e010000000000000062000000000000000d000000000000000e03000000000000006200
*0000000000000d000000000000000e000000000000000063000000000000000d00000000000000
*0e010000000000000064000000000000000d000000000000000e03000000000000006400000000
*0000000d000000000000000e000000000000000065000000000000000d000000000000000e0100
*00000000000066000000000000000d000000000000000e03000000000000006600000000000000
*0d0000000000000067000000000000000068000000000000000d00000000000000100100000000
*00000069000000000000000d000000000000001003000000000000006a000000000000000d0000
*00000000006700000000000000006b000000000000000d000000000000006c0000000000000000
*6d000000000000000d000000000000006c00000000000000006e000000000000000d0000000000
*00006f030000000000000070000000000000000d000000000000006f0000000000000000710000
*00000000000d000000000000006f000000000000000072000000000000000d0000000000000073
*000000000000000074000000000000000d00000000000000730000000000000000750000000000
*00000d0000000000000073030000000000000076000000000000000d0000000000000073000000
*000000000077000000000000000d0000000000000073000000000000000078000000000000000d
*0000000000000073030000000000000079000000000000007a000000000000007b000000000000
*00007c000000000000007a000000000000007b00000000000000007d000000000000007a000000
*000000007b01000000000000007e000000000000007a000000000000007b01000000000000007f
*000000000000007a000000000000007b010000000000000080000000000000007a000000000000
*007b010000000000000081000000000000007a000000000000007b030000000000000082000000
*000000007a000000000000007b030000000000000083000000000000007a000000000000007b03
*0000000000000084000000000000007a000000000000007b030000000000000085000000000000
*007a000000000000007b000000000000000086000000000000007a000000000000007b00000000
*0000000087000000000000007a000000000000007b000000000000000088000000000000007a00
*0000000000007b000000000000000078000000000000007a000000000000007b00000000000000
*0089000000000000007a000000000000007b00000000000000008a000000000000007a00000000
*0000007b00000000000000008b000000000000007a000000000000007b00000000000000008c00
*0000000000007a000000000000007b00000000000000008d000000000000007a00000000000000
*7b00000000000000008e000000000000007a000000000000007b00000000000000008f00000000
*0000007a000000000000007b000000000000000090000000000000007a000000000000007b0000
*00000000000091000000000000007a000000000000007b00000000000000009200000000000000
*93000000000000000d6d6f6e6f6964732d302e312e310000000000000013446174612e4d6f6e6f
*69642e526564756365720000000000000018446174612e4d6f6e6f69642e526564756365722e43
*6861720000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f
*736974696f6e0000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e
*4465636f6465720000000000000018446174612e4d6f6e6f69642e526564756365722e57697468
*000000000000000f446174612e4d6f6e6f69642e4f72640000000000000011446174612e4d6f6e
*6f69642e4d6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c696361746976
*65000000000000000f446174612e4d6f6e6f69642e4d61700000000000000012446174612e4d6f
*6e6f69642e496e744d61700000000000000015446174612e4d6f6e6f69642e47656e657261746f
*720000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f7264730000000000
*00000462617365000000000000000b446174612e4d6f6e6f69640000000000000008446174612e
*4f7264000000000000000a446174612e4d6179626500000000000000075072656c756465000000
*0000000016446174612e4d6f6e6f69642e46696e67657254726565000000000000000752656475
*6365720000000000000004756e69740000000000000004736e6f630000000000000004636f6e73
*000000000000000b4368617252656475636572000000000000000866726f6d4368617200000000
*0000000b696e76616c696443686172000000000000000e536f75726365506f736974696f6e0000
*00000000000c536f75726365436f6c756d6e000000000000000a536f757263654c696e65000000
*000000000b73746172744f6646696c65000000000000000c736f75726365436f6c756d6e000000
*000000000a736f757263654c696e65000000000000001273686f77536f75726365506f73697469
*6f6e000000000000000455544638000000000000000772756e55544638000000000000000b5769
*746852656475636572000000000000000e72756e5769746852656475636572000000000000000e
*776974686f757452656475636572000000000000000b4d696e5072696f72697479000000000000
*000e6765744d696e5072696f72697479000000000000000b4d61785072696f7269747900000000
*0000000e6765744d61785072696f7269747900000000000000034d696e00000000000000066765
*744d696e00000000000000034d617800000000000000066765744d617800000000000000084d6f
*6e616453756d000000000000000b6765744d6f6e616453756d0000000000000006416374696f6e
*0000000000000009676574416374696f6e0000000000000009416c7465726e6174650000000000
*00000c676574416c7465726e617465000000000000000954726176657273616c00000000000000
*0c67657454726176657273616c0000000000000009556e696f6e57697468000000000000000c67
*6574556e696f6e576974680000000000000005556e696f6e0000000000000008676574556e696f
*6e000000000000000947656e657261746f720000000000000004456c656d00000000000000096d
*617052656475636500000000000000056d6170546f00000000000000076d617046726f6d000000
*0000000006726564756365000000000000000b6d5f74726176657273655f00000000000000066d
*5f666f725f00000000000000076d5f6d61704d5f00000000000000076d5f666f724d5f00000000
*0000000b6d5f636f6e6361744d617000000000000000056d5f616e6400000000000000046d5f6f
*7200000000000000056d5f616e7900000000000000056d5f616c6c0000000000000007556e6c69
*6e6564000000000000000a72756e556e6c696e65640000000000000008556e7370616365640000
*00000000000b72756e556e73706163656400000000000000054c696e6573000000000000000557
*6f726473000000000000000872756e576f726473000000000000000872756e4c696e6573000000
*0000000009776f72647346726f6d00000000000000096c696e657346726f6d0000000000000007
*6d617070656e6400000000000000076d636f6e63617400000000000000066d656d707479000000
*00000000064d6f6e6f696400000000000000076765744475616c00000000000000044475616c00
*00000000000007617070456e646f0000000000000004456e646f0000000000000006676574416c
*6c0000000000000003416c6c0000000000000006676574416e790000000000000003416e790000
*00000000000667657453756d000000000000000353756d000000000000000a67657450726f6475
*6374000000000000000750726f6475637400000000000000086765744669727374000000000000
*0005466972737400000000000000076765744c61737400000000000000044c6173740000000000
*00000b4748432e436c617373657300000000000000036d696e00000000000000074e6f7468696e
*6700000000000000054d6179626500000000000000036d617800000000000000084748432e456e
*756d00000000000000086d6178426f756e6400000000000000086d696e426f756e640000000000
*00000d436f6e74726f6c2e4d6f6e616400000000000000094d6f6e6164506c7573000000000000
*00056d706c757300000000000000056d7a65726f0000000000000013436f6e74726f6c2e417070
*6c6963617469766500000000000000022a3e000000000000000470757265000000000000000b41
*70706c6963617469766500000000000000033c7c3e0000000000000005656d7074790000000000
*00000b416c7465726e6174697665000000000000000e66696e676572747265652d302e30000000
*000000000f446174612e46696e6765725472656500000000000000023c7c000000000000000573
*706c697400000000000000023a3e0000000000000006456d7074795200000000000000023a3c00
*00000000000006456d7074794c0000000000000005566965774c00000000000000055669657752
*000000000000000a46696e6765725472656500000000000000084d656173757265640000000000
*0000023e3c00000000000000076d656173757265000000000000000964726f70556e74696c0000
*000000000005666d617027000000000000000866726f6d4c69737400000000000000046e756c6c
*000000000000000772657665727365000000000000000973696e676c65746f6e00000000000000
*0974616b65556e74696c0000000000000009747261766572736527000000000000000576696577
*6c0000000000000005766965777200000000000000027c3e
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 18
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mtraverse_</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mfor_</span>
-<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mmapM_</span>
-<a name="line-13"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mforM_</span>
-<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mconcatMap</span>
-<a name="line-15"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
-<a name="line-29"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-31"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-32"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-33"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-34"></a>
-<a name="line-35"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-36"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-37"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_traverse_</span>
+<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_for_</span>
+<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_mapM_</span>
+<a name="line-13"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_forM_</span>
+<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_concatMap</span>
+<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_and</span>
+<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_or</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_any</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>m_all</span>
+<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
+<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
+<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
+<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
+<a name="line-33"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
+<a name="line-34"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
+<a name="line-35"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-36"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-37"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 47
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-41"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-39"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
+<a name="line-40"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-41"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 51
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span>
-<a name="line-45"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
+<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-44"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-45"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 55
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-49"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span>
+<a name="line-49"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 59
-<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-52"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-53"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
+<a name="line-52"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-53"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 63
-<a name="line-55"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
-<a name="line-56"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
-<a name="line-57"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
-<a name="line-58"></a><span class='hs-comment'>-- These aren't happy, but should work</span>
-<a name="line-59"></a><span class='hs-comment'>{-- RULES "reduce/fold" reduce = fold --}</span>
-<a name="line-60"></a><span class='hs-comment'>{-- RULES "mapReduce/foldMap" mapReduce = foldMap --}</span>
-<a name="line-61"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-62"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
-<a name="line-63"></a>
-<a name="line-64"></a><a name="mtraverse_"></a><span class='hs-definition'>mtraverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-65"></a><span class='hs-definition'>mtraverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-66"></a>    
-<a name="line-67"></a><a name="mfor_"></a><span class='hs-definition'>mfor_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-68"></a><span class='hs-definition'>mfor_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mtraverse_</span>
-<a name="line-69"></a>
-<a name="line-70"></a><a name="mmapM_"></a><span class='hs-definition'>mmapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-71"></a><span class='hs-definition'>mmapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-72"></a>
-<a name="line-73"></a><a name="mforM_"></a><span class='hs-definition'>mforM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-74"></a><span class='hs-definition'>mforM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mmapM_</span>
-<a name="line-75"></a>
-<a name="line-76"></a><a name="mconcatMap"></a><span class='hs-definition'>mconcatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-77"></a><span class='hs-definition'>mconcatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span>
+<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-56"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-57"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-58"></a>
+<a name="line-59"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
+<a name="line-60"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
+<a name="line-61"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
+<a name="line-62"></a><span class='hs-comment'>-- These aren't happy, but should work</span>
+<a name="line-63"></a><span class='hs-comment'>{-- RULES "reduce/fold" reduce = fold --}</span>
+<a name="line-64"></a><span class='hs-comment'>{-- RULES "mapReduce/foldMap" mapReduce = foldMap --}</span>
+<a name="line-65"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-66"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
+<a name="line-67"></a>
+<a name="line-68"></a><a name="m_traverse_"></a><span class='hs-definition'>m_traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-69"></a><span class='hs-definition'>m_traverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-70"></a>    
+<a name="line-71"></a><a name="m_for_"></a><span class='hs-definition'>m_for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-72"></a><span class='hs-definition'>m_for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>m_traverse_</span>
+<a name="line-73"></a>
+<a name="line-74"></a><a name="m_mapM_"></a><span class='hs-definition'>m_mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-75"></a><span class='hs-definition'>m_mapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-76"></a>
+<a name="line-77"></a><a name="m_forM_"></a><span class='hs-definition'>m_forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-78"></a><span class='hs-definition'>m_forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>m_mapM_</span>
+<a name="line-79"></a>
+<a name="line-80"></a><a name="m_concatMap"></a><span class='hs-definition'>m_concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-81"></a><span class='hs-definition'>m_concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span>
+<a name="line-82"></a>
+<a name="line-83"></a><a name="m_and"></a><span class='hs-definition'>m_and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-84"></a><span class='hs-definition'>m_and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-85"></a>
+<a name="line-86"></a><a name="m_or"></a><span class='hs-definition'>m_or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-87"></a><span class='hs-definition'>m_or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
+<a name="line-88"></a>
+<a name="line-89"></a><a name="m_any"></a><span class='hs-definition'>m_any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-90"></a><span class='hs-definition'>m_any</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-91"></a>
+<a name="line-92"></a><a name="m_all"></a><span class='hs-definition'>m_all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-93"></a><span class='hs-definition'>m_all</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 9
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>---- |</span>
-<a name="line-3"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
-<a name="line-4"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>---- Stability   :  provisional</span>
-<a name="line-8"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>----</span>
-<a name="line-10"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
-<a name="line-11"></a><span class='hs-comment'>----</span>
-<a name="line-12"></a><span class='hs-comment'>-------------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-16"></a>    <span class='hs-comment'>-- * Max</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-comment'>-- * Min</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
+<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-3"></a><span class='hs-comment'>---- |</span>
+<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
+<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD-style</span>
+<a name="line-7"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
+<a name="line-8"></a><span class='hs-comment'>---- Stability   :  provisional</span>
+<a name="line-9"></a><span class='hs-comment'>---- Portability :  portable</span>
+<a name="line-10"></a><span class='hs-comment'>----</span>
+<a name="line-11"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
+<a name="line-12"></a><span class='hs-comment'>----</span>
+<a name="line-13"></a><span class='hs-comment'>-------------------------------------------------------------------------------</span>
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
+<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-17"></a>    <span class='hs-comment'>-- * Max</span>
+<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
+<a name="line-19"></a>    <span class='hs-comment'>-- * Min</span>
+<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
+<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
+<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
+<a name="line-25"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-26"></a>
+<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 37
-<a name="line-29"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
-<a name="line-30"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
-<a name="line-34"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-35"></a>
-<a name="line-36"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
-<a name="line-37"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
-<a name="line-41"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+<a name="line-29"></a>
+<a name="line-30"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
+<a name="line-31"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>
+<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-34"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
+<a name="line-35"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-36"></a>
+<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
+<a name="line-39"></a>
+<a name="line-40"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
+<a name="line-41"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 51
-<a name="line-43"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
-<a name="line-44"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-48"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-44"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
+<a name="line-45"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 58
-<a name="line-50"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
-<a name="line-51"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-50"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
+<a name="line-51"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 61
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
-<a name="line-55"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
-<a name="line-56"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
-<a name="line-57"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
-<a name="line-58"></a>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-61"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-55"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-56"></a>
+<a name="line-57"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-58"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span>
+<a name="line-59"></a>
+<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-61"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
+<a name="line-62"></a>
+<a name="line-63"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
+<a name="line-64"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-65"></a>
+<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-67"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
+<a name="line-68"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
+<a name="line-69"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
+<a name="line-70"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
+<a name="line-71"></a>
+<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-73"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-74"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+<a name="line-75"></a>
+<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-77"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span>
+<a name="line-78"></a>
+<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-80"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html 16
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html 57
+<a name="line-49"></a>
+<a name="line-50"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span>
+<a name="line-51"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Any</span>
+<a name="line-52"></a>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>All</span>
+<a name="line-55"></a>
+<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-57"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
+<a name="line-58"></a>
+<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-60"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Dual</span>
+<a name="line-61"></a>    
+<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-63"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span>
+<a name="line-64"></a>
+<a name="line-65"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-66"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span>
+<a name="line-67"></a>
+<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-69"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span>
+<a name="line-70"></a>
+<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-72"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
+<a name="line-73"></a>
+<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-75"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span>
+<a name="line-76"></a>
+<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-78"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
}
