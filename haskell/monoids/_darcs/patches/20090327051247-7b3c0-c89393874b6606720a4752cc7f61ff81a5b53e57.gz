[documentation
ekmett@gmail.com**20090327051247] {
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 261
+> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
+>IntSet</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 281
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 295
->Measured v m =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
+>Set</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 335
-> (FingerTree v m)</TD
+> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>Measured v e =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (FingerTree v e)</TD
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 470
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AKeys"
+></A
+><B
+>Keys</B
+> c </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#Keys"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AKeys"
+></A
+><B
+>Keys</B
+> c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Keys')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Keys" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
+>Keys</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AValues"
+></A
+><B
+>Values</B
+> c </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#Values"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AValues"
+></A
+><B
+>Values</B
+> c</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Values')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Values" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> v))</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
+>Values</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k v))</TD
+></TR
+></TABLE
+></DIV
+></TD
hunk ./dist/doc/html/monoids/Data-Monoid-IntMap.html 87
->data</SPAN
->  <A NAME="t%3AUnion"
-></A
-><B
->Union</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-IntMap.html#Union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Union" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
hunk ./dist/doc/html/monoids/Data-Monoid-Map.html 87
->data</SPAN
->  <A NAME="t%3AUnion"
-></A
-><B
->Union</B
-> k a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Map.html#Union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Union" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 725
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 861
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
hunk ./dist/doc/html/monoids/doc-index.html 626
->getUnion</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#v%3AgetUnion"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#v%3AgetUnion"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
hunk ./dist/doc/html/monoids/doc-index.html 684
+>Keys</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#t%3AKeys"
+>Data.Monoid.Generator</A
+>, Data.Monoid.Generator.Combinators</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AKeys"
+>Data.Monoid.Generator</A
+>, Data.Monoid.Generator.Combinators</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
hunk ./dist/doc/html/monoids/doc-index.html 1292
->Union</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#t%3AUnion"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
hunk ./dist/doc/html/monoids/doc-index.html 1362
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Values</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#t%3AValues"
+>Data.Monoid.Generator</A
+>, Data.Monoid.Generator.Combinators</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AValues"
+>Data.Monoid.Generator</A
+>, Data.Monoid.Generator.Combinators</TD
+></TR
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*0d0cface000400000000000043a900000000000032718000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000200000000000000030000000000000000000000000000
*000300000000000000040000000000000000000000000000000300000000000000050000000000
*000000000000000000000300000000000000060000000000000000000000000000000300000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000004000000000000000a0000
*0000000000000000000000000004000000000000000b0000000000000000000000000000000400
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000500000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000600000000000000130000000000000000000000000000000600000000
*000000140000000000000000000000000000000600000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000007000000000000001a0000000000000000
*0000000000000007000000000000001b0000000000000000000000000000000800000000000000
*1c00000000000000000000000000000008000000000000001d0000000000000000000000000000
*0008000000000000001e00000000000000000000000000000008000000000000001f0000000000
*000000000000000000000900000000000000200000000000000000000000000000000900000000
*000000210000000000000000000000000000000900000000000000220000000000000000000000
*000000000900000000000000230000000000000000000000000000000900000000000000240000
*000000000000000000000000000900000000000000250000000000000000000000000000000a00
*000000000000260000000000000000000000000000000a00000000000000270000000000000000
*000000000000000b00000000000000280000000000000000000000000000000b00000000000000
*290000000000000000000000000000000b000000000000002a0000000000000000000000000000
*000b000000000000002b0000000000000000000000000000000b000000000000002c0000000000
*000000000000000000000b000000000000002d0000000000000000000000000000000b00000000
*0000002e0000000000000000000000000000000b000000000000002f0000000000000000000000
*000000000b00000000000000300000000000000000000000000000000b00000000000000310000
*000000000000000000000000000c00000000000000320000000000000000000000000000000c00
*000000000000330000000000000000000000000000000c00000000000000340000000000000000
*000000000000000c00000000000000350000000000000000000000000000000c00000000000000
*360000000000000000000000000000000c00000000000000370000000000000000000000000000
*000c00000000000000380000000000000000000000000000000c00000000000000390000000000
*000000000000000000000c000000000000003a0000000000000000000000000000000c00000000
*0000003b0000000000000000000000000000000c000000000000003c0000000000000000000000
*000000000c000000000000003d0000000000000000000000000000000d000000000000003e0000
*000000000000000000000000000d000000000000003f0000000000000000000000000000000d00
*000000000000400000000000000000000000000000000d00000000000000410000000000000000
*000000000000000d00000000000000420000000000000000000000000000000d00000000000000
*430000000000000000000000000000000d00000000000000440000000000000000000000000000
*000d00000000000000450000000000000000000000000000000d00000000000000460000000000
*000000000000000000000e00000000000000470000000000000000000000000000000e00000000
*000000480000000000000000000000000000000e00000000000000490000000000000000000000
*000000000e000000000000004a0000000000000000000000000000000e000000000000004b0000
*000000000000000000000000000e000000000000004c0000000000000000000000000000000e00
*0000000000004d0000000000000000000000000000000e000000000000004e0000000000000000
*000000000000000e000000000000004f0000000000000000000000000000000f00000000000000
*500000000000000000000000000000000f00000000000000510000000000000000000000000000
*000f00000000000000520000000000000000000000000000000f00000000000000530000000000
*000000000000000000001000000000000000540000000000000000000000000000001000000000
*000000550000000000000000000000000000001000000000000000560000000000000000000000
*000000001000000000000000570000000000000000000000000000001100000000000000580000
*000000000000000000000000001100000000000000590000000000000000000000000000001100
*0000000000005a00000000000000000000000000000012000000000000005b0000000000000000
*0000000000000012000000000000005c0000000000000000000000000000001200000000000000
*5d00000000000000000000000000000012000000000000005e0000000000000000000000000000
*0012000000000000005f0000000000000000000000000000001200000000000000600000000000
*000000000000000000001200000000000000610000000000000000000000000000001200000000
*000000620000000000000000000000000000001200000000000000630000000000000000000000
*000000001200000000000000640000000000000000000000000000001200000000000000650000
*000000000000000000000000001200000000000000660000000000000000000000000000001200
*000000000000670000000000000000000000000000001200000000000000680000000000000000
*000000000000001200000000000000690000000000000000000000000000001200000000000000
*6a00000000000000000000000000000013000000000000006b0000000000000000000000000000
*0013000000000000006c00000000000000000000000000000013000000000000006d0000000000
*0000000000000000000014000000000000006e0000000000000000000000000000001400000000
*0000006f0000000000000000000000000000001400000000000000700000000000000000000000
*000000001500000000000000710000000000000000000000000000001500000000000000720000
*000000000000000000000000001500000000000000730000000000000000000000000000001500
*000000000000740000000000000000000000000000001600000000000000750000000000000000
*000000000000001600000000000000760000000000000000000000000000001600000000000000
*770000000000000000000000000000001600000000000000780000000000000000000000000000
*0016000000000000007900000000000000000000000000000016000000000000007a0000000000
*0000000000000000000017000000000000007b0000000000000000000000000000001800000000
*0000007c00000000000000000000000000000018000000000000007d0000000000000000000000
*0000000018000000000000007e00000000000000000000000000000019000000000000007f0000
*0000000000000000000000000019190000000000000000000000000000000100000000001e0000
*000000000080000000000000008100000000000000820000000000000083000000000000008400
*000000000000850000000000000086000000000000008700000000000000880000000000000089
*000000000000008a000000000000008b000000000000008c000000000000008d00000000000000
*8e000000000000008f000000000000009000000000000000910000000000000092000000000000
*009300000000000000940000000000000095000000000000009600000000000000970000000000
*0000980000000000000099000000000000009a000000000000009b000000000000000000000000
*000000010200000000000000000000000000000001000000000000000000000000000000020000
*0000001f0000000000000080000000000000008100000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*000000000089000000000000008a000000000000008b000000000000008c000000000000008d00
*0000000000008e000000000000008f000000000000009000000000000000910000000000000092
*000000000000009300000000000000940000000000000095000000000000009600000000000000
*9700000000000000980000000000000099000000000000009a000000000000009b000000000000
*000000000000000000010000000000000002010000000000000002000000000000000000000000
*000000030000000002000000000000000303010202000000410000002001040100000000000000
*0083000000000000001a000000000000001b01020b000000200000006900000073000000200000
*006a00000075000000730000007400000020000000610000002001040100000000000000009c00
*0000000000001a000000000000001c021300000020000000770000006900000074000000680000
*00200000006f0000006e00000065000000200000006f000000620000006a000000650000006300
*0000740000002e000000200000000a000000000000000503010204000000540000006800000065
*00000020010401000000000000000083000000000000001a000000000000001b01023300000020
*0000006f0000006600000020000000650000006e000000640000006f0000006d0000006f000000
*72000000700000006800000069000000730000006d00000073000000200000006f000000760000
*00650000007200000020000000730000006f0000006d00000065000000200000006f0000006200
*00006a00000065000000630000007400000020000000690000006e00000020000000610000006e
*000000200000006100000072000000620000006900000074000000720000006100000072000000
*790000002001040100000000000000009c000000000000001a000000000000001c02010000000a
*090000000000000080000000000000008200000000000000830000000000000003000000000000
*000400000000000000050000000000000006000000000000000700000000000000080600000000
*000000050000000000000006000000000000000700000000000000030000000000000004000000
*000000000800000000000000000000000000000004000000000022000000000000008000000000
*000000810000000000000082000000000000008300000000000000840000000000000085000000
*0000000086000000000000008700000000000000880000000000000089000000000000008a0000
*00000000008b000000000000008c000000000000008d000000000000008e000000000000008f00
*000000000000900000000000000091000000000000009200000000000000930000000000000094
*000000000000009500000000000000960000000000000097000000000000009800000000000000
*99000000000000009a000000000000009b0000000000000009000000000000000a000000000000
*000b000000000000000c000000000000000d000000000000000e06000000000000000900000000
*0000000a000000000000000b000000000000000c000000000000000d000000000000000e000000
*000000000000000000000000050000000000250000000000000080000000000000008100000000
*000000820000000000000083000000000000008400000000000000850000000000000086000000
*000000008700000000000000880000000000000089000000000000008a000000000000008b0000
*00000000008c000000000000008d000000000000008e000000000000008f000000000000009000
*000000000000910000000000000092000000000000009300000000000000940000000000000095
*000000000000009600000000000000970000000000000098000000000000009900000000000000
*9a000000000000009b0000000000000009000000000000000a000000000000000b000000000000
*000c000000000000000d000000000000000e000000000000000f00000000000000100000000000
*00001103000000000000000f000000000000001100000000000000100000000000000000000000
*000000000600000000002c00000000000000800000000000000081000000000000008200000000
*000000830000000000000084000000000000008500000000000000860000000000000087000000
*00000000880000000000000089000000000000008a000000000000008b000000000000008c0000
*00000000008d000000000000008e000000000000008f0000000000000090000000000000009100
*000000000000920000000000000093000000000000009400000000000000950000000000000096
*000000000000009700000000000000980000000000000099000000000000009a00000000000000
*9b0000000000000009000000000000000a000000000000000b000000000000000c000000000000
*000d000000000000000e000000000000000f000000000000001000000000000000110000000000
*000012000000000000001300000000000000140000000000000015000000000000001600000000
*000000170000000000000018070000000000000012000000000000001400000000000000130000
*000000000017000000000000001600000000000000150000000000000018000000000000000000
*000000000000070000000000270000000000000080000000000000008100000000000000820000
*000000000083000000000000008400000000000000850000000000000086000000000000008700
*000000000000880000000000000089000000000000008a000000000000008b000000000000008c
*000000000000008d000000000000008e000000000000008f000000000000009000000000000000
*910000000000000092000000000000009300000000000000940000000000000095000000000000
*0096000000000000009700000000000000980000000000000099000000000000009a0000000000
*00009b0000000000000009000000000000000a000000000000000b000000000000000c00000000
*0000000d000000000000000e000000000000000f00000000000000100000000000000011000000
*0000000019000000000000001a020000000000000019000000000000001a000000000000000000
*000000000000080000000000260000000000000080000000000000008100000000000000820000
*000000000083000000000000008400000000000000850000000000000086000000000000008700
*000000000000880000000000000089000000000000008a000000000000008b000000000000008c
*000000000000008d000000000000008e000000000000008f000000000000009000000000000000
*910000000000000092000000000000009300000000000000940000000000000095000000000000
*0096000000000000009700000000000000980000000000000099000000000000009a0000000000
*00009b0000000000000009000000000000000a000000000000000b000000000000000c00000000
*0000000d000000000000000e000000000000001b000000000000001c000000000000001d000000
*000000001e04000000000000001b000000000000001c000000000000001d000000000000001e00
*000000000000000000000000000009000000000028000000000000008000000000000000810000
*000000000082000000000000008300000000000000840000000000000085000000000000008600
*0000000000008700000000000000880000000000000089000000000000008a000000000000008b
*000000000000008c000000000000008d000000000000008e000000000000008f00000000000000
*900000000000000091000000000000009200000000000000930000000000000094000000000000
*009500000000000000960000000000000097000000000000009800000000000000990000000000
*00009a000000000000009b0000000000000009000000000000000a000000000000000b00000000
*0000000c000000000000000d000000000000000e000000000000001f0000000000000020000000
*000000002100000000000000220000000000000023000000000000002406000000000000001f00
*000000000000200000000000000021000000000000002200000000000000230000000000000024
*0000000000000000000000000000000a000000000025000000000000009d000000000000008000
*000000000000810000000000000082000000000000008300000000000000840000000000000085
*000000000000008600000000000000870000000000000088000000000000008900000000000000
*8a000000000000008b000000000000008c000000000000008d000000000000008e000000000000
*008f00000000000000900000000000000091000000000000009200000000000000930000000000
*000094000000000000009500000000000000960000000000000097000000000000009800000000
*00000099000000000000009a000000000000009b0000000000000009000000000000000a000000
*000000000b000000000000000c000000000000000d000000000000000e00000000000000250000
*00000000002602000000000000002500000000000000260000000000000000000000000000000b
*00000000002f000000000000008000000000000000810000000000000082000000000000008300
*000000000000840000000000000085000000000000008600000000000000870000000000000088
*0000000000000089000000000000008a000000000000008b000000000000008c00000000000000
*8d000000000000008e000000000000008f00000000000000900000000000000091000000000000
*009200000000000000930000000000000094000000000000009500000000000000960000000000
*00009700000000000000980000000000000099000000000000009a000000000000009b00000000
*00000009000000000000000a000000000000000b000000000000000c000000000000000d000000
*000000000e000000000000000f0000000000000010000000000000001100000000000000270000
*0000000000280000000000000029000000000000002a000000000000002b000000000000002c00
*0000000000002d000000000000002e000000000000002f00000000000000300a00000000000000
*2c000000000000002d000000000000002b000000000000002e0000000000000029000000000000
*002a00000000000000270000000000000028000000000000002f00000000000000300000000000
*000000000000000000000c00000000040000000000000031030102040000005400000068000000
*6500000020010401000000000000000083000000000000001a000000000000001b010201000000
*2001070102010000002801040100000000000000009e000000000000001a000000000000001d01
*02010000002c01040100000000000000009f000000000000001a000000000000001e0201000000
*29010206000000200000006f000000760000006500000072000000200107010401000000000000
*0000a0000000000000001a000000000000001e0202000000200000006101020700000020000000
*77000000680000006500000072000000650000002001040100000000000000009f000000000000
*001a000000000000001e0214000000200000006900000073000000200000007400000068000000
*6500000020000000740000006f0000007000000020000000650000006c000000650000006d0000
*00650000006e000000740000000a00000000000000340301020400000054000000680000006500
*000020010401000000000000000083000000000000001a000000000000001b0102010000002001
*07010201000000280104010000000000000000a1000000000000001a000000000000001d010201
*0000002c01040100000000000000009f000000000000001a000000000000001e02010000002901
*0206000000200000006f0000007600000065000000720000002001070104010000000000000000
*a0000000000000001a000000000000001e02020000002000000061010207000000200000007700
*0000680000006500000072000000650000002001040100000000000000009f000000000000001a
*000000000000001e02170000002000000069000000730000002000000074000000680000006500
*000020000000620000006f00000074000000740000006f0000006d00000020000000650000006c
*000000650000006d000000650000006e000000740000000a000000000000003703010204000000
*54000000680000006500000020010401000000000000000083000000000000001a000000000000
*001b01020a00000020000000670000006900000076000000650000006e00000020000000620000
*00790000002001070102010000002801040100000000000000009e000000000000001a00000000
*0000001d0102010000002c0104010000000000000000a2000000000000001a000000000000001f
*02010000002902010000000a000000000000003a03010204000000540000006800000065000000
*20010401000000000000000083000000000000001a000000000000001b01020100000020010701
*0201000000280104010000000000000000a1000000000000001a000000000000001d0102010000
*002c0104010000000000000000a3000000000000001a000000000000001f020100000029020100
*00000a110000000000000080000000000000008200000000000000830000000000000009000000
*000000000a00000000000000310000000000000032000000000000003300000000000000340000
*000000000035000000000000003600000000000000370000000000000038000000000000003900
*0000000000003a000000000000003b000000000000003c0c000000000000003a00000000000000
*3b000000000000003c000000000000003700000000000000380000000000000039000000000000
*003400000000000000350000000000000036000000000000003100000000000000320000000000
*0000330000000000000000000000000000000d00000000003000000000000000a4000000000000
*008000000000000000810000000000000082000000000000008300000000000000840000000000
*000085000000000000008600000000000000870000000000000088000000000000008900000000
*0000008a000000000000008b000000000000008c000000000000008d000000000000008e000000
*000000008f00000000000000900000000000000091000000000000009200000000000000930000
*000000000094000000000000009500000000000000960000000000000097000000000000009800
*00000000000099000000000000009a000000000000009b00000000000000a500000000000000a6
*00000000000000a700000000000000a80000000000000009000000000000000a00000000000000
*0b000000000000000c000000000000000d000000000000000e000000000000003d000000000000
*003e000000000000003f0000000000000040000000000000004100000000000000420000000000
*000043000000000000004400000000000000450900000000000000430000000000000044000000
*0000000045000000000000004000000000000000410000000000000042000000000000003d0000
*00000000003e000000000000003f0000000000000000000000000000000e000000000032000000
*000000008000000000000000a900000000000000aa00000000000000ab00000000000000ac0000
*0000000000ad00000000000000ae00000000000000af0000000000000081000000000000008200
*000000000000830000000000000084000000000000008500000000000000860000000000000087
*00000000000000880000000000000089000000000000008a000000000000008b00000000000000
*8c000000000000008d000000000000008e000000000000008f0000000000000090000000000000
*009100000000000000920000000000000093000000000000009400000000000000950000000000
*000096000000000000009700000000000000980000000000000099000000000000009a00000000
*0000009b0000000000000009000000000000000a000000000000000b000000000000000c000000
*000000000d000000000000000e0000000000000046000000000000004700000000000000480000
*000000000049000000000000004a000000000000004b000000000000004c000000000000004d00
*0000000000004e09000000000000004c000000000000004d000000000000004e00000000000000
*49000000000000004a000000000000004b00000000000000460000000000000047000000000000
*00480000000000000000000000000000000f00000000000b000000000000008000000000000000
*8200000000000000830000000000000009000000000000000a000000000000000b000000000000
*000c000000000000004f0000000000000050000000000000005100000000000000520400000000
*000000510000000000000052000000000000004f00000000000000500000000000000000000000
*000000001000000000000b00000000000000800000000000000082000000000000008300000000
*00000009000000000000000a000000000000000b000000000000000c0000000000000053000000
*000000005400000000000000550000000000000056040000000000000055000000000000005600
*000000000000530000000000000054000000000000000000000000000000110000000000250000
*000000000080000000000000008100000000000000820000000000000083000000000000008400
*000000000000850000000000000086000000000000008700000000000000880000000000000089
*000000000000008a000000000000008b000000000000008c000000000000008d00000000000000
*8e000000000000008f000000000000009000000000000000910000000000000092000000000000
*009300000000000000940000000000000095000000000000009600000000000000970000000000
*0000980000000000000099000000000000009a000000000000009b000000000000000900000000
*0000000a000000000000000b000000000000000c000000000000000d000000000000000e000000
*000000005700000000000000580000000000000059030000000000000057000000000000005800
*000000000000590000000000000000000000000000001200000000003800000000000000800000
*000000000081000000000000008200000000000000830000000000000084000000000000008500
*00000000000086000000000000008700000000000000880000000000000089000000000000008a
*000000000000008b000000000000008c000000000000008d000000000000008e00000000000000
*8f0000000000000090000000000000009100000000000000920000000000000093000000000000
*009400000000000000950000000000000096000000000000009700000000000000980000000000
*000099000000000000009a000000000000009b0000000000000009000000000000000a00000000
*0000000b000000000000000c000000000000000d000000000000000e000000000000001f000000
*000000002000000000000000210000000000000022000000000000002300000000000000240000
*00000000005a000000000000005b000000000000005c000000000000005d000000000000005e00
*0000000000005f0000000000000060000000000000006100000000000000620000000000000063
*000000000000006400000000000000650000000000000066000000000000006700000000000000
*68000000000000006910000000000000005a000000000000005b000000000000005c0000000000
*00005d000000000000005e000000000000005f0000000000000060000000000000006100000000
*000000620000000000000063000000000000006400000000000000650000000000000066000000
*000000006700000000000000680000000000000069000000000000000000000000000000130000
*000000250000000000000080000000000000008100000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*000000000089000000000000008a000000000000008b000000000000008c000000000000008d00
*0000000000008e000000000000008f000000000000009000000000000000910000000000000092
*000000000000009300000000000000940000000000000095000000000000009600000000000000
*9700000000000000980000000000000099000000000000009a000000000000009b000000000000
*0009000000000000000a000000000000000b000000000000000c000000000000000d0000000000
*00000e000000000000006a000000000000006b000000000000006c03000000000000006a000000
*000000006b000000000000006c0000000000000000000000000000001400000000000300000000
*0000006d000000000000006e000000000000006f03000000000000006d000000000000006e0000
*00000000006f000000000000000000000000000000150000000000220000000000000080000000
*000000008100000000000000820000000000000083000000000000008400000000000000850000
*000000000086000000000000008700000000000000880000000000000089000000000000008a00
*0000000000008b000000000000008c000000000000008d000000000000008e000000000000008f
*000000000000009000000000000000910000000000000092000000000000009300000000000000
*940000000000000095000000000000009600000000000000970000000000000098000000000000
*0099000000000000009a000000000000009b000000000000000000000000000000010000000000
*000070000000000000007100000000000000720000000000000073040000000000000071000000
*000000007200000000000000730000000000000070000000000000000000000000000000160000
*000000280000000000000080000000000000008100000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*000000000089000000000000008a000000000000008b000000000000008c000000000000008d00
*0000000000008e000000000000008f000000000000009000000000000000910000000000000092
*000000000000009300000000000000940000000000000095000000000000009600000000000000
*9700000000000000980000000000000099000000000000009a000000000000009b000000000000
*000000000000000000010000000000000070000000000000007100000000000000720000000000
*000073000000000000007400000000000000750000000000000076000000000000007700000000
*000000780000000000000079060000000000000077000000000000007800000000000000790000
*000000000074000000000000007500000000000000760000000000000000000000000000001700
*000000002400000000000000800000000000000081000000000000008200000000000000830000
*000000000084000000000000008500000000000000860000000000000087000000000000008800
*00000000000089000000000000008a000000000000008b000000000000008c000000000000008d
*000000000000008e000000000000008f0000000000000090000000000000009100000000000000
*920000000000000093000000000000009400000000000000950000000000000096000000000000
*009700000000000000980000000000000099000000000000009a000000000000009b0000000000
*000000000000000000000100000000000000020000000000000070000000000000007100000000
*000000720000000000000073000000000000007a01000000000000007a00000000000000000000
*000000000018000000000021000000000000008000000000000000810000000000000082000000
*000000008300000000000000840000000000000085000000000000008600000000000000870000
*0000000000880000000000000089000000000000008a000000000000008b000000000000008c00
*0000000000008d000000000000008e000000000000008f00000000000000900000000000000091
*000000000000009200000000000000930000000000000094000000000000009500000000000000
*96000000000000009700000000000000980000000000000099000000000000009a000000000000
*009b00000000000000000000000000000001000000000000007b000000000000007c0000000000
*00007d03000000000000007b000000000000007c000000000000007d0000000000000000000000
*000000001900000000002400000000000000800000000000000081000000000000008200000000
*000000830000000000000084000000000000008500000000000000860000000000000087000000
*00000000880000000000000089000000000000008a000000000000008b000000000000008c0000
*00000000008d000000000000008e000000000000008f0000000000000090000000000000009100
*000000000000920000000000000093000000000000009400000000000000950000000000000096
*000000000000009700000000000000980000000000000099000000000000009a00000000000000
*9b000000000000000000000000000000010000000000000002000000000000007b000000000000
*007c000000000000007d000000000000007e000000000000007f02000000000000007e00000000
*0000007f00000000000000b0000000000000000000000000000000010000000000000000200000
*000000000000000000000000000100000000000000002100000000000000000000000000000002
*000000000000000022000000000000000000000000000000030300000000000000230000000000
*000000000000000000000301000000000000002300000000000000000000000000000003030000
*000000000024000000000000000000000000000000030100000000000000240000000000000000
*000000000000000300000000000000002500000000000000000000000000000003000000000000
*000026000000000000000000000000000000040300000000000000270000000000000000000000
*000000000400000000000000002800000000000000000000000000000004000000000000000029
*0000000000000000000000000000000400000000000000002a0000000000000000000000000000
*000400000000000000002b0000000000000000000000000000000400000000000000002c000000
*0000000000000000000000000503000000000000002d0000000000000000000000000000000500
*000000000000002e0000000000000000000000000000000500000000000000002f000000000000
*000000000000000000060300000000000000300000000000000000000000000000000603000000
*000000003100000000000000000000000000000006030000000000000032000000000000000000
*000000000000060000000000000000330000000000000000000000000000000600000000000000
*003400000000000000000000000000000006000000000000000035000000000000000000000000
*000000060000000000000000360000000000000000000000000000000703000000000000003700
*000000000000000000000000000007000000000000000038000000000000000000000000000000
*080300000000000000390000000000000000000000000000000801000000000000003900000000
*00000000000000000000000800000000000000003a000000000000000000000000000000080000
*0000000000003b0000000000000000000000000000000903000000000000003c00000000000000
*00000000000000000903000000000000003d000000000000000000000000000000090000000000
*0000003e0000000000000000000000000000000900000000000000003f00000000000000000000
*000000000009000000000000000040000000000000000000000000000000090000000000000000
*410000000000000000000000000000000a00000000000000004200000000000000000000000000
*00000a0000000000000000430000000000000000000000000000000b0300000000000000440000
*000000000000000000000000000b0000000000000000450000000000000000000000000000000b
*0300000000000000460000000000000000000000000000000b0000000000000000470000000000
*000000000000000000000b0300000000000000480000000000000000000000000000000b030000
*0000000000490000000000000000000000000000000b00000000000000004a0000000000000000
*000000000000000b00000000000000004b0000000000000000000000000000000b000000000000
*00004c0000000000000000000000000000000b00000000000000004d0000000000000000000000
*000000000c03000000000000004e0000000000000000000000000000000c01000000000000004e
*0000000000000000000000000000000c00000000000000004f0000000000000000000000000000
*000c0300000000000000500000000000000000000000000000000c010000000000000050000000
*0000000000000000000000000c0000000000000000510000000000000000000000000000000c03
*00000000000000520000000000000000000000000000000c010000000000000052000000000000
*0000000000000000000c0000000000000000530000000000000000000000000000000c03000000
*00000000540000000000000000000000000000000c010000000000000054000000000000000000
*0000000000000c0000000000000000550000000000000000000000000000000d03000000000000
*00560000000000000000000000000000000d010000000000000056000000000000000000000000
*0000000d0000000000000000570000000000000000000000000000000d03000000000000005800
*00000000000000000000000000000d010000000000000058000000000000000000000000000000
*0d0000000000000000590000000000000000000000000000000d03000000000000005a00000000
*00000000000000000000000d01000000000000005a0000000000000000000000000000000d0000
*0000000000005b0000000000000000000000000000000e03000000000000005c00000000000000
*00000000000000000e01000000000000005c0000000000000000000000000000000e0000000000
*0000005d0000000000000000000000000000000e03000000000000005e00000000000000000000
*00000000000e01000000000000005e0000000000000000000000000000000e0000000000000000
*5f0000000000000000000000000000000e03000000000000006000000000000000000000000000
*00000e0100000000000000600000000000000000000000000000000e0000000000000000610000
*000000000000000000000000000f0300000000000000620000000000000000000000000000000f
*0000000000000000630000000000000000000000000000000f0300000000000000640000000000
*000000000000000000000f00000000000000006500000000000000000000000000000010030000
*000000000062000000000000000000000000000000100000000000000000630000000000000000
*000000000000001003000000000000006400000000000000000000000000000010000000000000
*000065000000000000000000000000000000110300000000000000660000000000000000000000
*000000001101000000000000006600000000000000000000000000000011000000000000000067
*000000000000000000000000000000120000000000000000680000000000000000000000000000
*00120000000000000000690000000000000000000000000000001200000000000000006a000000
*0000000000000000000000001200000000000000006b0000000000000000000000000000001200
*000000000000006c0000000000000000000000000000001200000000000000006d000000000000
*0000000000000000001200000000000000006e0000000000000000000000000000001200000000
*000000006f00000000000000000000000000000012000000000000000070000000000000000000
*000000000000120000000000000000710000000000000000000000000000001200000000000000
*007200000000000000000000000000000012000000000000000073000000000000000000000000
*000000120000000000000000740000000000000000000000000000001200000000000000007500
*000000000000000000000000000012000000000000000076000000000000000000000000000000
*120000000000000000770000000000000000000000000000001303000000000000007800000000
*000000000000000000000013010000000000000078000000000000000000000000000000130000
*000000000000790000000000000000000000000000001403000000000000007a00000000000000
*00000000000000001401000000000000007a000000000000000000000000000000140000000000
*0000007b0000000000000000000000000000001503000000000000007c00000000000000000000
*00000000001503000000000000007d000000000000000000000000000000150000000000000000
*7e0000000000000000000000000000001500000000000000007f00000000000000000000000000
*000016030000000000000080000000000000000000000000000000160100000000000000800000
*000000000000000000000000001600000000000000008100000000000000000000000000000016
*030000000000000082000000000000000000000000000000160100000000000000820000000000
*000000000000000000001600000000000000008300000000000000000000000000000017000000
*000000000084000000000000000000000000000000180300000000000000850000000000000000
*000000000000001800000000000000008600000000000000000000000000000018000000000000
*000087000000000000000000000000000000190000000000000000880000000000000000000000
*0000000019000000000000000089000000000000001a000000000000001b00000000000000008a
*000000000000001a000000000000001b00000000000000008b000000000000001a000000000000
*001b00000000000000008c000000000000001a000000000000001b03000000000000008d000000
*000000001a000000000000001b00000000000000008e000000000000001a000000000000001b01
*000000000000008f000000000000001a000000000000001b03000000000000008f000000000000
*001a000000000000001b000000000000000090000000000000001a000000000000001b01000000
*0000000024000000000000001a000000000000001b030000000000000024000000000000001a00
*0000000000001b000000000000000091000000000000001a000000000000001b01000000000000
*0092000000000000001a000000000000001b030000000000000092000000000000001a00000000
*0000001b000000000000000093000000000000001a000000000000001b01000000000000009400
*0000000000001a000000000000001b030000000000000094000000000000001a00000000000000
*1b000000000000000095000000000000001a000000000000001b01000000000000009600000000
*0000001a000000000000001b030000000000000096000000000000001a000000000000001b0000
*00000000000097000000000000001a000000000000001b01000000000000009800000000000000
*1a000000000000001b030000000000000098000000000000001a000000000000001b0000000000
*00000099000000000000001a000000000000001b01000000000000009a000000000000001a0000
*00000000001b03000000000000009a000000000000001a000000000000001b0000000000000000
*9b000000000000001a000000000000001b01000000000000009c000000000000001a0000000000
*00001b03000000000000009c000000000000001a000000000000001c03000000000000009d0000
*00000000001a000000000000009e03000000000000009f000000000000001a00000000000000a0
*0000000000000000a1000000000000001a000000000000001e0100000000000000a20000000000
*00001a000000000000001e0300000000000000a3000000000000001a00000000000000a0000000
*0000000000a4000000000000001a00000000000000a50000000000000000a6000000000000001a
*00000000000000a50000000000000000a7000000000000001a00000000000000a8030000000000
*0000a9000000000000001a00000000000000a80000000000000000aa000000000000001a000000
*00000000a80000000000000000ab000000000000001a00000000000000a80000000000000000ac
*000000000000001a00000000000000a80000000000000000ad000000000000001a000000000000
*00ae0000000000000000af000000000000001a00000000000000ae0000000000000000b0000000
*000000001a00000000000000ae0000000000000000b1000000000000001a00000000000000ae03
*00000000000000b2000000000000001a00000000000000ae0000000000000000b3000000000000
*001a00000000000000ae0000000000000000b4000000000000001a00000000000000ae03000000
*00000000b500000000000000b6000000000000000d6d6f6e6f6964732d302e312e310000000000
*000014446174612e4d6f6e6f69642e4164646974697665000000000000001a446174612e4d6f6e
*6f69642e41646469746976652e53756761720000000000000017446174612e4d6f6e6f69642e43
*617465676f726963616c0000000000000013446174612e4d6f6e6f69642e526564756365720000
*000000000018446174612e4d6f6e6f69642e526564756365722e43686172000000000000002244
*6174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e000000000000
*0020446174612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f6465720000000000
*000018446174612e4d6f6e6f69642e526564756365722e57697468000000000000001544617461
*2e4d6f6e6f69642e47656e657261746f720000000000000019446174612e4d6f6e6f69642e5265
*64756365722e53756761720000000000000019446174612e4d6f6e6f69642e4c65786963616c2e
*576f726473000000000000000f446174612e4d6f6e6f69642e4f72640000000000000011446174
*612e4d6f6e6f69642e4d6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c69
*636174697665000000000000000f446174612e4d6f6e6f69642e4d617000000000000000124461
*74612e4d6f6e6f69642e496e744d61700000000000000010446174612e4d6f6e6f69642e53656c
*660000000000000021446174612e4d6f6e6f69642e47656e657261746f722e436f6d62696e6174
*6f72730000000000000010446174612e4d6f6e6f69642e556e6974000000000000001644617461
*2e4d6f6e6f69642e46726f6d537472696e67000000000000001a446174612e4d6f6e6f69642e4d
*756c7469706c696361746976650000000000000027446174612e4d6f6e6f69642e4d756c746970
*6c696361746976652e5472616e73666f726d6572730000000000000020446174612e4d6f6e6f69
*642e4d756c7469706c696361746976652e5375676172000000000000000a446174612e47726f75
*700000000000000010446174612e47726f75702e53756761720000000000000004626173650000
*00000000000b446174612e4d6f6e6f69640000000000000010436f6e74726f6c2e43617465676f
*72790000000000000008446174612e4f7264000000000000000a446174612e4d61796265000000
*00000000075072656c7564650000000000000004706c757300000000000000047a65726f000000
*00000000012b00000000000000034d6f6e0000000000000004456e646f00000000000000076765
*74456e646f000000000000000672756e4d6f6e0000000000000007526564756365720000000000
*000004756e69740000000000000004736e6f630000000000000004636f6e73000000000000000d
*666f6c644d6170526564756365000000000000000a666f6c64526564756365000000000000000b
*4368617252656475636572000000000000000866726f6d43686172000000000000000b696e7661
*6c696443686172000000000000000e536f75726365506f736974696f6e000000000000000c536f
*75726365436f6c756d6e000000000000000a536f757263654c696e65000000000000000b737461
*72744f6646696c65000000000000000c736f75726365436f6c756d6e000000000000000a736f75
*7263654c696e65000000000000001273686f77536f75726365506f736974696f6e000000000000
*000455544638000000000000000772756e55544638000000000000000b57697468526564756365
*72000000000000000e72756e5769746852656475636572000000000000000e776974686f757452
*656475636572000000000000000947656e657261746f720000000000000004456c656d00000000
*000000096d617052656475636500000000000000056d6170546f00000000000000076d61704672
*6f6d0000000000000006726564756365000000000000000b66726f6d496e746567657200000000
*0000000a66726f6d537472696e670000000000000007556e6c696e6564000000000000000a7275
*6e556e6c696e65640000000000000008556e737061636564000000000000000b72756e556e7370
*6163656400000000000000054c696e65730000000000000005576f726473000000000000000872
*756e576f726473000000000000000872756e4c696e65730000000000000009776f72647346726f
*6d00000000000000096c696e657346726f6d000000000000000b4d696e5072696f726974790000
*00000000000e6765744d696e5072696f72697479000000000000000b4d61785072696f72697479
*000000000000000e6765744d61785072696f7269747900000000000000034d696e000000000000
*00066765744d696e00000000000000034d617800000000000000066765744d6178000000000000
*000a416374696f6e57697468000000000000000d676574416374696f6e57697468000000000000
*00084d6f6e616453756d000000000000000b6765744d6f6e616453756d00000000000000064163
*74696f6e0000000000000009676574416374696f6e000000000000000d54726176657273616c57
*697468000000000000001067657454726176657273616c576974680000000000000009416c7465
*726e617465000000000000000c676574416c7465726e6174650000000000000009547261766572
*73616c000000000000000c67657454726176657273616c0000000000000009556e696f6e576974
*68000000000000000c676574556e696f6e576974680000000000000005556e696f6e0000000000
*000008676574556e696f6e000000000000000453656c66000000000000000767657453656c6600
*0000000000000974726176657273655f0000000000000004666f725f00000000000000056d6170
*4d5f0000000000000005666f724d5f0000000000000008666f6c644d6170270000000000000009
*636f6e6361744d61700000000000000003616e6400000000000000026f72000000000000000361
*6e790000000000000003616c6c000000000000000373756d000000000000000770726f64756374
*0000000000000004656c656d00000000000000076e6f74456c656d000000000000000666696c74
*6572000000000000000466696e640000000000000004556e69740000000000000007676574556e
*6974000000000000000a46726f6d537472696e67000000000000000d67657446726f6d53747269
*6e67000000000000000c53656d696e65617272696e6700000000000000144d756c7469706c6963
*61746976654d6f6e6f696400000000000000036f6e65000000000000000574696d657300000000
*00000003457870000000000000000667657445787000000000000000034c6f6700000000000000
*066765744c6f6700000000000000012a000000000000000547726f75700000000000000007676e
*656761746500000000000000056d696e757300000000000000012d00000000000000066e656761
*746500000000000000076d617070656e6400000000000000076d636f6e63617400000000000000
*066d656d70747900000000000000064d6f6e6f696400000000000000076765744475616c000000
*00000000044475616c0000000000000007617070456e646f0000000000000006676574416c6c00
*00000000000003416c6c0000000000000006676574416e790000000000000003416e7900000000
*0000000667657453756d000000000000000353756d000000000000000a67657450726f64756374
*000000000000000750726f64756374000000000000000867657446697273740000000000000005
*466972737400000000000000076765744c61737400000000000000044c61737400000000000000
*0843617465676f7279000000000000000b446174612e537472696e670000000000000008497353
*7472696e67000000000000000b4748432e436c617373657300000000000000036d696e00000000
*000000074e6f7468696e6700000000000000054d6179626500000000000000036d617800000000
*000000084748432e456e756d00000000000000086d6178426f756e6400000000000000086d696e
*426f756e64000000000000000d436f6e74726f6c2e4d6f6e616400000000000000094d6f6e6164
*506c757300000000000000066c6966744d3200000000000000033e3d3e00000000000000056d70
*6c757300000000000000056d7a65726f0000000000000013436f6e74726f6c2e4170706c696361
*7469766500000000000000066c696674413200000000000000022a3e0000000000000004707572
*65000000000000000b4170706c6963617469766500000000000000033c7c3e0000000000000005
*656d707479000000000000000b416c7465726e6174697665
newhex
*0d0cface000400000000000043c900000000000032918000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000200000000000000030000000000000000000000000000
*000300000000000000040000000000000000000000000000000300000000000000050000000000
*000000000000000000000300000000000000060000000000000000000000000000000300000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000004000000000000000a0000
*0000000000000000000000000004000000000000000b0000000000000000000000000000000400
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000500000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000600000000000000130000000000000000000000000000000600000000
*000000140000000000000000000000000000000600000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000007000000000000001a0000000000000000
*0000000000000007000000000000001b0000000000000000000000000000000800000000000000
*1c00000000000000000000000000000008000000000000001d0000000000000000000000000000
*0008000000000000001e00000000000000000000000000000008000000000000001f0000000000
*000000000000000000000900000000000000200000000000000000000000000000000900000000
*000000210000000000000000000000000000000900000000000000220000000000000000000000
*000000000900000000000000230000000000000000000000000000000900000000000000240000
*000000000000000000000000000900000000000000250000000000000000000000000000000900
*000000000000260000000000000000000000000000000900000000000000270000000000000000
*000000000000000900000000000000280000000000000000000000000000000900000000000000
*290000000000000000000000000000000a000000000000002a0000000000000000000000000000
*000a000000000000002b0000000000000000000000000000000b000000000000002c0000000000
*000000000000000000000b000000000000002d0000000000000000000000000000000b00000000
*0000002e0000000000000000000000000000000b000000000000002f0000000000000000000000
*000000000b00000000000000300000000000000000000000000000000b00000000000000310000
*000000000000000000000000000b00000000000000320000000000000000000000000000000b00
*000000000000330000000000000000000000000000000b00000000000000340000000000000000
*000000000000000b00000000000000350000000000000000000000000000000c00000000000000
*360000000000000000000000000000000c00000000000000370000000000000000000000000000
*000c00000000000000380000000000000000000000000000000c00000000000000390000000000
*000000000000000000000c000000000000003a0000000000000000000000000000000c00000000
*0000003b0000000000000000000000000000000c000000000000003c0000000000000000000000
*000000000c000000000000003d0000000000000000000000000000000c000000000000003e0000
*000000000000000000000000000c000000000000003f0000000000000000000000000000000c00
*000000000000400000000000000000000000000000000c00000000000000410000000000000000
*000000000000000d00000000000000420000000000000000000000000000000d00000000000000
*430000000000000000000000000000000d00000000000000440000000000000000000000000000
*000d00000000000000450000000000000000000000000000000d00000000000000460000000000
*000000000000000000000d00000000000000470000000000000000000000000000000d00000000
*000000480000000000000000000000000000000d00000000000000490000000000000000000000
*000000000d000000000000004a0000000000000000000000000000000e000000000000004b0000
*000000000000000000000000000e000000000000004c0000000000000000000000000000000e00
*0000000000004d0000000000000000000000000000000e000000000000004e0000000000000000
*000000000000000e000000000000004f0000000000000000000000000000000e00000000000000
*500000000000000000000000000000000e00000000000000510000000000000000000000000000
*000e00000000000000520000000000000000000000000000000e00000000000000530000000000
*000000000000000000000f00000000000000540000000000000000000000000000000f00000000
*000000550000000000000000000000000000001000000000000000560000000000000000000000
*000000001000000000000000570000000000000000000000000000001100000000000000580000
*000000000000000000000000001100000000000000590000000000000000000000000000001100
*0000000000005a00000000000000000000000000000012000000000000005b0000000000000000
*0000000000000012000000000000005c0000000000000000000000000000001200000000000000
*5d00000000000000000000000000000012000000000000005e0000000000000000000000000000
*0012000000000000005f0000000000000000000000000000001200000000000000600000000000
*000000000000000000001200000000000000610000000000000000000000000000001200000000
*000000620000000000000000000000000000001200000000000000630000000000000000000000
*000000001200000000000000640000000000000000000000000000001200000000000000650000
*000000000000000000000000001200000000000000660000000000000000000000000000001200
*000000000000670000000000000000000000000000001200000000000000680000000000000000
*000000000000001200000000000000690000000000000000000000000000001200000000000000
*6a00000000000000000000000000000013000000000000006b0000000000000000000000000000
*0013000000000000006c00000000000000000000000000000013000000000000006d0000000000
*0000000000000000000014000000000000006e0000000000000000000000000000001400000000
*0000006f0000000000000000000000000000001400000000000000700000000000000000000000
*000000001500000000000000710000000000000000000000000000001500000000000000720000
*000000000000000000000000001500000000000000730000000000000000000000000000001500
*000000000000740000000000000000000000000000001600000000000000750000000000000000
*000000000000001600000000000000760000000000000000000000000000001600000000000000
*770000000000000000000000000000001600000000000000780000000000000000000000000000
*0016000000000000007900000000000000000000000000000016000000000000007a0000000000
*0000000000000000000017000000000000007b0000000000000000000000000000001800000000
*0000007c00000000000000000000000000000018000000000000007d0000000000000000000000
*0000000018000000000000007e00000000000000000000000000000019000000000000007f0000
*0000000000000000000000000019190000000000000000000000000000000100000000001e0000
*000000000080000000000000008100000000000000820000000000000083000000000000008400
*000000000000850000000000000086000000000000008700000000000000880000000000000089
*000000000000008a000000000000008b000000000000008c000000000000008d00000000000000
*8e000000000000008f000000000000009000000000000000910000000000000092000000000000
*009300000000000000940000000000000095000000000000009600000000000000970000000000
*0000980000000000000099000000000000009a000000000000009b000000000000000000000000
*000000010200000000000000000000000000000001000000000000000000000000000000020000
*0000001f0000000000000080000000000000008100000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*000000000089000000000000008a000000000000008b000000000000008c000000000000008d00
*0000000000008e000000000000008f000000000000009000000000000000910000000000000092
*000000000000009300000000000000940000000000000095000000000000009600000000000000
*9700000000000000980000000000000099000000000000009a000000000000009b000000000000
*000000000000000000010000000000000002010000000000000002000000000000000000000000
*000000030000000002000000000000000303010202000000410000002001040100000000000000
*0083000000000000001a000000000000001b01020b000000200000006900000073000000200000
*006a00000075000000730000007400000020000000610000002001040100000000000000009c00
*0000000000001a000000000000001c021300000020000000770000006900000074000000680000
*00200000006f0000006e00000065000000200000006f000000620000006a000000650000006300
*0000740000002e000000200000000a000000000000000503010204000000540000006800000065
*00000020010401000000000000000083000000000000001a000000000000001b01023300000020
*0000006f0000006600000020000000650000006e000000640000006f0000006d0000006f000000
*72000000700000006800000069000000730000006d00000073000000200000006f000000760000
*00650000007200000020000000730000006f0000006d00000065000000200000006f0000006200
*00006a00000065000000630000007400000020000000690000006e00000020000000610000006e
*000000200000006100000072000000620000006900000074000000720000006100000072000000
*790000002001040100000000000000009c000000000000001a000000000000001c02010000000a
*090000000000000080000000000000008200000000000000830000000000000003000000000000
*000400000000000000050000000000000006000000000000000700000000000000080600000000
*000000050000000000000006000000000000000700000000000000030000000000000004000000
*000000000800000000000000000000000000000004000000000022000000000000008000000000
*000000810000000000000082000000000000008300000000000000840000000000000085000000
*0000000086000000000000008700000000000000880000000000000089000000000000008a0000
*00000000008b000000000000008c000000000000008d000000000000008e000000000000008f00
*000000000000900000000000000091000000000000009200000000000000930000000000000094
*000000000000009500000000000000960000000000000097000000000000009800000000000000
*99000000000000009a000000000000009b0000000000000009000000000000000a000000000000
*000b000000000000000c000000000000000d000000000000000e06000000000000000900000000
*0000000a000000000000000b000000000000000c000000000000000d000000000000000e000000
*000000000000000000000000050000000000250000000000000080000000000000008100000000
*000000820000000000000083000000000000008400000000000000850000000000000086000000
*000000008700000000000000880000000000000089000000000000008a000000000000008b0000
*00000000008c000000000000008d000000000000008e000000000000008f000000000000009000
*000000000000910000000000000092000000000000009300000000000000940000000000000095
*000000000000009600000000000000970000000000000098000000000000009900000000000000
*9a000000000000009b0000000000000009000000000000000a000000000000000b000000000000
*000c000000000000000d000000000000000e000000000000000f00000000000000100000000000
*00001103000000000000000f000000000000001100000000000000100000000000000000000000
*000000000600000000002c00000000000000800000000000000081000000000000008200000000
*000000830000000000000084000000000000008500000000000000860000000000000087000000
*00000000880000000000000089000000000000008a000000000000008b000000000000008c0000
*00000000008d000000000000008e000000000000008f0000000000000090000000000000009100
*000000000000920000000000000093000000000000009400000000000000950000000000000096
*000000000000009700000000000000980000000000000099000000000000009a00000000000000
*9b0000000000000009000000000000000a000000000000000b000000000000000c000000000000
*000d000000000000000e000000000000000f000000000000001000000000000000110000000000
*000012000000000000001300000000000000140000000000000015000000000000001600000000
*000000170000000000000018070000000000000012000000000000001400000000000000130000
*000000000017000000000000001600000000000000150000000000000018000000000000000000
*000000000000070000000000270000000000000080000000000000008100000000000000820000
*000000000083000000000000008400000000000000850000000000000086000000000000008700
*000000000000880000000000000089000000000000008a000000000000008b000000000000008c
*000000000000008d000000000000008e000000000000008f000000000000009000000000000000
*910000000000000092000000000000009300000000000000940000000000000095000000000000
*0096000000000000009700000000000000980000000000000099000000000000009a0000000000
*00009b0000000000000009000000000000000a000000000000000b000000000000000c00000000
*0000000d000000000000000e000000000000000f00000000000000100000000000000011000000
*0000000019000000000000001a020000000000000019000000000000001a000000000000000000
*000000000000080000000000260000000000000080000000000000008100000000000000820000
*000000000083000000000000008400000000000000850000000000000086000000000000008700
*000000000000880000000000000089000000000000008a000000000000008b000000000000008c
*000000000000008d000000000000008e000000000000008f000000000000009000000000000000
*910000000000000092000000000000009300000000000000940000000000000095000000000000
*0096000000000000009700000000000000980000000000000099000000000000009a0000000000
*00009b0000000000000009000000000000000a000000000000000b000000000000000c00000000
*0000000d000000000000000e000000000000001b000000000000001c000000000000001d000000
*000000001e04000000000000001b000000000000001c000000000000001d000000000000001e00
*00000000000000000000000000000900000000002c000000000000008000000000000000810000
*000000000082000000000000008300000000000000840000000000000085000000000000008600
*0000000000008700000000000000880000000000000089000000000000008a000000000000008b
*000000000000008c000000000000008d000000000000008e000000000000008f00000000000000
*900000000000000091000000000000009200000000000000930000000000000094000000000000
*009500000000000000960000000000000097000000000000009800000000000000990000000000
*00009a000000000000009b0000000000000009000000000000000a000000000000000b00000000
*0000000c000000000000000d000000000000000e000000000000001f0000000000000020000000
*000000002100000000000000220000000000000023000000000000002400000000000000250000
*000000000026000000000000002700000000000000280a00000000000000230000000000000024
*000000000000002500000000000000260000000000000027000000000000002800000000000000
*210000000000000022000000000000001f00000000000000200000000000000000000000000000
*000a000000000025000000000000009d0000000000000080000000000000008100000000000000
*820000000000000083000000000000008400000000000000850000000000000086000000000000
*008700000000000000880000000000000089000000000000008a000000000000008b0000000000
*00008c000000000000008d000000000000008e000000000000008f000000000000009000000000
*000000910000000000000092000000000000009300000000000000940000000000000095000000
*0000000096000000000000009700000000000000980000000000000099000000000000009a0000
*00000000009b0000000000000009000000000000000a000000000000000b000000000000000c00
*0000000000000d000000000000000e0000000000000029000000000000002a0200000000000000
*29000000000000002a0000000000000000000000000000000b00000000002f0000000000000080
*000000000000008100000000000000820000000000000083000000000000008400000000000000
*850000000000000086000000000000008700000000000000880000000000000089000000000000
*008a000000000000008b000000000000008c000000000000008d000000000000008e0000000000
*00008f000000000000009000000000000000910000000000000092000000000000009300000000
*000000940000000000000095000000000000009600000000000000970000000000000098000000
*0000000099000000000000009a000000000000009b0000000000000009000000000000000a0000
*00000000000b000000000000000c000000000000000d000000000000000e000000000000000f00
*000000000000100000000000000011000000000000002b000000000000002c000000000000002d
*000000000000002e000000000000002f0000000000000030000000000000003100000000000000
*32000000000000003300000000000000340a000000000000003000000000000000310000000000
*00002f0000000000000032000000000000002d000000000000002e000000000000002b00000000
*0000002c000000000000003300000000000000340000000000000000000000000000000c000000
*000400000000000000350301020400000054000000680000006500000020010401000000000000
*000083000000000000001a000000000000001b0102010000002001070102010000002801040100
*000000000000009e000000000000001a000000000000001d0102010000002c0104010000000000
*0000009f000000000000001a000000000000001e020100000029010206000000200000006f0000
*007600000065000000720000002001070104010000000000000000a0000000000000001a000000
*000000001e02020000002000000061010207000000200000007700000068000000650000007200
*0000650000002001040100000000000000009f000000000000001a000000000000001e02140000
*002000000069000000730000002000000074000000680000006500000020000000740000006f00
*00007000000020000000650000006c000000650000006d000000650000006e000000740000000a
*000000000000003803010204000000540000006800000065000000200104010000000000000000
*83000000000000001a000000000000001b01020100000020010701020100000028010401000000
*0000000000a1000000000000001a000000000000001d0102010000002c01040100000000000000
*009f000000000000001a000000000000001e020100000029010206000000200000006f00000076
*00000065000000720000002001070104010000000000000000a0000000000000001a0000000000
*00001e020200000020000000610102070000002000000077000000680000006500000072000000
*650000002001040100000000000000009f000000000000001a000000000000001e021700000020
*00000069000000730000002000000074000000680000006500000020000000620000006f000000
*74000000740000006f0000006d00000020000000650000006c000000650000006d000000650000
*006e000000740000000a000000000000003b030102040000005400000068000000650000002001
*0401000000000000000083000000000000001a000000000000001b01020a000000200000006700
*00006900000076000000650000006e000000200000006200000079000000200107010201000000
*2801040100000000000000009e000000000000001a000000000000001d0102010000002c010401
*0000000000000000a2000000000000001a000000000000001f02010000002902010000000a0000
*00000000003e030102040000005400000068000000650000002001040100000000000000008300
*0000000000001a000000000000001b010201000000200107010201000000280104010000000000
*000000a1000000000000001a000000000000001d0102010000002c0104010000000000000000a3
*000000000000001a000000000000001f02010000002902010000000a1100000000000000800000
*00000000008200000000000000830000000000000009000000000000000a000000000000003500
*00000000000036000000000000003700000000000000380000000000000039000000000000003a
*000000000000003b000000000000003c000000000000003d000000000000003e00000000000000
*3f00000000000000400c000000000000003e000000000000003f00000000000000400000000000
*00003b000000000000003c000000000000003d0000000000000038000000000000003900000000
*0000003a0000000000000035000000000000003600000000000000370000000000000000000000
*000000000d00000000003000000000000000a40000000000000080000000000000008100000000
*000000820000000000000083000000000000008400000000000000850000000000000086000000
*000000008700000000000000880000000000000089000000000000008a000000000000008b0000
*00000000008c000000000000008d000000000000008e000000000000008f000000000000009000
*000000000000910000000000000092000000000000009300000000000000940000000000000095
*000000000000009600000000000000970000000000000098000000000000009900000000000000
*9a000000000000009b00000000000000a500000000000000a600000000000000a7000000000000
*00a80000000000000009000000000000000a000000000000000b000000000000000c0000000000
*00000d000000000000000e00000000000000410000000000000042000000000000004300000000
*000000440000000000000045000000000000004600000000000000470000000000000048000000
*000000004909000000000000004700000000000000480000000000000049000000000000004400
*000000000000450000000000000046000000000000004100000000000000420000000000000043
*0000000000000000000000000000000e000000000032000000000000008000000000000000a900
*000000000000aa00000000000000ab00000000000000ac00000000000000ad00000000000000ae
*00000000000000af00000000000000810000000000000082000000000000008300000000000000
*840000000000000085000000000000008600000000000000870000000000000088000000000000
*0089000000000000008a000000000000008b000000000000008c000000000000008d0000000000
*00008e000000000000008f00000000000000900000000000000091000000000000009200000000
*000000930000000000000094000000000000009500000000000000960000000000000097000000
*00000000980000000000000099000000000000009a000000000000009b00000000000000090000
*00000000000a000000000000000b000000000000000c000000000000000d000000000000000e00
*0000000000004a000000000000004b000000000000004c000000000000004d000000000000004e
*000000000000004f00000000000000500000000000000051000000000000005209000000000000
*005000000000000000510000000000000052000000000000004d000000000000004e0000000000
*00004f000000000000004a000000000000004b000000000000004c000000000000000000000000
*0000000f0000000000090000000000000080000000000000008200000000000000830000000000
*000009000000000000000a000000000000000b000000000000000c000000000000005300000000
*000000540200000000000000530000000000000054000000000000000000000000000000100000
*000000090000000000000080000000000000008200000000000000830000000000000009000000
*000000000a000000000000000b000000000000000c000000000000005500000000000000560200
*000000000000550000000000000056000000000000000000000000000000110000000000250000
*000000000080000000000000008100000000000000820000000000000083000000000000008400
*000000000000850000000000000086000000000000008700000000000000880000000000000089
*000000000000008a000000000000008b000000000000008c000000000000008d00000000000000
*8e000000000000008f000000000000009000000000000000910000000000000092000000000000
*009300000000000000940000000000000095000000000000009600000000000000970000000000
*0000980000000000000099000000000000009a000000000000009b000000000000000900000000
*0000000a000000000000000b000000000000000c000000000000000d000000000000000e000000
*000000005700000000000000580000000000000059030000000000000057000000000000005800
*000000000000590000000000000000000000000000001200000000003c00000000000000800000
*000000000081000000000000008200000000000000830000000000000084000000000000008500
*00000000000086000000000000008700000000000000880000000000000089000000000000008a
*000000000000008b000000000000008c000000000000008d000000000000008e00000000000000
*8f0000000000000090000000000000009100000000000000920000000000000093000000000000
*009400000000000000950000000000000096000000000000009700000000000000980000000000
*000099000000000000009a000000000000009b0000000000000009000000000000000a00000000
*0000000b000000000000000c000000000000000d000000000000000e000000000000001f000000
*000000002000000000000000210000000000000022000000000000002300000000000000240000
*000000000025000000000000002600000000000000270000000000000028000000000000005a00
*0000000000005b000000000000005c000000000000005d000000000000005e000000000000005f
*000000000000006000000000000000610000000000000062000000000000006300000000000000
*640000000000000065000000000000006600000000000000670000000000000068000000000000
*006910000000000000005a000000000000005b000000000000005c000000000000005d00000000
*0000005e000000000000005f000000000000006000000000000000610000000000000062000000
*000000006300000000000000640000000000000065000000000000006600000000000000670000
*000000000068000000000000006900000000000000000000000000000013000000000025000000
*000000008000000000000000810000000000000082000000000000008300000000000000840000
*000000000085000000000000008600000000000000870000000000000088000000000000008900
*0000000000008a000000000000008b000000000000008c000000000000008d000000000000008e
*000000000000008f00000000000000900000000000000091000000000000009200000000000000
*930000000000000094000000000000009500000000000000960000000000000097000000000000
*00980000000000000099000000000000009a000000000000009b00000000000000090000000000
*00000a000000000000000b000000000000000c000000000000000d000000000000000e00000000
*0000006a000000000000006b000000000000006c03000000000000006a000000000000006b0000
*00000000006c00000000000000000000000000000014000000000003000000000000006d000000
*000000006e000000000000006f03000000000000006d000000000000006e000000000000006f00
*000000000000000000000000000015000000000022000000000000008000000000000000810000
*000000000082000000000000008300000000000000840000000000000085000000000000008600
*0000000000008700000000000000880000000000000089000000000000008a000000000000008b
*000000000000008c000000000000008d000000000000008e000000000000008f00000000000000
*900000000000000091000000000000009200000000000000930000000000000094000000000000
*009500000000000000960000000000000097000000000000009800000000000000990000000000
*00009a000000000000009b00000000000000000000000000000001000000000000007000000000
*000000710000000000000072000000000000007304000000000000007100000000000000720000
*000000000073000000000000007000000000000000000000000000000016000000000028000000
*000000008000000000000000810000000000000082000000000000008300000000000000840000
*000000000085000000000000008600000000000000870000000000000088000000000000008900
*0000000000008a000000000000008b000000000000008c000000000000008d000000000000008e
*000000000000008f00000000000000900000000000000091000000000000009200000000000000
*930000000000000094000000000000009500000000000000960000000000000097000000000000
*00980000000000000099000000000000009a000000000000009b00000000000000000000000000
*000001000000000000007000000000000000710000000000000072000000000000007300000000
*000000740000000000000075000000000000007600000000000000770000000000000078000000
*000000007906000000000000007700000000000000780000000000000079000000000000007400
*000000000000750000000000000076000000000000000000000000000000170000000000240000
*000000000080000000000000008100000000000000820000000000000083000000000000008400
*000000000000850000000000000086000000000000008700000000000000880000000000000089
*000000000000008a000000000000008b000000000000008c000000000000008d00000000000000
*8e000000000000008f000000000000009000000000000000910000000000000092000000000000
*009300000000000000940000000000000095000000000000009600000000000000970000000000
*0000980000000000000099000000000000009a000000000000009b000000000000000000000000
*000000010000000000000002000000000000007000000000000000710000000000000072000000
*0000000073000000000000007a01000000000000007a0000000000000000000000000000001800
*000000002100000000000000800000000000000081000000000000008200000000000000830000
*000000000084000000000000008500000000000000860000000000000087000000000000008800
*00000000000089000000000000008a000000000000008b000000000000008c000000000000008d
*000000000000008e000000000000008f0000000000000090000000000000009100000000000000
*920000000000000093000000000000009400000000000000950000000000000096000000000000
*009700000000000000980000000000000099000000000000009a000000000000009b0000000000
*0000000000000000000001000000000000007b000000000000007c000000000000007d03000000
*000000007b000000000000007c000000000000007d000000000000000000000000000000190000
*000000240000000000000080000000000000008100000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*000000000089000000000000008a000000000000008b000000000000008c000000000000008d00
*0000000000008e000000000000008f000000000000009000000000000000910000000000000092
*000000000000009300000000000000940000000000000095000000000000009600000000000000
*9700000000000000980000000000000099000000000000009a000000000000009b000000000000
*000000000000000000010000000000000002000000000000007b000000000000007c0000000000
*00007d000000000000007e000000000000007f02000000000000007e000000000000007f000000
*00000000b000000000000000000000000000000001000000000000000020000000000000000000
*000000000000010000000000000000210000000000000000000000000000000200000000000000
*002200000000000000000000000000000003030000000000000023000000000000000000000000
*000000030100000000000000230000000000000000000000000000000303000000000000002400
*000000000000000000000000000003010000000000000024000000000000000000000000000000
*030000000000000000250000000000000000000000000000000300000000000000002600000000
*000000000000000000000004030000000000000027000000000000000000000000000000040000
*000000000000280000000000000000000000000000000400000000000000002900000000000000
*00000000000000000400000000000000002a000000000000000000000000000000040000000000
*0000002b0000000000000000000000000000000400000000000000002c00000000000000000000
*00000000000503000000000000002d000000000000000000000000000000050000000000000000
*2e0000000000000000000000000000000500000000000000002f00000000000000000000000000
*000006030000000000000030000000000000000000000000000000060300000000000000310000
*000000000000000000000000000603000000000000003200000000000000000000000000000006
*000000000000000033000000000000000000000000000000060000000000000000340000000000
*000000000000000000000600000000000000003500000000000000000000000000000006000000
*000000000036000000000000000000000000000000070300000000000000370000000000000000
*000000000000000700000000000000003800000000000000000000000000000008030000000000
*000039000000000000000000000000000000080100000000000000390000000000000000000000
*000000000800000000000000003a0000000000000000000000000000000800000000000000003b
*0000000000000000000000000000000903000000000000003c0000000000000000000000000000
*000901000000000000003c0000000000000000000000000000000903000000000000003d000000
*0000000000000000000000000901000000000000003d0000000000000000000000000000000903
*000000000000003e0000000000000000000000000000000903000000000000003f000000000000
*000000000000000000090000000000000000400000000000000000000000000000000900000000
*000000004100000000000000000000000000000009000000000000000042000000000000000000
*000000000000090000000000000000430000000000000000000000000000000a00000000000000
*00440000000000000000000000000000000a000000000000000045000000000000000000000000
*0000000b0300000000000000460000000000000000000000000000000b00000000000000004700
*00000000000000000000000000000b030000000000000048000000000000000000000000000000
*0b0000000000000000490000000000000000000000000000000b03000000000000004a00000000
*00000000000000000000000b03000000000000004b0000000000000000000000000000000b0000
*0000000000004c0000000000000000000000000000000b00000000000000004d00000000000000
*00000000000000000b00000000000000004e0000000000000000000000000000000b0000000000
*0000004f0000000000000000000000000000000c03000000000000005000000000000000000000
*00000000000c0100000000000000500000000000000000000000000000000c0000000000000000
*510000000000000000000000000000000c03000000000000005200000000000000000000000000
*00000c0100000000000000520000000000000000000000000000000c0000000000000000530000
*000000000000000000000000000c0300000000000000540000000000000000000000000000000c
*0100000000000000540000000000000000000000000000000c0000000000000000550000000000
*000000000000000000000c0300000000000000560000000000000000000000000000000c010000
*0000000000560000000000000000000000000000000c0000000000000000570000000000000000
*000000000000000d0300000000000000580000000000000000000000000000000d010000000000
*0000580000000000000000000000000000000d0000000000000000590000000000000000000000
*000000000d03000000000000005a0000000000000000000000000000000d01000000000000005a
*0000000000000000000000000000000d00000000000000005b0000000000000000000000000000
*000d03000000000000005c0000000000000000000000000000000d01000000000000005c000000
*0000000000000000000000000d00000000000000005d0000000000000000000000000000000e03
*000000000000005e0000000000000000000000000000000e01000000000000005e000000000000
*0000000000000000000e00000000000000005f0000000000000000000000000000000e03000000
*00000000600000000000000000000000000000000e010000000000000060000000000000000000
*0000000000000e0000000000000000610000000000000000000000000000000e03000000000000
*00620000000000000000000000000000000e010000000000000062000000000000000000000000
*0000000e0000000000000000630000000000000000000000000000000f03000000000000006400
*00000000000000000000000000000f000000000000000065000000000000000000000000000000
*100300000000000000640000000000000000000000000000001000000000000000006500000000
*000000000000000000000011030000000000000066000000000000000000000000000000110100
*000000000000660000000000000000000000000000001100000000000000006700000000000000
*000000000000000012000000000000000068000000000000000000000000000000120000000000
*000000690000000000000000000000000000001200000000000000006a00000000000000000000
*00000000001200000000000000006b000000000000000000000000000000120000000000000000
*6c0000000000000000000000000000001200000000000000006d00000000000000000000000000
*00001200000000000000006e0000000000000000000000000000001200000000000000006f0000
*000000000000000000000000001200000000000000007000000000000000000000000000000012
*000000000000000071000000000000000000000000000000120000000000000000720000000000
*000000000000000000001200000000000000007300000000000000000000000000000012000000
*000000000074000000000000000000000000000000120000000000000000750000000000000000
*000000000000001200000000000000007600000000000000000000000000000012000000000000
*000077000000000000000000000000000000130300000000000000780000000000000000000000
*000000001301000000000000007800000000000000000000000000000013000000000000000079
*0000000000000000000000000000001403000000000000007a0000000000000000000000000000
*001401000000000000007a0000000000000000000000000000001400000000000000007b000000
*0000000000000000000000001503000000000000007c0000000000000000000000000000001503
*000000000000007d0000000000000000000000000000001500000000000000007e000000000000
*0000000000000000001500000000000000007f0000000000000000000000000000001603000000
*000000008000000000000000000000000000000016010000000000000080000000000000000000
*000000000000160000000000000000810000000000000000000000000000001603000000000000
*008200000000000000000000000000000016010000000000000082000000000000000000000000
*000000160000000000000000830000000000000000000000000000001700000000000000008400
*000000000000000000000000000018030000000000000085000000000000000000000000000000
*180000000000000000860000000000000000000000000000001800000000000000008700000000
*000000000000000000000019000000000000000088000000000000000000000000000000190000
*00000000000089000000000000001a000000000000001b00000000000000008a00000000000000
*1a000000000000001b00000000000000008b000000000000001a000000000000001b0000000000
*0000008c000000000000001a000000000000001b03000000000000008d000000000000001a0000
*00000000001b00000000000000008e000000000000001a000000000000001b0100000000000000
*8f000000000000001a000000000000001b03000000000000008f000000000000001a0000000000
*00001b000000000000000090000000000000001a000000000000001b0100000000000000240000
*00000000001a000000000000001b030000000000000024000000000000001a000000000000001b
*000000000000000091000000000000001a000000000000001b0100000000000000920000000000
*00001a000000000000001b030000000000000092000000000000001a000000000000001b000000
*000000000093000000000000001a000000000000001b010000000000000094000000000000001a
*000000000000001b030000000000000094000000000000001a000000000000001b000000000000
*000095000000000000001a000000000000001b010000000000000096000000000000001a000000
*000000001b030000000000000096000000000000001a000000000000001b000000000000000097
*000000000000001a000000000000001b010000000000000098000000000000001a000000000000
*001b030000000000000098000000000000001a000000000000001b000000000000000099000000
*000000001a000000000000001b01000000000000009a000000000000001a000000000000001b03
*000000000000009a000000000000001a000000000000001b00000000000000009b000000000000
*001a000000000000001b01000000000000009c000000000000001a000000000000001b03000000
*000000009c000000000000001a000000000000001c03000000000000009d000000000000001a00
*0000000000009e03000000000000009f000000000000001a00000000000000a000000000000000
*00a1000000000000001a000000000000001e0100000000000000a2000000000000001a00000000
*0000001e0300000000000000a3000000000000001a00000000000000a00000000000000000a400
*0000000000001a00000000000000a50000000000000000a6000000000000001a00000000000000
*a50000000000000000a7000000000000001a00000000000000a80300000000000000a900000000
*0000001a00000000000000a80000000000000000aa000000000000001a00000000000000a80000
*000000000000ab000000000000001a00000000000000a80000000000000000ac00000000000000
*1a00000000000000a80000000000000000ad000000000000001a00000000000000ae0000000000
*000000af000000000000001a00000000000000ae0000000000000000b0000000000000001a0000
*0000000000ae0000000000000000b1000000000000001a00000000000000ae0300000000000000
*b2000000000000001a00000000000000ae0000000000000000b3000000000000001a0000000000
*0000ae0000000000000000b4000000000000001a00000000000000ae0300000000000000b50000
*0000000000b6000000000000000d6d6f6e6f6964732d302e312e31000000000000001444617461
*2e4d6f6e6f69642e4164646974697665000000000000001a446174612e4d6f6e6f69642e416464
*69746976652e53756761720000000000000017446174612e4d6f6e6f69642e43617465676f7269
*63616c0000000000000013446174612e4d6f6e6f69642e52656475636572000000000000001844
*6174612e4d6f6e6f69642e526564756365722e436861720000000000000022446174612e4d6f6e
*6f69642e4c65786963616c2e536f75726365506f736974696f6e0000000000000020446174612e
*4d6f6e6f69642e4c65786963616c2e555446382e4465636f646572000000000000001844617461
*2e4d6f6e6f69642e526564756365722e576974680000000000000015446174612e4d6f6e6f6964
*2e47656e657261746f720000000000000019446174612e4d6f6e6f69642e526564756365722e53
*756761720000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f7264730000
*00000000000f446174612e4d6f6e6f69642e4f72640000000000000011446174612e4d6f6e6f69
*642e4d6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c6963617469766500
*0000000000000f446174612e4d6f6e6f69642e4d61700000000000000012446174612e4d6f6e6f
*69642e496e744d61700000000000000010446174612e4d6f6e6f69642e53656c66000000000000
*0021446174612e4d6f6e6f69642e47656e657261746f722e436f6d62696e61746f727300000000
*00000010446174612e4d6f6e6f69642e556e69740000000000000016446174612e4d6f6e6f6964
*2e46726f6d537472696e67000000000000001a446174612e4d6f6e6f69642e4d756c7469706c69
*6361746976650000000000000027446174612e4d6f6e6f69642e4d756c7469706c696361746976
*652e5472616e73666f726d6572730000000000000020446174612e4d6f6e6f69642e4d756c7469
*706c696361746976652e5375676172000000000000000a446174612e47726f7570000000000000
*0010446174612e47726f75702e5375676172000000000000000462617365000000000000000b44
*6174612e4d6f6e6f69640000000000000010436f6e74726f6c2e43617465676f72790000000000
*000008446174612e4f7264000000000000000a446174612e4d6179626500000000000000075072
*656c7564650000000000000004706c757300000000000000047a65726f00000000000000012b00
*000000000000034d6f6e0000000000000004456e646f0000000000000007676574456e646f0000
*00000000000672756e4d6f6e0000000000000007526564756365720000000000000004756e6974
*0000000000000004736e6f630000000000000004636f6e73000000000000000d666f6c644d6170
*526564756365000000000000000a666f6c64526564756365000000000000000b43686172526564
*75636572000000000000000866726f6d43686172000000000000000b696e76616c696443686172
*000000000000000e536f75726365506f736974696f6e000000000000000c536f75726365436f6c
*756d6e000000000000000a536f757263654c696e65000000000000000b73746172744f6646696c
*65000000000000000c736f75726365436f6c756d6e000000000000000a736f757263654c696e65
*000000000000001273686f77536f75726365506f736974696f6e00000000000000045554463800
*0000000000000772756e55544638000000000000000b5769746852656475636572000000000000
*000e72756e5769746852656475636572000000000000000e776974686f75745265647563657200
*0000000000000656616c75657300000000000000044b657973000000000000000947656e657261
*746f720000000000000004456c656d00000000000000096d617052656475636500000000000000
*056d6170546f00000000000000076d617046726f6d000000000000000672656475636500000000
*0000000b66726f6d496e7465676572000000000000000a66726f6d537472696e67000000000000
*0007556e6c696e6564000000000000000a72756e556e6c696e65640000000000000008556e7370
*61636564000000000000000b72756e556e73706163656400000000000000054c696e6573000000
*0000000005576f726473000000000000000872756e576f726473000000000000000872756e4c69
*6e65730000000000000009776f72647346726f6d00000000000000096c696e657346726f6d0000
*00000000000b4d696e5072696f72697479000000000000000e6765744d696e5072696f72697479
*000000000000000b4d61785072696f72697479000000000000000e6765744d61785072696f7269
*747900000000000000034d696e00000000000000066765744d696e00000000000000034d617800
*000000000000066765744d6178000000000000000a416374696f6e57697468000000000000000d
*676574416374696f6e5769746800000000000000084d6f6e616453756d000000000000000b6765
*744d6f6e616453756d0000000000000006416374696f6e0000000000000009676574416374696f
*6e000000000000000d54726176657273616c576974680000000000000010676574547261766572
*73616c576974680000000000000009416c7465726e617465000000000000000c676574416c7465
*726e617465000000000000000954726176657273616c000000000000000c676574547261766572
*73616c0000000000000009556e696f6e57697468000000000000000c676574556e696f6e576974
*68000000000000000453656c66000000000000000767657453656c660000000000000009747261
*76657273655f0000000000000004666f725f00000000000000056d61704d5f0000000000000005
*666f724d5f0000000000000008666f6c644d6170270000000000000009636f6e6361744d617000
*00000000000003616e6400000000000000026f720000000000000003616e790000000000000003
*616c6c000000000000000373756d000000000000000770726f647563740000000000000004656c
*656d00000000000000076e6f74456c656d000000000000000666696c7465720000000000000004
*66696e640000000000000004556e69740000000000000007676574556e6974000000000000000a
*46726f6d537472696e67000000000000000d67657446726f6d537472696e67000000000000000c
*53656d696e65617272696e6700000000000000144d756c7469706c696361746976654d6f6e6f69
*6400000000000000036f6e65000000000000000574696d65730000000000000003457870000000
*000000000667657445787000000000000000034c6f6700000000000000066765744c6f67000000
*00000000012a000000000000000547726f75700000000000000007676e65676174650000000000
*0000056d696e757300000000000000012d00000000000000066e65676174650000000000000007
*6d617070656e6400000000000000076d636f6e63617400000000000000066d656d707479000000
*00000000064d6f6e6f696400000000000000076765744475616c00000000000000044475616c00
*00000000000007617070456e646f0000000000000006676574416c6c0000000000000003416c6c
*0000000000000006676574416e790000000000000003416e79000000000000000667657453756d
*000000000000000353756d000000000000000a67657450726f6475637400000000000000075072
*6f6475637400000000000000086765744669727374000000000000000546697273740000000000
*0000076765744c61737400000000000000044c617374000000000000000843617465676f727900
*0000000000000b446174612e537472696e6700000000000000084973537472696e670000000000
*00000b4748432e436c617373657300000000000000036d696e00000000000000074e6f7468696e
*6700000000000000054d6179626500000000000000036d617800000000000000084748432e456e
*756d00000000000000086d6178426f756e6400000000000000086d696e426f756e640000000000
*00000d436f6e74726f6c2e4d6f6e616400000000000000094d6f6e6164506c7573000000000000
*00066c6966744d3200000000000000033e3d3e00000000000000056d706c757300000000000000
*056d7a65726f0000000000000013436f6e74726f6c2e4170706c69636174697665000000000000
*00066c696674413200000000000000022a3e000000000000000470757265000000000000000b41
*70706c6963617469766500000000000000033c7c3e0000000000000005656d7074790000000000
*00000b416c7465726e6174697665
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 18
-<a name="line-10"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
-<a name="line-24"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-26"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-27"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-28"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-29"></a>
-<a name="line-30"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-31"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-32"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-36"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Keys</span><span class='hs-layout'>(</span><span class='hs-conid'>Keys</span><span class='hs-layout'>)</span>
+<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Values</span><span class='hs-layout'>(</span><span class='hs-conid'>Values</span><span class='hs-layout'>)</span>
+<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
+<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
+<a name="line-19"></a><span class='hs-comment'>-- import qualified Data.ByteString.Char8 as Strict8</span>
+<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
+<a name="line-21"></a><span class='hs-comment'>-- import qualified Data.ByteString.Lazy.Char8 as Lazy8</span>
+<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
+<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
+<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
+<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
+<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
+<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
+<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
+<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>
+<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
+<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
+<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 46
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span>
-<a name="line-40"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-44"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-48"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-51"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> 
-<a name="line-52"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>
-<a name="line-54"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-55"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-56"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-57"></a>
-<a name="line-58"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
-<a name="line-59"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
-<a name="line-60"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
-<a name="line-61"></a><span class='hs-comment'>-- These aren't happy, but should work</span>
-<a name="line-62"></a><span class='hs-comment'>{-- RULES "reduce/fold" reduce = fold --}</span>
-<a name="line-63"></a><span class='hs-comment'>{-- RULES "mapReduce/foldMap" mapReduce = foldMap --}</span>
-<a name="line-64"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-65"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
+<a name="line-38"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
+<a name="line-39"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
+<a name="line-41"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-42"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-43"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-44"></a>
+<a name="line-45"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
+<a name="line-46"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-47"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-48"></a>
+<a name="line-49"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-50"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-51"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-52"></a>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-55"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
+<a name="line-56"></a>
+<a name="line-57"></a><span class='hs-comment'>{-
+<a name="line-58"></a>instance Generator Strict8.ByteString where
+<a name="line-59"></a>    type Elem Strict8.ByteString = Char
+<a name="line-60"></a>    mapTo f = Strict8.foldl' (\a -&gt; snoc a . f)
+<a name="line-61"></a>
+<a name="line-62"></a>instance Generator Lazy.ByteString where
+<a name="line-63"></a>    type Elem Lazy8.ByteString = Char
+<a name="line-64"></a>    mapReduce f = fold . parMap rwhnf (mapReduce f) . Lazy8.toChunks
+<a name="line-65"></a>-}</span>
+<a name="line-66"></a>
+<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
+<a name="line-68"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-69"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-70"></a>
+<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-72"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-73"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-74"></a>
+<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-76"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
+<a name="line-77"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-78"></a>
+<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-80"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-81"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-82"></a>
+<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
+<a name="line-84"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-85"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-86"></a>
+<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-88"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
+<a name="line-89"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-90"></a>
+<a name="line-91"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-92"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
+<a name="line-93"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-94"></a>
+<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-96"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
+<a name="line-97"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
+<a name="line-98"></a>
+<a name="line-99"></a><a name="Keys"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Keys</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Keys</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKeys</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-100"></a>
+<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-102"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-103"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-104"></a>
+<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span>
+<a name="line-107"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
+<a name="line-108"></a>
+<a name="line-109"></a><a name="Values"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Values</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Values</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getValues</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
+<a name="line-110"></a>
+<a name="line-111"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-112"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-113"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-114"></a>
+<a name="line-115"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-116"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
+<a name="line-117"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
+<a name="line-118"></a>
+<a name="line-119"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
+<a name="line-120"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
+<a name="line-121"></a><span class='hs-comment'>{-- SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Strict8.ByteString -&gt; m --}</span>
+<a name="line-122"></a><span class='hs-comment'>{-- SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Lazy8.ByteString -&gt; m --}</span>
+<a name="line-123"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (c `Reducer` m) =&gt; [c] -&gt; m #-}</span>
+<a name="line-124"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Generator (FingerTree v e), e `Reducer` m) =&gt; FingerTree v e -&gt; m #-}</span>
+<a name="line-125"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
+<a name="line-126"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (e `Reducer` m) =&gt; Seq e -&gt; m #-}</span>
+<a name="line-127"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; IntSet -&gt; m #-}</span>
+<a name="line-128"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (a `Reducer` m) =&gt; Set a -&gt; m #-}</span>
+<a name="line-129"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((Int,v) `Reducer` m) =&gt; IntMap v -&gt; m #-}</span>
+<a name="line-130"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((k,v) `Reducer` m) =&gt; Map k v -&gt; m #-}</span>
+<a name="line-131"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; Keys (IntMap v) -&gt; m #-}</span>
+<a name="line-132"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (k `Reducer` m) =&gt; Keys (Map k v) -&gt; m #-}</span>
+<a name="line-133"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (IntMap v) -&gt; m #-}</span>
+<a name="line-134"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (Map k v) -&gt; m #-}</span>
+<a name="line-135"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-136"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html 12
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
-<a name="line-15"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
-<a name="line-21"></a>
-<a name="line-22"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
-<a name="line-26"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
+<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-6"></a>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span>
+<a name="line-9"></a>
+<a name="line-10"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
+<a name="line-11"></a>
+<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
+<a name="line-14"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-15"></a>
+<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Map.html 12
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
-<a name="line-16"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
-<a name="line-22"></a>
-<a name="line-23"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
-<a name="line-27"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
+<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-6"></a>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span><span class='hs-layout'>)</span>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span>
+<a name="line-10"></a>
+<a name="line-11"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
+<a name="line-12"></a>
+<a name="line-13"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-16"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
+<a name="line-17"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative.html 21
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="Seminearring"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span>
-<a name="line-19"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-20"></a>
-<a name="line-21"></a><a name="Seminearring"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> 
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>mempty</span><span class='hs-keyglyph'>]</span>
-<a name="line-25"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>ys</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>xss</span><span class='hs-layout'>,</span> <span class='hs-varid'>ys</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>]</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-31"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap'</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-34"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-35"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>one</span>
-<a name="line-41"></a>    <span class='hs-conid'>Self</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>one</span>
-<a name="line-45"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-comment'>-- class Absorbing m where isZero :: m -&gt; Bool</span>
+<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
+<a name="line-15"></a>
+<a name="line-16"></a><a name="Seminearring"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-17"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span>
+<a name="line-18"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-19"></a>
+<a name="line-20"></a><a name="Seminearring"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> 
+<a name="line-21"></a>
+<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-23"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>mempty</span><span class='hs-keyglyph'>]</span>
+<a name="line-24"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>ys</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>xss</span><span class='hs-layout'>,</span> <span class='hs-varid'>ys</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>]</span>
+<a name="line-25"></a>
+<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
+<a name="line-27"></a>
+<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-29"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
+<a name="line-30"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap'</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-33"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
+<a name="line-34"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
+<a name="line-35"></a>
+<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-37"></a>
+<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-39"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>one</span>
+<a name="line-40"></a>    <span class='hs-conid'>Self</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-43"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>one</span>
+<a name="line-44"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-comment'>-- class Absorbing m where isZero :: m -&gt; Bool</span>
}
