[added a couple more monoids for applicative and monad
ekmett@gmail.com**20090325084732] {
hunk ./Data/Monoid/Applicative.hs 7
+    , MonoidTraversal(MonoidTraversal,getMonoidTraversal)
hunk ./Data/Monoid/Applicative.hs 10
-import Control.Applicative (Applicative, (*>), pure, Alternative, empty, (<|>))
+import Control.Applicative (Applicative, (*>), pure, Alternative, empty, (<|>), liftA2)
hunk ./Data/Monoid/Applicative.hs 41
+newtype MonoidTraversal m n = MonoidTraversal { getMonoidTraversal :: m n }
+
+instance (Applicative m, Monoid n) => Monoid (MonoidTraversal m n) where
+    mempty = MonoidTraversal (pure mempty)
+    MonoidTraversal a `mappend` MonoidTraversal b = MonoidTraversal (liftA2 mappend a b)
+
+instance (Applicative m, Monoid n) => Reducer (m n) (MonoidTraversal m n) where
+    unit = MonoidTraversal
+
+
hunk ./Data/Monoid/Monad.hs 7
+    , KleisliEndo(KleisliEndo,getKleisliEndo)
+    , MonoidAction(MonoidAction,getMonoidAction)
hunk ./Data/Monoid/Monad.hs 12
-import Control.Monad (MonadPlus, mplus, mzero)
+import Control.Monad (MonadPlus, mplus, mzero, (>=>), liftM2)
hunk ./Data/Monoid/Monad.hs 39
-    a `cons` MonadSum b = MonadSum (a `mplus` b)
-    MonadSum a `snoc` b = MonadSum (a `mplus` b)
hunk ./Data/Monoid/Monad.hs 40
+newtype KleisliEndo m a = KleisliEndo { getKleisliEndo :: a -> m a } 
+
+instance Monad m => Monoid (KleisliEndo m a) where
+    mempty = KleisliEndo return
+    KleisliEndo a `mappend` KleisliEndo b = KleisliEndo (a >=> b)
+
+instance Monad m => Reducer (a -> m a) (KleisliEndo m a) where
+    unit = KleisliEndo
+
+newtype MonoidAction m n = MonoidAction { getMonoidAction :: m n }
+
+instance (Monad m, Monoid n) => Monoid (MonoidAction m n) where
+    mempty = MonoidAction (return mempty)
+    MonoidAction a `mappend` MonoidAction b = MonoidAction (liftM2 mappend a b)
+
+instance (Monad m, Monoid n) => Reducer (m n) (MonoidAction m n) where
+    unit = MonoidAction
hunk ./dist/doc/html/monoids/Data-Monoid-Applicative.html 349
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMonoidTraversal"
+></A
+><B
+>MonoidTraversal</B
+> m n </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Applicative.html#MonoidTraversal"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMonoidTraversal"
+></A
+><B
+>MonoidTraversal</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMonoidTraversal"
+></A
+><B
+>getMonoidTraversal</B
+> :: m n</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonoidTraversal')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:MonoidTraversal" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m n) (<A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
+>MonoidTraversal</A
+> m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
+>MonoidTraversal</A
+> m n)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
hunk ./dist/doc/html/monoids/Data-Monoid-Monad.html 349
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AKleisliEndo"
+></A
+><B
+>KleisliEndo</B
+> m a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Monad.html#KleisliEndo"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AKleisliEndo"
+></A
+><B
+>KleisliEndo</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetKleisliEndo"
+></A
+><B
+>getKleisliEndo</B
+> :: a -&gt; m a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:KleisliEndo')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:KleisliEndo" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
+>KleisliEndo</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (a -&gt; m a) (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
+>KleisliEndo</A
+> m a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMonoidAction"
+></A
+><B
+>MonoidAction</B
+> m n </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Monad.html#MonoidAction"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMonoidAction"
+></A
+><B
+>MonoidAction</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMonoidAction"
+></A
+><B
+>getMonoidAction</B
+> :: m n</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonoidAction')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:MonoidAction" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m n) (<A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
+>MonoidAction</A
+> m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
+>MonoidAction</A
+> m n)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 667
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m n) (<A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
+>MonoidAction</A
+> m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 689
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m n) (<A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
+>MonoidTraversal</A
+> m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 735
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (a -&gt; m a) (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
+>KleisliEndo</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (a -&gt; m a) (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
+>KleisliEndo</A
+> m a)</TD
+></TR
hunk ./dist/doc/html/monoids/doc-index.html 85
+><TD CLASS="indexentry"
+>&gt;=&gt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Monad</TD
+></TR
+><TR CLASS="indexrow"
hunk ./dist/doc/html/monoids/doc-index.html 426
+>getKleisliEndo</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AgetKleisliEndo"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./dist/doc/html/monoids/doc-index.html 480
+>getMonoidAction</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AgetMonoidAction"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMonoidTraversal</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#v%3AgetMonoidTraversal"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./dist/doc/html/monoids/doc-index.html 564
+>KleisliEndo</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AKleisliEndo"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
hunk ./dist/doc/html/monoids/doc-index.html 600
+>liftA2</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>liftM2</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Monad</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./dist/doc/html/monoids/doc-index.html 800
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>MonoidAction</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AMonoidAction"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>MonoidTraversal</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#v%3AMonoidTraversal"
+>Data.Monoid.Applicative</A
+></TD
+></TR
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*0d0cface00040000000000002cf70000000000001e625200000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000700000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000008000000000000002d0000000000000000000000000000000900000000
*0000002e00000000000000000000000000000009000000000000002f0000000000000000000000
*000000000900000000000000300000000000000000000000000000000900000000000000310000
*000000000000000000000000000a00000000000000320000000000000000000000000000000a00
*000000000000330000000000000000000000000000000a00000000000000340000000000000000
*000000000000000a00000000000000350000000000000000000000000000000b00000000000000
*360000000000000000000000000000000b00000000000000370000000000000000000000000000
*000b00000000000000380000000000000000000000000000000b00000000000000390000000000
*000000000000000000000b000000000000003a0000000000000000000000000000000b00000000
*0000003b0000000000000000000000000000000c000000000000003c0000000000000000000000
*000000000c000000000000003d0000000000000000000000000000000c000000000000003e0000
*000000000000000000000000000c000000000000003f0000000000000000000000000000000c00
*000000000000400000000000000000000000000000000c00000000000000410000000000000000
*000000000000000c00000000000000420000000000000000000000000000000c00000000000000
*430000000000000000000000000000000c00000000000000440000000000000000000000000000
*000c00000000000000450000000000000000000000000000000c00000000000000460000000000
*000000000000000000000c00000000000000470000000000000000000000000000000c00000000
*000000480000000000000000000000000000000d00000000000000490000000000000000000000
*000000000d000000000000004a0000000000000000000000000000000d000000000000004b0000
*000000000000000000000000000d000000000000004c0000000000000000000000000000000d00
*0000000000004d0000000000000000000000000000000d000000000000004e0000000000000000
*000000000000000d000000000000004f0000000000000000000000000000000d00000000000000
*500000000000000000000000000000000d00000000000000510000000000000000000000000000
*000d0e000000000000000000000000000000010000000000210000000000000052000000000000
*005300000000000000540000000000000055000000000000005600000000000000570000000000
*0000580000000000000059000000000000005a000000000000005b000000000000005c00000000
*0000005d000000000000005e000000000000005f00000000000000600000000000000061000000
*000000006200000000000000630000000000000064000000000000006500000000000000660000
*00000000006700000000000000680000000000000069000000000000006a000000000000006b00
*0000000000006c000000000000006d000000000000000000000000000000010000000000000002
*000000000000000300000000000000040500000000000000000000000000000001000000000000
*000200000000000000030000000000000004000000000000000000000000000000020000000000
*240000000000000052000000000000005300000000000000540000000000000055000000000000
*0056000000000000005700000000000000580000000000000059000000000000005a0000000000
*00005b000000000000005c000000000000005d000000000000005e000000000000005f00000000
*000000600000000000000061000000000000006200000000000000630000000000000064000000
*000000006500000000000000660000000000000067000000000000006800000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*000000000000000600000000000000070300000000000000050000000000000007000000000000
*00060000000000000000000000000000000300000000002b000000000000005200000000000000
*530000000000000054000000000000005500000000000000560000000000000057000000000000
*00580000000000000059000000000000005a000000000000005b000000000000005c0000000000
*00005d000000000000005e000000000000005f0000000000000060000000000000006100000000
*000000620000000000000063000000000000006400000000000000650000000000000066000000
*000000006700000000000000680000000000000069000000000000006a000000000000006b0000
*00000000006c000000000000006d00000000000000000000000000000001000000000000000200
*000000000000030000000000000004000000000000000500000000000000060000000000000007
*00000000000000080000000000000009000000000000000a000000000000000b00000000000000
*0c000000000000000d000000000000000e070000000000000008000000000000000a0000000000
*000009000000000000000d000000000000000c000000000000000b000000000000000e00000000
*000000000000000000000004000000000026000000000000005200000000000000530000000000
*000054000000000000005500000000000000560000000000000057000000000000005800000000
*00000059000000000000005a000000000000005b000000000000005c000000000000005d000000
*000000005e000000000000005f0000000000000060000000000000006100000000000000620000
*000000000063000000000000006400000000000000650000000000000066000000000000006700
*000000000000680000000000000069000000000000006a000000000000006b000000000000006c
*000000000000006d00000000000000000000000000000001000000000000000200000000000000
*030000000000000004000000000000000500000000000000060000000000000007000000000000
*000f000000000000001002000000000000000f0000000000000010000000000000000000000000
*000000050000000000250000000000000052000000000000005300000000000000540000000000
*000055000000000000005600000000000000570000000000000058000000000000005900000000
*0000005a000000000000005b000000000000005c000000000000005d000000000000005e000000
*000000005f00000000000000600000000000000061000000000000006200000000000000630000
*000000000064000000000000006500000000000000660000000000000067000000000000006800
*00000000000069000000000000006a000000000000006b000000000000006c000000000000006d
*000000000000000000000000000000010000000000000002000000000000000300000000000000
*040000000000000011000000000000001200000000000000130000000000000014040000000000
*000011000000000000001200000000000000130000000000000014000000000000000000000000
*000000060000000004000000000000001503010204000000540000006800000065000000200104
*01000000000000000055000000000000000e000000000000000f01020100000020010701020100
*00002801040100000000000000006e000000000000000e00000000000000100102010000002c01
*040100000000000000006f000000000000000e0000000000000011020100000029010206000000
*200000006f00000076000000650000007200000020010701040100000000000000007000000000
*0000000e0000000000000011020200000020000000610102070000002000000077000000680000
*006500000072000000650000002001040100000000000000006f000000000000000e0000000000
*000011021400000020000000690000007300000020000000740000006800000065000000200000
*00740000006f0000007000000020000000650000006c000000650000006d000000650000006e00
*0000740000000a0000000000000018030102040000005400000068000000650000002001040100
*0000000000000055000000000000000e000000000000000f010201000000200107010201000000
*28010401000000000000000071000000000000000e00000000000000100102010000002c010401
*00000000000000006f000000000000000e00000000000000110201000000290102060000002000
*00006f000000760000006500000072000000200107010401000000000000000070000000000000
*000e00000000000000110202000000200000006101020700000020000000770000006800000065
*00000072000000650000002001040100000000000000006f000000000000000e00000000000000
*110217000000200000006900000073000000200000007400000068000000650000002000000062
*0000006f00000074000000740000006f0000006d00000020000000650000006c00000065000000
*6d000000650000006e000000740000000a000000000000001b0301020400000054000000680000
*006500000020010401000000000000000055000000000000000e000000000000000f01020a0000
*0020000000670000006900000076000000650000006e0000002000000062000000790000002001
*070102010000002801040100000000000000006e000000000000000e0000000000000010010201
*0000002c010401000000000000000072000000000000000e000000000000001202010000002902
*010000000a000000000000001e0301020400000054000000680000006500000020010401000000
*000000000055000000000000000e000000000000000f0102010000002001070102010000002801
*0401000000000000000071000000000000000e00000000000000100102010000002c0104010000
*00000000000073000000000000000e000000000000001202010000002902010000000a11000000
*000000005200000000000000540000000000000055000000000000000000000000000000010000
*000000000015000000000000001600000000000000170000000000000018000000000000001900
*0000000000001a000000000000001b000000000000001c000000000000001d000000000000001e
*000000000000001f00000000000000200c000000000000001e000000000000001f000000000000
*0020000000000000001b000000000000001c000000000000001d00000000000000180000000000
*000019000000000000001a00000000000000150000000000000016000000000000001700000000
*00000000000000000000000700000000002a000000000000007400000000000000520000000000
*000053000000000000005400000000000000550000000000000056000000000000005700000000
*000000580000000000000059000000000000005a000000000000005b000000000000005c000000
*000000005d000000000000005e000000000000005f000000000000006000000000000000610000
*000000000062000000000000006300000000000000640000000000000065000000000000006600
*0000000000006700000000000000680000000000000069000000000000006a000000000000006b
*000000000000006c000000000000006d0000000000000075000000000000007600000000000000
*000000000000000001000000000000000200000000000000030000000000000004000000000000
*002100000000000000220000000000000023000000000000002400000000000000250000000000
*000026060000000000000024000000000000002500000000000000260000000000000021000000
*000000002200000000000000230000000000000000000000000000000800000000002d00000000
*00000052000000000000007700000000000000780000000000000079000000000000007a000000
*000000007b000000000000007c0000000000000053000000000000005400000000000000550000
*000000000056000000000000005700000000000000580000000000000059000000000000005a00
*0000000000005b000000000000005c000000000000005d000000000000005e000000000000005f
*000000000000006000000000000000610000000000000062000000000000006300000000000000
*640000000000000065000000000000006600000000000000670000000000000068000000000000
*0069000000000000006a000000000000006b000000000000006c000000000000006d0000000000
*000000000000000000000100000000000000020000000000000003000000000000000400000000
*0000002700000000000000280000000000000029000000000000002a000000000000002b000000
*000000002c06000000000000002a000000000000002b000000000000002c000000000000002700
*0000000000002800000000000000290000000000000000000000000000001300000000001f0000
*000000000052000000000000005400000000000000550000000000000000000000000000000100
*000000000000020000000000000003000000000000007d000000000000007e000000000000007f
*000000000000008000000000000000810000000000000082000000000000008300000000000000
*840000000000000085000000000000008600000000000000870000000000000088000000000000
*0089000000000000008a000000000000008b000000000000008c000000000000008d0000000000
*00008e000000000000008f00000000000000900000000000000091000000000000009200000000
*000000930000000000000094000000000000000000000000000000000900000000000b00000000
*000000520000000000000054000000000000005500000000000000000000000000000001000000
*00000000020000000000000003000000000000002d000000000000002e000000000000002f0000
*00000000003004000000000000002f0000000000000030000000000000002d000000000000002e
*0000000000000000000000000000000a00000000000b0000000000000052000000000000005400
*000000000000550000000000000000000000000000000100000000000000020000000000000003
*000000000000003100000000000000320000000000000033000000000000003404000000000000
*003300000000000000340000000000000031000000000000003200000000000000000000000000
*00000b000000000022000000000000005200000000000000530000000000000054000000000000
*005500000000000000560000000000000057000000000000005800000000000000590000000000
*00005a000000000000005b000000000000005c000000000000005d000000000000005e00000000
*0000005f0000000000000060000000000000006100000000000000620000000000000063000000
*000000006400000000000000650000000000000066000000000000006700000000000000680000
*000000000069000000000000006a000000000000006b000000000000006c000000000000006d00
*000000000000350000000000000036000000000000003700000000000000380000000000000039
*000000000000003a06000000000000003500000000000000360000000000000037000000000000
*00380000000000000039000000000000003a0000000000000000000000000000000c0000000000
*2f0000000000000052000000000000005300000000000000540000000000000055000000000000
*0056000000000000005700000000000000580000000000000059000000000000005a0000000000
*00005b000000000000005c000000000000005d000000000000005e000000000000005f00000000
*000000600000000000000061000000000000006200000000000000630000000000000064000000
*000000006500000000000000660000000000000067000000000000006800000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000003500
*00000000000036000000000000003700000000000000380000000000000039000000000000003a
*000000000000003b000000000000003c000000000000003d000000000000003e00000000000000
*3f0000000000000040000000000000004100000000000000420000000000000043000000000000
*00440000000000000045000000000000004600000000000000470d000000000000003b00000000
*0000003c000000000000003d000000000000003e000000000000003f0000000000000040000000
*000000004100000000000000420000000000000043000000000000004400000000000000450000
*00000000004600000000000000470000000000000000000000000000000d00000000002e000000
*000000005200000000000000530000000000000054000000000000005500000000000000560000
*00000000005700000000000000580000000000000059000000000000005a000000000000005b00
*0000000000005c000000000000005d000000000000005e000000000000005f0000000000000060
*000000000000006100000000000000620000000000000063000000000000006400000000000000
*650000000000000066000000000000006700000000000000680000000000000069000000000000
*006a000000000000006b000000000000006c000000000000006d00000000000000000000000000
*000001000000000000000200000000000000030000000000000004000000000000000500000000
*00000006000000000000000700000000000000480000000000000049000000000000004a000000
*000000004b000000000000004c000000000000004d000000000000004e000000000000004f0000
*00000000005000000000000000510a000000000000004d000000000000004e000000000000004c
*000000000000004f000000000000004a000000000000004b000000000000004800000000000000
*490000000000000050000000000000005100000000000000950000000000000000000000000000
*000103000000000000001400000000000000000000000000000001000000000000000015000000
*000000000000000000000000010000000000000000160000000000000000000000000000000100
*000000000000001700000000000000000000000000000001000000000000000018000000000000
*000000000000000000020300000000000000190000000000000000000000000000000200000000
*000000001a0000000000000000000000000000000200000000000000001b000000000000000000
*0000000000000303000000000000001c0000000000000000000000000000000303000000000000
*001d0000000000000000000000000000000303000000000000001e000000000000000000000000
*0000000300000000000000001f0000000000000000000000000000000300000000000000002000
*000000000000000000000000000003000000000000000021000000000000000000000000000000
*030000000000000000220000000000000000000000000000000403000000000000002300000000
*000000000000000000000004000000000000000024000000000000000000000000000000050300
*000000000000250000000000000000000000000000000501000000000000002500000000000000
*000000000000000005000000000000000026000000000000000000000000000000050000000000
*000000270000000000000000000000000000000603000000000000002800000000000000000000
*000000000006010000000000000028000000000000000000000000000000060000000000000000
*290000000000000000000000000000000603000000000000002a00000000000000000000000000
*00000601000000000000002a0000000000000000000000000000000600000000000000002b0000
*000000000000000000000000000603000000000000002c00000000000000000000000000000006
*01000000000000002c0000000000000000000000000000000600000000000000002d0000000000
*000000000000000000000603000000000000002e00000000000000000000000000000006010000
*00000000002e0000000000000000000000000000000600000000000000002f0000000000000000
*000000000000000703000000000000003000000000000000000000000000000007010000000000
*000030000000000000000000000000000000070000000000000000310000000000000000000000
*000000000703000000000000003200000000000000000000000000000007010000000000000032
*000000000000000000000000000000070000000000000000330000000000000000000000000000
*000803000000000000003400000000000000000000000000000008010000000000000034000000
*000000000000000000000000080000000000000000350000000000000000000000000000000803
*000000000000003600000000000000000000000000000008010000000000000036000000000000
*000000000000000000080000000000000000370000000000000000000000000000000903000000
*000000003800000000000000000000000000000009000000000000000039000000000000000000
*0000000000000903000000000000003a0000000000000000000000000000000900000000000000
*003b0000000000000000000000000000000a030000000000000038000000000000000000000000
*0000000a0000000000000000390000000000000000000000000000000a03000000000000003a00
*00000000000000000000000000000a00000000000000003b000000000000000000000000000000
*0b03000000000000003c0000000000000000000000000000000b03000000000000003d00000000
*00000000000000000000000b00000000000000003e0000000000000000000000000000000b0000
*0000000000003f0000000000000000000000000000000b00000000000000004000000000000000
*00000000000000000b0000000000000000410000000000000000000000000000000c0000000000
*000000420000000000000000000000000000000c00000000000000004300000000000000000000
*00000000000c0000000000000000440000000000000000000000000000000c0000000000000000
*450000000000000000000000000000000c00000000000000004600000000000000000000000000
*00000c0000000000000000470000000000000000000000000000000c0000000000000000480000
*000000000000000000000000000c0000000000000000490000000000000000000000000000000c
*00000000000000004a0000000000000000000000000000000c00000000000000004b0000000000
*000000000000000000000c00000000000000004c0000000000000000000000000000000c000000
*00000000004d0000000000000000000000000000000c00000000000000004e0000000000000000
*000000000000000d03000000000000004f0000000000000000000000000000000d000000000000
*0000500000000000000000000000000000000d0300000000000000510000000000000000000000
*000000000d0000000000000000520000000000000000000000000000000d030000000000000053
*0000000000000000000000000000000d0300000000000000540000000000000000000000000000
*000d0000000000000000550000000000000000000000000000000d000000000000000056000000
*0000000000000000000000000d0000000000000000570000000000000000000000000000000d00
*0000000000000058000000000000000e000000000000000f000000000000000059000000000000
*000e000000000000000f00000000000000005a000000000000000e000000000000000f00000000
*000000005b000000000000000e000000000000000f03000000000000005c000000000000000e00
*0000000000000f00000000000000005d000000000000000e000000000000000f01000000000000
*005e000000000000000e000000000000000f03000000000000005e000000000000000e00000000
*0000000f00000000000000005f000000000000000e000000000000000f01000000000000006000
*0000000000000e000000000000000f030000000000000060000000000000000e00000000000000
*0f000000000000000061000000000000000e000000000000000f01000000000000006200000000
*0000000e000000000000000f030000000000000062000000000000000e000000000000000f0000
*00000000000063000000000000000e000000000000000f01000000000000006400000000000000
*0e000000000000000f030000000000000064000000000000000e000000000000000f0000000000
*00000065000000000000000e000000000000000f010000000000000066000000000000000e0000
*00000000000f030000000000000066000000000000000e000000000000000f0000000000000000
*67000000000000000e000000000000000f010000000000000068000000000000000e0000000000
*00000f030000000000000068000000000000000e000000000000000f0000000000000000690000
*00000000000e000000000000000f01000000000000006a000000000000000e000000000000000f
*03000000000000006a000000000000000e000000000000000f00000000000000006b0000000000
*00000e000000000000000f01000000000000006c000000000000000e000000000000000f030000
*00000000006c000000000000000e000000000000006d00000000000000006e000000000000000e
*000000000000001101000000000000006f000000000000000e0000000000000011030000000000
*000070000000000000000e000000000000006d000000000000000071000000000000000e000000
*0000000072000000000000000073000000000000000e0000000000000072000000000000000074
*000000000000000e0000000000000075030000000000000076000000000000000e000000000000
*0075000000000000000077000000000000000e0000000000000075000000000000000078000000
*000000000e000000000000007900000000000000007a000000000000000e000000000000007900
*000000000000007b000000000000000e000000000000007903000000000000007c000000000000
*000e000000000000007900000000000000007d000000000000000e000000000000007900000000
*000000007e000000000000000e000000000000007903000000000000007f000000000000008000
*000000000000810000000000000000820000000000000080000000000000008100000000000000
*008300000000000000800000000000000081010000000000000084000000000000008000000000
*000000810100000000000000850000000000000080000000000000008101000000000000008600
*000000000000800000000000000081010000000000000087000000000000008000000000000000
*810300000000000000880000000000000080000000000000008103000000000000008900000000
*00000080000000000000008103000000000000008a000000000000008000000000000000810300
*0000000000008b0000000000000080000000000000008100000000000000008c00000000000000
*80000000000000008100000000000000008d000000000000008000000000000000810000000000
*0000008e0000000000000080000000000000008100000000000000007e00000000000000800000
*00000000008100000000000000008f000000000000008000000000000000810000000000000000
*900000000000000080000000000000008100000000000000009100000000000000800000000000
*000081000000000000000092000000000000008000000000000000810000000000000000930000
*000000000080000000000000008100000000000000009400000000000000800000000000000081
*000000000000000095000000000000008000000000000000810000000000000000960000000000
*000080000000000000008100000000000000009700000000000000800000000000000081000000
*0000000000980000000000000099000000000000000d6d6f6e6f6964732d302e312e3100000000
*00000013446174612e4d6f6e6f69642e526564756365720000000000000018446174612e4d6f6e
*6f69642e526564756365722e436861720000000000000022446174612e4d6f6e6f69642e4c6578
*6963616c2e536f75726365506f736974696f6e0000000000000020446174612e4d6f6e6f69642e
*4c65786963616c2e555446382e4465636f6465720000000000000018446174612e4d6f6e6f6964
*2e526564756365722e57697468000000000000000f446174612e4d6f6e6f69642e4f7264000000
*0000000011446174612e4d6f6e6f69642e4d6f6e61640000000000000017446174612e4d6f6e6f
*69642e4170706c69636174697665000000000000000f446174612e4d6f6e6f69642e4d61700000
*000000000012446174612e4d6f6e6f69642e496e744d61700000000000000015446174612e4d6f
*6e6f69642e47656e657261746f72000000000000001d446174612e4d6f6e6f69642e47656e6572
*61746f722e4d6574686f64730000000000000019446174612e4d6f6e6f69642e4c65786963616c
*2e576f726473000000000000000462617365000000000000000b446174612e4d6f6e6f69640000
*000000000008446174612e4f7264000000000000000a446174612e4d6179626500000000000000
*075072656c7564650000000000000016446174612e4d6f6e6f69642e46696e6765725472656500
*00000000000007526564756365720000000000000004756e69740000000000000004736e6f6300
*00000000000004636f6e73000000000000000d666f6c644d617052656475636500000000000000
*0b4368617252656475636572000000000000000866726f6d43686172000000000000000b696e76
*616c696443686172000000000000000e536f75726365506f736974696f6e000000000000000c53
*6f75726365436f6c756d6e000000000000000a536f757263654c696e65000000000000000b7374
*6172744f6646696c65000000000000000c736f75726365436f6c756d6e000000000000000a736f
*757263654c696e65000000000000001273686f77536f75726365506f736974696f6e0000000000
*00000455544638000000000000000772756e55544638000000000000000b576974685265647563
*6572000000000000000e72756e5769746852656475636572000000000000000e776974686f7574
*52656475636572000000000000000b4d696e5072696f72697479000000000000000e6765744d69
*6e5072696f72697479000000000000000b4d61785072696f72697479000000000000000e676574
*4d61785072696f7269747900000000000000034d696e00000000000000066765744d696e000000
*00000000034d617800000000000000066765744d617800000000000000084d6f6e616453756d00
*0000000000000b6765744d6f6e616453756d0000000000000006416374696f6e00000000000000
*09676574416374696f6e0000000000000009416c7465726e617465000000000000000c67657441
*6c7465726e617465000000000000000954726176657273616c000000000000000c676574547261
*76657273616c0000000000000009556e696f6e57697468000000000000000c676574556e696f6e
*576974680000000000000005556e696f6e0000000000000008676574556e696f6e000000000000
*000947656e657261746f720000000000000004456c656d00000000000000096d61705265647563
*6500000000000000056d6170546f00000000000000076d617046726f6d00000000000000067265
*64756365000000000000000974726176657273655f0000000000000004666f725f000000000000
*00056d61704d5f0000000000000005666f724d5f0000000000000009636f6e6361744d61700000
*000000000003616e6400000000000000026f720000000000000003616e79000000000000000361
*6c6c000000000000000373756d000000000000000770726f647563740000000000000004656c65
*6d00000000000000076e6f74456c656d0000000000000007556e6c696e6564000000000000000a
*72756e556e6c696e65640000000000000008556e737061636564000000000000000b72756e556e
*73706163656400000000000000054c696e65730000000000000005576f72647300000000000000
*0872756e576f726473000000000000000872756e4c696e65730000000000000009776f72647346
*726f6d00000000000000096c696e657346726f6d00000000000000076d617070656e6400000000
*000000076d636f6e63617400000000000000066d656d70747900000000000000064d6f6e6f6964
*00000000000000076765744475616c00000000000000044475616c000000000000000761707045
*6e646f0000000000000004456e646f0000000000000006676574416c6c0000000000000003416c
*6c0000000000000006676574416e790000000000000003416e7900000000000000066765745375
*6d000000000000000353756d000000000000000a67657450726f64756374000000000000000750
*726f64756374000000000000000867657446697273740000000000000005466972737400000000
*000000076765744c61737400000000000000044c617374000000000000000b4748432e436c6173
*73657300000000000000036d696e00000000000000074e6f7468696e6700000000000000054d61
*79626500000000000000036d617800000000000000084748432e456e756d00000000000000086d
*6178426f756e6400000000000000086d696e426f756e64000000000000000d436f6e74726f6c2e
*4d6f6e616400000000000000094d6f6e6164506c757300000000000000056d706c757300000000
*000000056d7a65726f0000000000000013436f6e74726f6c2e4170706c69636174697665000000
*00000000022a3e000000000000000470757265000000000000000b4170706c6963617469766500
*000000000000033c7c3e0000000000000005656d707479000000000000000b416c7465726e6174
*697665000000000000000e66696e676572747265652d302e30000000000000000f446174612e46
*696e6765725472656500000000000000023c7c000000000000000573706c697400000000000000
*023a3e0000000000000006456d7074795200000000000000023a3c0000000000000006456d7074
*794c0000000000000005566965774c00000000000000055669657752000000000000000a46696e
*6765725472656500000000000000084d6561737572656400000000000000023e3c000000000000
*00076d656173757265000000000000000964726f70556e74696c0000000000000005666d617027
*000000000000000866726f6d4c69737400000000000000046e756c6c0000000000000007726576
*65727365000000000000000973696e676c65746f6e000000000000000974616b65556e74696c00
*000000000000097472617665727365270000000000000005766965776c00000000000000057669
*65777200000000000000027c3e
newhex
*0d0cface00040000000000002fa30000000000001fe25b00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000700000000000000270000000000000000
*000000000000000700000000000000280000000000000000000000000000000700000000000000
*2900000000000000000000000000000007000000000000002a0000000000000000000000000000
*0007000000000000002b00000000000000000000000000000007000000000000002c0000000000
*0000000000000000000007000000000000002d0000000000000000000000000000000800000000
*0000002e00000000000000000000000000000008000000000000002f0000000000000000000000
*000000000800000000000000300000000000000000000000000000000800000000000000310000
*000000000000000000000000000800000000000000320000000000000000000000000000000800
*000000000000330000000000000000000000000000000800000000000000340000000000000000
*000000000000000800000000000000350000000000000000000000000000000800000000000000
*360000000000000000000000000000000900000000000000370000000000000000000000000000
*000900000000000000380000000000000000000000000000000900000000000000390000000000
*0000000000000000000009000000000000003a0000000000000000000000000000000a00000000
*0000003b0000000000000000000000000000000a000000000000003c0000000000000000000000
*000000000a000000000000003d0000000000000000000000000000000a000000000000003e0000
*000000000000000000000000000b000000000000003f0000000000000000000000000000000b00
*000000000000400000000000000000000000000000000b00000000000000410000000000000000
*000000000000000b00000000000000420000000000000000000000000000000b00000000000000
*430000000000000000000000000000000b00000000000000440000000000000000000000000000
*000c00000000000000450000000000000000000000000000000c00000000000000460000000000
*000000000000000000000c00000000000000470000000000000000000000000000000c00000000
*000000480000000000000000000000000000000c00000000000000490000000000000000000000
*000000000c000000000000004a0000000000000000000000000000000c000000000000004b0000
*000000000000000000000000000c000000000000004c0000000000000000000000000000000c00
*0000000000004d0000000000000000000000000000000c000000000000004e0000000000000000
*000000000000000c000000000000004f0000000000000000000000000000000c00000000000000
*500000000000000000000000000000000c00000000000000510000000000000000000000000000
*000d00000000000000520000000000000000000000000000000d00000000000000530000000000
*000000000000000000000d00000000000000540000000000000000000000000000000d00000000
*000000550000000000000000000000000000000d00000000000000560000000000000000000000
*000000000d00000000000000570000000000000000000000000000000d00000000000000580000
*000000000000000000000000000d00000000000000590000000000000000000000000000000d00
*0000000000005a0000000000000000000000000000000d0e000000000000000000000000000000
*01000000000021000000000000005b000000000000005c000000000000005d000000000000005e
*000000000000005f00000000000000600000000000000061000000000000006200000000000000
*630000000000000064000000000000006500000000000000660000000000000067000000000000
*00680000000000000069000000000000006a000000000000006b000000000000006c0000000000
*00006d000000000000006e000000000000006f0000000000000070000000000000007100000000
*000000720000000000000073000000000000007400000000000000750000000000000076000000
*000000000000000000000000010000000000000002000000000000000300000000000000040500
*000000000000000000000000000001000000000000000200000000000000030000000000000004
*00000000000000000000000000000002000000000024000000000000005b000000000000005c00
*0000000000005d000000000000005e000000000000005f00000000000000600000000000000061
*000000000000006200000000000000630000000000000064000000000000006500000000000000
*66000000000000006700000000000000680000000000000069000000000000006a000000000000
*006b000000000000006c000000000000006d000000000000006e000000000000006f0000000000
*000070000000000000007100000000000000720000000000000073000000000000007400000000
*000000750000000000000076000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070300
*000000000000050000000000000007000000000000000600000000000000000000000000000003
*00000000002b000000000000005b000000000000005c000000000000005d000000000000005e00
*0000000000005f0000000000000060000000000000006100000000000000620000000000000063
*000000000000006400000000000000650000000000000066000000000000006700000000000000
*680000000000000069000000000000006a000000000000006b000000000000006c000000000000
*006d000000000000006e000000000000006f000000000000007000000000000000710000000000
*000072000000000000007300000000000000740000000000000075000000000000007600000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000000b000000000000000c000000000000000d000000000000000e07
*0000000000000008000000000000000a0000000000000009000000000000000d00000000000000
*0c000000000000000b000000000000000e00000000000000000000000000000004000000000026
*000000000000005b000000000000005c000000000000005d000000000000005e00000000000000
*5f0000000000000060000000000000006100000000000000620000000000000063000000000000
*006400000000000000650000000000000066000000000000006700000000000000680000000000
*000069000000000000006a000000000000006b000000000000006c000000000000006d00000000
*0000006e000000000000006f000000000000007000000000000000710000000000000072000000
*000000007300000000000000740000000000000075000000000000007600000000000000000000
*000000000001000000000000000200000000000000030000000000000004000000000000000500
*000000000000060000000000000007000000000000000f00000000000000100200000000000000
*0f000000000000001000000000000000000000000000000005000000000025000000000000005b
*000000000000005c000000000000005d000000000000005e000000000000005f00000000000000
*600000000000000061000000000000006200000000000000630000000000000064000000000000
*006500000000000000660000000000000067000000000000006800000000000000690000000000
*00006a000000000000006b000000000000006c000000000000006d000000000000006e00000000
*0000006f0000000000000070000000000000007100000000000000720000000000000073000000
*000000007400000000000000750000000000000076000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000011000000000000001200
*000000000000130000000000000014040000000000000011000000000000001200000000000000
*130000000000000014000000000000000000000000000000060000000004000000000000001503
*0102040000005400000068000000650000002001040100000000000000005e000000000000000e
*000000000000000f01020100000020010701020100000028010401000000000000000077000000
*000000000e00000000000000100102010000002c01040100000000000000007800000000000000
*0e0000000000000011020100000029010206000000200000006f00000076000000650000007200
*0000200107010401000000000000000079000000000000000e0000000000000011020200000020
*000000610102070000002000000077000000680000006500000072000000650000002001040100
*0000000000000078000000000000000e0000000000000011021400000020000000690000007300
*00002000000074000000680000006500000020000000740000006f000000700000002000000065
*0000006c000000650000006d000000650000006e000000740000000a0000000000000018030102
*040000005400000068000000650000002001040100000000000000005e000000000000000e0000
*00000000000f0102010000002001070102010000002801040100000000000000007a0000000000
*00000e00000000000000100102010000002c010401000000000000000078000000000000000e00
*00000000000011020100000029010206000000200000006f000000760000006500000072000000
*200107010401000000000000000079000000000000000e00000000000000110202000000200000
*006101020700000020000000770000006800000065000000720000006500000020010401000000
*000000000078000000000000000e00000000000000110217000000200000006900000073000000
*2000000074000000680000006500000020000000620000006f00000074000000740000006f0000
*006d00000020000000650000006c000000650000006d000000650000006e000000740000000a00
*0000000000001b030102040000005400000068000000650000002001040100000000000000005e
*000000000000000e000000000000000f01020a0000002000000067000000690000007600000065
*0000006e0000002000000062000000790000002001070102010000002801040100000000000000
*0077000000000000000e00000000000000100102010000002c01040100000000000000007b0000
*00000000000e000000000000001202010000002902010000000a000000000000001e0301020400
*00005400000068000000650000002001040100000000000000005e000000000000000e00000000
*0000000f0102010000002001070102010000002801040100000000000000007a00000000000000
*0e00000000000000100102010000002c01040100000000000000007c000000000000000e000000
*000000001202010000002902010000000a11000000000000005b000000000000005d0000000000
*00005e000000000000000000000000000000010000000000000015000000000000001600000000
*0000001700000000000000180000000000000019000000000000001a000000000000001b000000
*000000001c000000000000001d000000000000001e000000000000001f00000000000000200c00
*0000000000001e000000000000001f0000000000000020000000000000001b000000000000001c
*000000000000001d00000000000000180000000000000019000000000000001a00000000000000
*150000000000000016000000000000001700000000000000000000000000000007000000000032
*000000000000007d000000000000005b000000000000005c000000000000005d00000000000000
*5e000000000000005f000000000000006000000000000000610000000000000062000000000000
*006300000000000000640000000000000065000000000000006600000000000000670000000000
*0000680000000000000069000000000000006a000000000000006b000000000000006c00000000
*0000006d000000000000006e000000000000006f00000000000000700000000000000071000000
*000000007200000000000000730000000000000074000000000000007500000000000000760000
*00000000007e000000000000007f00000000000000800000000000000081000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000021
*000000000000002200000000000000230000000000000024000000000000002500000000000000
*26000000000000002700000000000000280000000000000029000000000000002a000000000000
*002b000000000000002c0c000000000000002a000000000000002b000000000000002c00000000
*000000270000000000000028000000000000002900000000000000240000000000000025000000
*000000002600000000000000210000000000000022000000000000002300000000000000000000
*000000000008000000000031000000000000005b00000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*00000000005c000000000000005d000000000000005e000000000000005f000000000000006000
*000000000000610000000000000062000000000000006300000000000000640000000000000065
*000000000000006600000000000000670000000000000068000000000000006900000000000000
*6a000000000000006b000000000000006c000000000000006d000000000000006e000000000000
*006f00000000000000700000000000000071000000000000007200000000000000730000000000
*000074000000000000007500000000000000760000000000000000000000000000000100000000
*0000000200000000000000030000000000000004000000000000002d000000000000002e000000
*000000002f00000000000000300000000000000031000000000000003200000000000000330000
*000000000034000000000000003509000000000000003300000000000000340000000000000035
*000000000000003000000000000000310000000000000032000000000000002d00000000000000
*2e000000000000002f0000000000000000000000000000001300000000001f000000000000005b
*000000000000005d000000000000005e0000000000000000000000000000000100000000000000
*0200000000000000030000000000000089000000000000008a000000000000008b000000000000
*008c000000000000008d000000000000008e000000000000008f00000000000000900000000000
*000091000000000000009200000000000000930000000000000094000000000000009500000000
*00000096000000000000009700000000000000980000000000000099000000000000009a000000
*000000009b000000000000009c000000000000009d000000000000009e000000000000009f0000
*0000000000a0000000000000000000000000000000000900000000000b000000000000005b0000
*00000000005d000000000000005e00000000000000000000000000000001000000000000000200
*000000000000030000000000000036000000000000003700000000000000380000000000000039
*040000000000000038000000000000003900000000000000360000000000000037000000000000
*0000000000000000000a00000000000b000000000000005b000000000000005d00000000000000
*5e0000000000000000000000000000000100000000000000020000000000000003000000000000
*003a000000000000003b000000000000003c000000000000003d04000000000000003c00000000
*0000003d000000000000003a000000000000003b0000000000000000000000000000000b000000
*000022000000000000005b000000000000005c000000000000005d000000000000005e00000000
*0000005f0000000000000060000000000000006100000000000000620000000000000063000000
*000000006400000000000000650000000000000066000000000000006700000000000000680000
*000000000069000000000000006a000000000000006b000000000000006c000000000000006d00
*0000000000006e000000000000006f000000000000007000000000000000710000000000000072
*000000000000007300000000000000740000000000000075000000000000007600000000000000
*3e000000000000003f000000000000004000000000000000410000000000000042000000000000
*004306000000000000003e000000000000003f0000000000000040000000000000004100000000
*0000004200000000000000430000000000000000000000000000000c00000000002f0000000000
*00005b000000000000005c000000000000005d000000000000005e000000000000005f00000000
*000000600000000000000061000000000000006200000000000000630000000000000064000000
*000000006500000000000000660000000000000067000000000000006800000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000006e00
*0000000000006f0000000000000070000000000000007100000000000000720000000000000073
*000000000000007400000000000000750000000000000076000000000000003e00000000000000
*3f0000000000000040000000000000004100000000000000420000000000000043000000000000
*004400000000000000450000000000000046000000000000004700000000000000480000000000
*000049000000000000004a000000000000004b000000000000004c000000000000004d00000000
*0000004e000000000000004f00000000000000500d000000000000004400000000000000450000
*000000000046000000000000004700000000000000480000000000000049000000000000004a00
*0000000000004b000000000000004c000000000000004d000000000000004e000000000000004f
*00000000000000500000000000000000000000000000000d00000000002e000000000000005b00
*0000000000005c000000000000005d000000000000005e000000000000005f0000000000000060
*000000000000006100000000000000620000000000000063000000000000006400000000000000
*650000000000000066000000000000006700000000000000680000000000000069000000000000
*006a000000000000006b000000000000006c000000000000006d000000000000006e0000000000
*00006f000000000000007000000000000000710000000000000072000000000000007300000000
*000000740000000000000075000000000000007600000000000000000000000000000001000000
*000000000200000000000000030000000000000004000000000000000500000000000000060000
*000000000007000000000000005100000000000000520000000000000053000000000000005400
*000000000000550000000000000056000000000000005700000000000000580000000000000059
*000000000000005a0a000000000000005600000000000000570000000000000055000000000000
*005800000000000000530000000000000054000000000000005100000000000000520000000000
*000059000000000000005a00000000000000a10000000000000000000000000000000103000000
*000000001400000000000000000000000000000001000000000000000015000000000000000000
*000000000000010000000000000000160000000000000000000000000000000100000000000000
*001700000000000000000000000000000001000000000000000018000000000000000000000000
*000000020300000000000000190000000000000000000000000000000200000000000000001a00
*00000000000000000000000000000200000000000000001b000000000000000000000000000000
*0303000000000000001c0000000000000000000000000000000303000000000000001d00000000
*00000000000000000000000303000000000000001e000000000000000000000000000000030000
*0000000000001f0000000000000000000000000000000300000000000000002000000000000000
*000000000000000003000000000000000021000000000000000000000000000000030000000000
*000000220000000000000000000000000000000403000000000000002300000000000000000000
*000000000004000000000000000024000000000000000000000000000000050300000000000000
*250000000000000000000000000000000501000000000000002500000000000000000000000000
*000005000000000000000026000000000000000000000000000000050000000000000000270000
*000000000000000000000000000603000000000000002800000000000000000000000000000006
*010000000000000028000000000000000000000000000000060000000000000000290000000000
*000000000000000000000603000000000000002a00000000000000000000000000000006010000
*00000000002a0000000000000000000000000000000600000000000000002b0000000000000000
*000000000000000603000000000000002c00000000000000000000000000000006010000000000
*00002c0000000000000000000000000000000600000000000000002d0000000000000000000000
*000000000603000000000000002e0000000000000000000000000000000601000000000000002e
*0000000000000000000000000000000600000000000000002f0000000000000000000000000000
*000703000000000000003000000000000000000000000000000007010000000000000030000000
*000000000000000000000000070000000000000000310000000000000000000000000000000703
*000000000000003200000000000000000000000000000007010000000000000032000000000000
*000000000000000000070000000000000000330000000000000000000000000000000703000000
*000000003400000000000000000000000000000007010000000000000034000000000000000000
*000000000000070000000000000000350000000000000000000000000000000703000000000000
*003600000000000000000000000000000007010000000000000036000000000000000000000000
*000000070000000000000000370000000000000000000000000000000803000000000000003800
*000000000000000000000000000008010000000000000038000000000000000000000000000000
*080000000000000000390000000000000000000000000000000803000000000000003a00000000
*00000000000000000000000801000000000000003a000000000000000000000000000000080000
*0000000000003b0000000000000000000000000000000803000000000000003c00000000000000
*00000000000000000801000000000000003c000000000000000000000000000000080000000000
*0000003d0000000000000000000000000000000903000000000000003e00000000000000000000
*00000000000900000000000000003f000000000000000000000000000000090300000000000000
*400000000000000000000000000000000900000000000000004100000000000000000000000000
*00000a03000000000000003e0000000000000000000000000000000a00000000000000003f0000
*000000000000000000000000000a0300000000000000400000000000000000000000000000000a
*0000000000000000410000000000000000000000000000000b0300000000000000420000000000
*000000000000000000000b0300000000000000430000000000000000000000000000000b000000
*0000000000440000000000000000000000000000000b0000000000000000450000000000000000
*000000000000000b0000000000000000460000000000000000000000000000000b000000000000
*0000470000000000000000000000000000000c0000000000000000480000000000000000000000
*000000000c0000000000000000490000000000000000000000000000000c00000000000000004a
*0000000000000000000000000000000c00000000000000004b0000000000000000000000000000
*000c00000000000000004c0000000000000000000000000000000c00000000000000004d000000
*0000000000000000000000000c00000000000000004e0000000000000000000000000000000c00
*000000000000004f0000000000000000000000000000000c000000000000000050000000000000
*0000000000000000000c0000000000000000510000000000000000000000000000000c00000000
*00000000520000000000000000000000000000000c000000000000000053000000000000000000
*0000000000000c0000000000000000540000000000000000000000000000000d03000000000000
*00550000000000000000000000000000000d000000000000000056000000000000000000000000
*0000000d0300000000000000570000000000000000000000000000000d00000000000000005800
*00000000000000000000000000000d030000000000000059000000000000000000000000000000
*0d03000000000000005a0000000000000000000000000000000d00000000000000005b00000000
*00000000000000000000000d00000000000000005c0000000000000000000000000000000d0000
*0000000000005d0000000000000000000000000000000d00000000000000005e00000000000000
*0e000000000000000f00000000000000005f000000000000000e000000000000000f0000000000
*00000060000000000000000e000000000000000f000000000000000061000000000000000e0000
*00000000000f030000000000000062000000000000000e000000000000000f0000000000000000
*63000000000000000e000000000000000f010000000000000064000000000000000e0000000000
*00000f030000000000000064000000000000000e000000000000000f0000000000000000650000
*00000000000e000000000000000f010000000000000066000000000000000e000000000000000f
*030000000000000066000000000000000e000000000000000f0000000000000000670000000000
*00000e000000000000000f010000000000000068000000000000000e000000000000000f030000
*000000000068000000000000000e000000000000000f000000000000000069000000000000000e
*000000000000000f01000000000000006a000000000000000e000000000000000f030000000000
*00006a000000000000000e000000000000000f00000000000000006b000000000000000e000000
*000000000f01000000000000006c000000000000000e000000000000000f03000000000000006c
*000000000000000e000000000000000f00000000000000006d000000000000000e000000000000
*000f01000000000000006e000000000000000e000000000000000f03000000000000006e000000
*000000000e000000000000000f00000000000000006f000000000000000e000000000000000f01
*0000000000000070000000000000000e000000000000000f030000000000000070000000000000
*000e000000000000000f000000000000000071000000000000000e000000000000000f01000000
*0000000072000000000000000e000000000000000f030000000000000072000000000000000e00
*00000000000073000000000000000074000000000000000e000000000000001101000000000000
*0075000000000000000e0000000000000011030000000000000076000000000000000e00000000
*00000073000000000000000077000000000000000e000000000000007800000000000000007900
*0000000000000e000000000000007800000000000000007a000000000000000e00000000000000
*7b03000000000000007c000000000000000e000000000000007b00000000000000007d00000000
*0000000e000000000000007b00000000000000007e000000000000000e000000000000007b0000
*0000000000007f000000000000000e000000000000007b00000000000000008000000000000000
*0e0000000000000081000000000000000082000000000000000e00000000000000810000000000
*00000083000000000000000e0000000000000081000000000000000084000000000000000e0000
*000000000081030000000000000085000000000000000e00000000000000810000000000000000
*86000000000000000e0000000000000081000000000000000087000000000000000e0000000000
*0000810300000000000000880000000000000089000000000000008a00000000000000008b0000
*000000000089000000000000008a00000000000000008c0000000000000089000000000000008a
*01000000000000008d0000000000000089000000000000008a01000000000000008e0000000000
*000089000000000000008a01000000000000008f0000000000000089000000000000008a010000
*0000000000900000000000000089000000000000008a0300000000000000910000000000000089
*000000000000008a0300000000000000920000000000000089000000000000008a030000000000
*0000930000000000000089000000000000008a0300000000000000940000000000000089000000
*000000008a0000000000000000950000000000000089000000000000008a000000000000000096
*0000000000000089000000000000008a0000000000000000970000000000000089000000000000
*008a0000000000000000870000000000000089000000000000008a000000000000000098000000
*0000000089000000000000008a0000000000000000990000000000000089000000000000008a00
*000000000000009a0000000000000089000000000000008a00000000000000009b000000000000
*0089000000000000008a00000000000000009c0000000000000089000000000000008a00000000
*000000009d0000000000000089000000000000008a00000000000000009e000000000000008900
*0000000000008a00000000000000009f0000000000000089000000000000008a00000000000000
*00a00000000000000089000000000000008a0000000000000000a100000000000000a200000000
*0000000d6d6f6e6f6964732d302e312e310000000000000013446174612e4d6f6e6f69642e5265
*64756365720000000000000018446174612e4d6f6e6f69642e526564756365722e436861720000
*000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f
*6e0000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f64
*65720000000000000018446174612e4d6f6e6f69642e526564756365722e576974680000000000
*00000f446174612e4d6f6e6f69642e4f72640000000000000011446174612e4d6f6e6f69642e4d
*6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c6963617469766500000000
*0000000f446174612e4d6f6e6f69642e4d61700000000000000012446174612e4d6f6e6f69642e
*496e744d61700000000000000015446174612e4d6f6e6f69642e47656e657261746f7200000000
*0000001d446174612e4d6f6e6f69642e47656e657261746f722e4d6574686f6473000000000000
*0019446174612e4d6f6e6f69642e4c65786963616c2e576f726473000000000000000462617365
*000000000000000b446174612e4d6f6e6f69640000000000000008446174612e4f726400000000
*0000000a446174612e4d6179626500000000000000075072656c75646500000000000000164461
*74612e4d6f6e6f69642e46696e6765725472656500000000000000075265647563657200000000
*00000004756e69740000000000000004736e6f630000000000000004636f6e7300000000000000
*0d666f6c644d6170526564756365000000000000000b4368617252656475636572000000000000
*000866726f6d43686172000000000000000b696e76616c696443686172000000000000000e536f
*75726365506f736974696f6e000000000000000c536f75726365436f6c756d6e00000000000000
*0a536f757263654c696e65000000000000000b73746172744f6646696c65000000000000000c73
*6f75726365436f6c756d6e000000000000000a736f757263654c696e6500000000000000127368
*6f77536f75726365506f736974696f6e000000000000000455544638000000000000000772756e
*55544638000000000000000b5769746852656475636572000000000000000e72756e5769746852
*656475636572000000000000000e776974686f757452656475636572000000000000000b4d696e
*5072696f72697479000000000000000e6765744d696e5072696f72697479000000000000000b4d
*61785072696f72697479000000000000000e6765744d61785072696f7269747900000000000000
*034d696e00000000000000066765744d696e00000000000000034d617800000000000000066765
*744d6178000000000000000c4d6f6e6f6964416374696f6e000000000000000f6765744d6f6e6f
*6964416374696f6e000000000000000b4b6c6569736c69456e646f000000000000000e6765744b
*6c6569736c69456e646f00000000000000084d6f6e616453756d000000000000000b6765744d6f
*6e616453756d0000000000000006416374696f6e0000000000000009676574416374696f6e0000
*00000000000f4d6f6e6f696454726176657273616c00000000000000126765744d6f6e6f696454
*726176657273616c0000000000000009416c7465726e617465000000000000000c676574416c74
*65726e617465000000000000000954726176657273616c000000000000000c6765745472617665
*7273616c0000000000000009556e696f6e57697468000000000000000c676574556e696f6e5769
*74680000000000000005556e696f6e0000000000000008676574556e696f6e0000000000000009
*47656e657261746f720000000000000004456c656d00000000000000096d617052656475636500
*000000000000056d6170546f00000000000000076d617046726f6d000000000000000672656475
*6365000000000000000974726176657273655f0000000000000004666f725f0000000000000005
*6d61704d5f0000000000000005666f724d5f0000000000000009636f6e6361744d617000000000
*00000003616e6400000000000000026f720000000000000003616e790000000000000003616c6c
*000000000000000373756d000000000000000770726f647563740000000000000004656c656d00
*000000000000076e6f74456c656d0000000000000007556e6c696e6564000000000000000a7275
*6e556e6c696e65640000000000000008556e737061636564000000000000000b72756e556e7370
*6163656400000000000000054c696e65730000000000000005576f726473000000000000000872
*756e576f726473000000000000000872756e4c696e65730000000000000009776f72647346726f
*6d00000000000000096c696e657346726f6d00000000000000076d617070656e64000000000000
*00076d636f6e63617400000000000000066d656d70747900000000000000064d6f6e6f69640000
*0000000000076765744475616c00000000000000044475616c0000000000000007617070456e64
*6f0000000000000004456e646f0000000000000006676574416c6c0000000000000003416c6c00
*00000000000006676574416e790000000000000003416e79000000000000000667657453756d00
*0000000000000353756d000000000000000a67657450726f64756374000000000000000750726f
*647563740000000000000008676574466972737400000000000000054669727374000000000000
*00076765744c61737400000000000000044c617374000000000000000b4748432e436c61737365
*7300000000000000036d696e00000000000000074e6f7468696e6700000000000000054d617962
*6500000000000000036d617800000000000000084748432e456e756d00000000000000086d6178
*426f756e6400000000000000086d696e426f756e64000000000000000d436f6e74726f6c2e4d6f
*6e616400000000000000094d6f6e6164506c757300000000000000066c6966744d320000000000
*0000033e3d3e00000000000000056d706c757300000000000000056d7a65726f00000000000000
*13436f6e74726f6c2e4170706c6963617469766500000000000000066c69667441320000000000
*0000022a3e000000000000000470757265000000000000000b4170706c69636174697665000000
*00000000033c7c3e0000000000000005656d707479000000000000000b416c7465726e61746976
*65000000000000000e66696e676572747265652d302e30000000000000000f446174612e46696e
*6765725472656500000000000000023c7c000000000000000573706c697400000000000000023a
*3e0000000000000006456d7074795200000000000000023a3c0000000000000006456d7074794c
*0000000000000005566965774c00000000000000055669657752000000000000000a46696e6765
*725472656500000000000000084d6561737572656400000000000000023e3c0000000000000007
*6d656173757265000000000000000964726f70556e74696c0000000000000005666d6170270000
*00000000000866726f6d4c69737400000000000000046e756c6c00000000000000077265766572
*7365000000000000000973696e676c65746f6e000000000000000974616b65556e74696c000000
*00000000097472617665727365270000000000000005766965776c000000000000000576696577
*7200000000000000027c3e
hunk ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html 15
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span> <span class='hs-varid'>empty</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="Traversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-16"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>
-<a name="line-23"></a><a name="snocTraversal"></a><span class='hs-comment'>{-# RULES "unitTraversal" unit = Traversal #-}</span>
-<a name="line-24"></a><span class='hs-comment'>{-# RULES "snocTraversal" snoc = snocTraversal #-}</span>
-<a name="line-25"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span>
-<a name="line-26"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Traversal</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="Alternate"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAlternate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-29"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>)</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span> 
-<a name="line-33"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span>
-<a name="line-37"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-38"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonoidTraversal</span><span class='hs-layout'>(</span><span class='hs-conid'>MonoidTraversal</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonoidTraversal</span><span class='hs-layout'>)</span>
+<a name="line-8"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-9"></a>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span> <span class='hs-varid'>empty</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>liftA2</span><span class='hs-layout'>)</span>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-12"></a>
+<a name="line-13"></a><a name="Traversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-16"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>
+<a name="line-24"></a><a name="snocTraversal"></a><span class='hs-comment'>{-# RULES "unitTraversal" unit = Traversal #-}</span>
+<a name="line-25"></a><span class='hs-comment'>{-# RULES "snocTraversal" snoc = snocTraversal #-}</span>
+<a name="line-26"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span>
+<a name="line-27"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Traversal</span>
+<a name="line-28"></a>
+<a name="line-29"></a><a name="Alternate"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAlternate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-30"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span> 
+<a name="line-34"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
+<a name="line-35"></a>
+<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-37"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span>
+<a name="line-38"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
+<a name="line-39"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-40"></a>
+<a name="line-41"></a><a name="MonoidTraversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonoidTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-layout'>}</span>
+<a name="line-42"></a>
+<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-44"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-45"></a>    <span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span>
+<a name="line-49"></a>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 15
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mplus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="Action"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>KleisliEndo</span><span class='hs-layout'>(</span><span class='hs-conid'>KleisliEndo</span><span class='hs-layout'>,</span><span class='hs-varid'>getKleisliEndo</span><span class='hs-layout'>)</span>
+<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonoidAction</span><span class='hs-layout'>(</span><span class='hs-conid'>MonoidAction</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonoidAction</span><span class='hs-layout'>)</span>
+<a name="line-9"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-10"></a>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mplus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;=&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>liftM2</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 22
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-16"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-comment'>{-# RULES "unitAction" unit = Action #-}</span>
-<a name="line-24"></a><span class='hs-comment'>{-# RULES "snocAction" snoc = snocAction #-}</span> 
-<a name="line-25"></a><a name="snocAction"></a><span class='hs-definition'>snocAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span>
-<a name="line-26"></a><span class='hs-definition'>snocAction</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Action</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="MonadSum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonadSum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-29"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>mzero</span>
-<a name="line-33"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span>
-<a name="line-37"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-14"></a><a name="Action"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
+<a name="line-15"></a>
+<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-19"></a>
+<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>
+<a name="line-25"></a><span class='hs-comment'>{-# RULES "unitAction" unit = Action #-}</span>
+<a name="line-26"></a><span class='hs-comment'>{-# RULES "snocAction" snoc = snocAction #-}</span> 
+<a name="line-27"></a><a name="snocAction"></a><span class='hs-definition'>snocAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span>
+<a name="line-28"></a><span class='hs-definition'>snocAction</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Action</span>
+<a name="line-29"></a>
+<a name="line-30"></a><a name="MonadSum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonadSum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-31"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>
+<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-34"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>mzero</span>
+<a name="line-35"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-36"></a>
+<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-38"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span>
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 48
+<a name="line-40"></a><a name="KleisliEndo"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKleisliEndo</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-43"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>return</span>
+<a name="line-44"></a>    <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;=&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-47"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span>
+<a name="line-48"></a>
+<a name="line-49"></a><a name="MonoidAction"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonoidAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-layout'>}</span>
+<a name="line-50"></a>
+<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-52"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-53"></a>    <span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-54"></a>
+<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-56"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span>
}
