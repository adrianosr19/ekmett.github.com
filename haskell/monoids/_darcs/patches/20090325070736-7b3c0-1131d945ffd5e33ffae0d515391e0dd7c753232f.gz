[documentation change to reflect new project name
ekmett@gmail.com**20090325070736] {
adddir ./dist/doc/html/monoids
adddir ./dist/doc/html/monoids/src
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Generator.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AGenerator"
-></A
-><B
->Generator</B
-> c  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Generator"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Associated Types</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3AElem"
-></A
-><B
->Elem</B
-> c :: *</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amapreduce"
-></A
-><B
->mapreduce</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapreduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amapreducer"
-></A
-><B
->mapreducer</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapreducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amapreducel"
-></A
-><B
->mapreducel</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapreducel"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Generator')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Generator" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> Text</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> ([] c)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amapreduce"
-></A
-><B
->mapreduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapreduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amapreducer"
-></A
-><B
->mapreducer</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapreducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Amapreducel"
-></A
-><B
->mapreducel</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapreducel"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Generator.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.SourcePosition</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.SourcePosition</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ASourcePosition"
-></A
-><B
->SourcePosition</B
-> file </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:SourcePosition')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:SourcePosition" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorZero <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorPlus <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceLine"
-></A
-><B
->SourceLine</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceColumn"
-></A
-><B
->SourceColumn</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceLine"
-></A
-><B
->sourceLine</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->SourceLine</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceColumn"
-></A
-><B
->sourceColumn</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->SourceColumn</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AstartOfFile"
-></A
-><B
->startOfFile</B
-> ::  f -&gt; <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#startOfFile"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AshowSourcePosition"
-></A
-><B
->showSourcePosition</B
-> :: <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#showSourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.UTF8.Decoder</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.UTF8.Decoder</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUTF8"
-></A
-><B
->UTF8</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#UTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UTF8')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UTF8" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunUTF8"
-></A
-><B
->runUTF8</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#runUTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.Words</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.Words</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AWords"
-></A
-><B
->Words</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Words"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Words')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Words" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunWords"
-></A
-><B
->runWords</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runWords"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALines"
-></A
-><B
->Lines</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Lines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Lines')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Lines" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunLines"
-></A
-><B
->runLines</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runLines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnspaced"
-></A
-><B
->Unspaced</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unspaced"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unspaced')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unspaced" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnlined"
-></A
-><B
->Unlined</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unlined"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unlined')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unlined" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwordsFrom"
-></A
-><B
->wordsFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#wordsFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AlinesFrom"
-></A
-><B
->linesFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#linesFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Ord</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Ord.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Ord</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Max
-</A
-></DT
-><DT
-><A HREF="#2"
->Min
-</A
-></DT
-><DT
-><A HREF="#3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></DT
-><DT
-><A HREF="#4"
->MinPriority: Min semigroup w/ added top
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMax"
->Max</A
-> a = <A HREF="#v%3AMax"
->Max</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMax"
->getMax</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMin"
->Min</A
-> a = <A HREF="#v%3AMin"
->Min</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMin"
->getMin</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMaxPriority"
->MaxPriority</A
-> a = <A HREF="#v%3AMaxPriority"
->MaxPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMaxPriority"
->getMaxPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMinPriority"
->MinPriority</A
-> a = <A HREF="#v%3AMinPriority"
->MinPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMinPriority"
->getMinPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Max
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMax"
-></A
-><B
->Max</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Max"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
->minBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMax"
-></A
-><B
->Max</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMax"
-></A
-><B
->getMax</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Max" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Min
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMin"
-></A
-><B
->Min</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Min"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> given by <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AmaxBound"
->maxBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMin"
-></A
-><B
->Min</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMin"
-></A
-><B
->getMin</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Min')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Min" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MaxPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the bottom element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMaxPriority"
-></A
-><B
->getMaxPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MaxPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MaxPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="4"
->MinPriority: Min semigroup w/ added top
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMinPriority"
-></A
-><B
->MinPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MinPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the top element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMinPriority"
-></A
-><B
->MinPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMinPriority"
-></A
-><B
->getMinPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MinPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MinPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.Char</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.Char</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A NAME="t%3ACharReducer"
-></A
-><B
->CharReducer</B
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#CharReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AreduceChar"
-></A
-><B
->reduceChar</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#reduceChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:CharReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:CharReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ()</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ([] <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,) m m')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,) m m' m'')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m''') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,,) m m' m'' m''')</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AreduceChar"
-></A
-><B
->reduceChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#reduceChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.With</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-With.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.With</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AWithReducer"
-></A
-><B
->WithReducer</B
-> c m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#WithReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WithReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:WithReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; Measured m (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwithReducer"
-></A
-><B
->withReducer</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; c `<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
->` m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#withReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwithoutReducer"
-></A
-><B
->withoutReducer</B
-> ::  (c `<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
->` m) -&gt; c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#withoutReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Reducer.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A NAME="t%3AReducer"
-></A
-><B
->Reducer</B
-> c m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#Reducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areduce"
-></A
-><B
->reduce</B
-> :: c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#reduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areducer"
-></A
-><B
->reducer</B
-> :: m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#reducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areducel"
-></A
-><B
->reducel</B
-> :: c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#reducel"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Reducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Reducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ()</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m') =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,) m m')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m', <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m'') =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,) m m' m'')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m', <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m'', <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m''') =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,,) m m' m'' m''')</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areduce"
-></A
-><B
->reduce</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#reduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areducer"
-></A
-><B
->reducer</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#reducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areducel"
-></A
-><B
->reducel</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#reducel"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/Data-Monoid-Reducer.html
hunk ./dist/doc/html/lexical-monoids/doc-index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->lexical-monoids-0.1.1: Lexical monoids (Index)</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD COLSPAN="2" STYLE="padding-top:5px;"
-><FORM onsubmit="full_search(); return false;" ACTION=""
->Search: <INPUT ID="searchbox" onkeyup="quick_search()"
-> <INPUT VALUE="Search" TYPE="submit"
-> <SPAN ID="searchmsg"
-> </SPAN
-></FORM
-></TD
-></TR
-><TR
-><TD
-><TABLE ID="indexlist" CELLPADDING="0" CELLSPACING="5"
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->All</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Any</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->appEndo</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->CharReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Dual</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AElem"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Endo</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->First</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Generator</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAll</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAny</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getDual</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFirst</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLast</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMax</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMaxPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMin</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMinPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getProduct</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getSum</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->invalidChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AinvalidChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Last</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Lines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->linesFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AlinesFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mappend</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapreduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Amapreduce"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapreducel</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Amapreducel"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapreducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Amapreducer"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Max</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MaxPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mconcat</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mempty</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Min</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MinPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Monoid</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Product</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Areduce"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reduceChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AreduceChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reducel</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Areducel"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Reducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Areducer"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runLines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunLines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#v%3ArunUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWithReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3ArunWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWords</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->showSourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AshowSourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->startOfFile</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AstartOfFile"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Sum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Generator</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->UTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withoutReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AwithoutReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->WithReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AwithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Words</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->wordsFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AwordsFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/doc-index.html
hunk ./dist/doc/html/lexical-monoids/haddock-util.js 1
-// Haddock JavaScript utilities
-function toggle(button,id)
-{
-   var n = document.getElementById(id).style;
-   if (n.display == "none")
-   {
-    button.src = "minus.gif";
-    n.display = "block";
-   }
-   else
-   {
-    button.src = "plus.gif";
-    n.display = "none";
-   }
-}
-
-
-var max_results = 75; // 50 is not enough to search for map in the base libraries
-var shown_range = null;
-var last_search = null;
-
-function quick_search()
-{
-    perform_search(false);
-}
-
-function full_search()
-{
-    perform_search(true);
-}
-
-
-function perform_search(full)
-{
-    var text = document.getElementById("searchbox").value.toLowerCase();
-    if (text == last_search && !full) return;
-    last_search = text;
-    
-    var table = document.getElementById("indexlist");
-    var status = document.getElementById("searchmsg");
-    var children = table.firstChild.childNodes;
-    
-    // first figure out the first node with the prefix
-    var first = bisect(-1);
-    var last = (first == -1 ? -1 : bisect(1));
-
-    if (first == -1)
-    {
-        table.className = "";
-        status.innerHTML = "No results found, displaying all";
-    }
-    else if (first == 0 && last == children.length - 1)
-    {
-        table.className = "";
-        status.innerHTML = "";
-    }
-    else if (last - first >= max_results && !full)
-    {
-        table.className = "";
-        status.innerHTML = "More than " + max_results + ", press Search to display";
-    }
-    else
-    {
-        // decide what you need to clear/show
-        if (shown_range)
-            setclass(shown_range[0], shown_range[1], "indexrow");
-        setclass(first, last, "indexshow");
-        shown_range = [first, last];
-        table.className = "indexsearch";
-        status.innerHTML = "";
-    }
-
-    
-    function setclass(first, last, status)
-    {
-        for (var i = first; i <= last; i++)
-        {
-            children[i].className = status;
-        }
-    }
-    
-    
-    // do a binary search, treating 0 as ...
-    // return either -1 (no 0's found) or location of most far match
-    function bisect(dir)
-    {
-        var first = 0, finish = children.length - 1;
-        var mid, success = false;
-
-        while (finish - first > 3)
-        {
-            mid = Math.floor((finish + first) / 2);
-
-            var i = checkitem(mid);
-            if (i == 0) i = dir;
-            if (i == -1)
-                finish = mid;
-            else
-                first = mid;
-        }
-        var a = (dir == 1 ? first : finish);
-        var b = (dir == 1 ? finish : first);
-        for (var i = b; i != a - dir; i -= dir)
-        {
-            if (checkitem(i) == 0) return i;
-        }
-        return -1;
-    }    
-    
-    
-    // from an index, decide what the result is
-    // 0 = match, -1 is lower, 1 is higher
-    function checkitem(i)
-    {
-        var s = getitem(i).toLowerCase().substr(0, text.length);
-        if (s == text) return 0;
-        else return (s > text ? -1 : 1);
-    }
-    
-    
-    // from an index, get its string
-    // this abstracts over alternates
-    function getitem(i)
-    {
-        for ( ; i >= 0; i--)
-        {
-            var s = children[i].firstChild.firstChild.data;
-            if (s.indexOf(' ') == -1)
-                return s;
-        }
-        return ""; // should never be reached
-    }
-}
rmfile ./dist/doc/html/lexical-monoids/haddock-util.js
hunk ./dist/doc/html/lexical-monoids/haddock.css 1
-/* -------- Global things --------- */
-
-BODY { 
-  background-color: #ffffff;
-  color: #000000;
-  font-family: sans-serif;
-  } 
-
-A:link    { color: #0000e0; text-decoration: none }
-A:visited { color: #0000a0; text-decoration: none }
-A:hover   { background-color: #e0e0ff; text-decoration: none }
-
-TABLE.vanilla {
-  width: 100%;
-  border-width: 0px;
-  /* I can't seem to specify cellspacing or cellpadding properly using CSS... */
-}
-
-TABLE.vanilla2 {
-  border-width: 0px;
-}
-
-/* <TT> font is a little too small in MSIE */
-TT  { font-size: 100%; }
-PRE { font-size: 100%; }
-
-LI P { margin: 0pt } 
-
-TD {
-  border-width: 0px;
-}
-
-TABLE.narrow {
-  border-width: 0px;
-}
-
-TD.s8  {  height: 8px;  }
-TD.s15 {  height: 15px; }
-
-SPAN.keyword { text-decoration: underline; }
-
-/* Resize the buttom image to match the text size */
-IMG.coll { width : 0.75em; height: 0.75em; margin-bottom: 0; margin-right: 0.5em }
-
-/* --------- Contents page ---------- */
-
-DIV.node {
-  padding-left: 3em;
-}
-
-DIV.cnode {
-  padding-left: 1.75em;
-}
-
-SPAN.pkg {
-  position: absolute;
-  left: 50em;
-}
-
-/* --------- Documentation elements ---------- */
-
-TD.children {
-  padding-left: 25px;
-  }
-
-TD.synopsis {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace
- }
-
-TD.decl { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  }
-
-TD.topdecl {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace;
-  vertical-align: top;
-}
-
-TABLE.declbar {
-  border-spacing: 0px;
- }
-
-TD.declname {
-  width: 100%;
- }
-
-TD.declbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #000099;
-  border-left-style: solid;
-  white-space: nowrap;
-  font-size: small;
- }
-
-/* 
-  arg is just like decl, except that wrapping is not allowed.  It is
-  used for function and constructor arguments which have a text box
-  to the right, where if wrapping is allowed the text box squashes up
-  the declaration by wrapping it.
-*/
-TD.arg { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  white-space: nowrap;
-  }
-
-TD.recfield { padding-left: 20px }
-
-TD.doc  { 
-  padding-top: 2px;
-  padding-left: 10px;
-  }
-
-TD.ndoc  { 
-  padding: 2px;
-  }
-
-TD.rdoc  { 
-  padding: 2px;
-  padding-left: 10px;
-  width: 100%;
-  }
-
-TD.body  { 
-  padding-left: 10px
-  }
-
-TD.pkg {
-  width: 100%;
-  padding-left: 10px
-}
-
-TABLE.indexsearch TR.indexrow {
-  display: none;
-}
-TABLE.indexsearch TR.indexshow {
-  display: table-row;
-}
-
-TD.indexentry {
-  vertical-align: top;
-  padding-right: 10px
-  }
-
-TD.indexannot {
-  vertical-align: top;
-  padding-left: 20px;
-  white-space: nowrap
-  }
-
-TD.indexlinks {
-  width: 100%
-  }
-
-/* ------- Section Headings ------- */
-
-TD.section1 {
-  padding-top: 15px;
-  font-weight: bold;
-  font-size: 150%
-  }
-
-TD.section2 {
-  padding-top: 10px;
-  font-weight: bold;
-  font-size: 130%
-  }
-
-TD.section3 {
-  padding-top: 5px;
-  font-weight: bold;
-  font-size: 110%
-  }
-
-TD.section4 {
-  font-weight: bold;
-  font-size: 100%
-  }
-
-/* -------------- The title bar at the top of the page */
-
-TD.infohead {
-  color: #ffffff;
-  font-weight: bold;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.infoval {
-  color: #ffffff;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.topbar {
-  background-color: #000099;
-  padding: 5px;
-}
-
-TD.title {
-  color: #ffffff;
-  padding-left: 10px;
-  width: 100%
-  }
-
-TD.topbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #ffffff;
-  border-left-style: solid;
-  white-space: nowrap;
-  }
-
-TD.topbut A:link {
-  color: #ffffff
-  }
-
-TD.topbut A:visited {
-  color: #ffff00
-  }
-
-TD.topbut A:hover {
-  background-color: #6060ff;
-  }
-
-TD.topbut:hover {
-  background-color: #6060ff
-  }
-
-TD.modulebar { 
-  background-color: #0077dd;
-  padding: 5px;
-  border-top-width: 1px;
-  border-top-color: #ffffff;
-  border-top-style: solid;
-  }
-
-/* --------- The page footer --------- */
-
-TD.botbar {
-  background-color: #000099;
-  color: #ffffff;
-  padding: 5px
-  }
-TD.botbar A:link {
-  color: #ffffff;
-  text-decoration: underline
-  }
-TD.botbar A:visited {
-  color: #ffff00
-  }
-TD.botbar A:hover {
-  background-color: #6060ff
-  }
-
rmfile ./dist/doc/html/lexical-monoids/haddock.css
binary ./dist/doc/html/lexical-monoids/haskell_icon.gif
oldhex
*47494638376110001000f70f00000000800000008000808000000080800080008080c0c0c08080
*80ff000000ff00ffff000000ffff00ff00ffffffffff0000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*0021f90401000000002c000000001000100007086c0001007840b0a0418202073e38b0b021c387
*07143e2440c0a143040e091cd0787021c686151f84347800e343901d4b12646870e44a930d0952
*3ca832a6cc990555b2bc2992e4c79d3847ea2c88b3a7c89a2c8b8aa43874e941a60810003840b5
*aa55aa511346ddca75abc080003b
newhex
*
rmfile ./dist/doc/html/lexical-monoids/haskell_icon.gif
hunk ./dist/doc/html/lexical-monoids/index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->lexical-monoids-0.1.1: Lexical monoids</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->lexical-monoids-0.1.1: Lexical monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->lexical-monoids-0.1.1: Lexical monoids</TD
-></TR
-><TR
-><TD CLASS="doc"
->Facilities for lexing using monoids
-</TD
-></TR
-><TR
-><TD CLASS="section1"
->Modules</TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD STYLE="width: 50em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:0')" ALT="show/hide"
->Data</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:0" STYLE="display:block;"
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:1')" ALT="show/hide"
->Monoid</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:2')" ALT="show/hide"
->Lexical</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:2" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:3')" ALT="show/hide"
->UTF8</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:3" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-Words.html"
->Data.Monoid.Lexical.Words</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Ord.html"
->Data.Monoid.Ord</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:4')" ALT="show/hide"
-><A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:4" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-With.html"
->Data.Monoid.Reducer.With</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/lexical-monoids/index.html
binary ./dist/doc/html/lexical-monoids/lexical-monoids.haddock
oldhex
*0d0cface000400000000000016990000000000000ea82f00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000200000000000000
*0f0000000000000000000000000000000200000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000800
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000008000000000000002d0000000000000000000000000000000800000000
*0000002e0000000000000000000000000000000808000000000000000000000000000000010000
*000004000000000000000003010204000000540000006800000065000000200104010000000000
*0000002f0000000000000009000000000000000a01020100000020010701020100000028010401
*0000000000000000300000000000000009000000000000000b0102010000002c01040100000000
*00000000310000000000000009000000000000000c020100000029010206000000200000006f00
*000076000000650000007200000020010701040100000000000000003200000000000000090000
*00000000000c020200000020000000610102070000002000000077000000680000006500000072
*00000065000000200104010000000000000000310000000000000009000000000000000c021400
*00002000000069000000730000002000000074000000680000006500000020000000740000006f
*0000007000000020000000650000006c000000650000006d000000650000006e00000074000000
*0a0000000000000003030102040000005400000068000000650000002001040100000000000000
*002f0000000000000009000000000000000a010201000000200107010201000000280104010000
*000000000000330000000000000009000000000000000b0102010000002c010401000000000000
*0000310000000000000009000000000000000c020100000029010206000000200000006f000000
*760000006500000072000000200107010401000000000000000032000000000000000900000000
*0000000c0202000000200000006101020700000020000000770000006800000065000000720000
*0065000000200104010000000000000000310000000000000009000000000000000c0217000000
*2000000069000000730000002000000074000000680000006500000020000000620000006f0000
*0074000000740000006f0000006d00000020000000650000006c000000650000006d0000006500
*00006e000000740000000a00000000000000060301020400000054000000680000006500000020
*01040100000000000000002f0000000000000009000000000000000a01020a0000002000000067
*0000006900000076000000650000006e0000002000000062000000790000002001070102010000
*00280104010000000000000000300000000000000009000000000000000b0102010000002c0104
*010000000000000000340000000000000009000000000000000d02010000002902010000000a00
*00000000000009030102040000005400000068000000650000002001040100000000000000002f
*0000000000000009000000000000000a0102010000002001070102010000002801040100000000
*00000000330000000000000009000000000000000b0102010000002c0104010000000000000000
*350000000000000009000000000000000d02010000002902010000000a0f000000000000003600
*00000000000037000000000000002f000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*0700000000000000080000000000000009000000000000000a000000000000000b0c0000000000
*000009000000000000000a000000000000000b0000000000000006000000000000000700000000
*000000080000000000000003000000000000000400000000000000050000000000000000000000
*000000000100000000000000020000000000000000000000000000000200000000000700000000
*000000360000000000000037000000000000002f000000000000000c000000000000000d000000
*000000000e000000000000000f04000000000000000c000000000000000d000000000000000e00
*0000000000000f0000000000000000000000000000000300000000000a00000000000000360000
*000000000037000000000000002f000000000000000c000000000000000d000000000000000e00
*0000000000000f0000000000000010000000000000001100000000000000120300000000000000
*100000000000000012000000000000001100000000000000000000000000000004000000000011
*00000000000000360000000000000037000000000000002f000000000000000c00000000000000
*0d000000000000000e000000000000000f00000000000000100000000000000011000000000000
*001200000000000000130000000000000014000000000000001500000000000000160000000000
*000017000000000000001800000000000000190700000000000000130000000000000015000000
*000000001400000000000000180000000000000017000000000000001600000000000000190000
*000000000000000000000000000500000000000c00000000000000360000000000000037000000
*000000002f000000000000000c000000000000000d000000000000000e000000000000000f0000
*00000000001000000000000000110000000000000012000000000000001a000000000000001b02
*000000000000001a000000000000001b0000000000000000000000000000000600000000000b00
*000000000000360000000000000037000000000000002f000000000000000c000000000000000d
*000000000000000e000000000000000f000000000000001c000000000000001d00000000000000
*1e000000000000001f04000000000000001c000000000000001d000000000000001e0000000000
*00001f000000000000000000000000000000070000000000210000000000000036000000000000
*00380000000000000037000000000000002f0000000000000039000000000000003a0000000000
*00003b000000000000003c000000000000003d000000000000003e000000000000003f00000000
*000000400000000000000041000000000000004200000000000000430000000000000044000000
*000000004500000000000000460000000000000047000000000000004800000000000000490000
*00000000004a000000000000004b000000000000004c000000000000004d000000000000004e00
*0000000000004f0000000000000050000000000000002000000000000000210000000000000022
*000000000000002300000000000000240500000000000000200000000000000021000000000000
*002200000000000000230000000000000024000000000000000000000000000000080000000000
*1400000000000000360000000000000037000000000000002f000000000000000c000000000000
*000d000000000000000e000000000000000f000000000000001000000000000000110000000000
*000012000000000000002500000000000000260000000000000027000000000000002800000000
*00000029000000000000002a000000000000002b000000000000002c000000000000002d000000
*000000002e0a000000000000002a000000000000002b0000000000000029000000000000002c00
*00000000000027000000000000002800000000000000250000000000000026000000000000002d
*000000000000002e00000000000000510000000000000000000000000000000103000000000000
*000e0000000000000000000000000000000101000000000000000e000000000000000000000000
*0000000100000000000000000f0000000000000000000000000000000103000000000000001000
*000000000000000000000000000001010000000000000010000000000000000000000000000000
*010000000000000000110000000000000000000000000000000103000000000000001200000000
*000000000000000000000001010000000000000012000000000000000000000000000000010000
*000000000000130000000000000000000000000000000103000000000000001400000000000000
*000000000000000001010000000000000014000000000000000000000000000000010000000000
*000000150000000000000000000000000000000203000000000000001600000000000000000000
*000000000002000000000000000017000000000000000000000000000000020000000000000000
*180000000000000000000000000000000200000000000000001900000000000000000000000000
*00000303000000000000001a0000000000000000000000000000000300000000000000001b0000
*000000000000000000000000000300000000000000001c00000000000000000000000000000004
*03000000000000001d0000000000000000000000000000000403000000000000001e0000000000
*000000000000000000000403000000000000001f00000000000000000000000000000004000000
*000000000020000000000000000000000000000000040000000000000000210000000000000000
*000000000000000400000000000000002200000000000000000000000000000004000000000000
*000023000000000000000000000000000000050300000000000000240000000000000000000000
*000000000500000000000000002500000000000000000000000000000006030000000000000026
*000000000000000000000000000000060000000000000000270000000000000000000000000000
*000600000000000000002800000000000000000000000000000006000000000000000029000000
*0000000000000000000000000703000000000000002a0000000000000000000000000000000703
*000000000000002b0000000000000000000000000000000700000000000000002c000000000000
*0000000000000000000700000000000000002d0000000000000000000000000000000700000000
*000000002e0000000000000000000000000000000803000000000000002f000000000000000000
*000000000000080000000000000000300000000000000000000000000000000803000000000000
*003100000000000000000000000000000008000000000000000032000000000000000000000000
*000000080300000000000000330000000000000000000000000000000803000000000000003400
*000000000000000000000000000008000000000000000035000000000000000000000000000000
*080000000000000000360000000000000000000000000000000800000000000000003700000000
*0000000000000000000000080000000000000000380000000000000009000000000000000a0300
*000000000000390000000000000009000000000000003a00000000000000003b00000000000000
*09000000000000000c01000000000000003c0000000000000009000000000000000c0300000000
*0000003d0000000000000009000000000000003a00000000000000003e00000000000000090000
*00000000003f0000000000000000400000000000000009000000000000003f0000000000000000
*410000000000000009000000000000000a00000000000000004200000000000000090000000000
*00000a0000000000000000430000000000000009000000000000000a0000000000000000440000
*000000000009000000000000000a0000000000000000450000000000000009000000000000000a
*0100000000000000460000000000000009000000000000000a0300000000000000460000000000
*000009000000000000000a0000000000000000470000000000000009000000000000000a010000
*0000000000480000000000000009000000000000000a0300000000000000480000000000000009
*000000000000000a0000000000000000490000000000000009000000000000000a010000000000
*00004a0000000000000009000000000000000a03000000000000004a0000000000000009000000
*000000000a00000000000000004b0000000000000009000000000000000a01000000000000004c
*0000000000000009000000000000000a03000000000000004c0000000000000009000000000000
*000a00000000000000004d0000000000000009000000000000000a01000000000000004e000000
*0000000009000000000000000a03000000000000004e0000000000000009000000000000000a00
*000000000000004f0000000000000009000000000000000a010000000000000050000000000000
*0009000000000000000a0300000000000000500000000000000009000000000000000a00000000
*00000000510000000000000009000000000000000a010000000000000052000000000000000900
*0000000000000a0300000000000000520000000000000009000000000000000a00000000000000
*00530000000000000009000000000000000a010000000000000054000000000000000900000000
*0000000a030000000000000054000000000000005500000000000000156c65786963616c2d6d6f
*6e6f6964732d302e312e31000000000000000f446174612e4d6f6e6f69642e4f72640000000000
*000013446174612e4d6f6e6f69642e526564756365720000000000000018446174612e4d6f6e6f
*69642e526564756365722e436861720000000000000022446174612e4d6f6e6f69642e4c657869
*63616c2e536f75726365506f736974696f6e0000000000000020446174612e4d6f6e6f69642e4c
*65786963616c2e555446382e4465636f6465720000000000000018446174612e4d6f6e6f69642e
*526564756365722e576974680000000000000015446174612e4d6f6e6f69642e47656e65726174
*6f720000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f72647300000000
*0000000462617365000000000000000b446174612e4d6f6e6f6964000000000000000844617461
*2e4f7264000000000000000a446174612e4d6179626500000000000000075072656c7564650000
*00000000000b4d696e5072696f72697479000000000000000e6765744d696e5072696f72697479
*000000000000000b4d61785072696f72697479000000000000000e6765744d61785072696f7269
*747900000000000000034d696e00000000000000066765744d696e00000000000000034d617800
*000000000000066765744d61780000000000000007526564756365720000000000000006726564
*75636500000000000000077265647563657200000000000000077265647563656c000000000000
*000b4368617252656475636572000000000000000a72656475636543686172000000000000000b
*696e76616c696443686172000000000000000e536f75726365506f736974696f6e000000000000
*000c536f75726365436f6c756d6e000000000000000a536f757263654c696e6500000000000000
*0b73746172744f6646696c65000000000000000c736f75726365436f6c756d6e00000000000000
*0a736f757263654c696e65000000000000001273686f77536f75726365506f736974696f6e0000
*00000000000455544638000000000000000772756e55544638000000000000000b576974685265
*6475636572000000000000000e72756e5769746852656475636572000000000000000b77697468
*52656475636572000000000000000e776974686f75745265647563657200000000000000094765
*6e657261746f720000000000000004456c656d00000000000000096d6170726564756365000000
*000000000a6d617072656475636572000000000000000a6d61707265647563656c000000000000
*0007556e6c696e6564000000000000000a72756e556e6c696e65640000000000000008556e7370
*61636564000000000000000b72756e556e73706163656400000000000000054c696e6573000000
*0000000005576f726473000000000000000872756e576f726473000000000000000872756e4c69
*6e65730000000000000009776f72647346726f6d00000000000000096c696e657346726f6d0000
*0000000000064d6f6e6f6964000000000000000b4748432e436c61737365730000000000000003
*6d696e00000000000000074e6f7468696e6700000000000000054d617962650000000000000003
*6d617800000000000000084748432e456e756d00000000000000086d6178426f756e6400000000
*000000086d696e426f756e6400000000000000076d617070656e6400000000000000066d656d70
*747900000000000000076d636f6e63617400000000000000076765744475616c00000000000000
*044475616c0000000000000007617070456e646f0000000000000004456e646f00000000000000
*06676574416c6c0000000000000003416c6c0000000000000006676574416e7900000000000000
*03416e79000000000000000667657453756d000000000000000353756d000000000000000a6765
*7450726f64756374000000000000000750726f6475637400000000000000086765744669727374
*0000000000000005466972737400000000000000076765744c61737400000000000000044c6173
*74
newhex
*
rmfile ./dist/doc/html/lexical-monoids/lexical-monoids.haddock
binary ./dist/doc/html/lexical-monoids/minus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002118c8f
*a00bc6eb5e0b40583b6596f1a11f14003b
newhex
*
rmfile ./dist/doc/html/lexical-monoids/minus.gif
binary ./dist/doc/html/lexical-monoids/plus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002148c8f
*a00bb6b29c82ca897b5b7871cfce74085200003b
newhex
*
rmfile ./dist/doc/html/lexical-monoids/plus.gif
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Generator.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapreduce</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapreducer</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapreducel</span>
-<a name="line-9"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>lex</span><span class='hs-layout'>)</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-comment'>-- minimal definition mapreduce or affixMapReduce</span>
-<a name="line-23"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-25"></a>    <span class='hs-varid'>mapreduce</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-26"></a>    <span class='hs-varid'>mapreducer</span>  <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-27"></a>    <span class='hs-varid'>mapreducel</span>  <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-28"></a>
-<a name="line-29"></a>    <span class='hs-varid'>mapreduce</span>  <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapreducer</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-30"></a>    <span class='hs-varid'>mapreducer</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapreduce</span> <span class='hs-varid'>f</span>
-<a name="line-31"></a>    <span class='hs-varid'>mapreducel</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapreduce</span> <span class='hs-varid'>f</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-34"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-35"></a>    <span class='hs-varid'>mapreducer</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-38"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span>
-<a name="line-39"></a>    <span class='hs-varid'>mapreduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapreduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
-<a name="line-40"></a>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-42"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-43"></a>    <span class='hs-varid'>mapreducer</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-47"></a>    <span class='hs-varid'>mapreduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Generator.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/SourcePosition.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>SourcePosition</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourcePosition</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceLine</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceColumn</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>startOfFile</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>showSourcePosition</span>
-<a name="line-11"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>lex</span><span class='hs-layout'>)</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Extras</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-17"></a>
-<a name="line-18"></a><a name="SourceLine"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceLine</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-19"></a><a name="SourceColumn"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceColumn</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-20"></a>
-<a name="line-21"></a><a name="SourcePosition"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>file</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-22"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Lines</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-23"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Columns</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-24"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Tab</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-comment'>-- cols before and after an unresolved tab</span>
-<a name="line-25"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Eq</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="nextTab"></a><span class='hs-definition'>nextTab</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-28"></a><span class='hs-definition'>nextTab</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-layout'>(</span><span class='hs-num'>8</span> <span class='hs-comment'>-</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-comment'>-</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mod`</span> <span class='hs-num'>8</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-32"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-33"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span>
-<a name="line-34"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorZero</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>fzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorPlus</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-varid'>fplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>0</span>
-<a name="line-47"></a>
-<a name="line-48"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-49"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-52"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>y</span>
-<a name="line-56"></a>    <span class='hs-conid'>Tab</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>
-<a name="line-57"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x'</span> <span class='hs-varid'>y'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>    <span class='hs-keyword'>_</span>         <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pos</span>
-<a name="line-60"></a>
-<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-62"></a>    <span class='hs-varid'>reduce</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-63"></a>    <span class='hs-varid'>reduce</span> <span class='hs-chr'>'\t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-num'>0</span> <span class='hs-num'>0</span> 
-<a name="line-64"></a>    <span class='hs-varid'>reduce</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>1</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span>
-<a name="line-67"></a>    
-<a name="line-68"></a><a name="startOfFile"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span>
-<a name="line-69"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span>
-<a name="line-70"></a>
-<a name="line-71"></a><a name="sourceColumn"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-72"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-73"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-74"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-75"></a>
-<a name="line-76"></a><a name="sourceLine"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-77"></a><span class='hs-definition'>sourceLine</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>l</span>
-<a name="line-78"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-79"></a>
-<a name="line-80"></a><a name="showSourcePosition"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-81"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-str'>"-"</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>c</span>
-<a name="line-83"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/UTF8/Decoder.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>UTF8</span><span class='hs-varop'>.</span><span class='hs-conid'>Decoder</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UTF8</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runUTF8</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>    
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Bits</span> <span class='hs-layout'>(</span><span class='hs-varid'>shiftL</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.&amp;.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.|.</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-comment'>-- Incrementally reduce canonical RFC3629 UTF-8 Characters</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="H"></a><span class='hs-comment'>-- utf8 characters are at most 4 characters long, so we need only retain state for 3 of them</span>
-<a name="line-18"></a><a name="H"></a><span class='hs-comment'>-- moreover their length is able to be determined a priori, so lets store that intrinsically in the constructor</span>
-<a name="line-19"></a><a name="H"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>H0</span>
-<a name="line-20"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H2_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> 
-<a name="line-21"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-22"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-23"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-24"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-25"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_3</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="T"></a><span class='hs-comment'>-- words expressing the tail of a character, each between 0x80 and 0xbf</span>
-<a name="line-28"></a><a name="T"></a><span class='hs-comment'>-- this is arbitrary length to simplify making the parser truly monoidal</span>
-<a name="line-29"></a><a name="T"></a><span class='hs-comment'>-- this probably means we have O(n^2) worst case performance in the face of very long runs of chars that look like 10xxxxxx</span>
-<a name="line-30"></a><a name="T"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span>
-<a name="line-31"></a>
-<a name="line-32"></a><a name="UTF8"></a><span class='hs-comment'>-- S is a segment that contains a possible tail of a character, the result of reduceing some full characters, and the start of another character</span>
-<a name="line-33"></a><a name="UTF8"></a><span class='hs-comment'>-- T contains a list of bytes each between 0x80 and 0xbf</span>
-<a name="line-34"></a><a name="UTF8"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>T</span> <span class='hs-varid'>m</span> <span class='hs-varop'>!</span><span class='hs-conid'>H</span>
-<a name="line-35"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-conid'>T</span> <span class='hs-conid'>T</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="flushH"></a><span class='hs-comment'>-- flush any extra characters in a head, when the next character isn't between 0x80 and 0xbf</span>
-<a name="line-38"></a><span class='hs-definition'>flushH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-39"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-40"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-41"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-42"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-43"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-44"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-45"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
-<a name="line-46"></a>
-<a name="line-47"></a><a name="flushT"></a><span class='hs-comment'>-- flush a character tail </span>
-<a name="line-48"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-49"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="reducerH"></a><span class='hs-definition'>reducerH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-52"></a><span class='hs-definition'>reducerH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-53"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-54"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-55"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-56"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-57"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-59"></a><span class='hs-definition'>reducerH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span>
-<a name="line-60"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-61"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-62"></a><span class='hs-definition'>reducerH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-63"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-64"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-65"></a><span class='hs-definition'>reducerH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-66"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-67"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-68"></a><span class='hs-definition'>reducerH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-69"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-70"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-71"></a><span class='hs-definition'>reducerH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-72"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-74"></a><span class='hs-definition'>reducerH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-75"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-76"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-77"></a>
-<a name="line-78"></a><a name="mask"></a><span class='hs-definition'>mask</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-79"></a><span class='hs-definition'>mask</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
-<a name="line-80"></a>
-<a name="line-81"></a><a name="combine"></a><span class='hs-definition'>combine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-82"></a><span class='hs-definition'>combine</span> <span class='hs-varid'>a</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>shiftL</span> <span class='hs-varid'>a</span> <span class='hs-num'>6</span> <span class='hs-varop'>.|.</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-num'>0x3f</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="b1"></a><span class='hs-definition'>b1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-85"></a><span class='hs-definition'>b1</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toEnum</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>c</span>
-<a name="line-86"></a>     <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-87"></a>
-<a name="line-88"></a><a name="b2"></a><span class='hs-definition'>b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-89"></a><span class='hs-definition'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x1f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span>
-<a name="line-91"></a>
-<a name="line-92"></a><a name="b3"></a><span class='hs-definition'>b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-93"></a><span class='hs-definition'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x0f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span>
-<a name="line-95"></a>
-<a name="line-96"></a>
-<a name="line-97"></a><a name="b4"></a><span class='hs-definition'>b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-98"></a><span class='hs-definition'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduceChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x07</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-99"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span>
-<a name="line-100"></a>
-<a name="line-101"></a><a name="valid_b2"></a><span class='hs-definition'>valid_b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-102"></a><span class='hs-definition'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xc2</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xdf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>
-<a name="line-104"></a><a name="valid_b3"></a><span class='hs-definition'>valid_b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-105"></a><span class='hs-definition'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xe0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xa0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span> 
-<a name="line-106"></a>                 <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xe1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xef</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-107"></a>
-<a name="line-108"></a><a name="valid_b4"></a><span class='hs-definition'>valid_b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-109"></a><span class='hs-definition'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x90</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-110"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xf1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xf3</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-111"></a>                   <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf4</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0x8f</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>
-<a name="line-113"></a><a name="reducelT"></a><span class='hs-definition'>reducelT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-114"></a><span class='hs-definition'>reducelT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>h</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span>
-<a name="line-115"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-116"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span>
-<a name="line-117"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-118"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-119"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-120"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-121"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-122"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-123"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-124"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-125"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-126"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-127"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> 
-<a name="line-128"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-129"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-130"></a>
-<a name="line-131"></a><a name="invalidChars"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-132"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-133"></a>
-<a name="line-134"></a><a name="merge"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-135"></a><span class='hs-definition'>merge</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-136"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-137"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-138"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-139"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-140"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-141"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-142"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-143"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-144"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-145"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-146"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-147"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-148"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-149"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-150"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-151"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-152"></a>
-<a name="line-153"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-154"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span>
-<a name="line-155"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-156"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-157"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>id</span> <span class='hs-varid'>flushH</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-158"></a>    <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-159"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>c'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-160"></a>        <span class='hs-varid'>k</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-161"></a>
-<a name="line-162"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Word8</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-163"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-varop'>`reducer`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reducerH</span> <span class='hs-varid'>h</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-164"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>     <span class='hs-varop'>`reducer`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-165"></a>                               <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reducerH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-166"></a>
-<a name="line-167"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`reducel`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>cs</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reducelT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-conid'>T</span>
-<a name="line-168"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`reducel`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reducelT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k1</span> <span class='hs-varid'>k2</span> <span class='hs-varid'>k3</span> <span class='hs-keyword'>where</span>
-<a name="line-169"></a>        <span class='hs-varid'>k1</span> <span class='hs-varid'>h'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>flushH</span> <span class='hs-varid'>h'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-170"></a>        <span class='hs-varid'>k2</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>m'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-171"></a>        <span class='hs-varid'>k3</span> <span class='hs-varid'>t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span>
-<a name="line-172"></a>    
-<a name="line-173"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-174"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-175"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>
-<a name="line-176"></a>
-<a name="line-177"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-178"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>f</span> <span class='hs-conid'>H0</span>
-<a name="line-179"></a>
-<a name="line-180"></a><a name="runUTF8"></a><span class='hs-definition'>runUTF8</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-181"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span>
-<a name="line-182"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>flushH</span> <span class='hs-varid'>h</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/Words.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, FlexibleContexts, GeneralizedNewtypeDeriving, ParallelListComp, TypeFamilies #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>Words</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Words</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runWords</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Lines</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runLines</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unspaced</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnspaced</span><span class='hs-layout'>)</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unlined</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnlined</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>wordsFrom</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>linesFrom</span>
-<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSpace</span><span class='hs-layout'>)</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybeToList</span><span class='hs-layout'>)</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-19"></a>
-<a name="line-20"></a><a name="Words"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="runWords"></a><span class='hs-definition'>runWords</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-25"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>m</span>
-<a name="line-26"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>r</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>mempty</span>
-<a name="line-30"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-32"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r'</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-37"></a>          <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Words</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>m</span> <span class='hs-varid'>ms</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-comment'>-- abuse the same machinery to handle lines as well</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="Lines"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>reduce</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-chr'>'\n'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-49"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="runLines"></a><span class='hs-definition'>runLines</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-52"></a><span class='hs-definition'>runLines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runWords</span> <span class='hs-varid'>x</span>
-<a name="line-53"></a>
-<a name="line-54"></a><a name="Unspaced"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnspaced</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-58"></a>          <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-67"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnspaced</span>
-<a name="line-71"></a>
-<a name="line-72"></a><a name="Unlined"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnlined</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-75"></a>    <span class='hs-varid'>reduce</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-76"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-77"></a>
-<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-79"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-85"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnlined</span>
-<a name="line-89"></a>
-<a name="line-90"></a><a name="wordsFrom"></a><span class='hs-comment'>-- accumulator, inside-word, and until-next-word monoids</span>
-<a name="line-91"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-92"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-93"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runWords</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapreduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>
-<a name="line-95"></a><a name="linesFrom"></a><span class='hs-comment'>-- accumulator, inside-line, and until-next-line monoids</span>
-<a name="line-96"></a><span class='hs-definition'>linesFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-97"></a><span class='hs-definition'>linesFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runLines</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapreduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Ord.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>---- |</span>
-<a name="line-3"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
-<a name="line-4"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>---- Stability   :  provisional</span>
-<a name="line-8"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>----</span>
-<a name="line-10"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
-<a name="line-11"></a><span class='hs-comment'>----</span>
-<a name="line-12"></a><span class='hs-comment'>-------------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-16"></a>    <span class='hs-comment'>-- * Max</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-comment'>-- * Min</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a>
-<a name="line-29"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
-<a name="line-30"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
-<a name="line-34"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-35"></a>
-<a name="line-36"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
-<a name="line-37"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
-<a name="line-41"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-42"></a>
-<a name="line-43"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
-<a name="line-44"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-48"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-49"></a>
-<a name="line-50"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
-<a name="line-51"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
-<a name="line-55"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
-<a name="line-56"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
-<a name="line-57"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
-<a name="line-58"></a>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-61"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/Char.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduceChar</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="CharReducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>reduceChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-14"></a>    <span class='hs-varid'>reduceChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-15"></a>
-<a name="line-16"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-17"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>mempty</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Char</span><span class='hs-keyglyph'>]</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-conid'>()</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/With.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>With</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WithReducer</span><span class='hs-layout'>(</span><span class='hs-varid'>runWithReducer</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>withReducer</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>withoutReducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="WithReducer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WithReducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WithReducer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWithReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>}</span> 
-<a name="line-13"></a>
-<a name="line-14"></a><a name="withReducer"></a><span class='hs-definition'>withReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span>
-<a name="line-15"></a><span class='hs-definition'>withReducer</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`seq`</span> <span class='hs-conid'>WithReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="withoutReducer"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span>
-<a name="line-18"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snd</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span> 
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>measure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Reducer.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="Reducer"></a><span class='hs-comment'>-- minimal definition reduce or reducer</span>
-<a name="line-11"></a><a name="Reducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-12"></a>    <span class='hs-varid'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-13"></a>    <span class='hs-varid'>reducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-14"></a>    <span class='hs-varid'>reducel</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-15"></a>
-<a name="line-16"></a>    <span class='hs-varid'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>mempty</span> 
-<a name="line-17"></a>    <span class='hs-varid'>reducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-18"></a>    <span class='hs-varid'>reducel</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-varid'>reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reducer</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>    <span class='hs-varid'>reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reducer</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>m''</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>    <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>    <span class='hs-varid'>reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reducer</span> <span class='hs-varid'>m</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>m''</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducer</span> <span class='hs-varid'>m'''</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-varid'>reducel</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-37"></a>    <span class='hs-varid'>reducel</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>    <span class='hs-varid'>reducer</span> <span class='hs-varid'>xs</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-39"></a>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span>
-<a name="line-41"></a>    <span class='hs-varid'>reduce</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-42"></a>    <span class='hs-varid'>reducer</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-43"></a>    <span class='hs-varid'>reducel</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/lexical-monoids/src/Data-Monoid-Reducer.html
hunk ./dist/doc/html/lexical-monoids/src/hscolour.css 1
-.hs-keyglyph, .hs-layout {color: red;}
-.hs-keyword {color: blue;}
-.hs-comment, .hs-comment a {color: green;}
-.hs-str, .hs-chr {color: teal;}
-.hs-keyword, .hs-conid, .hs-varid, .hs-conop, .hs-varop, .hs-num, .hs-cpp, .hs-sel, .hs-definition {}
rmfile ./dist/doc/html/lexical-monoids/src/hscolour.css
rmdir ./dist/doc/html/lexical-monoids/src
rmdir ./dist/doc/html/lexical-monoids
addfile ./dist/doc/html/monoids/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/Data-Monoid-Applicative.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Applicative</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Applicative.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Applicative</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3ATraversal"
+></A
+><B
+>Traversal</B
+> f </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Applicative.html#Traversal"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ATraversal"
+></A
+><B
+>Traversal</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetTraversal"
+></A
+><B
+>getTraversal</B
+> :: f ()</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Traversal')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Traversal" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
+>Traversal</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
+>Traversal</A
+> f)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AAlternate"
+></A
+><B
+>Alternate</B
+> f a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Applicative.html#Alternate"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AAlternate"
+></A
+><B
+>Alternate</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetAlternate"
+></A
+><B
+>getAlternate</B
+> :: f a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Alternate')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Alternate" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-FingerTree.html
hunk ./dist/doc/html/monoids/Data-Monoid-FingerTree.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.FingerTree</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-FingerTree.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.FingerTree</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Generator</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Generator.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Generator</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+>  <A NAME="t%3AGenerator"
+></A
+><B
+>Generator</B
+> c  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#Generator"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Associated Types</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3AElem"
+></A
+><B
+>Elem</B
+> c :: *</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#Elem"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapReduce"
+></A
+><B
+>mapReduce</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapReduce"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapTo"
+></A
+><B
+>mapTo</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapTo"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapFrom"
+></A
+><B
+>mapFrom</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapFrom"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Generator')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Generator" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
+>ByteString</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
+>ByteString</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> Text</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> ([] c)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapReduce"
+></A
+><B
+>mapReduce</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapReduce"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapTo"
+></A
+><B
+>mapTo</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapTo"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AmapFrom"
+></A
+><B
+>mapFrom</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Generator.html#mapFrom"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-IntMap.html
hunk ./dist/doc/html/monoids/Data-Monoid-IntMap.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.IntMap</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-IntMap.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.IntMap</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUnion"
+></A
+><B
+>Union</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-IntMap.html#Union"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Union" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
+>Union</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
+>Union</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUnionWith"
+></A
+><B
+>UnionWith</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-IntMap.html#UnionWith"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:UnionWith" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
+>UnionWith</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
+>UnionWith</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Lexical.SourcePosition</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Lexical.SourcePosition</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer-Char.html"
+>Data.Monoid.Reducer.Char</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3ASourcePosition"
+></A
+><B
+>SourcePosition</B
+> file </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourcePosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:SourcePosition')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:SourcePosition" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>FunctorZero <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>FunctorPlus <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Pointed <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3ASourceLine"
+></A
+><B
+>SourceLine</B
+> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
+>Int</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceLine"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>type</SPAN
+> <A NAME="t%3ASourceColumn"
+></A
+><B
+>SourceColumn</B
+> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
+>Int</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceColumn"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AsourceLine"
+></A
+><B
+>sourceLine</B
+> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
+>SourceLine</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceLine"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AsourceColumn"
+></A
+><B
+>sourceColumn</B
+> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
+>SourceColumn</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceColumn"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AstartOfFile"
+></A
+><B
+>startOfFile</B
+> ::  f -&gt; <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> f</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#startOfFile"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AshowSourcePosition"
+></A
+><B
+>showSourcePosition</B
+> :: <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
+>String</A
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#showSourcePosition"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Lexical.UTF8.Decoder</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Lexical.UTF8.Decoder</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer-Char.html"
+>Data.Monoid.Reducer.Char</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUTF8"
+></A
+><B
+>UTF8</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#UTF8"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UTF8')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:UTF8" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Pointed <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
+>Word8</A
+> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3ArunUTF8"
+></A
+><B
+>runUTF8</B
+> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+> m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#runUTF8"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Lexical.Words</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Lexical.Words</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer-Char.html"
+>Data.Monoid.Reducer.Char</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AWords"
+></A
+><B
+>Words</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#Words"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Words')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Words" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3ArunWords"
+></A
+><B
+>runWords</B
+> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m -&gt; [m]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#runWords"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3ALines"
+></A
+><B
+>Lines</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#Lines"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Lines')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Lines" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3ArunLines"
+></A
+><B
+>runLines</B
+> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m -&gt; [m]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#runLines"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUnspaced"
+></A
+><B
+>Unspaced</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#Unspaced"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unspaced')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Unspaced" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUnlined"
+></A
+><B
+>Unlined</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#Unlined"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unlined')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Unlined" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AwordsFrom"
+></A
+><B
+>wordsFrom</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#wordsFrom"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AlinesFrom"
+></A
+><B
+>linesFrom</B
+> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Generator</A
+> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Elem</A
+> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Lexical-Words.html#linesFrom"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Map.html
hunk ./dist/doc/html/monoids/Data-Monoid-Map.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Map</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Map.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Map</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUnion"
+></A
+><B
+>Union</B
+> k a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Map.html#Union"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Union" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Map.html#t%3AUnion"
+>Union</A
+> k a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
+>Union</A
+> k a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>data</SPAN
+>  <A NAME="t%3AUnionWith"
+></A
+><B
+>UnionWith</B
+> k m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Map.html#UnionWith"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:UnionWith" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
+>UnionWith</A
+> k m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
+>UnionWith</A
+> k m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Monad</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Monad.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Monad</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AAction"
+></A
+><B
+>Action</B
+> m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Monad.html#Action"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AAction"
+></A
+><B
+>Action</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetAction"
+></A
+><B
+>getAction</B
+> :: m ()</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Action')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Action" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AAction"
+>Action</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
+>Action</A
+> m)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMonadSum"
+></A
+><B
+>MonadSum</B
+> m a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Monad.html#MonadSum"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMonadSum"
+></A
+><B
+>MonadSum</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMonadSum"
+></A
+><B
+>getMonadSum</B
+> :: m a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonadSum')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:MonadSum" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Ord</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Ord.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Ord</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+><B
+>Contents</B
+></TD
+></TR
+><TR
+><TD
+><DL
+><DT
+><A HREF="#1"
+>Max
+</A
+></DT
+><DT
+><A HREF="#2"
+>Min
+</A
+></DT
+><DT
+><A HREF="#3"
+>MaxPriority: Max semigroup w/ added bottom
+</A
+></DT
+><DT
+><A HREF="#4"
+>MinPriority: Min semigroup w/ added top
+</A
+></DT
+></DL
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Synopsis</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AMax"
+>Max</A
+> a = <A HREF="#v%3AMax"
+>Max</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetMax"
+>getMax</A
+> :: a</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AMin"
+>Min</A
+> a = <A HREF="#v%3AMin"
+>Min</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetMin"
+>getMin</A
+> :: a</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AMaxPriority"
+>MaxPriority</A
+> a = <A HREF="#v%3AMaxPriority"
+>MaxPriority</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetMaxPriority"
+>getMaxPriority</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A HREF="#t%3AMinPriority"
+>MinPriority</A
+> a = <A HREF="#v%3AMinPriority"
+>MinPriority</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetMinPriority"
+>getMinPriority</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
+></TR
+></TABLE
+>}</TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="1"
+>Max
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMax"
+></A
+><B
+>Max</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#Max"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+></TT
+> <TT
+>(<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
+>max</A
+></TT
+>,<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
+>minBound</A
+></TT
+>)</TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMax"
+></A
+><B
+>Max</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMax"
+></A
+><B
+>getMax</B
+> :: a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Max" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="2"
+>Min
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMin"
+></A
+><B
+>Min</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#Min"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+></TT
+> given by <TT
+>(<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
+>min</A
+></TT
+>,<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AmaxBound"
+>maxBound</A
+></TT
+>)</TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMin"
+></A
+><B
+>Min</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMin"
+></A
+><B
+>getMin</B
+> :: a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Min')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Min" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Min</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="3"
+>MaxPriority: Max semigroup w/ added bottom
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMaxPriority"
+></A
+><B
+>MaxPriority</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#MaxPriority"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+></TT
+> <TT
+>(<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
+>max</A
+></TT
+>,<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
+></TT
+>)</TT
+> over <TT
+><TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+></TT
+> a</TT
+> where <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
+></TT
+> is the bottom element
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMaxPriority"
+></A
+><B
+>MaxPriority</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMaxPriority"
+></A
+><B
+>getMaxPriority</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MaxPriority')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:MaxPriority" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="4"
+>MinPriority: Min semigroup w/ added top
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMinPriority"
+></A
+><B
+>MinPriority</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#MinPriority"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+></TT
+> <TT
+>(<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
+>min</A
+></TT
+>,<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
+></TT
+>)</TT
+> over <TT
+><TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+></TT
+> a</TT
+> where <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
+></TT
+> is the top element
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMinPriority"
+></A
+><B
+>MinPriority</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMinPriority"
+></A
+><B
+>getMinPriority</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MinPriority')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:MinPriority" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Reducer.Char</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Reducer-Char.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Reducer.Char</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+> <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A NAME="t%3ACharReducer"
+></A
+><B
+>CharReducer</B
+> m  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-Char.html#CharReducer"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AfromChar"
+></A
+><B
+>fromChar</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AinvalidChar"
+></A
+><B
+>invalidChar</B
+> :: [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
+>Word8</A
+>] -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:CharReducer')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:CharReducer" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> ()</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> ([] <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+>)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> ((,) m m')</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m'') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> ((,,) m m' m'')</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m'', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m''') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> ((,,,) m m' m'' m''')</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AinvalidChar"
+></A
+><B
+>invalidChar</B
+> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
+>Word8</A
+>] -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AfromChar"
+></A
+><B
+>fromChar</B
+> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Reducer.With</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Reducer-With.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Reducer.With</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AWithReducer"
+></A
+><B
+>WithReducer</B
+> c m </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-With.html#WithReducer"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AWithReducer"
+></A
+><B
+>WithReducer</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ArunWithReducer"
+></A
+><B
+>runWithReducer</B
+> :: (m, c)</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WithReducer')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:WithReducer" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m =&gt; Measured m (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
+>WithReducer</A
+> c m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
+>WithReducer</A
+> c m) m</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3AwithoutReducer"
+></A
+><B
+>withoutReducer</B
+> ::  (c `<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
+>WithReducer</A
+>` m) -&gt; c</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer-With.html#withoutReducer"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>Data.Monoid.Reducer</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="src/Data-Monoid-Reducer.html"
+>Source code</A
+></TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="modulebar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><FONT SIZE="6"
+>Data.Monoid.Reducer</FONT
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>Documentation</TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>class</SPAN
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A NAME="t%3AReducer"
+></A
+><B
+>Reducer</B
+> c m  <SPAN CLASS="keyword"
+>where</SPAN
+></TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#Reducer"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+>Methods</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aunit"
+></A
+><B
+>unit</B
+> :: c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#unit"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Asnoc"
+></A
+><B
+>snoc</B
+> :: m -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#snoc"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Acons"
+></A
+><B
+>cons</B
+> :: c -&gt; m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#cons"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Reducer')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Reducer" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c ()</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>SourcePosition</A
+> file)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Unlined</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Unspaced</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Lines</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
+>Char</A
+> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Words</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
+>Word8</A
+> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>CharReducer</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
+>Word8</A
+> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>UTF8</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c ([] c)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c ((,) m n)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>Measured v a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> a (FingerTree v a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c o) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c ((,,) m n o)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c o, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c p) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c ((,,,) m n o p)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> ([] c) ([] c)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
+>Action</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
+>Traversal</A
+> f)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
+>UnionWith</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
+>UnionWith</A
+> m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
+>Union</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
+>IntMap</A
+> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
+>Union</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
+>MonadPlus</A
+> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>MonadSum</A
+> m a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
+>Alternative</A
+> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Alternate</A
+> f a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
+>WithReducer</A
+> c m) m</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
+>UnionWith</A
+> k m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
+>UnionWith</A
+> k m)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
+>Union</A
+> k a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
+>Map</A
+> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
+>Union</A
+> k a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Aunit"
+></A
+><B
+>unit</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m =&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#unit"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Asnoc"
+></A
+><B
+>snoc</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m =&gt; m -&gt; c -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#snoc"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3Acons"
+></A
+><B
+>cons</B
+> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Reducer</A
+> c m =&gt; c -&gt; m -&gt; m</TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Reducer.html#cons"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/doc-index.html
hunk ./dist/doc/html/monoids/doc-index.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>monoids-0.1.1: Lots of Monoids (Index)</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD COLSPAN="2" STYLE="padding-top:5px;"
+><FORM onsubmit="full_search(); return false;" ACTION=""
+>Search: <INPUT ID="searchbox" onkeyup="quick_search()"
+> <INPUT VALUE="Search" TYPE="submit"
+> <SPAN ID="searchmsg"
+> </SPAN
+></FORM
+></TD
+></TR
+><TR
+><TD
+><TABLE ID="indexlist" CELLPADDING="0" CELLSPACING="5"
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>*&gt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>:&lt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>:&gt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&lt;|</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&lt;|&gt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>&gt;&lt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Action</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#t%3AAction"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AAction"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>All</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Alternate</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#v%3AAlternate"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Alternative</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Any</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>appEndo</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Applicative</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>CharReducer</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
+>Data.Monoid.Reducer.Char</A
+>, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>cons</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer.html#v%3Acons"
+>Data.Monoid.Reducer</A
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>dropUntil</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Dual</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Elem</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#t%3AElem"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>empty</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Function)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Function)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>EmptyL</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>EmptyR</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Endo</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>FingerTree</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>First</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>fmap'</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>fromChar</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-Char.html#v%3AfromChar"
+>Data.Monoid.Reducer.Char</A
+>, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>fromList</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Generator</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getAction</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AgetAction"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getAll</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getAlternate</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#v%3AgetAlternate"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getAny</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getDual</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getFirst</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getLast</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMax</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMax"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMaxPriority</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMaxPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMin</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMin"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMinPriority</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMinPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMonadSum</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AgetMonadSum"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getProduct</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getSum</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getTraversal</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversal"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>getUnion</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Function)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Map.html#v%3AgetUnion"
+>Data.Monoid.Map</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Function)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-IntMap.html#v%3AgetUnion"
+>Data.Monoid.IntMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>getUnionWith</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Function)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Map.html#v%3AgetUnionWith"
+>Data.Monoid.Map</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Function)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-IntMap.html#v%3AgetUnionWith"
+>Data.Monoid.IntMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>invalidChar</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-Char.html#v%3AinvalidChar"
+>Data.Monoid.Reducer.Char</A
+>, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Last</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Lines</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>linesFrom</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#v%3AlinesFrom"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mapFrom</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AmapFrom"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mappend</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mapReduce</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mapTo</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Generator.html#v%3AmapTo"
+>Data.Monoid.Generator</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Max</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMax"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>MaxPriority</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMaxPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mconcat</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>measure</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Measured</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mempty</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Min</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMin"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMin"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>MinPriority</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMinPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>MonadPlus</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Monad</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>MonadSum</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Monad.html#v%3AMonadSum"
+>Data.Monoid.Monad</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Monoid</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mplus</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Monad</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>mzero</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Monad</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>null</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Product</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>pure</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Applicative</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Reducer</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
+>Data.Monoid.Reducer</A
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>reverse</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runLines</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunLines"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runUnlined</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnlined"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runUnspaced</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnspaced"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runUTF8</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#v%3ArunUTF8"
+>Data.Monoid.Lexical.UTF8.Decoder</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runWithReducer</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-With.html#v%3ArunWithReducer"
+>Data.Monoid.Reducer.With</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>runWords</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunWords"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>showSourcePosition</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AshowSourcePosition"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>singleton</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>snoc</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
+>Data.Monoid.Reducer</A
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>SourceColumn</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>sourceColumn</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceColumn"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>SourceLine</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>sourceLine</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceLine"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>SourcePosition</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>split</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>startOfFile</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AstartOfFile"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Sum</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Generator</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>takeUntil</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Traversal</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
+>Data.Monoid.Applicative</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>traverse'</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>Union</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Map.html#t%3AUnion"
+>Data.Monoid.Map</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-IntMap.html#t%3AUnion"
+>Data.Monoid.IntMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>UnionWith</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Map.html#t%3AUnionWith"
+>Data.Monoid.Map</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
+>Data.Monoid.IntMap</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>unit</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
+>Data.Monoid.Reducer</A
+>, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Unlined</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Unspaced</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>UTF8</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
+>Data.Monoid.Lexical.UTF8.Decoder</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>ViewL</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>viewl</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>ViewR</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>viewr</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>withoutReducer</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-With.html#v%3AwithoutReducer"
+>Data.Monoid.Reducer.With</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry" COLSPAN="2"
+>WithReducer</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
+>Data.Monoid.Reducer.With</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Reducer-With.html#v%3AWithReducer"
+>Data.Monoid.Reducer.With</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Words</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>wordsFrom</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Lexical-Words.html#v%3AwordsFrom"
+>Data.Monoid.Lexical.Words</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>|&gt;</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.FingerTree</TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/haddock-util.js
hunk ./dist/doc/html/monoids/haddock-util.js 1
+// Haddock JavaScript utilities
+function toggle(button,id)
+{
+   var n = document.getElementById(id).style;
+   if (n.display == "none")
+   {
+    button.src = "minus.gif";
+    n.display = "block";
+   }
+   else
+   {
+    button.src = "plus.gif";
+    n.display = "none";
+   }
+}
+
+
+var max_results = 75; // 50 is not enough to search for map in the base libraries
+var shown_range = null;
+var last_search = null;
+
+function quick_search()
+{
+    perform_search(false);
+}
+
+function full_search()
+{
+    perform_search(true);
+}
+
+
+function perform_search(full)
+{
+    var text = document.getElementById("searchbox").value.toLowerCase();
+    if (text == last_search && !full) return;
+    last_search = text;
+    
+    var table = document.getElementById("indexlist");
+    var status = document.getElementById("searchmsg");
+    var children = table.firstChild.childNodes;
+    
+    // first figure out the first node with the prefix
+    var first = bisect(-1);
+    var last = (first == -1 ? -1 : bisect(1));
+
+    if (first == -1)
+    {
+        table.className = "";
+        status.innerHTML = "No results found, displaying all";
+    }
+    else if (first == 0 && last == children.length - 1)
+    {
+        table.className = "";
+        status.innerHTML = "";
+    }
+    else if (last - first >= max_results && !full)
+    {
+        table.className = "";
+        status.innerHTML = "More than " + max_results + ", press Search to display";
+    }
+    else
+    {
+        // decide what you need to clear/show
+        if (shown_range)
+            setclass(shown_range[0], shown_range[1], "indexrow");
+        setclass(first, last, "indexshow");
+        shown_range = [first, last];
+        table.className = "indexsearch";
+        status.innerHTML = "";
+    }
+
+    
+    function setclass(first, last, status)
+    {
+        for (var i = first; i <= last; i++)
+        {
+            children[i].className = status;
+        }
+    }
+    
+    
+    // do a binary search, treating 0 as ...
+    // return either -1 (no 0's found) or location of most far match
+    function bisect(dir)
+    {
+        var first = 0, finish = children.length - 1;
+        var mid, success = false;
+
+        while (finish - first > 3)
+        {
+            mid = Math.floor((finish + first) / 2);
+
+            var i = checkitem(mid);
+            if (i == 0) i = dir;
+            if (i == -1)
+                finish = mid;
+            else
+                first = mid;
+        }
+        var a = (dir == 1 ? first : finish);
+        var b = (dir == 1 ? finish : first);
+        for (var i = b; i != a - dir; i -= dir)
+        {
+            if (checkitem(i) == 0) return i;
+        }
+        return -1;
+    }    
+    
+    
+    // from an index, decide what the result is
+    // 0 = match, -1 is lower, 1 is higher
+    function checkitem(i)
+    {
+        var s = getitem(i).toLowerCase().substr(0, text.length);
+        if (s == text) return 0;
+        else return (s > text ? -1 : 1);
+    }
+    
+    
+    // from an index, get its string
+    // this abstracts over alternates
+    function getitem(i)
+    {
+        for ( ; i >= 0; i--)
+        {
+            var s = children[i].firstChild.firstChild.data;
+            if (s.indexOf(' ') == -1)
+                return s;
+        }
+        return ""; // should never be reached
+    }
+}
addfile ./dist/doc/html/monoids/haddock.css
hunk ./dist/doc/html/monoids/haddock.css 1
+/* -------- Global things --------- */
+
+BODY { 
+  background-color: #ffffff;
+  color: #000000;
+  font-family: sans-serif;
+  } 
+
+A:link    { color: #0000e0; text-decoration: none }
+A:visited { color: #0000a0; text-decoration: none }
+A:hover   { background-color: #e0e0ff; text-decoration: none }
+
+TABLE.vanilla {
+  width: 100%;
+  border-width: 0px;
+  /* I can't seem to specify cellspacing or cellpadding properly using CSS... */
+}
+
+TABLE.vanilla2 {
+  border-width: 0px;
+}
+
+/* <TT> font is a little too small in MSIE */
+TT  { font-size: 100%; }
+PRE { font-size: 100%; }
+
+LI P { margin: 0pt } 
+
+TD {
+  border-width: 0px;
+}
+
+TABLE.narrow {
+  border-width: 0px;
+}
+
+TD.s8  {  height: 8px;  }
+TD.s15 {  height: 15px; }
+
+SPAN.keyword { text-decoration: underline; }
+
+/* Resize the buttom image to match the text size */
+IMG.coll { width : 0.75em; height: 0.75em; margin-bottom: 0; margin-right: 0.5em }
+
+/* --------- Contents page ---------- */
+
+DIV.node {
+  padding-left: 3em;
+}
+
+DIV.cnode {
+  padding-left: 1.75em;
+}
+
+SPAN.pkg {
+  position: absolute;
+  left: 50em;
+}
+
+/* --------- Documentation elements ---------- */
+
+TD.children {
+  padding-left: 25px;
+  }
+
+TD.synopsis {
+  padding: 2px;
+  background-color: #f0f0f0;
+  font-family: monospace
+ }
+
+TD.decl { 
+  padding: 2px;
+  background-color: #f0f0f0; 
+  font-family: monospace;
+  vertical-align: top;
+  }
+
+TD.topdecl {
+  padding: 2px;
+  background-color: #f0f0f0;
+  font-family: monospace;
+  vertical-align: top;
+}
+
+TABLE.declbar {
+  border-spacing: 0px;
+ }
+
+TD.declname {
+  width: 100%;
+ }
+
+TD.declbut {
+  padding-left: 5px;
+  padding-right: 5px;
+  border-left-width: 1px;
+  border-left-color: #000099;
+  border-left-style: solid;
+  white-space: nowrap;
+  font-size: small;
+ }
+
+/* 
+  arg is just like decl, except that wrapping is not allowed.  It is
+  used for function and constructor arguments which have a text box
+  to the right, where if wrapping is allowed the text box squashes up
+  the declaration by wrapping it.
+*/
+TD.arg { 
+  padding: 2px;
+  background-color: #f0f0f0; 
+  font-family: monospace;
+  vertical-align: top;
+  white-space: nowrap;
+  }
+
+TD.recfield { padding-left: 20px }
+
+TD.doc  { 
+  padding-top: 2px;
+  padding-left: 10px;
+  }
+
+TD.ndoc  { 
+  padding: 2px;
+  }
+
+TD.rdoc  { 
+  padding: 2px;
+  padding-left: 10px;
+  width: 100%;
+  }
+
+TD.body  { 
+  padding-left: 10px
+  }
+
+TD.pkg {
+  width: 100%;
+  padding-left: 10px
+}
+
+TABLE.indexsearch TR.indexrow {
+  display: none;
+}
+TABLE.indexsearch TR.indexshow {
+  display: table-row;
+}
+
+TD.indexentry {
+  vertical-align: top;
+  padding-right: 10px
+  }
+
+TD.indexannot {
+  vertical-align: top;
+  padding-left: 20px;
+  white-space: nowrap
+  }
+
+TD.indexlinks {
+  width: 100%
+  }
+
+/* ------- Section Headings ------- */
+
+TD.section1 {
+  padding-top: 15px;
+  font-weight: bold;
+  font-size: 150%
+  }
+
+TD.section2 {
+  padding-top: 10px;
+  font-weight: bold;
+  font-size: 130%
+  }
+
+TD.section3 {
+  padding-top: 5px;
+  font-weight: bold;
+  font-size: 110%
+  }
+
+TD.section4 {
+  font-weight: bold;
+  font-size: 100%
+  }
+
+/* -------------- The title bar at the top of the page */
+
+TD.infohead {
+  color: #ffffff;
+  font-weight: bold;
+  padding-right: 10px;
+  text-align: left;
+}
+
+TD.infoval {
+  color: #ffffff;
+  padding-right: 10px;
+  text-align: left;
+}
+
+TD.topbar {
+  background-color: #000099;
+  padding: 5px;
+}
+
+TD.title {
+  color: #ffffff;
+  padding-left: 10px;
+  width: 100%
+  }
+
+TD.topbut {
+  padding-left: 5px;
+  padding-right: 5px;
+  border-left-width: 1px;
+  border-left-color: #ffffff;
+  border-left-style: solid;
+  white-space: nowrap;
+  }
+
+TD.topbut A:link {
+  color: #ffffff
+  }
+
+TD.topbut A:visited {
+  color: #ffff00
+  }
+
+TD.topbut A:hover {
+  background-color: #6060ff;
+  }
+
+TD.topbut:hover {
+  background-color: #6060ff
+  }
+
+TD.modulebar { 
+  background-color: #0077dd;
+  padding: 5px;
+  border-top-width: 1px;
+  border-top-color: #ffffff;
+  border-top-style: solid;
+  }
+
+/* --------- The page footer --------- */
+
+TD.botbar {
+  background-color: #000099;
+  color: #ffffff;
+  padding: 5px
+  }
+TD.botbar A:link {
+  color: #ffffff;
+  text-decoration: underline
+  }
+TD.botbar A:visited {
+  color: #ffff00
+  }
+TD.botbar A:hover {
+  background-color: #6060ff
+  }
+
addfile ./dist/doc/html/monoids/haskell_icon.gif
binary ./dist/doc/html/monoids/haskell_icon.gif
oldhex
*
newhex
*47494638376110001000f70f00000000800000008000808000000080800080008080c0c0c08080
*80ff000000ff00ffff000000ffff00ff00ffffffffff0000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*0021f90401000000002c000000001000100007086c0001007840b0a0418202073e38b0b021c387
*07143e2440c0a143040e091cd0787021c686151f84347800e343901d4b12646870e44a930d0952
*3ca832a6cc990555b2bc2992e4c79d3847ea2c88b3a7c89a2c8b8aa43874e941a60810003840b5
*aa55aa511346ddca75abc080003b
addfile ./dist/doc/html/monoids/index.html
hunk ./dist/doc/html/monoids/index.html 1
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<!--Rendered using the Haskell Html Library v0.2-->
+<HTML
+><HEAD
+><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
+><TITLE
+>monoids-0.1.1: Lots of Monoids</TITLE
+><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
+><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
+></SCRIPT
+></HEAD
+><BODY
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="topbar"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD
+><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
+></TD
+><TD CLASS="title"
+>monoids-0.1.1: Lots of Monoids</TD
+><TD CLASS="topbut"
+><A HREF="index.html"
+>Contents</A
+></TD
+><TD CLASS="topbut"
+><A HREF="doc-index.html"
+>Index</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+>monoids-0.1.1: Lots of Monoids</TD
+></TR
+><TR
+><TD CLASS="doc"
+>Lots of Monoids
+</TD
+></TR
+><TR
+><TD CLASS="section1"
+>Modules</TD
+></TR
+><TR
+><TD
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD STYLE="width: 50em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:0')" ALT="show/hide"
+>Data</TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:0" STYLE="display:block;"
+><TR
+><TD STYLE="width: 48em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:1')" ALT="show/hide"
+>Monoid</TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Applicative.html"
+>Data.Monoid.Applicative</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-FingerTree.html"
+>Data.Monoid.FingerTree</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Generator.html"
+>Data.Monoid.Generator</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-IntMap.html"
+>Data.Monoid.IntMap</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="width: 46em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:2')" ALT="show/hide"
+>Lexical</TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:2" STYLE="display:block;"
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
+><A HREF="Data-Monoid-Lexical-SourcePosition.html"
+>Data.Monoid.Lexical.SourcePosition</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="width: 44em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:3')" ALT="show/hide"
+>UTF8</TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:3" STYLE="display:block;"
+><TR
+><TD STYLE="padding-left: 1.25em;width: 42em"
+><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html"
+>Data.Monoid.Lexical.UTF8.Decoder</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
+><A HREF="Data-Monoid-Lexical-Words.html"
+>Data.Monoid.Lexical.Words</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Map.html"
+>Data.Monoid.Map</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Monad.html"
+>Data.Monoid.Monad</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 46em"
+><A HREF="Data-Monoid-Ord.html"
+>Data.Monoid.Ord</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="width: 46em"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:4')" ALT="show/hide"
+><A HREF="Data-Monoid-Reducer.html"
+>Data.Monoid.Reducer</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
+><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:4" STYLE="display:block;"
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
+><A HREF="Data-Monoid-Reducer-Char.html"
+>Data.Monoid.Reducer.Char</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
+><A HREF="Data-Monoid-Reducer-With.html"
+>Data.Monoid.Reducer.With</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="botbar"
+>Produced by <A HREF="http://www.haskell.org/haddock/"
+>Haddock</A
+> version 2.3.0</TD
+></TR
+></TABLE
+></BODY
+></HTML
+>
addfile ./dist/doc/html/monoids/minus.gif
binary ./dist/doc/html/monoids/minus.gif
oldhex
*
newhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002118c8f
*a00bc6eb5e0b40583b6596f1a11f14003b
addfile ./dist/doc/html/monoids/monoids.haddock
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*
newhex
*0d0cface00040000000000002179000000000000145b4300000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000200000000000000
*0f0000000000000000000000000000000200000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000009000000000000002d0000000000000000000000000000000900000000
*0000002e00000000000000000000000000000009000000000000002f0000000000000000000000
*000000000900000000000000300000000000000000000000000000000a00000000000000310000
*000000000000000000000000000a00000000000000320000000000000000000000000000000a00
*000000000000330000000000000000000000000000000a00000000000000340000000000000000
*000000000000000b00000000000000350000000000000000000000000000000b00000000000000
*360000000000000000000000000000000b00000000000000370000000000000000000000000000
*000b00000000000000380000000000000000000000000000000b00000000000000390000000000
*000000000000000000000c000000000000003a0000000000000000000000000000000c00000000
*0000003b0000000000000000000000000000000c000000000000003c0000000000000000000000
*000000000c000000000000003d0000000000000000000000000000000c000000000000003e0000
*000000000000000000000000000c000000000000003f0000000000000000000000000000000c00
*000000000000400000000000000000000000000000000c00000000000000410000000000000000
*000000000000000c00000000000000420000000000000000000000000000000c0d000000000000
*000000000000000000010000000004000000000000000003010204000000540000006800000065
*00000020010401000000000000000043000000000000000d000000000000000e01020100000020
*010701020100000028010401000000000000000044000000000000000d000000000000000f0102
*010000002c010401000000000000000045000000000000000d0000000000000010020100000029
*010206000000200000006f00000076000000650000007200000020010701040100000000000000
*0046000000000000000d0000000000000010020200000020000000610102070000002000000077
*000000680000006500000072000000650000002001040100000000000000004500000000000000
*0d0000000000000010021400000020000000690000007300000020000000740000006800000065
*00000020000000740000006f0000007000000020000000650000006c000000650000006d000000
*650000006e000000740000000a0000000000000003030102040000005400000068000000650000
*0020010401000000000000000043000000000000000d000000000000000e010201000000200107
*01020100000028010401000000000000000047000000000000000d000000000000000f01020100
*00002c010401000000000000000045000000000000000d00000000000000100201000000290102
*06000000200000006f000000760000006500000072000000200107010401000000000000000046
*000000000000000d00000000000000100202000000200000006101020700000020000000770000
*006800000065000000720000006500000020010401000000000000000045000000000000000d00
*000000000000100217000000200000006900000073000000200000007400000068000000650000
*0020000000620000006f00000074000000740000006f0000006d00000020000000650000006c00
*0000650000006d000000650000006e000000740000000a00000000000000060301020400000054
*000000680000006500000020010401000000000000000043000000000000000d00000000000000
*0e01020a00000020000000670000006900000076000000650000006e0000002000000062000000
*7900000020010701020100000028010401000000000000000044000000000000000d0000000000
*00000f0102010000002c010401000000000000000048000000000000000d000000000000001102
*010000002902010000000a00000000000000090301020400000054000000680000006500000020
*010401000000000000000043000000000000000d000000000000000e0102010000002001070102
*0100000028010401000000000000000047000000000000000d000000000000000f010201000000
*2c010401000000000000000049000000000000000d000000000000001102010000002902010000
*000a0f000000000000004a000000000000004b0000000000000043000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005000000
*0000000006000000000000000700000000000000080000000000000009000000000000000a0000
*00000000000b0c0000000000000009000000000000000a000000000000000b0000000000000006
*000000000000000700000000000000080000000000000003000000000000000400000000000000
*050000000000000000000000000000000100000000000000020000000000000000000000000000
*0002000000000007000000000000004a000000000000004b000000000000004300000000000000
*0c000000000000000d000000000000000e000000000000000f04000000000000000c0000000000
*00000d000000000000000e000000000000000f0000000000000000000000000000000300000000
*000a000000000000004a000000000000004b0000000000000043000000000000000c0000000000
*00000d000000000000000e000000000000000f0000000000000010000000000000001100000000
*000000120300000000000000100000000000000012000000000000001100000000000000000000
*000000000004000000000011000000000000004a000000000000004b0000000000000043000000
*000000000c000000000000000d000000000000000e000000000000000f00000000000000100000
*000000000011000000000000001200000000000000130000000000000014000000000000001500
*000000000000160000000000000017000000000000001800000000000000190700000000000000
*130000000000000015000000000000001400000000000000180000000000000017000000000000
*001600000000000000190000000000000000000000000000000500000000000c00000000000000
*4a000000000000004b0000000000000043000000000000000c000000000000000d000000000000
*000e000000000000000f0000000000000010000000000000001100000000000000120000000000
*00001a000000000000001b02000000000000001a000000000000001b0000000000000000000000
*000000000600000000000b000000000000004a000000000000004b000000000000004300000000
*0000000c000000000000000d000000000000000e000000000000000f000000000000001c000000
*000000001d000000000000001e000000000000001f04000000000000001c000000000000001d00
*0000000000001e000000000000001f000000000000000000000000000000070000000000100000
*00000000004c000000000000004a000000000000004b0000000000000043000000000000004d00
*0000000000004e000000000000000c000000000000000d000000000000000e000000000000000f
*000000000000002000000000000000210000000000000022000000000000002300000000000000
*240000000000000025060000000000000023000000000000002400000000000000250000000000
*000020000000000000002100000000000000220000000000000000000000000000000800000000
*0013000000000000004a000000000000004f000000000000005000000000000000510000000000
*00005200000000000000530000000000000054000000000000004b000000000000004300000000
*0000000c000000000000000d000000000000000e000000000000000f0000000000000026000000
*000000002700000000000000280000000000000029000000000000002a000000000000002b0600
*00000000000029000000000000002a000000000000002b00000000000000260000000000000027
*00000000000000280000000000000000000000000000001200000000001f000000000000004a00
*0000000000004b0000000000000043000000000000000c000000000000000d000000000000000e
*000000000000000f00000000000000550000000000000056000000000000005700000000000000
*580000000000000059000000000000005a000000000000005b000000000000005c000000000000
*005d000000000000005e000000000000005f000000000000006000000000000000610000000000
*000062000000000000006300000000000000640000000000000065000000000000006600000000
*0000006700000000000000680000000000000069000000000000006a000000000000006b000000
*000000006c000000000000000000000000000000000900000000000b000000000000004a000000
*000000004b0000000000000043000000000000000c000000000000000d000000000000000e0000
*00000000000f000000000000002c000000000000002d000000000000002e000000000000002f04
*000000000000002e000000000000002f000000000000002c000000000000002d00000000000000
*00000000000000000a00000000000b000000000000004a000000000000004b0000000000000043
*000000000000000c000000000000000d000000000000000e000000000000000f00000000000000
*300000000000000031000000000000003200000000000000330400000000000000320000000000
*000033000000000000003000000000000000310000000000000000000000000000000b00000000
*0021000000000000004a000000000000006d000000000000004b00000000000000430000000000
*00006e000000000000006f00000000000000700000000000000071000000000000007200000000
*000000730000000000000074000000000000007500000000000000760000000000000077000000
*00000000780000000000000079000000000000007a000000000000007b000000000000007c0000
*00000000007d000000000000007e000000000000007f0000000000000080000000000000008100
*000000000000820000000000000083000000000000008400000000000000850000000000000034
*000000000000003500000000000000360000000000000037000000000000003805000000000000
*003400000000000000350000000000000036000000000000003700000000000000380000000000
*000000000000000000000c000000000014000000000000004a000000000000004b000000000000
*0043000000000000000c000000000000000d000000000000000e000000000000000f0000000000
*000010000000000000001100000000000000120000000000000039000000000000003a00000000
*0000003b000000000000003c000000000000003d000000000000003e000000000000003f000000
*0000000040000000000000004100000000000000420a000000000000003e000000000000003f00
*0000000000003d0000000000000040000000000000003b000000000000003c0000000000000039
*000000000000003a00000000000000410000000000000042000000000000008600000000000000
*000000000000000001030000000000000013000000000000000000000000000000010100000000
*000000130000000000000000000000000000000100000000000000001400000000000000000000
*000000000001030000000000000015000000000000000000000000000000010100000000000000
*150000000000000000000000000000000100000000000000001600000000000000000000000000
*000001030000000000000017000000000000000000000000000000010100000000000000170000
*000000000000000000000000000100000000000000001800000000000000000000000000000001
*030000000000000019000000000000000000000000000000010100000000000000190000000000
*000000000000000000000100000000000000001a00000000000000000000000000000002030000
*00000000001b0000000000000000000000000000000200000000000000001c0000000000000000
*000000000000000200000000000000001d00000000000000000000000000000002000000000000
*00001e0000000000000000000000000000000303000000000000001f0000000000000000000000
*000000000300000000000000002000000000000000000000000000000003000000000000000021
*000000000000000000000000000000040300000000000000220000000000000000000000000000
*000403000000000000002300000000000000000000000000000004030000000000000024000000
*000000000000000000000000040000000000000000250000000000000000000000000000000400
*000000000000002600000000000000000000000000000004000000000000000027000000000000
*000000000000000000040000000000000000280000000000000000000000000000000503000000
*00000000290000000000000000000000000000000500000000000000002a000000000000000000
*0000000000000603000000000000002b0000000000000000000000000000000601000000000000
*002b0000000000000000000000000000000600000000000000002c000000000000000000000000
*0000000600000000000000002d0000000000000000000000000000000703000000000000002e00
*00000000000000000000000000000701000000000000002e000000000000000000000000000000
*0700000000000000002f0000000000000000000000000000000703000000000000003000000000
*000000000000000000000007010000000000000030000000000000000000000000000000070000
*000000000000310000000000000000000000000000000803000000000000003200000000000000
*000000000000000008010000000000000032000000000000000000000000000000080000000000
*000000330000000000000000000000000000000803000000000000003400000000000000000000
*000000000008010000000000000034000000000000000000000000000000080000000000000000
*350000000000000000000000000000000903000000000000003600000000000000000000000000
*000009000000000000000037000000000000000000000000000000090300000000000000380000
*00000000000000000000000000090000000000000000390000000000000000000000000000000a
*0300000000000000360000000000000000000000000000000a0000000000000000370000000000
*000000000000000000000a0300000000000000380000000000000000000000000000000a000000
*0000000000390000000000000000000000000000000b03000000000000003a0000000000000000
*000000000000000b03000000000000003b0000000000000000000000000000000b000000000000
*00003c0000000000000000000000000000000b00000000000000003d0000000000000000000000
*000000000b00000000000000003e0000000000000000000000000000000c03000000000000003f
*0000000000000000000000000000000c0000000000000000400000000000000000000000000000
*000c0300000000000000410000000000000000000000000000000c000000000000000042000000
*0000000000000000000000000c0300000000000000430000000000000000000000000000000c03
*00000000000000440000000000000000000000000000000c000000000000000045000000000000
*0000000000000000000c0000000000000000460000000000000000000000000000000c00000000
*00000000470000000000000000000000000000000c000000000000000048000000000000000d00
*0000000000000e030000000000000049000000000000000d000000000000004a00000000000000
*004b000000000000000d000000000000001001000000000000004c000000000000000d00000000
*0000001003000000000000004d000000000000000d000000000000004a00000000000000004e00
*0000000000000d000000000000004f000000000000000050000000000000000d00000000000000
*4f000000000000000051000000000000000d000000000000000e00000000000000005200000000
*0000000d000000000000000e000000000000000053000000000000000d00000000000000540300
*00000000000055000000000000000d000000000000005400000000000000005600000000000000
*0d0000000000000054000000000000000057000000000000000d00000000000000580000000000
*00000059000000000000000d000000000000005800000000000000005a000000000000000d0000
*00000000005803000000000000005b000000000000000d00000000000000580000000000000000
*5c000000000000000d000000000000005800000000000000005d000000000000000d0000000000
*00005803000000000000005e000000000000005f00000000000000600000000000000000610000
*00000000005f0000000000000060000000000000000062000000000000005f0000000000000060
*010000000000000063000000000000005f00000000000000600100000000000000640000000000
*00005f0000000000000060010000000000000065000000000000005f0000000000000060010000
*000000000066000000000000005f0000000000000060030000000000000067000000000000005f
*0000000000000060030000000000000068000000000000005f0000000000000060030000000000
*000069000000000000005f000000000000006003000000000000006a000000000000005f000000
*000000006000000000000000006b000000000000005f000000000000006000000000000000006c
*000000000000005f000000000000006000000000000000006d000000000000005f000000000000
*006000000000000000005d000000000000005f000000000000006000000000000000006e000000
*000000005f000000000000006000000000000000006f000000000000005f000000000000006000
*0000000000000070000000000000005f0000000000000060000000000000000071000000000000
*005f0000000000000060000000000000000072000000000000005f000000000000006000000000
*0000000073000000000000005f0000000000000060000000000000000074000000000000005f00
*00000000000060000000000000000075000000000000005f000000000000006000000000000000
*0076000000000000005f0000000000000060000000000000000077000000000000000d00000000
*0000000e000000000000000078000000000000000d000000000000000e00000000000000007900
*0000000000000d000000000000000e01000000000000007a000000000000000d00000000000000
*0e03000000000000007a000000000000000d000000000000000e00000000000000007b00000000
*0000000d000000000000000e01000000000000007c000000000000000d000000000000000e0300
*0000000000007c000000000000000d000000000000000e00000000000000007d00000000000000
*0d000000000000000e01000000000000007e000000000000000d000000000000000e0300000000
*0000007e000000000000000d000000000000000e00000000000000007f000000000000000d0000
*00000000000e010000000000000080000000000000000d000000000000000e0300000000000000
*80000000000000000d000000000000000e000000000000000081000000000000000d0000000000
*00000e010000000000000082000000000000000d000000000000000e0300000000000000820000
*00000000000d000000000000000e000000000000000083000000000000000d000000000000000e
*010000000000000084000000000000000d000000000000000e0300000000000000840000000000
*00000d000000000000000e000000000000000085000000000000000d000000000000000e010000
*000000000086000000000000000d000000000000000e030000000000000086000000000000000d
*000000000000000e000000000000000087000000000000000d000000000000000e010000000000
*000088000000000000000d000000000000000e0300000000000000880000000000000089000000
*000000000d6d6f6e6f6964732d302e312e31000000000000000f446174612e4d6f6e6f69642e4f
*72640000000000000013446174612e4d6f6e6f69642e5265647563657200000000000000184461
*74612e4d6f6e6f69642e526564756365722e436861720000000000000022446174612e4d6f6e6f
*69642e4c65786963616c2e536f75726365506f736974696f6e0000000000000020446174612e4d
*6f6e6f69642e4c65786963616c2e555446382e4465636f6465720000000000000018446174612e
*4d6f6e6f69642e526564756365722e576974680000000000000011446174612e4d6f6e6f69642e
*4d6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c69636174697665000000
*000000000f446174612e4d6f6e6f69642e4d61700000000000000012446174612e4d6f6e6f6964
*2e496e744d61700000000000000015446174612e4d6f6e6f69642e47656e657261746f72000000
*0000000019446174612e4d6f6e6f69642e4c65786963616c2e576f726473000000000000000462
*617365000000000000000b446174612e4d6f6e6f69640000000000000008446174612e4f726400
*0000000000000a446174612e4d6179626500000000000000075072656c75646500000000000000
*16446174612e4d6f6e6f69642e46696e67657254726565000000000000000b4d696e5072696f72
*697479000000000000000e6765744d696e5072696f72697479000000000000000b4d6178507269
*6f72697479000000000000000e6765744d61785072696f7269747900000000000000034d696e00
*000000000000066765744d696e00000000000000034d617800000000000000066765744d617800
*00000000000007526564756365720000000000000004756e69740000000000000004736e6f6300
*00000000000004636f6e73000000000000000b4368617252656475636572000000000000000866
*726f6d43686172000000000000000b696e76616c696443686172000000000000000e536f757263
*65506f736974696f6e000000000000000c536f75726365436f6c756d6e000000000000000a536f
*757263654c696e65000000000000000b73746172744f6646696c65000000000000000c736f7572
*6365436f6c756d6e000000000000000a736f757263654c696e65000000000000001273686f7753
*6f75726365506f736974696f6e000000000000000455544638000000000000000772756e555446
*38000000000000000b5769746852656475636572000000000000000e72756e5769746852656475
*636572000000000000000e776974686f75745265647563657200000000000000084d6f6e616453
*756d000000000000000b6765744d6f6e616453756d0000000000000006416374696f6e00000000
*00000009676574416374696f6e0000000000000009416c7465726e617465000000000000000c67
*6574416c7465726e617465000000000000000954726176657273616c000000000000000c676574
*54726176657273616c0000000000000009556e696f6e57697468000000000000000c676574556e
*696f6e576974680000000000000005556e696f6e0000000000000008676574556e696f6e000000
*000000000947656e657261746f720000000000000004456c656d00000000000000096d61705265
*6475636500000000000000056d6170546f00000000000000076d617046726f6d00000000000000
*07556e6c696e6564000000000000000a72756e556e6c696e65640000000000000008556e737061
*636564000000000000000b72756e556e73706163656400000000000000054c696e657300000000
*00000005576f726473000000000000000872756e576f726473000000000000000872756e4c696e
*65730000000000000009776f72647346726f6d00000000000000096c696e657346726f6d000000
*00000000064d6f6e6f6964000000000000000b4748432e436c617373657300000000000000036d
*696e00000000000000074e6f7468696e6700000000000000054d6179626500000000000000036d
*617800000000000000084748432e456e756d00000000000000086d6178426f756e640000000000
*0000086d696e426f756e6400000000000000076d617070656e6400000000000000066d656d7074
*79000000000000000d436f6e74726f6c2e4d6f6e616400000000000000094d6f6e6164506c7573
*00000000000000056d706c757300000000000000056d7a65726f0000000000000013436f6e7472
*6f6c2e4170706c6963617469766500000000000000022a3e000000000000000470757265000000
*000000000b4170706c6963617469766500000000000000033c7c3e0000000000000005656d7074
*79000000000000000b416c7465726e6174697665000000000000000e66696e676572747265652d
*302e30000000000000000f446174612e46696e6765725472656500000000000000023c7c000000
*000000000573706c697400000000000000023a3e0000000000000006456d707479520000000000
*0000023a3c0000000000000006456d7074794c0000000000000005566965774c00000000000000
*055669657752000000000000000a46696e6765725472656500000000000000084d656173757265
*6400000000000000023e3c00000000000000076d656173757265000000000000000964726f7055
*6e74696c0000000000000005666d617027000000000000000866726f6d4c697374000000000000
*00046e756c6c000000000000000772657665727365000000000000000973696e676c65746f6e00
*0000000000000974616b65556e74696c0000000000000009747261766572736527000000000000
*0005766965776c0000000000000005766965777200000000000000027c3e00000000000000076d
*636f6e63617400000000000000076765744475616c00000000000000044475616c000000000000
*0007617070456e646f0000000000000004456e646f0000000000000006676574416c6c00000000
*00000003416c6c0000000000000006676574416e790000000000000003416e7900000000000000
*0667657453756d000000000000000353756d000000000000000a67657450726f64756374000000
*000000000750726f64756374000000000000000867657446697273740000000000000005466972
*737400000000000000076765744c61737400000000000000044c617374
addfile ./dist/doc/html/monoids/plus.gif
binary ./dist/doc/html/monoids/plus.gif
oldhex
*
newhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002148c8f
*a00bb6b29c82ca897b5b7871cfce74085200003b
addfile ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Applicative.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Traversal</span><span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span><span class='hs-layout'>,</span><span class='hs-varid'>getTraversal</span><span class='hs-layout'>)</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Alternate</span><span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span><span class='hs-layout'>,</span><span class='hs-varid'>getAlternate</span><span class='hs-layout'>)</span>
+<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span> <span class='hs-varid'>empty</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-11"></a>
+<a name="line-12"></a><a name="Traversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-16"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>
+<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-20"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>
+<a name="line-23"></a><a name="snocTraversal"></a><span class='hs-comment'>{-# RULES "unitTraversal" unit = Traversal #-}</span>
+<a name="line-24"></a><span class='hs-comment'>{-# RULES "snocTraversal" snoc = snocTraversal #-}</span>
+<a name="line-25"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span>
+<a name="line-26"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Traversal</span>
+<a name="line-27"></a>
+<a name="line-28"></a><a name="Alternate"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAlternate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-29"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>)</span>
+<a name="line-30"></a>
+<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-32"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span> 
+<a name="line-33"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
+<a name="line-34"></a>
+<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span>
+<a name="line-37"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
+<a name="line-38"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-FingerTree.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-FingerTree.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/FingerTree.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
+<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-6"></a>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
+<a name="line-9"></a>
+<a name="line-10"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-11"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
+<a name="line-12"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&lt;</span><span class='hs-layout'>)</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-15"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span>
+<a name="line-16"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span> 
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-comment'>{-
+<a name="line-20"></a>instance Measured v a =&gt; Reducer (FingerTree v a) (FingerTree v a) where
+<a name="line-21"></a>    unit = id
+<a name="line-22"></a>    cons = mappend
+<a name="line-23"></a>    snoc = mappend
+<a name="line-24"></a>-}</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Generator.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
+<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
+<a name="line-9"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-10"></a>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
+<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
+<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
+<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-22"></a>
+<a name="line-23"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
+<a name="line-24"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
+<a name="line-25"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
+<a name="line-26"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-27"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-28"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-29"></a>
+<a name="line-30"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
+<a name="line-31"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-32"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-33"></a>
+<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-35"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
+<a name="line-36"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-37"></a>
+<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
+<a name="line-39"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span>
+<a name="line-40"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
+<a name="line-43"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
+<a name="line-44"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-47"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
+<a name="line-48"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-49"></a>
+<a name="line-50"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
+<a name="line-51"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
+<a name="line-52"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
+<a name="line-53"></a><span class='hs-comment'>-- These aren't happy, but should work</span>
+<a name="line-54"></a><span class='hs-comment'>{-- RULES "reduce/fold" reduce = fold --}</span>
+<a name="line-55"></a><span class='hs-comment'>{-- RULES "mapReduce/foldMap" mapReduce = foldMap --}</span>
+<a name="line-56"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-57"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
+<a name="line-58"></a>
+<a name="line-59"></a><a name="mtraverse_"></a><span class='hs-definition'>mtraverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-60"></a><span class='hs-definition'>mtraverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-61"></a>    
+<a name="line-62"></a><a name="mfor_"></a><span class='hs-definition'>mfor_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
+<a name="line-63"></a><span class='hs-definition'>mfor_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mtraverse_</span>
+<a name="line-64"></a>
+<a name="line-65"></a><a name="mmapM_"></a><span class='hs-definition'>mmapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-66"></a><span class='hs-definition'>mmapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
+<a name="line-67"></a>
+<a name="line-68"></a><a name="mforM_"></a><span class='hs-definition'>mforM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
+<a name="line-69"></a><span class='hs-definition'>mforM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mmapM_</span>
+<a name="line-70"></a>
+<a name="line-71"></a><a name="mconcatMap"></a><span class='hs-definition'>mconcatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
+<a name="line-72"></a><span class='hs-definition'>mconcatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span>
+<a name="line-73"></a>
+<a name="line-74"></a>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/IntMap.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span>
+<a name="line-10"></a>
+<a name="line-11"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-12"></a>
+<a name="line-13"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-14"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
+<a name="line-15"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-16"></a>
+<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-18"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
+<a name="line-19"></a>
+<a name="line-20"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
+<a name="line-21"></a>
+<a name="line-22"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
+<a name="line-23"></a>
+<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-25"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
+<a name="line-26"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>
+<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-29"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Lexical/SourcePosition.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>SourcePosition</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourcePosition</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceLine</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceColumn</span>
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceLine</span>
+<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceColumn</span>
+<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>startOfFile</span>
+<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>showSourcePosition</span>
+<a name="line-11"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-12"></a>
+<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>lex</span><span class='hs-layout'>)</span>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Extras</span>
+<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-17"></a>
+<a name="line-18"></a><a name="SourceLine"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceLine</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-19"></a><a name="SourceColumn"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceColumn</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
+<a name="line-20"></a>
+<a name="line-21"></a><a name="SourcePosition"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>file</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
+<a name="line-22"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Lines</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
+<a name="line-23"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Columns</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
+<a name="line-24"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Tab</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-comment'>-- cols before and after an unresolved tab</span>
+<a name="line-25"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Eq</span><span class='hs-layout'>)</span>
+<a name="line-26"></a>
+<a name="line-27"></a><a name="nextTab"></a><span class='hs-definition'>nextTab</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
+<a name="line-28"></a><span class='hs-definition'>nextTab</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-layout'>(</span><span class='hs-num'>8</span> <span class='hs-comment'>-</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-comment'>-</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mod`</span> <span class='hs-num'>8</span><span class='hs-layout'>)</span>
+<a name="line-29"></a>
+<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
+<a name="line-31"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
+<a name="line-32"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
+<a name="line-33"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span>
+<a name="line-34"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
+<a name="line-35"></a>
+<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
+<a name="line-37"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorZero</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-varid'>fzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorPlus</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
+<a name="line-43"></a>    <span class='hs-varid'>fplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
+<a name="line-44"></a>
+<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-46"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>0</span>
+<a name="line-47"></a>
+<a name="line-48"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
+<a name="line-49"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-50"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
+<a name="line-51"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
+<a name="line-52"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-53"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
+<a name="line-54"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-55"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>y</span>
+<a name="line-56"></a>    <span class='hs-conid'>Tab</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>
+<a name="line-57"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-58"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x'</span> <span class='hs-varid'>y'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
+<a name="line-59"></a>    <span class='hs-keyword'>_</span>         <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pos</span>
+<a name="line-60"></a>
+<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-62"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
+<a name="line-63"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-num'>0</span> <span class='hs-num'>0</span> 
+<a name="line-64"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>1</span>
+<a name="line-65"></a>
+<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span>
+<a name="line-67"></a>    
+<a name="line-68"></a><a name="startOfFile"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span>
+<a name="line-69"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span>
+<a name="line-70"></a>
+<a name="line-71"></a><a name="sourceColumn"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceColumn</span>
+<a name="line-72"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
+<a name="line-73"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
+<a name="line-74"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
+<a name="line-75"></a>
+<a name="line-76"></a><a name="sourceLine"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceLine</span>
+<a name="line-77"></a><span class='hs-definition'>sourceLine</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>l</span>
+<a name="line-78"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
+<a name="line-79"></a>
+<a name="line-80"></a><a name="showSourcePosition"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
+<a name="line-81"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-str'>"-"</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-82"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>c</span>
+<a name="line-83"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Lexical/UTF8/Decoder.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>UTF8</span><span class='hs-varop'>.</span><span class='hs-conid'>Decoder</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UTF8</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runUTF8</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>    
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Bits</span> <span class='hs-layout'>(</span><span class='hs-varid'>shiftL</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.&amp;.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.|.</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-10"></a>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
+<a name="line-12"></a>
+<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-14"></a>
+<a name="line-15"></a><span class='hs-comment'>-- Incrementally reduce canonical RFC3629 UTF-8 Characters</span>
+<a name="line-16"></a>
+<a name="line-17"></a><a name="H"></a><span class='hs-comment'>-- utf8 characters are at most 4 characters long, so we need only retain state for 3 of them</span>
+<a name="line-18"></a><a name="H"></a><span class='hs-comment'>-- moreover their length is able to be determined a priori, so lets store that intrinsically in the constructor</span>
+<a name="line-19"></a><a name="H"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>H0</span>
+<a name="line-20"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H2_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> 
+<a name="line-21"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
+<a name="line-22"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
+<a name="line-23"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
+<a name="line-24"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
+<a name="line-25"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_3</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
+<a name="line-26"></a>
+<a name="line-27"></a><a name="T"></a><span class='hs-comment'>-- words expressing the tail of a character, each between 0x80 and 0xbf</span>
+<a name="line-28"></a><a name="T"></a><span class='hs-comment'>-- this is arbitrary length to simplify making the parser truly monoidal</span>
+<a name="line-29"></a><a name="T"></a><span class='hs-comment'>-- this probably means we have O(n^2) worst case performance in the face of very long runs of chars that look like 10xxxxxx</span>
+<a name="line-30"></a><a name="T"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span>
+<a name="line-31"></a>
+<a name="line-32"></a><a name="UTF8"></a><span class='hs-comment'>-- S is a segment that contains a possible tail of a character, the result of reducing some full characters, and the start of another character</span>
+<a name="line-33"></a><a name="UTF8"></a><span class='hs-comment'>-- T contains a list of bytes each between 0x80 and 0xbf</span>
+<a name="line-34"></a><a name="UTF8"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>T</span> <span class='hs-varid'>m</span> <span class='hs-varop'>!</span><span class='hs-conid'>H</span>
+<a name="line-35"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-conid'>T</span> <span class='hs-conid'>T</span>
+<a name="line-36"></a>
+<a name="line-37"></a><a name="flushH"></a><span class='hs-comment'>-- flush any extra characters in a head, when the next character isn't between 0x80 and 0xbf</span>
+<a name="line-38"></a><span class='hs-definition'>flushH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-39"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-40"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-41"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-42"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
+<a name="line-43"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-44"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
+<a name="line-45"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
+<a name="line-46"></a>
+<a name="line-47"></a><a name="flushT"></a><span class='hs-comment'>-- flush a character tail </span>
+<a name="line-48"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-49"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span>
+<a name="line-50"></a>
+<a name="line-51"></a><a name="snocH"></a><span class='hs-definition'>snocH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
+<a name="line-52"></a><span class='hs-definition'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
+<a name="line-53"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-54"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-55"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-56"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-57"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-58"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-59"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span>
+<a name="line-60"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-61"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-62"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
+<a name="line-63"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-64"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-65"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
+<a name="line-66"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-67"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-68"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
+<a name="line-69"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-70"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-71"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
+<a name="line-72"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>
+<a name="line-73"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-74"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
+<a name="line-75"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-76"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-77"></a>
+<a name="line-78"></a><a name="mask"></a><span class='hs-definition'>mask</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
+<a name="line-79"></a><span class='hs-definition'>mask</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
+<a name="line-80"></a>
+<a name="line-81"></a><a name="combine"></a><span class='hs-definition'>combine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
+<a name="line-82"></a><span class='hs-definition'>combine</span> <span class='hs-varid'>a</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>shiftL</span> <span class='hs-varid'>a</span> <span class='hs-num'>6</span> <span class='hs-varop'>.|.</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-num'>0x3f</span><span class='hs-layout'>)</span>
+<a name="line-83"></a>
+<a name="line-84"></a><a name="b1"></a><span class='hs-definition'>b1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-85"></a><span class='hs-definition'>b1</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toEnum</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>c</span>
+<a name="line-86"></a>     <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
+<a name="line-87"></a>
+<a name="line-88"></a><a name="b2"></a><span class='hs-definition'>b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-89"></a><span class='hs-definition'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x1f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-90"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span>
+<a name="line-91"></a>
+<a name="line-92"></a><a name="b3"></a><span class='hs-definition'>b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-93"></a><span class='hs-definition'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x0f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-94"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span>
+<a name="line-95"></a>
+<a name="line-96"></a>
+<a name="line-97"></a><a name="b4"></a><span class='hs-definition'>b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-98"></a><span class='hs-definition'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x07</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-99"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span>
+<a name="line-100"></a>
+<a name="line-101"></a><a name="valid_b2"></a><span class='hs-definition'>valid_b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-102"></a><span class='hs-definition'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xc2</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xdf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
+<a name="line-103"></a>
+<a name="line-104"></a><a name="valid_b3"></a><span class='hs-definition'>valid_b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-105"></a><span class='hs-definition'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xe0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xa0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span> 
+<a name="line-106"></a>                 <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xe1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xef</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
+<a name="line-107"></a>
+<a name="line-108"></a><a name="valid_b4"></a><span class='hs-definition'>valid_b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
+<a name="line-109"></a><span class='hs-definition'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x90</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
+<a name="line-110"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xf1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xf3</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
+<a name="line-111"></a>                   <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf4</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0x8f</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
+<a name="line-112"></a>
+<a name="line-113"></a><a name="consT"></a><span class='hs-definition'>consT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
+<a name="line-114"></a><span class='hs-definition'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>h</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span>
+<a name="line-115"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
+<a name="line-116"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span>
+<a name="line-117"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
+<a name="line-118"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
+<a name="line-119"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
+<a name="line-120"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
+<a name="line-121"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
+<a name="line-122"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
+<a name="line-123"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
+<a name="line-124"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
+<a name="line-125"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
+<a name="line-126"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
+<a name="line-127"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> 
+<a name="line-128"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
+<a name="line-129"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-130"></a>
+<a name="line-131"></a><a name="invalidChars"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-132"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
+<a name="line-133"></a>
+<a name="line-134"></a><a name="merge"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
+<a name="line-135"></a><span class='hs-definition'>merge</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
+<a name="line-136"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
+<a name="line-137"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
+<a name="line-138"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
+<a name="line-139"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
+<a name="line-140"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
+<a name="line-141"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
+<a name="line-142"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
+<a name="line-143"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
+<a name="line-144"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
+<a name="line-145"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
+<a name="line-146"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
+<a name="line-147"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
+<a name="line-148"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
+<a name="line-149"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
+<a name="line-150"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
+<a name="line-151"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
+<a name="line-152"></a>
+<a name="line-153"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-154"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span>
+<a name="line-155"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
+<a name="line-156"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
+<a name="line-157"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>id</span> <span class='hs-varid'>flushH</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
+<a name="line-158"></a>    <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
+<a name="line-159"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>c'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-160"></a>        <span class='hs-varid'>k</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
+<a name="line-161"></a>
+<a name="line-162"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Word8</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-163"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
+<a name="line-164"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
+<a name="line-165"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-varid'>h</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
+<a name="line-166"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>     <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
+<a name="line-167"></a>                            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
+<a name="line-168"></a>
+<a name="line-169"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>cs</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-conid'>T</span>
+<a name="line-170"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k1</span> <span class='hs-varid'>k2</span> <span class='hs-varid'>k3</span> <span class='hs-keyword'>where</span>
+<a name="line-171"></a>        <span class='hs-varid'>k1</span> <span class='hs-varid'>h'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>flushH</span> <span class='hs-varid'>h'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
+<a name="line-172"></a>        <span class='hs-varid'>k2</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>m'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
+<a name="line-173"></a>        <span class='hs-varid'>k3</span> <span class='hs-varid'>t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span>
+<a name="line-174"></a>    
+<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
+<a name="line-176"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
+<a name="line-177"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>
+<a name="line-178"></a>
+<a name="line-179"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
+<a name="line-180"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>f</span> <span class='hs-conid'>H0</span>
+<a name="line-181"></a>
+<a name="line-182"></a><a name="runUTF8"></a><span class='hs-definition'>runUTF8</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-183"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span>
+<a name="line-184"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>flushH</span> <span class='hs-varid'>h</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Lexical/Words.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, FlexibleContexts, GeneralizedNewtypeDeriving, ParallelListComp, TypeFamilies #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>Words</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Words</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runWords</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Lines</span>
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runLines</span>
+<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unspaced</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnspaced</span><span class='hs-layout'>)</span>
+<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unlined</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnlined</span><span class='hs-layout'>)</span>
+<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>wordsFrom</span>
+<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>linesFrom</span>
+<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSpace</span><span class='hs-layout'>)</span>
+<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybeToList</span><span class='hs-layout'>)</span>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
+<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
+<a name="line-19"></a>
+<a name="line-20"></a><a name="Words"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>
+<a name="line-24"></a><a name="runWords"></a><span class='hs-definition'>runWords</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
+<a name="line-25"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>m</span>
+<a name="line-26"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>r</span>
+<a name="line-27"></a>
+<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-29"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>mempty</span>
+<a name="line-30"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
+<a name="line-32"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
+<a name="line-33"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r'</span>
+<a name="line-34"></a>
+<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
+<a name="line-37"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Words</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
+<a name="line-41"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>m</span> <span class='hs-varid'>ms</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span>
+<a name="line-42"></a>
+<a name="line-43"></a><span class='hs-comment'>-- abuse the same machinery to handle lines as well</span>
+<a name="line-44"></a>
+<a name="line-45"></a><a name="Lines"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>)</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
+<a name="line-49"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-50"></a>
+<a name="line-51"></a><a name="runLines"></a><span class='hs-definition'>runLines</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
+<a name="line-52"></a><span class='hs-definition'>runLines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runWords</span> <span class='hs-varid'>x</span>
+<a name="line-53"></a>
+<a name="line-54"></a><a name="Unspaced"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnspaced</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
+<a name="line-55"></a>
+<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-57"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-58"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-59"></a>
+<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-61"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
+<a name="line-62"></a>
+<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
+<a name="line-64"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-65"></a>
+<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
+<a name="line-67"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span>
+<a name="line-68"></a>
+<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
+<a name="line-70"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnspaced</span>
+<a name="line-71"></a>
+<a name="line-72"></a><a name="Unlined"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnlined</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
+<a name="line-73"></a>
+<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-75"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
+<a name="line-76"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
+<a name="line-77"></a>
+<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-79"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
+<a name="line-80"></a>
+<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
+<a name="line-82"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-83"></a>
+<a name="line-84"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
+<a name="line-85"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span>
+<a name="line-86"></a>
+<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
+<a name="line-88"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnlined</span>
+<a name="line-89"></a>
+<a name="line-90"></a><a name="wordsFrom"></a><span class='hs-comment'>-- accumulator, inside-word, and until-next-word monoids</span>
+<a name="line-91"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
+<a name="line-92"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-93"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runWords</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-94"></a>
+<a name="line-95"></a><a name="linesFrom"></a><span class='hs-comment'>-- accumulator, inside-line, and until-next-line monoids</span>
+<a name="line-96"></a><span class='hs-definition'>linesFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
+<a name="line-97"></a><span class='hs-definition'>linesFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-98"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runLines</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Map.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Map.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Map.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span><span class='hs-layout'>)</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span>
+<a name="line-11"></a>
+<a name="line-12"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
+<a name="line-16"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>
+<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
+<a name="line-20"></a>
+<a name="line-21"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
+<a name="line-22"></a>
+<a name="line-23"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
+<a name="line-24"></a>
+<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-26"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
+<a name="line-27"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-30"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Monad.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> 
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Action</span><span class='hs-layout'>(</span><span class='hs-conid'>Action</span><span class='hs-layout'>,</span><span class='hs-varid'>getAction</span><span class='hs-layout'>)</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonadSum</span><span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonadSum</span><span class='hs-layout'>)</span>
+<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mplus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>)</span>
+<a name="line-11"></a>
+<a name="line-12"></a><a name="Action"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-16"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>
+<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-20"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>
+<a name="line-23"></a><span class='hs-comment'>{-# RULES "unitAction" unit = Action #-}</span>
+<a name="line-24"></a><span class='hs-comment'>{-# RULES "snocAction" snoc = snocAction #-}</span> 
+<a name="line-25"></a><a name="snocAction"></a><span class='hs-definition'>snocAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span>
+<a name="line-26"></a><span class='hs-definition'>snocAction</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Action</span>
+<a name="line-27"></a>
+<a name="line-28"></a><a name="MonadSum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonadSum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-29"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
+<a name="line-30"></a>
+<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-32"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>mzero</span>
+<a name="line-33"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-34"></a>
+<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span>
+<a name="line-37"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-38"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-39"></a>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Ord.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
+<a name="line-2"></a><span class='hs-comment'>---- |</span>
+<a name="line-3"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
+<a name="line-4"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
+<a name="line-5"></a><span class='hs-comment'>---- License     :  BSD-style</span>
+<a name="line-6"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
+<a name="line-7"></a><span class='hs-comment'>---- Stability   :  provisional</span>
+<a name="line-8"></a><span class='hs-comment'>---- Portability :  portable</span>
+<a name="line-9"></a><span class='hs-comment'>----</span>
+<a name="line-10"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
+<a name="line-11"></a><span class='hs-comment'>----</span>
+<a name="line-12"></a><span class='hs-comment'>-------------------------------------------------------------------------------</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
+<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-16"></a>    <span class='hs-comment'>-- * Max</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>    <span class='hs-comment'>-- * Min</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
+<a name="line-20"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-25"></a>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>
+<a name="line-28"></a>
+<a name="line-29"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
+<a name="line-30"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
+<a name="line-34"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-35"></a>
+<a name="line-36"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
+<a name="line-37"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
+<a name="line-41"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+<a name="line-42"></a>
+<a name="line-43"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
+<a name="line-44"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-47"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-48"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-49"></a>
+<a name="line-50"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
+<a name="line-51"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-52"></a>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
+<a name="line-55"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
+<a name="line-56"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
+<a name="line-57"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
+<a name="line-58"></a>
+<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-60"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-61"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Reducer/Char.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fromChar</span>
+<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-8"></a>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
+<a name="line-11"></a>
+<a name="line-12"></a><a name="CharReducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-13"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-14"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span>
+<a name="line-15"></a>
+<a name="line-16"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-17"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>mempty</span>
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>
+<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-23"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>
+<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-26"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>
+<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Char</span><span class='hs-keyglyph'>]</span>
+<a name="line-29"></a>
+<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-conid'>()</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Reducer/With.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>With</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WithReducer</span><span class='hs-layout'>(</span><span class='hs-conid'>WithReducer</span><span class='hs-layout'>,</span><span class='hs-varid'>runWithReducer</span><span class='hs-layout'>)</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>withoutReducer</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
+<a name="line-10"></a>
+<a name="line-11"></a><a name="WithReducer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WithReducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WithReducer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWithReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>}</span> 
+<a name="line-12"></a>
+<a name="line-13"></a><a name="withoutReducer"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span>
+<a name="line-14"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snd</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
+<a name="line-15"></a>
+<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span> 
+<a name="line-18"></a>
+<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-20"></a>    <span class='hs-varid'>measure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html 1
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
+<html>
+<head>
+<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
+<title>Data/Monoid/Reducer.hs</title>
+<link type='text/css' rel='stylesheet' href='hscolour.css' />
+</head>
+<body>
+<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
+<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
+<a name="line-9"></a>
+<a name="line-10"></a><a name="Reducer"></a><span class='hs-comment'>-- minimal definition unit or snoc</span>
+<a name="line-11"></a><a name="Reducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
+<a name="line-12"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-13"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
+<a name="line-14"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
+<a name="line-15"></a>
+<a name="line-16"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>mempty</span> 
+<a name="line-17"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
+<a name="line-18"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
+<a name="line-19"></a>
+<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-23"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>
+<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-26"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-28"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span>
+<a name="line-29"></a>
+<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-31"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>p</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
+<a name="line-33"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
+<a name="line-34"></a>
+<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-37"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span>
+<a name="line-38"></a>    <span class='hs-varid'>xs</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
+<a name="line-39"></a>
+<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
+<a name="line-41"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>id</span>
+<a name="line-42"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
+<a name="line-43"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
+<a name="line-44"></a>
+<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span>
+<a name="line-46"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
+<a name="line-47"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`snoc`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
+<a name="line-48"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`cons`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
+</pre></body>
+</html>
addfile ./dist/doc/html/monoids/src/hscolour.css
hunk ./dist/doc/html/monoids/src/hscolour.css 1
+.hs-keyglyph, .hs-layout {color: red;}
+.hs-keyword {color: blue;}
+.hs-comment, .hs-comment a {color: green;}
+.hs-str, .hs-chr {color: teal;}
+.hs-keyword, .hs-conid, .hs-varid, .hs-conop, .hs-varop, .hs-num, .hs-cpp, .hs-sel, .hs-definition {}
}
