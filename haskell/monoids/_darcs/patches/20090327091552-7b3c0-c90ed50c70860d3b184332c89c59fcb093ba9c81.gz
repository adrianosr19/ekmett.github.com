[killed documentation
ekmett@gmail.com**20090327091552] {
hunk ./dist/doc/html/monoids/Data-Group-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Group.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Group-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Group.Sugar</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Group.html"
->Data.Group</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A-"
-></A
-><B
->(-)</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> g =&gt; g -&gt; g -&gt; g</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group-Sugar.html#-"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Anegate"
-></A
-><B
->negate</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> g =&gt; g -&gt; g</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group-Sugar.html#negate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Group-Sugar.html
hunk ./dist/doc/html/monoids/Data-Group.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Group</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Group.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Group</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a =&gt; <A NAME="t%3AGroup"
-></A
-><B
->Group</B
-> a  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#Group"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Agnegate"
-></A
-><B
->gnegate</B
-> :: a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#gnegate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aminus"
-></A
-><B
->minus</B
-> :: a -&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#minus"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Group')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Group" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
->Dual</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ASum"
->Sum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AFractional"
->Fractional</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AProduct"
->Product</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
->Identity</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Agnegate"
-></A
-><B
->gnegate</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#gnegate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aminus"
-></A
-><B
->minus</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#minus"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Group.html
hunk ./dist/doc/html/monoids/Data-Monoid-Additive-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Additive.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Additive-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Additive.Sugar</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A%2B"
-></A
-><B
->(+)</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Additive-Sugar.html#%2B"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Additive-Sugar.html
hunk ./dist/doc/html/monoids/Data-Monoid-Additive.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Additive</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Additive.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Additive</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aplus"
-></A
-><B
->plus</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Additive.html#plus"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Azero"
-></A
-><B
->zero</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Additive.html#zero"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Additive.html
hunk ./dist/doc/html/monoids/Data-Monoid-Applicative.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Applicative</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Applicative.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Applicative</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ATraversal"
-></A
-><B
->Traversal</B
-> f </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#Traversal"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ATraversal"
-></A
-><B
->Traversal</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetTraversal"
-></A
-><B
->getTraversal</B
-> :: f ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Traversal')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Traversal" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AAlternate"
-></A
-><B
->Alternate</B
-> f a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#Alternate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AAlternate"
-></A
-><B
->Alternate</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetAlternate"
-></A
-><B
->getAlternate</B
-> :: f a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Alternate')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Alternate" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed f =&gt; Pointed (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ATraversalWith"
-></A
-><B
->TraversalWith</B
-> f n </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#TraversalWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ATraversalWith"
-></A
-><B
->TraversalWith</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetTraversalWith"
-></A
-><B
->getTraversalWith</B
-> :: f n</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:TraversalWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:TraversalWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed f =&gt; Pointed (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f n) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f n)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/Data-Monoid-Categorical.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Categorical</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Categorical.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Categorical</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AEndo"
->Endo</A
-> k a = <A HREF="#v%3AEndo"
->Endo</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetEndo"
->getEndo</A
-> :: k a a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AMon"
->Mon</A
-> m n o <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AMon"
->Mon</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m a a</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3ArunMon"
->runMon</A
-> ::  <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AEndo"
-></A
-><B
->Endo</B
-> k a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Categorical.html#Endo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> of endomorphisms over some object in an arbitrary <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AEndo"
-></A
-><B
->Endo</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetEndo"
-></A
-><B
->getEndo</B
-> :: k a a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Endo')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Endo" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-> k =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Categorical.html#t%3AEndo"
->Endo</A
-> k a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AMon"
-></A
-><B
->Mon</B
-> m n o <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Categorical.html#Mon"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> is just a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-></TT
-> with one object. 
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMon"
-></A
-><B
->Mon</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m a a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Mon')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Mon" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-> (<A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunMon"
-></A
-><B
->runMon</B
-> ::  <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Categorical.html#runMon"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Categorical.html
hunk ./dist/doc/html/monoids/Data-Monoid-FromString.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.FromString</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-FromString.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.FromString</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AFromString"
-></A
-><B
->FromString</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-FromString.html#FromString"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AFromString"
-></A
-><B
->FromString</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetFromString"
-></A
-><B
->getFromString</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:FromString')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:FromString" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-FromString.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator-Combinators.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator.Combinators</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator.Combinators</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atraverse_"
-></A
-><B
->traverse_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; c -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#traverse_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afor_"
-></A
-><B
->for_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#for_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapM_"
-></A
-><B
->mapM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; c -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#mapM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AforM_"
-></A
-><B
->forM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#forM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldMap%27"
-></A
-><B
->foldMap'</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#foldMap%27"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AconcatMap"
-></A
-><B
->concatMap</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; [b]) -&gt; c -&gt; [b]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#concatMap"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aand"
-></A
-><B
->and</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#and"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aor"
-></A
-><B
->or</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#or"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aany"
-></A
-><B
->any</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#any"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aall"
-></A
-><B
->all</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#all"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asum"
-></A
-><B
->sum</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#sum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aproduct"
-></A
-><B
->product</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#product"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aelem"
-></A
-><B
->elem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AnotElem"
-></A
-><B
->notElem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#notElem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afilter"
-></A
-><B
->filter</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#filter"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afind"
-></A
-><B
->find</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Combinators.html#find"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Generator-Combinators.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AGenerator"
-></A
-><B
->Generator</B
-> c  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Generator"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Associated Types</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3AElem"
-></A
-><B
->Elem</B
-> c :: *</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapReduce"
-></A
-><B
->mapReduce</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapTo"
-></A
-><B
->mapTo</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapTo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapFrom"
-></A
-><B
->mapFrom</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Generator')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Generator" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> Text</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
->Set</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Measured v e =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (FingerTree v e)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapReduce"
-></A
-><B
->mapReduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapTo"
-></A
-><B
->mapTo</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapTo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapFrom"
-></A
-><B
->mapFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areduce"
-></A
-><B
->reduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#reduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AKeys"
-></A
-><B
->Keys</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Keys"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AKeys"
-></A
-><B
->Keys</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetKeys"
-></A
-><B
->getKeys</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Keys')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Keys" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AValues"
-></A
-><B
->Values</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Values"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AValues"
-></A
-><B
->Values</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetValues"
-></A
-><B
->getValues</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Values')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Values" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AChar8"
-></A
-><B
->Char8</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Char8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AChar8"
-></A
-><B
->Char8</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetChar8"
-></A
-><B
->getChar8</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Char8')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Char8" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/Data-Monoid-IntMap.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.IntMap</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-IntMap.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.IntMap</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnionWith"
-></A
-><B
->UnionWith</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-IntMap.html#UnionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UnionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-IntMap.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.SourcePosition</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.SourcePosition</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ASourcePosition"
-></A
-><B
->SourcePosition</B
-> file </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:SourcePosition')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:SourcePosition" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorZero <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorPlus <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceLine"
-></A
-><B
->SourceLine</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceColumn"
-></A
-><B
->SourceColumn</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceLine"
-></A
-><B
->sourceLine</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->SourceLine</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceColumn"
-></A
-><B
->sourceColumn</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->SourceColumn</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AstartOfFile"
-></A
-><B
->startOfFile</B
-> ::  f -&gt; <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#startOfFile"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AshowSourcePosition"
-></A
-><B
->showSourcePosition</B
-> :: <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#showSourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.UTF8.Decoder</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.UTF8.Decoder</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUTF8"
-></A
-><B
->UTF8</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#UTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UTF8')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UTF8" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunUTF8"
-></A
-><B
->runUTF8</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#runUTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.Words</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.Words</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AWords"
-></A
-><B
->Words</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Words"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Words')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Words" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunWords"
-></A
-><B
->runWords</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runWords"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALines"
-></A
-><B
->Lines</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Lines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Lines')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Lines" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunLines"
-></A
-><B
->runLines</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runLines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnspaced"
-></A
-><B
->Unspaced</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unspaced"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unspaced')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unspaced" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnlined"
-></A
-><B
->Unlined</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unlined"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unlined')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unlined" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwordsFrom"
-></A
-><B
->wordsFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#wordsFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AlinesFrom"
-></A
-><B
->linesFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#linesFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/Data-Monoid-Map.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Map</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Map.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Map</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnionWith"
-></A
-><B
->UnionWith</B
-> k m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Map.html#UnionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UnionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Map.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-Cont.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.Cont</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-Cont.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.Cont</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-Cont.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-Either.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.Either</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-Either.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.Either</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-Either.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-IO.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.IO</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-IO.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.IO</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-IO.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-Identity.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.Identity</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-Identity.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.Identity</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-Identity.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-RWS-Lazy.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.RWS.Lazy</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-RWS-Lazy.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.RWS.Lazy</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-RWS-Lazy.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-RWS-Strict.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.RWS.Strict</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-RWS-Strict.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.RWS.Strict</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-RWS-Strict.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-Reader.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.Reader</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-Reader.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.Reader</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-Reader.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-ST-Lazy.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.ST.Lazy</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-ST-Lazy.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.ST.Lazy</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-ST-Lazy.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-ST-Strict.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.ST.Strict</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-ST-Strict.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.ST.Strict</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-ST-Strict.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-STM.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.STM</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-STM.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.STM</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-STM.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-State-Lazy.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.State.Lazy</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-State-Lazy.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.State.Lazy</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-State-Lazy.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-State-Strict.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.State.Strict</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-State-Strict.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.State.Strict</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-State-Strict.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-Writer-Lazy.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.Writer.Lazy</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-Writer-Lazy.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.Writer.Lazy</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-Writer-Lazy.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad-Writer-Strict.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad.Writer.Strict</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad-Writer-Strict.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad.Writer.Strict</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad-Writer-Strict.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AAction"
-></A
-><B
->Action</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#Action"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AAction"
-></A
-><B
->Action</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetAction"
-></A
-><B
->getAction</B
-> :: m ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Action')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Action" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMonadSum"
-></A
-><B
->MonadSum</B
-> m a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#MonadSum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMonadSum"
-></A
-><B
->MonadSum</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMonadSum"
-></A
-><B
->getMonadSum</B
-> :: m a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonadSum')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MonadSum" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AActionWith"
-></A
-><B
->ActionWith</B
-> m n </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#ActionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AActionWith"
-></A
-><B
->ActionWith</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetActionWith"
-></A
-><B
->getActionWith</B
-> :: m n</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:ActionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:ActionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> m n)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Multiplicative.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Multiplicative-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Multiplicative.Sugar</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A%2A"
-></A
-><B
->(*)</B
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> r =&gt; r -&gt; r -&gt; r</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative-Sugar.html#%2A"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html
hunk ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Transformer.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Multiplicative.Transformer</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Multiplicative-Transformer.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Multiplicative.Transformer</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALog"
-></A
-><B
->Log</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative-Transformer.html#Log"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ALog"
-></A
-><B
->Log</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetLog"
-></A
-><B
->getLog</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Log')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Log" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Multiplicative-Transformer.html#t%3ALog"
->Log</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AExp"
-></A
-><B
->Exp</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative-Transformer.html#Exp"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AExp"
-></A
-><B
->Exp</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetExp"
-></A
-><B
->getExp</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Exp')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Exp" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Monoid-Multiplicative-Transformer.html#t%3AExp"
->Exp</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Transformer.html
hunk ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Transformers.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Multiplicative.Transformers</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Multiplicative-Transformers.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Multiplicative.Transformers</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALog"
-></A
-><B
->Log</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative-Transformers.html#Log"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ALog"
-></A
-><B
->Log</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetLog"
-></A
-><B
->getLog</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Log')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Log" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Multiplicative-Transformers.html#t%3ALog"
->Log</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AExp"
-></A
-><B
->Exp</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative-Transformers.html#Exp"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AExp"
-></A
-><B
->Exp</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetExp"
-></A
-><B
->getExp</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Exp')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Exp" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Monoid-Multiplicative-Transformers.html#t%3AExp"
->Exp</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Transformers.html
hunk ./dist/doc/html/monoids/Data-Monoid-Multiplicative.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Multiplicative</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Multiplicative.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Multiplicative</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AMultiplicativeMonoid"
-></A
-><B
->MultiplicativeMonoid</B
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#MultiplicativeMonoid"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aone"
-></A
-><B
->one</B
-> :: m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#one"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atimes"
-></A
-><B
->times</B
-> :: m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#times"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MultiplicativeMonoid')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MultiplicativeMonoid" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> ([] m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
->Identity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Monoid-Multiplicative-Transformer.html#t%3AExp"
->Exp</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Measured v m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (FingerTree v m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aone"
-></A
-><B
->one</B
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#one"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atimes"
-></A
-><B
->times</B
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#times"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Multiplicative.html
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Ord</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Ord.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Ord</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Max
-</A
-></DT
-><DT
-><A HREF="#2"
->Min
-</A
-></DT
-><DT
-><A HREF="#3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></DT
-><DT
-><A HREF="#4"
->MinPriority: Min semigroup w/ added top
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMax"
->Max</A
-> a = <A HREF="#v%3AMax"
->Max</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMax"
->getMax</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMin"
->Min</A
-> a = <A HREF="#v%3AMin"
->Min</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMin"
->getMin</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMaxPriority"
->MaxPriority</A
-> a = <A HREF="#v%3AMaxPriority"
->MaxPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMaxPriority"
->getMaxPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMinPriority"
->MinPriority</A
-> a = <A HREF="#v%3AMinPriority"
->MinPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMinPriority"
->getMinPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Max
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMax"
-></A
-><B
->Max</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Max"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
->minBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMax"
-></A
-><B
->Max</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMax"
-></A
-><B
->getMax</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Max" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Min
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMin"
-></A
-><B
->Min</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Min"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> given by <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AmaxBound"
->maxBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMin"
-></A
-><B
->Min</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMin"
-></A
-><B
->getMin</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Min')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Min" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MaxPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the bottom element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMaxPriority"
-></A
-><B
->getMaxPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MaxPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MaxPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="4"
->MinPriority: Min semigroup w/ added top
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMinPriority"
-></A
-><B
->MinPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MinPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the top element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMinPriority"
-></A
-><B
->MinPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMinPriority"
-></A
-><B
->getMinPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MinPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MinPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.Char</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.Char</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A NAME="t%3ACharReducer"
-></A
-><B
->CharReducer</B
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#CharReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromChar"
-></A
-><B
->fromChar</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:CharReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:CharReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ([] <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,) m m')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,) m m' m'')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m''') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,,) m m' m'' m''')</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromChar"
-></A
-><B
->fromChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.Sugar</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromInteger"
-></A
-><B
->fromInteger</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer m =&gt; Integer -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Sugar.html#fromInteger"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromString"
-></A
-><B
->fromString</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Sugar.html#fromString"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-Sugar.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.With</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-With.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.With</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AWithReducer"
-></A
-><B
->WithReducer</B
-> c m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#WithReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AWithReducer"
-></A
-><B
->WithReducer</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ArunWithReducer"
-></A
-><B
->runWithReducer</B
-> :: (m, c)</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WithReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:WithReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; Measured m (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwithoutReducer"
-></A
-><B
->withoutReducer</B
-> ::  (c `<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
->` m) -&gt; c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#withoutReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A NAME="t%3AReducer"
-></A
-><B
->Reducer</B
-> c m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#Reducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunit"
-></A
-><B
->unit</B
-> :: c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asnoc"
-></A
-><B
->snoc</B
-> :: m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#snoc"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acons"
-></A
-><B
->cons</B
-> :: c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#cons"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Reducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Reducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
->All</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
->All</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
->Any</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
->Any</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ()</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
->Set</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AProduct"
->Product</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ASum"
->Sum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
->Dual</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Conc.html#t%3ASTM"
->STM</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
->IO</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
->Identity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Measured v a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (FingerTree v a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,) m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriter"
->Writer</A
-> w m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
->Writer</A
-> w m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST.html#t%3AST"
->ST</A
-> s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST-Lazy.html#t%3AST"
->ST</A
-> s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AState"
->State</A
-> s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
->State</A
-> s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReader"
->Reader</A
-> e m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Either.html#t%3AEither"
->Either</A
-> e m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3ACont"
->Cont</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c o) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,) m n o)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
->ReaderT</A
-> e m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (EitherT e m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3AContT"
->ContT</A
-> r m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c o, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c p) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,,) m n o p)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWS"
->RWS</A
-> r w s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWS"
->RWS</A
-> r w s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> n (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Conc.html#t%3ASTM"
->STM</A
-> m) (<A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
->IO</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Conc.html#t%3ASTM"
->STM</A
-> m) (<A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
->IO</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f n) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
->ReaderT</A
-> e m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (EitherT e m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3AContT"
->ContT</A
-> r m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
->Endo</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
->Endo</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST.html#t%3AST"
->ST</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3ARealWorld"
->RealWorld</A
-> m) (<A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
->IO</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST.html#t%3AST"
->ST</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Prim.html#t%3ARealWorld"
->RealWorld</A
-> m) (<A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
->IO</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) k v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) k v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunit"
-></A
-><B
->unit</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asnoc"
-></A
-><B
->snoc</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#snoc"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acons"
-></A
-><B
->cons</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#cons"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldMapReduce"
-></A
-><B
->foldMapReduce</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (a -&gt; e) -&gt; f a -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#foldMapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldReduce"
-></A
-><B
->foldReduce</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; f e -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#foldReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/Data-Monoid-Self.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Self</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Self.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Self</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ASelf"
-></A
-><B
->Self</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Self.html#Self"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ASelf"
-></A
-><B
->Self</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetSelf"
-></A
-><B
->getSelf</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Self')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Self" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3ASeminearring"
->Seminearring</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Self.html
hunk ./dist/doc/html/monoids/Data-Monoid-Unit.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Unit</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Unit.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Unit</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AUnit"
-></A
-><B
->Unit</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Unit.html#Unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AUnit"
-></A
-><B
->Unit</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetUnit"
-></A
-><B
->getUnit</B
-> :: ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unit')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unit" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Unit</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Unit.html
hunk ./dist/doc/html/monoids/Data-Ring-Bool.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Bool</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Bool.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Bool</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Bool.html
hunk ./dist/doc/html/monoids/Data-Ring-FromNum.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.FromNum</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-FromNum.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.FromNum</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AFromNum"
-></A
-><B
->FromNum</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-FromNum.html#FromNum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AFromNum"
-></A
-><B
->FromNum</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetFromNum"
-></A
-><B
->getFromNum</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:FromNum')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:FromNum" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-FromNum.html
hunk ./dist/doc/html/monoids/Data-Ring-Number.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Number</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Number.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Number</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ANumber"
-></A
-><B
->Number</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Number.html#Number"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ANumber"
-></A
-><B
->Number</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetNumber"
-></A
-><B
->getNumber</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Number')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Number" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-Number.html#t%3ANumber"
->Number</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Number.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi-Near.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi.Near</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi-Near.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi.Near</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ASeminearring"
-></A
-><B
->Seminearring</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Near.html#Seminearring"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Seminearring')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Seminearring" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> ([] m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
->Identity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Measured v m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (FingerTree v m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi-Near.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi-Ord.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi.Ord</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi-Ord.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi.Ord</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AOrder"
-></A
-><B
->Order</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Ord.html#Order"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AOrder"
-></A
-><B
->Order</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetOrder"
-></A
-><B
->getOrder</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Order')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Order" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiring"
->Semiring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3APriority"
-></A
-><B
->Priority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Ord.html#Priority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMinBound"
-></A
-><B
->MinBound</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="arg"
-><A NAME="v%3APriority"
-></A
-><B
->Priority</B
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMaxBound"
-></A
-><B
->MaxBound</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Priority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Priority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiring"
->Semiring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi-Ord.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Seminearring</A
-> a =&gt; <A NAME="t%3ASemiring"
-></A
-><B
->Semiring</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi.html#Semiring"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Semiring')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Semiring" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi.html#t%3ASemiring"
->Semiring</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiring"
->Semiring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiring"
->Semiring</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi.html
hunk ./dist/doc/html/monoids/Data-Ring-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Sugar</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative-Sugar.html"
->Data.Monoid.Multiplicative.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Sugar.html
hunk ./dist/doc/html/monoids/Data-Ring.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Group.html"
->Data.Group</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring.html
hunk ./dist/doc/html/monoids/Data-Seminearring-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Seminearring.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Seminearring-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Seminearring.Sugar</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative-Sugar.html"
->Data.Monoid.Multiplicative.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Seminearring.html"
->Data.Seminearring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Seminearring-Sugar.html
hunk ./dist/doc/html/monoids/Data-Seminearring.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Seminearring</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Seminearring.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Seminearring</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->MultiplicativeMonoid</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ASeminearring"
-></A
-><B
->Seminearring</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Seminearring.html#Seminearring"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Seminearring')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Seminearring" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> ([] m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> m =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
->Identity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> m =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Measured v m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Seminearring.html#t%3ASeminearring"
->Seminearring</A
-> (FingerTree v m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Seminearring.html
hunk ./dist/doc/html/monoids/doc-index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->monoids-0.1.2: Lots of Monoids (Index)</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD COLSPAN="2" STYLE="padding-top:5px;"
-><FORM onsubmit="full_search(); return false;" ACTION=""
->Search: <INPUT ID="searchbox" onkeyup="quick_search()"
-> <INPUT VALUE="Search" TYPE="submit"
-> <SPAN ID="searchmsg"
-> </SPAN
-></FORM
-></TD
-></TR
-><TR
-><TD
-><TABLE ID="indexlist" CELLPADDING="0" CELLSPACING="5"
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->*</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Sugar.html#v%3A%2A"
->Data.Monoid.Multiplicative.Sugar</A
->, Data.Ring.Sugar</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->*&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->+</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Additive-Sugar.html#v%3A%2B"
->Data.Monoid.Additive.Sugar</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Sugar, Data.Group.Sugar</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->-</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group-Sugar.html#v%3A-"
->Data.Group.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&lt;=&lt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&lt;|&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->=&lt;&lt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&gt;=&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont, Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&gt;&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&gt;&gt;=</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->AbsoluteSeek</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Action</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->ActionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AActionWith"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->All</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->all</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Aall"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Alternate</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AAlternate"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Alternative</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->always</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->alwaysSucceeds</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->and</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Aand"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Any</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->any</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Aany"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->ap</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->appendFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->AppendMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->appEndo</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Applicative</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->ask</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->asks</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->atomically</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->BlockBuffering</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->BufferMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->callCC</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->catchSTM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->censor</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Char8</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->CharReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->check</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->concatMap</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3AconcatMap"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->cons</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Acons"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->ContT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Dual</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->dupTChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Either</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Either</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->EitherT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Either</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Either</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AElem"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Aelem"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->empty</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Endo</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#t%3AEndo"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AEndo"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->evalRWS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->evalRWST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->evalState</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->evalStateT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->execRWS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->execRWST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->execState</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->execStateT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->execWriter</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->execWriterT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Exp</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html#t%3AExp"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html#v%3AExp"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fail</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->FilePath</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->filter</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Afilter"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->filterM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->find</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Afind"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->First</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fix</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fixIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->fixST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fmap</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldMap'</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3AfoldMap%27"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldMapReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3AfoldMapReduce"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldM_</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3AfoldReduce"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->forever</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->forM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->forM_</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3AforM_"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->for_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Afor_"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fromChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AfromChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fromInteger</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Sugar.html#v%3AfromInteger"
->Data.Monoid.Reducer.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->Data.Ring.FromNum</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-FromNum.html#v%3AFromNum"
->Data.Ring.FromNum</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->FromString</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-FromString.html#t%3AFromString"
->Data.Monoid.FromString</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-FromString.html#v%3AFromString"
->Data.Monoid.FromString</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fromString</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Sugar.html#v%3AfromString"
->Data.Monoid.Reducer.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Functor</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Generator</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->get</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAction</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getActionWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetActionWith"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAll</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAlternate</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetAlternate"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAny</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getChar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getChar8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AgetChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getContents</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getDual</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getEndo</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AgetEndo"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getExp</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html#v%3AgetExp"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFirst</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFromNum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-FromNum.html#v%3AgetFromNum"
->Data.Ring.FromNum</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFromString</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-FromString.html#v%3AgetFromString"
->Data.Monoid.FromString</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getKeys</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AgetKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLast</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLine</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLog</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html#v%3AgetLog"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMax</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMaxPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMin</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMinPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMonadSum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetMonadSum"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getOrder</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AgetOrder"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getProduct</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->gets</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getSum</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getTraversal</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getTraversalWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversalWith"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->getUnionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#v%3AgetUnionWith"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#v%3AgetUnionWith"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getUnit</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Unit.html#v%3AgetUnit"
->Data.Monoid.Unit</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getValues</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AgetValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->gnegate</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#v%3Agnegate"
->Data.Group</A
->, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Group</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#t%3AGroup"
->Data.Group</A
->, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->guard</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Handle</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->HandlePosn</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hClose</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hFileSize</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hFlush</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetBuf</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetBuffering</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetBufNonBlocking</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetChar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetContents</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetEcho</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetLine</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hGetPosn</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsClosed</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsEOF</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsOpen</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsReadable</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsSeekable</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsTerminalDevice</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hIsWritable</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hLookAhead</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hPrint</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hPutBuf</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hPutBufNonBlocking</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hPutChar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hPutStr</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hPutStrLn</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hReady</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hSeek</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hSetBinaryMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hSetBuffering</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hSetEcho</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hSetFileSize</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hSetPosn</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hShow</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hTell</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->hWaitForInput</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->interact</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->invalidChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AinvalidChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->IO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->IOMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->isEmptyTChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->isEmptyTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->isEOF</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->IsString</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer.Sugar</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->join</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Keys</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Last</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->lazyToStrictST</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Left</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Either</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->lift</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftA2</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftM2</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont, Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftM3</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftM4</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftM5</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->LineBuffering</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Lines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->linesFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AlinesFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->listen</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->listens</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->local</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Log</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html#t%3ALog"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html#v%3ALog"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapAndUnzipM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapCont</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapContT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapFrom"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapM_</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3AmapM_"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mappend</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Ord, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapReader</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapReaderT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapRWS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapRWST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapState</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapStateT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapTo</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapTo"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapWriter</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->mapWriterT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Max</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MaxBound</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AMaxBound"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MaxPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mconcat</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mempty</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Ord, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mfix</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Min</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MinBound</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AMinBound"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MinPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->minus</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#v%3Aminus"
->Data.Group</A
->, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->modify</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Mon</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AMon"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Monad</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadCont</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadFix</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadPlus</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont, Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadReader</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadRWS</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadState</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MonadSum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AMonadSum"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadTrans</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadWriter</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Monoid</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Ord, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mplus</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont, Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->msum</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MultiplicativeMonoid</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicativeMonoid"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mzero</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont, Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->negate</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group-Sugar.html#v%3Anegate"
->Data.Group.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newEmptyTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newEmptyTMVarIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newTChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newTChanIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newTMVarIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newTVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->newTVarIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->NoBuffering</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->notElem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3AnotElem"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->one</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3Aone"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->openBinaryFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->openBinaryTempFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->openFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->openTempFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->or</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Aor"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Order</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AOrder"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->orElse</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->pass</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->plus</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Additive.html#v%3Aplus"
->Data.Monoid.Additive</A
->, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->print</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Priority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3APriority"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Product</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->product</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Aproduct"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->pure</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->put</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->putChar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->putStr</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->putStrLn</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->putTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->ReaderT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->readFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->readIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->readLn</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->ReadMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->readTChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->readTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->readTVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->ReadWriteMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->RealWorld</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Reducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Ord, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->registerDelay</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->RelativeSeek</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->replicateM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->replicateM_</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->retry</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->return</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Right</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Either</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runCont</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runContT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runEitherT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Either</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runIdentity</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Identity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runLines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunLines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runMon</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3ArunMon"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runReader</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runReaderT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runRWS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runRWST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runState</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runStateT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#v%3ArunUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWithReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3ArunWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWords</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runWriter</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->runWriterT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->RWS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->RWST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SeekFromEnd</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SeekMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Seminearring</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Near.html#t%3ASeminearring"
->Data.Ring.Semi.Near</A
->, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Semiring</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi.html#t%3ASemiring"
->Data.Ring.Semi</A
->, Data.Ring.Semi.Ord, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sequence</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sequence_</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->showSourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AshowSourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->snoc</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->ST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->startOfFile</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AstartOfFile"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->State</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->StateT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->stderr</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->stdin</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->stdout</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->STM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->strictToLazyST</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->stToIO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Sum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Asum"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->swapTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->takeTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->TArray</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->TChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->tell</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->times</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3Atimes"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->TMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Traversal</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->TraversalWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversalWith"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->traverse_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Combinators.html#v%3Atraverse_"
->Data.Monoid.Generator.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->tryPutTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->tryTakeTMVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->TVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unGetTChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->UnionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Unit</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Unit.html#t%3AUnit"
->Data.Monoid.Unit</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Unit.html#v%3AUnit"
->Data.Monoid.Unit</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unit</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Unit, Data.Monoid.Ord, Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Either, Data.Monoid.Monad.Cont, Data.Monoid.Monad, Data.Monoid.Map, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Lexical.Words, Data.Monoid.Reducer.Sugar, Data.Monoid.Applicative, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unless</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->unsafeInterleaveST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->unsafeIOToST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unsafeSTToIO</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.ST.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->UTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Values</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->when</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withBinaryFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withCont</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withContT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withoutReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AwithoutReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withReader</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withReaderT</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Reader</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->WithReducer</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->withRWS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->withRWST</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.RWS.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->withState</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->withStateT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.State.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Words</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->wordsFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AwordsFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->writeFile</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->WriteMode</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.IO</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Writer</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->WriterT</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->3 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->4 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Lazy</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->writeTChan</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->writeTVar</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.STM</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->zero</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Additive.html#v%3Azero"
->Data.Monoid.Additive</A
->, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Monoid.Multiplicative.Transformer, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Sugar, Data.Ring, Data.Ring.FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->zipWithM</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->zipWithM_</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad.Writer.Strict, Data.Monoid.Monad.Writer.Lazy, Data.Monoid.Monad.ST.Strict, Data.Monoid.Monad.STM, Data.Monoid.Monad.ST.Lazy, Data.Monoid.Monad.State.Strict, Data.Monoid.Monad.State.Lazy, Data.Monoid.Monad.RWS.Strict, Data.Monoid.Monad.RWS.Lazy, Data.Monoid.Monad.Reader, Data.Monoid.Monad.IO, Data.Monoid.Monad.Identity, Data.Monoid.Monad.Cont</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/doc-index.html
hunk ./dist/doc/html/monoids/haddock-util.js 1
-// Haddock JavaScript utilities
-function toggle(button,id)
-{
-   var n = document.getElementById(id).style;
-   if (n.display == "none")
-   {
-    button.src = "minus.gif";
-    n.display = "block";
-   }
-   else
-   {
-    button.src = "plus.gif";
-    n.display = "none";
-   }
-}
-
-
-var max_results = 75; // 50 is not enough to search for map in the base libraries
-var shown_range = null;
-var last_search = null;
-
-function quick_search()
-{
-    perform_search(false);
-}
-
-function full_search()
-{
-    perform_search(true);
-}
-
-
-function perform_search(full)
-{
-    var text = document.getElementById("searchbox").value.toLowerCase();
-    if (text == last_search && !full) return;
-    last_search = text;
-    
-    var table = document.getElementById("indexlist");
-    var status = document.getElementById("searchmsg");
-    var children = table.firstChild.childNodes;
-    
-    // first figure out the first node with the prefix
-    var first = bisect(-1);
-    var last = (first == -1 ? -1 : bisect(1));
-
-    if (first == -1)
-    {
-        table.className = "";
-        status.innerHTML = "No results found, displaying all";
-    }
-    else if (first == 0 && last == children.length - 1)
-    {
-        table.className = "";
-        status.innerHTML = "";
-    }
-    else if (last - first >= max_results && !full)
-    {
-        table.className = "";
-        status.innerHTML = "More than " + max_results + ", press Search to display";
-    }
-    else
-    {
-        // decide what you need to clear/show
-        if (shown_range)
-            setclass(shown_range[0], shown_range[1], "indexrow");
-        setclass(first, last, "indexshow");
-        shown_range = [first, last];
-        table.className = "indexsearch";
-        status.innerHTML = "";
-    }
-
-    
-    function setclass(first, last, status)
-    {
-        for (var i = first; i <= last; i++)
-        {
-            children[i].className = status;
-        }
-    }
-    
-    
-    // do a binary search, treating 0 as ...
-    // return either -1 (no 0's found) or location of most far match
-    function bisect(dir)
-    {
-        var first = 0, finish = children.length - 1;
-        var mid, success = false;
-
-        while (finish - first > 3)
-        {
-            mid = Math.floor((finish + first) / 2);
-
-            var i = checkitem(mid);
-            if (i == 0) i = dir;
-            if (i == -1)
-                finish = mid;
-            else
-                first = mid;
-        }
-        var a = (dir == 1 ? first : finish);
-        var b = (dir == 1 ? finish : first);
-        for (var i = b; i != a - dir; i -= dir)
-        {
-            if (checkitem(i) == 0) return i;
-        }
-        return -1;
-    }    
-    
-    
-    // from an index, decide what the result is
-    // 0 = match, -1 is lower, 1 is higher
-    function checkitem(i)
-    {
-        var s = getitem(i).toLowerCase().substr(0, text.length);
-        if (s == text) return 0;
-        else return (s > text ? -1 : 1);
-    }
-    
-    
-    // from an index, get its string
-    // this abstracts over alternates
-    function getitem(i)
-    {
-        for ( ; i >= 0; i--)
-        {
-            var s = children[i].firstChild.firstChild.data;
-            if (s.indexOf(' ') == -1)
-                return s;
-        }
-        return ""; // should never be reached
-    }
-}
rmfile ./dist/doc/html/monoids/haddock-util.js
hunk ./dist/doc/html/monoids/haddock.css 1
-/* -------- Global things --------- */
-
-BODY { 
-  background-color: #ffffff;
-  color: #000000;
-  font-family: sans-serif;
-  } 
-
-A:link    { color: #0000e0; text-decoration: none }
-A:visited { color: #0000a0; text-decoration: none }
-A:hover   { background-color: #e0e0ff; text-decoration: none }
-
-TABLE.vanilla {
-  width: 100%;
-  border-width: 0px;
-  /* I can't seem to specify cellspacing or cellpadding properly using CSS... */
-}
-
-TABLE.vanilla2 {
-  border-width: 0px;
-}
-
-/* <TT> font is a little too small in MSIE */
-TT  { font-size: 100%; }
-PRE { font-size: 100%; }
-
-LI P { margin: 0pt } 
-
-TD {
-  border-width: 0px;
-}
-
-TABLE.narrow {
-  border-width: 0px;
-}
-
-TD.s8  {  height: 8px;  }
-TD.s15 {  height: 15px; }
-
-SPAN.keyword { text-decoration: underline; }
-
-/* Resize the buttom image to match the text size */
-IMG.coll { width : 0.75em; height: 0.75em; margin-bottom: 0; margin-right: 0.5em }
-
-/* --------- Contents page ---------- */
-
-DIV.node {
-  padding-left: 3em;
-}
-
-DIV.cnode {
-  padding-left: 1.75em;
-}
-
-SPAN.pkg {
-  position: absolute;
-  left: 50em;
-}
-
-/* --------- Documentation elements ---------- */
-
-TD.children {
-  padding-left: 25px;
-  }
-
-TD.synopsis {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace
- }
-
-TD.decl { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  }
-
-TD.topdecl {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace;
-  vertical-align: top;
-}
-
-TABLE.declbar {
-  border-spacing: 0px;
- }
-
-TD.declname {
-  width: 100%;
- }
-
-TD.declbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #000099;
-  border-left-style: solid;
-  white-space: nowrap;
-  font-size: small;
- }
-
-/* 
-  arg is just like decl, except that wrapping is not allowed.  It is
-  used for function and constructor arguments which have a text box
-  to the right, where if wrapping is allowed the text box squashes up
-  the declaration by wrapping it.
-*/
-TD.arg { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  white-space: nowrap;
-  }
-
-TD.recfield { padding-left: 20px }
-
-TD.doc  { 
-  padding-top: 2px;
-  padding-left: 10px;
-  }
-
-TD.ndoc  { 
-  padding: 2px;
-  }
-
-TD.rdoc  { 
-  padding: 2px;
-  padding-left: 10px;
-  width: 100%;
-  }
-
-TD.body  { 
-  padding-left: 10px
-  }
-
-TD.pkg {
-  width: 100%;
-  padding-left: 10px
-}
-
-TABLE.indexsearch TR.indexrow {
-  display: none;
-}
-TABLE.indexsearch TR.indexshow {
-  display: table-row;
-}
-
-TD.indexentry {
-  vertical-align: top;
-  padding-right: 10px
-  }
-
-TD.indexannot {
-  vertical-align: top;
-  padding-left: 20px;
-  white-space: nowrap
-  }
-
-TD.indexlinks {
-  width: 100%
-  }
-
-/* ------- Section Headings ------- */
-
-TD.section1 {
-  padding-top: 15px;
-  font-weight: bold;
-  font-size: 150%
-  }
-
-TD.section2 {
-  padding-top: 10px;
-  font-weight: bold;
-  font-size: 130%
-  }
-
-TD.section3 {
-  padding-top: 5px;
-  font-weight: bold;
-  font-size: 110%
-  }
-
-TD.section4 {
-  font-weight: bold;
-  font-size: 100%
-  }
-
-/* -------------- The title bar at the top of the page */
-
-TD.infohead {
-  color: #ffffff;
-  font-weight: bold;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.infoval {
-  color: #ffffff;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.topbar {
-  background-color: #000099;
-  padding: 5px;
-}
-
-TD.title {
-  color: #ffffff;
-  padding-left: 10px;
-  width: 100%
-  }
-
-TD.topbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #ffffff;
-  border-left-style: solid;
-  white-space: nowrap;
-  }
-
-TD.topbut A:link {
-  color: #ffffff
-  }
-
-TD.topbut A:visited {
-  color: #ffff00
-  }
-
-TD.topbut A:hover {
-  background-color: #6060ff;
-  }
-
-TD.topbut:hover {
-  background-color: #6060ff
-  }
-
-TD.modulebar { 
-  background-color: #0077dd;
-  padding: 5px;
-  border-top-width: 1px;
-  border-top-color: #ffffff;
-  border-top-style: solid;
-  }
-
-/* --------- The page footer --------- */
-
-TD.botbar {
-  background-color: #000099;
-  color: #ffffff;
-  padding: 5px
-  }
-TD.botbar A:link {
-  color: #ffffff;
-  text-decoration: underline
-  }
-TD.botbar A:visited {
-  color: #ffff00
-  }
-TD.botbar A:hover {
-  background-color: #6060ff
-  }
-
rmfile ./dist/doc/html/monoids/haddock.css
binary ./dist/doc/html/monoids/haskell_icon.gif
oldhex
*47494638376110001000f70f00000000800000008000808000000080800080008080c0c0c08080
*80ff000000ff00ffff000000ffff00ff00ffffffffff0000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*0021f90401000000002c000000001000100007086c0001007840b0a0418202073e38b0b021c387
*07143e2440c0a143040e091cd0787021c686151f84347800e343901d4b12646870e44a930d0952
*3ca832a6cc990555b2bc2992e4c79d3847ea2c88b3a7c89a2c8b8aa43874e941a60810003840b5
*aa55aa511346ddca75abc080003b
newhex
*
rmfile ./dist/doc/html/monoids/haskell_icon.gif
hunk ./dist/doc/html/monoids/index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->monoids-0.1.2: Lots of Monoids</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.2: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->monoids-0.1.2: Lots of Monoids</TD
-></TR
-><TR
-><TD CLASS="doc"
->Lots of Monoids
-</TD
-></TR
-><TR
-><TD CLASS="section1"
->Modules</TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD STYLE="width: 50em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:0')" ALT="show/hide"
->Data</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:0" STYLE="display:block;"
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:1')" ALT="show/hide"
-><A HREF="Data-Group.html"
->Data.Group</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Group-Sugar.html"
->Data.Group.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:2')" ALT="show/hide"
->Monoid</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:2" STYLE="display:block;"
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:3')" ALT="show/hide"
-><A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:3" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Applicative.html"
->Data.Monoid.Applicative</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Categorical.html"
->Data.Monoid.Categorical</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-FromString.html"
->Data.Monoid.FromString</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:4')" ALT="show/hide"
-><A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:4" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Generator-Combinators.html"
->Data.Monoid.Generator.Combinators</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-IntMap.html"
->Data.Monoid.IntMap</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:5')" ALT="show/hide"
->Lexical</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:5" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:6')" ALT="show/hide"
->UTF8</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:6" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-Words.html"
->Data.Monoid.Lexical.Words</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Map.html"
->Data.Monoid.Map</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:7')" ALT="show/hide"
-><A HREF="Data-Monoid-Monad.html"
->Data.Monoid.Monad</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:7" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Monad-Cont.html"
->Data.Monoid.Monad.Cont</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Monad-Either.html"
->Data.Monoid.Monad.Either</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Monad-IO.html"
->Data.Monoid.Monad.IO</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Monad-Identity.html"
->Data.Monoid.Monad.Identity</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:8')" ALT="show/hide"
->RWS</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:8" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-RWS-Lazy.html"
->Data.Monoid.Monad.RWS.Lazy</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-RWS-Strict.html"
->Data.Monoid.Monad.RWS.Strict</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Monad-Reader.html"
->Data.Monoid.Monad.Reader</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:9')" ALT="show/hide"
->ST</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:9" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-ST-Lazy.html"
->Data.Monoid.Monad.ST.Lazy</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-ST-Strict.html"
->Data.Monoid.Monad.ST.Strict</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Monad-STM.html"
->Data.Monoid.Monad.STM</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:10')" ALT="show/hide"
->State</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:10" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-State-Lazy.html"
->Data.Monoid.Monad.State.Lazy</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-State-Strict.html"
->Data.Monoid.Monad.State.Strict</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:11')" ALT="show/hide"
->Writer</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:11" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-Writer-Lazy.html"
->Data.Monoid.Monad.Writer.Lazy</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Monad-Writer-Strict.html"
->Data.Monoid.Monad.Writer.Strict</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:12')" ALT="show/hide"
-><A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:12" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Multiplicative-Sugar.html"
->Data.Monoid.Multiplicative.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Multiplicative-Transformer.html"
->Data.Monoid.Multiplicative.Transformer</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Ord.html"
->Data.Monoid.Ord</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:13')" ALT="show/hide"
-><A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:13" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-Sugar.html"
->Data.Monoid.Reducer.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-With.html"
->Data.Monoid.Reducer.With</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Unit.html"
->Data.Monoid.Unit</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:14')" ALT="show/hide"
-><A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:14" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Ring-FromNum.html"
->Data.Ring.FromNum</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:15')" ALT="show/hide"
-><A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:15" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Ring-Semi-Ord.html"
->Data.Ring.Semi.Ord</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Ring-Sugar.html"
->Data.Ring.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/index.html
binary ./dist/doc/html/monoids/minus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002118c8f
*a00bc6eb5e0b40583b6596f1a11f14003b
newhex
*
rmfile ./dist/doc/html/monoids/minus.gif
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*0d0cface0004000000000000948e00000000000065a68d00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000500000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000005000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000700000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000009000000000000002a0000000000000000000000000000
*0009000000000000002b00000000000000000000000000000009000000000000002c0000000000
*0000000000000000000009000000000000002d0000000000000000000000000000000900000000
*0000002e00000000000000000000000000000009000000000000002f0000000000000000000000
*000000000900000000000000300000000000000000000000000000000a00000000000000310000
*000000000000000000000000000a00000000000000320000000000000000000000000000000b00
*000000000000330000000000000000000000000000000b00000000000000340000000000000000
*000000000000000b00000000000000350000000000000000000000000000000b00000000000000
*360000000000000000000000000000000b00000000000000370000000000000000000000000000
*000b00000000000000380000000000000000000000000000000b00000000000000390000000000
*000000000000000000000b000000000000003a0000000000000000000000000000000b00000000
*0000003b0000000000000000000000000000000b000000000000003c0000000000000000000000
*000000000b000000000000003d0000000000000000000000000000000b000000000000003e0000
*000000000000000000000000000b000000000000003f0000000000000000000000000000000b00
*000000000000400000000000000000000000000000000b00000000000000410000000000000000
*000000000000000c00000000000000420000000000000000000000000000000c00000000000000
*430000000000000000000000000000000c00000000000000440000000000000000000000000000
*000c00000000000000450000000000000000000000000000000c00000000000000460000000000
*000000000000000000000c00000000000000470000000000000000000000000000000c00000000
*000000480000000000000000000000000000000c00000000000000490000000000000000000000
*000000000c000000000000004a0000000000000000000000000000000c000000000000004b0000
*000000000000000000000000000d000000000000004c0000000000000000000000000000000d00
*0000000000004d0000000000000000000000000000000e000000000000004e0000000000000000
*000000000000000e000000000000004f0000000000000000000000000000000e00000000000000
*500000000000000000000000000000000f00000000000000510000000000000000000000000000
*000f00000000000000520000000000000000000000000000000f00000000000000530000000000
*000000000000000000000f00000000000000540000000000000000000000000000000f00000000
*000000550000000000000000000000000000000f00000000000000560000000000000000000000
*000000001000000000000000570000000000000000000000000000001000000000000000580000
*000000000000000000000000001000000000000000590000000000000000000000000000001000
*0000000000005a00000000000000000000000000000010000000000000005b0000000000000000
*0000000000000010000000000000005c0000000000000000000000000000001000000000000000
*5d00000000000000000000000000000010000000000000005e0000000000000000000000000000
*0010000000000000005f0000000000000000000000000000001100000000000000600000000000
*000000000000000000001100000000000000610000000000000000000000000000001100000000
*000000620000000000000000000000000000001100000000000000630000000000000000000000
*000000001100000000000000640000000000000000000000000000001100000000000000650000
*000000000000000000000000001100000000000000660000000000000000000000000000001100
*000000000000670000000000000000000000000000001100000000000000680000000000000000
*000000000000001100000000000000690000000000000000000000000000001100000000000000
*6a00000000000000000000000000000011000000000000006b0000000000000000000000000000
*0011000000000000006c00000000000000000000000000000011000000000000006d0000000000
*0000000000000000000011000000000000006e0000000000000000000000000000001100000000
*0000006f0000000000000000000000000000001200000000000000700000000000000000000000
*000000001200000000000000710000000000000000000000000000001300000000000000720000
*000000000000000000000000001400000000000000730000000000000000000000000000001400
*000000000000740000000000000000000000000000001400000000000000750000000000000000
*000000000000001500000000000000760000000000000000000000000000001600000000000000
*770000000000000000000000000000001600000000000000780000000000000000000000000000
*0016000000000000007900000000000000000000000000000016000000000000007a0000000000
*0000000000000000000016000000000000007b0000000000000000000000000000001600000000
*0000007c00000000000000000000000000000017000000000000007d0000000000000000000000
*0000000018000000000000007e00000000000000000000000000000019000000000000007f0000
*000000000000000000000000001900000000000000800000000000000000000000000000001900
*000000000000810000000000000000000000000000001900000000000000820000000000000000
*000000000000001900000000000000830000000000000000000000000000001900000000000000
*840000000000000000000000000000001900000000000000850000000000000000000000000000
*001a00000000000000860000000000000000000000000000001a00000000000000870000000000
*000000000000000000001a00000000000000880000000000000000000000000000001b00000000
*000000890000000000000000000000000000001b000000000000008a0000000000000000000000
*000000001c000000000000008b0000000000000000000000000000001c000000000000008c0000
*000000000000000000000000001c2c000000000000000000000000000000010000000000220000
*00000000008d000000000000008e000000000000008f0000000000000090000000000000009100
*000000000000920000000000000093000000000000009400000000000000950000000000000096
*000000000000009700000000000000980000000000000099000000000000009a00000000000000
*9b000000000000009c000000000000009d000000000000009e000000000000009f000000000000
*00a000000000000000a100000000000000a200000000000000a300000000000000a40000000000
*0000a500000000000000a600000000000000a700000000000000a8000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005060000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*0000000000000500000000000000000000000000000002000000000025000000000000008d0000
*00000000008e000000000000008f00000000000000900000000000000091000000000000009200
*000000000000930000000000000094000000000000009500000000000000960000000000000097
*00000000000000980000000000000099000000000000009a000000000000009b00000000000000
*9c000000000000009d000000000000009e000000000000009f00000000000000a0000000000000
*00a100000000000000a200000000000000a300000000000000a400000000000000a50000000000
*0000a600000000000000a700000000000000a80000000000000000000000000000000100000000
*000000020000000000000003000000000000000400000000000000050000000000000006000000
*000000000700000000000000080300000000000000060000000000000008000000000000000700
*000000000000000000000000000003000000000026000000000000008d000000000000008e0000
*00000000008f000000000000009000000000000000910000000000000092000000000000009300
*000000000000940000000000000095000000000000009600000000000000970000000000000098
*0000000000000099000000000000009a000000000000009b000000000000009c00000000000000
*9d000000000000009e000000000000009f00000000000000a000000000000000a1000000000000
*00a200000000000000a300000000000000a400000000000000a500000000000000a60000000000
*0000a700000000000000a800000000000000000000000000000001000000000000000200000000
*00000003000000000000000400000000000000050000000000000009000000000000000a000000
*000000000b000000000000000c040000000000000009000000000000000a000000000000000b00
*0000000000000c00000000000000000000000000000004000000000025000000000000008d0000
*00000000008e000000000000008f00000000000000900000000000000091000000000000009200
*000000000000930000000000000094000000000000009500000000000000960000000000000097
*00000000000000980000000000000099000000000000009a000000000000009b00000000000000
*9c000000000000009d000000000000009e000000000000009f00000000000000a0000000000000
*00a100000000000000a200000000000000a300000000000000a400000000000000a50000000000
*0000a600000000000000a700000000000000a80000000000000000000000000000000100000000
*00000002000000000000000300000000000000040000000000000005000000000000000d000000
*000000000e000000000000000f03000000000000000d000000000000000e000000000000000f00
*000000000000000000000000000005000000000400000000000000100301020400000054000000
*680000006500000020010401000000000000000090000000000000001d000000000000001e0102
*01000000200107010201000000280104010000000000000000a9000000000000001d0000000000
*00001f0102010000002c0104010000000000000000aa000000000000001d000000000000002002
*0100000029010206000000200000006f0000007600000065000000720000002001070104010000
*000000000000ab000000000000001d000000000000002002020000002000000061010207000000
*200000007700000068000000650000007200000065000000200104010000000000000000aa0000
*00000000001d000000000000002002140000002000000069000000730000002000000074000000
*680000006500000020000000740000006f0000007000000020000000650000006c000000650000
*006d000000650000006e000000740000000a000000000000001303010204000000540000006800
*00006500000020010401000000000000000090000000000000001d000000000000001e01020100
*0000200107010201000000280104010000000000000000ac000000000000001d00000000000000
*1f0102010000002c0104010000000000000000aa000000000000001d0000000000000020020100
*000029010206000000200000006f00000076000000650000007200000020010701040100000000
*00000000ab000000000000001d0000000000000020020200000020000000610102070000002000
*00007700000068000000650000007200000065000000200104010000000000000000aa00000000
*0000001d0000000000000020021700000020000000690000007300000020000000740000006800
*00006500000020000000620000006f00000074000000740000006f0000006d0000002000000065
*0000006c000000650000006d000000650000006e000000740000000a0000000000000016030102
*0400000054000000680000006500000020010401000000000000000090000000000000001d0000
*00000000001e01020a00000020000000670000006900000076000000650000006e000000200000
*006200000079000000200107010201000000280104010000000000000000a9000000000000001d
*000000000000001f0102010000002c0104010000000000000000ad000000000000001d00000000
*0000002102010000002902010000000a0000000000000019030102040000005400000068000000
*6500000020010401000000000000000090000000000000001d000000000000001e010201000000
*200107010201000000280104010000000000000000ac000000000000001d000000000000001f01
*02010000002c0104010000000000000000ae000000000000001d00000000000000210201000000
*2902010000000a11000000000000008d000000000000008f000000000000009000000000000000
*000000000000000001000000000000001000000000000000110000000000000012000000000000
*001300000000000000140000000000000015000000000000001600000000000000170000000000
*0000180000000000000019000000000000001a000000000000001b0c0000000000000019000000
*000000001a000000000000001b0000000000000016000000000000001700000000000000180000
*000000000013000000000000001400000000000000150000000000000010000000000000001100
*000000000000120000000000000000000000000000002200000000006000000000000000af0000
*0000000000b000000000000000b100000000000000b200000000000000b300000000000000b400
*000000000000b500000000000000b600000000000000b700000000000000b8000000000000008d
*000000000000008e000000000000008f0000000000000090000000000000009100000000000000
*920000000000000093000000000000009400000000000000950000000000000096000000000000
*009700000000000000980000000000000099000000000000009a000000000000009b0000000000
*00009c000000000000009d000000000000009e000000000000009f00000000000000a000000000
*000000a100000000000000a200000000000000a300000000000000a400000000000000a5000000
*00000000a600000000000000a700000000000000a800000000000000b900000000000000ba0000
*0000000000bb00000000000000bc00000000000000bd00000000000000be00000000000000bf00
*000000000000c000000000000000c100000000000000c200000000000000c300000000000000c4
*00000000000000c500000000000000c600000000000000c700000000000000c800000000000000
*c900000000000000ca00000000000000cb00000000000000cc00000000000000cd000000000000
*00ce00000000000000cf00000000000000d000000000000000d100000000000000d20000000000
*0000d300000000000000d400000000000000d500000000000000d600000000000000d700000000
*000000d800000000000000d900000000000000da00000000000000db00000000000000dc000000
*00000000dd00000000000000de00000000000000df00000000000000e000000000000000e10000
*0000000000e200000000000000e300000000000000e400000000000000e500000000000000e600
*000000000000e700000000000000e800000000000000e900000000000000ea00000000000000eb
*00000000000000ec00000000000000000000000000000001000000000000000200000000000000
*030000000000000004000000000000000500000000000000000000000000000000230000000000
*6000000000000000af00000000000000b000000000000000b100000000000000b2000000000000
*00b300000000000000b400000000000000b500000000000000b600000000000000b70000000000
*0000b8000000000000008d000000000000008e000000000000008f000000000000009000000000
*000000910000000000000092000000000000009300000000000000940000000000000095000000
*0000000096000000000000009700000000000000980000000000000099000000000000009a0000
*00000000009b000000000000009c000000000000009d000000000000009e000000000000009f00
*000000000000a000000000000000a100000000000000a200000000000000a300000000000000a4
*00000000000000a500000000000000a600000000000000a700000000000000a800000000000000
*b900000000000000ba00000000000000bb00000000000000bc00000000000000bd000000000000
*00be00000000000000bf00000000000000c000000000000000c100000000000000c20000000000
*0000c300000000000000c400000000000000c500000000000000c600000000000000c700000000
*000000c800000000000000c900000000000000ca00000000000000cb00000000000000cc000000
*00000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d10000
*0000000000d200000000000000d300000000000000d400000000000000d500000000000000d600
*000000000000d700000000000000d800000000000000ed00000000000000ee00000000000000ef
*00000000000000f000000000000000f100000000000000f200000000000000f300000000000000
*f400000000000000f500000000000000f600000000000000e300000000000000e4000000000000
*00e500000000000000e600000000000000e700000000000000e800000000000000e90000000000
*0000ea00000000000000eb00000000000000ec0000000000000000000000000000000100000000
*000000020000000000000003000000000000000400000000000000050000000000000000000000
*00000000002400000000005100000000000000af00000000000000b000000000000000b1000000
*00000000b200000000000000b400000000000000b500000000000000b700000000000000f70000
*0000000000b8000000000000008d000000000000008e000000000000008f000000000000009000
*000000000000910000000000000092000000000000009300000000000000940000000000000095
*000000000000009600000000000000970000000000000098000000000000009900000000000000
*9a000000000000009b000000000000009c000000000000009d000000000000009e000000000000
*009f00000000000000a000000000000000a100000000000000a200000000000000a30000000000
*0000a400000000000000a500000000000000a600000000000000a700000000000000a800000000
*000000f800000000000000f900000000000000fa00000000000000ba00000000000000bb000000
*00000000bc00000000000000bd00000000000000be00000000000000bf00000000000000c00000
*0000000000c100000000000000c200000000000000c300000000000000c400000000000000c500
*000000000000c600000000000000c700000000000000c800000000000000c900000000000000ca
*00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000d500000000000000d600000000000000d700000000000000fb0000000000
*0000fc00000000000000fd00000000000000fe00000000000000d8000000000000000000000000
*000000010000000000000002000000000000000300000000000000040000000000000005000000
*000000000000000000000000002500000000006c00000000000000af00000000000000b0000000
*00000000b100000000000000b200000000000000b400000000000000b500000000000000b70000
*0000000000b8000000000000008d000000000000008e000000000000008f000000000000009000
*000000000000910000000000000092000000000000009300000000000000940000000000000095
*000000000000009600000000000000970000000000000098000000000000009900000000000000
*9a000000000000009b000000000000009c000000000000009d000000000000009e000000000000
*009f00000000000000a000000000000000a100000000000000a200000000000000a30000000000
*0000a400000000000000a500000000000000a600000000000000a700000000000000a800000000
*000000ff0000000000000100000000000000010100000000000001020000000000000103000000
*000000010400000000000001050000000000000106000000000000010700000000000001080000
*000000000109000000000000010a000000000000010b00000000000000ba00000000000000bb00
*000000000000bc00000000000000bd00000000000000be00000000000000bf00000000000000c0
*00000000000000c100000000000000c200000000000000c300000000000000c400000000000000
*c500000000000000c600000000000000c700000000000000c800000000000000c9000000000000
*00ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce0000000000
*0000cf00000000000000d000000000000000d100000000000000d200000000000000d300000000
*000000d400000000000000d500000000000000d600000000000000d700000000000000d8000000
*000000010c000000000000010d000000000000010e000000000000010f00000000000001100000
*000000000111000000000000011200000000000001130000000000000114000000000000011500
*00000000000116000000000000011700000000000001180000000000000119000000000000011a
*000000000000011b000000000000011c000000000000011d000000000000011e00000000000001
*1f0000000000000120000000000000012100000000000000000000000000000001000000000000
*000200000000000000030000000000000004000000000000000500000000000000000000000000
*0000002600000000005200000000000000af00000000000000b000000000000000b10000000000
*0000b200000000000000b400000000000000b500000000000000b700000000000000f700000000
*000000b8000000000000008d000000000000008e000000000000008f0000000000000090000000
*000000009100000000000000920000000000000093000000000000009400000000000000950000
*000000000096000000000000009700000000000000980000000000000099000000000000009a00
*0000000000009b000000000000009c000000000000009d000000000000009e000000000000009f
*00000000000000a000000000000000a100000000000000a200000000000000a300000000000000
*a400000000000000a500000000000000a600000000000000a700000000000000a8000000000000
*012200000000000001230000000000000124000000000000012500000000000001260000000000
*0001270000000000000128000000000000012900000000000000ba00000000000000bb00000000
*000000bc00000000000000bd00000000000000be00000000000000bf00000000000000c0000000
*00000000c100000000000000c200000000000000c300000000000000c400000000000000c50000
*0000000000c600000000000000c700000000000000c800000000000000c900000000000000ca00
*000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf
*00000000000000d000000000000000d100000000000000d200000000000000d300000000000000
*d400000000000000d500000000000000d600000000000000d700000000000000d8000000000000
*000000000000000000010000000000000002000000000000000300000000000000040000000000
*000005000000000000000000000000000000002700000000006300000000000000af0000000000
*0000b000000000000000b100000000000000b200000000000000b300000000000000b400000000
*000000b500000000000000b600000000000000b700000000000000b8000000000000008d000000
*000000008e000000000000008f0000000000000090000000000000009100000000000000920000
*000000000093000000000000009400000000000000950000000000000096000000000000009700
*000000000000980000000000000099000000000000009a000000000000009b000000000000009c
*000000000000009d000000000000009e000000000000009f00000000000000a000000000000000
*a100000000000000a200000000000000a300000000000000a400000000000000a5000000000000
*00a600000000000000a700000000000000a800000000000000b900000000000000ba0000000000
*0000bb00000000000000bc00000000000000bd00000000000000be00000000000000bf00000000
*000000c000000000000000c100000000000000c200000000000000c300000000000000c4000000
*00000000c500000000000000c600000000000000c700000000000000c800000000000000c90000
*0000000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce00
*000000000000cf00000000000000d000000000000000d100000000000000d200000000000000d3
*00000000000000d400000000000000d500000000000000d600000000000000d700000000000000
*d8000000000000012a000000000000012b000000000000012c000000000000012d000000000000
*012e000000000000012f0000000000000130000000000000013100000000000001320000000000
*000133000000000000013400000000000001350000000000000136000000000000013700000000
*000001380000000000000139000000000000013a000000000000013b000000000000013c000000
*00000000e300000000000000e400000000000000e500000000000000e600000000000000000000
*000000000001000000000000000200000000000000030000000000000004000000000000000500
*0000000000000000000000000000002800000000006300000000000000af00000000000000b000
*000000000000b100000000000000b200000000000000b300000000000000b400000000000000b5
*00000000000000b600000000000000b700000000000000b8000000000000008d00000000000000
*8e000000000000008f000000000000009000000000000000910000000000000092000000000000
*009300000000000000940000000000000095000000000000009600000000000000970000000000
*0000980000000000000099000000000000009a000000000000009b000000000000009c00000000
*0000009d000000000000009e000000000000009f00000000000000a000000000000000a1000000
*00000000a200000000000000a300000000000000a400000000000000a500000000000000a60000
*0000000000a700000000000000a800000000000000b900000000000000ba00000000000000bb00
*000000000000bc00000000000000bd00000000000000be00000000000000bf00000000000000c0
*00000000000000c100000000000000c200000000000000c300000000000000c400000000000000
*c500000000000000c600000000000000c700000000000000c800000000000000c9000000000000
*00ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce0000000000
*0000cf00000000000000d000000000000000d100000000000000d200000000000000d300000000
*000000d400000000000000d500000000000000d600000000000000d700000000000000d8000000
*000000013d000000000000013e000000000000013f000000000000014000000000000001410000
*000000000142000000000000014300000000000001440000000000000145000000000000014600
*0000000000014700000000000001480000000000000149000000000000014a0000000000000138
*0000000000000139000000000000013a000000000000013b000000000000013c00000000000000
*e300000000000000e400000000000000e500000000000000e60000000000000000000000000000
*000100000000000000020000000000000003000000000000000400000000000000050000000000
*00000000000000000000002900000000006e00000000000000af00000000000000b00000000000
*0000b100000000000000b200000000000000b300000000000000b400000000000000b500000000
*000000b600000000000000b700000000000000b8000000000000008d000000000000008e000000
*000000008f00000000000000900000000000000091000000000000009200000000000000930000
*000000000094000000000000009500000000000000960000000000000097000000000000009800
*00000000000099000000000000009a000000000000009b000000000000009c000000000000009d
*000000000000009e000000000000009f00000000000000a000000000000000a100000000000000
*a200000000000000a300000000000000a400000000000000a500000000000000a6000000000000
*00a700000000000000a800000000000000b900000000000000ba00000000000000bb0000000000
*0000bc00000000000000bd00000000000000be00000000000000bf00000000000000c000000000
*000000c100000000000000c200000000000000c300000000000000c400000000000000c5000000
*00000000c600000000000000c700000000000000c800000000000000c900000000000000ca0000
*0000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf00
*000000000000d000000000000000d100000000000000d200000000000000d300000000000000d4
*00000000000000d500000000000000d600000000000000d700000000000000d800000000000001
*4b000000000000014c000000000000014d000000000000014e000000000000014f000000000000
*015000000000000001510000000000000152000000000000015300000000000001540000000000
*000155000000000000015600000000000001570000000000000158000000000000015900000000
*0000015a000000000000015b000000000000015c000000000000015d0000000000000138000000
*0000000139000000000000013a000000000000013b000000000000013c00000000000000e30000
*0000000000e400000000000000e500000000000000e600000000000000e700000000000000e800
*000000000000e900000000000000ea00000000000000eb00000000000000ec0000000000000000
*000000000000000100000000000000020000000000000003000000000000000400000000000000
*05000000000000000000000000000000002a00000000006e00000000000000af00000000000000
*b000000000000000b100000000000000b200000000000000b300000000000000b4000000000000
*00b500000000000000b600000000000000b700000000000000b8000000000000008d0000000000
*00008e000000000000008f00000000000000900000000000000091000000000000009200000000
*000000930000000000000094000000000000009500000000000000960000000000000097000000
*00000000980000000000000099000000000000009a000000000000009b000000000000009c0000
*00000000009d000000000000009e000000000000009f00000000000000a000000000000000a100
*000000000000a200000000000000a300000000000000a400000000000000a500000000000000a6
*00000000000000a700000000000000a800000000000000b900000000000000ba00000000000000
*bb00000000000000bc00000000000000bd00000000000000be00000000000000bf000000000000
*00c000000000000000c100000000000000c200000000000000c300000000000000c40000000000
*0000c500000000000000c600000000000000c700000000000000c800000000000000c900000000
*000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce000000
*00000000cf00000000000000d000000000000000d100000000000000d200000000000000d30000
*0000000000d400000000000000d500000000000000d600000000000000d700000000000000d800
*0000000000015e000000000000015f000000000000016000000000000001610000000000000162
*000000000000016300000000000001640000000000000165000000000000016600000000000001
*6700000000000001680000000000000169000000000000016a000000000000016b000000000000
*0159000000000000015a000000000000015b000000000000015c000000000000015d0000000000
*0001380000000000000139000000000000013a000000000000013b000000000000013c00000000
*000000e300000000000000e400000000000000e500000000000000e600000000000000e7000000
*00000000e800000000000000e900000000000000ea00000000000000eb00000000000000ec0000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*00000000000005000000000000000000000000000000002b00000000005e00000000000000af00
*000000000000b000000000000000b100000000000000b200000000000000b300000000000000b4
*00000000000000b500000000000000b600000000000000b700000000000000b800000000000000
*8d000000000000008e000000000000008f00000000000000900000000000000091000000000000
*009200000000000000930000000000000094000000000000009500000000000000960000000000
*00009700000000000000980000000000000099000000000000009a000000000000009b00000000
*0000009c000000000000009d000000000000009e000000000000009f00000000000000a0000000
*00000000a100000000000000a200000000000000a300000000000000a400000000000000a50000
*0000000000a600000000000000a700000000000000a800000000000000b900000000000000ba00
*000000000000bb00000000000000bc00000000000000bd00000000000000be00000000000000bf
*00000000000000c000000000000000c100000000000000c200000000000000c300000000000000
*c400000000000000c500000000000000c600000000000000c700000000000000c8000000000000
*00c900000000000000ca00000000000000cb00000000000000cc00000000000000cd0000000000
*0000ce00000000000000cf00000000000000d000000000000000d100000000000000d200000000
*000000d300000000000000d400000000000000d500000000000000d600000000000000d7000000
*00000000d8000000000000016c000000000000016d000000000000016e000000000000016f0000
*000000000170000000000000017100000000000001720000000000000173000000000000017400
*00000000000175000000000000015a000000000000015b000000000000015c000000000000015d
*00000000000000e300000000000000e400000000000000e500000000000000e600000000000000
*000000000000000001000000000000000200000000000000030000000000000004000000000000
*0005000000000000000000000000000000002c0000000000950000000000000176000000000000
*00af00000000000000b000000000000000b100000000000000b200000000000000b40000000000
*0000b500000000000000b70000000000000177000000000000017800000000000000b800000000
*0000008d0000000000000179000000000000017a000000000000008e000000000000008f000000
*000000009000000000000000910000000000000092000000000000009300000000000000940000
*000000000095000000000000009600000000000000970000000000000098000000000000009900
*0000000000009a000000000000009b000000000000009c000000000000009d000000000000009e
*000000000000009f00000000000000a000000000000000a100000000000000a200000000000000
*a300000000000000a400000000000000a500000000000000a600000000000000a7000000000000
*00a8000000000000017b000000000000017c000000000000017d000000000000017e0000000000
*00017f000000000000018000000000000001810000000000000182000000000000018300000000
*000001840000000000000185000000000000018600000000000001870000000000000188000000
*0000000189000000000000018a000000000000018b000000000000018c000000000000018d0000
*00000000018e000000000000018f00000000000001900000000000000191000000000000019200
*000000000001930000000000000194000000000000019500000000000001960000000000000197
*00000000000001980000000000000199000000000000019a000000000000019b00000000000001
*9c000000000000019d000000000000019e000000000000019f00000000000001a0000000000000
*01a100000000000001a200000000000001a300000000000001a400000000000001a50000000000
*0001a600000000000001a700000000000001a800000000000001a900000000000001aa00000000
*000001ab00000000000001ac00000000000001ad00000000000001ae00000000000001af000000
*00000001b000000000000001b100000000000001b200000000000001b300000000000001b40000
*0000000001b500000000000001b600000000000001b700000000000001b800000000000001b900
*000000000001ba00000000000001bb00000000000001bc00000000000001bd00000000000001be
*00000000000001bf00000000000001c000000000000001c100000000000000ba00000000000000
*bb00000000000000bc00000000000000bd00000000000000be00000000000000bf000000000000
*00c000000000000000c100000000000000c200000000000000c300000000000000c40000000000
*0000c500000000000000c600000000000000c700000000000000c800000000000000c900000000
*000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce000000
*00000000cf00000000000000d000000000000000d100000000000000d200000000000000d30000
*0000000000d400000000000000d500000000000000d600000000000000d700000000000000d800
*000000000000000000000000000001000000000000000200000000000000030000000000000004
*0000000000000005000000000000000000000000000000002d00000000004f00000000000000af
*00000000000000b000000000000000b100000000000000b200000000000000b300000000000000
*b400000000000000b500000000000000b600000000000000b700000000000000b8000000000000
*008d000000000000008e000000000000008f000000000000009000000000000000910000000000
*000092000000000000009300000000000000940000000000000095000000000000009600000000
*0000009700000000000000980000000000000099000000000000009a000000000000009b000000
*000000009c000000000000009d000000000000009e000000000000009f00000000000000a00000
*0000000000a100000000000000a200000000000000a300000000000000a400000000000000a500
*000000000000a600000000000000a700000000000000a800000000000000b900000000000000ba
*00000000000000bb00000000000000bc00000000000000bd00000000000000be00000000000000
*bf00000000000000c000000000000000c100000000000000c200000000000000c3000000000000
*00c400000000000000c500000000000000c600000000000000c700000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d400000000000000d500000000000000d600000000000000d70000
*0000000000d800000000000001c200000000000001c300000000000001c4000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000005
*000000000000000000000000000000002e00000000002800000000000001c500000000000001c6
*00000000000001c7000000000000008d000000000000008e000000000000008f00000000000000
*900000000000000091000000000000009200000000000000930000000000000094000000000000
*009500000000000000960000000000000097000000000000009800000000000000990000000000
*00009a000000000000009b000000000000009c000000000000009d000000000000009e00000000
*0000009f00000000000000a000000000000000a100000000000000a200000000000000a3000000
*00000000a400000000000000a500000000000000a600000000000000a700000000000000a80000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*0000000000000500000000000001c800000000000001c900000000000001ca0000000000000000
*00000000000000002f00000000005900000000000000af00000000000000b000000000000000b1
*00000000000000b200000000000000b400000000000000b500000000000000b700000000000000
*b8000000000000008d000000000000008e000000000000008f0000000000000090000000000000
*009100000000000000920000000000000093000000000000009400000000000000950000000000
*000096000000000000009700000000000000980000000000000099000000000000009a00000000
*0000009b000000000000009c000000000000009d000000000000009e000000000000009f000000
*00000000a000000000000000a100000000000000a200000000000000a300000000000000a40000
*0000000000a500000000000000a600000000000000a700000000000000a800000000000000ba00
*000000000000bb00000000000000bc00000000000000bd00000000000000be00000000000000bf
*00000000000000c000000000000000c100000000000000c200000000000000c300000000000000
*c400000000000000c500000000000000c600000000000000c700000000000000c8000000000000
*00c900000000000000ca00000000000000cb00000000000000cc00000000000000cd0000000000
*0000ce00000000000000cf00000000000000d000000000000000d100000000000000d200000000
*000000d300000000000000d400000000000000d500000000000000d600000000000000d7000000
*00000000d800000000000001cb00000000000001cc00000000000001cd00000000000001ce0000
*0000000001cf00000000000001d000000000000001d100000000000001d200000000000001d300
*000000000001d400000000000001d500000000000001d600000000000000e300000000000000e4
*00000000000000e500000000000000e60000000000000000000000000000000100000000000000
*020000000000000003000000000000000400000000000000050000000000000000000000000000
*00000600000000003000000000000000b7000000000000008d000000000000008e000000000000
*008f00000000000000900000000000000091000000000000009200000000000000930000000000
*000094000000000000009500000000000000960000000000000097000000000000009800000000
*00000099000000000000009a000000000000009b000000000000009c000000000000009d000000
*000000009e000000000000009f00000000000000a000000000000000a100000000000000a20000
*0000000000a300000000000000a400000000000000a500000000000000a600000000000000a700
*000000000000a800000000000000be00000000000000cb00000000000000d600000000000000d7
*000000000000000000000000000000010000000000000002000000000000000300000000000000
*040000000000000005000000000000001c000000000000001d000000000000001e000000000000
*001f00000000000000200000000000000021000000000000002200000000000000230000000000
*00002409000000000000002200000000000000230000000000000024000000000000001f000000
*00000000200000000000000021000000000000001c000000000000001d000000000000001e0000
*0000000000000000000000000007000000000009000000000000008d000000000000008f000000
*000000009000000000000000000000000000000001000000000000000200000000000000030000
*000000000025000000000000002602000000000000002500000000000000260000000000000000
*0000000000000008000000000027000000000000008d000000000000008e000000000000008f00
*000000000000900000000000000091000000000000009200000000000000930000000000000094
*000000000000009500000000000000960000000000000097000000000000009800000000000000
*99000000000000009a000000000000009b000000000000009c000000000000009d000000000000
*009e000000000000009f00000000000000a000000000000000a100000000000000a20000000000
*0000a300000000000000a400000000000000a500000000000000a600000000000000a700000000
*000000a80000000000000000000000000000000100000000000000020000000000000003000000
*000000000400000000000000050000000000000006000000000000000700000000000000080000
*000000000027000000000000002802000000000000002700000000000000280000000000000000
*000000000000000900000000002c000000000000008d000000000000008e000000000000008f00
*000000000000900000000000000091000000000000009200000000000000930000000000000094
*000000000000009500000000000000960000000000000097000000000000009800000000000000
*99000000000000009a000000000000009b000000000000009c000000000000009d000000000000
*009e000000000000009f00000000000000a000000000000000a100000000000000a20000000000
*0000a300000000000000a400000000000000a500000000000000a600000000000000a700000000
*000000a80000000000000000000000000000000100000000000000020000000000000003000000
*000000000400000000000000050000000000000006000000000000000700000000000000080000
*000000000029000000000000002a000000000000002b000000000000002c000000000000002d00
*0000000000002e000000000000002f070000000000000029000000000000002b00000000000000
*2a000000000000002e000000000000002d000000000000002c000000000000002f000000000000
*0000000000000000000a000000000009000000000000008d000000000000008f00000000000000
*900000000000000000000000000000000100000000000000020000000000000003000000000000
*003000000000000000310200000000000000300000000000000031000000000000000000000000
*0000000b000000000031000000000000008d000000000000008e000000000000008f0000000000
*000090000000000000009100000000000000920000000000000093000000000000009400000000
*000000950000000000000096000000000000009700000000000000980000000000000099000000
*000000009a000000000000009b000000000000009c000000000000009d000000000000009e0000
*00000000009f00000000000000a000000000000000a100000000000000a200000000000000a300
*000000000000a400000000000000a500000000000000a600000000000000a700000000000000a8
*000000000000000000000000000000010000000000000002000000000000000300000000000000
*040000000000000005000000000000003200000000000000330000000000000034000000000000
*003500000000000000360000000000000037000000000000003800000000000000390000000000
*00003a000000000000003b000000000000003c000000000000003d000000000000003e00000000
*0000003f00000000000000400f000000000000003b000000000000003c000000000000003d0000
*00000000003e000000000000003f00000000000000400000000000000035000000000000003600
*000000000000370000000000000032000000000000003300000000000000340000000000000038
*0000000000000039000000000000003a0000000000000000000000000000000c00000000002f00
*0000000000008d000000000000008e000000000000008f00000000000000900000000000000091
*000000000000009200000000000000930000000000000094000000000000009500000000000000
*96000000000000009700000000000000980000000000000099000000000000009a000000000000
*009b000000000000009c000000000000009d000000000000009e000000000000009f0000000000
*0000a000000000000000a100000000000000a200000000000000a300000000000000a400000000
*000000a500000000000000a600000000000000a700000000000000a80000000000000000000000
*000000000100000000000000020000000000000003000000000000000400000000000000050000
*000000000006000000000000000700000000000000080000000000000041000000000000004200
*000000000000430000000000000044000000000000004500000000000000460000000000000047
*00000000000000480000000000000049000000000000004a0a0000000000000046000000000000
*004700000000000000450000000000000048000000000000004300000000000000440000000000
*00004100000000000000420000000000000049000000000000004a000000000000000000000000
*0000000d00000000002500000000000001d7000000000000008d000000000000008e0000000000
*00008f000000000000009000000000000000910000000000000092000000000000009300000000
*000000940000000000000095000000000000009600000000000000970000000000000098000000
*0000000099000000000000009a000000000000009b000000000000009c000000000000009d0000
*00000000009e000000000000009f00000000000000a000000000000000a100000000000000a200
*000000000000a300000000000000a400000000000000a500000000000000a600000000000000a7
*00000000000000a800000000000000000000000000000001000000000000000200000000000000
*0300000000000000040000000000000005000000000000004b000000000000004c020000000000
*00004b000000000000004c0000000000000000000000000000000e000000000003000000000000
*004d000000000000004e000000000000004f03000000000000004d000000000000004e00000000
*0000004f0000000000000000000000000000000f00000000020000000000000050030102020000
*004100000020010401000000000000000090000000000000001d000000000000001e01020b0000
*00200000006900000073000000200000006a000000750000007300000074000000200000006100
*0000200104010000000000000001d8000000000000001d00000000000000300213000000200000
*0077000000690000007400000068000000200000006f0000006e00000065000000200000006f00
*0000620000006a0000006500000063000000740000002e000000200000000a0000000000000052
*030102040000005400000068000000650000002001040100000000000000009000000000000000
*1d000000000000001e010233000000200000006f0000006600000020000000650000006e000000
*640000006f0000006d0000006f00000072000000700000006800000069000000730000006d0000
*0073000000200000006f00000076000000650000007200000020000000730000006f0000006d00
*000065000000200000006f000000620000006a0000006500000063000000740000002000000069
*0000006e00000020000000610000006e0000002000000061000000720000006200000069000000
*7400000072000000610000007200000079000000200104010000000000000001d8000000000000
*001d000000000000003002010000000a09000000000000008d000000000000008f000000000000
*009000000000000000500000000000000051000000000000005200000000000000530000000000
*000054000000000000005506000000000000005200000000000000530000000000000054000000
*000000005000000000000000510000000000000055000000000000000000000000000000100000
*00000032000000000000008d00000000000001d900000000000001da00000000000001db000000
*00000001dc00000000000001dd00000000000001de00000000000001df000000000000008e0000
*00000000008f000000000000009000000000000000910000000000000092000000000000009300
*000000000000940000000000000095000000000000009600000000000000970000000000000098
*0000000000000099000000000000009a000000000000009b000000000000009c00000000000000
*9d000000000000009e000000000000009f00000000000000a000000000000000a1000000000000
*00a200000000000000a300000000000000a400000000000000a500000000000000a60000000000
*0000a700000000000000a800000000000000000000000000000001000000000000000200000000
*000000030000000000000004000000000000000500000000000000560000000000000057000000
*00000000580000000000000059000000000000005a000000000000005b000000000000005c0000
*00000000005d000000000000005e09000000000000005c000000000000005d000000000000005e
*0000000000000059000000000000005a000000000000005b000000000000005600000000000000
*57000000000000005800000000000000000000000000000011000000000041000000000000008d
*000000000000008e000000000000008f0000000000000090000000000000009100000000000000
*920000000000000093000000000000009400000000000000950000000000000096000000000000
*009700000000000000980000000000000099000000000000009a000000000000009b0000000000
*00009c000000000000009d000000000000009e000000000000009f00000000000000a000000000
*000000a100000000000000a200000000000000a300000000000000a400000000000000a5000000
*00000000a600000000000000a700000000000000a8000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000005000000000000003200
*000000000000330000000000000034000000000000003500000000000000360000000000000037
*00000000000000380000000000000039000000000000003a000000000000003b00000000000000
*3c000000000000003d000000000000003e000000000000003f0000000000000040000000000000
*005f00000000000000600000000000000061000000000000006200000000000000630000000000
*000064000000000000006500000000000000660000000000000067000000000000006800000000
*00000069000000000000006a000000000000006b000000000000006c000000000000006d000000
*000000006e10000000000000005f00000000000000600000000000000061000000000000006200
*000000000000630000000000000064000000000000006500000000000000660000000000000067
*00000000000000680000000000000069000000000000006a000000000000006b00000000000000
*6c000000000000006d000000000000006e0000000000000000000000000000001200000000001e
*000000000000008d000000000000008e000000000000008f000000000000009000000000000000
*910000000000000092000000000000009300000000000000940000000000000095000000000000
*0096000000000000009700000000000000980000000000000099000000000000009a0000000000
*00009b000000000000009c000000000000009d000000000000009e000000000000009f00000000
*000000a000000000000000a100000000000000a200000000000000a300000000000000a4000000
*00000000a500000000000000a600000000000000a700000000000000a8000000000000006f0000
*00000000007002000000000000006f000000000000007000000000000000000000000000000013
*00000000001f000000000000008d000000000000008e000000000000008f000000000000009000
*000000000000910000000000000092000000000000009300000000000000940000000000000095
*000000000000009600000000000000970000000000000098000000000000009900000000000000
*9a000000000000009b000000000000009c000000000000009d000000000000009e000000000000
*009f00000000000000a000000000000000a100000000000000a200000000000000a30000000000
*0000a400000000000000a500000000000000a600000000000000a700000000000000a800000000
*0000006f0000000000000070000000000000007101000000000000007100000000000000000000
*000000000014000000000021000000000000008d000000000000008e000000000000008f000000
*000000009000000000000000910000000000000092000000000000009300000000000000940000
*000000000095000000000000009600000000000000970000000000000098000000000000009900
*0000000000009a000000000000009b000000000000009c000000000000009d000000000000009e
*000000000000009f00000000000000a000000000000000a100000000000000a200000000000000
*a300000000000000a400000000000000a500000000000000a600000000000000a7000000000000
*00a8000000000000006f0000000000000070000000000000007200000000000000730000000000
*000074030000000000000072000000000000007300000000000000740000000000000000000000
*0000000015000000000023000000000000008d000000000000008e000000000000008f00000000
*000000900000000000000091000000000000009200000000000000930000000000000094000000
*000000009500000000000000960000000000000097000000000000009800000000000000990000
*00000000009a000000000000009b000000000000009c000000000000009d000000000000009e00
*0000000000009f00000000000000a000000000000000a100000000000000a200000000000000a3
*00000000000000a400000000000000a500000000000000a600000000000000a700000000000000
*a8000000000000006f000000000000007000000000000000710000000000000072000000000000
*007300000000000000740000000000000075010000000000000075000000000000000000000000
*00000016000000000027000000000000008d000000000000008e000000000000008f0000000000
*000090000000000000009100000000000000920000000000000093000000000000009400000000
*000000950000000000000096000000000000009700000000000000980000000000000099000000
*000000009a000000000000009b000000000000009c000000000000009d000000000000009e0000
*00000000009f00000000000000a000000000000000a100000000000000a200000000000000a300
*000000000000a400000000000000a500000000000000a600000000000000a700000000000000a8
*000000000000006f00000000000000700000000000000072000000000000007300000000000000
*740000000000000076000000000000007700000000000000780000000000000079000000000000
*007a000000000000007b060000000000000079000000000000007a000000000000007b00000000
*000000760000000000000077000000000000007800000000000000000000000000000017000000
*000022000000000000008d000000000000008e000000000000008f000000000000009000000000
*000000910000000000000092000000000000009300000000000000940000000000000095000000
*0000000096000000000000009700000000000000980000000000000099000000000000009a0000
*00000000009b000000000000009c000000000000009d000000000000009e000000000000009f00
*000000000000a000000000000000a100000000000000a200000000000000a300000000000000a4
*00000000000000a500000000000000a600000000000000a700000000000000a800000000000000
*6f0000000000000070000000000000007200000000000000730000000000000074000000000000
*007c01000000000000007c00000000000000000000000000000018000000000023000000000000
*008d000000000000008e000000000000008f000000000000009000000000000000910000000000
*000092000000000000009300000000000000940000000000000095000000000000009600000000
*0000009700000000000000980000000000000099000000000000009a000000000000009b000000
*000000009c000000000000009d000000000000009e000000000000009f00000000000000a00000
*0000000000a100000000000000a200000000000000a300000000000000a400000000000000a500
*000000000000a600000000000000a700000000000000a8000000000000006f0000000000000070
*000000000000007200000000000000730000000000000074000000000000007c00000000000000
*7d01000000000000007d0000000000000000000000000000001900000000002a00000000000000
*8d000000000000008e000000000000008f00000000000000900000000000000091000000000000
*009200000000000000930000000000000094000000000000009500000000000000960000000000
*00009700000000000000980000000000000099000000000000009a000000000000009b00000000
*0000009c000000000000009d000000000000009e000000000000009f00000000000000a0000000
*00000000a100000000000000a200000000000000a300000000000000a400000000000000a50000
*0000000000a600000000000000a700000000000000a8000000000000006f000000000000007000
*0000000000007200000000000000730000000000000074000000000000007c000000000000007d
*000000000000007e000000000000007f0000000000000080000000000000008100000000000000
*820000000000000083000000000000008407000000000000008200000000000000830000000000
*000084000000000000007e00000000000000810000000000000080000000000000007f00000000
*000000000000000000000031000000000024000000000000008d000000000000008e0000000000
*00008f000000000000009000000000000000910000000000000092000000000000009300000000
*000000940000000000000095000000000000009600000000000000970000000000000098000000
*0000000099000000000000009a000000000000009b000000000000009c000000000000009d0000
*00000000009e000000000000009f00000000000000a000000000000000a100000000000000a200
*000000000000a300000000000000a400000000000000a500000000000000a600000000000000a7
*00000000000000a8000000000000006f0000000000000070000000000000007100000000000000
*72000000000000007300000000000000740000000000000075000000000000007c000000000000
*000000000000000000001a000000000021000000000000008d000000000000008e000000000000
*008f00000000000000900000000000000091000000000000009200000000000000930000000000
*000094000000000000009500000000000000960000000000000097000000000000009800000000
*00000099000000000000009a000000000000009b000000000000009c000000000000009d000000
*000000009e000000000000009f00000000000000a000000000000000a100000000000000a20000
*0000000000a300000000000000a400000000000000a500000000000000a600000000000000a700
*000000000000a8000000000000006f000000000000007000000000000000850000000000000086
*000000000000008703000000000000008500000000000000860000000000000087000000000000
*0000000000000000001b000000000024000000000000008d000000000000008e00000000000000
*8f0000000000000090000000000000009100000000000000920000000000000093000000000000
*009400000000000000950000000000000096000000000000009700000000000000980000000000
*000099000000000000009a000000000000009b000000000000009c000000000000009d00000000
*0000009e000000000000009f00000000000000a000000000000000a100000000000000a2000000
*00000000a300000000000000a400000000000000a500000000000000a600000000000000a70000
*0000000000a8000000000000006f00000000000000700000000000000071000000000000008500
*000000000000860000000000000087000000000000008800000000000000890200000000000000
*88000000000000008900000000000000000000000000000032000000000026000000000000008d
*000000000000008e000000000000008f0000000000000090000000000000009100000000000000
*920000000000000093000000000000009400000000000000950000000000000096000000000000
*009700000000000000980000000000000099000000000000009a000000000000009b0000000000
*00009c000000000000009d000000000000009e000000000000009f00000000000000a000000000
*000000a100000000000000a200000000000000a300000000000000a400000000000000a5000000
*00000000a600000000000000a700000000000000a8000000000000006f00000000000000700000
*00000000007200000000000000730000000000000074000000000000007c000000000000007d00
*000000000000850000000000000086000000000000008700000000000000000000000000000000
*1c000000000029000000000000008d000000000000008e000000000000008f0000000000000090
*000000000000009100000000000000920000000000000093000000000000009400000000000000
*950000000000000096000000000000009700000000000000980000000000000099000000000000
*009a000000000000009b000000000000009c000000000000009d000000000000009e0000000000
*00009f00000000000000a000000000000000a100000000000000a200000000000000a300000000
*000000a400000000000000a500000000000000a600000000000000a700000000000000a8000000
*000000006f00000000000000700000000000000072000000000000007300000000000000740000
*00000000007c000000000000007d00000000000000850000000000000086000000000000008700
*0000000000008a000000000000008b000000000000008c03000000000000008a00000000000000
*8b000000000000008c00000000000001e000000000000000000000000000000001030000000000
*000033000000000000000000000000000000010000000000000000340000000000000000000000
*000000000100000000000000003500000000000000000000000000000001000000000000000036
*000000000000000000000000000000010000000000000000370000000000000000000000000000
*000100000000000000003800000000000000000000000000000002030000000000000039000000
*0000000000000000000000000200000000000000003a0000000000000000000000000000000200
*000000000000003b0000000000000000000000000000000303000000000000003c000000000000
*0000000000000000000301000000000000003c0000000000000000000000000000000300000000
*000000003d0000000000000000000000000000000300000000000000003e000000000000000000
*0000000000000403000000000000003f0000000000000000000000000000000401000000000000
*003f00000000000000000000000000000004000000000000000040000000000000000000000000
*000000050300000000000000410000000000000000000000000000000501000000000000004100
*000000000000000000000000000005000000000000000042000000000000000000000000000000
*050300000000000000430000000000000000000000000000000501000000000000004300000000
*000000000000000000000005000000000000000044000000000000000000000000000000050300
*000000000000450000000000000000000000000000000501000000000000004500000000000000
*000000000000000005000000000000000046000000000000000000000000000000050300000000
*000000470000000000000000000000000000000501000000000000004700000000000000000000
*000000000005000000000000000048000000000000000000000000000000060300000000000000
*490000000000000000000000000000000601000000000000004900000000000000000000000000
*00000600000000000000004a0000000000000000000000000000000603000000000000004b0000
*000000000000000000000000000601000000000000004b00000000000000000000000000000006
*00000000000000004c0000000000000000000000000000000603000000000000004d0000000000
*000000000000000000000601000000000000004d00000000000000000000000000000006000000
*00000000004e0000000000000000000000000000000703000000000000004f0000000000000000
*000000000000000700000000000000005000000000000000000000000000000008030000000000
*000051000000000000000000000000000000080000000000000000520000000000000000000000
*000000000903000000000000005300000000000000000000000000000009030000000000000054
*000000000000000000000000000000090300000000000000550000000000000000000000000000
*000900000000000000005600000000000000000000000000000009000000000000000057000000
*000000000000000000000000090000000000000000580000000000000000000000000000000900
*00000000000000590000000000000000000000000000000a03000000000000004f000000000000
*0000000000000000000a0000000000000000500000000000000000000000000000000b03000000
*000000005a0000000000000000000000000000000b01000000000000005a000000000000000000
*0000000000000b00000000000000005b0000000000000000000000000000000b03000000000000
*005c0000000000000000000000000000000b01000000000000005c000000000000000000000000
*0000000b00000000000000005d0000000000000000000000000000000b03000000000000005e00
*00000000000000000000000000000b01000000000000005e000000000000000000000000000000
*0b00000000000000005f0000000000000000000000000000000b03000000000000006000000000
*00000000000000000000000b0300000000000000610000000000000000000000000000000b0000
*000000000000620000000000000000000000000000000b00000000000000006300000000000000
*00000000000000000b0000000000000000640000000000000000000000000000000b0000000000
*000000650000000000000000000000000000000c03000000000000006600000000000000000000
*00000000000c0000000000000000670000000000000000000000000000000c0300000000000000
*680000000000000000000000000000000c00000000000000006900000000000000000000000000
*00000c03000000000000006a0000000000000000000000000000000c03000000000000006b0000
*000000000000000000000000000c00000000000000006c0000000000000000000000000000000c
*00000000000000006d0000000000000000000000000000000c00000000000000006e0000000000
*000000000000000000000c00000000000000006f0000000000000000000000000000000d000000
*0000000000700000000000000000000000000000000d0000000000000000710000000000000000
*000000000000000e0300000000000000720000000000000000000000000000000e010000000000
*0000720000000000000000000000000000000e0000000000000000730000000000000000000000
*000000000f0300000000000000740000000000000000000000000000000f010000000000000074
*0000000000000000000000000000000f0300000000000000750000000000000000000000000000
*000f0100000000000000750000000000000000000000000000000f000000000000000076000000
*0000000000000000000000000f0000000000000000770000000000000000000000000000001003
*000000000000007800000000000000000000000000000010010000000000000078000000000000
*000000000000000000100000000000000000790000000000000000000000000000001003000000
*000000007a0000000000000000000000000000001001000000000000007a000000000000000000
*0000000000001000000000000000007b0000000000000000000000000000001003000000000000
*007c0000000000000000000000000000001001000000000000007c000000000000000000000000
*0000001000000000000000007d0000000000000000000000000000001100000000000000007e00
*00000000000000000000000000001100000000000000007f000000000000000000000000000000
*110000000000000000800000000000000000000000000000001100000000000000008100000000
*000000000000000000000011000000000000000082000000000000000000000000000000110000
*000000000000830000000000000000000000000000001100000000000000008400000000000000
*000000000000000011000000000000000085000000000000000000000000000000110000000000
*000000860000000000000000000000000000001100000000000000008700000000000000000000
*000000000011000000000000000088000000000000000000000000000000110000000000000000
*890000000000000000000000000000001100000000000000008a00000000000000000000000000
*00001100000000000000008b0000000000000000000000000000001100000000000000008c0000
*000000000000000000000000001100000000000000008d00000000000000000000000000000012
*00000000000000008e0000000000000000000000000000001200000000000000008f0000000000
*000000000000000000001300000000000000009000000000000000000000000000000014030000
*000000000091000000000000000000000000000000140000000000000000920000000000000000
*000000000000001400000000000000009300000000000000000000000000000015000000000000
*000094000000000000000000000000000000160300000000000000950000000000000000000000
*000000001601000000000000009500000000000000000000000000000016000000000000000096
*000000000000000000000000000000160300000000000000970000000000000000000000000000
*001601000000000000009700000000000000000000000000000016000000000000000098000000
*000000000000000000000000170300000000000000990000000000000000000000000000001803
*000000000000009a0000000000000000000000000000001903000000000000009b000000000000
*0000000000000000001901000000000000009c0000000000000000000000000000001901000000
*000000009b0000000000000000000000000000001901000000000000009d000000000000000000
*0000000000001903000000000000009e0000000000000000000000000000001901000000000000
*009e0000000000000000000000000000001900000000000000009f000000000000000000000000
*0000001a0300000000000000a00000000000000000000000000000001a0000000000000000a100
*00000000000000000000000000001a0000000000000000a2000000000000000000000000000000
*1b0000000000000000a30000000000000000000000000000001b0000000000000000a400000000
*00000000000000000000001c0300000000000000a50000000000000000000000000000001c0100
*000000000000a50000000000000000000000000000001c0000000000000000a600000000000000
*1d000000000000001e0000000000000000a7000000000000001d000000000000001e0000000000
*000000a8000000000000001d000000000000001e0000000000000000a9000000000000001d0000
*00000000001e0300000000000000aa000000000000001d000000000000001e0000000000000000
*ab000000000000001d000000000000001e0100000000000000ac000000000000001d0000000000
*00001e0300000000000000ac000000000000001d000000000000001e0000000000000000ad0000
*00000000001d000000000000001e010000000000000075000000000000001d000000000000001e
*030000000000000075000000000000001d000000000000001e0000000000000000ae0000000000
*00001d000000000000001e0100000000000000af000000000000001d000000000000001e030000
*0000000000af000000000000001d000000000000001e0000000000000000b0000000000000001d
*000000000000001e0100000000000000b1000000000000001d000000000000001e030000000000
*0000b1000000000000001d000000000000001e0000000000000000b2000000000000001d000000
*000000001e0100000000000000b3000000000000001d000000000000001e0300000000000000b3
*000000000000001d000000000000001e0000000000000000b4000000000000001d000000000000
*001e0100000000000000b5000000000000001d000000000000001e0300000000000000b5000000
*000000001d000000000000001e0000000000000000b6000000000000001d000000000000001e01
*00000000000000b7000000000000001d000000000000001e0300000000000000b7000000000000
*001d000000000000001e0000000000000000b8000000000000001d000000000000001e01000000
*00000000b9000000000000001d000000000000001e0300000000000000b9000000000000001d00
*000000000000ba0000000000000000bb000000000000001d000000000000002001000000000000
*00bc000000000000001d00000000000000200300000000000000bd000000000000001d00000000
*000000ba0000000000000000be000000000000001d00000000000000bf0000000000000000c000
*0000000000001d00000000000000bf0000000000000000c1000000000000001d00000000000000
*c20000000000000000c3000000000000001d00000000000000c20000000000000000c400000000
*0000001d00000000000000c20000000000000000c5000000000000001d00000000000000c20000
*000000000000c6000000000000001d00000000000000c70000000000000000c800000000000000
*1d00000000000000c20300000000000000c9000000000000001d00000000000000c20300000000
*000000ca000000000000001d00000000000000c70300000000000000cb000000000000001d0000
*0000000000cc0300000000000000cd000000000000001d00000000000000cc0000000000000000
*ce000000000000001d00000000000000cf0000000000000000d0000000000000001d0000000000
*0000cc0000000000000000d1000000000000001d00000000000000cc0000000000000000d20000
*00000000001d00000000000000cc0000000000000000d3000000000000001d00000000000000cc
*0000000000000000d4000000000000001d00000000000000cc0000000000000000d50000000000
*00001d00000000000000cc0000000000000000d6000000000000001d00000000000000cc000000
*0000000000d7000000000000001d00000000000000cc0000000000000000d8000000000000001d
*00000000000000cc0000000000000000d9000000000000001d00000000000000cc000000000000
*0000da000000000000001d00000000000000cc0000000000000000db000000000000001d000000
*00000000cc0000000000000000dc000000000000001d00000000000000cc0000000000000000dd
*000000000000001d00000000000000cc0000000000000000de000000000000001d000000000000
*00cc0000000000000000df000000000000001d00000000000000cc0000000000000000e0000000
*000000001d00000000000000cc0000000000000000e1000000000000001d00000000000000cc00
*00000000000000e2000000000000001d00000000000000cc0000000000000000e3000000000000
*001d00000000000000cc000000000000000081000000000000001d00000000000000cc00000000
*00000000e4000000000000001d00000000000000cc0000000000000000e5000000000000001d00
*000000000000cc0000000000000000e6000000000000001d00000000000000cc00000000000000
*0080000000000000001d00000000000000cc0000000000000000e7000000000000001d00000000
*000000cc0000000000000000e8000000000000001d00000000000000cc0000000000000000e900
*0000000000001d00000000000000cc0000000000000000ea000000000000001d00000000000000
*cc0000000000000000eb000000000000001d00000000000000cc0000000000000000ec00000000
*0000001d00000000000000c20000000000000000ed00000000000000ee00000000000000ef0000
*000000000000f000000000000000ee00000000000000ef0000000000000000f100000000000000
*ee00000000000000ef0000000000000000f200000000000000ee00000000000000ef0000000000
*000000f300000000000000ee00000000000000ef0000000000000000f400000000000000ee0000
*0000000000ef0100000000000000f500000000000000ee00000000000000ef0300000000000000
*f500000000000000ee00000000000000ef0000000000000000f600000000000000ee0000000000
*0000ef0100000000000000f700000000000000ee00000000000000ef0300000000000000f70000
*0000000000ee00000000000000f80000000000000000f900000000000000ee00000000000000f8
*0300000000000000fa00000000000000ee00000000000000f80000000000000000fb0000000000
*0000ee00000000000000f80300000000000000fc00000000000000ee00000000000000fd000000
*0000000000fe00000000000000ee00000000000000fd0000000000000000ff00000000000000ee
*00000000000000fd00000000000000010000000000000000ee00000000000000fd000000000000
*00010100000000000000ee00000000000000fd00000000000000010200000000000000ee000000
*00000000fd03000000000000010300000000000000ee00000000000001040000000000000000f0
*00000000000000ee00000000000001040000000000000000f100000000000000ee000000000000
*01040000000000000000f200000000000000ee00000000000001040000000000000000f3000000
*00000000ee00000000000001040000000000000000f400000000000000ee000000000000010401
*00000000000000f500000000000000ee00000000000001040300000000000000f5000000000000
*00ee00000000000001040000000000000000f600000000000000ee000000000000010401000000
*00000000f700000000000000ee00000000000001040300000000000000f7000000000000010500
*00000000000106030000000000000107000000000000001d000000000000010800000000000000
*0109000000000000001d000000000000010800000000000000010a000000000000001d00000000
*0000010800000000000000010b000000000000001d000000000000010c00000000000000010d00
*0000000000001d000000000000010c00000000000000010e000000000000001d00000000000001
*0c00000000000000010f000000000000001d000000000000010c03000000000000011000000000
*0000001d0000000000000111000000000000000112000000000000001d00000000000001110000
*00000000000113000000000000001d000000000000011100000000000000011400000000000000
*1d0000000000000111000000000000000115000000000000001d00000000000001110000000000
*00000116000000000000001d0000000000000111000000000000000117000000000000001d0000
*000000000111000000000000000118000000000000001d00000000000001110000000000000001
*19000000000000001d000000000000011100000000000000011a000000000000001d0000000000
*00011100000000000000011b000000000000001d000000000000011100000000000000011c0000
*00000000001d000000000000011103000000000000011d000000000000001d0000000000000111
*03000000000000011e000000000000011f00000000000001200300000000000001210000000000
*00011f0000000000000122000000000000000123000000000000011f0000000000000122000000
*000000000124000000000000011f0000000000000122000000000000000125000000000000011f
*0000000000000122000000000000000126000000000000011f0000000000000122000000000000
*000127000000000000011f0000000000000122000000000000000128000000000000011f000000
*0000000122000000000000000129000000000000011f000000000000012203000000000000012a
*000000000000011f000000000000012b00000000000000012c000000000000011f000000000000
*012b00000000000000012d000000000000011f000000000000012b00000000000000012e000000
*000000011f000000000000012b00000000000000012f000000000000011f000000000000012b00
*0000000000000130000000000000011f000000000000012b000000000000000131000000000000
*011f000000000000012b000000000000000132000000000000011f000000000000012b00000000
*0000000133000000000000011f000000000000012b000000000000000134000000000000011f00
*0000000000012b000000000000000135000000000000011f000000000000012b00000000000000
*0136000000000000011f000000000000012b030000000000000137000000000000011f00000000
*00000138000000000000000139000000000000001d000000000000013a00000000000000010b00
*0000000000001d000000000000013a00000000000000010a000000000000001d00000000000001
*3a00000000000000010f000000000000001d000000000000013a00000000000000013b00000000
*0000001d000000000000013a00000000000000013c000000000000001d000000000000013a0000
*0000000000010e000000000000001d000000000000013a00000000000000010d00000000000000
*1d000000000000013a03000000000000011000000000000000ee000000000000013d0000000000
*0000013e00000000000000ee000000000000013d00000000000000013f00000000000000ee0000
*00000000013d00000000000000014000000000000000ee000000000000013d0000000000000001
*4100000000000000ee000000000000013d00000000000000014200000000000000ee0000000000
*00013d00000000000000014300000000000000ee000000000000013d0000000000000001440000
*0000000000ee000000000000013d00000000000000014500000000000000ee000000000000013d
*00000000000000014600000000000000ee000000000000013d0100000000000001470000000000
*0000ee000000000000013d03000000000000014700000000000000ee000000000000013d000000
*00000000014800000000000000ee000000000000013d01000000000000014900000000000000ee
*000000000000013d03000000000000014900000000000000ee000000000000014a000000000000
*00014b00000000000000ee000000000000014a00000000000000014c00000000000000ee000000
*000000014a00000000000000014d00000000000000ee000000000000014a00000000000000014e
*00000000000000ee000000000000014a03000000000000014f00000000000000ee000000000000
*015000000000000000013e00000000000000ee000000000000015000000000000000013f000000
*00000000ee000000000000015000000000000000014000000000000000ee000000000000015000
*000000000000014100000000000000ee0000000000000150000000000000000142000000000000
*00ee000000000000015000000000000000014300000000000000ee000000000000015000000000
*000000014400000000000000ee000000000000015000000000000000014500000000000000ee00
*0000000000015000000000000000014600000000000000ee000000000000015001000000000000
*014700000000000000ee000000000000015003000000000000014700000000000000ee00000000
*0000015000000000000000014800000000000000ee000000000000015001000000000000014900
*000000000000ee000000000000015003000000000000014900000000000000ee00000000000001
*5100000000000000015200000000000000ee000000000000015100000000000000015300000000
*000000ee000000000000015100000000000000015400000000000000ee00000000000001510000
*0000000000015500000000000000ee000000000000015100000000000000015600000000000000
*ee000000000000015100000000000000015700000000000000ee00000000000001510000000000
*0000015800000000000000ee000000000000015100000000000000015900000000000000ee0000
*00000000015100000000000000015a00000000000000ee00000000000001510100000000000001
*5b00000000000000ee000000000000015103000000000000015b00000000000000ee0000000000
*00015100000000000000015c00000000000000ee000000000000015101000000000000015d0000
*0000000000ee000000000000015103000000000000015d00000000000000ee000000000000015e
*03000000000000015f00000000000000ee00000000000001600000000000000001610000000000
*0000ee000000000000016000000000000000016200000000000000ee0000000000000160000000
*00000000016300000000000000ee000000000000016003000000000000016400000000000000ee
*000000000000016500000000000000015200000000000000ee0000000000000165000000000000
*00015300000000000000ee000000000000016500000000000000015400000000000000ee000000
*000000016500000000000000015500000000000000ee0000000000000165000000000000000156
*00000000000000ee000000000000016500000000000000015700000000000000ee000000000000
*016500000000000000015800000000000000ee0000000000000165000000000000000159000000
*00000000ee000000000000016500000000000000015a00000000000000ee000000000000016501
*000000000000015b00000000000000ee000000000000016503000000000000015b000000000000
*00ee000000000000016500000000000000015c00000000000000ee000000000000016501000000
*000000015d00000000000000ee000000000000016503000000000000015d00000000000000ee00
*0000000000016600000000000000016700000000000000ee000000000000016600000000000000
*016800000000000000ee000000000000016600000000000000016900000000000000ee00000000
*0000016600000000000000016a00000000000000ee000000000000016600000000000000016b00
*000000000000ee000000000000016601000000000000016c00000000000000ee00000000000001
*6603000000000000016c00000000000000ee000000000000016600000000000000016d00000000
*000000ee000000000000016601000000000000016e00000000000000ee00000000000001660300
*0000000000016e000000000000001d000000000000016f00000000000000017000000000000000
*1d0000000000000108030000000000000171000000000000001d00000000000001080300000000
*00000172000000000000001d000000000000016f000000000000000173000000000000001d0000
*000000000108030000000000000174000000000000001d000000000000016f0000000000000001
*75000000000000001d000000000000016f000000000000000176000000000000001d0000000000
*00016f000000000000000177000000000000001d000000000000016f0000000000000001780000
*00000000001d000000000000016f000000000000000179000000000000001d000000000000016f
*00000000000000017a000000000000001d000000000000016f00000000000000017b0000000000
*00001d000000000000016f00000000000000017c000000000000001d000000000000016f000000
*00000000017d000000000000001d000000000000016f00000000000000017e000000000000001d
*000000000000016f00000000000000017f000000000000001d000000000000016f000000000000
*000180000000000000001d000000000000016f000000000000000181000000000000001d000000
*000000016f000000000000000182000000000000001d000000000000016f000000000000000183
*000000000000001d000000000000016f000000000000000184000000000000001d000000000000
*016f000000000000000185000000000000001d000000000000016f000000000000000186000000
*000000001d000000000000016f000000000000000187000000000000001d000000000000018800
*0000000000000189000000000000001d000000000000018800000000000000018a000000000000
*001d000000000000018800000000000000018b000000000000001d000000000000018800000000
*000000018c000000000000001d000000000000018800000000000000018d000000000000001d00
*0000000000018800000000000000018e000000000000001d000000000000018800000000000000
*018f000000000000001d0000000000000188000000000000000190000000000000001d00000000
*00000188000000000000000191000000000000001d000000000000018800000000000000019200
*0000000000001d0000000000000193000000000000000194000000000000001d00000000000001
*93000000000000000195000000000000001d000000000000019300000000000000019600000000
*0000001d0000000000000193000000000000000197000000000000001d00000000000001930000
*00000000000198000000000000001d000000000000019300000000000000019900000000000000
*1d000000000000019300000000000000019a000000000000001d00000000000001930000000000
*0000019b000000000000001d000000000000019300000000000000019c000000000000001d0000
*00000000019300000000000000019d000000000000001d00000000000001930000000000000001
*9e000000000000001d000000000000019300000000000000019f000000000000001d0000000000
*0001930000000000000001a0000000000000001d00000000000001930000000000000001a10000
*00000000001d00000000000001930000000000000001a2000000000000001d0000000000000193
*0000000000000001a3000000000000001d00000000000001930000000000000001a40000000000
*00001d00000000000001930000000000000001a5000000000000001d0000000000000193000000
*0000000001a6000000000000001d00000000000001930000000000000001a7000000000000001d
*00000000000001930000000000000001a8000000000000001d0000000000000193000000000000
*0001a9000000000000001d00000000000001930000000000000001aa000000000000001d000000
*00000001930000000000000001ab000000000000001d00000000000001930000000000000001ac
*000000000000001d00000000000001930300000000000001ad000000000000001d000000000000
*01930100000000000001ae000000000000001d00000000000001930100000000000001af000000
*000000001d00000000000001930100000000000001b0000000000000001d000000000000019303
*00000000000001b1000000000000001d00000000000001930000000000000001b2000000000000
*001d00000000000001930000000000000001b3000000000000001d000000000000019300000000
*00000001b4000000000000001d00000000000001080100000000000001b5000000000000001d00
*000000000001080100000000000001b6000000000000001d000000000000010801000000000000
*01b7000000000000001d00000000000001080300000000000001b8000000000000001d00000000
*000001080100000000000001b9000000000000001d00000000000001080100000000000001ba00
*0000000000001d00000000000001080100000000000001bb000000000000001d00000000000001
*080100000000000001bc000000000000001d00000000000001080300000000000001bd00000000
*000000ee00000000000001be0000000000000001bf00000000000000ee00000000000001be0100
*000000000001c000000000000000ee00000000000001be0300000000000001c000000000000000
*1d00000000000001c10300000000000001c2000000000000001d00000000000001c10100000000
*000001c3000000000000001d00000000000001c10100000000000001c400000000000001c50000
*0000000001c60300000000000001c700000000000001c500000000000001c60000000000000001
*c800000000000001c500000000000001c60100000000000001c700000000000000ee0000000000
*0001c90000000000000001ca00000000000000ee00000000000001c90000000000000001cb0000
*0000000000ee00000000000001c90000000000000001cc00000000000000ee00000000000001c9
*0000000000000001cd00000000000000ee00000000000001c90000000000000001ce0000000000
*0000ee00000000000001c90100000000000001cf00000000000000ee00000000000001c9030000
*0000000001cf00000000000000ee00000000000001c90000000000000001d000000000000000ee
*00000000000001c90100000000000001d100000000000000ee00000000000001c9030000000000
*0001d100000000000000ee00000000000001d20000000000000001d300000000000000ee000000
*00000001d20300000000000001d4000000000000001d00000000000001d50300000000000001d6
*000000000000001d00000000000000300300000000000001d7000000000000001d000000000000
*01d80000000000000001d9000000000000001d00000000000001d80000000000000001da000000
*000000001d00000000000001d80000000000000001db000000000000001d00000000000001d803
*00000000000001dc000000000000001d00000000000001d80000000000000001dd000000000000
*001d00000000000001d80000000000000001de000000000000001d00000000000001d803000000
*00000001df00000000000001e0000000000000000d6d6f6e6f6964732d302e312e320000000000
*000013446174612e4d6f6e6f69642e526564756365720000000000000018446174612e4d6f6e6f
*69642e526564756365722e436861720000000000000018446174612e4d6f6e6f69642e52656475
*6365722e576974680000000000000010446174612e4d6f6e6f69642e556e697400000000000000
*0f446174612e4d6f6e6f69642e4f72640000000000000011446174612e4d6f6e6f69642e4d6f6e
*6164000000000000000f446174612e4d6f6e6f69642e4d61700000000000000020446174612e4d
*6f6e6f69642e4c65786963616c2e555446382e4465636f6465720000000000000022446174612e
*4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f6e00000000000000124461
*74612e4d6f6e6f69642e496e744d61700000000000000015446174612e4d6f6e6f69642e47656e
*657261746f720000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f726473
*0000000000000019446174612e4d6f6e6f69642e526564756365722e5375676172000000000000
*0016446174612e4d6f6e6f69642e46726f6d537472696e670000000000000017446174612e4d6f
*6e6f69642e43617465676f726963616c0000000000000017446174612e4d6f6e6f69642e417070
*6c696361746976650000000000000021446174612e4d6f6e6f69642e47656e657261746f722e43
*6f6d62696e61746f72730000000000000014446174612e4d6f6e6f69642e416464697469766500
*0000000000001a446174612e4d6f6e6f69642e41646469746976652e5375676172000000000000
*001a446174612e4d6f6e6f69642e4d756c7469706c696361746976650000000000000020446174
*612e4d6f6e6f69642e4d756c7469706c696361746976652e537567617200000000000000264461
*74612e4d6f6e6f69642e4d756c7469706c696361746976652e5472616e73666f726d6572000000
*0000000013446174612e52696e672e53656d692e4e656172000000000000000e446174612e5269
*6e672e53656d690000000000000012446174612e52696e672e53656d692e4f7264000000000000
*000a446174612e47726f75700000000000000010446174612e47726f75702e5375676172000000
*0000000011446174612e52696e672e46726f6d4e756d0000000000000004626173650000000000
*00000b446174612e4d6f6e6f69640000000000000008446174612e4f7264000000000000000a44
*6174612e4d6179626500000000000000075072656c756465000000000000001f446174612e4d6f
*6e6f69642e4d6f6e61642e5772697465722e537472696374000000000000001d446174612e4d6f
*6e6f69642e4d6f6e61642e5772697465722e4c617a79000000000000001b446174612e4d6f6e6f
*69642e4d6f6e61642e53542e5374726963740000000000000015446174612e4d6f6e6f69642e4d
*6f6e61642e53544d0000000000000019446174612e4d6f6e6f69642e4d6f6e61642e53542e4c61
*7a79000000000000001e446174612e4d6f6e6f69642e4d6f6e61642e53746174652e5374726963
*74000000000000001c446174612e4d6f6e6f69642e4d6f6e61642e53746174652e4c617a790000
*00000000001c446174612e4d6f6e6f69642e4d6f6e61642e5257532e5374726963740000000000
*00001a446174612e4d6f6e6f69642e4d6f6e61642e5257532e4c617a7900000000000000184461
*74612e4d6f6e6f69642e4d6f6e61642e5265616465720000000000000014446174612e4d6f6e6f
*69642e4d6f6e61642e494f000000000000001a446174612e4d6f6e6f69642e4d6f6e61642e4964
*656e746974790000000000000018446174612e4d6f6e6f69642e4d6f6e61642e45697468657200
*00000000000016446174612e4d6f6e6f69642e4d6f6e61642e436f6e740000000000000010436f
*6e74726f6c2e43617465676f7279000000000000000f446174612e52696e672e53756761720000
*000000000009446174612e52696e67000000000000000752656475636572000000000000000475
*6e69740000000000000004736e6f630000000000000004636f6e73000000000000000d666f6c64
*4d6170526564756365000000000000000a666f6c64526564756365000000000000000b43686172
*52656475636572000000000000000866726f6d43686172000000000000000b696e76616c696443
*686172000000000000000b5769746852656475636572000000000000000e72756e576974685265
*6475636572000000000000000e776974686f7574526564756365720000000000000004556e6974
*0000000000000007676574556e6974000000000000000b4d696e5072696f726974790000000000
*00000e6765744d696e5072696f72697479000000000000000b4d61785072696f72697479000000
*000000000e6765744d61785072696f7269747900000000000000034d696e000000000000000667
*65744d696e00000000000000034d617800000000000000066765744d6178000000000000000a41
*6374696f6e57697468000000000000000d676574416374696f6e5769746800000000000000084d
*6f6e616453756d000000000000000b6765744d6f6e616453756d0000000000000006416374696f
*6e0000000000000009676574416374696f6e0000000000000009556e696f6e5769746800000000
*0000000c676574556e696f6e57697468000000000000000455544638000000000000000772756e
*55544638000000000000000e536f75726365506f736974696f6e000000000000000c536f757263
*65436f6c756d6e000000000000000a536f757263654c696e65000000000000000b73746172744f
*6646696c65000000000000000c736f75726365436f6c756d6e000000000000000a736f75726365
*4c696e65000000000000001273686f77536f75726365506f736974696f6e000000000000000656
*616c756573000000000000000967657456616c75657300000000000000044b6579730000000000
*0000076765744b6579730000000000000005436861723800000000000000086765744368617238
*000000000000000947656e657261746f720000000000000004456c656d00000000000000096d61
*7052656475636500000000000000056d6170546f00000000000000076d617046726f6d00000000
*000000067265647563650000000000000007556e6c696e6564000000000000000a72756e556e6c
*696e65640000000000000008556e737061636564000000000000000b72756e556e737061636564
*00000000000000054c696e65730000000000000005576f726473000000000000000872756e576f
*726473000000000000000872756e4c696e65730000000000000009776f72647346726f6d000000
*00000000096c696e657346726f6d000000000000000b66726f6d496e7465676572000000000000
*000a66726f6d537472696e67000000000000000a46726f6d537472696e67000000000000000d67
*657446726f6d537472696e6700000000000000034d6f6e0000000000000004456e646f00000000
*00000007676574456e646f000000000000000672756e4d6f6e000000000000000d547261766572
*73616c57697468000000000000001067657454726176657273616c576974680000000000000009
*416c7465726e617465000000000000000c676574416c7465726e61746500000000000000095472
*6176657273616c000000000000000c67657454726176657273616c000000000000000974726176
*657273655f0000000000000004666f725f00000000000000056d61704d5f000000000000000566
*6f724d5f0000000000000008666f6c644d6170270000000000000009636f6e6361744d61700000
*000000000003616e6400000000000000026f720000000000000003616e79000000000000000361
*6c6c000000000000000373756d000000000000000770726f647563740000000000000004656c65
*6d00000000000000076e6f74456c656d000000000000000666696c746572000000000000000466
*696e640000000000000004706c757300000000000000047a65726f00000000000000012b000000
*00000000144d756c7469706c696361746976654d6f6e6f696400000000000000036f6e65000000
*000000000574696d657300000000000000012a0000000000000003457870000000000000000667
*657445787000000000000000034c6f6700000000000000066765744c6f67000000000000000c53
*656d696e65617272696e67000000000000000853656d6972696e6700000000000000085072696f
*7269747900000000000000084d6178426f756e6400000000000000084d696e426f756e64000000
*00000000054f7264657200000000000000086765744f72646572000000000000000547726f7570
*0000000000000007676e656761746500000000000000056d696e757300000000000000012d0000
*0000000000066e6567617465000000000000000746726f6d4e756d000000000000000a67657446
*726f6d4e756d00000000000000076d617070656e6400000000000000076d636f6e636174000000
*00000000066d656d70747900000000000000064d6f6e6f69640000000000000007676574447561
*6c00000000000000044475616c0000000000000007617070456e646f0000000000000006676574
*416c6c0000000000000003416c6c0000000000000006676574416e790000000000000003416e79
*000000000000000667657453756d000000000000000353756d000000000000000a67657450726f
*64756374000000000000000750726f647563740000000000000008676574466972737400000000
*00000005466972737400000000000000076765744c61737400000000000000044c617374000000
*000000000b4748432e436c617373657300000000000000036d696e00000000000000074e6f7468
*696e6700000000000000054d6179626500000000000000036d617800000000000000084748432e
*456e756d00000000000000086d6178426f756e6400000000000000086d696e426f756e64000000
*00000000084748432e4261736500000000000000046661696c00000000000000033e3e3d000000
*00000000023e3e000000000000000672657475726e0000000000000011436f6e74726f6c2e4d6f
*6e61642e46697800000000000000046d66697800000000000000054d6f6e616400000000000000
*0746756e63746f7200000000000000084d6f6e6164466978000000000000000d436f6e74726f6c
*2e4d6f6e616400000000000000094d6f6e6164506c75730000000000000005666f6c644d000000
*000000000d446174612e46756e6374696f6e000000000000000366697800000000000000026170
*00000000000000066c6966744d3500000000000000066c6966744d3400000000000000066c6966
*744d3300000000000000066c6966744d3200000000000000056c6966744d000000000000000675
*6e6c65737300000000000000047768656e000000000000000b7265706c69636174654d5f000000
*000000000a7265706c69636174654d0000000000000006666f6c644d5f00000000000000097a69
*70576974684d5f00000000000000087a6970576974684d000000000000000c6d6170416e64556e
*7a69704d00000000000000046a6f696e0000000000000007666f72657665720000000000000003
*3c3d3c00000000000000033e3d3e00000000000000046d73756d0000000000000004666f724d00
*0000000000000766696c7465724d0000000000000005677561726400000000000000046d61704d
*000000000000000973657175656e63655f000000000000000873657175656e6365000000000000
*00033d3c3c00000000000000056d706c757300000000000000056d7a65726f0000000000000004
*666d6170000000000000000b6d746c2d312e312e302e32000000000000001b436f6e74726f6c2e
*4d6f6e61642e5772697465722e537472696374000000000000000a6d6170577269746572540000
*00000000000b657865635772697465725400000000000000096d61705772697465720000000000
*00000a65786563577269746572000000000000000972756e577269746572000000000000000657
*7269746572000000000000000a72756e5772697465725400000000000000075772697465725400
*00000000000013436f6e74726f6c2e4d6f6e61642e5472616e7300000000000000046c69667400
*0000000000000a4d6f6e61645472616e7300000000000000066c696674494f0000000000000007
*4d6f6e6164494f000000000000001a436f6e74726f6c2e4d6f6e61642e5772697465722e436c61
*7373000000000000000663656e736f7200000000000000076c697374656e730000000000000004
*7061737300000000000000066c697374656e000000000000000474656c6c000000000000000b4d
*6f6e61645772697465720000000000000019436f6e74726f6c2e4d6f6e61642e5772697465722e
*4c617a7900000000000000086768632d7072696d00000000000000084748432e5072696d000000
*00000000095265616c576f726c64000000000000000a4748432e494f4261736500000000000000
*0c756e736166655354546f494f000000000000000c756e73616665494f546f5354000000000000
*00067374546f494f00000000000000064748432e5354000000000000000572756e535400000000
*0000000566697853540000000000000012756e73616665496e7465726c65617665535400000000
*00000002535400000000000000084748432e436f6e63000000000000000d726567697374657244
*656c61790000000000000009777269746554566172000000000000000872656164545661720000
*0000000000096e657754566172494f00000000000000076e657754566172000000000000000661
*6c77617973000000000000000e616c776179735375636365656473000000000000000863617463
*6853544d00000000000000066f72456c736500000000000000057265747279000000000000000a
*61746f6d6963616c6c79000000000000000353544d000000000000000454566172000000000000
*000b73746d2d322e312e312e32000000000000001d436f6e74726f6c2e436f6e63757272656e74
*2e53544d2e5441727261790000000000000006544172726179000000000000001c436f6e74726f
*6c2e436f6e63757272656e742e53544d2e544368616e000000000000000c6973456d7074795443
*68616e000000000000000a756e476574544368616e0000000000000008647570544368616e0000
*00000000000972656164544368616e000000000000000a7772697465544368616e000000000000
*000a6e6577544368616e494f00000000000000086e6577544368616e0000000000000005544368
*616e000000000000001c436f6e74726f6c2e436f6e63757272656e742e53544d2e544d56617200
*0000000000000c6973456d707479544d566172000000000000000973776170544d566172000000
*000000000972656164544d566172000000000000000b747279507574544d566172000000000000
*0008707574544d566172000000000000000c74727954616b65544d566172000000000000000974
*616b65544d566172000000000000000f6e6577456d707479544d566172494f000000000000000d
*6e6577456d707479544d566172000000000000000a6e6577544d566172494f0000000000000008
*6e6577544d5661720000000000000005544d5661720000000000000011436f6e74726f6c2e4d6f
*6e61642e53544d0000000000000005636865636b0000000000000015436f6e74726f6c2e4d6f6e
*61642e53542e4c617a79000000000000000e6c617a79546f537472696374535400000000000000
*0e737472696374546f4c617a795354000000000000001a436f6e74726f6c2e4d6f6e61642e5374
*6174652e537472696374000000000000000a7769746853746174655400000000000000096d6170
*537461746554000000000000000a65786563537461746554000000000000000a6576616c537461
*746554000000000000000977697468537461746500000000000000086d61705374617465000000
*000000000965786563537461746500000000000000096576616c53746174650000000000000008
*72756e537461746500000000000000055374617465000000000000000972756e53746174655400
*000000000000065374617465540000000000000019436f6e74726f6c2e4d6f6e61642e53746174
*652e436c61737300000000000000046765747300000000000000066d6f64696679000000000000
*00037075740000000000000003676574000000000000000a4d6f6e616453746174650000000000
*000018436f6e74726f6c2e4d6f6e61642e53746174652e4c617a790000000000000018436f6e74
*726f6c2e4d6f6e61642e5257532e53747269637400000000000000087769746852575354000000
*00000000076d617052575354000000000000000865786563525753540000000000000008657661
*6c5257535400000000000000077769746852575300000000000000066d61705257530000000000
*0000076578656352575300000000000000076576616c525753000000000000000672756e525753
*0000000000000003525753000000000000000772756e5257535400000000000000045257535400
*00000000000017436f6e74726f6c2e4d6f6e61642e5257532e436c61737300000000000000084d
*6f6e6164525753000000000000001a436f6e74726f6c2e4d6f6e61642e5265616465722e436c61
*7373000000000000000461736b7300000000000000056c6f63616c000000000000000361736b00
*0000000000000b4d6f6e61645265616465720000000000000016436f6e74726f6c2e4d6f6e6164
*2e5257532e4c617a790000000000000014436f6e74726f6c2e4d6f6e61642e5265616465720000
*00000000000b7769746852656164657254000000000000000a6d61705265616465725400000000
*0000000a7769746852656164657200000000000000096d61705265616465720000000000000009
*72756e5265616465720000000000000006526561646572000000000000000a72756e5265616465
*7254000000000000000752656164657254000000000000000953797374656d2e494f0000000000
*0000057072696e740000000000000002494f000000000000000846696c65506174680000000000
*0000087265616446696c65000000000000000648616e646c6500000000000000126f70656e4269
*6e61727954656d7046696c65000000000000000c6f70656e54656d7046696c6500000000000000
*05666978494f000000000000000e7769746842696e61727946696c650000000000000008776974
*6846696c650000000000000006685072696e740000000000000009685075745374724c6e000000
*0000000006685265616479000000000000000672656164494f0000000000000006726561644c6e
*000000000000000a617070656e6446696c650000000000000009777269746546696c6500000000
*00000008696e746572616374000000000000000b676574436f6e74656e74730000000000000007
*6765744c696e6500000000000000076765744368617200000000000000087075745374724c6e00
*000000000000067075745374720000000000000007707574436861720000000000000006474843
*2e494f0000000000000012684765744275664e6f6e426c6f636b696e6700000000000000076847
*65744275660000000000000012685075744275664e6f6e426c6f636b696e670000000000000007
*685075744275660000000000000007685075745374720000000000000008685075744368617200
*0000000000000c68476574436f6e74656e74730000000000000008684765744c696e6500000000
*000000086847657443686172000000000000000d6857616974466f72496e707574000000000000
*000a4748432e48616e646c6500000000000000056853686f77000000000000000e685365744269
*6e6172794d6f646500000000000000116849735465726d696e616c446576696365000000000000
*0008684765744563686f0000000000000008685365744563686f000000000000000b6849735365
*656b61626c65000000000000000d68476574427566666572696e67000000000000000b68497357
*72697461626c65000000000000000b6849735265616461626c650000000000000009684973436c
*6f73656400000000000000076849734f70656e00000000000000056854656c6c00000000000000
*05685365656b000000000000000868536574506f736e000000000000000868476574506f736e00
*0000000000000d68536574427566666572696e67000000000000000a684c6f6f6b416865616400
*000000000000056973454f460000000000000006684973454f46000000000000000c6853657446
*696c6553697a6500000000000000096846696c6553697a65000000000000000668436c6f736500
*0000000000000e6f70656e42696e61727946696c6500000000000000086f70656e46696c650000
*000000000005737464696e000000000000000a48616e646c65506f736e000000000000000c4162
*736f6c7574655365656b000000000000000c52656c61746976655365656b000000000000000b53
*65656b46726f6d456e6400000000000000085365656b4d6f646500000000000000067374646f75
*740000000000000006737464657272000000000000000668466c757368000000000000000b4e6f
*427566666572696e67000000000000000d4c696e65427566666572696e67000000000000000e42
*6c6f636b427566666572696e67000000000000000a4275666665724d6f64650000000000000008
*526561644d6f6465000000000000000957726974654d6f6465000000000000000a417070656e64
*4d6f6465000000000000000d5265616457726974654d6f64650000000000000006494f4d6f6465
*0000000000000016436f6e74726f6c2e4d6f6e61642e4964656e74697479000000000000000b72
*756e4964656e7469747900000000000000084964656e74697479000000000000000b446174612e
*456974686572000000000000000645697468657200000000000000044c65667400000000000000
*055269676874000000000000001663617465676f72792d6578747261732d302e35332e35000000
*0000000014436f6e74726f6c2e4d6f6e61642e4569746865720000000000000007456974686572
*54000000000000000a72756e456974686572540000000000000012436f6e74726f6c2e4d6f6e61
*642e436f6e74000000000000000977697468436f6e745400000000000000086d6170436f6e7454
*000000000000000877697468436f6e7400000000000000076d6170436f6e740000000000000007
*72756e436f6e740000000000000004436f6e74000000000000000872756e436f6e745400000000
*00000005436f6e74540000000000000018436f6e74726f6c2e4d6f6e61642e436f6e742e436c61
*7373000000000000000663616c6c434300000000000000094d6f6e6164436f6e74000000000000
*000b446174612e537472696e6700000000000000084973537472696e6700000000000000084361
*7465676f72790000000000000013436f6e74726f6c2e4170706c69636174697665000000000000
*00066c696674413200000000000000022a3e000000000000000470757265000000000000000b41
*70706c6963617469766500000000000000033c7c3e0000000000000005656d7074790000000000
*00000b416c7465726e6174697665
newhex
*
rmfile ./dist/doc/html/monoids/monoids.haddock
binary ./dist/doc/html/monoids/plus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002148c8f
*a00bb6b29c82ca897b5b7871cfce74085200003b
newhex
*
rmfile ./dist/doc/html/monoids/plus.gif
hunk ./dist/doc/html/monoids/src/Data-Group-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Group/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>negate</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>negate</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>7</span> <span class='hs-comment'>-</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span>
-<a name="line-15"></a><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minus</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="negate"></a><span class='hs-definition'>negate</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span>
-<a name="line-18"></a><span class='hs-definition'>negate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>gnegate</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Group-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Group.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Group.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span> 
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Group</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>gnegate</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>minus</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>6</span> <span class='hs-varop'>`minus`</span>
-<a name="line-13"></a>
-<a name="line-14"></a><a name="Group"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-comment'>-- additive inverse</span>
-<a name="line-16"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-17"></a>
-<a name="line-18"></a>    <span class='hs-comment'>-- right cancellation</span>
-<a name="line-19"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-20"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>gnegate</span> <span class='hs-varid'>b</span> 
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span> <span class='hs-varop'>.</span> <span class='hs-varid'>negate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getSum</span>
-<a name="line-24"></a>    <span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>Sum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-comment'>-</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>    
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Fractional</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span> <span class='hs-varop'>.</span> <span class='hs-varid'>negate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getProduct</span>
-<a name="line-28"></a>    <span class='hs-conid'>Product</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>Product</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>/</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>    
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Dual</span> <span class='hs-varop'>.</span> <span class='hs-varid'>gnegate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getDual</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-34"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>gnegate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runIdentity</span>
-<a name="line-35"></a>    <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-38"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varop'>.</span> <span class='hs-varid'>gnegate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getFromString</span>
-<a name="line-39"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Group.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Additive-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Additive/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>6</span> <span class='hs-varop'>+</span> 
-<a name="line-10"></a>
-<a name="line-11"></a><a name="+"></a><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-12"></a><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Additive-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Additive.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Additive.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> 
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>plus</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>zero</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>6</span> <span class='hs-varop'>`plus`</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="plus"></a><span class='hs-definition'>plus</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-12"></a><span class='hs-definition'>plus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-13"></a>
-<a name="line-14"></a><a name="zero"></a><span class='hs-definition'>zero</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-15"></a><span class='hs-definition'>zero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Additive.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Applicative.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Traversal</span><span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span><span class='hs-layout'>,</span><span class='hs-varid'>getTraversal</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Alternate</span><span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span><span class='hs-layout'>,</span><span class='hs-varid'>getAlternate</span><span class='hs-layout'>)</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>TraversalWith</span><span class='hs-layout'>(</span><span class='hs-conid'>TraversalWith</span><span class='hs-layout'>,</span><span class='hs-varid'>getTraversalWith</span><span class='hs-layout'>)</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span> <span class='hs-varid'>point</span><span class='hs-layout'>)</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span> <span class='hs-varid'>empty</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>liftA2</span><span class='hs-layout'>)</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-13"></a>
-<a name="line-14"></a><a name="Traversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="snocTraversal"></a><span class='hs-comment'>{-# RULES "unitTraversal" unit = Traversal #-}</span>
-<a name="line-27"></a><span class='hs-comment'>{-# RULES "snocTraversal" snoc = snocTraversal #-}</span>
-<a name="line-28"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span>
-<a name="line-29"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Traversal</span>
-<a name="line-30"></a>
-<a name="line-31"></a><a name="Alternate"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAlternate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-32"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span> 
-<a name="line-36"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span>
-<a name="line-40"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-41"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
-<a name="line-45"></a>
-<a name="line-46"></a><a name="TraversalWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversalWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>n</span> <span class='hs-layout'>}</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>    <span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>
-<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-53"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-56"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-varop'>.</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getTraversalWith</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Pointed</span> <span class='hs-layout'>(</span><span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-59"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-varop'>.</span> <span class='hs-varid'>point</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Categorical.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Categorical.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE GADTs #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Categorical</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Endo</span><span class='hs-layout'>(</span><span class='hs-conid'>Endo</span><span class='hs-layout'>,</span> <span class='hs-varid'>getEndo</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Mon</span><span class='hs-layout'>(</span><span class='hs-conid'>Mon</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runMon</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> 
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="Endo"></a><span class='hs-comment'>-- | The 'Monoid' of endomorphisms over some object in an arbitrary 'Category'</span>
-<a name="line-14"></a><a name="Endo"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getEndo</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>id</span>
-<a name="line-18"></a>    <span class='hs-conid'>Endo</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Endo</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-comment'>-- | A 'Monoid' is just a 'Category' with one object. </span>
-<a name="line-21"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-varid'>o</span> <span class='hs-keyword'>where</span>
-<a name="line-22"></a>    <span class='hs-conid'>Mon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="runMon"></a><span class='hs-definition'>runMon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-25"></a><span class='hs-definition'>runMon</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Category</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>    <span class='hs-varid'>id</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>mempty</span>
-<a name="line-29"></a>    <span class='hs-conid'>Mon</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Categorical.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-FromString.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/FromString.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleContexts, FlexibleInstances, MultiParamTypeClasses, UndecidableInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>FromString</span><span class='hs-layout'>(</span><span class='hs-conid'>FromString</span><span class='hs-layout'>,</span><span class='hs-varid'>getFromString</span><span class='hs-layout'>)</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Exts</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="FromString"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getFromString</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>mempty</span>
-<a name="line-15"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>FromString</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>FromString</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getFromString</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>FromString</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-FromString.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator-Combinators.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator/Combinators.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies, ScopedTypeVariables #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>traverse_</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>for_</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapM_</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>forM_</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMap'</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>and</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>or</span>
-<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>any</span>
-<a name="line-13"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>all</span>
-<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
-<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>find</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>)</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>forM_</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="traverse_"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-29"></a><span class='hs-definition'>traverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-30"></a>    
-<a name="line-31"></a><a name="for_"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-32"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
-<a name="line-33"></a>
-<a name="line-34"></a><a name="mapM_"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-35"></a><span class='hs-definition'>mapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="forM_"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-38"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="foldMap'"></a><span class='hs-definition'>foldMap'</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-41"></a><span class='hs-definition'>foldMap'</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-42"></a>
-<a name="line-43"></a><a name="concatMap"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-44"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap'</span>
-<a name="line-45"></a>
-<a name="line-46"></a><a name="and"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-47"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-48"></a>
-<a name="line-49"></a><a name="or"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-50"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-51"></a>
-<a name="line-52"></a><a name="any"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-53"></a><span class='hs-definition'>any</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-54"></a>
-<a name="line-55"></a><a name="all"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-56"></a><span class='hs-definition'>all</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-57"></a>
-<a name="line-58"></a><a name="sum"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-59"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSum</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-60"></a>
-<a name="line-61"></a><a name="product"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-62"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getProduct</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-63"></a>
-<a name="line-64"></a><a name="elem"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-65"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
-<a name="line-66"></a>
-<a name="line-67"></a><a name="notElem"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-68"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
-<a name="line-69"></a>
-<a name="line-70"></a><a name="filter"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-71"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap'</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-72"></a>    <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span>
-<a name="line-73"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-74"></a>
-<a name="line-75"></a><a name="find"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-76"></a><span class='hs-definition'>find</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getFirst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-varid'>p</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Generator-Combinators.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Keys</span><span class='hs-layout'>(</span><span class='hs-conid'>Keys</span><span class='hs-layout'>,</span> <span class='hs-varid'>getKeys</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Values</span><span class='hs-layout'>(</span><span class='hs-conid'>Values</span><span class='hs-layout'>,</span> <span class='hs-varid'>getValues</span><span class='hs-layout'>)</span>
-<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>(</span><span class='hs-conid'>Char8</span><span class='hs-layout'>,</span> <span class='hs-varid'>getChar8</span><span class='hs-layout'>)</span>
-<a name="line-13"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict8</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy8</span> <span class='hs-layout'>(</span><span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
-<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
-<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
-<a name="line-39"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-41"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-42"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-43"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-44"></a>
-<a name="line-45"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-46"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-47"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-48"></a>
-<a name="line-49"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-50"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-51"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-55"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
-<a name="line-56"></a>
-<a name="line-57"></a><a name="Char8"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Char8</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char8</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getChar8</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-58"></a>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-61"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict8</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-65"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy8</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
-<a name="line-66"></a>
-<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-68"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-69"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-70"></a>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-72"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-73"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-74"></a>
-<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-76"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
-<a name="line-77"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-78"></a>
-<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-80"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-81"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>
-<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
-<a name="line-84"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-85"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-89"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-90"></a>
-<a name="line-91"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-92"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
-<a name="line-93"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-94"></a>
-<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-96"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> 
-<a name="line-97"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-98"></a>
-<a name="line-99"></a><a name="Keys"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Keys</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Keys</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKeys</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-100"></a>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-102"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-103"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span>
-<a name="line-107"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-108"></a>
-<a name="line-109"></a><a name="Values"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Values</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Values</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getValues</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-110"></a>
-<a name="line-111"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-112"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-113"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-114"></a>
-<a name="line-115"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-116"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-117"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-118"></a>
-<a name="line-119"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
-<a name="line-120"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
-<a name="line-121"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Strict.ByteString -&gt; m #-}</span>
-<a name="line-122"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Lazy.ByteString -&gt; m #-}</span>
-<a name="line-123"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (c `Reducer` m) =&gt; [c] -&gt; m #-}</span>
-<a name="line-124"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Generator (FingerTree v e), e `Reducer` m) =&gt; FingerTree v e -&gt; m #-}</span>
-<a name="line-125"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
-<a name="line-126"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (e `Reducer` m) =&gt; Seq e -&gt; m #-}</span>
-<a name="line-127"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; IntSet -&gt; m #-}</span>
-<a name="line-128"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (a `Reducer` m) =&gt; Set a -&gt; m #-}</span>
-<a name="line-129"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((Int,v) `Reducer` m) =&gt; IntMap v -&gt; m #-}</span>
-<a name="line-130"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((k,v) `Reducer` m) =&gt; Map k v -&gt; m #-}</span>
-<a name="line-131"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; Keys (IntMap v) -&gt; m #-}</span>
-<a name="line-132"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (k `Reducer` m) =&gt; Keys (Map k v) -&gt; m #-}</span>
-<a name="line-133"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (IntMap v) -&gt; m #-}</span>
-<a name="line-134"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (Map k v) -&gt; m #-}</span>
-<a name="line-135"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-136"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/IntMap.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
-<a name="line-14"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/SourcePosition.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>SourcePosition</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourcePosition</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceLine</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceColumn</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>startOfFile</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>showSourcePosition</span>
-<a name="line-11"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>lex</span><span class='hs-layout'>)</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Extras</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-17"></a>
-<a name="line-18"></a><a name="SourceLine"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceLine</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-19"></a><a name="SourceColumn"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceColumn</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-20"></a>
-<a name="line-21"></a><a name="SourcePosition"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>file</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-22"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Lines</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-23"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Columns</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-24"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Tab</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-comment'>-- cols before and after an unresolved tab</span>
-<a name="line-25"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Eq</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="nextTab"></a><span class='hs-definition'>nextTab</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-28"></a><span class='hs-definition'>nextTab</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-layout'>(</span><span class='hs-num'>8</span> <span class='hs-comment'>-</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-comment'>-</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mod`</span> <span class='hs-num'>8</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-32"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-33"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span>
-<a name="line-34"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorZero</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>fzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorPlus</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-varid'>fplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>0</span>
-<a name="line-47"></a>
-<a name="line-48"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-49"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-52"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>y</span>
-<a name="line-56"></a>    <span class='hs-conid'>Tab</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>
-<a name="line-57"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x'</span> <span class='hs-varid'>y'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>    <span class='hs-keyword'>_</span>         <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pos</span>
-<a name="line-60"></a>
-<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-62"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-63"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-num'>0</span> <span class='hs-num'>0</span> 
-<a name="line-64"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>1</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span>
-<a name="line-67"></a>    
-<a name="line-68"></a><a name="startOfFile"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span>
-<a name="line-69"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span>
-<a name="line-70"></a>
-<a name="line-71"></a><a name="sourceColumn"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-72"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-73"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-74"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-75"></a>
-<a name="line-76"></a><a name="sourceLine"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-77"></a><span class='hs-definition'>sourceLine</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>l</span>
-<a name="line-78"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-79"></a>
-<a name="line-80"></a><a name="showSourcePosition"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-81"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-str'>"-"</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>c</span>
-<a name="line-83"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/UTF8/Decoder.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>UTF8</span><span class='hs-varop'>.</span><span class='hs-conid'>Decoder</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UTF8</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runUTF8</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>    
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Bits</span> <span class='hs-layout'>(</span><span class='hs-varid'>shiftL</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.&amp;.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.|.</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-comment'>-- Incrementally reduce canonical RFC3629 UTF-8 Characters</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="H"></a><span class='hs-comment'>-- utf8 characters are at most 4 characters long, so we need only retain state for 3 of them</span>
-<a name="line-18"></a><a name="H"></a><span class='hs-comment'>-- moreover their length is able to be determined a priori, so lets store that intrinsically in the constructor</span>
-<a name="line-19"></a><a name="H"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>H0</span>
-<a name="line-20"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H2_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> 
-<a name="line-21"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-22"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-23"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-24"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-25"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_3</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="T"></a><span class='hs-comment'>-- words expressing the tail of a character, each between 0x80 and 0xbf</span>
-<a name="line-28"></a><a name="T"></a><span class='hs-comment'>-- this is arbitrary length to simplify making the parser truly monoidal</span>
-<a name="line-29"></a><a name="T"></a><span class='hs-comment'>-- this probably means we have O(n^2) worst case performance in the face of very long runs of chars that look like 10xxxxxx</span>
-<a name="line-30"></a><a name="T"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span>
-<a name="line-31"></a>
-<a name="line-32"></a><a name="UTF8"></a><span class='hs-comment'>-- S is a segment that contains a possible tail of a character, the result of reducing some full characters, and the start of another character</span>
-<a name="line-33"></a><a name="UTF8"></a><span class='hs-comment'>-- T contains a list of bytes each between 0x80 and 0xbf</span>
-<a name="line-34"></a><a name="UTF8"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>T</span> <span class='hs-varid'>m</span> <span class='hs-varop'>!</span><span class='hs-conid'>H</span>
-<a name="line-35"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-conid'>T</span> <span class='hs-conid'>T</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="flushH"></a><span class='hs-comment'>-- flush any extra characters in a head, when the next character isn't between 0x80 and 0xbf</span>
-<a name="line-38"></a><span class='hs-definition'>flushH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-39"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-40"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-41"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-42"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-43"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-44"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-45"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
-<a name="line-46"></a>
-<a name="line-47"></a><a name="flushT"></a><span class='hs-comment'>-- flush a character tail </span>
-<a name="line-48"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-49"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="snocH"></a><span class='hs-definition'>snocH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-52"></a><span class='hs-definition'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-53"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-54"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-55"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-56"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-57"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-59"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span>
-<a name="line-60"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-61"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-62"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-63"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-64"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-65"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-66"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-67"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-68"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-69"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-70"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-71"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-72"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-74"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-75"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-76"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-77"></a>
-<a name="line-78"></a><a name="mask"></a><span class='hs-definition'>mask</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-79"></a><span class='hs-definition'>mask</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
-<a name="line-80"></a>
-<a name="line-81"></a><a name="combine"></a><span class='hs-definition'>combine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-82"></a><span class='hs-definition'>combine</span> <span class='hs-varid'>a</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>shiftL</span> <span class='hs-varid'>a</span> <span class='hs-num'>6</span> <span class='hs-varop'>.|.</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-num'>0x3f</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="b1"></a><span class='hs-definition'>b1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-85"></a><span class='hs-definition'>b1</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toEnum</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>c</span>
-<a name="line-86"></a>     <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-87"></a>
-<a name="line-88"></a><a name="b2"></a><span class='hs-definition'>b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-89"></a><span class='hs-definition'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x1f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span>
-<a name="line-91"></a>
-<a name="line-92"></a><a name="b3"></a><span class='hs-definition'>b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-93"></a><span class='hs-definition'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x0f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span>
-<a name="line-95"></a>
-<a name="line-96"></a>
-<a name="line-97"></a><a name="b4"></a><span class='hs-definition'>b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-98"></a><span class='hs-definition'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x07</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-99"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span>
-<a name="line-100"></a>
-<a name="line-101"></a><a name="valid_b2"></a><span class='hs-definition'>valid_b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-102"></a><span class='hs-definition'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xc2</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xdf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>
-<a name="line-104"></a><a name="valid_b3"></a><span class='hs-definition'>valid_b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-105"></a><span class='hs-definition'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xe0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xa0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span> 
-<a name="line-106"></a>                 <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xe1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xef</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-107"></a>
-<a name="line-108"></a><a name="valid_b4"></a><span class='hs-definition'>valid_b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-109"></a><span class='hs-definition'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x90</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-110"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xf1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xf3</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-111"></a>                   <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf4</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0x8f</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>
-<a name="line-113"></a><a name="consT"></a><span class='hs-definition'>consT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-114"></a><span class='hs-definition'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>h</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span>
-<a name="line-115"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-116"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span>
-<a name="line-117"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-118"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-119"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-120"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-121"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-122"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-123"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-124"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-125"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-126"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-127"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> 
-<a name="line-128"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-129"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-130"></a>
-<a name="line-131"></a><a name="invalidChars"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-132"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-133"></a>
-<a name="line-134"></a><a name="merge"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-135"></a><span class='hs-definition'>merge</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-136"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-137"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-138"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-139"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-140"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-141"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-142"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-143"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-144"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-145"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-146"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-147"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-148"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-149"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-150"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-151"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-152"></a>
-<a name="line-153"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-154"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span>
-<a name="line-155"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-156"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-157"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>id</span> <span class='hs-varid'>flushH</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-158"></a>    <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-159"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>c'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-160"></a>        <span class='hs-varid'>k</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-161"></a>
-<a name="line-162"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Word8</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-163"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-164"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-165"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-varid'>h</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-166"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>     <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-167"></a>                            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-168"></a>
-<a name="line-169"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>cs</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-conid'>T</span>
-<a name="line-170"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k1</span> <span class='hs-varid'>k2</span> <span class='hs-varid'>k3</span> <span class='hs-keyword'>where</span>
-<a name="line-171"></a>        <span class='hs-varid'>k1</span> <span class='hs-varid'>h'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>flushH</span> <span class='hs-varid'>h'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-172"></a>        <span class='hs-varid'>k2</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>m'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-173"></a>        <span class='hs-varid'>k3</span> <span class='hs-varid'>t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span>
-<a name="line-174"></a>    
-<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-176"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-177"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>
-<a name="line-178"></a>
-<a name="line-179"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-180"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>f</span> <span class='hs-conid'>H0</span>
-<a name="line-181"></a>
-<a name="line-182"></a><a name="runUTF8"></a><span class='hs-definition'>runUTF8</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-183"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span>
-<a name="line-184"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>flushH</span> <span class='hs-varid'>h</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/Words.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, FlexibleContexts, GeneralizedNewtypeDeriving, ParallelListComp, TypeFamilies #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>Words</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Words</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runWords</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Lines</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runLines</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unspaced</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnspaced</span><span class='hs-layout'>)</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unlined</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnlined</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>wordsFrom</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>linesFrom</span>
-<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSpace</span><span class='hs-layout'>)</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybeToList</span><span class='hs-layout'>)</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-19"></a>
-<a name="line-20"></a><a name="Words"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="runWords"></a><span class='hs-definition'>runWords</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-25"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>m</span>
-<a name="line-26"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>r</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>mempty</span>
-<a name="line-30"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-32"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r'</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-37"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Words</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>m</span> <span class='hs-varid'>ms</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-comment'>-- abuse the same machinery to handle lines as well</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="Lines"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-49"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="runLines"></a><span class='hs-definition'>runLines</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-52"></a><span class='hs-definition'>runLines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runWords</span> <span class='hs-varid'>x</span>
-<a name="line-53"></a>
-<a name="line-54"></a><a name="Unspaced"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnspaced</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-58"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-67"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnspaced</span>
-<a name="line-71"></a>
-<a name="line-72"></a><a name="Unlined"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnlined</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-75"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-76"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-77"></a>
-<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-79"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-85"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnlined</span>
-<a name="line-89"></a>
-<a name="line-90"></a><a name="wordsFrom"></a><span class='hs-comment'>-- accumulator, inside-word, and until-next-word monoids</span>
-<a name="line-91"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-92"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-93"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runWords</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>
-<a name="line-95"></a><a name="linesFrom"></a><span class='hs-comment'>-- accumulator, inside-line, and until-next-line monoids</span>
-<a name="line-96"></a><span class='hs-definition'>linesFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-97"></a><span class='hs-definition'>linesFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runLines</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Map.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Map.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span><span class='hs-layout'>)</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
-<a name="line-17"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Map.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-Cont.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/Cont.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ContT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-18"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>ContT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>ContT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-Cont.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-Either.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/Either.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Either</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Either</span> <span class='hs-comment'>-- from category extras</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Either</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>do</span> 
-<a name="line-15"></a>        <span class='hs-varid'>x'</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>x</span>
-<a name="line-16"></a>        <span class='hs-varid'>y'</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>y</span>
-<a name="line-17"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>x'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Either</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>EitherT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-24"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>do</span>
-<a name="line-25"></a>        <span class='hs-varid'>x'</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>x</span>
-<a name="line-26"></a>        <span class='hs-varid'>y'</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>y</span>
-<a name="line-27"></a>        <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>x'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>EitherT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>EitherT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EitherT</span> <span class='hs-varop'>.</span> <span class='hs-varid'>liftM</span> <span class='hs-varid'>return</span>
-<a name="line-34"></a>
-<a name="line-35"></a><a name="liftM"></a><span class='hs-definition'>liftM</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span>
-<a name="line-36"></a><span class='hs-definition'>liftM</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>do</span> <span class='hs-varid'>x'</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>x</span><span class='hs-layout'>;</span> <span class='hs-varid'>return</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-Either.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-IO.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/IO.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a>
-<a name="line-5"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>IO</span>
-<a name="line-6"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>System</span><span class='hs-varop'>.</span><span class='hs-conid'>IO</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-9"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>System</span><span class='hs-varop'>.</span><span class='hs-conid'>IO</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Concurrent</span><span class='hs-varop'>.</span><span class='hs-conid'>STM</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-19"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-22"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-conid'>RealWorld</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>stToIO</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>atomically</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-IO.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-Identity.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/Identity.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-Identity.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-RWS-Lazy.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/RWS/Lazy.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-18"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-RWS-Lazy.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-RWS-Strict.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/RWS/Strict.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a>
-<a name="line-5"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-6"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-15"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-19"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-22"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-RWS-Strict.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-Reader.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/Reader.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-21"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-Reader.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-ST-Lazy.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/ST/Lazy.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-16"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-20"></a>
-<a name="line-21"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-ST-Lazy.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-ST-Strict.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/ST/Strict.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-16"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-20"></a>
-<a name="line-21"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-ST-Strict.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-STM.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/STM.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>STM</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Concurrent</span><span class='hs-varop'>.</span><span class='hs-conid'>STM</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Concurrent</span><span class='hs-varop'>.</span><span class='hs-conid'>STM</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-16"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-STM.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-State-Lazy.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/State/Lazy.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-18"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-State-Lazy.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-State-Strict.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/State/Strict.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-18"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-State-Strict.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-Writer-Lazy.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/Writer/Lazy.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-18"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-Writer-Lazy.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad-Writer-Strict.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad/Writer/Strict.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-5"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span>  <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-18"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>n</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>lift</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad-Writer-Strict.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Action</span><span class='hs-layout'>(</span><span class='hs-conid'>Action</span><span class='hs-layout'>,</span><span class='hs-varid'>getAction</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonadSum</span><span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonadSum</span><span class='hs-layout'>)</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>ActionWith</span><span class='hs-layout'>(</span><span class='hs-conid'>ActionWith</span><span class='hs-layout'>,</span><span class='hs-varid'>getActionWith</span><span class='hs-layout'>)</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mplus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;=&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>liftM2</span><span class='hs-layout'>)</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="Action"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-comment'>{-# RULES "unitAction" unit = Action #-}</span>
-<a name="line-25"></a><span class='hs-comment'>{-# RULES "snocAction" snoc = snocAction #-}</span> 
-<a name="line-26"></a><a name="snocAction"></a><span class='hs-definition'>snocAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span>
-<a name="line-27"></a><span class='hs-definition'>snocAction</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Action</span>
-<a name="line-28"></a>
-<a name="line-29"></a><a name="MonadSum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonadSum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-30"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>mzero</span>
-<a name="line-34"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span>
-<a name="line-38"></a>
-<a name="line-39"></a><a name="ActionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>ActionWith</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ActionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getActionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-layout'>}</span>
-<a name="line-40"></a>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>ActionWith</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-42"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ActionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>    <span class='hs-conid'>ActionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>ActionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ActionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>ActionWith</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ActionWith</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Multiplicative/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>7</span> <span class='hs-varop'>*</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="*"></a><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
-<a name="line-14"></a><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>times</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Transformer.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Multiplicative/Transformer.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Transformer</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Log</span><span class='hs-layout'>(</span><span class='hs-conid'>Log</span><span class='hs-layout'>,</span> <span class='hs-varid'>getLog</span><span class='hs-layout'>)</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Exp</span><span class='hs-layout'>(</span><span class='hs-conid'>Exp</span><span class='hs-layout'>,</span> <span class='hs-varid'>getExp</span><span class='hs-layout'>)</span> 
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-8"></a>
-<a name="line-9"></a><a name="Log"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLog</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-12"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>one</span>
-<a name="line-13"></a>    <span class='hs-conid'>Log</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-14"></a>
-<a name="line-15"></a><a name="Exp"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getExp</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Exp</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>mempty</span>
-<a name="line-19"></a>    <span class='hs-conid'>Exp</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Transformer.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Transformers.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Multiplicative/Transformers.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Transformers</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Log</span><span class='hs-layout'>(</span><span class='hs-conid'>Log</span><span class='hs-layout'>,</span> <span class='hs-varid'>getLog</span><span class='hs-layout'>)</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Exp</span><span class='hs-layout'>(</span><span class='hs-conid'>Exp</span><span class='hs-layout'>,</span> <span class='hs-varid'>getExp</span><span class='hs-layout'>)</span> 
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-8"></a>
-<a name="line-9"></a><a name="Log"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLog</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-12"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>one</span>
-<a name="line-13"></a>    <span class='hs-conid'>Log</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-14"></a>
-<a name="line-15"></a><a name="Exp"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getExp</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Exp</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>mempty</span>
-<a name="line-19"></a>    <span class='hs-conid'>Exp</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Transformers.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Multiplicative.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span> 
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MultiplicativeMonoid</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>one</span><span class='hs-layout'>,</span> <span class='hs-varid'>times</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-14"></a>
-<a name="line-15"></a><a name="MultiplicativeMonoid"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span>
-<a name="line-17"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>mempty</span><span class='hs-keyglyph'>]</span>
-<a name="line-21"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>ys</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>xss</span><span class='hs-layout'>,</span> <span class='hs-varid'>ys</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>]</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-25"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap'</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-29"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runIdentity</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>one</span>
-<a name="line-33"></a>    <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>one</span>
-<a name="line-37"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Ord.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>---- |</span>
-<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
-<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-7"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-8"></a><span class='hs-comment'>---- Stability   :  experimental</span>
-<a name="line-9"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-10"></a><span class='hs-comment'>----</span>
-<a name="line-11"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
-<a name="line-12"></a><span class='hs-comment'>----</span>
-<a name="line-13"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
-<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-17"></a>    <span class='hs-comment'>-- * Max</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>    <span class='hs-comment'>-- * Min</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a>
-<a name="line-31"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
-<a name="line-32"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
-<a name="line-36"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
-<a name="line-40"></a>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span> 
-<a name="line-42"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getMax</span>
-<a name="line-49"></a>
-<a name="line-50"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
-<a name="line-51"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
-<a name="line-55"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-56"></a>
-<a name="line-57"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-58"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-67"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getMin</span>
-<a name="line-68"></a>
-<a name="line-69"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
-<a name="line-70"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-73"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-74"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-75"></a>
-<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-77"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span>
-<a name="line-78"></a>
-<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-80"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-81"></a>
-<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-83"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-84"></a>
-<a name="line-85"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
-<a name="line-86"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-87"></a>
-<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-89"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
-<a name="line-90"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
-<a name="line-91"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
-<a name="line-92"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
-<a name="line-93"></a>
-<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-95"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-96"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-97"></a>
-<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-99"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span>
-<a name="line-100"></a>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>MinPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-102"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>
-<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>MinPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-105"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/Char.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fromChar</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="CharReducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-14"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span>
-<a name="line-15"></a>
-<a name="line-16"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-17"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>mempty</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Char</span><span class='hs-keyglyph'>]</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, UndecidableInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fromInteger</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>IsString</span><span class='hs-layout'>,</span> <span class='hs-varid'>fromString</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromInteger</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Exts</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>fromString</span><span class='hs-layout'>)</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="fromInteger"></a><span class='hs-definition'>fromInteger</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Integer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Integer</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-14"></a><span class='hs-definition'>fromInteger</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span>
-<a name="line-15"></a>
-<a name="line-16"></a><a name="fromString"></a><span class='hs-definition'>fromString</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-17"></a><span class='hs-definition'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/With.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>With</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WithReducer</span><span class='hs-layout'>(</span><span class='hs-conid'>WithReducer</span><span class='hs-layout'>,</span><span class='hs-varid'>runWithReducer</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>withoutReducer</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="WithReducer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WithReducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WithReducer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWithReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>}</span> 
-<a name="line-12"></a>
-<a name="line-13"></a><a name="withoutReducer"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span>
-<a name="line-14"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snd</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span> 
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>measure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances , FlexibleContexts , MultiParamTypeClasses , FlexibleInstances , GeneralizedNewtypeDeriving , FunctionalDependencies #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-3"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMapReduce</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldReduce</span>
-<a name="line-9"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-24"></a><span class='hs-comment'>--import qualified Data.BitSet as BitSet</span>
-<a name="line-25"></a><span class='hs-comment'>--import Data.BitSet (BitSet)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="Reducer"></a><span class='hs-comment'>-- minimal definition unit or snoc</span>
-<a name="line-28"></a><a name="Reducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-30"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-31"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-32"></a>
-<a name="line-33"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>mempty</span> 
-<a name="line-34"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-35"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="foldMapReduce"></a><span class='hs-definition'>foldMapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-38"></a><span class='hs-definition'>foldMapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="foldReduce"></a><span class='hs-definition'>foldReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-41"></a><span class='hs-definition'>foldReduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>unit</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>p</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-56"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-59"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-60"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span>
-<a name="line-61"></a>    <span class='hs-varid'>xs</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-65"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`snoc`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-66"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`cons`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-67"></a>
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Any</span>
-<a name="line-70"></a>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span>
-<a name="line-72"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>All</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-75"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-78"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Dual</span>
-<a name="line-79"></a>    
-<a name="line-80"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-81"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span>
-<a name="line-82"></a>
-<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-84"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span>
-<a name="line-85"></a>
-<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-87"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span>
-<a name="line-88"></a>
-<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-90"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-91"></a>
-<a name="line-92"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-93"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span>
-<a name="line-94"></a>
-<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-96"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-97"></a>
-<a name="line-98"></a><span class='hs-comment'>-- orphan, which should be in Data.FingerTree</span>
-<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-100"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
-<a name="line-101"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&lt;</span><span class='hs-layout'>)</span>
-<a name="line-102"></a>
-<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-104"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span>
-<a name="line-105"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|</span><span class='hs-layout'>)</span>
-<a name="line-106"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span> 
-<a name="line-107"></a>
-<a name="line-108"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-109"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-110"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-varop'>.&lt;|</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-varop'>.|&gt;</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>
-<a name="line-113"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Int</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
-<a name="line-114"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-115"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-116"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-comment'>-- left bias irrelevant</span>
-<a name="line-117"></a>
-<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-120"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-121"></a>    <span class='hs-comment'>-- pedantic in case Eq doesn't implement structural equality</span>
-<a name="line-122"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>member</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span> 
-<a name="line-123"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span>
-<a name="line-124"></a>
-<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-126"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-127"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-128"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varop'>.</span> <span class='hs-varid'>uncurry</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-varop'>$</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span>
-<a name="line-129"></a>
-<a name="line-130"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-131"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-132"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-133"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varop'>.</span> <span class='hs-varid'>uncurry</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-varop'>$</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span>
-<a name="line-134"></a>
-<a name="line-135"></a><span class='hs-comment'>{-
-<a name="line-136"></a>instance Enum a =&gt; Monoid (BitSet a) where
-<a name="line-137"></a>    mempty = BitSet.empty
-<a name="line-138"></a>    mappend = BitSet.union -- not yet present, contacted library author
-<a name="line-139"></a>
-<a name="line-140"></a>instance Enum a =&gt; Reducer a (BitSet a) where
-<a name="line-141"></a>    unit m = BitSet.insert m BitSet.empty
-<a name="line-142"></a>-}</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Self.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Self.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Self</span><span class='hs-layout'>(</span><span class='hs-conid'>Self</span><span class='hs-layout'>,</span> <span class='hs-varid'>getSelf</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="Self"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getSelf</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Self</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getSelf</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Self</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Self</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span>
-<a name="line-24"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Self.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Unit.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Unit.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, UndecidableInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>---- |</span>
-<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Unit</span>
-<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-7"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-8"></a><span class='hs-comment'>---- Stability   :  experimental</span>
-<a name="line-9"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-10"></a><span class='hs-comment'>----</span>
-<a name="line-11"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-12"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Unit</span> 
-<a name="line-13"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unit</span><span class='hs-layout'>(</span><span class='hs-conid'>Unit</span><span class='hs-layout'>,</span><span class='hs-varid'>getUnit</span><span class='hs-layout'>)</span> 
-<a name="line-15"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-20"></a>
-<a name="line-21"></a><a name="Unit"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnit</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-25"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-26"></a>    <span class='hs-varid'>mconcat</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-29"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-30"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-31"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unit</span> <span class='hs-conid'>Char</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unit</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-<a name="line-37"></a>    
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unit</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-varid'>point</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unit</span> <span class='hs-conid'>()</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Unit.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Bool.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Bool.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Bool</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Bool.html
hunk ./dist/doc/html/monoids/src/Data-Ring-FromNum.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/FromNum.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, MultiParamTypeClasses, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>FromNum</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>FromNum</span><span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span><span class='hs-layout'>,</span> <span class='hs-varid'>getFromNum</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="FromNum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromNum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getFromNum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Num</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>0</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>negate</span>
-<a name="line-19"></a>    
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>1</span>
-<a name="line-22"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>    
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Integer</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-FromNum.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Number.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Number.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, MultiParamTypeClasses, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Number</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Number</span><span class='hs-layout'>(</span><span class='hs-conid'>Number</span><span class='hs-layout'>,</span> <span class='hs-varid'>getNumber</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="Number"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Number</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Number</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getNumber</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Num</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Number</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>0</span>
-<a name="line-14"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Number</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>negate</span>
-<a name="line-19"></a>    
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Number</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>1</span>
-<a name="line-22"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Number</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>    
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Integer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Number</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Number.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi-Near.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi/Near.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Seminearring</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-13"></a>
-<a name="line-14"></a><a name="Seminearring"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> 
-<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi-Near.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi-Ord.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi/Ord.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, MultiParamTypeClasses, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a><span class='hs-comment'>----------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>---- |</span>
-<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Ring.Semi.Ord</span>
-<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009, Conal Elliott 2008</span>
-<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD3</span>
-<a name="line-7"></a><span class='hs-comment'>---- </span>
-<a name="line-8"></a><span class='hs-comment'>---- Maintainer  :  ekmett@gmail.com</span>
-<a name="line-9"></a><span class='hs-comment'>---- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>---- </span>
-<a name="line-11"></a><span class='hs-comment'>---- ordered types as semi-rings</span>
-<a name="line-12"></a><span class='hs-comment'>------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span>
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Order</span><span class='hs-layout'>(</span><span class='hs-conid'>Order</span><span class='hs-layout'>,</span><span class='hs-varid'>getOrder</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Priority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinBound</span><span class='hs-layout'>,</span><span class='hs-conid'>Priority</span><span class='hs-layout'>,</span><span class='hs-conid'>MaxBound</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
-<a name="line-21"></a><span class='hs-comment'>-- import Control.Applicative</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="Order"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Order</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getOrder</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>,</span><span class='hs-conid'>Arbitrary</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-31"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minBound</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-34"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-35"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maxBound</span>
-<a name="line-36"></a>    
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Semiring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getOrder</span>
-<a name="line-50"></a>
-<a name="line-51"></a>
-<a name="line-52"></a>
-<a name="line-53"></a>
-<a name="line-54"></a>
-<a name="line-55"></a>
-<a name="line-56"></a>
-<a name="line-57"></a><a name="Priority"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Bounded</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-varid'>minBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-61"></a>    <span class='hs-varid'>maxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-65"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MinBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-66"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>b</span>
-<a name="line-67"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-68"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-69"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-70"></a>
-<a name="line-71"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-72"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-73"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-74"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
-<a name="line-75"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-76"></a>  
-<a name="line-77"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-78"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
-<a name="line-79"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-81"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-82"></a>
-<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-84"></a>  <span class='hs-varid'>arbitrary</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>frequency</span> <span class='hs-keyglyph'>[</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MinBound</span><span class='hs-layout'>)</span>
-<a name="line-85"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>10</span><span class='hs-layout'>,</span> <span class='hs-varid'>fmap</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>arbitrary</span><span class='hs-layout'>)</span>
-<a name="line-86"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MaxBound</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>]</span>
-<a name="line-87"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MinBound</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-num'>0</span>
-<a name="line-88"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-num'>1</span> <span class='hs-varop'>.</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>a</span>
-<a name="line-89"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MaxBound</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-num'>2</span>
-<a name="line-90"></a>
-<a name="line-91"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-92"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-93"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minBound</span>
-<a name="line-94"></a>
-<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-96"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-97"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maxBound</span>
-<a name="line-98"></a>
-<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Semiring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-101"></a>
-<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-103"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-107"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
-<a name="line-108"></a>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-111"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
-<a name="line-112"></a>
-<a name="line-113"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
-<a name="line-114"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-115"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-116"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-117"></a>
-<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi-Ord.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Semiring</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-7"></a>
-<a name="line-8"></a><a name="Semiring"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Semiring</span> <span class='hs-varid'>a</span>
-<a name="line-9"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Ring.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="Ring"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Semiring</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-varid'>a</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-comment'>-- todo: the Boolean Ring (with symmetric difference as addition)</span>
-<a name="line-13"></a><span class='hs-comment'>-- use Data.Ring.Semi.Ord.Order Bool to get the and/or based Boolean distribuive lattice semiring</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-conid'>Bool</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-17"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>||</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>not</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-conid'>Bool</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-conid'>Bool</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-24"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&amp;&amp;</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Seminearring</span> <span class='hs-conid'>Bool</span>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Semiring</span> <span class='hs-conid'>Bool</span>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ring</span> <span class='hs-conid'>Bool</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring.html
hunk ./dist/doc/html/monoids/src/Data-Seminearring-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Seminearring/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Seminearring</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Seminearring</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Seminearring</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Seminearring-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Seminearring.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Seminearring.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Seminearring</span>
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Seminearring</span>
-<a name="line-4"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-5"></a>
-<a name="line-6"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-13"></a>
-<a name="line-14"></a><a name="Seminearring"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>MultiplicativeMonoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> 
-<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Seminearring</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seminearring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-comment'>-- class Absorbing m where isZero :: m -&gt; Bool</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Seminearring.html
hunk ./dist/doc/html/monoids/src/hscolour.css 1
-.hs-keyglyph, .hs-layout {color: red;}
-.hs-keyword {color: blue;}
-.hs-comment, .hs-comment a {color: green;}
-.hs-str, .hs-chr {color: teal;}
-.hs-keyword, .hs-conid, .hs-varid, .hs-conop, .hs-varop, .hs-num, .hs-cpp, .hs-sel, .hs-definition {}
rmfile ./dist/doc/html/monoids/src/hscolour.css
rmdir ./dist/doc/html/monoids/src
rmdir ./dist/doc/html/monoids
rmdir ./dist/doc/html
rmdir ./dist/doc
}
