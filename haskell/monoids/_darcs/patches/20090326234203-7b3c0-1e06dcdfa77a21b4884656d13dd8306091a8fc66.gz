[massive restructuring and additional sugar
ekmett@gmail.com**20090326234203] {
adddir ./Data/Group
adddir ./Data/Monoid/Additive
adddir ./Data/Monoid/Generator
adddir ./Data/Monoid/Multiplicative
addfile ./Data/Group.hs
hunk ./Data/Group.hs 1
+module Data.Group 
+    ( module Data.Monoid.Additive
+    , Group
+    , gnegate
+    , minus
+    ) where
+
+import Data.Monoid.Additive
+
+infixl 6 `minus`
+
+class Monoid a => Group a where
+    -- additive inverse
+    gnegate :: a -> a
+
+    -- right cancellation
+    minus :: a -> a -> a
+    a `minus` b = a `plus` gnegate b 
+
+instance Num a => Group (Sum a) where
+    gnegate = Sum . negate . getSum
+    Sum a `minus` Sum b = Sum (a - b)
+    
+instance Fractional a => Group (Product a) where
+    gnegate = Product . negate . getProduct
+    Product a `minus` Product b = Product (a / b)
+    
+instance Group a => Group (Dual a) where
+    gnegate = Dual . gnegate . getDual
addfile ./Data/Group/Sugar.hs
hunk ./Data/Group/Sugar.hs 1
+module Data.Group.Sugar 
+    ( module Data.Monoid.Additive.Sugar
+    , module Data.Group
+    , (-)
+    , negate
+    ) where
+
+import Data.Monoid.Additive.Sugar
+import Data.Group
+import Prelude hiding ((-), negate)
+
+infixl 7 -
+
+(-) :: Group g => g -> g -> g
+(-) = minus
+
+negate :: Group g => g -> g
+negate = gnegate
addfile ./Data/Monoid/Additive.hs
hunk ./Data/Monoid/Additive.hs 1
+module Data.Monoid.Additive
+    ( module Data.Monoid 
+    , plus
+    , zero
+    ) where
+
+import Data.Monoid
+
+infixl 6 `plus`
+
+plus :: Monoid m => m -> m -> m 
+plus = mappend
+
+zero :: Monoid m => m 
+zero = mempty
addfile ./Data/Monoid/Additive/Sugar.hs
hunk ./Data/Monoid/Additive/Sugar.hs 1
+module Data.Monoid.Additive.Sugar 
+    ( module Data.Monoid.Additive
+    , (+)
+    ) where
+
+import Data.Monoid.Additive
+import Prelude hiding ((+))
+
+infixl 6 + 
+
+(+) :: Monoid m => m -> m -> m 
+(+) = mappend
hunk ./Data/Monoid/Applicative.hs 7
-    , MonoidTraversal(MonoidTraversal,getMonoidTraversal)
+    , TraversalWith(TraversalWith,getTraversalWith)
hunk ./Data/Monoid/Applicative.hs 41
-newtype MonoidTraversal m n = MonoidTraversal { getMonoidTraversal :: m n }
+newtype TraversalWith m n = TraversalWith { getTraversalWith :: m n }
hunk ./Data/Monoid/Applicative.hs 43
-instance (Applicative m, Monoid n) => Monoid (MonoidTraversal m n) where
-    mempty = MonoidTraversal (pure mempty)
-    MonoidTraversal a `mappend` MonoidTraversal b = MonoidTraversal (liftA2 mappend a b)
+instance (Applicative m, Monoid n) => Monoid (TraversalWith m n) where
+    mempty = TraversalWith (pure mempty)
+    TraversalWith a `mappend` TraversalWith b = TraversalWith (liftA2 mappend a b)
hunk ./Data/Monoid/Applicative.hs 47
-instance (Applicative m, Monoid n) => Reducer (m n) (MonoidTraversal m n) where
-    unit = MonoidTraversal
+instance (Applicative m, Monoid n) => Reducer (m n) (TraversalWith m n) where
+    unit = TraversalWith
addfile ./Data/Monoid/Categorical.hs
hunk ./Data/Monoid/Categorical.hs 1
+{-# LANGUAGE TypeOperators, GADTs #-}
+module Data.Monoid.Categorical
+    ( module Data.Monoid
+    , Endo(Endo, getEndo)
+    ) where
+
+import Prelude hiding ((.),id)
+import Data.Monoid (Monoid, mempty, mappend) 
+import Control.Category
+
+-- | The 'Monoid' of endomorphisms over some object in an arbitrary 'Category'
+data Endo (~>) a = Endo { getEndo :: a ~> a } 
+
+instance Category (~>) => Monoid (Endo (~>) a) where
+    mempty = Endo id
+    Endo f `mappend` Endo g = Endo (f . g)
+
+-- | A 'Monoid' is just a 'Category' with one object. 
+-- try to ignore the phantom type parameter available through 'a'
+data Mon m a b where
+    Mon :: Monoid m => m -> Mon m a a
+
+instance Monoid m => Category (Mon m) where
+    id = Mon mempty
+    Mon a . Mon b = Mon (a `mappend` b)
hunk ./Data/Monoid/FingerTree.hs 1
-{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}
-module Data.Monoid.FingerTree
-    ( module Data.Monoid.Reducer
-    , module Data.FingerTree
-    ) where
-
-import Data.Monoid.Reducer (Reducer, unit, cons, snoc, Monoid, mempty, mappend)
-import Data.FingerTree
-
-instance Measured v a => Monoid (FingerTree v a) where
-    mempty = empty
-    mappend = (><)
-
-instance Measured v a => Reducer a (FingerTree v a) where
-    unit = singleton
-    cons = (<|)
-    snoc = (|>) 
-
-{-
-instance Measured v a => Reducer (FingerTree v a) (FingerTree v a) where
-    unit = id
-    cons = mappend
-    snoc = mappend
--}
rmfile ./Data/Monoid/FingerTree.hs
hunk ./Data/Monoid/Generator.hs 3
-    ( module Data.Monoid
+    ( module Data.Monoid.Reducer
hunk ./Data/Monoid/Generator.hs 19
-import Data.Monoid
-import Data.Monoid.Applicative
-import Data.Monoid.Monad
+import Data.Monoid.Reducer
addfile ./Data/Monoid/Generator/Combinators.hs
hunk ./Data/Monoid/Generator/Combinators.hs 1
+{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies, ScopedTypeVariables #-}
+module Data.Monoid.Generator.Combinators
+    ( module Data.Monoid.Generator
+    , traverse_
+    , for_
+    , mapM_
+    , forM_
+    , concatMap
+    , and
+    , or
+    , any
+    , all
+    , sum
+    , product
+    , elem
+    , notElem
+    ) where
+
+import Prelude hiding (mapM_, any, elem, filter, concatMap, and, or, all, sum, product, notElem)
+import Data.Monoid.Generator
+import Data.Monoid.Applicative
+import Data.Monoid.Monad
+import Data.Monoid.Self
+
+traverse_ :: (Generator c, Applicative f) => (Elem c -> f b) -> c -> f ()
+traverse_ f = getTraversal . mapReduce f
+    
+for_ :: (Generator c, Applicative f) => c -> (Elem c -> f b) -> f ()
+for_ = flip traverse_
+
+mapM_ :: (Generator c, Monad m) => (Elem c -> m b) -> c -> m ()
+mapM_ f = getAction . mapReduce f
+
+forM_ :: (Generator c, Monad m) => c -> (Elem c -> m b) -> m ()
+forM_ = flip mapM_
+
+concatMap :: Generator c => (Elem c -> [b]) -> c -> [b]
+concatMap f = getSelf . mapReduce f
+
+and :: (Generator c, Elem c ~ Bool) => c -> Bool
+and = getAll . reduce
+
+or :: (Generator c, Elem c ~ Bool) => c -> Bool
+or = getAny . reduce
+
+any :: Generator c => (Elem c -> Bool) -> c -> Bool
+any f = getAny . mapReduce f
+
+all :: Generator c => (Elem c -> Bool) -> c -> Bool
+all f = getAll . mapReduce f
+
+sum :: (Generator c, Num (Elem c)) => c -> Elem c
+sum = getSum . reduce
+
+product :: (Generator c, Num (Elem c)) => c -> Elem c
+product = getProduct . reduce
+
+elem :: (Generator c, Eq (Elem c)) => Elem c -> c -> Bool
+elem = any . (==)
+
+notElem :: (Generator c, Eq (Elem c)) => Elem c -> c -> Bool
+notElem x = not . elem x
+
+-- foldMap :: Generator c => (Elem c -> m) -> c -> m
+
+-- filter :: (Generator c, Elem c `Reducer` m, m `Reducer` m) => (Elem c -> Bool) -> c -> m
+-- filter p = mapReduce (\x -> if p x then unit x else mempty)
+
+-- find :: Generator c => (Elem c -> Bool) -> c -> Maybe (Elem c)
+-- find p = getFirst . filter p
hunk ./Data/Monoid/Monad.hs 7
-    , KleisliEndo(KleisliEndo,getKleisliEndo)
-    , MonoidAction(MonoidAction,getMonoidAction)
+    , ActionWith(ActionWith,getActionWith)
hunk ./Data/Monoid/Monad.hs 39
-newtype KleisliEndo m a = KleisliEndo { getKleisliEndo :: a -> m a } 
+newtype ActionWith m n = ActionWith { getActionWith :: m n }
hunk ./Data/Monoid/Monad.hs 41
-instance Monad m => Monoid (KleisliEndo m a) where
-    mempty = KleisliEndo return
-    KleisliEndo a `mappend` KleisliEndo b = KleisliEndo (a >=> b)
+instance (Monad m, Monoid n) => Monoid (ActionWith m n) where
+    mempty = ActionWith (return mempty)
+    ActionWith a `mappend` ActionWith b = ActionWith (liftM2 mappend a b)
hunk ./Data/Monoid/Monad.hs 45
-instance Monad m => Reducer (a -> m a) (KleisliEndo m a) where
-    unit = KleisliEndo
-
-newtype MonoidAction m n = MonoidAction { getMonoidAction :: m n }
-
-instance (Monad m, Monoid n) => Monoid (MonoidAction m n) where
-    mempty = MonoidAction (return mempty)
-    MonoidAction a `mappend` MonoidAction b = MonoidAction (liftM2 mappend a b)
-
-instance (Monad m, Monoid n) => Reducer (m n) (MonoidAction m n) where
-    unit = MonoidAction
+instance (Monad m, Monoid n) => Reducer (m n) (ActionWith m n) where
+    unit = ActionWith
addfile ./Data/Monoid/Multiplicative.hs
hunk ./Data/Monoid/Multiplicative.hs 1
+module Data.Monoid.Multiplicative 
+    ( module Data.Monoid.Additive
+    , MultiplicativeMonoid
+    , one, times
+    ) where
+
+import Data.Monoid.Additive
+import Data.FingerTree
+import Data.Monoid.Reducer
+import Data.Monoid.Generator
+import Data.Monoid.Self
+import Data.Foldable
+
+class MultiplicativeMonoid m where
+    one :: m
+    times :: m -> m -> m
+
+class (MultiplicativeMonoid m, Monoid m) => Seminearring m 
+
+instance Monoid m => MultiplicativeMonoid [m] where
+    one = [mempty]
+    xss `times` yss = [ xs `mappend` ys | xs <- xss, ys <- yss ]
+
+instance Monoid m => Seminearring [m]
+
+instance (Measured v m, Monoid m) => MultiplicativeMonoid (FingerTree v m) where
+    one = singleton mempty
+    xss `times` yss = getSelf . reduce . fmap (\xs -> fmap' (xs `mappend`) yss) $ toList xss
+
+instance (Measured v m, Monoid m) => Seminearring (FingerTree v m)
addfile ./Data/Monoid/Multiplicative/Sugar.hs
hunk ./Data/Monoid/Multiplicative/Sugar.hs 1
+module Data.Monoid.Multiplicative.Sugar
+    ( module Data.Monoid.Additive.Sugar
+    , module Data.Monoid.Multiplicative
+    , (*)
+    ) where
+
+import Data.Monoid.Additive.Sugar
+import Data.Monoid.Multiplicative
+import Prelude hiding ((*))
+
+infixl 7 *
+
+(*) :: MultiplicativeMonoid r => r -> r -> r
+(*) = times
addfile ./Data/Monoid/Multiplicative/Transformers.hs
hunk ./Data/Monoid/Multiplicative/Transformers.hs 1
+module Data.Monoid.Multiplicative.Transformers
+    ( module Data.Monoid.Multiplicative
+    , Log(Log, getLog)
+    , Exp(Exp, getExp) 
+    ) where
+
+import Data.Monoid.Multiplicative
+
+data Log m = Log { getLog :: m }
+
+instance MultiplicativeMonoid m => Monoid (Log m) where
+    mempty = Log one
+    Log a `mappend` Log b = Log (a `times` b)
+
+data Exp m = Exp { getExp :: m }
+
+instance Monoid m => MultiplicativeMonoid (Exp m) where
+    one = Exp mempty
+    Exp a `times` Exp b = Exp (a `mappend` b)
hunk ./Data/Monoid/Ord.hs 8
----- Stability   :  provisional
+---- Stability   :  experimental
hunk ./Data/Monoid/Ord.hs 13
--------------------------------------------------------------------------------
+-----------------------------------------------------------------------------
hunk ./Data/Monoid/Reducer.hs 1
-{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}
+{-# LANGUAGE UndecidableInstances , FlexibleContexts , MultiParamTypeClasses , FlexibleInstances , GeneralizedNewtypeDeriving , FunctionalDependencies #-}
+{-# OPTIONS_GHC -fno-warn-orphans #-}
hunk ./Data/Monoid/Reducer.hs 12
+import Data.FingerTree
hunk ./Data/Monoid/Reducer.hs 47
-instance Reducer [c] [c] where
-    unit = id
-    snoc = mappend
-    cons = mappend
-
hunk ./Data/Monoid/Reducer.hs 73
-instance Reducer a (First a) where
-    unit = First . Just
-
hunk ./Data/Monoid/Reducer.hs 76
-instance Reducer a (Last a) where
-    unit = Last . Just
+instance Measured v a => Monoid (FingerTree v a) where
+    mempty = empty
+    mappend = (><)
+
+instance Measured v a => Reducer a (FingerTree v a) where
+    unit = singleton
+    cons = (<|)
+    snoc = (|>) 
hunk ./Data/Monoid/Reducer/Char.hs 30
-instance CharReducer ()
-
addfile ./Data/Monoid/Reducer/Sugar.hs
hunk ./Data/Monoid/Reducer/Sugar.hs 1
+{-# LANGUAGE FlexibleInstances, FlexibleContexts, UndecidableInstances #-}
+module Data.Monoid.Reducer.Sugar 
+    ( module Data.Monoid.Reducer
+    , fromInteger
+    , IsString, fromString
+    ) where
+
+import Prelude hiding (fromInteger)
+import Data.Monoid.Generator
+import Data.Monoid.Reducer
+
+fromInteger :: Reducer Integer m => Integer -> m
+fromInteger = unit
+
+class IsString a where
+    fromString :: String -> a
+    
+instance Reducer Char a => IsString a where
+    fromString = reduce
addfile ./Data/Monoid/Self.hs
hunk ./Data/Monoid/Self.hs 1
+{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, GeneralizedNewtypeDeriving #-}
+module Data.Monoid.Self
+    ( module Data.Monoid.Reducer
+    , Self(Self, getSelf)
+    ) where
+
+import Control.Functor.Pointed
+import Data.Monoid.Reducer
+
+newtype Self m = Self { getSelf :: m } deriving (Monoid)
+
+instance Monoid m => Reducer m (Self m) where
+    unit = Self
+
+instance Functor Self where
+    fmap f = Self . f . getSelf
+
+instance Pointed Self where
+    point = Self
+
+instance Copointed Self where
+    extract = getSelf
addfile ./Data/Monoid/Unit.hs
hunk ./Data/Monoid/Unit.hs 1
+{-# LANGUAGE FlexibleInstances, FlexibleContexts, UndecidableInstances, MultiParamTypeClasses #-}
+-----------------------------------------------------------------------------
+---- |
+---- Module      :  Data.Monoid.Unit
+---- Copyright   :  (c) Edward Kmett 2009
+---- License     :  BSD-style
+---- Maintainer  :  libraries@haskell.org
+---- Stability   :  experimental
+---- Portability :  portable
+----
+-----------------------------------------------------------------------------
+module Data.Monoid.Unit 
+    ( module Data.Monoid.Reducer
+    , Unit(Unit,getUnit) 
+    ) where
+
+import Control.Functor.Pointed
+import Data.Monoid.Reducer
+import Data.Monoid.Reducer.Char
+
+newtype Unit c = Unit { getUnit :: () } 
+
+instance Monoid (Unit c) where
+    mempty = Unit ()
+    _ `mappend` _ = Unit ()
+    mconcat _ = Unit ()
+
+instance Reducer c (Unit c) where 
+    unit _ = Unit ()
+    cons _ _ = Unit ()
+    snoc _ _ = Unit ()
+
+instance CharReducer (Unit Char)
+
+instance Functor Unit where
+    fmap _ _ = Unit ()
+    
+instance Pointed Unit where
+    point _ = Unit ()
hunk ./dist/doc/html/monoids/Data-Monoid-Applicative.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Applicative</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Applicative.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Applicative</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ATraversal"
-></A
-><B
->Traversal</B
-> f </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#Traversal"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ATraversal"
-></A
-><B
->Traversal</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetTraversal"
-></A
-><B
->getTraversal</B
-> :: f ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Traversal')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Traversal" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AAlternate"
-></A
-><B
->Alternate</B
-> f a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#Alternate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AAlternate"
-></A
-><B
->Alternate</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetAlternate"
-></A
-><B
->getAlternate</B
-> :: f a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Alternate')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Alternate" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMonoidTraversal"
-></A
-><B
->MonoidTraversal</B
-> m n </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#MonoidTraversal"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMonoidTraversal"
-></A
-><B
->MonoidTraversal</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMonoidTraversal"
-></A
-><B
->getMonoidTraversal</B
-> :: m n</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonoidTraversal')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MonoidTraversal" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
->MonoidTraversal</A
-> m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
->MonoidTraversal</A
-> m n)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/Data-Monoid-FingerTree.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.FingerTree</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-FingerTree.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.FingerTree</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-FingerTree.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator-Methods.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator.Methods</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator.Methods</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atraverse_"
-></A
-><B
->traverse_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; c -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#traverse_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afor_"
-></A
-><B
->for_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#for_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapM_"
-></A
-><B
->mapM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; c -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#mapM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AforM_"
-></A
-><B
->forM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#forM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AconcatMap"
-></A
-><B
->concatMap</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; [b]) -&gt; c -&gt; [b]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#concatMap"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aand"
-></A
-><B
->and</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#and"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aor"
-></A
-><B
->or</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#or"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aany"
-></A
-><B
->any</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#any"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aall"
-></A
-><B
->all</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#all"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asum"
-></A
-><B
->sum</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#sum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aproduct"
-></A
-><B
->product</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#product"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aelem"
-></A
-><B
->elem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AnotElem"
-></A
-><B
->notElem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-Methods.html#notElem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Generator-Methods.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AGenerator"
-></A
-><B
->Generator</B
-> c  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Generator"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Associated Types</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3AElem"
-></A
-><B
->Elem</B
-> c :: *</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapReduce"
-></A
-><B
->mapReduce</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapTo"
-></A
-><B
->mapTo</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapTo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapFrom"
-></A
-><B
->mapFrom</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Generator')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Generator" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> Text</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> ([] c)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapReduce"
-></A
-><B
->mapReduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapTo"
-></A
-><B
->mapTo</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapTo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapFrom"
-></A
-><B
->mapFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areduce"
-></A
-><B
->reduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#reduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/Data-Monoid-IntMap.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.IntMap</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-IntMap.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.IntMap</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnion"
-></A
-><B
->Union</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-IntMap.html#Union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Union" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnionWith"
-></A
-><B
->UnionWith</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-IntMap.html#UnionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UnionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-IntMap.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.SourcePosition</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.SourcePosition</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ASourcePosition"
-></A
-><B
->SourcePosition</B
-> file </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:SourcePosition')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:SourcePosition" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorZero <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorPlus <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceLine"
-></A
-><B
->SourceLine</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceColumn"
-></A
-><B
->SourceColumn</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceLine"
-></A
-><B
->sourceLine</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->SourceLine</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceColumn"
-></A
-><B
->sourceColumn</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->SourceColumn</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AstartOfFile"
-></A
-><B
->startOfFile</B
-> ::  f -&gt; <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#startOfFile"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AshowSourcePosition"
-></A
-><B
->showSourcePosition</B
-> :: <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#showSourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.UTF8.Decoder</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.UTF8.Decoder</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUTF8"
-></A
-><B
->UTF8</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#UTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UTF8')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UTF8" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunUTF8"
-></A
-><B
->runUTF8</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#runUTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.Words</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.Words</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AWords"
-></A
-><B
->Words</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Words"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Words')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Words" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunWords"
-></A
-><B
->runWords</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runWords"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALines"
-></A
-><B
->Lines</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Lines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Lines')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Lines" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunLines"
-></A
-><B
->runLines</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runLines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnspaced"
-></A
-><B
->Unspaced</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unspaced"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unspaced')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unspaced" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnlined"
-></A
-><B
->Unlined</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unlined"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unlined')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unlined" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwordsFrom"
-></A
-><B
->wordsFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#wordsFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AlinesFrom"
-></A
-><B
->linesFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#linesFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/Data-Monoid-Map.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Map</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Map.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Map</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnion"
-></A
-><B
->Union</B
-> k a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Map.html#Union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Union" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnionWith"
-></A
-><B
->UnionWith</B
-> k m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Map.html#UnionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UnionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Map.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AAction"
-></A
-><B
->Action</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#Action"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AAction"
-></A
-><B
->Action</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetAction"
-></A
-><B
->getAction</B
-> :: m ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Action')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Action" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMonadSum"
-></A
-><B
->MonadSum</B
-> m a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#MonadSum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMonadSum"
-></A
-><B
->MonadSum</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMonadSum"
-></A
-><B
->getMonadSum</B
-> :: m a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonadSum')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MonadSum" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AKleisliEndo"
-></A
-><B
->KleisliEndo</B
-> m a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#KleisliEndo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AKleisliEndo"
-></A
-><B
->KleisliEndo</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetKleisliEndo"
-></A
-><B
->getKleisliEndo</B
-> :: a -&gt; m a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:KleisliEndo')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:KleisliEndo" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
->KleisliEndo</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; m a) (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
->KleisliEndo</A
-> m a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMonoidAction"
-></A
-><B
->MonoidAction</B
-> m n </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#MonoidAction"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMonoidAction"
-></A
-><B
->MonoidAction</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMonoidAction"
-></A
-><B
->getMonoidAction</B
-> :: m n</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MonoidAction')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MonoidAction" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
->MonoidAction</A
-> m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
->MonoidAction</A
-> m n)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Ord</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Ord.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Ord</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Max
-</A
-></DT
-><DT
-><A HREF="#2"
->Min
-</A
-></DT
-><DT
-><A HREF="#3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></DT
-><DT
-><A HREF="#4"
->MinPriority: Min semigroup w/ added top
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMax"
->Max</A
-> a = <A HREF="#v%3AMax"
->Max</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMax"
->getMax</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMin"
->Min</A
-> a = <A HREF="#v%3AMin"
->Min</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMin"
->getMin</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMaxPriority"
->MaxPriority</A
-> a = <A HREF="#v%3AMaxPriority"
->MaxPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMaxPriority"
->getMaxPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMinPriority"
->MinPriority</A
-> a = <A HREF="#v%3AMinPriority"
->MinPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMinPriority"
->getMinPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Max
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMax"
-></A
-><B
->Max</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Max"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
->minBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMax"
-></A
-><B
->Max</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMax"
-></A
-><B
->getMax</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Max" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Min
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMin"
-></A
-><B
->Min</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Min"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> given by <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AmaxBound"
->maxBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMin"
-></A
-><B
->Min</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMin"
-></A
-><B
->getMin</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Min')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Min" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MaxPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the bottom element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMaxPriority"
-></A
-><B
->getMaxPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MaxPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MaxPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="4"
->MinPriority: Min semigroup w/ added top
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMinPriority"
-></A
-><B
->MinPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MinPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the top element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMinPriority"
-></A
-><B
->MinPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMinPriority"
-></A
-><B
->getMinPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MinPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MinPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.Char</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.Char</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A NAME="t%3ACharReducer"
-></A
-><B
->CharReducer</B
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#CharReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromChar"
-></A
-><B
->fromChar</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:CharReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:CharReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ()</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ([] <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,) m m')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,) m m' m'')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m''') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,,) m m' m'' m''')</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromChar"
-></A
-><B
->fromChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.With</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-With.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.With</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AWithReducer"
-></A
-><B
->WithReducer</B
-> c m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#WithReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AWithReducer"
-></A
-><B
->WithReducer</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ArunWithReducer"
-></A
-><B
->runWithReducer</B
-> :: (m, c)</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WithReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:WithReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; Measured m (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwithoutReducer"
-></A
-><B
->withoutReducer</B
-> ::  (c `<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
->` m) -&gt; c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#withoutReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A NAME="t%3AReducer"
-></A
-><B
->Reducer</B
-> c m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#Reducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunit"
-></A
-><B
->unit</B
-> :: c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asnoc"
-></A
-><B
->snoc</B
-> :: m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#snoc"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acons"
-></A
-><B
->cons</B
-> :: c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#cons"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Reducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Reducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
->All</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
->All</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
->Any</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
->Any</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ()</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AProduct"
->Product</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ASum"
->Sum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
->Dual</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,) m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Measured v a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (FingerTree v a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c o) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,) m n o)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c o, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c p) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,,) m n o p)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ([] c) ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> m) (<A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->UnionWith</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a) (<A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Union</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
->MonoidAction</A
-> m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->MonadSum</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m n) (<A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
->MonoidTraversal</A
-> m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Alternate</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
->Endo</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
->Endo</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; m a) (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
->KleisliEndo</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; m a) (<A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
->KleisliEndo</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k m) (<A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->UnionWith</A
-> k m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a) (<A HREF="Data-Monoid-Map.html#t%3AUnion"
->Union</A
-> k a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunit"
-></A
-><B
->unit</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asnoc"
-></A
-><B
->snoc</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#snoc"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acons"
-></A
-><B
->cons</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#cons"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldMapReduce"
-></A
-><B
->foldMapReduce</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (a -&gt; e) -&gt; f a -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#foldMapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/doc-index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->monoids-0.1.1: Lots of Monoids (Index)</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD COLSPAN="2" STYLE="padding-top:5px;"
-><FORM onsubmit="full_search(); return false;" ACTION=""
->Search: <INPUT ID="searchbox" onkeyup="quick_search()"
-> <INPUT VALUE="Search" TYPE="submit"
-> <SPAN ID="searchmsg"
-> </SPAN
-></FORM
-></TD
-></TR
-><TR
-><TD
-><TABLE ID="indexlist" CELLPADDING="0" CELLSPACING="5"
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->*&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->:&lt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->:&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&lt;|</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&lt;|&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&gt;&lt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&gt;=&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Action</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->All</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->all</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Aall"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Alternate</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3AAlternate"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AAlternate"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Alternative</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->and</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Aand"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Any</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->any</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Aany"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->appEndo</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Applicative</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->CharReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->concatMap</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3AconcatMap"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->cons</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Acons"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->dropUntil</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Dual</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AElem"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Methods</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Aelem"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->empty</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->EmptyL</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->EmptyR</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Endo</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->FingerTree</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->First</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fmap'</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldMapReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3AfoldMapReduce"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->forM_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3AforM_"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->for_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Afor_"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fromChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AfromChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fromList</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Generator</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Methods</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAction</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAll</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAlternate</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetAlternate"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAny</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getDual</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFirst</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getKleisliEndo</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetKleisliEndo"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLast</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMax</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMaxPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMin</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMinPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMonadSum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetMonadSum"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMonoidAction</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetMonoidAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMonoidTraversal</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetMonoidTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getProduct</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getSum</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getTraversal</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->getUnion</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#v%3AgetUnion"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#v%3AgetUnion"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->getUnionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#v%3AgetUnionWith"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#v%3AgetUnionWith"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->invalidChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AinvalidChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->KleisliEndo</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AKleisliEndo"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AKleisliEndo"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Last</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftA2</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->liftM2</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Lines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->linesFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AlinesFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapFrom"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Methods</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapM_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3AmapM_"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mappend</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Methods</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapTo</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapTo"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Methods</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Max</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MaxPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mconcat</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->measure</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Measured</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mempty</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Min</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MinPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MonadPlus</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MonadSum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AMonadSum"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AMonadSum"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Monoid</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MonoidAction</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AMonoidAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AMonoidAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MonoidTraversal</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3AMonoidTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AMonoidTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mplus</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mzero</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Monad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->notElem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3AnotElem"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->null</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->or</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Aor"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Product</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->product</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Aproduct"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->pure</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Applicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.Methods</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Reducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reverse</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runLines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunLines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#v%3ArunUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWithReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3ArunWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWords</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->showSourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AshowSourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->singleton</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->snoc</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->split</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->startOfFile</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AstartOfFile"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Sum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.Generator, Data.Monoid.Generator.Methods, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Asum"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->takeUntil</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Traversal</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->traverse'</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->traverse_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-Methods.html#v%3Atraverse_"
->Data.Monoid.Generator.Methods</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Union</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#t%3AUnion"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#t%3AUnion"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->UnionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Map.html#t%3AUnionWith"
->Data.Monoid.Map</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-IntMap.html#t%3AUnionWith"
->Data.Monoid.IntMap</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unit</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Ord, Data.Monoid.Monad, Data.Monoid.Applicative, Data.Monoid.FingerTree, Data.Monoid.Map, Data.Monoid.IntMap, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->UTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->ViewL</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->viewl</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->ViewR</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->viewr</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withoutReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AwithoutReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->WithReducer</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Words</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->wordsFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AwordsFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->|&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.FingerTree</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/doc-index.html
hunk ./dist/doc/html/monoids/haddock-util.js 1
-// Haddock JavaScript utilities
-function toggle(button,id)
-{
-   var n = document.getElementById(id).style;
-   if (n.display == "none")
-   {
-    button.src = "minus.gif";
-    n.display = "block";
-   }
-   else
-   {
-    button.src = "plus.gif";
-    n.display = "none";
-   }
-}
-
-
-var max_results = 75; // 50 is not enough to search for map in the base libraries
-var shown_range = null;
-var last_search = null;
-
-function quick_search()
-{
-    perform_search(false);
-}
-
-function full_search()
-{
-    perform_search(true);
-}
-
-
-function perform_search(full)
-{
-    var text = document.getElementById("searchbox").value.toLowerCase();
-    if (text == last_search && !full) return;
-    last_search = text;
-    
-    var table = document.getElementById("indexlist");
-    var status = document.getElementById("searchmsg");
-    var children = table.firstChild.childNodes;
-    
-    // first figure out the first node with the prefix
-    var first = bisect(-1);
-    var last = (first == -1 ? -1 : bisect(1));
-
-    if (first == -1)
-    {
-        table.className = "";
-        status.innerHTML = "No results found, displaying all";
-    }
-    else if (first == 0 && last == children.length - 1)
-    {
-        table.className = "";
-        status.innerHTML = "";
-    }
-    else if (last - first >= max_results && !full)
-    {
-        table.className = "";
-        status.innerHTML = "More than " + max_results + ", press Search to display";
-    }
-    else
-    {
-        // decide what you need to clear/show
-        if (shown_range)
-            setclass(shown_range[0], shown_range[1], "indexrow");
-        setclass(first, last, "indexshow");
-        shown_range = [first, last];
-        table.className = "indexsearch";
-        status.innerHTML = "";
-    }
-
-    
-    function setclass(first, last, status)
-    {
-        for (var i = first; i <= last; i++)
-        {
-            children[i].className = status;
-        }
-    }
-    
-    
-    // do a binary search, treating 0 as ...
-    // return either -1 (no 0's found) or location of most far match
-    function bisect(dir)
-    {
-        var first = 0, finish = children.length - 1;
-        var mid, success = false;
-
-        while (finish - first > 3)
-        {
-            mid = Math.floor((finish + first) / 2);
-
-            var i = checkitem(mid);
-            if (i == 0) i = dir;
-            if (i == -1)
-                finish = mid;
-            else
-                first = mid;
-        }
-        var a = (dir == 1 ? first : finish);
-        var b = (dir == 1 ? finish : first);
-        for (var i = b; i != a - dir; i -= dir)
-        {
-            if (checkitem(i) == 0) return i;
-        }
-        return -1;
-    }    
-    
-    
-    // from an index, decide what the result is
-    // 0 = match, -1 is lower, 1 is higher
-    function checkitem(i)
-    {
-        var s = getitem(i).toLowerCase().substr(0, text.length);
-        if (s == text) return 0;
-        else return (s > text ? -1 : 1);
-    }
-    
-    
-    // from an index, get its string
-    // this abstracts over alternates
-    function getitem(i)
-    {
-        for ( ; i >= 0; i--)
-        {
-            var s = children[i].firstChild.firstChild.data;
-            if (s.indexOf(' ') == -1)
-                return s;
-        }
-        return ""; // should never be reached
-    }
-}
rmfile ./dist/doc/html/monoids/haddock-util.js
hunk ./dist/doc/html/monoids/haddock.css 1
-/* -------- Global things --------- */
-
-BODY { 
-  background-color: #ffffff;
-  color: #000000;
-  font-family: sans-serif;
-  } 
-
-A:link    { color: #0000e0; text-decoration: none }
-A:visited { color: #0000a0; text-decoration: none }
-A:hover   { background-color: #e0e0ff; text-decoration: none }
-
-TABLE.vanilla {
-  width: 100%;
-  border-width: 0px;
-  /* I can't seem to specify cellspacing or cellpadding properly using CSS... */
-}
-
-TABLE.vanilla2 {
-  border-width: 0px;
-}
-
-/* <TT> font is a little too small in MSIE */
-TT  { font-size: 100%; }
-PRE { font-size: 100%; }
-
-LI P { margin: 0pt } 
-
-TD {
-  border-width: 0px;
-}
-
-TABLE.narrow {
-  border-width: 0px;
-}
-
-TD.s8  {  height: 8px;  }
-TD.s15 {  height: 15px; }
-
-SPAN.keyword { text-decoration: underline; }
-
-/* Resize the buttom image to match the text size */
-IMG.coll { width : 0.75em; height: 0.75em; margin-bottom: 0; margin-right: 0.5em }
-
-/* --------- Contents page ---------- */
-
-DIV.node {
-  padding-left: 3em;
-}
-
-DIV.cnode {
-  padding-left: 1.75em;
-}
-
-SPAN.pkg {
-  position: absolute;
-  left: 50em;
-}
-
-/* --------- Documentation elements ---------- */
-
-TD.children {
-  padding-left: 25px;
-  }
-
-TD.synopsis {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace
- }
-
-TD.decl { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  }
-
-TD.topdecl {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace;
-  vertical-align: top;
-}
-
-TABLE.declbar {
-  border-spacing: 0px;
- }
-
-TD.declname {
-  width: 100%;
- }
-
-TD.declbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #000099;
-  border-left-style: solid;
-  white-space: nowrap;
-  font-size: small;
- }
-
-/* 
-  arg is just like decl, except that wrapping is not allowed.  It is
-  used for function and constructor arguments which have a text box
-  to the right, where if wrapping is allowed the text box squashes up
-  the declaration by wrapping it.
-*/
-TD.arg { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  white-space: nowrap;
-  }
-
-TD.recfield { padding-left: 20px }
-
-TD.doc  { 
-  padding-top: 2px;
-  padding-left: 10px;
-  }
-
-TD.ndoc  { 
-  padding: 2px;
-  }
-
-TD.rdoc  { 
-  padding: 2px;
-  padding-left: 10px;
-  width: 100%;
-  }
-
-TD.body  { 
-  padding-left: 10px
-  }
-
-TD.pkg {
-  width: 100%;
-  padding-left: 10px
-}
-
-TABLE.indexsearch TR.indexrow {
-  display: none;
-}
-TABLE.indexsearch TR.indexshow {
-  display: table-row;
-}
-
-TD.indexentry {
-  vertical-align: top;
-  padding-right: 10px
-  }
-
-TD.indexannot {
-  vertical-align: top;
-  padding-left: 20px;
-  white-space: nowrap
-  }
-
-TD.indexlinks {
-  width: 100%
-  }
-
-/* ------- Section Headings ------- */
-
-TD.section1 {
-  padding-top: 15px;
-  font-weight: bold;
-  font-size: 150%
-  }
-
-TD.section2 {
-  padding-top: 10px;
-  font-weight: bold;
-  font-size: 130%
-  }
-
-TD.section3 {
-  padding-top: 5px;
-  font-weight: bold;
-  font-size: 110%
-  }
-
-TD.section4 {
-  font-weight: bold;
-  font-size: 100%
-  }
-
-/* -------------- The title bar at the top of the page */
-
-TD.infohead {
-  color: #ffffff;
-  font-weight: bold;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.infoval {
-  color: #ffffff;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.topbar {
-  background-color: #000099;
-  padding: 5px;
-}
-
-TD.title {
-  color: #ffffff;
-  padding-left: 10px;
-  width: 100%
-  }
-
-TD.topbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #ffffff;
-  border-left-style: solid;
-  white-space: nowrap;
-  }
-
-TD.topbut A:link {
-  color: #ffffff
-  }
-
-TD.topbut A:visited {
-  color: #ffff00
-  }
-
-TD.topbut A:hover {
-  background-color: #6060ff;
-  }
-
-TD.topbut:hover {
-  background-color: #6060ff
-  }
-
-TD.modulebar { 
-  background-color: #0077dd;
-  padding: 5px;
-  border-top-width: 1px;
-  border-top-color: #ffffff;
-  border-top-style: solid;
-  }
-
-/* --------- The page footer --------- */
-
-TD.botbar {
-  background-color: #000099;
-  color: #ffffff;
-  padding: 5px
-  }
-TD.botbar A:link {
-  color: #ffffff;
-  text-decoration: underline
-  }
-TD.botbar A:visited {
-  color: #ffff00
-  }
-TD.botbar A:hover {
-  background-color: #6060ff
-  }
-
rmfile ./dist/doc/html/monoids/haddock.css
binary ./dist/doc/html/monoids/haskell_icon.gif
oldhex
*47494638376110001000f70f00000000800000008000808000000080800080008080c0c0c08080
*80ff000000ff00ffff000000ffff00ff00ffffffffff0000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*0021f90401000000002c000000001000100007086c0001007840b0a0418202073e38b0b021c387
*07143e2440c0a143040e091cd0787021c686151f84347800e343901d4b12646870e44a930d0952
*3ca832a6cc990555b2bc2992e4c79d3847ea2c88b3a7c89a2c8b8aa43874e941a60810003840b5
*aa55aa511346ddca75abc080003b
newhex
*
rmfile ./dist/doc/html/monoids/haskell_icon.gif
hunk ./dist/doc/html/monoids/index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->monoids-0.1.1: Lots of Monoids</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.1: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->monoids-0.1.1: Lots of Monoids</TD
-></TR
-><TR
-><TD CLASS="doc"
->Lots of Monoids
-</TD
-></TR
-><TR
-><TD CLASS="section1"
->Modules</TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD STYLE="width: 50em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:0')" ALT="show/hide"
->Data</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:0" STYLE="display:block;"
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:1')" ALT="show/hide"
->Monoid</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Applicative.html"
->Data.Monoid.Applicative</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-FingerTree.html"
->Data.Monoid.FingerTree</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:2')" ALT="show/hide"
-><A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:2" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Generator-Methods.html"
->Data.Monoid.Generator.Methods</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-IntMap.html"
->Data.Monoid.IntMap</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:3')" ALT="show/hide"
->Lexical</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:3" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:4')" ALT="show/hide"
->UTF8</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:4" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-Words.html"
->Data.Monoid.Lexical.Words</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Map.html"
->Data.Monoid.Map</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Monad.html"
->Data.Monoid.Monad</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Ord.html"
->Data.Monoid.Ord</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:5')" ALT="show/hide"
-><A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:5" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-With.html"
->Data.Monoid.Reducer.With</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/index.html
binary ./dist/doc/html/monoids/minus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002118c8f
*a00bc6eb5e0b40583b6596f1a11f14003b
newhex
*
rmfile ./dist/doc/html/monoids/minus.gif
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*0d0cface00040000000000002fa30000000000001fe25b00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000700000000000000270000000000000000
*000000000000000700000000000000280000000000000000000000000000000700000000000000
*2900000000000000000000000000000007000000000000002a0000000000000000000000000000
*0007000000000000002b00000000000000000000000000000007000000000000002c0000000000
*0000000000000000000007000000000000002d0000000000000000000000000000000800000000
*0000002e00000000000000000000000000000008000000000000002f0000000000000000000000
*000000000800000000000000300000000000000000000000000000000800000000000000310000
*000000000000000000000000000800000000000000320000000000000000000000000000000800
*000000000000330000000000000000000000000000000800000000000000340000000000000000
*000000000000000800000000000000350000000000000000000000000000000800000000000000
*360000000000000000000000000000000900000000000000370000000000000000000000000000
*000900000000000000380000000000000000000000000000000900000000000000390000000000
*0000000000000000000009000000000000003a0000000000000000000000000000000a00000000
*0000003b0000000000000000000000000000000a000000000000003c0000000000000000000000
*000000000a000000000000003d0000000000000000000000000000000a000000000000003e0000
*000000000000000000000000000b000000000000003f0000000000000000000000000000000b00
*000000000000400000000000000000000000000000000b00000000000000410000000000000000
*000000000000000b00000000000000420000000000000000000000000000000b00000000000000
*430000000000000000000000000000000b00000000000000440000000000000000000000000000
*000c00000000000000450000000000000000000000000000000c00000000000000460000000000
*000000000000000000000c00000000000000470000000000000000000000000000000c00000000
*000000480000000000000000000000000000000c00000000000000490000000000000000000000
*000000000c000000000000004a0000000000000000000000000000000c000000000000004b0000
*000000000000000000000000000c000000000000004c0000000000000000000000000000000c00
*0000000000004d0000000000000000000000000000000c000000000000004e0000000000000000
*000000000000000c000000000000004f0000000000000000000000000000000c00000000000000
*500000000000000000000000000000000c00000000000000510000000000000000000000000000
*000d00000000000000520000000000000000000000000000000d00000000000000530000000000
*000000000000000000000d00000000000000540000000000000000000000000000000d00000000
*000000550000000000000000000000000000000d00000000000000560000000000000000000000
*000000000d00000000000000570000000000000000000000000000000d00000000000000580000
*000000000000000000000000000d00000000000000590000000000000000000000000000000d00
*0000000000005a0000000000000000000000000000000d0e000000000000000000000000000000
*01000000000021000000000000005b000000000000005c000000000000005d000000000000005e
*000000000000005f00000000000000600000000000000061000000000000006200000000000000
*630000000000000064000000000000006500000000000000660000000000000067000000000000
*00680000000000000069000000000000006a000000000000006b000000000000006c0000000000
*00006d000000000000006e000000000000006f0000000000000070000000000000007100000000
*000000720000000000000073000000000000007400000000000000750000000000000076000000
*000000000000000000000000010000000000000002000000000000000300000000000000040500
*000000000000000000000000000001000000000000000200000000000000030000000000000004
*00000000000000000000000000000002000000000024000000000000005b000000000000005c00
*0000000000005d000000000000005e000000000000005f00000000000000600000000000000061
*000000000000006200000000000000630000000000000064000000000000006500000000000000
*66000000000000006700000000000000680000000000000069000000000000006a000000000000
*006b000000000000006c000000000000006d000000000000006e000000000000006f0000000000
*000070000000000000007100000000000000720000000000000073000000000000007400000000
*000000750000000000000076000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070300
*000000000000050000000000000007000000000000000600000000000000000000000000000003
*00000000002b000000000000005b000000000000005c000000000000005d000000000000005e00
*0000000000005f0000000000000060000000000000006100000000000000620000000000000063
*000000000000006400000000000000650000000000000066000000000000006700000000000000
*680000000000000069000000000000006a000000000000006b000000000000006c000000000000
*006d000000000000006e000000000000006f000000000000007000000000000000710000000000
*000072000000000000007300000000000000740000000000000075000000000000007600000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*000000000500000000000000060000000000000007000000000000000800000000000000090000
*00000000000a000000000000000b000000000000000c000000000000000d000000000000000e07
*0000000000000008000000000000000a0000000000000009000000000000000d00000000000000
*0c000000000000000b000000000000000e00000000000000000000000000000004000000000026
*000000000000005b000000000000005c000000000000005d000000000000005e00000000000000
*5f0000000000000060000000000000006100000000000000620000000000000063000000000000
*006400000000000000650000000000000066000000000000006700000000000000680000000000
*000069000000000000006a000000000000006b000000000000006c000000000000006d00000000
*0000006e000000000000006f000000000000007000000000000000710000000000000072000000
*000000007300000000000000740000000000000075000000000000007600000000000000000000
*000000000001000000000000000200000000000000030000000000000004000000000000000500
*000000000000060000000000000007000000000000000f00000000000000100200000000000000
*0f000000000000001000000000000000000000000000000005000000000025000000000000005b
*000000000000005c000000000000005d000000000000005e000000000000005f00000000000000
*600000000000000061000000000000006200000000000000630000000000000064000000000000
*006500000000000000660000000000000067000000000000006800000000000000690000000000
*00006a000000000000006b000000000000006c000000000000006d000000000000006e00000000
*0000006f0000000000000070000000000000007100000000000000720000000000000073000000
*000000007400000000000000750000000000000076000000000000000000000000000000010000
*000000000002000000000000000300000000000000040000000000000011000000000000001200
*000000000000130000000000000014040000000000000011000000000000001200000000000000
*130000000000000014000000000000000000000000000000060000000004000000000000001503
*0102040000005400000068000000650000002001040100000000000000005e000000000000000e
*000000000000000f01020100000020010701020100000028010401000000000000000077000000
*000000000e00000000000000100102010000002c01040100000000000000007800000000000000
*0e0000000000000011020100000029010206000000200000006f00000076000000650000007200
*0000200107010401000000000000000079000000000000000e0000000000000011020200000020
*000000610102070000002000000077000000680000006500000072000000650000002001040100
*0000000000000078000000000000000e0000000000000011021400000020000000690000007300
*00002000000074000000680000006500000020000000740000006f000000700000002000000065
*0000006c000000650000006d000000650000006e000000740000000a0000000000000018030102
*040000005400000068000000650000002001040100000000000000005e000000000000000e0000
*00000000000f0102010000002001070102010000002801040100000000000000007a0000000000
*00000e00000000000000100102010000002c010401000000000000000078000000000000000e00
*00000000000011020100000029010206000000200000006f000000760000006500000072000000
*200107010401000000000000000079000000000000000e00000000000000110202000000200000
*006101020700000020000000770000006800000065000000720000006500000020010401000000
*000000000078000000000000000e00000000000000110217000000200000006900000073000000
*2000000074000000680000006500000020000000620000006f00000074000000740000006f0000
*006d00000020000000650000006c000000650000006d000000650000006e000000740000000a00
*0000000000001b030102040000005400000068000000650000002001040100000000000000005e
*000000000000000e000000000000000f01020a0000002000000067000000690000007600000065
*0000006e0000002000000062000000790000002001070102010000002801040100000000000000
*0077000000000000000e00000000000000100102010000002c01040100000000000000007b0000
*00000000000e000000000000001202010000002902010000000a000000000000001e0301020400
*00005400000068000000650000002001040100000000000000005e000000000000000e00000000
*0000000f0102010000002001070102010000002801040100000000000000007a00000000000000
*0e00000000000000100102010000002c01040100000000000000007c000000000000000e000000
*000000001202010000002902010000000a11000000000000005b000000000000005d0000000000
*00005e000000000000000000000000000000010000000000000015000000000000001600000000
*0000001700000000000000180000000000000019000000000000001a000000000000001b000000
*000000001c000000000000001d000000000000001e000000000000001f00000000000000200c00
*0000000000001e000000000000001f0000000000000020000000000000001b000000000000001c
*000000000000001d00000000000000180000000000000019000000000000001a00000000000000
*150000000000000016000000000000001700000000000000000000000000000007000000000032
*000000000000007d000000000000005b000000000000005c000000000000005d00000000000000
*5e000000000000005f000000000000006000000000000000610000000000000062000000000000
*006300000000000000640000000000000065000000000000006600000000000000670000000000
*0000680000000000000069000000000000006a000000000000006b000000000000006c00000000
*0000006d000000000000006e000000000000006f00000000000000700000000000000071000000
*000000007200000000000000730000000000000074000000000000007500000000000000760000
*00000000007e000000000000007f00000000000000800000000000000081000000000000000000
*000000000000010000000000000002000000000000000300000000000000040000000000000021
*000000000000002200000000000000230000000000000024000000000000002500000000000000
*26000000000000002700000000000000280000000000000029000000000000002a000000000000
*002b000000000000002c0c000000000000002a000000000000002b000000000000002c00000000
*000000270000000000000028000000000000002900000000000000240000000000000025000000
*000000002600000000000000210000000000000022000000000000002300000000000000000000
*000000000008000000000031000000000000005b00000000000000820000000000000083000000
*000000008400000000000000850000000000000086000000000000008700000000000000880000
*00000000005c000000000000005d000000000000005e000000000000005f000000000000006000
*000000000000610000000000000062000000000000006300000000000000640000000000000065
*000000000000006600000000000000670000000000000068000000000000006900000000000000
*6a000000000000006b000000000000006c000000000000006d000000000000006e000000000000
*006f00000000000000700000000000000071000000000000007200000000000000730000000000
*000074000000000000007500000000000000760000000000000000000000000000000100000000
*0000000200000000000000030000000000000004000000000000002d000000000000002e000000
*000000002f00000000000000300000000000000031000000000000003200000000000000330000
*000000000034000000000000003509000000000000003300000000000000340000000000000035
*000000000000003000000000000000310000000000000032000000000000002d00000000000000
*2e000000000000002f0000000000000000000000000000001300000000001f000000000000005b
*000000000000005d000000000000005e0000000000000000000000000000000100000000000000
*0200000000000000030000000000000089000000000000008a000000000000008b000000000000
*008c000000000000008d000000000000008e000000000000008f00000000000000900000000000
*000091000000000000009200000000000000930000000000000094000000000000009500000000
*00000096000000000000009700000000000000980000000000000099000000000000009a000000
*000000009b000000000000009c000000000000009d000000000000009e000000000000009f0000
*0000000000a0000000000000000000000000000000000900000000000b000000000000005b0000
*00000000005d000000000000005e00000000000000000000000000000001000000000000000200
*000000000000030000000000000036000000000000003700000000000000380000000000000039
*040000000000000038000000000000003900000000000000360000000000000037000000000000
*0000000000000000000a00000000000b000000000000005b000000000000005d00000000000000
*5e0000000000000000000000000000000100000000000000020000000000000003000000000000
*003a000000000000003b000000000000003c000000000000003d04000000000000003c00000000
*0000003d000000000000003a000000000000003b0000000000000000000000000000000b000000
*000022000000000000005b000000000000005c000000000000005d000000000000005e00000000
*0000005f0000000000000060000000000000006100000000000000620000000000000063000000
*000000006400000000000000650000000000000066000000000000006700000000000000680000
*000000000069000000000000006a000000000000006b000000000000006c000000000000006d00
*0000000000006e000000000000006f000000000000007000000000000000710000000000000072
*000000000000007300000000000000740000000000000075000000000000007600000000000000
*3e000000000000003f000000000000004000000000000000410000000000000042000000000000
*004306000000000000003e000000000000003f0000000000000040000000000000004100000000
*0000004200000000000000430000000000000000000000000000000c00000000002f0000000000
*00005b000000000000005c000000000000005d000000000000005e000000000000005f00000000
*000000600000000000000061000000000000006200000000000000630000000000000064000000
*000000006500000000000000660000000000000067000000000000006800000000000000690000
*00000000006a000000000000006b000000000000006c000000000000006d000000000000006e00
*0000000000006f0000000000000070000000000000007100000000000000720000000000000073
*000000000000007400000000000000750000000000000076000000000000003e00000000000000
*3f0000000000000040000000000000004100000000000000420000000000000043000000000000
*004400000000000000450000000000000046000000000000004700000000000000480000000000
*000049000000000000004a000000000000004b000000000000004c000000000000004d00000000
*0000004e000000000000004f00000000000000500d000000000000004400000000000000450000
*000000000046000000000000004700000000000000480000000000000049000000000000004a00
*0000000000004b000000000000004c000000000000004d000000000000004e000000000000004f
*00000000000000500000000000000000000000000000000d00000000002e000000000000005b00
*0000000000005c000000000000005d000000000000005e000000000000005f0000000000000060
*000000000000006100000000000000620000000000000063000000000000006400000000000000
*650000000000000066000000000000006700000000000000680000000000000069000000000000
*006a000000000000006b000000000000006c000000000000006d000000000000006e0000000000
*00006f000000000000007000000000000000710000000000000072000000000000007300000000
*000000740000000000000075000000000000007600000000000000000000000000000001000000
*000000000200000000000000030000000000000004000000000000000500000000000000060000
*000000000007000000000000005100000000000000520000000000000053000000000000005400
*000000000000550000000000000056000000000000005700000000000000580000000000000059
*000000000000005a0a000000000000005600000000000000570000000000000055000000000000
*005800000000000000530000000000000054000000000000005100000000000000520000000000
*000059000000000000005a00000000000000a10000000000000000000000000000000103000000
*000000001400000000000000000000000000000001000000000000000015000000000000000000
*000000000000010000000000000000160000000000000000000000000000000100000000000000
*001700000000000000000000000000000001000000000000000018000000000000000000000000
*000000020300000000000000190000000000000000000000000000000200000000000000001a00
*00000000000000000000000000000200000000000000001b000000000000000000000000000000
*0303000000000000001c0000000000000000000000000000000303000000000000001d00000000
*00000000000000000000000303000000000000001e000000000000000000000000000000030000
*0000000000001f0000000000000000000000000000000300000000000000002000000000000000
*000000000000000003000000000000000021000000000000000000000000000000030000000000
*000000220000000000000000000000000000000403000000000000002300000000000000000000
*000000000004000000000000000024000000000000000000000000000000050300000000000000
*250000000000000000000000000000000501000000000000002500000000000000000000000000
*000005000000000000000026000000000000000000000000000000050000000000000000270000
*000000000000000000000000000603000000000000002800000000000000000000000000000006
*010000000000000028000000000000000000000000000000060000000000000000290000000000
*000000000000000000000603000000000000002a00000000000000000000000000000006010000
*00000000002a0000000000000000000000000000000600000000000000002b0000000000000000
*000000000000000603000000000000002c00000000000000000000000000000006010000000000
*00002c0000000000000000000000000000000600000000000000002d0000000000000000000000
*000000000603000000000000002e0000000000000000000000000000000601000000000000002e
*0000000000000000000000000000000600000000000000002f0000000000000000000000000000
*000703000000000000003000000000000000000000000000000007010000000000000030000000
*000000000000000000000000070000000000000000310000000000000000000000000000000703
*000000000000003200000000000000000000000000000007010000000000000032000000000000
*000000000000000000070000000000000000330000000000000000000000000000000703000000
*000000003400000000000000000000000000000007010000000000000034000000000000000000
*000000000000070000000000000000350000000000000000000000000000000703000000000000
*003600000000000000000000000000000007010000000000000036000000000000000000000000
*000000070000000000000000370000000000000000000000000000000803000000000000003800
*000000000000000000000000000008010000000000000038000000000000000000000000000000
*080000000000000000390000000000000000000000000000000803000000000000003a00000000
*00000000000000000000000801000000000000003a000000000000000000000000000000080000
*0000000000003b0000000000000000000000000000000803000000000000003c00000000000000
*00000000000000000801000000000000003c000000000000000000000000000000080000000000
*0000003d0000000000000000000000000000000903000000000000003e00000000000000000000
*00000000000900000000000000003f000000000000000000000000000000090300000000000000
*400000000000000000000000000000000900000000000000004100000000000000000000000000
*00000a03000000000000003e0000000000000000000000000000000a00000000000000003f0000
*000000000000000000000000000a0300000000000000400000000000000000000000000000000a
*0000000000000000410000000000000000000000000000000b0300000000000000420000000000
*000000000000000000000b0300000000000000430000000000000000000000000000000b000000
*0000000000440000000000000000000000000000000b0000000000000000450000000000000000
*000000000000000b0000000000000000460000000000000000000000000000000b000000000000
*0000470000000000000000000000000000000c0000000000000000480000000000000000000000
*000000000c0000000000000000490000000000000000000000000000000c00000000000000004a
*0000000000000000000000000000000c00000000000000004b0000000000000000000000000000
*000c00000000000000004c0000000000000000000000000000000c00000000000000004d000000
*0000000000000000000000000c00000000000000004e0000000000000000000000000000000c00
*000000000000004f0000000000000000000000000000000c000000000000000050000000000000
*0000000000000000000c0000000000000000510000000000000000000000000000000c00000000
*00000000520000000000000000000000000000000c000000000000000053000000000000000000
*0000000000000c0000000000000000540000000000000000000000000000000d03000000000000
*00550000000000000000000000000000000d000000000000000056000000000000000000000000
*0000000d0300000000000000570000000000000000000000000000000d00000000000000005800
*00000000000000000000000000000d030000000000000059000000000000000000000000000000
*0d03000000000000005a0000000000000000000000000000000d00000000000000005b00000000
*00000000000000000000000d00000000000000005c0000000000000000000000000000000d0000
*0000000000005d0000000000000000000000000000000d00000000000000005e00000000000000
*0e000000000000000f00000000000000005f000000000000000e000000000000000f0000000000
*00000060000000000000000e000000000000000f000000000000000061000000000000000e0000
*00000000000f030000000000000062000000000000000e000000000000000f0000000000000000
*63000000000000000e000000000000000f010000000000000064000000000000000e0000000000
*00000f030000000000000064000000000000000e000000000000000f0000000000000000650000
*00000000000e000000000000000f010000000000000066000000000000000e000000000000000f
*030000000000000066000000000000000e000000000000000f0000000000000000670000000000
*00000e000000000000000f010000000000000068000000000000000e000000000000000f030000
*000000000068000000000000000e000000000000000f000000000000000069000000000000000e
*000000000000000f01000000000000006a000000000000000e000000000000000f030000000000
*00006a000000000000000e000000000000000f00000000000000006b000000000000000e000000
*000000000f01000000000000006c000000000000000e000000000000000f03000000000000006c
*000000000000000e000000000000000f00000000000000006d000000000000000e000000000000
*000f01000000000000006e000000000000000e000000000000000f03000000000000006e000000
*000000000e000000000000000f00000000000000006f000000000000000e000000000000000f01
*0000000000000070000000000000000e000000000000000f030000000000000070000000000000
*000e000000000000000f000000000000000071000000000000000e000000000000000f01000000
*0000000072000000000000000e000000000000000f030000000000000072000000000000000e00
*00000000000073000000000000000074000000000000000e000000000000001101000000000000
*0075000000000000000e0000000000000011030000000000000076000000000000000e00000000
*00000073000000000000000077000000000000000e000000000000007800000000000000007900
*0000000000000e000000000000007800000000000000007a000000000000000e00000000000000
*7b03000000000000007c000000000000000e000000000000007b00000000000000007d00000000
*0000000e000000000000007b00000000000000007e000000000000000e000000000000007b0000
*0000000000007f000000000000000e000000000000007b00000000000000008000000000000000
*0e0000000000000081000000000000000082000000000000000e00000000000000810000000000
*00000083000000000000000e0000000000000081000000000000000084000000000000000e0000
*000000000081030000000000000085000000000000000e00000000000000810000000000000000
*86000000000000000e0000000000000081000000000000000087000000000000000e0000000000
*0000810300000000000000880000000000000089000000000000008a00000000000000008b0000
*000000000089000000000000008a00000000000000008c0000000000000089000000000000008a
*01000000000000008d0000000000000089000000000000008a01000000000000008e0000000000
*000089000000000000008a01000000000000008f0000000000000089000000000000008a010000
*0000000000900000000000000089000000000000008a0300000000000000910000000000000089
*000000000000008a0300000000000000920000000000000089000000000000008a030000000000
*0000930000000000000089000000000000008a0300000000000000940000000000000089000000
*000000008a0000000000000000950000000000000089000000000000008a000000000000000096
*0000000000000089000000000000008a0000000000000000970000000000000089000000000000
*008a0000000000000000870000000000000089000000000000008a000000000000000098000000
*0000000089000000000000008a0000000000000000990000000000000089000000000000008a00
*000000000000009a0000000000000089000000000000008a00000000000000009b000000000000
*0089000000000000008a00000000000000009c0000000000000089000000000000008a00000000
*000000009d0000000000000089000000000000008a00000000000000009e000000000000008900
*0000000000008a00000000000000009f0000000000000089000000000000008a00000000000000
*00a00000000000000089000000000000008a0000000000000000a100000000000000a200000000
*0000000d6d6f6e6f6964732d302e312e310000000000000013446174612e4d6f6e6f69642e5265
*64756365720000000000000018446174612e4d6f6e6f69642e526564756365722e436861720000
*000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f736974696f
*6e0000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446382e4465636f64
*65720000000000000018446174612e4d6f6e6f69642e526564756365722e576974680000000000
*00000f446174612e4d6f6e6f69642e4f72640000000000000011446174612e4d6f6e6f69642e4d
*6f6e61640000000000000017446174612e4d6f6e6f69642e4170706c6963617469766500000000
*0000000f446174612e4d6f6e6f69642e4d61700000000000000012446174612e4d6f6e6f69642e
*496e744d61700000000000000015446174612e4d6f6e6f69642e47656e657261746f7200000000
*0000001d446174612e4d6f6e6f69642e47656e657261746f722e4d6574686f6473000000000000
*0019446174612e4d6f6e6f69642e4c65786963616c2e576f726473000000000000000462617365
*000000000000000b446174612e4d6f6e6f69640000000000000008446174612e4f726400000000
*0000000a446174612e4d6179626500000000000000075072656c75646500000000000000164461
*74612e4d6f6e6f69642e46696e6765725472656500000000000000075265647563657200000000
*00000004756e69740000000000000004736e6f630000000000000004636f6e7300000000000000
*0d666f6c644d6170526564756365000000000000000b4368617252656475636572000000000000
*000866726f6d43686172000000000000000b696e76616c696443686172000000000000000e536f
*75726365506f736974696f6e000000000000000c536f75726365436f6c756d6e00000000000000
*0a536f757263654c696e65000000000000000b73746172744f6646696c65000000000000000c73
*6f75726365436f6c756d6e000000000000000a736f757263654c696e6500000000000000127368
*6f77536f75726365506f736974696f6e000000000000000455544638000000000000000772756e
*55544638000000000000000b5769746852656475636572000000000000000e72756e5769746852
*656475636572000000000000000e776974686f757452656475636572000000000000000b4d696e
*5072696f72697479000000000000000e6765744d696e5072696f72697479000000000000000b4d
*61785072696f72697479000000000000000e6765744d61785072696f7269747900000000000000
*034d696e00000000000000066765744d696e00000000000000034d617800000000000000066765
*744d6178000000000000000c4d6f6e6f6964416374696f6e000000000000000f6765744d6f6e6f
*6964416374696f6e000000000000000b4b6c6569736c69456e646f000000000000000e6765744b
*6c6569736c69456e646f00000000000000084d6f6e616453756d000000000000000b6765744d6f
*6e616453756d0000000000000006416374696f6e0000000000000009676574416374696f6e0000
*00000000000f4d6f6e6f696454726176657273616c00000000000000126765744d6f6e6f696454
*726176657273616c0000000000000009416c7465726e617465000000000000000c676574416c74
*65726e617465000000000000000954726176657273616c000000000000000c6765745472617665
*7273616c0000000000000009556e696f6e57697468000000000000000c676574556e696f6e5769
*74680000000000000005556e696f6e0000000000000008676574556e696f6e0000000000000009
*47656e657261746f720000000000000004456c656d00000000000000096d617052656475636500
*000000000000056d6170546f00000000000000076d617046726f6d000000000000000672656475
*6365000000000000000974726176657273655f0000000000000004666f725f0000000000000005
*6d61704d5f0000000000000005666f724d5f0000000000000009636f6e6361744d617000000000
*00000003616e6400000000000000026f720000000000000003616e790000000000000003616c6c
*000000000000000373756d000000000000000770726f647563740000000000000004656c656d00
*000000000000076e6f74456c656d0000000000000007556e6c696e6564000000000000000a7275
*6e556e6c696e65640000000000000008556e737061636564000000000000000b72756e556e7370
*6163656400000000000000054c696e65730000000000000005576f726473000000000000000872
*756e576f726473000000000000000872756e4c696e65730000000000000009776f72647346726f
*6d00000000000000096c696e657346726f6d00000000000000076d617070656e64000000000000
*00076d636f6e63617400000000000000066d656d70747900000000000000064d6f6e6f69640000
*0000000000076765744475616c00000000000000044475616c0000000000000007617070456e64
*6f0000000000000004456e646f0000000000000006676574416c6c0000000000000003416c6c00
*00000000000006676574416e790000000000000003416e79000000000000000667657453756d00
*0000000000000353756d000000000000000a67657450726f64756374000000000000000750726f
*647563740000000000000008676574466972737400000000000000054669727374000000000000
*00076765744c61737400000000000000044c617374000000000000000b4748432e436c61737365
*7300000000000000036d696e00000000000000074e6f7468696e6700000000000000054d617962
*6500000000000000036d617800000000000000084748432e456e756d00000000000000086d6178
*426f756e6400000000000000086d696e426f756e64000000000000000d436f6e74726f6c2e4d6f
*6e616400000000000000094d6f6e6164506c757300000000000000066c6966744d320000000000
*0000033e3d3e00000000000000056d706c757300000000000000056d7a65726f00000000000000
*13436f6e74726f6c2e4170706c6963617469766500000000000000066c69667441320000000000
*0000022a3e000000000000000470757265000000000000000b4170706c69636174697665000000
*00000000033c7c3e0000000000000005656d707479000000000000000b416c7465726e61746976
*65000000000000000e66696e676572747265652d302e30000000000000000f446174612e46696e
*6765725472656500000000000000023c7c000000000000000573706c697400000000000000023a
*3e0000000000000006456d7074795200000000000000023a3c0000000000000006456d7074794c
*0000000000000005566965774c00000000000000055669657752000000000000000a46696e6765
*725472656500000000000000084d6561737572656400000000000000023e3c0000000000000007
*6d656173757265000000000000000964726f70556e74696c0000000000000005666d6170270000
*00000000000866726f6d4c69737400000000000000046e756c6c00000000000000077265766572
*7365000000000000000973696e676c65746f6e000000000000000974616b65556e74696c000000
*00000000097472617665727365270000000000000005766965776c000000000000000576696577
*7200000000000000027c3e
newhex
*
rmfile ./dist/doc/html/monoids/monoids.haddock
binary ./dist/doc/html/monoids/plus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002148c8f
*a00bb6b29c82ca897b5b7871cfce74085200003b
newhex
*
rmfile ./dist/doc/html/monoids/plus.gif
hunk ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Applicative.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Traversal</span><span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span><span class='hs-layout'>,</span><span class='hs-varid'>getTraversal</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Alternate</span><span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span><span class='hs-layout'>,</span><span class='hs-varid'>getAlternate</span><span class='hs-layout'>)</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonoidTraversal</span><span class='hs-layout'>(</span><span class='hs-conid'>MonoidTraversal</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonoidTraversal</span><span class='hs-layout'>)</span>
-<a name="line-8"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>pure</span><span class='hs-layout'>,</span> <span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span> <span class='hs-varid'>empty</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>liftA2</span><span class='hs-layout'>)</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-12"></a>
-<a name="line-13"></a><a name="Traversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-16"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="snocTraversal"></a><span class='hs-comment'>{-# RULES "unitTraversal" unit = Traversal #-}</span>
-<a name="line-25"></a><span class='hs-comment'>{-# RULES "snocTraversal" snoc = snocTraversal #-}</span>
-<a name="line-26"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span>
-<a name="line-27"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Traversal</span>
-<a name="line-28"></a>
-<a name="line-29"></a><a name="Alternate"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAlternate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-30"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span> 
-<a name="line-34"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternate</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span>
-<a name="line-38"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Alternate</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-39"></a>    <span class='hs-conid'>Alternate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Alternate</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-40"></a>
-<a name="line-41"></a><a name="MonoidTraversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonoidTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-layout'>}</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>    <span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidTraversal</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidTraversal</span>
-<a name="line-49"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-FingerTree.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/FingerTree.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-9"></a>
-<a name="line-10"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-11"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span>
-<a name="line-12"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;&lt;</span><span class='hs-layout'>)</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span>
-<a name="line-16"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span> 
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-comment'>{-
-<a name="line-20"></a>instance Measured v a =&gt; Reducer (FingerTree v a) (FingerTree v a) where
-<a name="line-21"></a>    unit = id
-<a name="line-22"></a>    cons = mappend
-<a name="line-23"></a>    snoc = mappend
-<a name="line-24"></a>-}</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-FingerTree.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator-Methods.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator/Methods.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies, ScopedTypeVariables #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>Methods</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>traverse_</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>for_</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapM_</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>forM_</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>and</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>or</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>any</span>
-<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>all</span>
-<a name="line-13"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
-<a name="line-14"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
-<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
-<a name="line-17"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>)</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="traverse_"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-25"></a><span class='hs-definition'>traverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-26"></a>    
-<a name="line-27"></a><a name="for_"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-28"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
-<a name="line-29"></a>
-<a name="line-30"></a><a name="mapM_"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-31"></a><span class='hs-definition'>mapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-32"></a>
-<a name="line-33"></a><a name="forM_"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-34"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
-<a name="line-35"></a>
-<a name="line-36"></a><a name="concatMap"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-37"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span>
-<a name="line-38"></a>
-<a name="line-39"></a><a name="and"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-40"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-41"></a>
-<a name="line-42"></a><a name="or"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-43"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="any"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-46"></a><span class='hs-definition'>any</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-47"></a>
-<a name="line-48"></a><a name="all"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-49"></a><span class='hs-definition'>all</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="sum"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-52"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSum</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-53"></a>
-<a name="line-54"></a><a name="product"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-55"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getProduct</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-56"></a>
-<a name="line-57"></a><a name="elem"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-58"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><a name="notElem"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-61"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-comment'>-- foldMap :: Generator c =&gt; (Elem c -&gt; m) -&gt; c -&gt; m</span>
-<a name="line-64"></a>
-<a name="line-65"></a><span class='hs-comment'>-- filter :: (Generator c, Elem c `Reducer` m, m `Reducer` m) =&gt; (Elem c -&gt; Bool) -&gt; c -&gt; m</span>
-<a name="line-66"></a><span class='hs-comment'>-- filter p = mapReduce (\x -&gt; if p x then unit x else mempty)</span>
-<a name="line-67"></a>
-<a name="line-68"></a><span class='hs-comment'>-- find :: Generator c =&gt; (Elem c -&gt; Bool) -&gt; c -&gt; Maybe (Elem c)</span>
-<a name="line-69"></a><span class='hs-comment'>-- find p = getFirst . filter p</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Generator-Methods.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span>
-<a name="line-10"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-comment'>-- minimal definition mapReduce or affixMapReduce</span>
-<a name="line-24"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-26"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-27"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-28"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-29"></a>
-<a name="line-30"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-31"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-32"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-36"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span>
-<a name="line-40"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-44"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-48"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-49"></a>
-<a name="line-50"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
-<a name="line-51"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
-<a name="line-52"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
-<a name="line-53"></a><span class='hs-comment'>-- These aren't happy, but should work</span>
-<a name="line-54"></a><span class='hs-comment'>{-- RULES "reduce/fold" reduce = fold --}</span>
-<a name="line-55"></a><span class='hs-comment'>{-- RULES "mapReduce/foldMap" mapReduce = foldMap --}</span>
-<a name="line-56"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-57"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/IntMap.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
-<a name="line-15"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
-<a name="line-21"></a>
-<a name="line-22"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
-<a name="line-26"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-IntMap.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/SourcePosition.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>SourcePosition</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourcePosition</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceLine</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceColumn</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>startOfFile</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>showSourcePosition</span>
-<a name="line-11"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>lex</span><span class='hs-layout'>)</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Extras</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-17"></a>
-<a name="line-18"></a><a name="SourceLine"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceLine</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-19"></a><a name="SourceColumn"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceColumn</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-20"></a>
-<a name="line-21"></a><a name="SourcePosition"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>file</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-22"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Lines</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-23"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Columns</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>
-<a name="line-24"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Tab</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-comment'>-- cols before and after an unresolved tab</span>
-<a name="line-25"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Eq</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="nextTab"></a><span class='hs-definition'>nextTab</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-28"></a><span class='hs-definition'>nextTab</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-layout'>(</span><span class='hs-num'>8</span> <span class='hs-comment'>-</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-comment'>-</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mod`</span> <span class='hs-num'>8</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-32"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-33"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span>
-<a name="line-34"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorZero</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>fzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorPlus</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-varid'>fplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>0</span>
-<a name="line-47"></a>
-<a name="line-48"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-49"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-52"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>y</span>
-<a name="line-56"></a>    <span class='hs-conid'>Tab</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>
-<a name="line-57"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x'</span> <span class='hs-varid'>y'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>    <span class='hs-keyword'>_</span>         <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pos</span>
-<a name="line-60"></a>
-<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-62"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-63"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-num'>0</span> <span class='hs-num'>0</span> 
-<a name="line-64"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>1</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span>
-<a name="line-67"></a>    
-<a name="line-68"></a><a name="startOfFile"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span>
-<a name="line-69"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span>
-<a name="line-70"></a>
-<a name="line-71"></a><a name="sourceColumn"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-72"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-73"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-74"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-75"></a>
-<a name="line-76"></a><a name="sourceLine"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-77"></a><span class='hs-definition'>sourceLine</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>l</span>
-<a name="line-78"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-79"></a>
-<a name="line-80"></a><a name="showSourcePosition"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-81"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-str'>"-"</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>c</span>
-<a name="line-83"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/UTF8/Decoder.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>UTF8</span><span class='hs-varop'>.</span><span class='hs-conid'>Decoder</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UTF8</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runUTF8</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>    
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Bits</span> <span class='hs-layout'>(</span><span class='hs-varid'>shiftL</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.&amp;.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.|.</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-comment'>-- Incrementally reduce canonical RFC3629 UTF-8 Characters</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="H"></a><span class='hs-comment'>-- utf8 characters are at most 4 characters long, so we need only retain state for 3 of them</span>
-<a name="line-18"></a><a name="H"></a><span class='hs-comment'>-- moreover their length is able to be determined a priori, so lets store that intrinsically in the constructor</span>
-<a name="line-19"></a><a name="H"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>H0</span>
-<a name="line-20"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H2_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> 
-<a name="line-21"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-22"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-23"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-24"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-25"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_3</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="T"></a><span class='hs-comment'>-- words expressing the tail of a character, each between 0x80 and 0xbf</span>
-<a name="line-28"></a><a name="T"></a><span class='hs-comment'>-- this is arbitrary length to simplify making the parser truly monoidal</span>
-<a name="line-29"></a><a name="T"></a><span class='hs-comment'>-- this probably means we have O(n^2) worst case performance in the face of very long runs of chars that look like 10xxxxxx</span>
-<a name="line-30"></a><a name="T"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span>
-<a name="line-31"></a>
-<a name="line-32"></a><a name="UTF8"></a><span class='hs-comment'>-- S is a segment that contains a possible tail of a character, the result of reducing some full characters, and the start of another character</span>
-<a name="line-33"></a><a name="UTF8"></a><span class='hs-comment'>-- T contains a list of bytes each between 0x80 and 0xbf</span>
-<a name="line-34"></a><a name="UTF8"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>T</span> <span class='hs-varid'>m</span> <span class='hs-varop'>!</span><span class='hs-conid'>H</span>
-<a name="line-35"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-conid'>T</span> <span class='hs-conid'>T</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="flushH"></a><span class='hs-comment'>-- flush any extra characters in a head, when the next character isn't between 0x80 and 0xbf</span>
-<a name="line-38"></a><span class='hs-definition'>flushH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-39"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-40"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-41"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-42"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-43"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-44"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-45"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
-<a name="line-46"></a>
-<a name="line-47"></a><a name="flushT"></a><span class='hs-comment'>-- flush a character tail </span>
-<a name="line-48"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-49"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="snocH"></a><span class='hs-definition'>snocH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-52"></a><span class='hs-definition'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-53"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-54"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-55"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-56"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-57"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-58"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-59"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span>
-<a name="line-60"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-61"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-62"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-63"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-64"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-65"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-66"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-67"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-68"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-69"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-70"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-71"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-72"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-74"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-75"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-76"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-77"></a>
-<a name="line-78"></a><a name="mask"></a><span class='hs-definition'>mask</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-79"></a><span class='hs-definition'>mask</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
-<a name="line-80"></a>
-<a name="line-81"></a><a name="combine"></a><span class='hs-definition'>combine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-82"></a><span class='hs-definition'>combine</span> <span class='hs-varid'>a</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>shiftL</span> <span class='hs-varid'>a</span> <span class='hs-num'>6</span> <span class='hs-varop'>.|.</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-num'>0x3f</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="b1"></a><span class='hs-definition'>b1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-85"></a><span class='hs-definition'>b1</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toEnum</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>c</span>
-<a name="line-86"></a>     <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-87"></a>
-<a name="line-88"></a><a name="b2"></a><span class='hs-definition'>b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-89"></a><span class='hs-definition'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x1f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span>
-<a name="line-91"></a>
-<a name="line-92"></a><a name="b3"></a><span class='hs-definition'>b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-93"></a><span class='hs-definition'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x0f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span>
-<a name="line-95"></a>
-<a name="line-96"></a>
-<a name="line-97"></a><a name="b4"></a><span class='hs-definition'>b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-98"></a><span class='hs-definition'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x07</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-99"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span>
-<a name="line-100"></a>
-<a name="line-101"></a><a name="valid_b2"></a><span class='hs-definition'>valid_b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-102"></a><span class='hs-definition'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xc2</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xdf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>
-<a name="line-104"></a><a name="valid_b3"></a><span class='hs-definition'>valid_b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-105"></a><span class='hs-definition'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xe0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xa0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span> 
-<a name="line-106"></a>                 <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xe1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xef</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-107"></a>
-<a name="line-108"></a><a name="valid_b4"></a><span class='hs-definition'>valid_b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-109"></a><span class='hs-definition'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x90</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-110"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xf1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xf3</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-111"></a>                   <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf4</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0x8f</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>
-<a name="line-113"></a><a name="consT"></a><span class='hs-definition'>consT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-114"></a><span class='hs-definition'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>h</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span>
-<a name="line-115"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-116"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span>
-<a name="line-117"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-118"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-119"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-120"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-121"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-122"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-123"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-124"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-125"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-126"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-127"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> 
-<a name="line-128"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-129"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-130"></a>
-<a name="line-131"></a><a name="invalidChars"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-132"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-133"></a>
-<a name="line-134"></a><a name="merge"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-135"></a><span class='hs-definition'>merge</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-136"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-137"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-138"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-139"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-140"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-141"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-142"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-143"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-144"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-145"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-146"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-147"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-148"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-149"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-150"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-151"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-152"></a>
-<a name="line-153"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-154"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span>
-<a name="line-155"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-156"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-157"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>id</span> <span class='hs-varid'>flushH</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-158"></a>    <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-159"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>c'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-160"></a>        <span class='hs-varid'>k</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-161"></a>
-<a name="line-162"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Word8</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-163"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-164"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-165"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-varid'>h</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-166"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>     <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-167"></a>                            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-168"></a>
-<a name="line-169"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>cs</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-conid'>T</span>
-<a name="line-170"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k1</span> <span class='hs-varid'>k2</span> <span class='hs-varid'>k3</span> <span class='hs-keyword'>where</span>
-<a name="line-171"></a>        <span class='hs-varid'>k1</span> <span class='hs-varid'>h'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>flushH</span> <span class='hs-varid'>h'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-172"></a>        <span class='hs-varid'>k2</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>m'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-173"></a>        <span class='hs-varid'>k3</span> <span class='hs-varid'>t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span>
-<a name="line-174"></a>    
-<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-176"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-177"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>
-<a name="line-178"></a>
-<a name="line-179"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-180"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>f</span> <span class='hs-conid'>H0</span>
-<a name="line-181"></a>
-<a name="line-182"></a><a name="runUTF8"></a><span class='hs-definition'>runUTF8</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-183"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span>
-<a name="line-184"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>flushH</span> <span class='hs-varid'>h</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/Words.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, FlexibleContexts, GeneralizedNewtypeDeriving, ParallelListComp, TypeFamilies #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>Words</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Words</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runWords</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Lines</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runLines</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unspaced</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnspaced</span><span class='hs-layout'>)</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unlined</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnlined</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>wordsFrom</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>linesFrom</span>
-<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSpace</span><span class='hs-layout'>)</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybeToList</span><span class='hs-layout'>)</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-19"></a>
-<a name="line-20"></a><a name="Words"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="runWords"></a><span class='hs-definition'>runWords</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-25"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>m</span>
-<a name="line-26"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>r</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>mempty</span>
-<a name="line-30"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-32"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r'</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-37"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Words</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>m</span> <span class='hs-varid'>ms</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-comment'>-- abuse the same machinery to handle lines as well</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="Lines"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-49"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>
-<a name="line-51"></a><a name="runLines"></a><span class='hs-definition'>runLines</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-52"></a><span class='hs-definition'>runLines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runWords</span> <span class='hs-varid'>x</span>
-<a name="line-53"></a>
-<a name="line-54"></a><a name="Unspaced"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnspaced</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-58"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-67"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnspaced</span>
-<a name="line-71"></a>
-<a name="line-72"></a><a name="Unlined"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnlined</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-75"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-76"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-77"></a>
-<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-79"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>
-<a name="line-84"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-85"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnlined</span>
-<a name="line-89"></a>
-<a name="line-90"></a><a name="wordsFrom"></a><span class='hs-comment'>-- accumulator, inside-word, and until-next-word monoids</span>
-<a name="line-91"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-92"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-93"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runWords</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-94"></a>
-<a name="line-95"></a><a name="linesFrom"></a><span class='hs-comment'>-- accumulator, inside-line, and until-next-line monoids</span>
-<a name="line-96"></a><span class='hs-definition'>linesFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-97"></a><span class='hs-definition'>linesFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runLines</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Map.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Map.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span><span class='hs-layout'>)</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
-<a name="line-16"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-comment'>-- only needs m to be a semigroup, but Haskell doesn't have a semigroup class</span>
-<a name="line-22"></a>
-<a name="line-23"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>empty</span>
-<a name="line-27"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Map.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Action</span><span class='hs-layout'>(</span><span class='hs-conid'>Action</span><span class='hs-layout'>,</span><span class='hs-varid'>getAction</span><span class='hs-layout'>)</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonadSum</span><span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonadSum</span><span class='hs-layout'>)</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>KleisliEndo</span><span class='hs-layout'>(</span><span class='hs-conid'>KleisliEndo</span><span class='hs-layout'>,</span><span class='hs-varid'>getKleisliEndo</span><span class='hs-layout'>)</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MonoidAction</span><span class='hs-layout'>(</span><span class='hs-conid'>MonoidAction</span><span class='hs-layout'>,</span><span class='hs-varid'>getMonoidAction</span><span class='hs-layout'>)</span>
-<a name="line-9"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mplus</span><span class='hs-layout'>,</span> <span class='hs-varid'>mzero</span><span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>&gt;=&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>liftM2</span><span class='hs-layout'>)</span>
-<a name="line-13"></a>
-<a name="line-14"></a><a name="Action"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-comment'>{-# RULES "unitAction" unit = Action #-}</span>
-<a name="line-26"></a><span class='hs-comment'>{-# RULES "snocAction" snoc = snocAction #-}</span> 
-<a name="line-27"></a><a name="snocAction"></a><span class='hs-definition'>snocAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span>
-<a name="line-28"></a><span class='hs-definition'>snocAction</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Action</span>
-<a name="line-29"></a>
-<a name="line-30"></a><a name="MonadSum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonadSum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-31"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-34"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>mzero</span>
-<a name="line-35"></a>    <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonadSum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mplus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadSum</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-38"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonadSum</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="KleisliEndo"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKleisliEndo</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-43"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>return</span>
-<a name="line-44"></a>    <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;=&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>KleisliEndo</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>KleisliEndo</span>
-<a name="line-48"></a>
-<a name="line-49"></a><a name="MonoidAction"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMonoidAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-layout'>}</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-52"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>    <span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonoidAction</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-56"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MonoidAction</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Ord.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>---- |</span>
-<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
-<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-7"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-8"></a><span class='hs-comment'>---- Stability   :  provisional</span>
-<a name="line-9"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-10"></a><span class='hs-comment'>----</span>
-<a name="line-11"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
-<a name="line-12"></a><span class='hs-comment'>----</span>
-<a name="line-13"></a><span class='hs-comment'>-------------------------------------------------------------------------------</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
-<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-17"></a>    <span class='hs-comment'>-- * Max</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>    <span class='hs-comment'>-- * Min</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a>
-<a name="line-31"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
-<a name="line-32"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
-<a name="line-36"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
-<a name="line-40"></a>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span> 
-<a name="line-42"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getMax</span>
-<a name="line-49"></a>
-<a name="line-50"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
-<a name="line-51"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-54"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
-<a name="line-55"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-56"></a>
-<a name="line-57"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-58"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-67"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getMin</span>
-<a name="line-68"></a>
-<a name="line-69"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
-<a name="line-70"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-73"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-74"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-75"></a>
-<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-77"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span>
-<a name="line-78"></a>
-<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-80"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-81"></a>
-<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-83"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-84"></a>
-<a name="line-85"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
-<a name="line-86"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-87"></a>
-<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-89"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
-<a name="line-90"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
-<a name="line-91"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
-<a name="line-92"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
-<a name="line-93"></a>
-<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-95"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-96"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-97"></a>
-<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-99"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span>
-<a name="line-100"></a>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>MinPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-102"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>
-<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>MinPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-105"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/Char.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fromChar</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="CharReducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-14"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span>
-<a name="line-15"></a>
-<a name="line-16"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-17"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>mempty</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Char</span><span class='hs-keyglyph'>]</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-conid'>()</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/With.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>With</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WithReducer</span><span class='hs-layout'>(</span><span class='hs-conid'>WithReducer</span><span class='hs-layout'>,</span><span class='hs-varid'>runWithReducer</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>withoutReducer</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="WithReducer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WithReducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WithReducer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runWithReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>}</span> 
-<a name="line-12"></a>
-<a name="line-13"></a><a name="withoutReducer"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span>
-<a name="line-14"></a><span class='hs-definition'>withoutReducer</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snd</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span> 
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>measure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>runWithReducer</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMapReduce</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="Reducer"></a><span class='hs-comment'>-- minimal definition unit or snoc</span>
-<a name="line-13"></a><a name="Reducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-14"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-15"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-16"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-17"></a>
-<a name="line-18"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>mempty</span> 
-<a name="line-19"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-20"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-21"></a>
-<a name="line-22"></a><a name="foldMapReduce"></a><span class='hs-definition'>foldMapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-23"></a><span class='hs-definition'>foldMapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-37"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>p</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-39"></a>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-41"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-42"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>    <span class='hs-varid'>xs</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>id</span>
-<a name="line-47"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-48"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span>
-<a name="line-51"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-52"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`snoc`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-53"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`cons`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span>
-<a name="line-56"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Any</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span>
-<a name="line-59"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>All</span>
-<a name="line-60"></a>
-<a name="line-61"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-62"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
-<a name="line-63"></a>
-<a name="line-64"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-65"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Dual</span>
-<a name="line-66"></a>    
-<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-68"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span>
-<a name="line-69"></a>
-<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-71"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-74"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span>
-<a name="line-75"></a>
-<a name="line-76"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-77"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-78"></a>
-<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-80"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span>
-<a name="line-81"></a>
-<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-83"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/src/hscolour.css 1
-.hs-keyglyph, .hs-layout {color: red;}
-.hs-keyword {color: blue;}
-.hs-comment, .hs-comment a {color: green;}
-.hs-str, .hs-chr {color: teal;}
-.hs-keyword, .hs-conid, .hs-varid, .hs-conop, .hs-varop, .hs-num, .hs-cpp, .hs-sel, .hs-definition {}
rmfile ./dist/doc/html/monoids/src/hscolour.css
rmdir ./dist/doc/html/monoids/src
rmdir ./dist/doc/html/monoids
rmdir ./dist/doc/html
rmdir ./dist/doc
hunk ./monoids.cabal 19
-    Data.Monoid.Generator
-    Data.Monoid.Generator.Methods
hunk ./monoids.cabal 21
+    Data.Monoid.Reducer.Sugar
hunk ./monoids.cabal 23
-    Data.Monoid.Lexical.SourcePosition
-    Data.Monoid.Lexical.UTF8.Decoder
-    Data.Monoid.Lexical.Words
+    Data.Monoid.Generator
+    Data.Monoid.Generator.Combinators
+    Data.Monoid.Categorical
hunk ./monoids.cabal 29
-    Data.Monoid.FingerTree
hunk ./monoids.cabal 31
-  ghc-options: -Wall
+    Data.Monoid.Self
+    Data.Monoid.Unit
+    Data.Monoid.Additive
+    Data.Monoid.Additive.Sugar
+    Data.Monoid.Multiplicative
+    Data.Monoid.Multiplicative.Transformers
+    Data.Monoid.Multiplicative.Sugar
+    Data.Monoid.Lexical.SourcePosition
+    Data.Monoid.Lexical.UTF8.Decoder
+    Data.Monoid.Lexical.Words
+    Data.Group
+    Data.Group.Sugar
+  ghc-options: -Wall -fno-warn-duplicate-exports
}
