[added min priority monoids as well
ekmett@gmail.com**20090323050416] {
hunk ./Data/Monoid/Ord.hs 16
-    -- * Min
-    , Min(Min,getMin)
hunk ./Data/Monoid/Ord.hs 18
+    -- * Min
+    , Min(Min,getMin)
hunk ./Data/Monoid/Ord.hs 21
-    , Priority(Priority,getPriority)
+    , MaxPriority(MaxPriority,getMaxPriority)
+    -- * Min w/ added bottom
+    , MinPriority(MinPriority,getMinPriority)
hunk ./Data/Monoid/Ord.hs 28
+
+-- | The monoid @('max','minBound')@
+newtype Max a = Max { getMax :: a } deriving (Eq,Ord,Show,Read,Bounded)
+
+instance (Ord a, Bounded a) => Monoid (Max a) where
+    mempty = Max minBound
+    mappend = max
+
hunk ./Data/Monoid/Ord.hs 41
-    Min a `mappend` Min b = Min (a `min` b)
+    mappend = min
hunk ./Data/Monoid/Ord.hs 43
--- | The monoid @('max','minBound')@
-newtype Max a = Max { getMax :: a } deriving (Eq,Ord,Show,Read,Bounded)
+-- | The monoid @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element.
+newtype MaxPriority a = MaxPriority { getMaxPriority :: Maybe a } deriving (Eq,Ord,Show,Read)
hunk ./Data/Monoid/Ord.hs 46
-instance (Ord a, Bounded a) => Monoid (Max a) where
-    mempty = Max minBound
-    Max a `mappend` Max b = Max (a `max` b)
+instance Ord a => Monoid (MaxPriority a) where
+    mempty = MaxPriority Nothing
+    mappend = max
+
+-- | A monoid @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element
+newtype MinPriority a = MinPriority { getMinPriority :: Maybe a } deriving (Eq,Show,Read)
hunk ./Data/Monoid/Ord.hs 53
--- | The monoid @('max','Nothing')@ over @'Maybe' a@
-newtype Priority a = Priority { getPriority :: Maybe a } deriving (Eq,Ord,Show,Read)
+instance Ord a => Ord (MinPriority a) where
+    MinPriority Nothing  `compare` MinPriority Nothing  = EQ
+    MinPriority Nothing  `compare` _                    = GT
+    _                    `compare` MinPriority Nothing  = LT
+    MinPriority (Just a) `compare` MinPriority (Just b) = a `compare` b
hunk ./Data/Monoid/Ord.hs 59
-instance (Ord a) => Monoid (Priority a) where
-    mempty = Priority Nothing
-    Priority a `mappend` Priority b = Priority (a `max` b)
+instance Ord a => Monoid (MinPriority a) where
+    mempty = MinPriority Nothing
+    mappend = min
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 69
->Min
+>Max
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 74
->Max
+>Min
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 82
+><DT
+><A HREF="#4"
+>Min w/ added bottom
+</A
+></DT
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 116
+>  <A HREF="#t%3AMax"
+>Max</A
+> a = <A HREF="#v%3AMax"
+>Max</A
+> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="recfield"
+><A HREF="#v%3AgetMax"
+>getMax</A
+> :: a</TD
+></TR
+></TABLE
+>}</TD
+></TR
+><TR
+><TD CLASS="s8"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+><SPAN CLASS="keyword"
+>newtype</SPAN
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 160
->  <A HREF="#t%3AMax"
->Max</A
-> a = <A HREF="#v%3AMax"
->Max</A
+>  <A HREF="#t%3AMaxPriority"
+>MaxPriority</A
+> a = <A HREF="#v%3AMaxPriority"
+>MaxPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 167
-><A HREF="#v%3AgetMax"
->getMax</A
-> :: a</TD
+><A HREF="#v%3AgetMaxPriority"
+>getMaxPriority</A
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 184
->  <A HREF="#t%3APriority"
->Priority</A
-> a = <A HREF="#v%3APriority"
->Priority</A
+>  <A HREF="#t%3AMinPriority"
+>MinPriority</A
+> a = <A HREF="#v%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 191
-><A HREF="#v%3AgetPriority"
->getPriority</A
+><A HREF="#v%3AgetMinPriority"
+>getMinPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 214
+>Max
+</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3AMax"
+></A
+><B
+>Max</B
+> a </TD
+><TD CLASS="declbut"
+><A HREF="src/Data-Monoid-Ord.html#Max"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="ndoc"
+>The monoid <TT
+>(<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
+>max</A
+></TT
+>,<TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
+>minBound</A
+></TT
+>)</TT
+>
+</TD
+></TR
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AMax"
+></A
+><B
+>Max</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetMax"
+></A
+><B
+>getMax</B
+> :: a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Max" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
+>Eq</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
+>Read</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
+>Show</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+><TR
+><TD CLASS="decl"
+>(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+>Ord</A
+> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
+>Bounded</A
+> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
+>Max</A
+> a)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="section1"
+><A NAME="2"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 547
-><A NAME="2"
->Max
+><A NAME="3"
+>Max w/ added bottom
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 563
->  <A NAME="t%3AMax"
+>  <A NAME="t%3AMaxPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 566
->Max</B
+>MaxPriority</B
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 569
-><A HREF="src/Data-Monoid-Ord.html#Max"
+><A HREF="src/Data-Monoid-Ord.html#MaxPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 587
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
->minBound</A
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 591
->
+> over <TT
+><TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+></TT
+> a</TT
+> where <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
+></TT
+> is the bottom element.
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 613
-><A NAME="v%3AMax"
+><A NAME="v%3AMaxPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 616
->Max</B
+>MaxPriority</B
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 626
-><A NAME="v%3AgetMax"
+><A NAME="v%3AgetMaxPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 629
->getMax</B
-> :: a</TD
+>getMaxPriority</B
+> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
+>Maybe</A
+> a</TD
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 644
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MaxPriority')" ALT="show/hide"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 649
-><DIV ID="i:Max" STYLE="display:block;"
+><DIV ID="i:MaxPriority" STYLE="display:block;"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 653
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 657
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 667
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 677
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 687
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 693
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 695
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 697
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>MaxPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 714
-><A NAME="3"
->Max w/ added bottom
+><A NAME="4"
+>Min w/ added bottom
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 730
->  <A NAME="t%3APriority"
+>  <A NAME="t%3AMinPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 733
->Priority</B
+>MinPriority</B
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 736
-><A HREF="src/Data-Monoid-Ord.html#Priority"
+><A HREF="src/Data-Monoid-Ord.html#MinPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 748
->The monoid <TT
+>A monoid <TT
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 750
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
+>min</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 764
->
+> where <TT
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
+>Nothing</A
+></TT
+> is the top element
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 780
-><A NAME="v%3APriority"
+><A NAME="v%3AMinPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 783
->Priority</B
+>MinPriority</B
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 793
-><A NAME="v%3AgetPriority"
+><A NAME="v%3AgetMinPriority"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 796
->getPriority</B
+>getMinPriority</B
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 811
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Priority')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MinPriority')" ALT="show/hide"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 816
-><DIV ID="i:Priority" STYLE="display:block;"
+><DIV ID="i:MinPriority" STYLE="display:block;"
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 824
-> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
->Priority</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 834
-> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
->Priority</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 844
-> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
->Priority</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 854
-> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
->Priority</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/lexical-monoids/Data-Monoid-Ord.html 864
-> (<A HREF="Data-Monoid-Ord.html#t%3APriority"
->Priority</A
+> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
+>MinPriority</A
hunk ./dist/doc/html/lexical-monoids/doc-index.html 198
+>getMaxPriority</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMaxPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 214
->getPriority</TD
+>getMinPriority</TD
hunk ./dist/doc/html/lexical-monoids/doc-index.html 216
-><A HREF="Data-Monoid-Ord.html#v%3AgetPriority"
+><A HREF="Data-Monoid-Ord.html#v%3AgetMinPriority"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 323
+><TD CLASS="indexentry" COLSPAN="2"
+>MaxPriority</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Data-Monoid-Ord.html#v%3AMaxPriority"
+>Data.Monoid.Ord</A
+></TD
+></TR
+><TR CLASS="indexrow"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 375
-><TD CLASS="indexentry"
->Monoid</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 376
->Priority</TD
+>MinPriority</TD
hunk ./dist/doc/html/lexical-monoids/doc-index.html 382
-><A HREF="Data-Monoid-Ord.html#t%3APriority"
+><A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 390
-><A HREF="Data-Monoid-Ord.html#v%3APriority"
+><A HREF="Data-Monoid-Ord.html#v%3AMinPriority"
hunk ./dist/doc/html/lexical-monoids/doc-index.html 394
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>Monoid</TD
+><TD CLASS="indexlinks"
+>Data.Monoid.Ord, Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Reducer.With, Data.Monoid.Generator, Data.Monoid.Lexical.Words</TD
+></TR
binary ./dist/doc/html/lexical-monoids/lexical-monoids.haddock
oldhex
*0d0cface000400000000000013d10000000000000c2b2c00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000002000000000000000b0000000000000000000000000000000200
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000300000000000000
*0f0000000000000000000000000000000300000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000500
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000800000000000000250000000000000000000000000000000800
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b0000000000000000000000000000000808000000000000000000000000
*00000001000000000300000000000000000301020b000000540000006800000065000000200000
*006d0000006f0000006e0000006f00000069000000640000002001070102010000002801040100
*000000000000002c0000000000000009000000000000000a0102010000002c0104010000000000
*0000002d0000000000000009000000000000000b020100000029010206000000200000006f0000
*0076000000650000007200000020010701040100000000000000002e0000000000000009000000
*000000000b0202000000200000006102010000000a00000000000000030301020b000000540000
*006800000065000000200000006d0000006f0000006e0000006f00000069000000640000002001
*070102010000002801040100000000000000002c0000000000000009000000000000000a010201
*0000002c01040100000000000000002f0000000000000009000000000000000c02010000002902
*010000000a000000000000000603010214000000540000006800000065000000200000006d0000
*006f0000006e0000006f0000006900000064000000200000006700000069000000760000006500
*00006e000000200000006200000079000000200107010201000000280104010000000000000000
*300000000000000009000000000000000a0102010000002c010401000000000000000031000000
*0000000009000000000000000c02010000002902010000000a0c00000000000000320000000000
*000033000000000000003400000000000000000000000000000001000000000000000200000000
*000000030000000000000004000000000000000500000000000000060000000000000007000000
*000000000809000000000000000600000000000000070000000000000008000000000000000300
*000000000000040000000000000005000000000000000000000000000000010000000000000002
*000000000000000000000000000000020000000000070000000000000032000000000000003300
*000000000000340000000000000009000000000000000a000000000000000b000000000000000c
*040000000000000009000000000000000a000000000000000b000000000000000c000000000000
*0000000000000000000300000000000a0000000000000032000000000000003300000000000000
*340000000000000009000000000000000a000000000000000b000000000000000c000000000000
*000d000000000000000e000000000000000f03000000000000000d000000000000000f00000000
*0000000e0000000000000000000000000000000400000000001100000000000000320000000000
*00003300000000000000340000000000000009000000000000000a000000000000000b00000000
*0000000c000000000000000d000000000000000e000000000000000f0000000000000010000000
*000000001100000000000000120000000000000013000000000000001400000000000000150000
*000000000016070000000000000010000000000000001200000000000000110000000000000015
*000000000000001400000000000000130000000000000016000000000000000000000000000000
*0500000000000c0000000000000032000000000000003300000000000000340000000000000009
*000000000000000a000000000000000b000000000000000c000000000000000d00000000000000
*0e000000000000000f000000000000001700000000000000180200000000000000170000000000
*0000180000000000000000000000000000000600000000000b0000000000000032000000000000
*003300000000000000340000000000000009000000000000000a000000000000000b0000000000
*00000c0000000000000019000000000000001a000000000000001b000000000000001c04000000
*0000000019000000000000001a000000000000001b000000000000001c00000000000000000000
*000000000007000000000021000000000000003200000000000000350000000000000033000000
*000000003400000000000000360000000000000037000000000000003800000000000000390000
*00000000003a000000000000003b000000000000003c000000000000003d000000000000003e00
*0000000000003f0000000000000040000000000000004100000000000000420000000000000043
*000000000000004400000000000000450000000000000046000000000000004700000000000000
*480000000000000049000000000000004a000000000000004b000000000000004c000000000000
*004d000000000000001d000000000000001e000000000000001f00000000000000200000000000
*00002105000000000000001d000000000000001e000000000000001f0000000000000020000000
*000000002100000000000000000000000000000008000000000014000000000000003200000000
*0000003300000000000000340000000000000009000000000000000a000000000000000b000000
*000000000c000000000000000d000000000000000e000000000000000f00000000000000220000
*000000000023000000000000002400000000000000250000000000000026000000000000002700
*000000000000280000000000000029000000000000002a000000000000002b0a00000000000000
*270000000000000028000000000000002600000000000000290000000000000024000000000000
*002500000000000000220000000000000023000000000000002a000000000000002b0000000000
*00004e0000000000000000000000000000000103000000000000000d0000000000000000000000
*000000000101000000000000000d0000000000000000000000000000000100000000000000000e
*0000000000000000000000000000000103000000000000000f0000000000000000000000000000
*000101000000000000000f00000000000000000000000000000001000000000000000010000000
*000000000000000000000000010300000000000000110000000000000000000000000000000101
*000000000000001100000000000000000000000000000001000000000000000012000000000000
*000000000000000000020300000000000000130000000000000000000000000000000200000000
*000000001400000000000000000000000000000002000000000000000015000000000000000000
*000000000000020000000000000000160000000000000000000000000000000303000000000000
*001700000000000000000000000000000003000000000000000018000000000000000000000000
*000000030000000000000000190000000000000000000000000000000403000000000000001a00
*00000000000000000000000000000403000000000000001b000000000000000000000000000000
*0403000000000000001c0000000000000000000000000000000400000000000000001d00000000
*00000000000000000000000400000000000000001e000000000000000000000000000000040000
*0000000000001f0000000000000000000000000000000400000000000000002000000000000000
*000000000000000005030000000000000021000000000000000000000000000000050000000000
*000000220000000000000000000000000000000603000000000000002300000000000000000000
*000000000006000000000000000024000000000000000000000000000000060000000000000000
*250000000000000000000000000000000600000000000000002600000000000000000000000000
*000007030000000000000027000000000000000000000000000000070300000000000000280000
*000000000000000000000000000700000000000000002900000000000000000000000000000007
*00000000000000002a0000000000000000000000000000000700000000000000002b0000000000
*000000000000000000000803000000000000002c00000000000000000000000000000008000000
*00000000002d0000000000000000000000000000000803000000000000002e0000000000000000
*000000000000000800000000000000002f00000000000000000000000000000008030000000000
*000030000000000000000000000000000000080300000000000000310000000000000000000000
*000000000800000000000000003200000000000000000000000000000008000000000000000033
*000000000000000000000000000000080000000000000000340000000000000000000000000000
*000800000000000000003500000000000000090000000000000036000000000000000037000000
*0000000009000000000000000b0100000000000000380000000000000009000000000000000b03
*00000000000000390000000000000009000000000000003a00000000000000003b000000000000
*0009000000000000003600000000000000003c0000000000000009000000000000003a00000000
*000000003d0000000000000009000000000000003e00000000000000003f000000000000000900
*0000000000003e0000000000000000400000000000000009000000000000003e03000000000000
*00410000000000000009000000000000003e000000000000000042000000000000000900000000
*0000003e0000000000000000430000000000000009000000000000003e01000000000000004400
*00000000000009000000000000003e030000000000000044000000000000000900000000000000
*3e0000000000000000450000000000000009000000000000003e01000000000000004600000000
*00000009000000000000003e0300000000000000460000000000000009000000000000003e0000
*000000000000470000000000000009000000000000003e01000000000000004800000000000000
*09000000000000003e0300000000000000480000000000000009000000000000003e0000000000
*000000490000000000000009000000000000003e01000000000000004a00000000000000090000
*00000000003e03000000000000004a0000000000000009000000000000003e0000000000000000
*4b0000000000000009000000000000003e01000000000000004c00000000000000090000000000
*00003e03000000000000004c0000000000000009000000000000003e00000000000000004d0000
*000000000009000000000000003e01000000000000004e0000000000000009000000000000003e
*03000000000000004e0000000000000009000000000000003e00000000000000004f0000000000
*000009000000000000003e0100000000000000500000000000000009000000000000003e030000
*0000000000500000000000000009000000000000003e0000000000000000510000000000000009
*000000000000003e0100000000000000520000000000000009000000000000003e030000000000
*000052000000000000005300000000000000156c65786963616c2d6d6f6e6f6964732d302e312e
*31000000000000000f446174612e4d6f6e6f69642e4f72640000000000000013446174612e4d6f
*6e6f69642e526564756365720000000000000018446174612e4d6f6e6f69642e52656475636572
*2e436861720000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365
*506f736974696f6e0000000000000020446174612e4d6f6e6f69642e4c65786963616c2e555446
*382e4465636f6465720000000000000018446174612e4d6f6e6f69642e526564756365722e5769
*74680000000000000015446174612e4d6f6e6f69642e47656e657261746f720000000000000019
*446174612e4d6f6e6f69642e4c65786963616c2e576f7264730000000000000004626173650000
*000000000008446174612e4f7264000000000000000a446174612e4d6179626500000000000000
*075072656c75646500000000000000085072696f72697479000000000000000b6765745072696f
*7269747900000000000000034d617800000000000000066765744d617800000000000000034d69
*6e00000000000000066765744d696e000000000000000752656475636572000000000000000672
*656475636500000000000000077265647563657200000000000000077265647563656c00000000
*0000000b4368617252656475636572000000000000000a72656475636543686172000000000000
*000b696e76616c696443686172000000000000000e536f75726365506f736974696f6e00000000
*0000000c536f75726365436f6c756d6e000000000000000a536f757263654c696e650000000000
*00000b73746172744f6646696c65000000000000000c736f75726365436f6c756d6e0000000000
*00000a736f757263654c696e65000000000000001273686f77536f75726365506f736974696f6e
*000000000000000455544638000000000000000772756e55544638000000000000000b57697468
*52656475636572000000000000000e72756e5769746852656475636572000000000000000b7769
*746852656475636572000000000000000e776974686f7574526564756365720000000000000009
*47656e657261746f720000000000000004456c656d00000000000000096d617072656475636500
*0000000000000a6d617072656475636572000000000000000a6d61707265647563656c00000000
*00000007556e6c696e6564000000000000000a72756e556e6c696e65640000000000000008556e
*737061636564000000000000000b72756e556e73706163656400000000000000054c696e657300
*00000000000005576f726473000000000000000872756e576f726473000000000000000872756e
*4c696e65730000000000000009776f72647346726f6d00000000000000096c696e657346726f6d
*000000000000000b4748432e436c617373657300000000000000036d617800000000000000074e
*6f7468696e6700000000000000054d6179626500000000000000084748432e456e756d00000000
*000000086d696e426f756e6400000000000000036d696e00000000000000086d6178426f756e64
*000000000000000b446174612e4d6f6e6f696400000000000000076d617070656e640000000000
*0000066d656d70747900000000000000064d6f6e6f696400000000000000076d636f6e63617400
*000000000000076765744475616c00000000000000044475616c0000000000000007617070456e
*646f0000000000000004456e646f0000000000000006676574416c6c0000000000000003416c6c
*0000000000000006676574416e790000000000000003416e79000000000000000667657453756d
*000000000000000353756d000000000000000a67657450726f6475637400000000000000075072
*6f6475637400000000000000086765744669727374000000000000000546697273740000000000
*0000076765744c61737400000000000000044c617374
newhex
*0d0cface000400000000000016790000000000000e882f00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000001000000000000000900000000000000000000000000000001000000000000000a0000
*0000000000000000000000000001000000000000000b0000000000000000000000000000000100
*0000000000000c00000000000000000000000000000002000000000000000d0000000000000000
*0000000000000002000000000000000e0000000000000000000000000000000200000000000000
*0f0000000000000000000000000000000200000000000000100000000000000000000000000000
*000300000000000000110000000000000000000000000000000300000000000000120000000000
*000000000000000000000300000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000800
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000008000000000000002d0000000000000000000000000000000800000000
*0000002e0000000000000000000000000000000808000000000000000000000000000000010000
*00000400000000000000000301020900000041000000200000006d0000006f0000006e0000006f
*00000069000000640000002001070102010000002801040100000000000000002f000000000000
*0009000000000000000a0102010000002c01040100000000000000003000000000000000090000
*00000000000b020100000029010206000000200000006f00000076000000650000007200000020
*01070104010000000000000000310000000000000009000000000000000b020200000020000000
*610102070000002000000077000000680000006500000072000000650000002001040100000000
*00000000300000000000000009000000000000000b021400000020000000690000007300000020
*00000074000000680000006500000020000000740000006f000000700000002000000065000000
*6c000000650000006d000000650000006e000000740000000a00000000000000030301020b0000
*00540000006800000065000000200000006d0000006f0000006e0000006f000000690000006400
*000020010701020100000028010401000000000000000032000000000000000900000000000000
*0a0102010000002c0104010000000000000000300000000000000009000000000000000b020100
*000029010206000000200000006f00000076000000650000007200000020010701040100000000
*00000000310000000000000009000000000000000b020200000020000000610102070000002000
*000077000000680000006500000072000000650000002001040100000000000000003000000000
*00000009000000000000000b021800000020000000690000007300000020000000740000006800
*00006500000020000000620000006f00000074000000740000006f0000006d0000002000000065
*0000006c000000650000006d000000650000006e000000740000002e0000000a00000000000000
*0603010214000000540000006800000065000000200000006d0000006f0000006e0000006f0000
*00690000006400000020000000670000006900000076000000650000006e000000200000006200
*0000790000002001070102010000002801040100000000000000002f0000000000000009000000
*000000000a0102010000002c010401000000000000000033000000000000000900000000000000
*0c02010000002902010000000a00000000000000090301020b0000005400000068000000650000
*00200000006d0000006f0000006e0000006f000000690000006400000020010701020100000028
*0104010000000000000000320000000000000009000000000000000a0102010000002c01040100
*00000000000000340000000000000009000000000000000c02010000002902010000000a0f0000
*000000000035000000000000003600000000000000370000000000000000000000000000000100
*000000000000020000000000000003000000000000000400000000000000050000000000000006
*000000000000000700000000000000080000000000000009000000000000000a00000000000000
*0b0c0000000000000009000000000000000a000000000000000b00000000000000060000000000
*000007000000000000000800000000000000030000000000000004000000000000000500000000
*000000000000000000000001000000000000000200000000000000000000000000000002000000
*000007000000000000003500000000000000360000000000000037000000000000000c00000000
*0000000d000000000000000e000000000000000f04000000000000000c000000000000000d0000
*00000000000e000000000000000f0000000000000000000000000000000300000000000a000000
*000000003500000000000000360000000000000037000000000000000c000000000000000d0000
*00000000000e000000000000000f00000000000000100000000000000011000000000000001203
*000000000000001000000000000000120000000000000011000000000000000000000000000000
*04000000000011000000000000003500000000000000360000000000000037000000000000000c
*000000000000000d000000000000000e000000000000000f000000000000001000000000000000
*110000000000000012000000000000001300000000000000140000000000000015000000000000
*001600000000000000170000000000000018000000000000001907000000000000001300000000
*000000150000000000000014000000000000001800000000000000170000000000000016000000
*00000000190000000000000000000000000000000500000000000c000000000000003500000000
*000000360000000000000037000000000000000c000000000000000d000000000000000e000000
*000000000f000000000000001000000000000000110000000000000012000000000000001a0000
*00000000001b02000000000000001a000000000000001b00000000000000000000000000000006
*00000000000b000000000000003500000000000000360000000000000037000000000000000c00
*0000000000000d000000000000000e000000000000000f000000000000001c000000000000001d
*000000000000001e000000000000001f04000000000000001c000000000000001d000000000000
*001e000000000000001f0000000000000000000000000000000700000000002100000000000000
*350000000000000038000000000000003600000000000000370000000000000039000000000000
*003a000000000000003b000000000000003c000000000000003d000000000000003e0000000000
*00003f000000000000004000000000000000410000000000000042000000000000004300000000
*000000440000000000000045000000000000004600000000000000470000000000000048000000
*0000000049000000000000004a000000000000004b000000000000004c000000000000004d0000
*00000000004e000000000000004f00000000000000500000000000000020000000000000002100
*000000000000220000000000000023000000000000002405000000000000002000000000000000
*210000000000000022000000000000002300000000000000240000000000000000000000000000
*000800000000001400000000000000350000000000000036000000000000003700000000000000
*0c000000000000000d000000000000000e000000000000000f0000000000000010000000000000
*001100000000000000120000000000000025000000000000002600000000000000270000000000
*0000280000000000000029000000000000002a000000000000002b000000000000002c00000000
*0000002d000000000000002e0a000000000000002a000000000000002b00000000000000290000
*00000000002c000000000000002700000000000000280000000000000025000000000000002600
*0000000000002d000000000000002e000000000000005100000000000000000000000000000001
*03000000000000000d0000000000000000000000000000000101000000000000000d0000000000
*000000000000000000000100000000000000000e00000000000000000000000000000001030000
*00000000000f0000000000000000000000000000000101000000000000000f0000000000000000
*000000000000000100000000000000001000000000000000000000000000000001030000000000
*000011000000000000000000000000000000010100000000000000110000000000000000000000
*000000000100000000000000001200000000000000000000000000000001030000000000000013
*000000000000000000000000000000010100000000000000130000000000000000000000000000
*000100000000000000001400000000000000000000000000000002030000000000000015000000
*000000000000000000000000020000000000000000160000000000000000000000000000000200
*000000000000001700000000000000000000000000000002000000000000000018000000000000
*000000000000000000030300000000000000190000000000000000000000000000000300000000
*000000001a0000000000000000000000000000000300000000000000001b000000000000000000
*0000000000000403000000000000001c0000000000000000000000000000000403000000000000
*001d0000000000000000000000000000000403000000000000001e000000000000000000000000
*0000000400000000000000001f0000000000000000000000000000000400000000000000002000
*000000000000000000000000000004000000000000000021000000000000000000000000000000
*040000000000000000220000000000000000000000000000000503000000000000002300000000
*000000000000000000000005000000000000000024000000000000000000000000000000060300
*000000000000250000000000000000000000000000000600000000000000002600000000000000
*000000000000000006000000000000000027000000000000000000000000000000060000000000
*000000280000000000000000000000000000000703000000000000002900000000000000000000
*00000000000703000000000000002a000000000000000000000000000000070000000000000000
*2b0000000000000000000000000000000700000000000000002c00000000000000000000000000
*00000700000000000000002d0000000000000000000000000000000803000000000000002e0000
*000000000000000000000000000800000000000000002f00000000000000000000000000000008
*030000000000000030000000000000000000000000000000080000000000000000310000000000
*000000000000000000000803000000000000003200000000000000000000000000000008030000
*000000000033000000000000000000000000000000080000000000000000340000000000000000
*000000000000000800000000000000003500000000000000000000000000000008000000000000
*000036000000000000000000000000000000080000000000000000370000000000000009000000
*00000000380000000000000000390000000000000009000000000000000b01000000000000003a
*0000000000000009000000000000000b03000000000000003b0000000000000009000000000000
*003800000000000000003c0000000000000009000000000000003d00000000000000003e000000
*0000000009000000000000003d00000000000000003f0000000000000009000000000000004000
*000000000000004100000000000000090000000000000040000000000000000042000000000000
*000900000000000000400300000000000000430000000000000009000000000000004000000000
*000000004400000000000000090000000000000040000000000000000045000000000000000900
*000000000000400100000000000000460000000000000009000000000000004003000000000000
*004600000000000000090000000000000040000000000000000047000000000000000900000000
*000000400100000000000000480000000000000009000000000000004003000000000000004800
*000000000000090000000000000040000000000000000049000000000000000900000000000000
*4001000000000000004a0000000000000009000000000000004003000000000000004a00000000
*00000009000000000000004000000000000000004b000000000000000900000000000000400100
*0000000000004c0000000000000009000000000000004003000000000000004c00000000000000
*09000000000000004000000000000000004d000000000000000900000000000000400100000000
*0000004e0000000000000009000000000000004003000000000000004e00000000000000090000
*00000000004000000000000000004f000000000000000900000000000000400100000000000000
*500000000000000009000000000000004003000000000000005000000000000000090000000000
*000040000000000000000051000000000000000900000000000000400100000000000000520000
*000000000009000000000000004003000000000000005200000000000000090000000000000040
*000000000000000053000000000000000900000000000000400100000000000000540000000000
*0000090000000000000040030000000000000054000000000000005500000000000000156c6578
*6963616c2d6d6f6e6f6964732d302e312e31000000000000000f446174612e4d6f6e6f69642e4f
*72640000000000000013446174612e4d6f6e6f69642e5265647563657200000000000000184461
*74612e4d6f6e6f69642e526564756365722e436861720000000000000022446174612e4d6f6e6f
*69642e4c65786963616c2e536f75726365506f736974696f6e0000000000000020446174612e4d
*6f6e6f69642e4c65786963616c2e555446382e4465636f6465720000000000000018446174612e
*4d6f6e6f69642e526564756365722e576974680000000000000015446174612e4d6f6e6f69642e
*47656e657261746f720000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f
*7264730000000000000004626173650000000000000008446174612e4f7264000000000000000a
*446174612e4d6179626500000000000000075072656c756465000000000000000b4d696e507269
*6f72697479000000000000000e6765744d696e5072696f72697479000000000000000b4d617850
*72696f72697479000000000000000e6765744d61785072696f7269747900000000000000034d69
*6e00000000000000066765744d696e00000000000000034d617800000000000000066765744d61
*780000000000000007526564756365720000000000000006726564756365000000000000000772
*65647563657200000000000000077265647563656c000000000000000b43686172526564756365
*72000000000000000a72656475636543686172000000000000000b696e76616c69644368617200
*0000000000000e536f75726365506f736974696f6e000000000000000c536f75726365436f6c75
*6d6e000000000000000a536f757263654c696e65000000000000000b73746172744f6646696c65
*000000000000000c736f75726365436f6c756d6e000000000000000a736f757263654c696e6500
*0000000000001273686f77536f75726365506f736974696f6e0000000000000004555446380000
*00000000000772756e55544638000000000000000b576974685265647563657200000000000000
*0e72756e5769746852656475636572000000000000000b77697468526564756365720000000000
*00000e776974686f757452656475636572000000000000000947656e657261746f720000000000
*000004456c656d00000000000000096d6170726564756365000000000000000a6d617072656475
*636572000000000000000a6d61707265647563656c0000000000000007556e6c696e6564000000
*000000000a72756e556e6c696e65640000000000000008556e737061636564000000000000000b
*72756e556e73706163656400000000000000054c696e65730000000000000005576f7264730000
*00000000000872756e576f726473000000000000000872756e4c696e6573000000000000000977
*6f72647346726f6d00000000000000096c696e657346726f6d000000000000000b4748432e436c
*617373657300000000000000036d696e00000000000000074e6f7468696e670000000000000005
*4d6179626500000000000000036d617800000000000000084748432e456e756d00000000000000
*086d6178426f756e6400000000000000086d696e426f756e64000000000000000b446174612e4d
*6f6e6f696400000000000000076d617070656e6400000000000000066d656d7074790000000000
*0000064d6f6e6f696400000000000000076d636f6e63617400000000000000076765744475616c
*00000000000000044475616c0000000000000007617070456e646f0000000000000004456e646f
*0000000000000006676574416c6c0000000000000003416c6c0000000000000006676574416e79
*0000000000000003416e79000000000000000667657453756d000000000000000353756d000000
*000000000a67657450726f64756374000000000000000750726f64756374000000000000000867
*657446697273740000000000000005466972737400000000000000076765744c61737400000000
*000000044c617374
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 24
-<a name="line-16"></a>    <span class='hs-comment'>-- * Min</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-comment'>-- * Max</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
+<a name="line-16"></a>    <span class='hs-comment'>-- * Max</span>
+<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>    <span class='hs-comment'>-- * Min</span>
+<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 29
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Priority</span><span class='hs-layout'>(</span><span class='hs-conid'>Priority</span><span class='hs-layout'>,</span><span class='hs-varid'>getPriority</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
+<a name="line-22"></a>    <span class='hs-comment'>-- * Min w/ added bottom</span>
+<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 34
-<a name="line-26"></a><a name="Min"></a><span class='hs-comment'>-- | The monoid given by @('min','maxBound')@</span>
-<a name="line-27"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 37
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
-<a name="line-31"></a>    <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>
-<a name="line-33"></a><a name="Max"></a><span class='hs-comment'>-- | The monoid @('max','minBound')@</span>
-<a name="line-34"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-29"></a><a name="Max"></a><span class='hs-comment'>-- | The monoid @('max','minBound')@</span>
+<a name="line-30"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>
+<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-33"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
+<a name="line-34"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 44
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
-<a name="line-38"></a>    <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="Priority"></a><span class='hs-comment'>-- | The monoid @('max','Nothing')@ over @'Maybe' a@</span>
-<a name="line-41"></a><a name="Priority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-36"></a><a name="Min"></a><span class='hs-comment'>-- | The monoid given by @('min','maxBound')@</span>
+<a name="line-37"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
+<a name="line-38"></a>
+<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-40"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
+<a name="line-41"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
hunk ./dist/doc/html/lexical-monoids/src/Data-Monoid-Ord.html 51
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-45"></a>    <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
+<a name="line-43"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The monoid @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element.</span>
+<a name="line-44"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-45"></a>
+<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-47"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-48"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
+<a name="line-49"></a>
+<a name="line-50"></a><a name="MinPriority"></a><span class='hs-comment'>-- | A monoid @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
+<a name="line-51"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
+<a name="line-52"></a>
+<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-54"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
+<a name="line-55"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
+<a name="line-56"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
+<a name="line-57"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
+<a name="line-58"></a>
+<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-60"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
+<a name="line-61"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
}
