[doc update
ekmett@gmail.com**20090412081532
 Ignore-this: 26226f1604408fef566470d6f5fa535
] {
hunk ./doc/html/monad-cps/Control-Monad-CPS-RWS.html 145
+> w =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Class.html#t%3AMonadRWS"
+>MonadRWS</A
+> r w s (<A HREF="Control-Monad-CPS-RWS.html#t%3ARWS"
+>RWS</A
+> r w s)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
hunk ./doc/html/monad-cps/Control-Monad-CPS-RWS.html 201
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
+>Monoid</A
+> w =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-CPS-RWS.html#t%3ARWS"
+>RWS</A
+> r w s)</TD
+></TR
hunk ./doc/html/monad-cps/doc-index.html 52
->Control.Monad.CPS.Reader, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Reader, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 58
->Control.Monad.CPS.Reader, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Reader, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 70
->Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 104
->Control.Monad.CPS.State, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.State, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 110
->Control.Monad.CPS.State, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.State, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 144
->Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 150
->Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 156
->Control.Monad.CPS.Reader, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Reader, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 170
->Control.Monad.CPS.State, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.State, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 182
->Control.Monad.CPS.Reader, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Reader, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>MonadRWS</TD
+><TD CLASS="indexlinks"
+>Control.Monad.CPS.RWS</TD
hunk ./doc/html/monad-cps/doc-index.html 194
->Control.Monad.CPS.State, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.State, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 200
->Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 206
->Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 212
->Control.Monad.CPS.State, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.State, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 398
->Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
binary ./doc/html/monad-cps/monad-cps.haddock
oldhex
*0d0cface00040000000000000e1500000000000008c72500000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000800000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000809000000000000000000000000000000010000000000040000
*000000000000000000000000000100000000000000020000000000000003040000000000000000
*000000000000000100000000000000020000000000000003000000000000000000000000000000
*020000000000030000000000000004000000000000000500000000000000060300000000000000
*040000000000000005000000000000000600000000000000000000000000000003000000000005
*000000000000000700000000000000080000000000000009000000000000000a00000000000000
*0b05000000000000000700000000000000080000000000000009000000000000000a0000000000
*00000b000000000000000000000000000000040000000000090000000000000025000000000000
*0026000000000000000c000000000000000d000000000000000e000000000000000f0000000000
*0000100000000000000011000000000000001207000000000000000c000000000000000d000000
*000000000e000000000000000f0000000000000010000000000000001100000000000000120000
*000000000000000000000000000500000000000900000000000000270000000000000028000000
*0000000029000000000000002a000000000000002b000000000000001300000000000000140000
*000000000015000000000000001604000000000000001400000000000000150000000000000013
*00000000000000160000000000000000000000000000000600000000000c000000000000002c00
*0000000000002d000000000000002e000000000000002f00000000000000300000000000000031
*000000000000001700000000000000180000000000000019000000000000001a00000000000000
*1b000000000000001c0600000000000000180000000000000019000000000000001a0000000000
*00001b0000000000000017000000000000001c0000000000000000000000000000000700000000
*000800000000000000320000000000000033000000000000003400000000000000350000000000
*00001d000000000000001e000000000000001f000000000000002004000000000000001d000000
*000000001e000000000000001f0000000000000020000000000000000000000000000000080000
*000000040000000000000021000000000000002200000000000000230000000000000024040000
*000000000021000000000000002200000000000000230000000000000024000000000000000000
*000000000000090000000000320000000000000025000000000000002600000000000000320000
*000000000033000000000000003400000000000000350000000000000027000000000000002800
*00000000000029000000000000002a000000000000002b000000000000002c000000000000002d
*000000000000002e000000000000002f0000000000000030000000000000003100000000000000
*040000000000000005000000000000000600000000000000070000000000000008000000000000
*0009000000000000000a000000000000000b000000000000000c000000000000000d0000000000
*00000e000000000000000f00000000000000100000000000000011000000000000001200000000
*000000130000000000000014000000000000001500000000000000160000000000000017000000
*00000000180000000000000019000000000000001a000000000000001b000000000000001c0000
*00000000001d000000000000001e000000000000001f0000000000000020000000000000002100
*000000000000220000000000000023000000000000002400000000000000003600000000000000
*00000000000000000103000000000000000a000000000000000000000000000000010100000000
*0000000a0000000000000000000000000000000100000000000000000b00000000000000000000
*00000000000100000000000000000c000000000000000000000000000000020300000000000000
*0d0000000000000000000000000000000201000000000000000d00000000000000000000000000
*00000200000000000000000e0000000000000000000000000000000303000000000000000f0000
*000000000000000000000000000301000000000000000f00000000000000000000000000000003
*000000000000000010000000000000000000000000000000030000000000000000110000000000
*000000000000000000000300000000000000001200000000000000000000000000000004030000
*000000000013000000000000000000000000000000040000000000000000140000000000000000
*000000000000000400000000000000001500000000000000000000000000000004000000000000
*000016000000000000000000000000000000040000000000000000170000000000000000000000
*000000000400000000000000001800000000000000000000000000000004000000000000000019
*0000000000000000000000000000000503000000000000001a0000000000000000000000000000
*000503000000000000001b0000000000000000000000000000000500000000000000001c000000
*0000000000000000000000000500000000000000001d0000000000000000000000000000000603
*000000000000001e0000000000000000000000000000000603000000000000001f000000000000
*0000000000000000000601000000000000001f0000000000000000000000000000000600000000
*000000002000000000000000000000000000000006000000000000000021000000000000000000
*000000000000060000000000000000220000000000000000000000000000000703000000000000
*002300000000000000000000000000000007010000000000000023000000000000000000000000
*000000070000000000000000240000000000000000000000000000000700000000000000002500
*000000000000000000000000000008030000000000000026000000000000000000000000000000
*080100000000000000260000000000000000000000000000000800000000000000002700000000
*0000000000000000000000080000000000000000280000000000000029000000000000002a0000
*0000000000002b0000000000000029000000000000002a03000000000000002c00000000000000
*29000000000000002d00000000000000002e0000000000000029000000000000002d0000000000
*0000002f0000000000000029000000000000002d00000000000000003000000000000000290000
*00000000002d0000000000000000310000000000000029000000000000002d0300000000000000
*320000000000000029000000000000003300000000000000003400000000000000290000000000
*000033000000000000000035000000000000002900000000000000330000000000000000360000
*000000000029000000000000003300000000000000003700000000000000290000000000000033
*000000000000000038000000000000002900000000000000330300000000000000390000000000
*000029000000000000003a00000000000000003b0000000000000029000000000000003a000000
*00000000003c0000000000000029000000000000003a00000000000000003d0000000000000029
*000000000000003a03000000000000003e000000000000003f000000000000000f6d6f6e61642d
*6370732d302e302e320000000000000015436f6e74726f6c2e4d6f6e61642e4350532e52575300
*00000000000015436f6e74726f6c2e4d6f6e61642e4350532e52616e000000000000001b436f6e
*74726f6c2e4d6f6e61642e4350532e436f64656e736974790000000000000016436f6e74726f6c
*2e4d6f6e61642e4350532e436f6e740000000000000017436f6e74726f6c2e4d6f6e61642e4350
*532e53746174650000000000000018436f6e74726f6c2e4d6f6e61642e4350532e577269746572
*0000000000000018436f6e74726f6c2e4d6f6e61642e4350532e52656164657200000000000000
*1a436f6e74726f6c2e4d6f6e61642e4350532e4964656e746974790000000000000011436f6e74
*726f6c2e4d6f6e61642e43505300000000000000035257530000000000000005756e5257530000
*00000000000672756e525753000000000000000352616e000000000000000672756e52616e0000
*000000000009436f64656e73697479000000000000000b756e436f64656e736974790000000000
*00000c72756e436f64656e73697479000000000000000f72756e436f64656e7369747941707000
*00000000000004436f6e74000000000000000772756e436f6e7400000000000000066964436f6e
*7400000000000000076d6170436f6e74000000000000000877697468436f6e7400000000000000
*057368696674000000000000000572657365740000000000000006537461746527000000000000
*00055374617465000000000000000872756e5374617465000000000000000972756e5374617465
*270000000000000007577269746572270000000000000006577269746572000000000000000875
*6e577269746572000000000000000972756e577269746572000000000000000a72756e57726974
*65722700000000000000065265616465720000000000000008756e526561646572000000000000
*000972756e52656164657200000000000000084964656e74697479000000000000000a756e4964
*656e74697479000000000000000b72756e4964656e74697479000000000000000b6d746c2d312e
*312e302e320000000000000018436f6e74726f6c2e4d6f6e61642e436f6e742e436c6173730000
*00000000000663616c6c434300000000000000094d6f6e6164436f6e740000000000000019436f
*6e74726f6c2e4d6f6e61642e53746174652e436c61737300000000000000046765747300000000
*000000066d6f646966790000000000000003707574000000000000000367657400000000000000
*0a4d6f6e61645374617465000000000000001a436f6e74726f6c2e4d6f6e61642e577269746572
*2e436c617373000000000000000663656e736f7200000000000000076c697374656e7300000000
*000000047061737300000000000000066c697374656e000000000000000474656c6c0000000000
*00000b4d6f6e6164577269746572000000000000001a436f6e74726f6c2e4d6f6e61642e526561
*6465722e436c617373000000000000000461736b7300000000000000056c6f63616c0000000000
*00000361736b000000000000000b4d6f6e6164526561646572
newhex
*0d0cface00040000000000000eae00000000000009472500000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000800000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000809000000000000000000000000000000010000000000140000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002a000000000000002b000000000000002c000000000000002d000000000000002e
*000000000000002f00000000000000300000000000000031000000000000003200000000000000
*330000000000000034000000000000000000000000000000010000000000000002000000000000
*000304000000000000000000000000000000010000000000000002000000000000000300000000
*000000000000000000000002000000000003000000000000000400000000000000050000000000
*000006030000000000000004000000000000000500000000000000060000000000000000000000
*000000000300000000000500000000000000070000000000000008000000000000000900000000
*0000000a000000000000000b050000000000000007000000000000000800000000000000090000
*00000000000a000000000000000b00000000000000000000000000000004000000000009000000
*00000000350000000000000036000000000000000c000000000000000d000000000000000e0000
*00000000000f00000000000000100000000000000011000000000000001207000000000000000c
*000000000000000d000000000000000e000000000000000f000000000000001000000000000000
*11000000000000001200000000000000000000000000000005000000000009000000000000002a
*000000000000002b000000000000002c000000000000002d000000000000002e00000000000000
*130000000000000014000000000000001500000000000000160400000000000000140000000000
*000015000000000000001300000000000000160000000000000000000000000000000600000000
*000c000000000000002f0000000000000030000000000000003100000000000000320000000000
*000033000000000000003400000000000000170000000000000018000000000000001900000000
*0000001a000000000000001b000000000000001c06000000000000001800000000000000190000
*00000000001a000000000000001b0000000000000017000000000000001c000000000000000000
*000000000000070000000000080000000000000026000000000000002700000000000000280000
*000000000029000000000000001d000000000000001e000000000000001f000000000000002004
*000000000000001d000000000000001e000000000000001f000000000000002000000000000000
*000000000000000008000000000004000000000000002100000000000000220000000000000023
*000000000000002404000000000000002100000000000000220000000000000023000000000000
*002400000000000000000000000000000009000000000032000000000000003500000000000000
*360000000000000026000000000000002700000000000000280000000000000029000000000000
*002a000000000000002b000000000000002c000000000000002d000000000000002e0000000000
*00002f000000000000003000000000000000310000000000000032000000000000003300000000
*000000340000000000000004000000000000000500000000000000060000000000000007000000
*00000000080000000000000009000000000000000a000000000000000b000000000000000c0000
*00000000000d000000000000000e000000000000000f0000000000000010000000000000001100
*000000000000120000000000000013000000000000001400000000000000150000000000000016
*000000000000001700000000000000180000000000000019000000000000001a00000000000000
*1b000000000000001c000000000000001d000000000000001e000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000000370000000000000000000000000000000103000000000000000a00000000000000000000
*00000000000101000000000000000a000000000000000000000000000000010000000000000000
*0b0000000000000000000000000000000100000000000000000c00000000000000000000000000
*00000203000000000000000d0000000000000000000000000000000201000000000000000d0000
*000000000000000000000000000200000000000000000e00000000000000000000000000000003
*03000000000000000f0000000000000000000000000000000301000000000000000f0000000000
*000000000000000000000300000000000000001000000000000000000000000000000003000000
*000000000011000000000000000000000000000000030000000000000000120000000000000000
*000000000000000403000000000000001300000000000000000000000000000004000000000000
*000014000000000000000000000000000000040000000000000000150000000000000000000000
*000000000400000000000000001600000000000000000000000000000004000000000000000017
*000000000000000000000000000000040000000000000000180000000000000000000000000000
*00040000000000000000190000000000000000000000000000000503000000000000001a000000
*0000000000000000000000000503000000000000001b0000000000000000000000000000000500
*000000000000001c0000000000000000000000000000000500000000000000001d000000000000
*0000000000000000000603000000000000001e0000000000000000000000000000000603000000
*000000001f0000000000000000000000000000000601000000000000001f000000000000000000
*000000000000060000000000000000200000000000000000000000000000000600000000000000
*002100000000000000000000000000000006000000000000000022000000000000000000000000
*000000070300000000000000230000000000000000000000000000000701000000000000002300
*000000000000000000000000000007000000000000000024000000000000000000000000000000
*070000000000000000250000000000000000000000000000000803000000000000002600000000
*000000000000000000000008010000000000000026000000000000000000000000000000080000
*000000000000270000000000000000000000000000000800000000000000002800000000000000
*29000000000000002a03000000000000002b0000000000000029000000000000002c0000000000
*0000002d0000000000000029000000000000002c00000000000000002e00000000000000290000
*00000000002c00000000000000002f0000000000000029000000000000002c0300000000000000
*300000000000000029000000000000003100000000000000003200000000000000290000000000
*000031000000000000000033000000000000002900000000000000310000000000000000340000
*000000000029000000000000003100000000000000003500000000000000290000000000000031
*030000000000000036000000000000002900000000000000370000000000000000380000000000
*000029000000000000003700000000000000003900000000000000290000000000000037000000
*00000000003a0000000000000029000000000000003700000000000000003b0000000000000029
*000000000000003700000000000000003c00000000000000290000000000000037030000000000
*00003d0000000000000029000000000000003e00000000000000003f0000000000000029000000
*000000003e0300000000000000400000000000000041000000000000000f6d6f6e61642d637073
*2d302e302e320000000000000015436f6e74726f6c2e4d6f6e61642e4350532e52575300000000
*00000015436f6e74726f6c2e4d6f6e61642e4350532e52616e000000000000001b436f6e74726f
*6c2e4d6f6e61642e4350532e436f64656e736974790000000000000016436f6e74726f6c2e4d6f
*6e61642e4350532e436f6e740000000000000017436f6e74726f6c2e4d6f6e61642e4350532e53
*746174650000000000000018436f6e74726f6c2e4d6f6e61642e4350532e577269746572000000
*0000000018436f6e74726f6c2e4d6f6e61642e4350532e526561646572000000000000001a436f
*6e74726f6c2e4d6f6e61642e4350532e4964656e746974790000000000000011436f6e74726f6c
*2e4d6f6e61642e43505300000000000000035257530000000000000005756e5257530000000000
*00000672756e525753000000000000000352616e000000000000000672756e52616e0000000000
*000009436f64656e73697479000000000000000b756e436f64656e73697479000000000000000c
*72756e436f64656e73697479000000000000000f72756e436f64656e7369747941707000000000
*00000004436f6e74000000000000000772756e436f6e7400000000000000066964436f6e740000
*0000000000076d6170436f6e74000000000000000877697468436f6e7400000000000000057368
*696674000000000000000572657365740000000000000006537461746527000000000000000553
*74617465000000000000000872756e5374617465000000000000000972756e5374617465270000
*0000000000075772697465722700000000000000065772697465720000000000000008756e5772
*69746572000000000000000972756e577269746572000000000000000a72756e57726974657227
*00000000000000065265616465720000000000000008756e526561646572000000000000000972
*756e52656164657200000000000000084964656e74697479000000000000000a756e4964656e74
*697479000000000000000b72756e4964656e74697479000000000000000b6d746c2d312e312e30
*2e320000000000000017436f6e74726f6c2e4d6f6e61642e5257532e436c617373000000000000
*00084d6f6e6164525753000000000000001a436f6e74726f6c2e4d6f6e61642e5265616465722e
*436c617373000000000000000461736b7300000000000000056c6f63616c000000000000000361
*736b000000000000000b4d6f6e61645265616465720000000000000019436f6e74726f6c2e4d6f
*6e61642e53746174652e436c61737300000000000000046765747300000000000000066d6f6469
*667900000000000000037075740000000000000003676574000000000000000a4d6f6e61645374
*617465000000000000001a436f6e74726f6c2e4d6f6e61642e5772697465722e436c6173730000
*00000000000663656e736f7200000000000000076c697374656e73000000000000000470617373
*00000000000000066c697374656e000000000000000474656c6c000000000000000b4d6f6e6164
*5772697465720000000000000018436f6e74726f6c2e4d6f6e61642e436f6e742e436c61737300
*0000000000000663616c6c434300000000000000094d6f6e6164436f6e74
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-RWS.html 12
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runRWS</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
-<a name="line-9"></a>
-<a name="line-10"></a><a name="RWS"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unRWS</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runRWS</span>
+<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-7"></a>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
+<a name="line-12"></a>
+<a name="line-13"></a><a name="RWS"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unRWS</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-RWS.html 23
-<a name="line-15"></a><span class='hs-comment'>--instance Monoid w =&gt; Applicative (RWS r w s) where</span>
-<a name="line-16"></a><span class='hs-comment'>--    pure a = RWS (\k _ -&gt; k a mempty)</span>
-<a name="line-17"></a><span class='hs-comment'>--    RwS f &lt;*&gt; RWS x = RWS (\k r -&gt; f (\f' s' w -&gt; x (\x' s'' w' -&gt; k (f' x') s'' (w `mappend` w')) r s'))</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unRWS</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-varid'>w'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>
-<a name="line-23"></a><a name="runRWS"></a><span class='hs-definition'>runRWS</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-24"></a><span class='hs-definition'>runRWS</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>(,,)</span>
+<a name="line-15"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-16"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-17"></a>
+<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-19"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-20"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>ap</span>
+<a name="line-21"></a>
+<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-23"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>    <span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unRWS</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-varid'>w'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-RWS.html 34
-<a name="line-26"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>mempty</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>mempty</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>    <span class='hs-varid'>listen</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-varid'>pass</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-37"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-26"></a><a name="runRWS"></a><span class='hs-definition'>runRWS</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-27"></a><span class='hs-definition'>runRWS</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-conid'>(,,)</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadState</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-30"></a>    <span class='hs-varid'>get</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>s</span> <span class='hs-varid'>mempty</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>    <span class='hs-varid'>put</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>mempty</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>
+<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadWriter</span> <span class='hs-varid'>w</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-34"></a>    <span class='hs-varid'>tell</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-conid'>()</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span>
+<a name="line-35"></a>    <span class='hs-varid'>listen</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>w</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-36"></a>    <span class='hs-varid'>pass</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span> <span class='hs-varid'>w</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-37"></a>
+<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadReader</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-39"></a>    <span class='hs-varid'>ask</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
+<a name="line-40"></a>    <span class='hs-varid'>local</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-41"></a>
+<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>MonadRWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span><span class='hs-layout'>)</span>
}
