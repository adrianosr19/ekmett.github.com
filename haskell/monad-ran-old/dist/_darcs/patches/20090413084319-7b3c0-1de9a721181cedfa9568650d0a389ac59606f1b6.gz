[doc update
ekmett@gmail.com**20090413084319
 Ignore-this: eded8d4d8660e964b61b8630317be216
] {
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 77
->data</SPAN
+>newtype</SPAN
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 96
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Cont')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Cont" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont-Class.html#t%3AMonadCont"
->MonadCont</A
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunCont"
-></A
-><B
->runCont</B
-> ::  <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r a -&gt; (a -&gt; r) -&gt; r</TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#runCont"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AidCont"
-></A
-><B
->idCont</B
-> ::  <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> a a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#idCont"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapCont"
-></A
-><B
->mapCont</B
-> ::  (r -&gt; r) -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r a -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r a</TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#mapCont"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwithCont"
-></A
-><B
->withCont</B
-> ::  ((b -&gt; r) -&gt; a -&gt; r) -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r a -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r b</TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#withCont"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Ashift"
-></A
-><B
->shift</B
-> ::  ((a -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> s r) -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r r) -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r a</TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#shift"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areset"
-></A
-><B
->reset</B
-> ::  <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> a a -&gt; <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Cont</A
-> r a</TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#reset"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ACont%27"
-></A
-><B
->Cont'</B
-> r a </TD
-><TD CLASS="declbut"
-><A HREF="src/Control-Monad-Ran-Cont.html#Cont%27"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 103
-><A NAME="v%3ACont%27"
+><A NAME="v%3ACont"
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 106
->Cont'</B
+>Cont</B
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 116
-><A NAME="v%3AgetCont%27"
+><A NAME="v%3AgetCont"
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 119
->getCont'</B
+>getCont</B
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 136
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Cont%27')" ALT="show/hide"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Cont')" ALT="show/hide"
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 141
-><DIV ID="i:Cont%27" STYLE="display:block;"
+><DIV ID="i:Cont" STYLE="display:block;"
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 147
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont%27"
->Cont'</A
+> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 155
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont%27"
->Cont'</A
+> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 163
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont%27"
->Cont'</A
+> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 171
-> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont%27"
->Cont'</A
+> (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3ARanIso"
+>RanIso</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 203
-><A NAME="v%3ArunCont%27"
+><A NAME="v%3ArunCont"
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 206
->runCont'</B
-> ::  <A HREF="Control-Monad-Ran-Cont.html#t%3ACont%27"
->Cont'</A
+>runCont</B
+> ::  <A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
hunk ./doc/html/monad-ran/Control-Monad-Ran-Cont.html 211
-><A HREF="src/Control-Monad-Ran-Cont.html#runCont%27"
+><A HREF="src/Control-Monad-Ran-Cont.html#runCont"
hunk ./doc/html/monad-ran/Control-Monad-Ran.html 395
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3ARanIso"
+>RanIso</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="Control-Monad-Ran.html#t%3ARanIso"
+>RanIso</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) (<A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
+>Cont</A
+> r)</TD
+></TR
hunk ./doc/html/monad-ran/doc-index.html 93
-><TD CLASS="indexentry"
->Cont</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
hunk ./doc/html/monad-ran/doc-index.html 94
->Cont'</TD
+>Cont</TD
hunk ./doc/html/monad-ran/doc-index.html 100
-><A HREF="Control-Monad-Ran-Cont.html#t%3ACont%27"
+><A HREF="Control-Monad-Ran-Cont.html#t%3ACont"
hunk ./doc/html/monad-ran/doc-index.html 108
-><A HREF="Control-Monad-Ran-Cont.html#v%3ACont%27"
+><A HREF="Control-Monad-Ran-Cont.html#v%3ACont"
hunk ./doc/html/monad-ran/doc-index.html 136
->getCont'</TD
+>getCont</TD
hunk ./doc/html/monad-ran/doc-index.html 138
-><A HREF="Control-Monad-Ran-Cont.html#v%3AgetCont%27"
+><A HREF="Control-Monad-Ran-Cont.html#v%3AgetCont"
hunk ./doc/html/monad-ran/doc-index.html 197
-><TD CLASS="indexentry"
->idCont</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#v%3AidCont"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
hunk ./doc/html/monad-ran/doc-index.html 235
-><TD CLASS="indexentry"
->mapCont</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#v%3AmapCont"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
hunk ./doc/html/monad-ran/doc-index.html 352
->reset</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#v%3Areset"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 376
->runCont'</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#v%3ArunCont%27"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 460
->shift</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#v%3Ashift"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
hunk ./doc/html/monad-ran/doc-index.html 489
-><TD CLASS="indexentry"
->withCont</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-Ran-Cont.html#v%3AwithCont"
->Control.Monad.Ran.Cont</A
-></TD
-></TR
-><TR CLASS="indexrow"
binary ./doc/html/monad-ran/monad-ran.haddock
oldhex
*0d0cface000400000000000010960000000000000a1c3000000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000700000000000000220000000000000000000000
*000000000700000000000000230000000000000000000000000000000700000000000000240000
*000000000000000000000000000700000000000000250000000000000000000000000000000700
*000000000000260000000000000000000000000000000700000000000000270000000000000000
*000000000000000700000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000008000000000000002a0000000000000000000000000000
*0008000000000000002b00000000000000000000000000000008000000000000002c0000000000
*0000000000000000000009000000000000002d0000000000000000000000000000000900000000
*0000002e00000000000000000000000000000009000000000000002f0000000000000000000000
*0000000009090000000000000000000000000000000100000000000c0000000000000030000000
*000000003100000000000000320000000000000033000000000000003400000000000000350000
*000000000000000000000000000100000000000000020000000000000003000000000000000400
*000000000000050600000000000000010000000000000002000000000000000300000000000000
*040000000000000000000000000000000500000000000000000000000000000002000000000014
*000000000000003600000000000000370000000000000038000000000000003900000000000000
*3a000000000000003b000000000000003c000000000000003d000000000000003e000000000000
*003f00000000000000300000000000000031000000000000003200000000000000330000000000
*000034000000000000003500000000000000060000000000000007000000000000000800000000
*000000090400000000000000060000000000000007000000000000000800000000000000090000
*000000000000000000000000000300000000000800000000000000370000000000000038000000
*0000000039000000000000003a000000000000000a000000000000000b000000000000000c0000
*00000000000d04000000000000000a000000000000000b000000000000000c000000000000000d
*00000000000000000000000000000004000000000004000000000000000e000000000000000f00
*00000000000010000000000000001104000000000000000e000000000000000f00000000000000
*100000000000000011000000000000000000000000000000050000000001000000000000001503
*01021b000000740000006800000065000000200000007200000069000000670000006800000074
*000000200000004b000000610000006e0000002000000065000000780000007400000065000000
*6e00000073000000690000006f0000006e000000200000006f0000006600000020010702010000
*006801020700000020000000610000006c0000006f0000006e0000006700000020010702010000
*006702010000000a06000000000000001200000000000000130000000000000014000000000000
*001500000000000000160000000000000017060000000000000015000000000000001600000000
*000000170000000000000012000000000000001300000000000000140000000000000000000000
*000000000600000000000500000000000000180000000000000019000000000000001a00000000
*0000001b000000000000001c0500000000000000180000000000000019000000000000001a0000
*00000000001b000000000000001c0000000000000000000000000000000700000000000d000000
*00000000400000000000000041000000000000001d000000000000001e000000000000001f0000
*000000000020000000000000002100000000000000220000000000000023000000000000002400
*00000000000025000000000000002600000000000000270b000000000000002000000000000000
*210000000000000022000000000000002300000000000000240000000000000025000000000000
*0026000000000000001d000000000000001e000000000000001f00000000000000270000000000
*0000000000000000000008000000000009000000000000003b000000000000003c000000000000
*003d000000000000003e000000000000003f000000000000002800000000000000290000000000
*00002a000000000000002b040000000000000029000000000000002a0000000000000028000000
*000000002b00000000000000000000000000000009000000000004000000000000002c00000000
*0000002d000000000000002e000000000000002f04000000000000002c000000000000002d0000
*00000000002e000000000000002f00000000000000420000000000000000000000000000000103
*000000000000000a0000000000000000000000000000000103000000000000000b000000000000
*0000000000000000000101000000000000000b0000000000000000000000000000000100000000
*000000000c0000000000000000000000000000000100000000000000000d000000000000000000
*0000000000000100000000000000000e0000000000000000000000000000000203000000000000
*000f0000000000000000000000000000000201000000000000000f000000000000000000000000
*000000020000000000000000100000000000000000000000000000000200000000000000001100
*000000000000000000000000000003030000000000000012000000000000000000000000000000
*030100000000000000120000000000000000000000000000000300000000000000001300000000
*000000000000000000000003000000000000000014000000000000000000000000000000040300
*000000000000150000000000000000000000000000000401000000000000001500000000000000
*000000000000000004000000000000000016000000000000000000000000000000040000000000
*000000170000000000000000000000000000000503000000000000001800000000000000000000
*000000000005000000000000000019000000000000000000000000000000050000000000000000
*1a0000000000000000000000000000000503000000000000001b00000000000000000000000000
*00000501000000000000001b0000000000000000000000000000000500000000000000001c0000
*000000000000000000000000000603000000000000001d00000000000000000000000000000006
*01000000000000001d0000000000000000000000000000000600000000000000001e0000000000
*000000000000000000000600000000000000001f00000000000000000000000000000006000000
*000000000020000000000000000000000000000000070300000000000000210000000000000000
*000000000000000701000000000000002100000000000000000000000000000007000000000000
*000022000000000000000000000000000000070300000000000000230000000000000000000000
*000000000700000000000000002400000000000000000000000000000007000000000000000025
*000000000000000000000000000000070000000000000000260000000000000000000000000000
*000700000000000000002700000000000000000000000000000007000000000000000028000000
*000000000000000000000000070000000000000000290000000000000000000000000000000700
*000000000000002a0000000000000000000000000000000803000000000000002b000000000000
*0000000000000000000803000000000000002c0000000000000000000000000000000800000000
*000000002d0000000000000000000000000000000800000000000000002e000000000000000000
*0000000000000903000000000000002f0000000000000000000000000000000901000000000000
*002f00000000000000000000000000000009000000000000000030000000000000000000000000
*000000090000000000000000310000000000000032000000000000003300000000000000003400
*000000000000320000000000000033000000000000000035000000000000003200000000000000
*330000000000000000360000000000000032000000000000003300000000000000003700000000
*000000320000000000000033000000000000000038000000000000003200000000000000330300
*000000000000390000000000000032000000000000003a03000000000000003b00000000000000
*32000000000000003c00000000000000003d0000000000000032000000000000003c0000000000
*0000003e0000000000000032000000000000003c00000000000000003f00000000000000320000
*00000000003c030000000000000040000000000000003200000000000000410000000000000000
*420000000000000032000000000000004100000000000000004300000000000000320000000000
*000041000000000000000044000000000000003200000000000000410000000000000000450000
*000000000032000000000000004103000000000000004600000000000000320000000000000047
*000000000000000048000000000000003200000000000000470300000000000000490000000000
*00004a000000000000000f6d6f6e61642d72616e2d302e302e350000000000000018436f6e7472
*6f6c2e4d6f6e61642e52616e2e5772697465720000000000000015436f6e74726f6c2e4d6f6e61
*642e52616e2e5257530000000000000018436f6e74726f6c2e4d6f6e61642e52616e2e52656164
*65720000000000000017436f6e74726f6c2e4d6f6e61642e52616e2e4d61796265000000000000
*0011436f6e74726f6c2e4d6f6e61642e52616e000000000000001b436f6e74726f6c2e4d6f6e61
*642e52616e2e436f64656e736974790000000000000016436f6e74726f6c2e4d6f6e61642e5261
*6e2e436f6e740000000000000017436f6e74726f6c2e4d6f6e61642e52616e2e53746174650000
*00000000001a436f6e74726f6c2e4d6f6e61642e52616e2e4964656e7469747900000000000000
*075772697465722700000000000000065772697465720000000000000009676574577269746572
*000000000000000972756e577269746572000000000000000a72756e5772697465722700000000
*000000035257530000000000000006676574525753000000000000000672756e52575300000000
*000000065265616465720000000000000009676574526561646572000000000000000972756e52
*656164657200000000000000064d617962652700000000000000096765744d6179626527000000
*000000000972756e4d6179626527000000000000000652616e49736f0000000000000005746f52
*616e000000000000000766726f6d52616e000000000000000352616e0000000000000006676574
*52616e0000000000000009436f64656e73697479000000000000000c676574436f64656e736974
*79000000000000000c72756e436f64656e73697479000000000000000f72756e436f64656e7369
*74794170700000000000000005436f6e74270000000000000008676574436f6e74270000000000
*000004436f6e74000000000000000772756e436f6e7400000000000000066964436f6e74000000
*00000000076d6170436f6e74000000000000000877697468436f6e740000000000000005736869
*667400000000000000057265736574000000000000000872756e436f6e74270000000000000006
*53746174652700000000000000055374617465000000000000000872756e537461746500000000
*0000000972756e53746174652700000000000000094964656e7469747927000000000000000c67
*65744964656e7469747927000000000000000c72756e4964656e7469747927000000000000000b
*6d746c2d312e312e302e32000000000000001a436f6e74726f6c2e4d6f6e61642e577269746572
*2e436c617373000000000000000663656e736f7200000000000000076c697374656e7300000000
*000000047061737300000000000000066c697374656e000000000000000474656c6c0000000000
*00000b4d6f6e61645772697465720000000000000017436f6e74726f6c2e4d6f6e61642e525753
*2e436c61737300000000000000084d6f6e6164525753000000000000001a436f6e74726f6c2e4d
*6f6e61642e5265616465722e436c617373000000000000000461736b7300000000000000056c6f
*63616c000000000000000361736b000000000000000b4d6f6e6164526561646572000000000000
*0019436f6e74726f6c2e4d6f6e61642e53746174652e436c617373000000000000000467657473
*00000000000000066d6f6469667900000000000000037075740000000000000003676574000000
*000000000a4d6f6e616453746174650000000000000018436f6e74726f6c2e4d6f6e61642e436f
*6e742e436c617373000000000000000663616c6c434300000000000000094d6f6e6164436f6e74
*
newhex
*0d0cface00040000000000000ecf00000000000009042900000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000500000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000800000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000800000000000000250000000000000000000000000000000900
*000000000000260000000000000000000000000000000900000000000000270000000000000000
*000000000000000900000000000000280000000000000000000000000000000909000000000000
*0000000000000000000100000000000c0000000000000029000000000000002a00000000000000
*2b000000000000002c000000000000002d000000000000002e0000000000000000000000000000
*000100000000000000020000000000000003000000000000000400000000000000050600000000
*000000010000000000000002000000000000000300000000000000040000000000000000000000
*000000000500000000000000000000000000000002000000000014000000000000002f00000000
*000000300000000000000031000000000000003200000000000000330000000000000034000000
*000000003500000000000000360000000000000037000000000000003800000000000000290000
*00000000002a000000000000002b000000000000002c000000000000002d000000000000002e00
*000000000000060000000000000007000000000000000800000000000000090400000000000000
*060000000000000007000000000000000800000000000000090000000000000000000000000000
*000300000000000800000000000000300000000000000031000000000000003200000000000000
*33000000000000000a000000000000000b000000000000000c000000000000000d040000000000
*00000a000000000000000b000000000000000c000000000000000d000000000000000000000000
*00000004000000000004000000000000000e000000000000000f00000000000000100000000000
*00001104000000000000000e000000000000000f00000000000000100000000000000011000000
*00000000000000000000000005000000000100000000000000150301021b000000740000006800
*000065000000200000007200000069000000670000006800000074000000200000004b00000061
*0000006e00000020000000650000007800000074000000650000006e0000007300000069000000
*6f0000006e000000200000006f0000006600000020010702010000006801020700000020000000
*610000006c0000006f0000006e0000006700000020010702010000006702010000000a06000000
*000000001200000000000000130000000000000014000000000000001500000000000000160000
*000000000017060000000000000015000000000000001600000000000000170000000000000012
*000000000000001300000000000000140000000000000000000000000000000600000000000500
*000000000000180000000000000019000000000000001a000000000000001b000000000000001c
*0500000000000000180000000000000019000000000000001a000000000000001b000000000000
*001c00000000000000000000000000000007000000000009000000000000003400000000000000
*35000000000000003600000000000000370000000000000038000000000000001d000000000000
*001e000000000000001f000000000000002004000000000000001e000000000000001f00000000
*0000001d0000000000000020000000000000000000000000000000080000000000060000000000
*000039000000000000003a00000000000000210000000000000022000000000000002300000000
*000000240400000000000000210000000000000022000000000000002300000000000000240000
*000000000000000000000000000900000000000400000000000000250000000000000026000000
*000000002700000000000000280400000000000000250000000000000026000000000000002700
*00000000000028000000000000003b000000000000000000000000000000010300000000000000
*0a0000000000000000000000000000000103000000000000000b00000000000000000000000000
*00000101000000000000000b0000000000000000000000000000000100000000000000000c0000
*000000000000000000000000000100000000000000000d00000000000000000000000000000001
*00000000000000000e0000000000000000000000000000000203000000000000000f0000000000
*000000000000000000000201000000000000000f00000000000000000000000000000002000000
*000000000010000000000000000000000000000000020000000000000000110000000000000000
*000000000000000303000000000000001200000000000000000000000000000003010000000000
*000012000000000000000000000000000000030000000000000000130000000000000000000000
*000000000300000000000000001400000000000000000000000000000004030000000000000015
*000000000000000000000000000000040100000000000000150000000000000000000000000000
*000400000000000000001600000000000000000000000000000004000000000000000017000000
*000000000000000000000000050300000000000000180000000000000000000000000000000500
*00000000000000190000000000000000000000000000000500000000000000001a000000000000
*0000000000000000000503000000000000001b0000000000000000000000000000000501000000
*000000001b0000000000000000000000000000000500000000000000001c000000000000000000
*0000000000000603000000000000001d0000000000000000000000000000000601000000000000
*001d0000000000000000000000000000000600000000000000001e000000000000000000000000
*0000000600000000000000001f0000000000000000000000000000000600000000000000002000
*000000000000000000000000000007030000000000000021000000000000000000000000000000
*070300000000000000220000000000000000000000000000000700000000000000002300000000
*000000000000000000000007000000000000000024000000000000000000000000000000080300
*000000000000250000000000000000000000000000000801000000000000002500000000000000
*000000000000000008000000000000000026000000000000000000000000000000080000000000
*000000270000000000000000000000000000000903000000000000002800000000000000000000
*000000000009010000000000000028000000000000000000000000000000090000000000000000
*290000000000000000000000000000000900000000000000002a000000000000002b0000000000
*00002c00000000000000002d000000000000002b000000000000002c00000000000000002e0000
*00000000002b000000000000002c00000000000000002f000000000000002b000000000000002c
*000000000000000030000000000000002b000000000000002c0000000000000000310000000000
*00002b000000000000002c030000000000000032000000000000002b0000000000000033030000
*000000000034000000000000002b0000000000000035000000000000000036000000000000002b
*0000000000000035000000000000000037000000000000002b0000000000000035000000000000
*000038000000000000002b0000000000000035030000000000000039000000000000002b000000
*000000003a00000000000000003b000000000000002b000000000000003a00000000000000003c
*000000000000002b000000000000003a00000000000000003d000000000000002b000000000000
*003a00000000000000003e000000000000002b000000000000003a03000000000000003f000000
*000000002b0000000000000040000000000000000041000000000000002b000000000000004003
*00000000000000420000000000000043000000000000000f6d6f6e61642d72616e2d302e302e35
*0000000000000018436f6e74726f6c2e4d6f6e61642e52616e2e57726974657200000000000000
*15436f6e74726f6c2e4d6f6e61642e52616e2e5257530000000000000018436f6e74726f6c2e4d
*6f6e61642e52616e2e5265616465720000000000000017436f6e74726f6c2e4d6f6e61642e5261
*6e2e4d617962650000000000000011436f6e74726f6c2e4d6f6e61642e52616e00000000000000
*1b436f6e74726f6c2e4d6f6e61642e52616e2e436f64656e736974790000000000000017436f6e
*74726f6c2e4d6f6e61642e52616e2e53746174650000000000000016436f6e74726f6c2e4d6f6e
*61642e52616e2e436f6e74000000000000001a436f6e74726f6c2e4d6f6e61642e52616e2e4964
*656e74697479000000000000000757726974657227000000000000000657726974657200000000
*00000009676574577269746572000000000000000972756e577269746572000000000000000a72
*756e57726974657227000000000000000352575300000000000000066765745257530000000000
*00000672756e525753000000000000000652656164657200000000000000096765745265616465
*72000000000000000972756e52656164657200000000000000064d617962652700000000000000
*096765744d6179626527000000000000000972756e4d6179626527000000000000000652616e49
*736f0000000000000005746f52616e000000000000000766726f6d52616e000000000000000352
*616e000000000000000667657452616e0000000000000009436f64656e73697479000000000000
*000c676574436f64656e73697479000000000000000c72756e436f64656e736974790000000000
*00000f72756e436f64656e73697479417070000000000000000653746174652700000000000000
*055374617465000000000000000872756e5374617465000000000000000972756e537461746527
*0000000000000004436f6e740000000000000007676574436f6e74000000000000000772756e43
*6f6e7400000000000000094964656e7469747927000000000000000c6765744964656e74697479
*27000000000000000c72756e4964656e7469747927000000000000000b6d746c2d312e312e302e
*32000000000000001a436f6e74726f6c2e4d6f6e61642e5772697465722e436c61737300000000
*0000000663656e736f7200000000000000076c697374656e730000000000000004706173730000
*0000000000066c697374656e000000000000000474656c6c000000000000000b4d6f6e61645772
*697465720000000000000017436f6e74726f6c2e4d6f6e61642e5257532e436c61737300000000
*000000084d6f6e6164525753000000000000001a436f6e74726f6c2e4d6f6e61642e5265616465
*722e436c617373000000000000000461736b7300000000000000056c6f63616c00000000000000
*0361736b000000000000000b4d6f6e61645265616465720000000000000019436f6e74726f6c2e
*4d6f6e61642e53746174652e436c61737300000000000000046765747300000000000000066d6f
*6469667900000000000000037075740000000000000003676574000000000000000a4d6f6e6164
*53746174650000000000000018436f6e74726f6c2e4d6f6e61642e436f6e742e436c6173730000
*00000000000663616c6c434300000000000000094d6f6e6164436f6e74
hunk ./doc/html/monad-ran/src/Control-Monad-Ran-Cont.html 10
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Cont</span>
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Cont</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran-Cont.html 12
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>idCont</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapCont</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>withCont</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>shift</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reset</span>
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Cont'</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runCont'</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
-<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
+<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-6"></a>
+<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
+<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span>
+<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
+<a name="line-12"></a>
+<a name="line-13"></a><a name="Cont"></a><span class='hs-comment'>-- traditional Cont derived as a codensity monad showing why the above is unnecessary</span>
+<a name="line-14"></a><a name="Cont"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-15"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>RanIso</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-16"></a>
+<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-18"></a>     <span class='hs-varid'>callCC</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span>  <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Const</span> <span class='hs-layout'>(</span><span class='hs-varid'>getConst</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-ran/src/Control-Monad-Ran-Cont.html 28
-<a name="line-20"></a><a name="Cont"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>{</span><span class='hs-varid'>getCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>}</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-26"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-27"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>ap</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    <span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>
-<a name="line-33"></a><a name="runCont"></a><span class='hs-definition'>runCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
-<a name="line-34"></a><span class='hs-definition'>runCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>g</span> <span class='hs-varid'>id</span>
-<a name="line-35"></a>
-<a name="line-36"></a><a name="idCont"></a><span class='hs-definition'>idCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-37"></a><span class='hs-definition'>idCont</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>runCont</span> <span class='hs-varid'>id</span>
-<a name="line-38"></a>
-<a name="line-39"></a><a name="mapCont"></a><span class='hs-definition'>mapCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
-<a name="line-40"></a><span class='hs-definition'>mapCont</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-41"></a><span class='hs-comment'>-- mapCont f (Cont g) = Cont (\k z -&gt; g k (z . f))</span>
-<a name="line-42"></a>
-<a name="line-43"></a><a name="withCont"></a><span class='hs-definition'>withCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>b</span>
-<a name="line-44"></a><span class='hs-definition'>withCont</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-45"></a><span class='hs-comment'>-- withCont f (Cont g) = Cont (\k -&gt; g (f k))</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>callCC</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
-<a name="line-49"></a>
-<a name="line-50"></a><a name="shift"></a><span class='hs-definition'>shift</span>  <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
-<a name="line-51"></a><span class='hs-definition'>shift</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varop'>.</span> <span class='hs-varid'>e</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><a name="reset"></a><span class='hs-definition'>reset</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
-<a name="line-54"></a><span class='hs-definition'>reset</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>z</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>runCont</span> <span class='hs-varid'>m</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><a name="Cont'"></a><span class='hs-comment'>-- traditional Cont derived as a codensity monad showing why the above is unnecessary</span>
-<a name="line-57"></a><a name="Cont'"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Cont'</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont'</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getCont'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-58"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont'</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>     <span class='hs-varid'>callCC</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span>  <span class='hs-conid'>Cont'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCont'</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Const</span> <span class='hs-layout'>(</span><span class='hs-varid'>getConst</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-62"></a>
-<a name="line-63"></a><a name="runCont'"></a><span class='hs-definition'>runCont'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont'</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
-<a name="line-64"></a><span class='hs-definition'>runCont'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont'</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getConst</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCodensity</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-20"></a><a name="runCont"></a><span class='hs-definition'>runCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
+<a name="line-21"></a><span class='hs-definition'>runCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getConst</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCodensity</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
}
