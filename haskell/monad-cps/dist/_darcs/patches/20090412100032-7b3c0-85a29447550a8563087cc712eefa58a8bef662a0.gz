[bump
ekmett@gmail.com**20090412100032
 Ignore-this: 4c65bf0552a7f3f4944c02d9f6696d90
] {
hunk ./doc/html/monad-cps/Control-Monad-CPS-Codensity.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Codensity.html 116
-><A NAME="v%3AunCodensity"
+><A NAME="v%3AgetCodensity"
hunk ./doc/html/monad-cps/Control-Monad-CPS-Codensity.html 119
->unCodensity</B
+>getCodensity</B
hunk ./doc/html/monad-cps/Control-Monad-CPS-Cont.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Cont.html 121
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-CPS-Cont.html#t%3ACont"
+>Cont</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
hunk ./doc/html/monad-cps/Control-Monad-CPS-Cont.html 301
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><SPAN CLASS="keyword"
+>newtype</SPAN
+>  <A NAME="t%3ACont%27"
+></A
+><B
+>Cont'</B
+> r a </TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-CPS-Cont.html#Cont%27"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
+><TR
+><TD CLASS="section4"
+>Constructors</TD
+></TR
+><TR
+><TD CLASS="body"
+><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3ACont%27"
+></A
+><B
+>Cont'</B
+></TD
+><TD CLASS="rdoc"
+></TD
+></TR
+><TR
+><TD CLASS="body" COLSPAN="2"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="arg"
+><A NAME="v%3AgetCont%27"
+></A
+><B
+>getCont'</B
+> :: <A HREF="Control-Monad-CPS-Codensity.html#t%3ACodensity"
+>Codensity</A
+> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
+>Const</A
+> r) a</TD
+><TD CLASS="rdoc"
+></TD
+></TR
+></TABLE
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="section4"
+><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Cont%27')" ALT="show/hide"
+> Instances</TD
+></TR
+><TR
+><TD CLASS="body"
+><DIV ID="i:Cont%27" STYLE="display:block;"
+><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
+>Monad</A
+> (<A HREF="Control-Monad-CPS-Cont.html#t%3ACont%27"
+>Cont'</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
+>Functor</A
+> (<A HREF="Control-Monad-CPS-Cont.html#t%3ACont%27"
+>Cont'</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
+>Applicative</A
+> (<A HREF="Control-Monad-CPS-Cont.html#t%3ACont%27"
+>Cont'</A
+> r)</TD
+></TR
+><TR
+><TD CLASS="decl"
+><A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont-Class.html#t%3AMonadCont"
+>MonadCont</A
+> (<A HREF="Control-Monad-CPS-Cont.html#t%3ACont%27"
+>Cont'</A
+> r)</TD
+></TR
+></TABLE
+></DIV
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="topdecl"
+><TABLE CLASS="declbar"
+><TR
+><TD CLASS="declname"
+><A NAME="v%3ArunCont%27"
+></A
+><B
+>runCont'</B
+> ::  <A HREF="Control-Monad-CPS-Cont.html#t%3ACont%27"
+>Cont'</A
+> r a -&gt; (a -&gt; r) -&gt; r</TD
+><TD CLASS="declbut"
+><A HREF="src/Control-Monad-CPS-Cont.html#runCont%27"
+>Source</A
+></TD
+></TR
+></TABLE
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
hunk ./doc/html/monad-cps/Control-Monad-CPS-Identity.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Identity.html 116
-><A NAME="v%3AunIdentity"
+><A NAME="v%3AgetIdentity"
hunk ./doc/html/monad-cps/Control-Monad-CPS-Identity.html 119
->unIdentity</B
+>getIdentity</B
hunk ./doc/html/monad-cps/Control-Monad-CPS-RWS.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-RWS.html 116
-><A NAME="v%3AunRWS"
+><A NAME="v%3AgetRWS"
hunk ./doc/html/monad-cps/Control-Monad-CPS-RWS.html 119
->unRWS</B
+>getRWS</B
hunk ./doc/html/monad-cps/Control-Monad-CPS-Ran.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Ran.html 116
-><A NAME="v%3ArunRan"
+><A NAME="v%3AgetRan"
hunk ./doc/html/monad-cps/Control-Monad-CPS-Ran.html 119
->runRan</B
+>getRan</B
hunk ./doc/html/monad-cps/Control-Monad-CPS-Reader.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Reader.html 116
-><A NAME="v%3AunReader"
+><A NAME="v%3AgetReader"
hunk ./doc/html/monad-cps/Control-Monad-CPS-Reader.html 119
->unReader</B
+>getReader</B
hunk ./doc/html/monad-cps/Control-Monad-CPS-State.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Writer.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS-Writer.html 116
-><A NAME="v%3AunWriter"
+><A NAME="v%3AgetWriter"
hunk ./doc/html/monad-cps/Control-Monad-CPS-Writer.html 119
->unWriter</B
+>getWriter</B
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 73
->module <A HREF="Control-Monad-CPS-Identity.html"
->Control.Monad.CPS.Identity</A
+>module <A HREF="Control-Monad-CPS-Codensity.html"
+>Control.Monad.CPS.Codensity</A
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 83
->module <A HREF="Control-Monad-CPS-Reader.html"
->Control.Monad.CPS.Reader</A
+>module <A HREF="Control-Monad-CPS-Cont.html"
+>Control.Monad.CPS.Cont</A
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 93
->module <A HREF="Control-Monad-CPS-Writer.html"
->Control.Monad.CPS.Writer</A
+>module <A HREF="Control-Monad-CPS-Identity.html"
+>Control.Monad.CPS.Identity</A
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 103
->module <A HREF="Control-Monad-CPS-State.html"
->Control.Monad.CPS.State</A
+>module <A HREF="Control-Monad-CPS-Maybe.html"
+>Control.Monad.CPS.Maybe</A
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 113
->module <A HREF="Control-Monad-CPS-Cont.html"
->Control.Monad.CPS.Cont</A
+>module <A HREF="Control-Monad-CPS-Ran.html"
+>Control.Monad.CPS.Ran</A
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 123
->module <A HREF="Control-Monad-CPS-Codensity.html"
->Control.Monad.CPS.Codensity</A
+>module <A HREF="Control-Monad-CPS-Reader.html"
+>Control.Monad.CPS.Reader</A
hunk ./doc/html/monad-cps/Control-Monad-CPS.html 133
->module <A HREF="Control-Monad-CPS-Ran.html"
->Control.Monad.CPS.Ran</A
+>module <A HREF="Control-Monad-CPS-State.html"
+>Control.Monad.CPS.State</A
+></TD
+></TR
+><TR
+><TD CLASS="s15"
+></TD
+></TR
+><TR
+><TD CLASS="decl"
+>module <A HREF="Control-Monad-CPS-Writer.html"
+>Control.Monad.CPS.Writer</A
hunk ./doc/html/monad-cps/doc-index.html 7
->monad-cps-0.0.2: CPS implementations of common monads. (Index)</TITLE
+>monad-cps-0.0.3: CPS implementations of common monads. (Index)</TITLE
hunk ./doc/html/monad-cps/doc-index.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/doc-index.html 70
->Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.Writer, Control.Monad.CPS.RWS, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 101
+><TD CLASS="indexentry" COLSPAN="2"
+>Cont'</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Cont.html#t%3ACont%27"
+>Control.Monad.CPS.Cont</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Cont.html#v%3ACont%27"
+>Control.Monad.CPS.Cont</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
hunk ./doc/html/monad-cps/doc-index.html 128
+>getCodensity</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Codensity.html#v%3AgetCodensity"
+>Control.Monad.CPS.Codensity</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getCont'</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Cont.html#v%3AgetCont%27"
+>Control.Monad.CPS.Cont</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getIdentity</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Identity.html#v%3AgetIdentity"
+>Control.Monad.CPS.Identity</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getMaybe'</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Maybe.html#v%3AgetMaybe%27"
+>Control.Monad.CPS.Maybe</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getRan</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Ran.html#v%3AgetRan"
+>Control.Monad.CPS.Ran</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getReader</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Reader.html#v%3AgetReader"
+>Control.Monad.CPS.Reader</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
+>getRWS</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-RWS.html#v%3AgetRWS"
+>Control.Monad.CPS.RWS</A
+></TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monad-cps/doc-index.html 190
+>getWriter</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Writer.html#v%3AgetWriter"
+>Control.Monad.CPS.Writer</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monad-cps/doc-index.html 228
->Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.Writer, Control.Monad.CPS.RWS, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 234
->Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.Writer, Control.Monad.CPS.RWS, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 251
+><TD CLASS="indexentry" COLSPAN="2"
+>Maybe'</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>1 (Type/Class)</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Maybe.html#t%3AMaybe%27"
+>Control.Monad.CPS.Maybe</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexannot"
+>2 (Data Constructor)</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Maybe.html#v%3AMaybe%27"
+>Control.Monad.CPS.Maybe</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
hunk ./doc/html/monad-cps/doc-index.html 304
->Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.Writer, Control.Monad.CPS.RWS, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 310
->Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
+>Control.Monad.CPS.Writer, Control.Monad.CPS.RWS, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/doc-index.html 392
+>runCont'</TD
+><TD CLASS="indexlinks"
+><A HREF="Control-Monad-CPS-Cont.html#v%3ArunCont%27"
+>Control.Monad.CPS.Cont</A
+>, Control.Monad.CPS</TD
+></TR
+><TR CLASS="indexrow"
+><TD CLASS="indexentry"
hunk ./doc/html/monad-cps/doc-index.html 408
->runRan</TD
+>runMaybe'</TD
hunk ./doc/html/monad-cps/doc-index.html 410
-><A HREF="Control-Monad-CPS-Ran.html#v%3ArunRan"
->Control.Monad.CPS.Ran</A
+><A HREF="Control-Monad-CPS-Maybe.html#v%3ArunMaybe%27"
+>Control.Monad.CPS.Maybe</A
hunk ./doc/html/monad-cps/doc-index.html 510
->Control.Monad.CPS.RWS, Control.Monad.CPS.Writer, Control.Monad.CPS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unCodensity</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Codensity.html#v%3AunCodensity"
->Control.Monad.CPS.Codensity</A
->, Control.Monad.CPS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unIdentity</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Identity.html#v%3AunIdentity"
->Control.Monad.CPS.Identity</A
->, Control.Monad.CPS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unReader</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Reader.html#v%3AunReader"
->Control.Monad.CPS.Reader</A
->, Control.Monad.CPS</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unRWS</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-RWS.html#v%3AunRWS"
->Control.Monad.CPS.RWS</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unWriter</TD
-><TD CLASS="indexlinks"
-><A HREF="Control-Monad-CPS-Writer.html#v%3AunWriter"
->Control.Monad.CPS.Writer</A
->, Control.Monad.CPS</TD
+>Control.Monad.CPS.Writer, Control.Monad.CPS.RWS, Control.Monad.CPS</TD
hunk ./doc/html/monad-cps/index.html 7
->monad-cps-0.0.2: CPS implementations of common monads.</TITLE
+>monad-cps-0.0.3: CPS implementations of common monads.</TITLE
hunk ./doc/html/monad-cps/index.html 22
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/index.html 37
->monad-cps-0.0.2: CPS implementations of common monads.</TD
+>monad-cps-0.0.3: CPS implementations of common monads.</TD
hunk ./doc/html/monad-cps/index.html 121
+><A HREF="Control-Monad-CPS-Maybe.html"
+>Control.Monad.CPS.Maybe</A
+></TD
+><TD
+></TD
+><TD
+></TD
+></TR
+><TR
+><TD STYLE="padding-left: 1.25em;width: 44em"
binary ./doc/html/monad-cps/monad-cps.haddock
oldhex
*0d0cface00040000000000000eae00000000000009472500000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000200000000000000050000000000
*000000000000000000000200000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000300000000000000080000000000000000000000
*0000000003000000000000000900000000000000000000000000000003000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000004000000000000000d0000000000000000
*0000000000000004000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000500000000000000160000000000000000000000000000000500000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000006000000000000001a0000000000000000
*0000000000000006000000000000001b0000000000000000000000000000000600000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000007000000000000001f0000000000
*000000000000000000000700000000000000200000000000000000000000000000000700000000
*000000210000000000000000000000000000000800000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000809000000000000000000000000000000010000000000140000
*000000000025000000000000002600000000000000270000000000000028000000000000002900
*0000000000002a000000000000002b000000000000002c000000000000002d000000000000002e
*000000000000002f00000000000000300000000000000031000000000000003200000000000000
*330000000000000034000000000000000000000000000000010000000000000002000000000000
*000304000000000000000000000000000000010000000000000002000000000000000300000000
*000000000000000000000002000000000003000000000000000400000000000000050000000000
*000006030000000000000004000000000000000500000000000000060000000000000000000000
*000000000300000000000500000000000000070000000000000008000000000000000900000000
*0000000a000000000000000b050000000000000007000000000000000800000000000000090000
*00000000000a000000000000000b00000000000000000000000000000004000000000009000000
*00000000350000000000000036000000000000000c000000000000000d000000000000000e0000
*00000000000f00000000000000100000000000000011000000000000001207000000000000000c
*000000000000000d000000000000000e000000000000000f000000000000001000000000000000
*11000000000000001200000000000000000000000000000005000000000009000000000000002a
*000000000000002b000000000000002c000000000000002d000000000000002e00000000000000
*130000000000000014000000000000001500000000000000160400000000000000140000000000
*000015000000000000001300000000000000160000000000000000000000000000000600000000
*000c000000000000002f0000000000000030000000000000003100000000000000320000000000
*000033000000000000003400000000000000170000000000000018000000000000001900000000
*0000001a000000000000001b000000000000001c06000000000000001800000000000000190000
*00000000001a000000000000001b0000000000000017000000000000001c000000000000000000
*000000000000070000000000080000000000000026000000000000002700000000000000280000
*000000000029000000000000001d000000000000001e000000000000001f000000000000002004
*000000000000001d000000000000001e000000000000001f000000000000002000000000000000
*000000000000000008000000000004000000000000002100000000000000220000000000000023
*000000000000002404000000000000002100000000000000220000000000000023000000000000
*002400000000000000000000000000000009000000000032000000000000003500000000000000
*360000000000000026000000000000002700000000000000280000000000000029000000000000
*002a000000000000002b000000000000002c000000000000002d000000000000002e0000000000
*00002f000000000000003000000000000000310000000000000032000000000000003300000000
*000000340000000000000004000000000000000500000000000000060000000000000007000000
*00000000080000000000000009000000000000000a000000000000000b000000000000000c0000
*00000000000d000000000000000e000000000000000f0000000000000010000000000000001100
*000000000000120000000000000013000000000000001400000000000000150000000000000016
*000000000000001700000000000000180000000000000019000000000000001a00000000000000
*1b000000000000001c000000000000001d000000000000001e000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000000370000000000000000000000000000000103000000000000000a00000000000000000000
*00000000000101000000000000000a000000000000000000000000000000010000000000000000
*0b0000000000000000000000000000000100000000000000000c00000000000000000000000000
*00000203000000000000000d0000000000000000000000000000000201000000000000000d0000
*000000000000000000000000000200000000000000000e00000000000000000000000000000003
*03000000000000000f0000000000000000000000000000000301000000000000000f0000000000
*000000000000000000000300000000000000001000000000000000000000000000000003000000
*000000000011000000000000000000000000000000030000000000000000120000000000000000
*000000000000000403000000000000001300000000000000000000000000000004000000000000
*000014000000000000000000000000000000040000000000000000150000000000000000000000
*000000000400000000000000001600000000000000000000000000000004000000000000000017
*000000000000000000000000000000040000000000000000180000000000000000000000000000
*00040000000000000000190000000000000000000000000000000503000000000000001a000000
*0000000000000000000000000503000000000000001b0000000000000000000000000000000500
*000000000000001c0000000000000000000000000000000500000000000000001d000000000000
*0000000000000000000603000000000000001e0000000000000000000000000000000603000000
*000000001f0000000000000000000000000000000601000000000000001f000000000000000000
*000000000000060000000000000000200000000000000000000000000000000600000000000000
*002100000000000000000000000000000006000000000000000022000000000000000000000000
*000000070300000000000000230000000000000000000000000000000701000000000000002300
*000000000000000000000000000007000000000000000024000000000000000000000000000000
*070000000000000000250000000000000000000000000000000803000000000000002600000000
*000000000000000000000008010000000000000026000000000000000000000000000000080000
*000000000000270000000000000000000000000000000800000000000000002800000000000000
*29000000000000002a03000000000000002b0000000000000029000000000000002c0000000000
*0000002d0000000000000029000000000000002c00000000000000002e00000000000000290000
*00000000002c00000000000000002f0000000000000029000000000000002c0300000000000000
*300000000000000029000000000000003100000000000000003200000000000000290000000000
*000031000000000000000033000000000000002900000000000000310000000000000000340000
*000000000029000000000000003100000000000000003500000000000000290000000000000031
*030000000000000036000000000000002900000000000000370000000000000000380000000000
*000029000000000000003700000000000000003900000000000000290000000000000037000000
*00000000003a0000000000000029000000000000003700000000000000003b0000000000000029
*000000000000003700000000000000003c00000000000000290000000000000037030000000000
*00003d0000000000000029000000000000003e00000000000000003f0000000000000029000000
*000000003e0300000000000000400000000000000041000000000000000f6d6f6e61642d637073
*2d302e302e320000000000000015436f6e74726f6c2e4d6f6e61642e4350532e52575300000000
*00000015436f6e74726f6c2e4d6f6e61642e4350532e52616e000000000000001b436f6e74726f
*6c2e4d6f6e61642e4350532e436f64656e736974790000000000000016436f6e74726f6c2e4d6f
*6e61642e4350532e436f6e740000000000000017436f6e74726f6c2e4d6f6e61642e4350532e53
*746174650000000000000018436f6e74726f6c2e4d6f6e61642e4350532e577269746572000000
*0000000018436f6e74726f6c2e4d6f6e61642e4350532e526561646572000000000000001a436f
*6e74726f6c2e4d6f6e61642e4350532e4964656e746974790000000000000011436f6e74726f6c
*2e4d6f6e61642e43505300000000000000035257530000000000000005756e5257530000000000
*00000672756e525753000000000000000352616e000000000000000672756e52616e0000000000
*000009436f64656e73697479000000000000000b756e436f64656e73697479000000000000000c
*72756e436f64656e73697479000000000000000f72756e436f64656e7369747941707000000000
*00000004436f6e74000000000000000772756e436f6e7400000000000000066964436f6e740000
*0000000000076d6170436f6e74000000000000000877697468436f6e7400000000000000057368
*696674000000000000000572657365740000000000000006537461746527000000000000000553
*74617465000000000000000872756e5374617465000000000000000972756e5374617465270000
*0000000000075772697465722700000000000000065772697465720000000000000008756e5772
*69746572000000000000000972756e577269746572000000000000000a72756e57726974657227
*00000000000000065265616465720000000000000008756e526561646572000000000000000972
*756e52656164657200000000000000084964656e74697479000000000000000a756e4964656e74
*697479000000000000000b72756e4964656e74697479000000000000000b6d746c2d312e312e30
*2e320000000000000017436f6e74726f6c2e4d6f6e61642e5257532e436c617373000000000000
*00084d6f6e6164525753000000000000001a436f6e74726f6c2e4d6f6e61642e5265616465722e
*436c617373000000000000000461736b7300000000000000056c6f63616c000000000000000361
*736b000000000000000b4d6f6e61645265616465720000000000000019436f6e74726f6c2e4d6f
*6e61642e53746174652e436c61737300000000000000046765747300000000000000066d6f6469
*667900000000000000037075740000000000000003676574000000000000000a4d6f6e61645374
*617465000000000000001a436f6e74726f6c2e4d6f6e61642e5772697465722e436c6173730000
*00000000000663656e736f7200000000000000076c697374656e73000000000000000470617373
*00000000000000066c697374656e000000000000000474656c6c000000000000000b4d6f6e6164
*5772697465720000000000000018436f6e74726f6c2e4d6f6e61642e436f6e742e436c61737300
*0000000000000663616c6c434300000000000000094d6f6e6164436f6e74
newhex
*0d0cface0004000000000000110d0000000000000ade2d00000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000200000000
*000000070000000000000000000000000000000200000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000003000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000500000000000000120000000000
*000000000000000000000500000000000000130000000000000000000000000000000500000000
*000000140000000000000000000000000000000500000000000000150000000000000000000000
*000000000600000000000000160000000000000000000000000000000600000000000000170000
*000000000000000000000000000600000000000000180000000000000000000000000000000600
*0000000000001900000000000000000000000000000007000000000000001a0000000000000000
*0000000000000007000000000000001b0000000000000000000000000000000700000000000000
*1c00000000000000000000000000000007000000000000001d0000000000000000000000000000
*0007000000000000001e00000000000000000000000000000008000000000000001f0000000000
*000000000000000000000800000000000000200000000000000000000000000000000800000000
*000000210000000000000000000000000000000800000000000000220000000000000000000000
*000000000800000000000000230000000000000000000000000000000800000000000000240000
*000000000000000000000000000800000000000000250000000000000000000000000000000800
*000000000000260000000000000000000000000000000800000000000000270000000000000000
*000000000000000800000000000000280000000000000000000000000000000800000000000000
*2900000000000000000000000000000009000000000000002a0000000000000000000000000000
*0009000000000000002b00000000000000000000000000000009000000000000002c0000000000
*00000000000000000000090a0000000000000000000000000000000100000000000c0000000000
*00002d000000000000002e000000000000002f0000000000000030000000000000003100000000
*000000320000000000000000000000000000000100000000000000020000000000000003000000
*000000000400000000000000050600000000000000010000000000000002000000000000000300
*000000000000040000000000000000000000000000000500000000000000000000000000000002
*000000000014000000000000003300000000000000340000000000000035000000000000003600
*0000000000003700000000000000380000000000000039000000000000003a000000000000003b
*000000000000003c000000000000002d000000000000002e000000000000002f00000000000000
*300000000000000031000000000000003200000000000000060000000000000007000000000000
*000800000000000000090400000000000000060000000000000007000000000000000800000000
*000000090000000000000000000000000000000300000000000800000000000000340000000000
*00003500000000000000360000000000000037000000000000000a000000000000000b00000000
*0000000c000000000000000d04000000000000000a000000000000000b000000000000000c0000
*00000000000d00000000000000000000000000000004000000000003000000000000000e000000
*000000000f000000000000001003000000000000000e000000000000000f000000000000001000
*000000000000000000000000000005000000000004000000000000001100000000000000120000
*000000000013000000000000001404000000000000001100000000000000120000000000000013
*000000000000001400000000000000000000000000000006000000000004000000000000001500
*000000000000160000000000000017000000000000001804000000000000001500000000000000
*160000000000000017000000000000001800000000000000000000000000000007000000000005
*0000000000000019000000000000001a000000000000001b000000000000001c00000000000000
*1d050000000000000019000000000000001a000000000000001b000000000000001c0000000000
*00001d0000000000000000000000000000000800000000000d000000000000003d000000000000
*003e000000000000001e000000000000001f000000000000002000000000000000210000000000
*000022000000000000002300000000000000240000000000000025000000000000002600000000
*0000002700000000000000280b0000000000000021000000000000002200000000000000230000
*000000000024000000000000002500000000000000260000000000000027000000000000001e00
*0000000000001f0000000000000020000000000000002800000000000000000000000000000009
*00000000000900000000000000380000000000000039000000000000003a000000000000003b00
*0000000000003c0000000000000029000000000000002a000000000000002b000000000000002c
*04000000000000002a000000000000002b0000000000000029000000000000002c000000000000
*0000000000000000000a00000000003a000000000000003d000000000000003e00000000000000
*340000000000000035000000000000003600000000000000370000000000000038000000000000
*0039000000000000003a000000000000003b000000000000003c000000000000002d0000000000
*00002e000000000000002f00000000000000300000000000000031000000000000003200000000
*000000000000000000000001000000000000000200000000000000030000000000000004000000
*0000000005000000000000000a000000000000000b000000000000000c000000000000000d0000
*00000000000e000000000000000f00000000000000100000000000000011000000000000001200
*000000000000130000000000000014000000000000001500000000000000160000000000000017
*00000000000000180000000000000019000000000000001a000000000000001b00000000000000
*1c000000000000001d000000000000001e000000000000001f0000000000000020000000000000
*002100000000000000220000000000000023000000000000002400000000000000250000000000
*000026000000000000002700000000000000280000000000000029000000000000002a00000000
*0000002b000000000000002c00000000000000003f000000000000000000000000000000010300
*0000000000000b0000000000000000000000000000000103000000000000000c00000000000000
*00000000000000000101000000000000000c000000000000000000000000000000010000000000
*0000000d0000000000000000000000000000000100000000000000000e00000000000000000000
*00000000000100000000000000000f000000000000000000000000000000020300000000000000
*100000000000000000000000000000000201000000000000001000000000000000000000000000
*000002000000000000000011000000000000000000000000000000020000000000000000120000
*000000000000000000000000000303000000000000001300000000000000000000000000000003
*010000000000000013000000000000000000000000000000030000000000000000140000000000
*000000000000000000000300000000000000001500000000000000000000000000000004030000
*000000000016000000000000000000000000000000040100000000000000160000000000000000
*000000000000000400000000000000001700000000000000000000000000000005030000000000
*000018000000000000000000000000000000050100000000000000180000000000000000000000
*00000000050000000000000000190000000000000000000000000000000500000000000000001a
*0000000000000000000000000000000603000000000000001b0000000000000000000000000000
*000601000000000000001b0000000000000000000000000000000600000000000000001c000000
*0000000000000000000000000600000000000000001d0000000000000000000000000000000703
*000000000000001e0000000000000000000000000000000701000000000000001e000000000000
*0000000000000000000700000000000000001f0000000000000000000000000000000700000000
*000000002000000000000000000000000000000007000000000000000021000000000000000000
*000000000000080300000000000000220000000000000000000000000000000801000000000000
*002200000000000000000000000000000008000000000000000023000000000000000000000000
*000000080300000000000000240000000000000000000000000000000800000000000000002500
*000000000000000000000000000008000000000000000026000000000000000000000000000000
*080000000000000000270000000000000000000000000000000800000000000000002800000000
*000000000000000000000008000000000000000029000000000000000000000000000000080000
*0000000000002a0000000000000000000000000000000800000000000000002b00000000000000
*00000000000000000903000000000000002c000000000000000000000000000000090300000000
*0000002d0000000000000000000000000000000900000000000000002e00000000000000000000
*00000000000900000000000000002f000000000000003000000000000000310000000000000000
*320000000000000030000000000000003100000000000000003300000000000000300000000000
*000031000000000000000034000000000000003000000000000000310000000000000000350000
*000000000030000000000000003100000000000000003600000000000000300000000000000031
*030000000000000037000000000000003000000000000000380300000000000000390000000000
*000030000000000000003a00000000000000003b0000000000000030000000000000003a000000
*00000000003c0000000000000030000000000000003a00000000000000003d0000000000000030
*000000000000003a03000000000000003e0000000000000030000000000000003f000000000000
*0000400000000000000030000000000000003f0000000000000000410000000000000030000000
*000000003f0000000000000000420000000000000030000000000000003f000000000000000043
*0000000000000030000000000000003f0300000000000000440000000000000030000000000000
*004500000000000000004600000000000000300000000000000045030000000000000047000000
*0000000048000000000000000f6d6f6e61642d6370732d302e302e330000000000000018436f6e
*74726f6c2e4d6f6e61642e4350532e5772697465720000000000000015436f6e74726f6c2e4d6f
*6e61642e4350532e5257530000000000000018436f6e74726f6c2e4d6f6e61642e4350532e5265
*616465720000000000000015436f6e74726f6c2e4d6f6e61642e4350532e52616e000000000000
*0017436f6e74726f6c2e4d6f6e61642e4350532e4d61796265000000000000001a436f6e74726f
*6c2e4d6f6e61642e4350532e4964656e74697479000000000000001b436f6e74726f6c2e4d6f6e
*61642e4350532e436f64656e736974790000000000000016436f6e74726f6c2e4d6f6e61642e43
*50532e436f6e740000000000000017436f6e74726f6c2e4d6f6e61642e4350532e537461746500
*00000000000011436f6e74726f6c2e4d6f6e61642e435053000000000000000757726974657227
*000000000000000657726974657200000000000000096765745772697465720000000000000009
*72756e577269746572000000000000000a72756e57726974657227000000000000000352575300
*00000000000006676574525753000000000000000672756e525753000000000000000652656164
*65720000000000000009676574526561646572000000000000000972756e526561646572000000
*000000000352616e000000000000000667657452616e00000000000000064d6179626527000000
*00000000096765744d6179626527000000000000000972756e4d61796265270000000000000008
*4964656e74697479000000000000000b6765744964656e74697479000000000000000b72756e49
*64656e746974790000000000000009436f64656e73697479000000000000000c676574436f6465
*6e73697479000000000000000c72756e436f64656e73697479000000000000000f72756e436f64
*656e736974794170700000000000000005436f6e74270000000000000008676574436f6e742700
*00000000000004436f6e74000000000000000772756e436f6e7400000000000000066964436f6e
*7400000000000000076d6170436f6e74000000000000000877697468436f6e7400000000000000
*05736869667400000000000000057265736574000000000000000872756e436f6e742700000000
*0000000653746174652700000000000000055374617465000000000000000872756e5374617465
*000000000000000972756e537461746527000000000000000b6d746c2d312e312e302e32000000
*000000001a436f6e74726f6c2e4d6f6e61642e5772697465722e436c6173730000000000000006
*63656e736f7200000000000000076c697374656e73000000000000000470617373000000000000
*00066c697374656e000000000000000474656c6c000000000000000b4d6f6e6164577269746572
*0000000000000017436f6e74726f6c2e4d6f6e61642e5257532e436c6173730000000000000008
*4d6f6e6164525753000000000000001a436f6e74726f6c2e4d6f6e61642e5265616465722e436c
*617373000000000000000461736b7300000000000000056c6f63616c000000000000000361736b
*000000000000000b4d6f6e61645265616465720000000000000019436f6e74726f6c2e4d6f6e61
*642e53746174652e436c61737300000000000000046765747300000000000000066d6f64696679
*00000000000000037075740000000000000003676574000000000000000a4d6f6e616453746174
*650000000000000018436f6e74726f6c2e4d6f6e61642e436f6e742e436c617373000000000000
*000663616c6c434300000000000000094d6f6e6164436f6e74
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Codensity.html 10
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Codensity</span><span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span><span class='hs-layout'>,</span> <span class='hs-varid'>unCodensity</span><span class='hs-layout'>)</span>
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Codensity</span><span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span><span class='hs-layout'>,</span> <span class='hs-varid'>getCodensity</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Codensity.html 18
-<a name="line-10"></a><a name="Codensity"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-10"></a><a name="Codensity"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Codensity</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getCodensity</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Codensity.html 29
-<a name="line-21"></a>    <span class='hs-conid'>Codensity</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-conid'>Codensity</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Cont.html 17
-<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
-<a name="line-10"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-11"></a>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
-<a name="line-14"></a>
-<a name="line-15"></a><a name="Cont"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>{</span><span class='hs-varid'>unCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>}</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>  <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Cont'</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>..</span><span class='hs-layout'>)</span>
+<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runCont'</span>
+<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
+<a name="line-12"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-13"></a>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
+<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Unsafe</span><span class='hs-varop'>.</span><span class='hs-conid'>Coerce</span>
+<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span><span class='hs-varop'>.</span><span class='hs-conid'>Class</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Cont.html 28
-<a name="line-20"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>  <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>  <span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><a name="runCont"></a><span class='hs-definition'>runCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
-<a name="line-25"></a><span class='hs-definition'>runCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>g</span> <span class='hs-varid'>id</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="idCont"></a><span class='hs-definition'>idCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-28"></a><span class='hs-definition'>idCont</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>runCont</span> <span class='hs-varid'>id</span>
-<a name="line-29"></a>
-<a name="line-30"></a><a name="mapCont"></a><span class='hs-definition'>mapCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
-<a name="line-31"></a><span class='hs-definition'>mapCont</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-32"></a><span class='hs-comment'>-- mapCont f (Cont g) = Cont (\k z -&gt; g k (z . f))</span>
-<a name="line-33"></a>
-<a name="line-34"></a><a name="withCont"></a><span class='hs-definition'>withCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>b</span>
-<a name="line-35"></a><span class='hs-definition'>withCont</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-36"></a><span class='hs-comment'>-- withCont f (Cont g) = Cont (\k -&gt; g (f k))</span>
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-varid'>callCC</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
-<a name="line-40"></a>
-<a name="line-41"></a><a name="shift"></a><span class='hs-definition'>shift</span>  <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
-<a name="line-42"></a><span class='hs-definition'>shift</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varop'>.</span> <span class='hs-varid'>e</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>
-<a name="line-44"></a><a name="reset"></a><span class='hs-definition'>reset</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
-<a name="line-45"></a><span class='hs-definition'>reset</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>z</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>runCont</span> <span class='hs-varid'>m</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-20"></a><a name="Cont"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>{</span><span class='hs-varid'>getCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>}</span>
+<a name="line-21"></a>
+<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-23"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>
+<a name="line-25"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-26"></a>    <span class='hs-varid'>pure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
+<a name="line-27"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>&lt;*&gt;</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>ap</span>
+<a name="line-28"></a>
+<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-30"></a>    <span class='hs-varid'>return</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>z</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-31"></a>    <span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-32"></a>
+<a name="line-33"></a><a name="runCont"></a><span class='hs-definition'>runCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
+<a name="line-34"></a><span class='hs-definition'>runCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>g</span> <span class='hs-varid'>id</span>
+<a name="line-35"></a>
+<a name="line-36"></a><a name="idCont"></a><span class='hs-definition'>idCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
+<a name="line-37"></a><span class='hs-definition'>idCont</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>runCont</span> <span class='hs-varid'>id</span>
+<a name="line-38"></a>
+<a name="line-39"></a><a name="mapCont"></a><span class='hs-definition'>mapCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
+<a name="line-40"></a><span class='hs-definition'>mapCont</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-41"></a><span class='hs-comment'>-- mapCont f (Cont g) = Cont (\k z -&gt; g k (z . f))</span>
+<a name="line-42"></a>
+<a name="line-43"></a><a name="withCont"></a><span class='hs-definition'>withCont</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>b</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>b</span>
+<a name="line-44"></a><span class='hs-definition'>withCont</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
+<a name="line-45"></a><span class='hs-comment'>-- withCont f (Cont g) = Cont (\k -&gt; g (f k))</span>
+<a name="line-46"></a>
+<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-48"></a>    <span class='hs-varid'>callCC</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span>
+<a name="line-49"></a>
+<a name="line-50"></a><a name="shift"></a><span class='hs-definition'>shift</span>  <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>s</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
+<a name="line-51"></a><span class='hs-definition'>shift</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCont</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>e</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>h</span> <span class='hs-varop'>.</span> <span class='hs-varid'>e</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span>
+<a name="line-52"></a>
+<a name="line-53"></a><a name="reset"></a><span class='hs-definition'>reset</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span>
+<a name="line-54"></a><span class='hs-definition'>reset</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>z</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>z</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>runCont</span> <span class='hs-varid'>m</span> <span class='hs-varid'>id</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-55"></a>
+<a name="line-56"></a><a name="Cont'"></a><span class='hs-comment'>-- traditional Cont derived as a codensity monad showing why the above is unnecessary</span>
+<a name="line-57"></a><a name="Cont'"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Cont'</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Cont'</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getCont'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
+<a name="line-58"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>)</span>
+<a name="line-59"></a>
+<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>MonadCont</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont'</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-61"></a>     <span class='hs-varid'>callCC</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span>  <span class='hs-conid'>Cont'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getCodensity</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCont'</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Cont'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-keyword'>_</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Const</span> <span class='hs-layout'>(</span><span class='hs-varid'>getConst</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-62"></a>
+<a name="line-63"></a><a name="runCont'"></a><span class='hs-definition'>runCont'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Cont'</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
+<a name="line-64"></a><span class='hs-definition'>runCont'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont'</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getConst</span> <span class='hs-layout'>(</span><span class='hs-varid'>getCodensity</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varop'>.</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Identity.html 10
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>(</span><span class='hs-conid'>Identity</span><span class='hs-layout'>,</span> <span class='hs-varid'>unIdentity</span><span class='hs-layout'>)</span>
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Identity</span><span class='hs-layout'>(</span><span class='hs-conid'>Identity</span><span class='hs-layout'>,</span> <span class='hs-varid'>getIdentity</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Identity.html 17
-<a name="line-9"></a><a name="Identity"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>{</span><span class='hs-varid'>unIdentity</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>}</span>
+<a name="line-9"></a><a name="Identity"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Identity</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>{</span><span class='hs-varid'>getIdentity</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Identity.html 29
-<a name="line-21"></a>    <span class='hs-conid'>Identity</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-21"></a>    <span class='hs-conid'>Identity</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Identity</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getIdentity</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-RWS.html 11
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>RWS</span><span class='hs-layout'>(</span><span class='hs-conid'>RWS</span><span class='hs-layout'>,</span><span class='hs-varid'>unRWS</span><span class='hs-layout'>)</span>
+<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>RWS</span><span class='hs-layout'>(</span><span class='hs-conid'>RWS</span><span class='hs-layout'>,</span><span class='hs-varid'>getRWS</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-RWS.html 21
-<a name="line-13"></a><a name="RWS"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unRWS</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-13"></a><a name="RWS"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRWS</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-RWS.html 32
-<a name="line-24"></a>    <span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unRWS</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-varid'>w'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-24"></a>    <span class='hs-conid'>RWS</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RWS</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRWS</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>b</span> <span class='hs-varid'>w'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>b</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Ran.html 10
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Ran</span><span class='hs-layout'>(</span><span class='hs-conid'>Ran</span><span class='hs-layout'>,</span><span class='hs-varid'>runRan</span><span class='hs-layout'>)</span>
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-conid'>Ran</span><span class='hs-layout'>(</span><span class='hs-conid'>Ran</span><span class='hs-layout'>,</span><span class='hs-varid'>getRan</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Ran.html 13
-<a name="line-5"></a><a name="Ran"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varid'>h</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
+<a name="line-5"></a><a name="Ran"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Ran</span> <span class='hs-varid'>g</span> <span class='hs-varid'>h</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRan</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>b</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varid'>b</span> <span class='hs-layout'>}</span> 
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Ran.html 16
-<a name="line-8"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>runRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-8"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Ran</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getRan</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Reader.html 11
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reader</span><span class='hs-layout'>(</span><span class='hs-conid'>Reader</span><span class='hs-layout'>,</span> <span class='hs-varid'>unReader</span><span class='hs-layout'>)</span>
+<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reader</span><span class='hs-layout'>(</span><span class='hs-conid'>Reader</span><span class='hs-layout'>,</span> <span class='hs-varid'>getReader</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Reader.html 19
-<a name="line-11"></a><a name="Reader"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Reader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unReader</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-11"></a><a name="Reader"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Reader</span> <span class='hs-varid'>r</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getReader</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Reader.html 26
-<a name="line-18"></a>    <span class='hs-conid'>Reader</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
+<a name="line-18"></a>    <span class='hs-conid'>Reader</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Reader</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getReader</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-State.html 23
-<a name="line-15"></a><a name="State"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unState</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-15"></a><a name="State"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getState</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-State.html 34
-<a name="line-26"></a>  <span class='hs-conid'>State</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unState</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-26"></a>  <span class='hs-conid'>State</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getState</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-State.html 43
-<a name="line-35"></a><a name="State'"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>State'</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State'</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unState'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span>
+<a name="line-35"></a><a name="State'"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>State'</span> <span class='hs-varid'>s</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>State'</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getState'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Codensity</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-keyglyph'>-&gt;</span><span class='hs-layout'>)</span><span class='hs-varid'>s</span><span class='hs-layout'>)</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-State.html 51
-<a name="line-43"></a><span class='hs-definition'>runState'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>unCodensity</span> <span class='hs-conid'>(,)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unState'</span>
+<a name="line-43"></a><span class='hs-definition'>runState'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>getCodensity</span> <span class='hs-conid'>(,)</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getState'</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Writer.html 12
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Writer</span><span class='hs-layout'>(</span><span class='hs-conid'>Writer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unWriter</span><span class='hs-layout'>)</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Writer</span><span class='hs-layout'>(</span><span class='hs-conid'>Writer</span><span class='hs-layout'>,</span> <span class='hs-varid'>getWriter</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Writer.html 24
-<a name="line-16"></a><a name="Writer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unWriter</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-16"></a><a name="Writer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getWriter</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Writer.html 35
-<a name="line-27"></a>    <span class='hs-conid'>Writer</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unWriter</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-27"></a>    <span class='hs-conid'>Writer</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getWriter</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-varid'>w'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>w'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Writer.html 46
-<a name="line-38"></a><a name="Writer'"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Writer'</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer'</span> <span class='hs-layout'>{</span> <span class='hs-varid'>unWriter'</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
+<a name="line-38"></a><a name="Writer'"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Writer'</span> <span class='hs-varid'>w</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer'</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getWriter'</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyword'>forall</span> <span class='hs-varid'>o</span><span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>w</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>o</span> <span class='hs-layout'>}</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS-Writer.html 57
-<a name="line-49"></a>  <span class='hs-conid'>Writer'</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>unWriter'</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
+<a name="line-49"></a>  <span class='hs-conid'>Writer'</span> <span class='hs-varid'>g</span> <span class='hs-varop'>&gt;&gt;=</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Writer'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>k</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>getWriter'</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
hunk ./doc/html/monad-cps/src/Control-Monad-CPS.html 10
-<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span>
-<a name="line-9"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-10"></a>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span>
+<a name="line-2"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
+<a name="line-3"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
+<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
+<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span>
+<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span>
+<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
+<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span>
+<a name="line-9"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
+<a name="line-10"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
+<a name="line-11"></a>
+<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Codensity</span>
+<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
+<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
+<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span>
+<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Ran</span>
+<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
+<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span>
+<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>CPS</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span>
}
