
New patches:

[unrevert
anonymous**20090329063138] 
<
> {
adddir ./Data/Monoid/Monad
adddir ./Data/Monoid/Monad/RWS
adddir ./Data/Monoid/Monad/Writer
addfile ./Data/Monoid/Monad/Cont.hs
hunk ./Data/Monoid/Monad/Cont.hs 1
-
+
rmfile ./Data/Monoid/Monad/Cont.hs
addfile ./Data/Monoid/Monad/Error.hs
hunk ./Data/Monoid/Monad/Error.hs 1
-
+
rmfile ./Data/Monoid/Monad/Error.hs
addfile ./Data/Monoid/Monad/IO.hs
hunk ./Data/Monoid/Monad/IO.hs 1
-
+
rmfile ./Data/Monoid/Monad/IO.hs
addfile ./Data/Monoid/Monad/RWS/Lazy.hs
hunk ./Data/Monoid/Monad/RWS/Lazy.hs 1
-
+
rmfile ./Data/Monoid/Monad/RWS/Lazy.hs
addfile ./Data/Monoid/Monad/RWS/Strict.hs
hunk ./Data/Monoid/Monad/RWS/Strict.hs 1
-
+
rmfile ./Data/Monoid/Monad/RWS/Strict.hs
rmdir ./Data/Monoid/Monad/RWS
addfile ./Data/Monoid/Monad/Writer/Lazy.hs
hunk ./Data/Monoid/Monad/Writer/Lazy.hs 1
-
+
rmfile ./Data/Monoid/Monad/Writer/Lazy.hs
addfile ./Data/Monoid/Monad/Writer/Strict.hs
hunk ./Data/Monoid/Monad/Writer/Strict.hs 1
-
+
rmfile ./Data/Monoid/Monad/Writer/Strict.hs
rmdir ./Data/Monoid/Monad/Writer
rmdir ./Data/Monoid/Monad
hunk ./dist/doc/html/monoids/Data-Group-Combinators.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Group.Combinators</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Group-Combinators.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Group.Combinators</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Utilities for working with Groups that conflict with names from the <A HREF="Prelude.html"
->Prelude</A
->.
-</P
-><P
->Intended to be imported qualified.
-</P
-><PRE
-> import Data.Group.Combinators as Group (replicate)
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Group.html"
->Data.Group</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areplicate"
-></A
-><B
->replicate</B
-> :: (<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n) =&gt; m -&gt; n -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group-Combinators.html#replicate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Group-Combinators.html
hunk ./dist/doc/html/monoids/Data-Group-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Group.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Group-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Group.Sugar</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Syntactic sugar for working with groups that conflicts with names from the <A HREF="Prelude.html"
->Prelude</A
->.
-</P
-><PRE
-> import Prelude hiding ((-), (+), negate, subtract)
- import Data.Group.Sugar
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Group.html"
->Data.Group</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A-"
-></A
-><B
->(-)</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> g =&gt; g -&gt; g -&gt; g</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group-Sugar.html#-"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Anegate"
-></A
-><B
->negate</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> g =&gt; g -&gt; g</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group-Sugar.html#negate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asubtract"
-></A
-><B
->subtract</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> g =&gt; g -&gt; g -&gt; g</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group-Sugar.html#subtract"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Group-Sugar.html
hunk ./dist/doc/html/monoids/Data-Group.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Group</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Group.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Group</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->Edward Kmett &lt;ekmett@gmail.com&gt;</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->Extends <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> to support <TT
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-></TT
-> operations
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a =&gt; <A HREF="#t%3AGroup"
->Group</A
-> a  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Agnegate"
->gnegate</A
-> :: a -&gt; a</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aminus"
->minus</A
-> :: a -&gt; a -&gt; a</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Agsubtract"
->gsubtract</A
-> :: a -&gt; a -&gt; a</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Agnegate"
->gnegate</A
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Agsubtract"
->gsubtract</A
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a -&gt; a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aminus"
->minus</A
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a -&gt; a</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a =&gt; <A NAME="t%3AGroup"
-></A
-><B
->Group</B
-> a  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#Group"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->Minimal complete definition: <TT
-><A HREF="Data-Group.html#v%3Agnegate"
->gnegate</A
-></TT
-> or <TT
-><A HREF="Data-Group.html#v%3Aminus"
->minus</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Agnegate"
-></A
-><B
->gnegate</B
-> :: a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#gnegate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aminus"
-></A
-><B
->minus</B
-> :: a -&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#minus"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Agsubtract"
-></A
-><B
->gsubtract</B
-> :: a -&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#gsubtract"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Group')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Group" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
->Dual</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ASum"
->Sum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AFractional"
->Fractional</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AProduct"
->Product</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m) =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Agnegate"
-></A
-><B
->gnegate</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#gnegate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Agsubtract"
-></A
-><B
->gsubtract</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#gsubtract"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aminus"
-></A
-><B
->minus</B
-> :: <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; a -&gt; a -&gt; a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Group.html#minus"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Group.html
hunk ./dist/doc/html/monoids/Data-Monoid-Additive-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Additive.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Additive-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Additive.Sugar</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Syntactic sugar for working with a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> that conflicts with names from the <A HREF="Prelude.html"
->Prelude</A
->.
-</P
-><PRE
-> import Prelude hiding ((+))
- import Data.Monoid.Additive.Sugar
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A%2B"
-></A
-><B
->(+)</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Additive-Sugar.html#%2B"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Additive-Sugar.html
hunk ./dist/doc/html/monoids/Data-Monoid-Additive.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Additive</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Additive.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Additive</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->More easily understood aliases for <A HREF="mappend.html"
->mappend</A
-> and <A HREF="mempty.html"
->mempty</A
-> 
-</P
-><PRE
-> import Data.Monoid.Additive
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aplus"
-></A
-><B
->plus</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Additive.html#plus"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Azero"
-></A
-><B
->zero</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Additive.html#zero"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Additive.html
hunk ./dist/doc/html/monoids/Data-Monoid-Applicative.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Applicative</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Applicative.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Applicative</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->Monoids for working with an <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-></TT
->.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Module.html"
->Data.Ring.Module</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3ATraversal"
->Traversal</A
-> f = <A HREF="#v%3ATraversal"
->Traversal</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetTraversal"
->getTraversal</A
-> :: f ()</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a = <A HREF="#v%3AWrappedApplicative"
->WrappedApplicative</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetWrappedApplicative"
->getWrappedApplicative</A
-> :: f a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3ATraversalWith"
->TraversalWith</A
-> f m = <A HREF="#v%3ATraversalWith"
->TraversalWith</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetTraversalWith"
->getTraversalWith</A
-> :: f m</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AsnocTraversal"
->snocTraversal</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f ()) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f) =&gt; <A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f -&gt; f () -&gt; <A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Module.html"
->Data.Ring.Module</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ATraversal"
-></A
-><B
->Traversal</B
-> f </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#Traversal"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
->Traversal</A
-></TT
-> uses an glues together <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-></TT
-> actions with (*&gt;)
-   in the manner of traverse_ from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->. Any values returned by 
-   reduced actions are discarded.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ATraversal"
-></A
-><B
->Traversal</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetTraversal"
-></A
-><B
->getTraversal</B
-> :: f ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Traversal')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Traversal" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AWrappedApplicative"
-></A
-><B
->WrappedApplicative</B
-> f a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#WrappedApplicative"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Applicative.html#v%3AWrappedApplicative"
->WrappedApplicative</A
-></TT
-> turns any <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-></TT
-> instance into a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->.
-   It also provides a <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> instance for an <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-></TT
-> functor wrapped around a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-   and asserts that any <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-></TT
-> applied to a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> forms a <TT
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-></TT
-> 
-   under these operations.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AWrappedApplicative"
-></A
-><B
->WrappedApplicative</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetWrappedApplicative"
-></A
-><B
->getWrappedApplicative</B
-> :: f a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WrappedApplicative')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:WrappedApplicative" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed f =&gt; Pointed (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed f =&gt; Copointed (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (f a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ATraversalWith"
-></A
-><B
->TraversalWith</B
-> f m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#TraversalWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->if <TT
->m</TT
-> is a <TT
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-></TT
-> and <TT
->f</TT
-> is a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-></TT
-> then <TT
->f <TT
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversalWith"
->TraversalWith</A
-></TT
-> m</TT
-> is a <TT
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-></TT
-> as well
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ATraversalWith"
-></A
-><B
->TraversalWith</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetTraversalWith"
-></A
-><B
->getTraversalWith</B
-> :: f m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:TraversalWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:TraversalWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed f =&gt; Pointed (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed f =&gt; Copointed (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsnocTraversal"
-></A
-><B
->snocTraversal</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f ()) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f) =&gt; <A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f -&gt; f () -&gt; <A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Applicative.html#snocTraversal"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently avoid needlessly rebinding when using <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->snoc</A
-></TT
-> on an action that already returns ()
-   A rewrite rule automatically applies this when possible
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/Data-Monoid-Categorical.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Categorical</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Categorical.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Categorical</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Generalized Endo
-</A
-></DT
-><DT
-><A HREF="#2"
->Monoids as Categories
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AGEndo"
->GEndo</A
-> k a = <A HREF="#v%3AGEndo"
->GEndo</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetGEndo"
->getGEndo</A
-> :: k a a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AMon"
->Mon</A
-> m n o <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AMon"
->Mon</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m a a</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AgetMon"
->getMon</A
-> ::  <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Generalized Endo
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AGEndo"
-></A
-><B
->GEndo</B
-> k a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Categorical.html#GEndo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> of the endomorphisms over some object in an arbitrary <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-></TT
->.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AGEndo"
-></A
-><B
->GEndo</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetGEndo"
-></A
-><B
->getGEndo</B
-> :: k a a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:GEndo')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:GEndo" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-> k =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Categorical.html#t%3AGEndo"
->GEndo</A
-> k a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Monoids as Categories
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AMon"
-></A
-><B
->Mon</B
-> m n o <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Categorical.html#Mon"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> is just a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-></TT
-> with one object. 
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMon"
-></A
-><B
->Mon</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m a a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Mon')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Mon" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-> (<A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AgetMon"
-></A
-><B
->getMon</B
-> ::  <A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Categorical.html#getMon"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Extract the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> from its representation as a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Category.html#t%3ACategory"
->Category</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Categorical.html
hunk ./dist/doc/html/monoids/Data-Monoid-Combinators.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Combinators</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Combinators.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Combinators</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (type families, MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Monadic Reduction
-</A
-></DT
-><DT
-><A HREF="#2"
->Applicative Reduction
-</A
-></DT
-><DT
-><A HREF="#3"
->Logical Reduction
-</A
-></DT
-><DT
-><A HREF="#4"
->Monoidal Reduction
-</A
-></DT
-><DT
-><A HREF="#5"
->List-Like Reduction
-</A
-></DT
-><DT
-><A HREF="#6"
->List-Like Monoid Generation
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Utilities for working with Monoids that conflict with names from the <A HREF="Prelude.html"
->Prelude</A
->,
- <A HREF="Data-Foldable.html"
->Data.Foldable</A
->, <A HREF="Control-Monad.html"
->Control.Monad</A
-> or elsewhere. Intended to be imported qualified.
-</P
-><PRE
-> import Data.Group.Combinators as Monoid 
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapM_"
->mapM_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; c -&gt; m ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AforM_"
->forM_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; m ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Atraverse_"
->traverse_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; c -&gt; f ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afor_"
->for_</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; f ()</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aand"
->and</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aor"
->or</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aany"
->any</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aall"
->all</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfoldMap"
->foldMap</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m) -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afold"
->fold</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ m) =&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AconcatMap"
->concatMap</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; [b]) -&gt; c -&gt; [b]</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aelem"
->elem</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afilter"
->filter</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Afind"
->find</A
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Asum"
->sum</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aproduct"
->product</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AnotElem"
->notElem</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Arepeat"
->repeat</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; e -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Areplicate"
->replicate</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n) =&gt; m -&gt; n -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Acycle"
->cycle</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Monadic Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapM_"
-></A
-><B
->mapM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; c -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#mapM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Monad.html#v%3AAction"
->Action</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
-> and <A HREF="Control-Monad.html"
->Control.Monad</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AforM_"
-></A
-><B
->forM_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m b) -&gt; m ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#forM_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->flipped <TT
-><A HREF="Data-Monoid-Combinators.html#v%3AmapM_"
->mapM_</A
-></TT
-> as in <A HREF="Data-Foldable.html"
->Data.Foldable</A
-> and <A HREF="Control-Monad.html"
->Control.Monad</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Applicative Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atraverse_"
-></A
-><B
->traverse_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; c -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#traverse_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
->Traversal</A
-></TT
-> monoid. A specialized version of its namesake in <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afor_"
-></A
-><B
->for_</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; c -&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; f b) -&gt; f ()</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#for_"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->flipped <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Atraverse_"
->traverse_</A
-></TT
-> as in <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->Logical Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aand"
-></A
-><B
->and</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#and"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> that contains values of type <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aor"
-></A
-><B
->or</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) =&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#or"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> that contains values of type <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aany"
-></A
-><B
->any</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#any"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> checking to see if any of its values match the supplied predicate
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aall"
-></A
-><B
->all</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#all"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> checking to see if all of its values match the supplied predicate
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="4"
->Monoidal Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldMap"
-></A
-><B
->foldMap</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; m) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#foldMap"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Self.html#v%3ASelf"
->Self</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afold"
-></A
-><B
->fold</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ m) =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#fold"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-> a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Self.html#v%3ASelf"
->Self</A
-></TT
-> monoid. A specialized version of its namesake from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="5"
->List-Like Reduction
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AconcatMap"
-></A
-><B
->concatMap</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; [b]) -&gt; c -&gt; [b]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#concatMap"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->A further specialization of <A HREF="foldMap.html"
->foldMap</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aelem"
-></A
-><B
->elem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Check to see if <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Aany"
->any</A
-></TT
-> member of the <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> matches the supplied value
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afilter"
-></A
-><B
->filter</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#filter"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> a subset of the elements in a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Afind"
-></A
-><B
->find</B
-> :: <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
->) -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#find"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->A specialization of <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Afilter"
->filter</A
-></TT
-> using the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AFirst"
->First</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->, analogous to Data.List.find
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asum"
-></A
-><B
->sum</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#sum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3ASum"
->Sum</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aproduct"
-></A
-><B
->product</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; c -&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#product"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> any <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> using the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3AProduct"
->Product</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AnotElem"
-></A
-><B
->notElem</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c)) =&gt; <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; c -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#notElem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Check to make sure that the supplied value is not a member of the <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="6"
->List-Like Monoid Generation
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Arepeat"
-></A
-><B
->repeat</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; e -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#repeat"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->A generalization of Data.List.repeat to an arbitrary <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->. May fail to terminate for some values in some monoids.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areplicate"
-></A
-><B
->replicate</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n) =&gt; m -&gt; n -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#replicate"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->A generalization of Data.List.replicate to an arbitrary <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->. Adapted from 
- <A HREF="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html"
->http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</A
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acycle"
-></A
-><B
->cycle</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Combinators.html#cycle"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->A generalization of Data.List.cycle to an arbitrary <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->. May fail to terminate for some values in some monoids.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Combinators.html
hunk ./dist/doc/html/monoids/Data-Monoid-FromString.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.FromString</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-FromString.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.FromString</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (overloaded strings, MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->Transform any <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> into an <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-></TT
-> instance so it can be
- used directly with overloaded string literals.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AFromString"
-></A
-><B
->FromString</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-FromString.html#FromString"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AFromString"
-></A
-><B
->FromString</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetFromString"
-></A
-><B
->getFromString</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:FromString')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:FromString" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-FromString.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator-LZ78.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator.LZ78</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator-LZ78.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator.LZ78</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ALZ78"
-></A
-><B
->LZ78</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-LZ78.html#LZ78"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ALZ78"
-></A
-><B
->LZ78</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetLZ78"
-></A
-><B
->getLZ78</B
-> :: [(<A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
->, a)]</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:LZ78')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:LZ78" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator-LZ78.html#t%3ALZ78"
->LZ78</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Adecode"
-></A
-><B
->decode</B
-> ::  <A HREF="Data-Monoid-Generator-LZ78.html#t%3ALZ78"
->LZ78</A
-> a -&gt; [a]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-LZ78.html#decode"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aencode"
-></A
-><B
->encode</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; [a] -&gt; <A HREF="Data-Monoid-Generator-LZ78.html#t%3ALZ78"
->LZ78</A
-> a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator-LZ78.html#encode"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Generator-LZ78.html
hunk ./dist/doc/html/monoids/Data-Monoid-Generator.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Generator</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Generator.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Generator</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->A <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> <TT
->c</TT
-> is a possibly-specialized container, which contains values of 
- type <TT
-><A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-></TT
-> <TT
->c</TT
->, and which knows how to efficiently apply a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> to extract
- an answer.
-</P
-><P
->Since a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> is not polymorphic in its contents, it is more specialized
- than <A HREF="Data-Foldable-Foldable.html"
->Data.Foldable.Foldable</A
->, and a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> may supply efficient left-to-right
- and right-to-left reduction strategies that a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> may avail itself of.
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A HREF="#t%3AGenerator"
->Generator</A
-> c  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A HREF="#t%3AElem"
->Elem</A
-> c :: *</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapReduce"
->mapReduce</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapTo"
->mapTo</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapFrom"
->mapFrom</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapReduce"
->mapReduce</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapTo"
->mapTo</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AmapFrom"
->mapFrom</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Areduce"
->reduce</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AKeys"
->Keys</A
-> c = <A HREF="#v%3AKeys"
->Keys</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetKeys"
->getKeys</A
-> :: c</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AValues"
->Values</A
-> c = <A HREF="#v%3AValues"
->Values</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetValues"
->getValues</A
-> :: c</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AChar8"
->Char8</A
-> c = <A HREF="#v%3AChar8"
->Char8</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetChar8"
->getChar8</A
-> :: c</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AGenerator"
-></A
-><B
->Generator</B
-> c  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Generator"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->minimal definition <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> or <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapTo"
->mapTo</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Associated Types</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3AElem"
-></A
-><B
->Elem</B
-> c :: *</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Elem"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapReduce"
-></A
-><B
->mapReduce</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapTo"
-></A
-><B
->mapTo</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapTo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapFrom"
-></A
-><B
->mapFrom</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Generator')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Generator" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> Text</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
->Set</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
->Ix</A
-> i =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
->Array</A
-> i e))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
->Ix</A
-> i =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
->Array</A
-> i e))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator-LZ78.html#t%3ALZ78"
->LZ78</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
->Ix</A
-> i =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
->Array</A
-> i e)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Measured v e =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (FingerTree v e)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapReduce"
-></A
-><B
->mapReduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapTo"
-></A
-><B
->mapTo</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapTo"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AmapFrom"
-></A
-><B
->mapFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c -&gt; e) -&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#mapFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Areduce"
-></A
-><B
->reduce</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c) m) =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#reduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Apply a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> directly to the elements of a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AKeys"
-></A
-><B
->Keys</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Keys"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> transformer that asks only for the keys of an indexed container
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AKeys"
-></A
-><B
->Keys</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetKeys"
-></A
-><B
->getKeys</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Keys')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Keys" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
->Ix</A
-> i =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
->Array</A
-> i e))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Keys</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AValues"
-></A
-><B
->Values</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Values"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> transformer that asks only for the values contained in an indexed container
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AValues"
-></A
-><B
->Values</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetValues"
-></A
-><B
->getValues</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Values')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Values" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AIx"
->Ix</A
-> i =&gt; <A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Arr.html#t%3AArray"
->Array</A
-> i e))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v))</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AValues"
->Values</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v))</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AChar8"
-></A
-><B
->Char8</B
-> c </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Generator.html#Char8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> transformer that treats <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-></TT
-> as <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
->
- This lets you use a ByteString as a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> source without going through a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> transformer like UTF8
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AChar8"
-></A
-><B
->Char8</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetChar8"
-></A
-><B
->getChar8</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Char8')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Char8" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Lazy-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> (<A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Char8</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/bytestring/Data-ByteString-Internal.html#t%3AByteString"
->ByteString</A
->)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/Data-Monoid-Instances.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Instances</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Instances.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Instances</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->A collection of orphan instance declarations for Monoids that should
- eventually be pushed back down to the source packages.
-</P
-><P
->Every package that uses these instances includes this package internally.
-</P
-><P
->Includes:
-</P
-><UL
-><LI
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> instances for the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> transformers from the mtl package
-</LI
-><LI
-> A <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> instance for the <TT
->ParsecT</TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> from parsec-3.
-</LI
-><LI
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-></TT
-> instances for tuples of <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-></TT
-> for overloaded string support.
-</LI
-><LI
-> A <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> instance for the <TT
->FingerTree</TT
-> in the fingertree package 
-</LI
-><LI
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> instances for <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TT
->, <TT
->Integer</TT
->, and <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ratio.html#t%3ARatio"
->Ratio</A
-></TT
-> using <TT
->(+,0)</TT
->
-</LI
-></UL
-><P
->This module is automatically included everywhere this functionality is required
- within this package. You should only have to import this module yourself if you 
- want these instances for your own purposes.
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Instances.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-RunLengthEncoding.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.RunLengthEncoding</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-RunLengthEncoding.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.RunLengthEncoding</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->A simple <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> transformer that turns any monoidal <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> into a
- a reducer that expects to be supplied both a run length <TT
->n</TT
-> with each item
- and which efficiently exponentiates the result of <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->unit</A
-></TT
-> <TT
->n</TT
-> times through 
- <TT
-><A HREF="Data-Monoid-Combinators.html#v%3Areplicate"
->replicate</A
-></TT
->.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ARLE"
-></A
-><B
->RLE</B
-> n m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-RunLengthEncoding.html#RLE"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ARLE"
-></A
-><B
->RLE</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetRLE"
-></A
-><B
->getRLE</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:RLE')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:RLE" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#t%3ARLE"
->RLE</A
-> n m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) n c) (<A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#t%3ARLE"
->RLE</A
-> n m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-RunLengthEncoding.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.SourcePosition</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.SourcePosition</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs, OverloadedStrings)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Incrementally determine locations in a source file through local information
- This allows for efficient recomputation of line #s and token locations
- while the file is being interactively updated by storing this as a supplemental
- measure on a FingerTree.
-</P
-><P
->The general idea is to use this as part of a measure in a FingerTree so you can
- use <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3Amappend"
->mappend</A
-></TT
-> to prepend a <TT
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AstartOfFile"
->startOfFile</A
-></TT
-> with the file information.
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AnextTab"
->nextTab</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3ASourcePosition"
->SourcePosition</A
-> file</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A HREF="#t%3ASourceLine"
->SourceLine</A
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A HREF="#t%3ASourceColumn"
->SourceColumn</A
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AsourceLine"
->sourceLine</A
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->SourceLine</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AsourceColumn"
->sourceColumn</A
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->SourceColumn</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AstartOfFile"
->startOfFile</A
-> ::  f -&gt; <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AshowSourcePosition"
->showSourcePosition</A
-> :: <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AnextTab"
-></A
-><B
->nextTab</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#nextTab"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Compute the location of the next standard 8-column aligned tab
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ASourcePosition"
-></A
-><B
->SourcePosition</B
-> file </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> of partial information about locations in a source file.
-   This is polymorphic in the kind of information you want to maintain about each source file.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:SourcePosition')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:SourcePosition" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorZero <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->FunctorPlus <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> file =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceLine"
-></A
-><B
->SourceLine</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->type</SPAN
-> <A NAME="t%3ASourceColumn"
-></A
-><B
->SourceColumn</B
-> = <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#SourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceLine"
-></A
-><B
->sourceLine</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->SourceLine</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceLine"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->extract partial information about the current line number if possible
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsourceColumn"
-></A
-><B
->sourceColumn</B
-> ::  <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->SourceColumn</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#sourceColumn"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->extract partial information about the current column, even in the absence of knowledge of the source file
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AstartOfFile"
-></A
-><B
->startOfFile</B
-> ::  f -&gt; <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#startOfFile"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->lift information about a source file into a starting <TT
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-></TT
-> for that file
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AshowSourcePosition"
-></A
-><B
->showSourcePosition</B
-> :: <A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-> -&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Char.html#t%3AString"
->String</A
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-SourcePosition.html#showSourcePosition"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->extract the standard format for an absolute source position
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.UTF8.Decoder</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.UTF8.Decoder</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->UTF8 encoded unicode characters can be parsed both forwards and backwards,
- since the start of each <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> is clearly marked. This <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> accumulates
- information about the characters represented and reduces that information
- using a <TT
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-></TT
->, which is just a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> that knows what 
- it wants to do about an <TT
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AinvalidChar"
->invalidChar</A
-></TT
-> -- a  string of <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-></TT
-> values that 
- don't form a valid UTF8 character.
-</P
-><P
->As this monoid parses chars it just feeds them upstream to the underlying
- CharReducer. Efficient left-to-right and right-to-left traversals are 
- supplied so that a lazy ByteString can be parsed efficiently by 
- chunking it into strict chunks, and batching the traversals over each
- before stitching the edges together.
-</P
-><P
->Because this needs to be a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> and should return the exact same result
- regardless of forward or backwards parsing, it chooses to parse only 
- canonical UTF8 unlike most Haskell UTF8 parsers, which will blissfully 
- accept illegal alternative long encodings of a character. 
-</P
-><P
->This actually fixes a potential class of security issues in some scenarios:
-</P
-><P
-><A HREF="http://prowebdevelopmentblog.com/content/big-overhaul-java-utf-8-charset"
->http://prowebdevelopmentblog.com/content/big-overhaul-java-utf-8-charset</A
->
-</P
-><P
->NB: Due to naive use of a list to track the tail of an unfinished character 
- this may exhibit <TT
->O(n^2)</TT
-> behavior parsing backwards along an invalid sequence 
- of a large number of bytes that all claim to be in the tail of a character.
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUTF8"
-></A
-><B
->UTF8</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#UTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UTF8')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UTF8" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunUTF8"
-></A
-><B
->runUTF8</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-UTF8-Decoder.html#runUTF8"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Lexical.Words</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Lexical.Words</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs, OverloadedStrings)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Words
-</A
-></DT
-><DT
-><A HREF="#2"
->Lines
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->A simple demonstration of tokenizing a <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> into distinct words 
- and/or lines using a word-parsing <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> that accumulates partial 
- information about words and then builds up a token stream.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AWords"
->Words</A
-> m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3ArunWords"
->runWords</A
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m -&gt; [m]</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AUnspaced"
->Unspaced</A
-> m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AwordsFrom"
->wordsFrom</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3ALines"
->Lines</A
-> m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3ArunLines"
->runLines</A
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m -&gt; [m]</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AUnlined"
->Unlined</A
-> m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AlinesFrom"
->linesFrom</A
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Words
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AWords"
-></A
-><B
->Words</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Words"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-></TT
-> transformer that breaks a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> into distinct words, feeding a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> each line in turn
-</TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Words')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Words" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunWords"
-></A
-><B
->runWords</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runWords"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Extract the matched words from the <TT
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnspaced"
-></A
-><B
->Unspaced</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unspaced"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-></TT
-> transformer that strips out any character matched by <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Unicode.html#v%3AisSpace"
->isSpace</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unspaced')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unspaced" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AwordsFrom"
-></A
-><B
->wordsFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#wordsFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Utility function to extract words using accumulator, inside-word, and until-next-word monoids
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Lines
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALines"
-></A
-><B
->Lines</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Lines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-></TT
-> transformer that breaks a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-></TT
-> into distinct lines, feeding a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-></TT
-> <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> each line in turn.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Lines')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Lines" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ArunLines"
-></A
-><B
->runLines</B
-> ::  <A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m -&gt; [m]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#runLines"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Extract the matched lines from the <TT
-><A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AUnlined"
-></A
-><B
->Unlined</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#Unlined"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-></TT
-> transformer that strips out newlines
-</TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Unlined')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Unlined" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-String.html#t%3AIsString"
->IsString</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AlinesFrom"
-></A
-><B
->linesFrom</B
-> :: (<A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Generator</A
-> c, <A HREF="Data-Monoid-Generator.html#t%3AElem"
->Elem</A
-> c ~ <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> o) =&gt; m -&gt; c -&gt; [(m, n, o)]</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Lexical-Words.html#linesFrom"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Utility function to extract lines using accumulator, inside-line, and until-next-line monoids
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/Data-Monoid-Monad.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Monad</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Monad.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Monad</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Actions
-</A
-></DT
-><DT
-><A HREF="#2"
->Lifting Modules
-</A
-></DT
-><DT
-><A HREF="#3"
->Wrapped Monads
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> instances for working with a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AAction"
->Action</A
-> m = <A HREF="#v%3AAction"
->Action</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetAction"
->getAction</A
-> :: m ()</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AsnocAction"
->snocAction</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m ()) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m) =&gt; <A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m -&gt; m () -&gt; <A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AActionWith"
->ActionWith</A
-> f m = <A HREF="#v%3AActionWith"
->ActionWith</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetActionWith"
->getActionWith</A
-> :: f m</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AWrappedMonad"
->WrappedMonad</A
-> m a = <A HREF="#v%3AWrappedMonad"
->WrappedMonad</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetWrappedMonad"
->getWrappedMonad</A
-> :: m a</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Actions
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AAction"
-></A
-><B
->Action</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#Action"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->An <TT
-><A HREF="Data-Monoid-Monad.html#v%3AAction"
->Action</A
-></TT
-> uses glues together <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> actions with (&gt;&gt;)
-   in the manner of <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#v%3AmapM_"
->mapM_</A
-></TT
-> from <A HREF="Data-Foldable.html"
->Data.Foldable</A
->. Any values returned by 
-   reduced actions are discarded.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AAction"
-></A
-><B
->Action</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetAction"
-></A
-><B
->getAction</B
-> :: m ()</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Action')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Action" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AsnocAction"
-></A
-><B
->snocAction</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m ()) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m) =&gt; <A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m -&gt; m () -&gt; <A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#snocAction"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Efficiently avoid needlessly rebinding when using <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->snoc</A
-></TT
-> on an action that already returns ()
-   A rewrite rule automatically applies this when possible
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Lifting Modules
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AActionWith"
-></A
-><B
->ActionWith</B
-> f m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#ActionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->if <TT
->m</TT
-> is a <TT
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-></TT
-> over <TT
->r</TT
-> and <TT
->f</TT
-> is a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> then <TT
->f <TT
-><A HREF="Data-Monoid-Monad.html#v%3AActionWith"
->ActionWith</A
-></TT
-> m</TT
-> is a <TT
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-></TT
-> as well
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AActionWith"
-></A
-><B
->ActionWith</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetActionWith"
-></A
-><B
->getActionWith</B
-> :: f m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:ActionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:ActionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed f =&gt; Pointed (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->Wrapped Monads
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AWrappedMonad"
-></A
-><B
->WrappedMonad</B
-> m a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Monad.html#WrappedMonad"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Monoid-Monad.html#v%3AWrappedMonad"
->WrappedMonad</A
-></TT
-> turns any <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-></TT
-> instance into a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->.
-   It also provides a <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> instance for a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> wrapped around a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-   and asserts that any <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-></TT
-> applied to a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> forms a <TT
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-></TT
-> 
-   under these operations.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AWrappedMonad"
-></A
-><B
->WrappedMonad</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetWrappedMonad"
-></A
-><B
->getWrappedMonad</B
-> :: m a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WrappedMonad')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:WrappedMonad" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed m =&gt; Pointed (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (m a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Multiplicative.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Multiplicative-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Multiplicative.Sugar</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Syntactic sugar for working with a <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> monoids that conflicts with names from the <A HREF="Prelude.html"
->Prelude</A
->.
-</P
-><PRE
-> import Prelude hiding ((+),(*))
- import Data.Monoid.Multiplicative.Sugar
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A%2A"
-></A
-><B
->(*)</B
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> r =&gt; r -&gt; r -&gt; r</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative-Sugar.html#%2A"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Multiplicative-Sugar.html
hunk ./dist/doc/html/monoids/Data-Monoid-Multiplicative.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Multiplicative</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Multiplicative.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Multiplicative</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable (but instances use MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Multiplicative Monoids
-</A
-></DT
-><DT
-><A HREF="#2"
->Multiplicative to Monoid
-</A
-></DT
-><DT
-><A HREF="#3"
->Monoid to Multiplicative
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->When dealing with a Ring or other structure, you often need a pair of 
- <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> instances that are closely related. Making a <TT
->newtype</TT
-> for one
- is unsatisfying and yields an unnatural programming style. 
-</P
-><P
->A <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> is a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> that is intended for use in a scenario
- that can be extended to have another <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> slot in for addition. This
- enables one to use common notation.
-</P
-><P
->Any <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> can be turned into a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Multiplicative.html#v%3ALog"
->Log</A
-></TT
-> wrapper.
-</P
-><P
->Any <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> can be turned into a <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> using the <TT
-><A HREF="Data-Monoid-Multiplicative.html#v%3AExp"
->Exp</A
-></TT
-> wrapper.
-</P
-><P
->Instances are supplied for common Monads of Monoids, in a fashion 
- which can be extended if the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> is a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-></TT
-> to yield a LeftSemiNearRing
-</P
-><P
->Instances are also supplied for common Applicatives of Monoids, in a
- fashion which can be extended if the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-></TT
-> is <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-></TT
-> to
- yield a LeftSemiNearRing
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A HREF="#t%3AMultiplicative"
->Multiplicative</A
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aone"
->one</A
-> :: m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Atimes"
->times</A
-> :: m -&gt; m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aone"
->one</A
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Atimes"
->times</A
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; m -&gt; m -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3ALog"
->Log</A
-> m = <A HREF="#v%3ALog"
->Log</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetLog"
->getLog</A
-> :: m</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3AExp"
->Exp</A
-> m = <A HREF="#v%3AExp"
->Exp</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetExp"
->getExp</A
-> :: m</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Multiplicative Monoids
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AMultiplicative"
-></A
-><B
->Multiplicative</B
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#Multiplicative"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aone"
-></A
-><B
->one</B
-> :: m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#one"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atimes"
-></A
-><B
->times</B
-> :: m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#times"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Multiplicative')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Multiplicative" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> Integer</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> ([] m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ratio.html#t%3ARatio"
->Ratio</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/System-IO.html#t%3AIO"
->IO</A
-> n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AZipList"
->ZipList</A
-> n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/GHC-Conc.html#t%3ASTM"
->STM</A
-> n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Identity.html#t%3AIdentity"
->Identity</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AExp"
->Exp</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AConst"
->Const</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST-Lazy.html#t%3AST"
->ST</A
-> s n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad-ST.html#t%3AST"
->ST</A
-> s n)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3ACont"
->Cont</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriter"
->Writer</A
-> w m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriter"
->Writer</A
-> w m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AState"
->State</A
-> s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AState"
->State</A
-> s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReader"
->Reader</A
-> e m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Measured v m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (FingerTree v m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Cont.html#t%3AContT"
->ContT</A
-> r m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
->ReaderT</A
-> e m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWS"
->RWS</A
-> r w s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWS"
->RWS</A
-> r w s m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Stream s m t, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (ParsecT s u m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aone"
-></A
-><B
->one</B
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#one"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Atimes"
-></A
-><B
->times</B
-> :: <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; m -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#times"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Multiplicative to Monoid
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3ALog"
-></A
-><B
->Log</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#Log"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->Convert a <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> into a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->. Mnemonic: <TT
->Log a + Log b = Log (a * b)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ALog"
-></A
-><B
->Log</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetLog"
-></A
-><B
->getLog</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Log')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Log" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3ALog"
->Log</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->Monoid to Multiplicative
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AExp"
-></A
-><B
->Exp</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Multiplicative.html#Exp"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->Convert a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> into a <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
->. Mnemonic: <TT
->Exp a * Exp b = Exp (a + b)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AExp"
-></A
-><B
->Exp</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetExp"
-></A
-><B
->getExp</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Exp')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Exp" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AExp"
->Exp</A
-> m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Multiplicative.html
hunk ./dist/doc/html/monoids/Data-Monoid-Ord.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Ord</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Ord.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Ord</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Max
-</A
-></DT
-><DT
-><A HREF="#2"
->Min
-</A
-></DT
-><DT
-><A HREF="#3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></DT
-><DT
-><A HREF="#4"
->MinPriority: Min semigroup w/ added top
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMax"
->Max</A
-> a = <A HREF="#v%3AMax"
->Max</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMax"
->getMax</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMin"
->Min</A
-> a = <A HREF="#v%3AMin"
->Min</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMin"
->getMin</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMaxPriority"
->MaxPriority</A
-> a = <A HREF="#v%3AMaxPriority"
->MaxPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMaxPriority"
->getMaxPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aminfinity"
->minfinity</A
-> ::  <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AMinPriority"
->MinPriority</A
-> a = <A HREF="#v%3AMinPriority"
->MinPriority</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetMinPriority"
->getMinPriority</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Ainfinity"
->infinity</A
-> ::  <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Max
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMax"
-></A
-><B
->Max</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Max"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
->minBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMax"
-></A
-><B
->Max</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMax"
-></A
-><B
->getMax</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Max')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Max" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Min
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMin"
-></A
-><B
->Min</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#Min"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> given by <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AmaxBound"
->maxBound</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMin"
-></A
-><B
->Min</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMin"
-></A
-><B
->getMin</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Min')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Min" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="3"
->MaxPriority: Max semigroup w/ added bottom
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MaxPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the bottom element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMaxPriority"
-></A
-><B
->MaxPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMaxPriority"
-></A
-><B
->getMaxPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MaxPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MaxPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aminfinity"
-></A
-><B
->minfinity</B
-> ::  <A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#minfinity"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="4"
->MinPriority: Min semigroup w/ added top
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AMinPriority"
-></A
-><B
->MinPriority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#MinPriority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
->)</TT
-> over <TT
-><TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> a</TT
-> where <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#v%3ANothing"
->Nothing</A
-></TT
-> is the top element
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMinPriority"
-></A
-><B
->MinPriority</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetMinPriority"
-></A
-><B
->getMinPriority</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:MinPriority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:MinPriority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Ainfinity"
-></A
-><B
->infinity</B
-> ::  <A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Ord.html#infinity"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.Char</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.Char</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="#t%3ACharReducer"
->CharReducer</A
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfromChar"
->fromChar</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AinvalidChar"
->invalidChar</A
-> :: [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AinvalidChar"
->invalidChar</A
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfromChar"
->fromChar</A
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A NAME="t%3ACharReducer"
-></A
-><B
->CharReducer</B
-> m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#CharReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->Provides a mechanism for the UTF8 <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> to report invalid characters to one or more monoids.
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromChar"
-></A
-><B
->fromChar</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:CharReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:CharReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ([] <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
->)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,) m m')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,) m m' m'')</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m, <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m'', <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m''') =&gt; <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> ((,,,) m m' m'' m''')</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AinvalidChar"
-></A
-><B
->invalidChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; [<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
->] -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#invalidChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfromChar"
-></A
-><B
->fromChar</B
-> :: <A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-Char.html#fromChar"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer.With</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer-With.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer.With</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AWithReducer"
->WithReducer</A
-> c m = <A HREF="#v%3AWithReducer"
->WithReducer</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AwithoutReducer"
->withoutReducer</A
-> :: c</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AWithReducer"
-></A
-><B
->WithReducer</B
-> c m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer-With.html#WithReducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->If <TT
->m</TT
-> is a <TT
->c</TT
->-<A HREF="Reducer.html"
->Reducer</A
->, then m is <TT
->(c <TT
-><A HREF="Data-Monoid-Reducer-With.html#v%3AWithReducer"
->WithReducer</A
-></TT
-> m)</TT
->-<A HREF="Reducer.html"
->Reducer</A
->
-   This can be used to quickly select a <A HREF="Reducer.html"
->Reducer</A
-> for use as a <TT
->FingerTree</TT
->
-   <TT
->measure</TT
->.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AWithReducer"
-></A
-><B
->WithReducer</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AwithoutReducer"
-></A
-><B
->withoutReducer</B
-> :: c</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:WithReducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:WithReducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; Measured m (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/Data-Monoid-Reducer.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Reducer</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Reducer.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Reducer</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->A <TT
->c</TT
->-<TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> is a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> with a canonical mapping from <TT
->c</TT
-> to the Monoid.
- This <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->unit</A
-></TT
-> acts in many ways like <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#v%3Areturn"
->return</A
-></TT
-> for a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-></TT
-> but is limited
- to a single type.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="#t%3AReducer"
->Reducer</A
-> c m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aunit"
->unit</A
-> :: c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Asnoc"
->snoc</A
-> :: m -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Acons"
->cons</A
-> :: c -&gt; m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aunit"
->unit</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Asnoc"
->snoc</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; m -&gt; c -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Acons"
->cons</A
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfoldMapReduce"
->foldMapReduce</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (a -&gt; e) -&gt; f a -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AfoldReduce"
->foldReduce</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; f e -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3ApureUnit"
->pureUnit</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; c -&gt; f n</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AreturnUnit"
->returnUnit</A
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; c -&gt; m n</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A NAME="t%3AReducer"
-></A
-><B
->Reducer</B
-> c m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#Reducer"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><P
->This type may be best read infix. A <TT
->c <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> m</TT
-> is a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->m</TT
-> that maps
- values of type <TT
->c</TT
-> through <TT
->unit</TT
-> to values of type <TT
->m</TT
->. A <TT
->c</TT
->-<TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> may also
- supply operations which tack-on another <TT
->c</TT
-> to an existing <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->m</TT
-> on the left
- or right. These specialized reductions may be more efficient in some scenarios
- and are used when appropriate by a Generator. The names <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Acons"
->cons</A
-></TT
-> and <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->snoc</A
-></TT
-> work
- by analogy to the synonymous operations in the list monoid.
-</P
-><P
->This class deliberately avoids functional-dependencies, so that () can be a <TT
->c</TT
->-Reducer
- for all <TT
->c</TT
->, and so many common reducers can work over multiple types, for instance,
- First and Last may reduce both <TT
->a</TT
-> and <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-></TT
-> <TT
->a</TT
->. Since a Generator has a fixed element
- type, the input to the reducer is generally known and extracting from the monoid usually
- is sufficient to fix the result type. Combinators are available for most scenarios where
- this is not the case, and the few remaining cases can be handled by using an explicit 
- type annotation.
-</P
-><P
->Minimal definition: <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->unit</A
-></TT
-> or <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->snoc</A
-></TT
->
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunit"
-></A
-><B
->unit</B
-> :: c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Convert a value into a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asnoc"
-></A
-><B
->snoc</B
-> :: m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#snoc"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Append a value to a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> for use in left-to-right reduction
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acons"
-></A
-><B
->cons</B
-> :: c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#cons"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Prepend a value onto a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> for use during right-to-left reduction
-</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Reducer')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Reducer" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
->All</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAll"
->All</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
->Any</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AAny"
->Any</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ()</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->SourcePosition</A
-> file)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Unlined</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Unspaced</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Lines</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Words</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AChar"
->Char</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->CharReducer</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Word.html#t%3AWord8"
->Word8</A
-> (<A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->UTF8</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
->Set</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AProduct"
->Product</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ASum"
->Sum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ADual"
->Dual</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ([] c)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> f (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMin"
->Min</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Monoid-Ord.html#t%3AMax"
->Max</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Measured v a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (FingerTree v a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,) m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c r, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c o) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,) m n o)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Mon</A
-> m m m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Stream s m t, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (ParsecT s u m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c o, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c p) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c ((,,,) m n o p)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f a) (<A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Traversal</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (m a) (<A HREF="Data-Monoid-Monad.html#t%3AAction"
->Action</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3ALast"
->Last</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AFirst"
->First</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f m) (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->WithReducer</A
-> c m) m</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
->Endo</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (a -&gt; a) (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AEndo"
->Endo</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Types.html#t%3AInt"
->Int</A
-> v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) k v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) k v) (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k v)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) n c) (<A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#t%3ARLE"
->RLE</A
-> n m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3AIntegral"
->Integral</A
-> n, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> ((,) n c) (<A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#t%3ARLE"
->RLE</A
-> n m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunit"
-></A
-><B
->unit</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#unit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Convert a value into a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Asnoc"
-></A
-><B
->snoc</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; m -&gt; c -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#snoc"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Append a value to a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> for use in left-to-right reduction
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Acons"
-></A
-><B
->cons</B
-> :: <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m =&gt; c -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#cons"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Prepend a value onto a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> for use during right-to-left reduction
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldMapReduce"
-></A
-><B
->foldMapReduce</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; (a -&gt; e) -&gt; f a -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#foldMapReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Apply a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> to a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-></TT
-> container, after mapping the contents into a suitable form for reduction.
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AfoldReduce"
-></A
-><B
->foldReduce</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> e m) =&gt; f e -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#foldReduce"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="doc"
->Apply a <TT
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-></TT
-> to a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Foldable.html#t%3AFoldable"
->Foldable</A
-></TT
-> mapping each element through <TT
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->unit</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3ApureUnit"
-></A
-><B
->pureUnit</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; c -&gt; f n</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#pureUnit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AreturnUnit"
-></A
-><B
->returnUnit</B
-> :: (<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> m, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c n) =&gt; c -&gt; m n</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Reducer.html#returnUnit"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/Data-Monoid-Self.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Self</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Self.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Self</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->A simple <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> transformer that takes a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> m and produces a new <TT
->m</TT
->-Reducer named <TT
-><A HREF="Data-Monoid-Self.html#v%3ASelf"
->Self</A
-></TT
-> <TT
->m</TT
->
-</P
-><P
->This is useful when you have a generator that already contains monoidal values or someone supplies
- the map to the monoid in the form of a function rather than as a <A HREF="Reducer.html"
->Reducer</A
-> instance. You can just
- <TT
-><TT
-><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
->getSelf</A
-></TT
-> . <TT
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->reduce</A
-></TT
-></TT
-> or <TT
-><TT
-><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
->getSelf</A
-></TT
-> . <TT
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->mapReduce</A
-></TT
-> f</TT
-> in those scenarios. These behaviors are encapsulated 
- into the fold and foldMap combinators in <A HREF="Data-Monoid-Combinators.html"
->Data.Monoid.Combinators</A
-> respectively.
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ASelf"
-></A
-><B
->Self</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Self.html#Self"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ASelf"
-></A
-><B
->Self</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetSelf"
-></A
-><B
->getSelf</B
-> :: m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Self')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Self" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> m (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Self.html
hunk ./dist/doc/html/monoids/Data-Monoid-Union.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Monoid.Union</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Monoid-Union.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Monoid.Union</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Unions of Containers
-</A
-></DT
-><DT
-><A HREF="#2"
->Unions of Containers of Monoids
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A HREF="#t%3AHasUnion"
->HasUnion</A
-> f  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aempty"
->empty</A
-> :: f</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aunion"
->union</A
-> :: f -&gt; f -&gt; f</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aempty"
->empty</A
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; f</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Aunion"
->union</A
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; f -&gt; f -&gt; f</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AUnion"
->Union</A
-> f = <A HREF="#v%3AUnion"
->Union</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetUnion"
->getUnion</A
-> :: f</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A HREF="#t%3AHasUnionWith"
->HasUnionWith</A
-> f  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AunionWith"
->unionWith</A
-> ::  (a -&gt; a -&gt; a) -&gt; f a -&gt; f a -&gt; f a</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AemptyWith"
->emptyWith</A
-> ::  f a</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AemptyWith"
->emptyWith</A
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f =&gt; f a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3AunionWith"
->unionWith</A
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f =&gt; (a -&gt; a -&gt; a) -&gt; f a -&gt; f a -&gt; f a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AUnionWith"
->UnionWith</A
-> f m = <A HREF="#v%3AUnionWith"
->UnionWith</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetUnionWith"
->getUnionWith</A
-> :: f m</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Unions of Containers
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AHasUnion"
-></A
-><B
->HasUnion</B
-> f  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#HasUnion"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A Container suitable for the <TT
-><A HREF="Data-Monoid-Union.html#v%3AUnion"
->Union</A
-></TT
-> <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aempty"
-></A
-><B
->empty</B
-> :: f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#empty"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunion"
-></A
-><B
->union</B
-> :: f -&gt; f -&gt; f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:HasUnion')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:HasUnion" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntSet.html#t%3AIntSet"
->IntSet</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> ([] a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Set.html#t%3ASet"
->Set</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aempty"
-></A
-><B
->empty</B
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#empty"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Aunion"
-></A
-><B
->union</B
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; f -&gt; f -&gt; f</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AUnion"
-></A
-><B
->Union</B
-> f </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#Union"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->(<TT
-><A HREF="Data-Monoid-Union.html#v%3Aunion"
->union</A
-></TT
->,<TT
-><A HREF="Data-Monoid-Union.html#v%3Aempty"
->empty</A
-></TT
->)</TT
->
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AUnion"
-></A
-><B
->Union</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetUnion"
-></A
-><B
->getUnion</B
-> :: f</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Union')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Union" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> f (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->HasUnion</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnion"
->Union</A
-> f)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="2"
->Unions of Containers of Monoids
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
->  <A NAME="t%3AHasUnionWith"
-></A
-><B
->HasUnionWith</B
-> f  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#HasUnionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->Polymorphic containers that we can supply an operation to handle unions with
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AunionWith"
-></A
-><B
->unionWith</B
-> ::  (a -&gt; a -&gt; a) -&gt; f a -&gt; f a -&gt; f a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#unionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AemptyWith"
-></A
-><B
->emptyWith</B
-> ::  f a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#emptyWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:HasUnionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:HasUnionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-IntMap.html#t%3AIntMap"
->IntMap</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> k =&gt; <A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Map.html#t%3AMap"
->Map</A
-> k)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AemptyWith"
-></A
-><B
->emptyWith</B
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f =&gt; f a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#emptyWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3AunionWith"
-></A
-><B
->unionWith</B
-> :: <A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f =&gt; (a -&gt; a -&gt; a) -&gt; f a -&gt; f a -&gt; f a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#unionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AUnionWith"
-></A
-><B
->UnionWith</B
-> f m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Monoid-Union.html#UnionWith"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->The <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> <TT
->('unionWith mappend',<TT
-><A HREF="Data-Monoid-Union.html#v%3Aempty"
->empty</A
-></TT
->)</TT
-> for containers full of monoids.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AUnionWith"
-></A
-><B
->UnionWith</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetUnionWith"
-></A
-><B
->getUnionWith</B
-> :: f m</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:UnionWith')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:UnionWith" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> f =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed f =&gt; Pointed (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (f m) (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (f m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->HasUnionWith</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->UnionWith</A
-> f m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Monoid-Union.html
hunk ./dist/doc/html/monoids/Data-Ring-Boolean.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Boolean</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Boolean.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Boolean</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->A Boolean <TT
-><A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-></TT
-> over <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TT
->. Note well that the <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#v%3Amappend"
->mappend</A
-></TT
-> of this ring is
- symmetric difference and not disjunction like you might expect. To get that 
- you should use use <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-></TT
-> from <A HREF="Data-Ring-Semi-Ord-Order.html"
->Data.Ring.Semi.Ord.Order</A
-> on <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TT
-> to get the '&amp;&amp;'/'||'-based 
- distributive-lattice <TT
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ABoolRing"
-></A
-><B
->BoolRing</B
->  </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Boolean.html#BoolRing"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ABoolRing"
-></A
-><B
->BoolRing</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetBoolRing"
-></A
-><B
->getBoolRing</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:BoolRing')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:BoolRing" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> <A HREF="/usr/local/share/doc/ghc/libraries/ghc-prim/GHC-Bool.html#t%3ABool"
->Bool</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Boolean.html
hunk ./dist/doc/html/monoids/Data-Ring-FromNum.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.FromNum</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-FromNum.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.FromNum</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->A wrapper that lies for you and claims any instance of <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-></TT
-> is a <TT
-><A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-></TT
->.
- Who knows, for your type it might even be telling the truth!
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AFromNum"
-></A
-><B
->FromNum</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-FromNum.html#FromNum"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AFromNum"
-></A
-><B
->FromNum</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetFromNum"
-></A
-><B
->getFromNum</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:FromNum')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:FromNum" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> Integer (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-FromNum.html
hunk ./dist/doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Module.AutomaticDifferentiation</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Module-AutomaticDifferentiation.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Module.AutomaticDifferentiation</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Module.html"
->Data.Ring.Module</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3AD"
-></A
-><B
->D</B
-> r m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module-AutomaticDifferentiation.html#D"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:D')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:D" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c r, <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c m) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> c (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> r, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m) =&gt; <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m) =&gt; <A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Module-AutomaticDifferentiation.html
hunk ./dist/doc/html/monoids/Data-Ring-Module.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Module</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Module.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Module</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->Left- and right- modules over rings, semirings, and Seminearrings.
- To avoid a proliferation of classes. These only require that there
- be an addition and multiplication operation for the <TT
-><A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> r, <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> r, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="#t%3ALeftModule"
->LeftModule</A
-> r m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3A%2A."
->(*.)</A
-> :: r -&gt; m -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3A%2A."
->(*.)</A
-> :: <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m =&gt; r -&gt; m -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> r, <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> r, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="#t%3ARightModule"
->RightModule</A
-> r m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3A.%2A"
->(.*)</A
-> :: m -&gt; r -&gt; m</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3A.%2A"
->(.*)</A
-> :: <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m =&gt; m -&gt; r -&gt; m</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m, <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m) =&gt; <A HREF="#t%3AModule"
->Module</A
-> r m </TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> r, <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> r, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ALeftModule"
-></A
-><B
->LeftModule</B
-> r m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#LeftModule"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><PRE
-> (x * y) *. m = x * (y *. m)</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A%2A."
-></A
-><B
->(*.)</B
-> :: r -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#%2A."
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:LeftModule')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:LeftModule" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A%2A."
-></A
-><B
->(*.)</B
-> :: <A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m =&gt; r -&gt; m -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#%2A."
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> r, <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> r, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ARightModule"
-></A
-><B
->RightModule</B
-> r m  <SPAN CLASS="keyword"
->where</SPAN
-></TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#RightModule"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><PRE
-> (m .* x) * y = m .* (x * y)</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Methods</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A.%2A"
-></A
-><B
->(.*)</B
-> :: m -&gt; r -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#.%2A"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:RightModule')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:RightModule" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3A.%2A"
-></A
-><B
->(.*)</B
-> :: <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m =&gt; m -&gt; r -&gt; m</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#.%2A"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Ring-Module.html#t%3ALeftModule"
->LeftModule</A
-> r m, <A HREF="Data-Ring-Module.html#t%3ARightModule"
->RightModule</A
-> r m) =&gt; <A NAME="t%3AModule"
-></A
-><B
->Module</B
-> r m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Module.html#Module"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><PRE
-> (x *. m) .* y = x *. (m .* y)</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Module')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Module" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AApplicative"
->Applicative</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r (<A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->TraversalWith</A
-> f m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonad"
->Monad</A
-> f) =&gt; <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r (<A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->ActionWith</A
-> f m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Module.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi-Near.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi.Near</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi-Near.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi.Near</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable (instances use MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Defines left- and right- seminearrings. Every <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-></TT
-> wrapped around
- a <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> qualifies due to the distributivity of (&gt;&gt;=) over <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#v%3Amplus"
->mplus</A
-></TT
->.
-</P
-><P
->See <A HREF="http://conway.rutgers.edu/~ccshan/wiki/blog/posts/WordNumbers1/"
->http://conway.rutgers.edu/~ccshan/wiki/blog/posts/WordNumbers1/</A
->
-</P
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> m </TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> m </TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ALeftSemiNearRing"
-></A
-><B
->LeftSemiNearRing</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Near.html#LeftSemiNearRing"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><PRE
->a * (b + c) = (a * b) + (a * c)</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:LeftSemiNearRing')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:LeftSemiNearRing" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> ([] m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/containers/Data-Sequence.html#t%3ASeq"
->Seq</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Measured v m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (FingerTree v m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Applicative.html#t%3AAlternative"
->Alternative</A
-> f, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->WrappedApplicative</A
-> f a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->WrappedMonad</A
-> m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Strict.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Writer-Lazy.html#t%3AWriterT"
->WriterT</A
-> w m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Strict.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-State-Lazy.html#t%3AStateT"
->StateT</A
-> s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-Reader.html#t%3AReaderT"
->ReaderT</A
-> e m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(Stream s m t, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (ParsecT s u m a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Strict.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AMonadPlus"
->MonadPlus</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> w, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> n) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/mtl/Control-Monad-RWS-Lazy.html#t%3ARWST"
->RWST</A
-> r w s m n)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> m, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> m) =&gt; <A NAME="t%3ARightSemiNearRing"
-></A
-><B
->RightSemiNearRing</B
-> m </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Near.html#RightSemiNearRing"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><PRE
->(a + b) * c = (a * c) + (b * c)</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:RightSemiNearRing')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:RightSemiNearRing" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Monoid-Self.html#t%3ASelf"
->Self</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> m =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Monoid-FromString.html#t%3AFromString"
->FromString</A
-> m)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi-Near.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi-Ord.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi.Ord</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi-Ord.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi.Ord</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->ekmett@gmail.com</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
->Turn an instance of <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-></TT
-> into a <TT
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-></TT
-> over <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amax"
->max</A
-></TT
-> and <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->
-</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3AOrder"
->Order</A
-> a = <A HREF="#v%3AOrder"
->Order</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetOrder"
->getOrder</A
-> :: a</TD
-></TR
-></TABLE
->}</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A HREF="#t%3APriority"
->Priority</A
-> a </TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->= <A HREF="#v%3AMinBound"
->MinBound</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->| <A HREF="#v%3APriority"
->Priority</A
-> a</TD
-></TR
-><TR
-><TD CLASS="decl"
->| <A HREF="#v%3AMaxBound"
->MaxBound</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3AOrder"
-></A
-><B
->Order</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Ord.html#Order"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-></TT
-> using a type's built-in Bounded instance.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AOrder"
-></A
-><B
->Order</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetOrder"
-></A
-><B
->getOrder</B
-> :: a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Order')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Order" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Copointed <A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->data</SPAN
->  <A NAME="t%3APriority"
-></A
-><B
->Priority</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Ord.html#Priority"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-></TT
-> which adds <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AminBound"
->minBound</A
-></TT
-> and <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3AmaxBound"
->maxBound</A
-></TT
-> to a pre-existing type.
-</TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMinBound"
-></A
-><B
->MinBound</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="arg"
-><A NAME="v%3APriority"
-></A
-><B
->Priority</B
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AMaxBound"
-></A
-><B
->MaxBound</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Priority')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Priority" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/QuickCheck/Test-QuickCheck.html#t%3AArbitrary"
->Arbitrary</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->MaxPriority</A
-> a) (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi-Ord.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi-Tropical.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi.Tropical</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi-Tropical.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi.Tropical</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="section4"
-><B
->Contents</B
-></TD
-></TR
-><TR
-><TD
-><DL
-><DT
-><A HREF="#1"
->Tropical Semirings
-</A
-></DT
-></DL
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="#v%3Ainfinity"
->infinity</A
-> ::  <A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A HREF="#t%3ATropical"
->Tropical</A
-> a = <A HREF="#v%3ATropical"
->Tropical</A
-> {<TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="recfield"
-><A HREF="#v%3AgetTropical"
->getTropical</A
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-></TR
-></TABLE
->}</TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
-><A NAME="1"
->Tropical Semirings
-</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><A NAME="v%3Ainfinity"
-></A
-><B
->infinity</B
-> ::  <A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a</TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Tropical.html#infinity"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->newtype</SPAN
->  <A NAME="t%3ATropical"
-></A
-><B
->Tropical</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi-Tropical.html#Tropical"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
-><P
->The <TT
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-></TT
-> <TT
->(<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#v%3Amin"
->min</A
-></TT
->,<TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#v%3A%2B"
->+</A
-></TT
->)</TT
-> over <TT
->a extended with <TT
-><A HREF="Data-Ring-Semi-Tropical.html#v%3Ainfinity"
->infinity</A
-></TT
-></TT
->.
-   When <TT
->a</TT
-> has a Num instance with an addition that respects order, then this is 
-   transformed into a tropical semiring. It is assumed that 0 is the least element
-   of a.
-</P
-><P
-><A HREF="http://hal.archives-ouvertes.fr/docs/00/11/37/79/PDF/Tropical.pdf"
->http://hal.archives-ouvertes.fr/docs/00/11/37/79/PDF/Tropical.pdf</A
->
-</P
-></TD
-></TR
-><TR
-><TD CLASS="section4"
->Constructors</TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="5" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3ATropical"
-></A
-><B
->Tropical</B
-></TD
-><TD CLASS="rdoc"
-></TD
-></TR
-><TR
-><TD CLASS="body" COLSPAN="2"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="arg"
-><A NAME="v%3AgetTropical"
-></A
-><B
->getTropical</B
-> :: <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a</TD
-><TD CLASS="rdoc"
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Tropical')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Tropical" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Control-Monad.html#t%3AFunctor"
->Functor</A
-> <A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->Pointed <A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> a (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Eq.html#t%3AEq"
->Eq</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Read.html#t%3ARead"
->Read</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Text-Show.html#t%3AShow"
->Show</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a) =&gt; <A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Maybe.html#t%3AMaybe"
->Maybe</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Reducer</A
-> (<A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->MinPriority</A
-> a) (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi-Tropical.html
hunk ./dist/doc/html/monoids/Data-Ring-Semi.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Semi</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Semi.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Semi</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->non-portable (MPTCs)</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Synopsis</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> a, <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> a) =&gt; <A HREF="#t%3ASemiRing"
->SemiRing</A
-> a </TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->RightSemiNearRing</A
-> a, <A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->LeftSemiNearRing</A
-> a) =&gt; <A NAME="t%3ASemiRing"
-></A
-><B
->SemiRing</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring-Semi.html#SemiRing"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="ndoc"
->A <TT
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-></TT
-> is an instance of both <TT
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Multiplicative</A
-></TT
-> and <TT
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Monoid.html#t%3AMonoid"
->Monoid</A
-></TT
-> where 
-   <TT
-><A HREF="Data-Monoid-Multiplicative.html#v%3Atimes"
->times</A
-></TT
-> distributes over <TT
-><A HREF="Data-Monoid-Additive.html#v%3Aplus"
->plus</A
-></TT
->.
-</TD
-></TR
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:SemiRing')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:SemiRing" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Tropical</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Priority</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ABounded"
->Bounded</A
-> a, <A HREF="/usr/local/share/doc/ghc/libraries/base/Data-Ord.html#t%3AOrd"
->Ord</A
-> a) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Order</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m) =&gt; <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Semi.html
hunk ./dist/doc/html/monoids/Data-Ring-Sugar.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring.Sugar</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring-Sugar.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring.Sugar</FONT
-></TD
-><TD ALIGN="right"
-><TABLE CLASS="narrow" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="infohead"
->Portability</TD
-><TD CLASS="infoval"
->portable</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Stability</TD
-><TD CLASS="infoval"
->experimental</TD
-></TR
-><TR
-><TD CLASS="infohead"
->Maintainer</TD
-><TD CLASS="infoval"
->libraries@haskell.org</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Description</TD
-></TR
-><TR
-><TD CLASS="doc"
-><P
->Syntactic sugar for working with rings that conflicts with names from the <A HREF="Prelude.html"
->Prelude</A
->.
-</P
-><PRE
-> import Prelude hiding ((-), (+), (*), negate, subtract)
- import Data.Ring.Sugar
-</PRE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Monoid-Multiplicative-Sugar.html"
->Data.Monoid.Multiplicative.Sugar</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring-Sugar.html
hunk ./dist/doc/html/monoids/Data-Ring.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->Data.Ring</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="src/Data-Ring.html"
->Source code</A
-></TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="modulebar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><FONT SIZE="6"
->Data.Ring</FONT
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->Documentation</TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Group.html"
->Data.Group</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="decl"
->module <A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="topdecl"
-><TABLE CLASS="declbar"
-><TR
-><TD CLASS="declname"
-><SPAN CLASS="keyword"
->class</SPAN
-> (<A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> a, <A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->SemiRing</A
-> a) =&gt; <A NAME="t%3ARing"
-></A
-><B
->Ring</B
-> a </TD
-><TD CLASS="declbut"
-><A HREF="src/Data-Ring.html#Ring"
->Source</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="body"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="s8"
-></TD
-></TR
-><TR
-><TD CLASS="section4"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'i:Ring')" ALT="show/hide"
-> Instances</TD
-></TR
-><TR
-><TD CLASS="body"
-><DIV ID="i:Ring" STYLE="display:block;"
-><TABLE CLASS="vanilla" CELLSPACING="1" CELLPADDING="0"
-><TR
-><TD CLASS="decl"
-><A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> <A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->BoolRing</A
-></TD
-></TR
-><TR
-><TD CLASS="decl"
-><A HREF="/usr/local/share/doc/ghc/libraries/base/Prelude.html#t%3ANum"
->Num</A
-> a =&gt; <A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> (<A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->FromNum</A
-> a)</TD
-></TR
-><TR
-><TD CLASS="decl"
->(<A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> r, <A HREF="Data-Ring-Module.html#t%3AModule"
->Module</A
-> r m, <A HREF="Data-Group.html#t%3AGroup"
->Group</A
-> m) =&gt; <A HREF="Data-Ring.html#t%3ARing"
->Ring</A
-> (<A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->D</A
-> r m)</TD
-></TR
-></TABLE
-></DIV
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/Data-Ring.html
hunk ./dist/doc/html/monoids/doc-index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->monoids-0.1.8: Lots of Monoids (Index)</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD COLSPAN="2" STYLE="padding-top:5px;"
-><FORM onsubmit="full_search(); return false;" ACTION=""
->Search: <INPUT ID="searchbox" onkeyup="quick_search()"
-> <INPUT VALUE="Search" TYPE="submit"
-> <SPAN ID="searchmsg"
-> </SPAN
-></FORM
-></TD
-></TR
-><TR
-><TD
-><TABLE ID="indexlist" CELLPADDING="0" CELLSPACING="5"
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->*</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative-Sugar.html#v%3A%2A"
->Data.Monoid.Multiplicative.Sugar</A
->, Data.Ring.Sugar</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->*.</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Module.html#v%3A%2A."
->Data.Ring.Module</A
->, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->+</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Additive-Sugar.html#v%3A%2B"
->Data.Monoid.Additive.Sugar</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Sugar, Data.Group.Sugar</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->-</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group-Sugar.html#v%3A-"
->Data.Group.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->.</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Categorical</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->.*</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Module.html#v%3A.%2A"
->Data.Ring.Module</A
->, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&lt;&lt;&lt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Categorical</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->&gt;&gt;&gt;</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Categorical</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Action</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->ActionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AActionWith"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AActionWith"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->All</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->all</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Aall"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->and</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Aand"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Any</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->any</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Aany"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->appEndo</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->BoolRing</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Boolean.html#t%3ABoolRing"
->Data.Ring.Boolean</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Boolean.html#v%3ABoolRing"
->Data.Ring.Boolean</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Category</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Categorical</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Char8</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->CharReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#t%3ACharReducer"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->concatMap</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3AconcatMap"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->cons</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Acons"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->cycle</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Acycle"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->D</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Module-AutomaticDifferentiation.html#t%3AD"
->Data.Ring.Module.AutomaticDifferentiation</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->decode</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3Adecode"
->Data.Monoid.Generator.LZ78</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Dual</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AElem"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->elem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Aelem"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->empty</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3Aempty"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->emptyWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3AemptyWith"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->encode</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3Aencode"
->Data.Monoid.Generator.LZ78</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Endo</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Exp</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AExp"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3AExp"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->filter</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Afilter"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->find</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Afind"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->First</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fold</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Afold"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldMap</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3AfoldMap"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldMapReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3AfoldMapReduce"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->foldReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3AfoldReduce"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->forM_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3AforM_"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->for_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Afor_"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->fromChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AfromChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->FromNum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-FromNum.html#t%3AFromNum"
->Data.Ring.FromNum</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-FromNum.html#v%3AFromNum"
->Data.Ring.FromNum</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->FromString</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-FromString.html#t%3AFromString"
->Data.Monoid.FromString</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-FromString.html#v%3AFromString"
->Data.Monoid.FromString</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->GEndo</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#t%3AGEndo"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AGEndo"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Generator</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AGenerator"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAction</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getActionWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetActionWith"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAll</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getAny</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getBoolRing</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Boolean.html#v%3AgetBoolRing"
->Data.Ring.Boolean</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getChar8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AgetChar8"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getDual</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getExp</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3AgetExp"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFirst</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFromNum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-FromNum.html#v%3AgetFromNum"
->Data.Ring.FromNum</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getFromString</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-FromString.html#v%3AgetFromString"
->Data.Monoid.FromString</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getGEndo</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AgetGEndo"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getKeys</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AgetKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLast</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLog</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3AgetLog"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getLZ78</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3AgetLZ78"
->Data.Monoid.Generator.LZ78</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMax</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMaxPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMin</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMinPriority</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AgetMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getMon</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AgetMon"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getOrder</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AgetOrder"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getProduct</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getRLE</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#v%3AgetRLE"
->Data.Monoid.Lexical.RunLengthEncoding</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getSelf</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Self.html#v%3AgetSelf"
->Data.Monoid.Self</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getSum</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getTraversal</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getTraversalWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetTraversalWith"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getTropical</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Tropical.html#v%3AgetTropical"
->Data.Ring.Semi.Tropical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getUnion</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3AgetUnion"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getUnionWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3AgetUnionWith"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getValues</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AgetValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getWrappedApplicative</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AgetWrappedApplicative"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->getWrappedMonad</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AgetWrappedMonad"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->gnegate</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#v%3Agnegate"
->Data.Group</A
->, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Group</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#t%3AGroup"
->Data.Group</A
->, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->gsubtract</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#v%3Agsubtract"
->Data.Group</A
->, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->HasUnion</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnion"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->HasUnionWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#t%3AHasUnionWith"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->id</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Categorical</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->infinity</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3Ainfinity"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Tropical.html#v%3Ainfinity"
->Data.Ring.Semi.Tropical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->invalidChar</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-Char.html#v%3AinvalidChar"
->Data.Monoid.Reducer.Char</A
->, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Keys</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AKeys"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Last</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->LeftModule</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Module.html#t%3ALeftModule"
->Data.Ring.Module</A
->, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->LeftSemiNearRing</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Near.html#t%3ALeftSemiNearRing"
->Data.Ring.Semi.Near</A
->, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Lines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3ALines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->linesFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AlinesFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Log</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#t%3ALog"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3ALog"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->LZ78</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-LZ78.html#t%3ALZ78"
->Data.Monoid.Generator.LZ78</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator-LZ78.html#v%3ALZ78"
->Data.Monoid.Generator.LZ78</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapFrom"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapM_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3AmapM_"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mappend</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapReduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapReduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mapTo</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AmapTo"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Max</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMax"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MaxBound</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AMaxBound"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MaxPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMaxPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mconcat</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->mempty</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Min</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMin"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->MinBound</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AMinBound"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->minfinity</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3Aminfinity"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->MinPriority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#t%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Ord.html#v%3AMinPriority"
->Data.Monoid.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->minus</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group.html#v%3Aminus"
->Data.Group</A
->, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Module</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Module.html#t%3AModule"
->Data.Ring.Module</A
->, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Mon</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#t%3AMon"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Categorical.html#v%3AMon"
->Data.Monoid.Categorical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Monoid</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Multiplicative</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#t%3AMultiplicative"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->negate</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group-Sugar.html#v%3Anegate"
->Data.Group.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->nextTab</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AnextTab"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->notElem</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3AnotElem"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->one</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3Aone"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->or</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Aor"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Order</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#t%3AOrder"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3AOrder"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->plus</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Additive.html#v%3Aplus"
->Data.Monoid.Additive</A
->, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Priority</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#t%3APriority"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Ord.html#v%3APriority"
->Data.Ring.Semi.Ord</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Product</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->product</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Aproduct"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->pureUnit</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3ApureUnit"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->reduce</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3Areduce"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Reducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#t%3AReducer"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->repeat</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Arepeat"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->replicate</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group-Combinators.html#v%3Areplicate"
->Data.Group.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Function)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Areplicate"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->returnUnit</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3AreturnUnit"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->RightModule</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Module.html#t%3ARightModule"
->Data.Ring.Module</A
->, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->RightSemiNearRing</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Near.html#t%3ARightSemiNearRing"
->Data.Ring.Semi.Near</A
->, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Ring</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring.html#t%3ARing"
->Data.Ring</A
->, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->RLE</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#t%3ARLE"
->Data.Monoid.Lexical.RunLengthEncoding</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-RunLengthEncoding.html#v%3ARLE"
->Data.Monoid.Lexical.RunLengthEncoding</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runLines</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunLines"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUnspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runUTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#v%3ArunUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->runWords</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3ArunWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Self</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Self.html#t%3ASelf"
->Data.Monoid.Self</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Self.html#v%3ASelf"
->Data.Monoid.Self</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SemiRing</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi.html#t%3ASemiRing"
->Data.Ring.Semi</A
->, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->showSourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AshowSourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->snoc</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Asnoc"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->snocAction</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AsnocAction"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->snocTraversal</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AsnocTraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceColumn</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceColumn"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sourceLine</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AsourceLine"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->SourcePosition</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#t%3ASourcePosition"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->startOfFile</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html#v%3AstartOfFile"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->subtract</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Group-Sugar.html#v%3Asubtract"
->Data.Group.Sugar</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Sum</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Data Constructor)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Type/Class)</TD
-><TD CLASS="indexlinks"
->Data.Monoid.Reducer, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Additive, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->sum</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Asum"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->times</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Multiplicative.html#v%3Atimes"
->Data.Monoid.Multiplicative</A
->, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Traversal</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3ATraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversal"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->TraversalWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3ATraversalWith"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3ATraversalWith"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->traverse_</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Combinators.html#v%3Atraverse_"
->Data.Monoid.Combinators</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Tropical</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Tropical.html#t%3ATropical"
->Data.Ring.Semi.Tropical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Ring-Semi-Tropical.html#v%3ATropical"
->Data.Ring.Semi.Tropical</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Union</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#t%3AUnion"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3AUnion"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->union</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3Aunion"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->UnionWith</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#t%3AUnionWith"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3AUnionWith"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unionWith</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Union.html#v%3AunionWith"
->Data.Monoid.Union</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->unit</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer.html#v%3Aunit"
->Data.Monoid.Reducer</A
->, Data.Monoid.Reducer.Char, Data.Monoid.Reducer.With, Data.Monoid.Union, Data.Monoid.Lexical.UTF8.Decoder, Data.Monoid.Generator, Data.Monoid.Lexical.SourcePosition, Data.Monoid.Lexical.Words, Data.Monoid.Self, Data.Monoid.Generator.LZ78, Data.Monoid.FromString, Data.Monoid.Categorical, Data.Monoid.Ord, Data.Ring.Semi.Tropical, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Monoid.Combinators, Data.Monoid.Lexical.RunLengthEncoding</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unlined</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnlined"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Unspaced</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AUnspaced"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->UTF8</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html#t%3AUTF8"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->Values</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#t%3AValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Generator.html#v%3AValues"
->Data.Monoid.Generator</A
->, Data.Monoid.Generator.LZ78, Data.Monoid.Combinators</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->withoutReducer</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AwithoutReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->WithReducer</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#t%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Reducer-With.html#v%3AWithReducer"
->Data.Monoid.Reducer.With</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->Words</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#t%3AWords"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->wordsFrom</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Lexical-Words.html#v%3AwordsFrom"
->Data.Monoid.Lexical.Words</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->WrappedApplicative</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#t%3AWrappedApplicative"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Applicative.html#v%3AWrappedApplicative"
->Data.Monoid.Applicative</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry" COLSPAN="2"
->WrappedMonad</TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->1 (Type/Class)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#t%3AWrappedMonad"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexannot"
->2 (Data Constructor)</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Monad.html#v%3AWrappedMonad"
->Data.Monoid.Monad</A
-></TD
-></TR
-><TR CLASS="indexrow"
-><TD CLASS="indexentry"
->zero</TD
-><TD CLASS="indexlinks"
-><A HREF="Data-Monoid-Additive.html#v%3Azero"
->Data.Monoid.Additive</A
->, Data.Monoid.Additive.Sugar, Data.Monoid.Multiplicative, Data.Monoid.Multiplicative.Sugar, Data.Ring.Semi.Near, Data.Ring.Semi, Data.Ring.Semi.Tropical, Data.Ring.Semi.Ord, Data.Ring.Sugar, Data.Group, Data.Group.Combinators, Data.Group.Sugar, Data.Ring, Data.Ring.Boolean, Data.Ring.FromNum, Data.Ring.Module, Data.Monoid.Applicative, Data.Monoid.Monad, Data.Ring.Module.AutomaticDifferentiation</TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/doc-index.html
hunk ./dist/doc/html/monoids/haddock-util.js 1
-// Haddock JavaScript utilities
-function toggle(button,id)
-{
-   var n = document.getElementById(id).style;
-   if (n.display == "none")
-   {
-    button.src = "minus.gif";
-    n.display = "block";
-   }
-   else
-   {
-    button.src = "plus.gif";
-    n.display = "none";
-   }
-}
-
-
-var max_results = 75; // 50 is not enough to search for map in the base libraries
-var shown_range = null;
-var last_search = null;
-
-function quick_search()
-{
-    perform_search(false);
-}
-
-function full_search()
-{
-    perform_search(true);
-}
-
-
-function perform_search(full)
-{
-    var text = document.getElementById("searchbox").value.toLowerCase();
-    if (text == last_search && !full) return;
-    last_search = text;
-    
-    var table = document.getElementById("indexlist");
-    var status = document.getElementById("searchmsg");
-    var children = table.firstChild.childNodes;
-    
-    // first figure out the first node with the prefix
-    var first = bisect(-1);
-    var last = (first == -1 ? -1 : bisect(1));
-
-    if (first == -1)
-    {
-        table.className = "";
-        status.innerHTML = "No results found, displaying all";
-    }
-    else if (first == 0 && last == children.length - 1)
-    {
-        table.className = "";
-        status.innerHTML = "";
-    }
-    else if (last - first >= max_results && !full)
-    {
-        table.className = "";
-        status.innerHTML = "More than " + max_results + ", press Search to display";
-    }
-    else
-    {
-        // decide what you need to clear/show
-        if (shown_range)
-            setclass(shown_range[0], shown_range[1], "indexrow");
-        setclass(first, last, "indexshow");
-        shown_range = [first, last];
-        table.className = "indexsearch";
-        status.innerHTML = "";
-    }
-
-    
-    function setclass(first, last, status)
-    {
-        for (var i = first; i <= last; i++)
-        {
-            children[i].className = status;
-        }
-    }
-    
-    
-    // do a binary search, treating 0 as ...
-    // return either -1 (no 0's found) or location of most far match
-    function bisect(dir)
-    {
-        var first = 0, finish = children.length - 1;
-        var mid, success = false;
-
-        while (finish - first > 3)
-        {
-            mid = Math.floor((finish + first) / 2);
-
-            var i = checkitem(mid);
-            if (i == 0) i = dir;
-            if (i == -1)
-                finish = mid;
-            else
-                first = mid;
-        }
-        var a = (dir == 1 ? first : finish);
-        var b = (dir == 1 ? finish : first);
-        for (var i = b; i != a - dir; i -= dir)
-        {
-            if (checkitem(i) == 0) return i;
-        }
-        return -1;
-    }    
-    
-    
-    // from an index, decide what the result is
-    // 0 = match, -1 is lower, 1 is higher
-    function checkitem(i)
-    {
-        var s = getitem(i).toLowerCase().substr(0, text.length);
-        if (s == text) return 0;
-        else return (s > text ? -1 : 1);
-    }
-    
-    
-    // from an index, get its string
-    // this abstracts over alternates
-    function getitem(i)
-    {
-        for ( ; i >= 0; i--)
-        {
-            var s = children[i].firstChild.firstChild.data;
-            if (s.indexOf(' ') == -1)
-                return s;
-        }
-        return ""; // should never be reached
-    }
-}
rmfile ./dist/doc/html/monoids/haddock-util.js
hunk ./dist/doc/html/monoids/haddock.css 1
-/* -------- Global things --------- */
-
-BODY { 
-  background-color: #ffffff;
-  color: #000000;
-  font-family: sans-serif;
-  } 
-
-A:link    { color: #0000e0; text-decoration: none }
-A:visited { color: #0000a0; text-decoration: none }
-A:hover   { background-color: #e0e0ff; text-decoration: none }
-
-TABLE.vanilla {
-  width: 100%;
-  border-width: 0px;
-  /* I can't seem to specify cellspacing or cellpadding properly using CSS... */
-}
-
-TABLE.vanilla2 {
-  border-width: 0px;
-}
-
-/* <TT> font is a little too small in MSIE */
-TT  { font-size: 100%; }
-PRE { font-size: 100%; }
-
-LI P { margin: 0pt } 
-
-TD {
-  border-width: 0px;
-}
-
-TABLE.narrow {
-  border-width: 0px;
-}
-
-TD.s8  {  height: 8px;  }
-TD.s15 {  height: 15px; }
-
-SPAN.keyword { text-decoration: underline; }
-
-/* Resize the buttom image to match the text size */
-IMG.coll { width : 0.75em; height: 0.75em; margin-bottom: 0; margin-right: 0.5em }
-
-/* --------- Contents page ---------- */
-
-DIV.node {
-  padding-left: 3em;
-}
-
-DIV.cnode {
-  padding-left: 1.75em;
-}
-
-SPAN.pkg {
-  position: absolute;
-  left: 50em;
-}
-
-/* --------- Documentation elements ---------- */
-
-TD.children {
-  padding-left: 25px;
-  }
-
-TD.synopsis {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace
- }
-
-TD.decl { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  }
-
-TD.topdecl {
-  padding: 2px;
-  background-color: #f0f0f0;
-  font-family: monospace;
-  vertical-align: top;
-}
-
-TABLE.declbar {
-  border-spacing: 0px;
- }
-
-TD.declname {
-  width: 100%;
- }
-
-TD.declbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #000099;
-  border-left-style: solid;
-  white-space: nowrap;
-  font-size: small;
- }
-
-/* 
-  arg is just like decl, except that wrapping is not allowed.  It is
-  used for function and constructor arguments which have a text box
-  to the right, where if wrapping is allowed the text box squashes up
-  the declaration by wrapping it.
-*/
-TD.arg { 
-  padding: 2px;
-  background-color: #f0f0f0; 
-  font-family: monospace;
-  vertical-align: top;
-  white-space: nowrap;
-  }
-
-TD.recfield { padding-left: 20px }
-
-TD.doc  { 
-  padding-top: 2px;
-  padding-left: 10px;
-  }
-
-TD.ndoc  { 
-  padding: 2px;
-  }
-
-TD.rdoc  { 
-  padding: 2px;
-  padding-left: 10px;
-  width: 100%;
-  }
-
-TD.body  { 
-  padding-left: 10px
-  }
-
-TD.pkg {
-  width: 100%;
-  padding-left: 10px
-}
-
-TABLE.indexsearch TR.indexrow {
-  display: none;
-}
-TABLE.indexsearch TR.indexshow {
-  display: table-row;
-}
-
-TD.indexentry {
-  vertical-align: top;
-  padding-right: 10px
-  }
-
-TD.indexannot {
-  vertical-align: top;
-  padding-left: 20px;
-  white-space: nowrap
-  }
-
-TD.indexlinks {
-  width: 100%
-  }
-
-/* ------- Section Headings ------- */
-
-TD.section1 {
-  padding-top: 15px;
-  font-weight: bold;
-  font-size: 150%
-  }
-
-TD.section2 {
-  padding-top: 10px;
-  font-weight: bold;
-  font-size: 130%
-  }
-
-TD.section3 {
-  padding-top: 5px;
-  font-weight: bold;
-  font-size: 110%
-  }
-
-TD.section4 {
-  font-weight: bold;
-  font-size: 100%
-  }
-
-/* -------------- The title bar at the top of the page */
-
-TD.infohead {
-  color: #ffffff;
-  font-weight: bold;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.infoval {
-  color: #ffffff;
-  padding-right: 10px;
-  text-align: left;
-}
-
-TD.topbar {
-  background-color: #000099;
-  padding: 5px;
-}
-
-TD.title {
-  color: #ffffff;
-  padding-left: 10px;
-  width: 100%
-  }
-
-TD.topbut {
-  padding-left: 5px;
-  padding-right: 5px;
-  border-left-width: 1px;
-  border-left-color: #ffffff;
-  border-left-style: solid;
-  white-space: nowrap;
-  }
-
-TD.topbut A:link {
-  color: #ffffff
-  }
-
-TD.topbut A:visited {
-  color: #ffff00
-  }
-
-TD.topbut A:hover {
-  background-color: #6060ff;
-  }
-
-TD.topbut:hover {
-  background-color: #6060ff
-  }
-
-TD.modulebar { 
-  background-color: #0077dd;
-  padding: 5px;
-  border-top-width: 1px;
-  border-top-color: #ffffff;
-  border-top-style: solid;
-  }
-
-/* --------- The page footer --------- */
-
-TD.botbar {
-  background-color: #000099;
-  color: #ffffff;
-  padding: 5px
-  }
-TD.botbar A:link {
-  color: #ffffff;
-  text-decoration: underline
-  }
-TD.botbar A:visited {
-  color: #ffff00
-  }
-TD.botbar A:hover {
-  background-color: #6060ff
-  }
-
rmfile ./dist/doc/html/monoids/haddock.css
binary ./dist/doc/html/monoids/haskell_icon.gif
oldhex
*47494638376110001000f70f00000000800000008000808000000080800080008080c0c0c08080
*80ff000000ff00ffff000000ffff00ff00ffffffffff0000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*000000000000000000000000000000000000000000000000000000000000000000000000000000
*0021f90401000000002c000000001000100007086c0001007840b0a0418202073e38b0b021c387
*07143e2440c0a143040e091cd0787021c686151f84347800e343901d4b12646870e44a930d0952
*3ca832a6cc990555b2bc2992e4c79d3847ea2c88b3a7c89a2c8b8aa43874e941a60810003840b5
*aa55aa511346ddca75abc080003b
newhex
*
rmfile ./dist/doc/html/monoids/haskell_icon.gif
hunk ./dist/doc/html/monoids/index.html 1
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
-<!--Rendered using the Haskell Html Library v0.2-->
-<HTML
-><HEAD
-><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8"
-><TITLE
->monoids-0.1.8: Lots of Monoids</TITLE
-><LINK HREF="haddock.css" REL="stylesheet" TYPE="text/css"
-><SCRIPT SRC="haddock-util.js" TYPE="text/javascript"
-></SCRIPT
-></HEAD
-><BODY
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD CLASS="topbar"
-><TABLE CLASS="vanilla" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD
-><IMG SRC="haskell_icon.gif" WIDTH="16" HEIGHT="16" ALT=" "
-></TD
-><TD CLASS="title"
->monoids-0.1.8: Lots of Monoids</TD
-><TD CLASS="topbut"
-><A HREF="index.html"
->Contents</A
-></TD
-><TD CLASS="topbut"
-><A HREF="doc-index.html"
->Index</A
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="section1"
->monoids-0.1.8: Lots of Monoids</TD
-></TR
-><TR
-><TD CLASS="doc"
->Lots of Monoids
-</TD
-></TR
-><TR
-><TD CLASS="section1"
->Modules</TD
-></TR
-><TR
-><TD
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0"
-><TR
-><TD STYLE="width: 50em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:0')" ALT="show/hide"
->Data</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:0" STYLE="display:block;"
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:1')" ALT="show/hide"
-><A HREF="Data-Group.html"
->Data.Group</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:1" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Group-Combinators.html"
->Data.Group.Combinators</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Group-Sugar.html"
->Data.Group.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:2')" ALT="show/hide"
->Monoid</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:2" STYLE="display:block;"
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:3')" ALT="show/hide"
-><A HREF="Data-Monoid-Additive.html"
->Data.Monoid.Additive</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:3" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Additive-Sugar.html"
->Data.Monoid.Additive.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Applicative.html"
->Data.Monoid.Applicative</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Categorical.html"
->Data.Monoid.Categorical</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Combinators.html"
->Data.Monoid.Combinators</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-FromString.html"
->Data.Monoid.FromString</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:4')" ALT="show/hide"
-><A HREF="Data-Monoid-Generator.html"
->Data.Monoid.Generator</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:4" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Generator-LZ78.html"
->Data.Monoid.Generator.LZ78</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Instances.html"
->Data.Monoid.Instances</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:5')" ALT="show/hide"
->Lexical</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:5" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-RunLengthEncoding.html"
->Data.Monoid.Lexical.RunLengthEncoding</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-SourcePosition.html"
->Data.Monoid.Lexical.SourcePosition</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 44em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:6')" ALT="show/hide"
->UTF8</TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:6" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 42em"
-><A HREF="Data-Monoid-Lexical-UTF8-Decoder.html"
->Data.Monoid.Lexical.UTF8.Decoder</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Lexical-Words.html"
->Data.Monoid.Lexical.Words</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Monad.html"
->Data.Monoid.Monad</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:7')" ALT="show/hide"
-><A HREF="Data-Monoid-Multiplicative.html"
->Data.Monoid.Multiplicative</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:7" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Multiplicative-Sugar.html"
->Data.Monoid.Multiplicative.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Ord.html"
->Data.Monoid.Ord</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:8')" ALT="show/hide"
-><A HREF="Data-Monoid-Reducer.html"
->Data.Monoid.Reducer</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:8" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-Char.html"
->Data.Monoid.Reducer.Char</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Monoid-Reducer-With.html"
->Data.Monoid.Reducer.With</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Self.html"
->Data.Monoid.Self</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Monoid-Union.html"
->Data.Monoid.Union</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 48em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:9')" ALT="show/hide"
-><A HREF="Data-Ring.html"
->Data.Ring</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:9" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Ring-Boolean.html"
->Data.Ring.Boolean</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Ring-FromNum.html"
->Data.Ring.FromNum</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:10')" ALT="show/hide"
-><A HREF="Data-Ring-Module.html"
->Data.Ring.Module</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:10" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Ring-Module-AutomaticDifferentiation.html"
->Data.Ring.Module.AutomaticDifferentiation</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="width: 46em"
-><IMG SRC="minus.gif" CLASS="coll" ONCLICK="toggle(this,'n:11')" ALT="show/hide"
-><A HREF="Data-Ring-Semi.html"
->Data.Ring.Semi</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding: 0; padding-left: 2em" COLSPAN="3"
-><TABLE CLASS="vanilla2" CELLSPACING="0" CELLPADDING="0" ID="n:11" STYLE="display:block;"
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Ring-Semi-Near.html"
->Data.Ring.Semi.Near</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Ring-Semi-Ord.html"
->Data.Ring.Semi.Ord</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 44em"
-><A HREF="Data-Ring-Semi-Tropical.html"
->Data.Ring.Semi.Tropical</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD STYLE="padding-left: 1.25em;width: 46em"
-><A HREF="Data-Ring-Sugar.html"
->Data.Ring.Sugar</A
-></TD
-><TD
-></TD
-><TD
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-></TABLE
-></TD
-></TR
-><TR
-><TD CLASS="s15"
-></TD
-></TR
-><TR
-><TD CLASS="botbar"
->Produced by <A HREF="http://www.haskell.org/haddock/"
->Haddock</A
-> version 2.3.0</TD
-></TR
-></TABLE
-></BODY
-></HTML
->
rmfile ./dist/doc/html/monoids/index.html
binary ./dist/doc/html/monoids/minus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002118c8f
*a00bc6eb5e0b40583b6596f1a11f14003b
newhex
*
rmfile ./dist/doc/html/monoids/minus.gif
binary ./dist/doc/html/monoids/monoids.haddock
oldhex
*0d0cface0004000000000000f730000000000000e035b700000000000000000000000000000000
*000000000000000100000000000000010000000000000000000000000000000100000000000000
*020000000000000000000000000000000100000000000000030000000000000000000000000000
*000100000000000000040000000000000000000000000000000100000000000000050000000000
*000000000000000000000100000000000000060000000000000000000000000000000100000000
*000000070000000000000000000000000000000100000000000000080000000000000000000000
*0000000002000000000000000900000000000000000000000000000002000000000000000a0000
*0000000000000000000000000002000000000000000b0000000000000000000000000000000300
*0000000000000c00000000000000000000000000000003000000000000000d0000000000000000
*0000000000000003000000000000000e0000000000000000000000000000000400000000000000
*0f0000000000000000000000000000000400000000000000100000000000000000000000000000
*000400000000000000110000000000000000000000000000000400000000000000120000000000
*000000000000000000000400000000000000130000000000000000000000000000000400000000
*000000140000000000000000000000000000000400000000000000150000000000000000000000
*000000000400000000000000160000000000000000000000000000000400000000000000170000
*000000000000000000000000000400000000000000180000000000000000000000000000000400
*0000000000001900000000000000000000000000000004000000000000001a0000000000000000
*0000000000000005000000000000001b0000000000000000000000000000000500000000000000
*1c00000000000000000000000000000006000000000000001d0000000000000000000000000000
*0006000000000000001e00000000000000000000000000000006000000000000001f0000000000
*000000000000000000000600000000000000200000000000000000000000000000000600000000
*000000210000000000000000000000000000000600000000000000220000000000000000000000
*000000000600000000000000230000000000000000000000000000000600000000000000240000
*000000000000000000000000000600000000000000250000000000000000000000000000000600
*000000000000260000000000000000000000000000000600000000000000270000000000000000
*000000000000000600000000000000280000000000000000000000000000000600000000000000
*2900000000000000000000000000000006000000000000002a0000000000000000000000000000
*0006000000000000002b00000000000000000000000000000007000000000000002c0000000000
*0000000000000000000007000000000000002d0000000000000000000000000000000700000000
*0000002e00000000000000000000000000000007000000000000002f0000000000000000000000
*000000000700000000000000300000000000000000000000000000000700000000000000310000
*000000000000000000000000000700000000000000320000000000000000000000000000000700
*000000000000330000000000000000000000000000000800000000000000340000000000000000
*000000000000000800000000000000350000000000000000000000000000000800000000000000
*360000000000000000000000000000000800000000000000370000000000000000000000000000
*000800000000000000380000000000000000000000000000000800000000000000390000000000
*0000000000000000000008000000000000003a0000000000000000000000000000000800000000
*0000003b00000000000000000000000000000008000000000000003c0000000000000000000000
*0000000008000000000000003d00000000000000000000000000000009000000000000003e0000
*0000000000000000000000000009000000000000003f0000000000000000000000000000000900
*000000000000400000000000000000000000000000000a00000000000000410000000000000000
*000000000000000a00000000000000420000000000000000000000000000000a00000000000000
*430000000000000000000000000000000a00000000000000440000000000000000000000000000
*000a00000000000000450000000000000000000000000000000b00000000000000460000000000
*000000000000000000000b00000000000000470000000000000000000000000000000b00000000
*000000480000000000000000000000000000000c00000000000000490000000000000000000000
*000000000c000000000000004a0000000000000000000000000000000c000000000000004b0000
*000000000000000000000000000c000000000000004c0000000000000000000000000000000c00
*0000000000004d0000000000000000000000000000000c000000000000004e0000000000000000
*000000000000000d000000000000004f0000000000000000000000000000000d00000000000000
*500000000000000000000000000000000e00000000000000510000000000000000000000000000
*000f00000000000000520000000000000000000000000000000f00000000000000530000000000
*000000000000000000000f00000000000000540000000000000000000000000000000f00000000
*000000550000000000000000000000000000000f00000000000000560000000000000000000000
*000000000f00000000000000570000000000000000000000000000000f00000000000000580000
*000000000000000000000000000f00000000000000590000000000000000000000000000000f00
*0000000000005a00000000000000000000000000000010000000000000005b0000000000000000
*0000000000000011000000000000005c0000000000000000000000000000001100000000000000
*5d00000000000000000000000000000012000000000000005e0000000000000000000000000000
*0013000000000000005f0000000000000000000000000000001300000000000000600000000000
*000000000000000000001300000000000000610000000000000000000000000000001300000000
*000000620000000000000000000000000000001300000000000000630000000000000000000000
*000000001300000000000000640000000000000000000000000000001300000000000000650000
*000000000000000000000000001300000000000000660000000000000000000000000000001300
*000000000000670000000000000000000000000000001300000000000000680000000000000000
*000000000000001300000000000000690000000000000000000000000000001300000000000000
*6a00000000000000000000000000000013000000000000006b0000000000000000000000000000
*0013000000000000006c00000000000000000000000000000014000000000000006d0000000000
*0000000000000000000014000000000000006e0000000000000000000000000000001400000000
*0000006f0000000000000000000000000000001400000000000000700000000000000000000000
*000000001500000000000000710000000000000000000000000000001500000000000000720000
*000000000000000000000000001500000000000000730000000000000000000000000000001500
*000000000000740000000000000000000000000000001500000000000000750000000000000000
*000000000000001500000000000000760000000000000000000000000000001500000000000000
*770000000000000000000000000000001600000000000000780000000000000000000000000000
*0016000000000000007900000000000000000000000000000016000000000000007a0000000000
*0000000000000000000016000000000000007b0000000000000000000000000000001700000000
*0000007c00000000000000000000000000000018000000000000007d0000000000000000000000
*0000000018000000000000007e00000000000000000000000000000018000000000000007f0000
*000000000000000000000000001900000000000000800000000000000000000000000000001a00
*000000000000810000000000000000000000000000001a00000000000000820000000000000000
*000000000000001a00000000000000830000000000000000000000000000001b00000000000000
*840000000000000000000000000000001b00000000000000850000000000000000000000000000
*001b00000000000000860000000000000000000000000000001c00000000000000870000000000
*000000000000000000001c00000000000000880000000000000000000000000000001c00000000
*000000890000000000000000000000000000001c000000000000008a0000000000000000000000
*000000001c000000000000008b0000000000000000000000000000001d000000000000008c0000
*000000000000000000000000001d000000000000008d0000000000000000000000000000001d00
*0000000000008e0000000000000000000000000000001d000000000000008f0000000000000000
*000000000000001d00000000000000900000000000000000000000000000001d00000000000000
*910000000000000000000000000000001d00000000000000920000000000000000000000000000
*001d00000000000000930000000000000000000000000000001d00000000000000940000000000
*000000000000000000001d00000000000000950000000000000000000000000000001e00000000
*000000960000000000000000000000000000001e00000000000000970000000000000000000000
*000000001e00000000000000980000000000000000000000000000001e00000000000000990000
*000000000000000000000000001e000000000000009a0000000000000000000000000000001e00
*0000000000009b0000000000000000000000000000001e000000000000009c0000000000000000
*000000000000001e000000000000009d0000000000000000000000000000001e00000000000000
*9e0000000000000000000000000000001e000000000000009f0000000000000000000000000000
*001f00000000000000a00000000000000000000000000000001f00000000000000a10000000000
*000000000000000000001f00000000000000a20000000000000000000000000000001f00000000
*000000a30000000000000000000000000000001f00000000000000a40000000000000000000000
*000000001f00000000000000a50000000000000000000000000000001f00000000000000a60000
*000000000000000000000000001f00000000000000a70000000000000000000000000000001f00
*000000000000a80000000000000000000000000000001f00000000000000a90000000000000000
*000000000000001f00000000000000aa0000000000000000000000000000001f00000000000000
*ab0000000000000000000000000000001f00000000000000ac0000000000000000000000000000
*001f00000000000000ad0000000000000000000000000000001f00000000000000ae0000000000
*000000000000000000001f00000000000000af0000000000000000000000000000001f00000000
*000000b00000000000000000000000000000001f00000000000000b10000000000000000000000
*000000001f00000000000000b20000000000000000000000000000001f00000000000000b30000
*000000000000000000000000002000000000000000b40000000000000000000000000000002000
*000000000000b50000000000000000000000000000002000000000000000b60000000000000000
*00000000000000212300000000000000000000000000000022000108000000700000006f000000
*720000007400000061000000620000006c00000065010c00000065000000780000007000000065
*00000072000000690000006d000000650000006e00000074000000610000006c01150000006c00
*000069000000620000007200000061000000720000006900000065000000730000004000000068
*00000061000000730000006b000000650000006c0000006c0000002e0000006f00000072000000
*67000000000000000000000000000000000000010001140000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*280000004d0000005000000054000000430000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011500
*00006c000000690000006200000072000000610000007200000069000000650000007300000040
*0000006800000061000000730000006b000000650000006c0000006c0000002e0000006f000000
*720000006706000000000000000001030102240000005400000068000000690000007300000020
*00000074000000790000007000000065000000200000006d000000610000007900000020000000
*620000006500000020000000620000006500000073000000740000002000000072000000650000
*00610000006400000020000000690000006e0000006600000069000000780000002e0000002000
*000041000000200107010202000000630000002001040100000000000000000000000000000000
*0000000000000000010202000000200000006d0102060000002000000069000000730000002000
*000061000000200104010000000000000000b70000000000000023000000000000002401020100
*000020010702010000006d01020b00000020000000740000006800000061000000740000002000
*00006d0000006100000070000000730000000a0102100000002000000076000000610000006c00
*0000750000006500000073000000200000006f0000006600000020000000740000007900000070
*00000065000000200107020100000063010209000000200000007400000068000000720000006f
*0000007500000067000000680000002001070204000000750000006e0000006900000074010213
*00000020000000740000006f0000002000000076000000610000006c0000007500000065000000
*73000000200000006f000000660000002000000074000000790000007000000065000000200107
*02010000006d0102040000002e0000002000000041000000200107020100000063010201000000
*2d0104010000000000000000000000000000000000000000000000000101020a00000020000000
*6d000000610000007900000020000000610000006c000000730000006f0000000a010229000000
*20000000730000007500000070000000700000006c00000079000000200000006f000000700000
*0065000000720000006100000074000000690000006f0000006e00000073000000200000007700
*000068000000690000006300000068000000200000007400000061000000630000006b0000002d
*0000006f0000006e00000020000000610000006e0000006f000000740000006800000065000000
*7200000020010702010000006301021000000020000000740000006f0000002000000061000000
*6e000000200000006500000078000000690000007300000074000000690000006e000000670000
*00200104010000000000000000b700000000000000230000000000000024010201000000200107
*02010000006d01020d000000200000006f0000006e000000200000007400000068000000650000
*00200000006c0000006500000066000000740000000a010250000000200000006f000000720000
*002000000072000000690000006700000068000000740000002e00000020000000540000006800
*000065000000730000006500000020000000730000007000000065000000630000006900000061
*0000006c000000690000007a000000650000006400000020000000720000006500000064000000
*750000006300000074000000690000006f0000006e00000073000000200000006d000000610000
*0079000000200000006200000065000000200000006d0000006f00000072000000650000002000
*0000650000006600000066000000690000006300000069000000650000006e0000007400000020
*000000690000006e00000020000000730000006f0000006d000000650000002000000073000000
*63000000650000006e0000006100000072000000690000006f000000730000000a010224000000
*20000000610000006e000000640000002000000061000000720000006500000020000000750000
*00730000006500000064000000200000007700000068000000650000006e000000200000006100
*00007000000070000000720000006f000000700000007200000069000000610000007400000065
*00000020000000620000007900000020000000610000002001020900000047000000650000006e
*000000650000007200000061000000740000006f0000007201020c0000002e0000002000000054
*0000006800000065000000200000006e000000610000006d000000650000007300000020010401
*000000000000000003000000000000000000000000000000010102050000002000000061000000
*6e0000006400000020010401000000000000000002000000000000000000000000000000010102
*0600000020000000770000006f000000720000006b0000000a023d000000200000006200000079
*00000020000000610000006e000000610000006c0000006f000000670000007900000020000000
*740000006f000000200000007400000068000000650000002000000073000000790000006e0000
*006f0000006e000000790000006d0000006f0000007500000073000000200000006f0000007000
*000065000000720000006100000074000000690000006f0000006e000000730000002000000069
*0000006e00000020000000740000006800000065000000200000006c0000006900000073000000
*74000000200000006d0000006f0000006e0000006f00000069000000640000002e0000000a0103
*01024c0000005400000068000000690000007300000020000000630000006c0000006100000073
*000000730000002000000064000000650000006c00000069000000620000006500000072000000
*6100000074000000650000006c000000790000002000000061000000760000006f000000690000
*0064000000730000002000000066000000750000006e0000006300000074000000690000006f00
*00006e000000610000006c0000002d000000640000006500000070000000650000006e00000064
*000000650000006e000000630000006900000065000000730000002c0000002000000073000000
*6f0000002000000074000000680000006100000074000000200000002800000029000000200000
*0063000000610000006e0000002000000062000000650000002000000061000000200107020100
*0000630102090000002d0000005200000065000000640000007500000063000000650000007200
*00000a01020900000020000000660000006f0000007200000020000000610000006c0000006c00
*000020010702010000006301024a0000002c00000020000000610000006e000000640000002000
*0000730000006f000000200000006d000000610000006e0000007900000020000000630000006f
*0000006d0000006d0000006f0000006e0000002000000072000000650000006400000075000000
*630000006500000072000000730000002000000063000000610000006e00000020000000770000
*006f000000720000006b000000200000006f000000760000006500000072000000200000006d00
*0000750000006c0000007400000069000000700000006c00000065000000200000007400000079
*0000007000000065000000730000002c00000020000000660000006f0000007200000020000000
*690000006e0000007300000074000000610000006e00000063000000650000002c0000000a0102
*2000000020000000460000006900000072000000730000007400000020000000610000006e0000
*0064000000200000004c000000610000007300000074000000200000006d000000610000007900
*00002000000072000000650000006400000075000000630000006500000020000000620000006f
*000000740000006800000020010702010000006101020500000020000000610000006e00000064
*000000200104010000000000000000b80000000000000023000000000000002501020100000020
*010702010000006101020a0000002e0000002000000053000000690000006e0000006300000065
*00000020000000610000002001020900000047000000650000006e000000650000007200000061
*000000740000006f00000072010215000000200000006800000061000000730000002000000061
*00000020000000660000006900000078000000650000006400000020000000650000006c000000
*650000006d000000650000006e000000740000000a01025a000000200000007400000079000000
*70000000650000002c0000002000000074000000680000006500000020000000690000006e0000
*0070000000750000007400000020000000740000006f0000002000000074000000680000006500
*000020000000720000006500000064000000750000006300000065000000720000002000000069
*000000730000002000000067000000650000006e0000006500000072000000610000006c000000
*6c00000079000000200000006b0000006e0000006f000000770000006e00000020000000610000
*006e00000064000000200000006500000078000000740000007200000061000000630000007400
*0000690000006e000000670000002000000066000000720000006f0000006d0000002000000074
*0000006800000065000000200000006d0000006f0000006e0000006f0000006900000064000000
*20000000750000007300000075000000610000006c0000006c000000790000000a01025a000000
*200000006900000073000000200000007300000075000000660000006600000069000000630000
*0069000000650000006e0000007400000020000000740000006f00000020000000660000006900
*000078000000200000007400000068000000650000002000000072000000650000007300000075
*0000006c0000007400000020000000740000007900000070000000650000002e00000020000000
*430000006f0000006d00000062000000690000006e00000061000000740000006f000000720000
*007300000020000000610000007200000065000000200000006100000076000000610000006900
*00006c00000061000000620000006c0000006500000020000000660000006f0000007200000020
*0000006d0000006f0000007300000074000000200000007300000063000000650000006e000000
*6100000072000000690000006f0000007300000020000000770000006800000065000000720000
*00650000000a010258000000200000007400000068000000690000007300000020000000690000
*0073000000200000006e0000006f00000074000000200000007400000068000000650000002000
*0000630000006100000073000000650000002c00000020000000610000006e0000006400000020
*000000740000006800000065000000200000006600000065000000770000002000000072000000
*650000006d00000061000000690000006e000000690000006e0000006700000020000000630000
*00610000007300000065000000730000002000000063000000610000006e000000200000006200
*0000650000002000000068000000610000006e000000640000006c000000650000006400000020
*0000006200000079000000200000007500000073000000690000006e0000006700000020000000
*610000006e000000200000006500000078000000700000006c0000006900000063000000690000
*0074000000200000000a0212000000200000007400000079000000700000006500000020000000
*610000006e0000006e0000006f000000740000006100000074000000690000006f0000006e0000
*002e0000000a030102140000004d000000690000006e000000690000006d000000610000006c00
*000020000000640000006500000066000000690000006e0000006900000074000000690000006f
*0000006e0000003a00000020010401000000000000000001000000000000000000000000000000
*01010204000000200000006f000000720000002001040100000000000000000200000000000000
*00000000000000000102010000000a000000000000000103010217000000430000006f0000006e
*000000760000006500000072000000740000002000000061000000200000007600000061000000
*6c000000750000006500000020000000690000006e000000740000006f00000020000000610000
*00200104010000000000000000b70000000000000023000000000000002402010000000a000000
*000000000203010214000000410000007000000070000000650000006e00000064000000200000
*00610000002000000076000000610000006c000000750000006500000020000000740000006f00
*00002000000061000000200104010000000000000000b700000000000000230000000000000024
*022400000020000000660000006f00000072000000200000007500000073000000650000002000
*0000690000006e000000200000006c0000006500000066000000740000002d000000740000006f
*0000002d0000007200000069000000670000006800000074000000200000007200000065000000
*64000000750000006300000074000000690000006f0000006e0000000a00000000000000030301
*021700000050000000720000006500000070000000650000006e00000064000000200000006100
*00002000000076000000610000006c0000007500000065000000200000006f0000006e00000074
*0000006f0000002000000061000000200104010000000000000000b70000000000000023000000
*0000000024022800000020000000660000006f0000007200000020000000750000007300000065
*00000020000000640000007500000072000000690000006e000000670000002000000072000000
*690000006700000068000000740000002d000000740000006f0000002d0000006c000000650000
*006600000074000000200000007200000065000000640000007500000063000000740000006900
*00006f0000006e0000000a0000000000000004030102080000004100000070000000700000006c
*000000790000002000000061000000200104010000000000000000000000000000000000000000
*000000000101020600000020000000740000006f00000020000000610000002001040100000000
*00000000b900000000000000230000000000000026024b00000020000000630000006f0000006e
*0000007400000061000000690000006e00000065000000720000002c0000002000000061000000
*66000000740000006500000072000000200000006d000000610000007000000070000000690000
*006e000000670000002000000074000000680000006500000020000000630000006f0000006e00
*000074000000650000006e000000740000007300000020000000690000006e000000740000006f
*000000200000006100000020000000730000007500000069000000740000006100000062000000
*6c0000006500000020000000660000006f000000720000006d00000020000000660000006f0000
*007200000020000000720000006500000064000000750000006300000074000000690000006f00
*00006e0000002e0000000a0000000000000005030102080000004100000070000000700000006c
*000000790000002000000061000000200104010000000000000000000000000000000000000000
*000000000101020600000020000000740000006f00000020000000610000002001040100000000
*00000000b90000000000000023000000000000002601021e000000200000006d00000061000000
*7000000070000000690000006e0000006700000020000000650000006100000063000000680000
*0020000000650000006c000000650000006d000000650000006e00000074000000200000007400
*000068000000720000006f00000075000000670000006800000020010401000000000000000001
*0000000000000000000000000000000102010000000a2400000000000000ba00000000000000bb
*00000000000000bc00000000000000b700000000000000bd00000000000000be00000000000000
*bf00000000000000c000000000000000c100000000000000c200000000000000c3000000000000
*00c400000000000000c500000000000000c600000000000000c700000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d40000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000708
*000000000000000000000000000000010000000000000002000000000000000300000000000000
*040000000000000005000000000000000700000000000000060000000000000000000000000000
*00020001140000006e0000006f0000006e0000002d000000700000006f00000072000000740000
*0061000000620000006c0000006500000020000000280000004d00000050000000540000004300
*00007300000029010c0000006500000078000000700000006500000072000000690000006d0000
*00650000006e00000074000000610000006c01150000006c000000690000006200000072000000
*6100000072000000690000006500000073000000400000006800000061000000730000006b0000
*00650000006c0000006c0000002e0000006f000000720000006701000000000000000803010222
*00000050000000720000006f000000760000006900000064000000650000007300000020000000
*61000000200000006d000000650000006300000068000000610000006e00000069000000730000
*006d00000020000000660000006f00000072000000200000007400000068000000650000002000
*000055000000540000004600000038000000200104010000000000000000b70000000000000023
*0000000000000024023600000020000000740000006f0000002000000072000000650000007000
*00006f000000720000007400000020000000690000006e00000076000000610000006c00000069
*000000640000002000000063000000680000006100000072000000610000006300000074000000
*65000000720000007300000020000000740000006f000000200000006f0000006e000000650000
*00200000006f00000072000000200000006d0000006f0000007200000065000000200000006d00
*00006f0000006e0000006f0000006900000064000000730000002e0000000a2700000000000000
*ba00000000000000bb00000000000000bc00000000000000b700000000000000bd000000000000
*00be00000000000000bf00000000000000c000000000000000c100000000000000c20000000000
*0000c300000000000000c400000000000000c500000000000000c600000000000000c700000000
*000000c800000000000000c900000000000000ca00000000000000cb00000000000000cc000000
*00000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d10000
*0000000000d200000000000000d300000000000000d40000000000000000000000000000000100
*000000000000020000000000000003000000000000000400000000000000050000000000000006
*000000000000000700000000000000080000000000000009000000000000000a03000000000000
*0008000000000000000a0000000000000009000000000000000000000000000000030001140000
*006e0000006f0000006e0000002d000000700000006f0000007200000074000000610000006200
*00006c0000006500000020000000280000004d0000005000000054000000430000007300000029
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c01150000006c00000069000000620000007200000061000000720000
*00690000006500000073000000400000006800000061000000730000006b000000650000006c00
*00006c0000002e0000006f000000720000006701000000000000000b0301020300000049000000
*6600000020010702010000006d0102060000002000000069000000730000002000000061000000
*2001070201000000630102010000002d0105070000005200000065000000640000007500000063
*000000650000007201020c0000002c000000200000007400000068000000650000006e00000020
*0000006d0000002000000069000000730000002001070102030000002800000063000000200104
*0200000000000000000c0000000000000000000000000000000300000000000000000b00000000
*0000000000000000000000030203000000200000006d000000290102010000002d010507000000
*520000006500000064000000750000006300000065000000720102010000000a01022800000020
*000000200000002000000054000000680000006900000073000000200000006300000061000000
*6e0000002000000062000000650000002000000075000000730000006500000064000000200000
*00740000006f00000020000000710000007500000069000000630000006b0000006c0000007900
*00002000000073000000650000006c000000650000006300000074000000200000006100000020
*0105070000005200000065000000640000007500000063000000650000007201020e0000002000
*0000660000006f0000007200000020000000750000007300000065000000200000006100000073
*0000002000000061000000200104010100000000000000d50102010000000a0102030000002000
*000020000000200104010100000000000000d602020000002e0000000a2700000000000000ba00
*000000000000bb00000000000000bc00000000000000b700000000000000bd00000000000000be
*00000000000000bf00000000000000c000000000000000c100000000000000c200000000000000
*c300000000000000c400000000000000c500000000000000c600000000000000c7000000000000
*00c800000000000000c900000000000000ca00000000000000cb00000000000000cc0000000000
*0000cd00000000000000ce00000000000000cf00000000000000d000000000000000d100000000
*000000d200000000000000d300000000000000d400000000000000000000000000000001000000
*000000000200000000000000030000000000000004000000000000000500000000000000060000
*000000000007000000000000000b000000000000000c000000000000000d03000000000000000b
*000000000000000c000000000000000d0000000000000000000000000000000400000000040000
*00000000000e03010204000000540000006800000065000000200104010000000000000000b700
*000000000000230000000000000024010201000000200107010201000000280102010000002701
*0211000000750000006e000000690000006f0000006e0000005700000069000000740000006800
*0000200000006d000000610000007000000070000000650000006e000000640102010000002701
*02010000002c010401000000000000000018000000000000000000000000000000040201000000
*29022100000020000000660000006f0000007200000020000000630000006f0000006e00000074
*00000061000000690000006e000000650000007200000073000000200000006600000075000000
*6c0000006c000000200000006f00000066000000200000006d0000006f0000006e0000006f0000
*006900000064000000730000002e0000000a000000000000001103024d000000500000006f0000
*006c000000790000006d0000006f00000072000000700000006800000069000000630000002000
*0000630000006f0000006e0000007400000061000000690000006e000000650000007200000073
*000000200000007400000068000000610000007400000020000000770000006500000020000000
*63000000610000006e00000020000000730000007500000070000000700000006c000000790000
*0020000000610000006e000000200000006f000000700000006500000072000000610000007400
*0000690000006f0000006e00000020000000740000006f0000002000000068000000610000006e
*000000640000006c0000006500000020000000750000006e000000690000006f0000006e000000
*7300000020000000770000006900000074000000680000000a0000000000000014030102040000
*00540000006800000065000000200104010000000000000000b700000000000000230000000000
*000024010201000000200107010201000000280104010000000000000000190000000000000000
*00000000000000040102010000002c010401000000000000000018000000000000000000000000
*0000000402010000002902010000000a00000000000000170301021d0000004100000020000000
*430000006f0000006e0000007400000061000000690000006e0000006500000072000000200000
*007300000075000000690000007400000061000000620000006c00000065000000200000006600
*00006f000000720000002000000074000000680000006500000020010402000000000000000015
*000000000000000000000000000000040000000000000000140000000000000000000000000000
*0004010201000000200104010000000000000000b7000000000000002300000000000000240201
*0000000a1300000000000000ba00000000000000bc00000000000000b700000000000000000000
*00000000000100000000000000020000000000000003000000000000000e000000000000000f00
*000000000000100000000000000011000000000000001200000000000000130000000000000014
*000000000000001500000000000000160000000000000017000000000000001800000000000000
*190c00000000000000170000000000000018000000000000001900000000000000140000000000
*000015000000000000001600000000000000110000000000000013000000000000001200000000
*0000000e000000000000000f000000000000001000000000000000000000000000000005000114
*0000006e0000006f0000006e0000002d000000700000006f000000720000007400000061000000
*620000006c0000006500000020000000280000004d000000500000005400000043000000730000
*0029010c0000006500000078000000700000006500000072000000690000006d00000065000000
*6e00000074000000610000006c01150000006c0000006900000062000000720000006100000072
*000000690000006500000073000000400000006800000061000000730000006b00000065000000
*6c0000006c0000002e0000006f0000007200000067002900000000000000ba00000000000000bb
*00000000000000bc00000000000000b700000000000000bd00000000000000be00000000000000
*bf00000000000000c000000000000000c100000000000000c200000000000000c3000000000000
*00c400000000000000c500000000000000c600000000000000c700000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d40000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000700
*000000000000080000000000000009000000000000000a000000000000001a000000000000001b
*02000000000000001a000000000000001b00000000000000000000000000000006000108000000
*700000006f000000720000007400000061000000620000006c00000065010c0000006500000078
*000000700000006500000072000000690000006d000000650000006e0000007400000061000000
*6c01150000006c0000006900000062000000720000006100000072000000690000006500000073
*000000400000006800000061000000730000006b000000650000006c0000006c0000002e000000
*6f000000720000006705000000000000001c030102020000006100000020010401000000000000
*000025000000000000000000000000000000060102190000002000000074000000720000006100
*00006e00000073000000660000006f000000720000006d00000065000000720000002000000074
*000000680000006100000074000000200000007400000072000000650000006100000074000000
*73000000200104010000000000000000d700000000000000230000000000000027010204000000
*200000006100000073000000200104010000000000000000d80000000000000028000000000000
*00290102010000000a010215000000200000005400000068000000690000007300000020000000
*6c00000065000000740000007300000020000000790000006f0000007500000020000000750000
*00730000006500000020000000610000002001020a000000420000007900000074000000650000
*00530000007400000072000000690000006e000000670102060000002000000061000000730000
*002000000061000000200104010000000000000000d80000000000000028000000000000002901
*022000000020000000730000006f00000075000000720000006300000065000000200000007700
*00006900000074000000680000006f000000750000007400000020000000670000006f00000069
*0000006e00000067000000200000007400000068000000720000006f0000007500000067000000
*680000002000000061000000200104010000000000000000b70000000000000023000000000000
*0024010212000000200000007400000072000000610000006e00000073000000660000006f0000
*00720000006d0000006500000072000000200000006c000000690000006b000000650000002001
*02040000005500000054000000460000003802010000000a000000000000001f03010202000000
*610000002001040100000000000000002500000000000000000000000000000006024d00000020
*0000007400000072000000610000006e00000073000000660000006f000000720000006d000000
*650000007200000020000000740000006800000061000000740000002000000061000000730000
*006b00000073000000200000006f0000006e0000006c0000007900000020000000660000006f00
*000072000000200000007400000068000000650000002000000076000000610000006c00000075
*000000650000007300000020000000630000006f0000006e000000740000006100000069000000
*6e000000650000006400000020000000690000006e00000020000000610000006e000000200000
*00690000006e000000640000006500000078000000650000006400000020000000630000006f00
*00006e0000007400000061000000690000006e00000065000000720000000a0000000000000022
*030102020000006100000020010401000000000000000025000000000000000000000000000000
*060241000000200000007400000072000000610000006e00000073000000660000006f00000072
*0000006d0000006500000072000000200000007400000068000000610000007400000020000000
*61000000730000006b00000073000000200000006f0000006e0000006c00000079000000200000
*00660000006f0000007200000020000000740000006800000065000000200000006b0000006500
*00007900000073000000200000006f0000006600000020000000610000006e0000002000000069
*0000006e000000640000006500000078000000650000006400000020000000630000006f000000
*6e0000007400000061000000690000006e00000065000000720000000a00000000000000250301
*02130000006d000000690000006e000000690000006d000000610000006c000000200000006400
*00006500000066000000690000006e0000006900000074000000690000006f0000006e00000020
*01040100000000000000002700000000000000000000000000000006010204000000200000006f
*000000720000002001040100000000000000002800000000000000000000000000000006020100
*00000a000000000000002a030102080000004100000070000000700000006c0000007900000020
*00000061000000200104010000000000000000000000000000000000000000000000000101021f
*000000200000006400000069000000720000006500000063000000740000006c00000079000000
*20000000740000006f0000002000000074000000680000006500000020000000650000006c0000
*00650000006d000000650000006e0000007400000073000000200000006f000000660000002000
*000061000000200104010000000000000000250000000000000000000000000000000602010000
*000a3300000000000000ba00000000000000bb00000000000000bc00000000000000b700000000
*000000bd00000000000000be00000000000000bf00000000000000c000000000000000c1000000
*00000000c200000000000000c300000000000000c400000000000000c500000000000000c60000
*0000000000c700000000000000c800000000000000c900000000000000ca00000000000000cb00
*000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d0
*00000000000000d100000000000000d200000000000000d300000000000000d400000000000000
*000000000000000001000000000000000200000000000000030000000000000004000000000000
*000500000000000000060000000000000007000000000000001c000000000000001d0000000000
*00001e000000000000001f00000000000000200000000000000021000000000000002200000000
*000000230000000000000024000000000000002500000000000000260000000000000027000000
*00000000280000000000000029000000000000002a0f0000000000000025000000000000002600
*0000000000002700000000000000280000000000000029000000000000002a0000000000000022
*00000000000000230000000000000024000000000000001f000000000000002000000000000000
*21000000000000001c000000000000001d000000000000001e0000000000000000000000000000
*00070001270000006e0000006f0000006e0000002d000000700000006f00000072000000740000
*0061000000620000006c0000006500000020000000280000004d00000050000000540000004300
*0000730000002c000000200000004f0000007600000065000000720000006c0000006f00000061
*000000640000006500000064000000530000007400000072000000690000006e00000067000000
*7300000029010c0000006500000078000000700000006500000072000000690000006d00000065
*0000006e00000074000000610000006c01150000006c0000006900000062000000720000006100
*000072000000690000006500000073000000400000006800000061000000730000006b00000065
*0000006c0000006c0000002e0000006f000000720000006706000000000000002b030102020000
*0041000000200104010000000000000000b70000000000000023000000000000002401023a0000
*00200000006f000000660000002000000070000000610000007200000074000000690000006100
*00006c00000020000000690000006e000000660000006f000000720000006d0000006100000074
*000000690000006f0000006e0000002000000061000000620000006f0000007500000074000000
*200000006c0000006f000000630000006100000074000000690000006f0000006e000000730000
*0020000000690000006e000000200000006100000020000000730000006f000000750000007200
*000063000000650000002000000066000000690000006c000000650000002e0000000a025f0000
*002000000020000000200000005400000068000000690000007300000020000000690000007300
*000020000000700000006f0000006c000000790000006d0000006f000000720000007000000068
*000000690000006300000020000000690000006e00000020000000740000006800000065000000
*200000006b000000690000006e00000064000000200000006f0000006600000020000000690000
*006e000000660000006f000000720000006d0000006100000074000000690000006f0000006e00
*000020000000790000006f000000750000002000000077000000610000006e0000007400000020
*000000740000006f000000200000006d00000061000000690000006e0000007400000061000000
*690000006e0000002000000061000000620000006f000000750000007400000020000000650000
*0061000000630000006800000020000000730000006f0000007500000072000000630000006500
*00002000000066000000690000006c000000650000002e0000000a000000000000002e03023f00
*0000430000006f0000006d00000070000000750000007400000065000000200000007400000068
*00000065000000200000006c0000006f000000630000006100000074000000690000006f000000
*6e000000200000006f0000006600000020000000740000006800000065000000200000006e0000
*00650000007800000074000000200000007300000074000000610000006e000000640000006100
*0000720000006400000020000000380000002d000000630000006f0000006c000000750000006d
*0000006e00000020000000610000006c00000069000000670000006e0000006500000064000000
*200000007400000061000000620000000a000000000000002f030102350000006c000000690000
*00660000007400000020000000690000006e000000660000006f000000720000006d0000006100
*000074000000690000006f0000006e0000002000000061000000620000006f0000007500000074
*000000200000006100000020000000730000006f00000075000000720000006300000065000000
*2000000066000000690000006c0000006500000020000000690000006e000000740000006f0000
*002000000061000000200000007300000074000000610000007200000074000000690000006e00
*0000670000002001040100000000000000002b00000000000000000000000000000007020f0000
*0020000000660000006f0000007200000020000000740000006800000061000000740000002000
*000066000000690000006c000000650000000a000000000000003003026a000000650000007800
*000074000000720000006100000063000000740000002000000070000000610000007200000074
*00000069000000610000006c00000020000000690000006e000000660000006f00000072000000
*6d0000006100000074000000690000006f0000006e0000002000000061000000620000006f0000
*007500000074000000200000007400000068000000650000002000000063000000750000007200
*000072000000650000006e0000007400000020000000630000006f0000006c000000750000006d
*0000006e0000002c000000200000006500000076000000650000006e0000002000000069000000
*6e0000002000000074000000680000006500000020000000610000006200000073000000650000
*006e0000006300000065000000200000006f00000066000000200000006b0000006e0000006f00
*0000770000006c00000065000000640000006700000065000000200000006f0000006600000020
*00000074000000680000006500000020000000730000006f000000750000007200000063000000
*650000002000000066000000690000006c000000650000000a0000000000000031030246000000
*650000007800000074000000720000006100000063000000740000002000000070000000610000
*00720000007400000069000000610000006c00000020000000690000006e000000660000006f00
*0000720000006d0000006100000074000000690000006f0000006e000000200000006100000062
*0000006f0000007500000074000000200000007400000068000000650000002000000063000000
*750000007200000072000000650000006e00000074000000200000006c000000690000006e0000
*0065000000200000006e000000750000006d000000620000006500000072000000200000006900
*00006600000020000000700000006f000000730000007300000069000000620000006c00000065
*0000000a000000000000003203023c000000650000007800000074000000720000006100000063
*000000740000002000000074000000680000006500000020000000730000007400000061000000
*6e0000006400000061000000720000006400000020000000660000006f000000720000006d0000
*00610000007400000020000000660000006f0000007200000020000000610000006e0000002000
*00006100000062000000730000006f0000006c0000007500000074000000650000002000000073
*0000006f0000007500000072000000630000006500000020000000700000006f00000073000000
*6900000074000000690000006f0000006e0000000a2f00000000000000ba00000000000000bb00
*000000000000bc00000000000000b700000000000000bd00000000000000be00000000000000bf
*00000000000000c000000000000000c100000000000000c200000000000000c300000000000000
*c400000000000000c500000000000000c600000000000000c700000000000000c8000000000000
*00c900000000000000ca00000000000000cb00000000000000cc00000000000000cd0000000000
*0000ce00000000000000cf00000000000000d000000000000000d100000000000000d200000000
*000000d300000000000000d4000000000000000000000000000000010000000000000002000000
*000000000300000000000000040000000000000005000000000000000600000000000000070000
*0000000000080000000000000009000000000000000a000000000000002b000000000000002c00
*0000000000002d000000000000002e000000000000002f00000000000000300000000000000031
*000000000000003208000000000000002e000000000000002b000000000000002d000000000000
*002c00000000000000310000000000000030000000000000002f00000000000000320000000000
*00000000000000000000080001270000006e0000006f0000006e0000002d000000700000006f00
*0000720000007400000061000000620000006c0000006500000020000000280000004d00000050
*0000005400000043000000730000002c000000200000004f000000760000006500000072000000
*6c0000006f00000061000000640000006500000064000000530000007400000072000000690000
*006e000000670000007300000029010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c01150000006c0000006900000062
*000000720000006100000072000000690000006500000073000000400000006800000061000000
*730000006b000000650000006c0000006c0000002e0000006f0000007200000067080000000000
*000033030102020000004100000020010401000000000000000008000000000000000000000000
*000000020226000000200000007400000072000000610000006e00000073000000660000006f00
*0000720000006d0000006500000072000000200000007400000068000000610000007400000020
*000000730000007400000072000000690000007000000073000000200000006f00000075000000
*74000000200000006e00000065000000770000006c000000690000006e00000065000000730000
*000a00000000000000350301020200000041000000200104010000000000000000080000000000
*0000000000000000000002010236000000200000007400000072000000610000006e0000007300
*0000660000006f000000720000006d000000650000007200000020000000740000006800000061
*000000740000002000000073000000740000007200000069000000700000007300000020000000
*6f000000750000007400000020000000610000006e000000790000002000000063000000680000
*0061000000720000006100000063000000740000006500000072000000200000006d0000006100
*000074000000630000006800000065000000640000002000000062000000790000002001040100
*00000000000000d90000000000000023000000000000002a02010000000a000000000000003703
*010202000000410000002001040100000000000000000800000000000000000000000000000002
*01021b000000200000007400000072000000610000006e00000073000000660000006f00000072
*0000006d0000006500000072000000200000007400000068000000610000007400000020000000
*620000007200000065000000610000006b00000073000000200000006100000020010401000000
*0000000000d8000000000000002800000000000000290102010000002001040100000000000000
*00250000000000000000000000000000000601022000000020000000690000006e000000740000
*006f0000002000000064000000690000007300000074000000690000006e000000630000007400
*0000200000006c000000690000006e00000065000000730000002c000000200000006600000065
*0000006500000064000000690000006e0000006700000020000000610000002001040100000000
*00000000d800000000000000280000000000000029010201000000200104010000000000000000
*000000000000000000000000000000000102140000002000000065000000610000006300000068
*000000200000006c000000690000006e0000006500000020000000690000006e00000020000000
*7400000075000000720000006e0000002e0000000a000000000000003803010202000000410000
*00200104010000000000000000080000000000000000000000000000000201021b000000200000
*007400000072000000610000006e00000073000000660000006f000000720000006d0000006500
*000072000000200000007400000068000000610000007400000020000000620000007200000065
*000000610000006b000000730000002000000061000000200104010000000000000000d8000000
*000000002800000000000000290102010000002001040100000000000000002500000000000000
*00000000000000000601022000000020000000690000006e000000740000006f00000020000000
*64000000690000007300000074000000690000006e000000630000007400000020000000770000
*006f0000007200000064000000730000002c000000200000006600000065000000650000006400
*0000690000006e000000670000002000000061000000200104010000000000000000d800000000
*000000280000000000000029010201000000200104010000000000000000000000000000000000
*000000000000000102130000002000000065000000610000006300000068000000200000006c00
*0000690000006e0000006500000020000000690000006e00000020000000740000007500000072
*0000006e0000000a00000000000000390301022300000045000000780000007400000072000000
*61000000630000007400000020000000740000006800000065000000200000006d000000610000
*00740000006300000068000000650000006400000020000000770000006f000000720000006400
*0000730000002000000066000000720000006f0000006d00000020000000740000006800000065
*000000200104010000000000000000380000000000000000000000000000000801020100000020
*0104010000000000000000b70000000000000023000000000000002402010000000a0000000000
*00003a030102230000004500000078000000740000007200000061000000630000007400000020
*000000740000006800000065000000200000006d00000061000000740000006300000068000000
*6500000064000000200000006c000000690000006e000000650000007300000020000000660000
*00720000006f0000006d0000002000000074000000680000006500000020010401000000000000
*00003700000000000000000000000000000008010201000000200104010000000000000000b700
*00000000000023000000000000002402010000000a000000000000003b03025e00000055000000
*74000000690000006c0000006900000074000000790000002000000066000000750000006e0000
*006300000074000000690000006f0000006e00000020000000740000006f000000200000006500
*000078000000740000007200000061000000630000007400000020000000770000006f00000072
*0000006400000073000000200000007500000073000000690000006e0000006700000020000000
*610000006300000063000000750000006d000000750000006c00000061000000740000006f0000
*00720000002c00000020000000690000006e000000730000006900000064000000650000002d00
*0000770000006f00000072000000640000002c00000020000000610000006e0000006400000020
*000000750000006e00000074000000690000006c0000002d0000006e0000006500000078000000
*740000002d000000770000006f0000007200000064000000200000006d0000006f0000006e0000
*006f0000006900000064000000730000000a000000000000003c03025e00000055000000740000
*00690000006c0000006900000074000000790000002000000066000000750000006e0000006300
*000074000000690000006f0000006e00000020000000740000006f000000200000006500000078
*0000007400000072000000610000006300000074000000200000006c000000690000006e000000
*6500000073000000200000007500000073000000690000006e0000006700000020000000610000
*006300000063000000750000006d000000750000006c00000061000000740000006f0000007200
*00002c00000020000000690000006e000000730000006900000064000000650000002d0000006c
*000000690000006e000000650000002c00000020000000610000006e0000006400000020000000
*750000006e00000074000000690000006c0000002d0000006e0000006500000078000000740000
*002d0000006c000000690000006e00000065000000200000006d0000006f0000006e0000006f00
*00006900000064000000730000000a3100000000000000ba00000000000000bb00000000000000
*bc00000000000000b700000000000000bd00000000000000be00000000000000bf000000000000
*00c000000000000000c100000000000000c200000000000000c300000000000000c40000000000
*0000c500000000000000c600000000000000c700000000000000c800000000000000c900000000
*000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce000000
*00000000cf00000000000000d000000000000000d100000000000000d200000000000000d30000
*0000000000d4000000000000000000000000000000010000000000000002000000000000000300
*000000000000040000000000000005000000000000000600000000000000070000000000000008
*0000000000000009000000000000000a0000000000000033000000000000003400000000000000
*350000000000000036000000000000003700000000000000380000000000000039000000000000
*003a000000000000003b000000000000003c0a0000000000000038000000000000003900000000
*000000350000000000000036000000000000003b0000000000000037000000000000003a000000
*00000000330000000000000034000000000000003c000000000000000000000000000000090001
*08000000700000006f000000720000007400000061000000620000006c00000065010c00000065
*00000078000000700000006500000072000000690000006d000000650000006e00000074000000
*610000006c01150000006c00000069000000620000007200000061000000720000006900000065
*00000073000000400000006800000061000000730000006b000000650000006c0000006c000000
*2e0000006f0000007200000067002700000000000000ba00000000000000bb00000000000000bc
*00000000000000b700000000000000bd00000000000000be00000000000000bf00000000000000
*c000000000000000c100000000000000c200000000000000c300000000000000c4000000000000
*00c500000000000000c600000000000000c700000000000000c800000000000000c90000000000
*0000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000
*000000cf00000000000000d000000000000000d100000000000000d200000000000000d3000000
*00000000d400000000000000000000000000000001000000000000000200000000000000030000
*000000000004000000000000000500000000000000060000000000000007000000000000003d00
*0000000000003e000000000000003f03000000000000003d000000000000003e00000000000000
*3f0000000000000000000000000000000a00000000003800000000000000ba00000000000000bb
*00000000000000bc00000000000000b700000000000000bd00000000000000be00000000000000
*bf00000000000000c000000000000000c100000000000000c200000000000000c3000000000000
*00c400000000000000c500000000000000c600000000000000c700000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d40000000000000000000000000000000100000000000000020000
*000000000003000000000000000400000000000000050000000000000006000000000000000700
*0000000000001c000000000000001d000000000000001e000000000000001f0000000000000020
*000000000000002100000000000000220000000000000023000000000000002400000000000000
*250000000000000026000000000000002700000000000000280000000000000029000000000000
*002a00000000000000400000000000000041000000000000004200000000000000430000000000
*000044050000000000000040000000000000004100000000000000420000000000000043000000
*00000000440000000000000000000000000000000b0001280000006e0000006f0000006e000000
*2d000000700000006f000000720000007400000061000000620000006c00000065000000200000
*00280000006f0000007600000065000000720000006c0000006f00000061000000640000006500
*00006400000020000000730000007400000072000000690000006e00000067000000730000002c
*000000200000004d0000005000000054000000430000007300000029010c000000650000007800
*0000700000006500000072000000690000006d000000650000006e00000074000000610000006c
*01150000006c000000690000006200000072000000610000007200000069000000650000007300
*0000400000006800000061000000730000006b000000650000006c0000006c0000002e0000006f
*0000007200000067002700000000000000ba00000000000000bb00000000000000bc0000000000
*0000b700000000000000bd00000000000000be00000000000000bf00000000000000c000000000
*000000c100000000000000c200000000000000c300000000000000c400000000000000c5000000
*00000000c600000000000000c700000000000000c800000000000000c900000000000000ca0000
*0000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf00
*000000000000d000000000000000d100000000000000d200000000000000d300000000000000d4
*000000000000000000000000000000010000000000000002000000000000000300000000000000
*040000000000000005000000000000000600000000000000070000000000000045000000000000
*004600000000000000470300000000000000450000000000000046000000000000004700000000
*00000000000000000000000c000108000000700000006f00000072000000740000006100000062
*0000006c00000065010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c01150000006c0000006900000062000000720000
*006100000072000000690000006500000073000000400000006800000061000000730000006b00
*0000650000006c0000006c0000002e0000006f0000007200000067030000000000000048030102
*0200000041000000200104010000000000000000b7000000000000002300000000000000240102
*0b000000200000006900000073000000200000006a000000750000007300000074000000200000
*0061000000200104010000000000000000da0000000000000023000000000000002b0213000000
*2000000077000000690000007400000068000000200000006f0000006e00000065000000200000
*006f000000620000006a0000006500000063000000740000002e000000200000000a0000000000
*00004a03010204000000540000006800000065000000200104010000000000000000b700000000
*000000230000000000000024010237000000200000006f00000066000000200000007400000068
*0000006500000020000000650000006e000000640000006f0000006d0000006f00000072000000
*700000006800000069000000730000006d00000073000000200000006f00000076000000650000
*007200000020000000730000006f0000006d00000065000000200000006f000000620000006a00
*000065000000630000007400000020000000690000006e00000020000000610000006e00000020
*000000610000007200000062000000690000007400000072000000610000007200000079000000
*200104010000000000000000da0000000000000023000000000000002b02020000002e0000000a
*000000000000004d0301020c000000450000007800000074000000720000006100000063000000
*7400000020000000740000006800000065000000200104010000000000000000b7000000000000
*0023000000000000002401021e0000002000000066000000720000006f0000006d000000200000
*006900000074000000730000002000000072000000650000007000000072000000650000007300
*0000650000006e000000740000006100000074000000690000006f0000006e0000002000000061
*000000730000002000000061000000200104010000000000000000da0000000000000023000000
*000000002b02010000000a2f00000000000000ba00000000000000bb00000000000000bc000000
*00000000b700000000000000bd00000000000000be00000000000000bf00000000000000c00000
*0000000000c100000000000000c200000000000000c300000000000000c400000000000000c500
*000000000000c600000000000000c700000000000000c800000000000000c900000000000000ca
*00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d400000000000000db00000000000000dc00000000000000dd00000000000000de0000000000
*0000da000000000000000000000000000000010000000000000002000000000000000300000000
*000000040000000000000005000000000000000600000000000000070000000000000048000000
*0000000049000000000000004a000000000000004b000000000000004c000000000000004d0600
*0000000000004a000000000000004b000000000000004c00000000000000480000000000000049
*000000000000004d0000000000000000000000000000000d000108000000700000006f00000072
*0000007400000061000000620000006c00000065010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c01150000006c0000
*006900000062000000720000006100000072000000690000006500000073000000400000006800
*000061000000730000006b000000650000006c0000006c0000002e0000006f0000007200000067
*001e00000000000000ba00000000000000bb00000000000000bc00000000000000b70000000000
*0000bd00000000000000be00000000000000bf00000000000000c000000000000000c100000000
*000000c200000000000000c300000000000000c400000000000000c500000000000000c6000000
*00000000c700000000000000c800000000000000c900000000000000ca00000000000000cb0000
*0000000000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000
*000000000000d100000000000000d200000000000000d300000000000000d4000000000000004e
*000000000000004f02000000000000004e000000000000004f0000000000000000000000000000
*000e000108000000700000006f000000720000007400000061000000620000006c00000065010c
*0000006500000078000000700000006500000072000000690000006d000000650000006e000000
*74000000610000006c01150000006c000000690000006200000072000000610000007200000069
*0000006500000073000000400000006800000061000000730000006b000000650000006c000000
*6c0000002e0000006f0000007200000067001f00000000000000ba00000000000000bb00000000
*000000bc00000000000000b700000000000000bd00000000000000be00000000000000bf000000
*00000000c000000000000000c100000000000000c200000000000000c300000000000000c40000
*0000000000c500000000000000c600000000000000c700000000000000c800000000000000c900
*000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce
*00000000000000cf00000000000000d000000000000000d100000000000000d200000000000000
*d300000000000000d4000000000000004e000000000000004f0000000000000050010000000000
*0000500000000000000000000000000000000f000122000000700000006f000000720000007400
*000061000000620000006c00000065000000200000002800000062000000750000007400000020
*000000690000006e0000007300000074000000610000006e000000630000006500000073000000
*20000000750000007300000065000000200000004d000000500000005400000043000000730000
*0029010c0000006500000078000000700000006500000072000000690000006d00000065000000
*6e00000074000000610000006c01150000006c0000006900000062000000720000006100000072
*000000690000006500000073000000400000006800000061000000730000006b00000065000000
*6c0000006c0000002e0000006f00000072000000670200000000000000510301020a0000004300
*00006f0000006e0000007600000065000000720000007400000020000000610000002001040100
*00000000000000b70000000000000023000000000000002401020800000020000000690000006e
*000000740000006f00000020000000610000002001040100000000000000005700000000000000
*00000000000000000f01020c0000002e000000200000004d0000006e000000650000006d000000
*6f0000006e00000069000000630000003a000000200107021b0000004500000078000000700000
*002000000061000000200000002a00000020000000450000007800000070000000200000006200
*0000200000003d0000002000000045000000780000007000000020000000280000006100000020
*0000002b00000020000000620000002902010000000a00000000000000540301020a0000004300
*00006f0000006e0000007600000065000000720000007400000020000000610000002001040100
*00000000000000570000000000000000000000000000000f01020800000020000000690000006e
*000000740000006f0000002000000061000000200104010000000000000000b700000000000000
*23000000000000002401020c0000002e000000200000004d0000006e000000650000006d000000
*6f0000006e00000069000000630000003a000000200107021b0000004c0000006f000000670000
*002000000061000000200000002b000000200000004c0000006f00000067000000200000006200
*0000200000003d000000200000004c0000006f0000006700000020000000280000006100000020
*0000002a00000020000000620000002902010000000a2700000000000000ba00000000000000bb
*00000000000000bc00000000000000b700000000000000bd00000000000000be00000000000000
*bf00000000000000c000000000000000c100000000000000c200000000000000c3000000000000
*00c400000000000000c500000000000000c600000000000000c700000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d4000000000000004e000000000000004f00000000000000510000
*000000000052000000000000005300000000000000540000000000000055000000000000005600
*000000000000570000000000000058000000000000005909000000000000005700000000000000
*580000000000000059000000000000005400000000000000550000000000000056000000000000
*005100000000000000520000000000000053000000000000000000000000000000100001080000
*00700000006f000000720000007400000061000000620000006c00000065010c00000065000000
*78000000700000006500000072000000690000006d000000650000006e00000074000000610000
*006c01150000006c00000069000000620000007200000061000000720000006900000065000000
*73000000400000006800000061000000730000006b000000650000006c0000006c0000002e0000
*006f0000007200000067002900000000000000ba00000000000000bb00000000000000bc000000
*00000000b700000000000000bd00000000000000be00000000000000bf00000000000000c00000
*0000000000c100000000000000c200000000000000c300000000000000c400000000000000c500
*000000000000c600000000000000c700000000000000c800000000000000c900000000000000ca
*00000000000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000
*cf00000000000000d000000000000000d100000000000000d200000000000000d3000000000000
*00d4000000000000004e000000000000004f000000000000005000000000000000510000000000
*000052000000000000005300000000000000540000000000000055000000000000005600000000
*0000005700000000000000580000000000000059000000000000005a01000000000000005a0000
*000000000000000000000000001100011e000000700000006f0000007200000074000000610000
*00620000006c000000650000002000000028000000690000006e00000073000000740000006100
*00006e00000063000000650000007300000020000000750000007300000065000000200000004d
*0000005000000054000000430000007300000029010c0000006500000078000000700000006500
*000072000000690000006d000000650000006e00000074000000610000006c01150000006c0000
*006900000062000000720000006100000072000000690000006500000073000000400000006800
*000061000000730000006b000000650000006c0000006c0000002e0000006f0000007200000067
*02000000000000005b0b021f00000061000000200000002a000000200000002800000062000000
*200000002b000000200000006300000029000000200000003d0000002000000028000000610000
*00200000002a000000200000006200000029000000200000002b00000020000000280000006100
*0000200000002a000000200000006300000029000000000000005c0b021f000000280000006100
*0000200000002b000000200000006200000029000000200000002a000000200000006300000020
*0000003d000000200000002800000061000000200000002a000000200000006300000029000000
*200000002b000000200000002800000062000000200000002a0000002000000063000000292900
*000000000000ba00000000000000bb00000000000000bc00000000000000b700000000000000bd
*00000000000000be00000000000000bf00000000000000c000000000000000c100000000000000
*c200000000000000c300000000000000c400000000000000c500000000000000c6000000000000
*00c700000000000000c800000000000000c900000000000000ca00000000000000cb0000000000
*0000cc00000000000000cd00000000000000ce00000000000000cf00000000000000d000000000
*000000d100000000000000d200000000000000d300000000000000d4000000000000004e000000
*000000004f00000000000000510000000000000052000000000000005300000000000000540000
*000000000055000000000000005600000000000000570000000000000058000000000000005900
*0000000000005b000000000000005c02000000000000005b000000000000005c00000000000000
*0000000000000000120001140000006e0000006f0000006e0000002d000000700000006f000000
*720000007400000061000000620000006c0000006500000020000000280000004d000000500000
*0054000000430000007300000029010c0000006500000078000000700000006500000072000000
*690000006d000000650000006e00000074000000610000006c01150000006c0000006900000062
*000000720000006100000072000000690000006500000073000000400000006800000061000000
*730000006b000000650000006c0000006c0000002e0000006f0000007200000067010000000000
*00005d03010202000000410000002001040100000000000000005d000000000000000000000000
*0000001201021800000020000000690000007300000020000000610000006e0000002000000069
*0000006e0000007300000074000000610000006e0000006300000065000000200000006f000000
*6600000020000000620000006f0000007400000068000000200104010000000000000000570000
*000000000000000000000000000f01020500000020000000610000006e00000064000000200104
*010000000000000000b70000000000000023000000000000002401020800000020000000770000
*0068000000650000007200000065000000200000000a0102030000002000000020000000200104
*010000000000000000590000000000000000000000000000000f01021200000020000000640000
*006900000073000000740000007200000069000000620000007500000074000000650000007300
*0000200000006f0000007600000065000000720000002001040100000000000000004e00000000
*00000000000000000000000d02020000002e0000000a2a00000000000000ba00000000000000bb
*00000000000000bc00000000000000b700000000000000bd00000000000000be00000000000000
*bf00000000000000c000000000000000c100000000000000c200000000000000c3000000000000
*00c400000000000000c500000000000000c600000000000000c700000000000000c80000000000
*0000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00000000
*000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2000000
*00000000d300000000000000d4000000000000004e000000000000004f00000000000000510000
*000000000052000000000000005300000000000000540000000000000055000000000000005600
*0000000000005700000000000000580000000000000059000000000000005b000000000000005c
*000000000000005d01000000000000005d00000000000000000000000000000013000000000400
*0000000000005e03010204000000540000006800000065000000200104010000000000000000b7
*000000000000002300000000000000240102010000002001070102010000002801040100000000
*00000000df0000000000000023000000000000002c0102010000002c0104010000000000000000
*e000000000000000230000000000000025020100000029010206000000200000006f0000007600
*000065000000720000002001070104010000000000000000b80000000000000023000000000000
*002502020000002000000061010207000000200000007700000068000000650000007200000065
*000000200104010000000000000000e00000000000000023000000000000002502140000002000
*000069000000730000002000000074000000680000006500000020000000740000006f00000070
*00000020000000650000006c000000650000006d000000650000006e000000740000000a000000
*000000006103010204000000540000006800000065000000200104010000000000000000b70000
*000000000023000000000000002401020100000020010701020100000028010401000000000000
*0000e10000000000000023000000000000002c0102010000002c0104010000000000000000e000
*000000000000230000000000000025020100000029010206000000200000006f00000076000000
*65000000720000002001070104010000000000000000b800000000000000230000000000000025
*020200000020000000610102070000002000000077000000680000006500000072000000650000
*00200104010000000000000000e000000000000000230000000000000025021700000020000000
*69000000730000002000000074000000680000006500000020000000620000006f000000740000
*00740000006f0000006d00000020000000650000006c000000650000006d000000650000006e00
*0000740000000a0000000000000064030102040000005400000068000000650000002001040100
*00000000000000b70000000000000023000000000000002401020a000000200000006700000069
*00000076000000650000006e000000200000006200000079000000200107010201000000280104
*010000000000000000df0000000000000023000000000000002c0102010000002c010401000000
*0000000000e20000000000000023000000000000002d02010000002902010000000a0000000000
*00006703010204000000540000006800000065000000200104010000000000000000b700000000
*000000230000000000000024010201000000200107010201000000280104010000000000000000
*e10000000000000023000000000000002c0102010000002c0104010000000000000000e3000000
*0000000023000000000000002d02010000002902010000000a1300000000000000ba0000000000
*0000bc00000000000000b700000000000000000000000000000001000000000000005e00000000
*0000005f0000000000000060000000000000006100000000000000620000000000000063000000
*000000006400000000000000650000000000000066000000000000006700000000000000680000
*000000000069000000000000006a000000000000006b0e00000000000000670000000000000068
*000000000000006900000000000000640000000000000065000000000000006600000000000000
*6100000000000000620000000000000063000000000000006a000000000000005e000000000000
*005f0000000000000060000000000000006b000000000000000000000000000000140000000001
*000000000000006c01030102040000005400000068000000650000002001040100000000000000
*005d00000000000000000000000000000012010201000000200107010201000000280104010000
*000000000000df0000000000000023000000000000002c0102010000002c010401000000000000
*0000e40000000000000023000000000000002d020100000029010206000000200000006f000000
*7600000065000000720000002001070102010000006101020f0000002000000065000000780000
*0074000000650000006e0000006400000065000000640000002000000077000000690000007400
*00006800000020040100000000000000006f000000000000000000000000000000140102020000
*002e0000000a0102080000002000000020000000200000005700000068000000650000006e0000
*002001070201000000610102480000002000000068000000610000007300000020000000610000
*00200000004e000000750000006d00000020000000690000006e00000073000000740000006100
*00006e000000630000006500000020000000770000006900000074000000680000002000000061
*0000006e000000200000006100000064000000640000006900000074000000690000006f000000
*6e0000002000000074000000680000006100000074000000200000007200000065000000730000
*007000000065000000630000007400000073000000200000006f00000072000000640000006500
*0000720000002c000000200000007400000068000000650000006e000000200000007400000068
*0000006900000073000000200000006900000073000000200000000a0102530000002000000020
*000000200000007400000072000000610000006e00000073000000660000006f00000072000000
*6d000000650000006400000020000000690000006e000000740000006f00000020000000610000
*002000000074000000720000006f000000700000006900000063000000610000006c0000002000
*000073000000650000006d0000006900000072000000690000006e000000670000002e00000020
*000000490000007400000020000000690000007300000020000000610000007300000073000000
*750000006d00000065000000640000002000000074000000680000006100000074000000200000
*003000000020000000690000007300000020000000740000006800000065000000200000006c00
*00006500000061000000730000007400000020000000650000006c000000650000006d00000065
*0000006e000000740000000a02090000002000000020000000200000006f000000660000002000
*0000610000002e0000000a03010c41000000680000007400000074000000700000003a0000002f
*0000002f00000068000000610000006c0000002e00000061000000720000006300000068000000
*690000007600000065000000730000002d0000006f000000750000007600000065000000720000
*007400000065000000730000002e00000066000000720000002f000000640000006f0000006300
*0000730000002f00000030000000300000002f00000031000000310000002f0000003300000037
*0000002f00000037000000390000002f0000005000000044000000460000002f00000054000000
*720000006f000000700000006900000063000000610000006c0000002e00000070000000640000
*006602010000000a3000000000000000ba00000000000000bb00000000000000bc000000000000
*00b700000000000000bd00000000000000be00000000000000bf00000000000000c00000000000
*0000c100000000000000c200000000000000c300000000000000c400000000000000c500000000
*000000c600000000000000c700000000000000c800000000000000c900000000000000ca000000
*00000000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf0000
*0000000000d000000000000000d100000000000000d200000000000000d300000000000000d400
*000000000000000000000000000001000000000000004e000000000000004f0000000000000051
*000000000000005200000000000000530000000000000054000000000000005500000000000000
*56000000000000005700000000000000580000000000000059000000000000005b000000000000
*005c000000000000005d000000000000006c000000000000006d000000000000006e0000000000
*00006f04000000000000006f000000000000006c000000000000006d000000000000006e000000
*000000000000000000000000150000010c00000065000000780000007000000065000000720000
*00690000006d000000650000006e00000074000000610000006c0110000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d02000000000000007003010202000000410000002001040100
*000000000000005d0000000000000000000000000000001201020c000000200000007700000068
*000000690000006300000068000000200000006100000064000000640000007300000020010401
*0000000000000000e30000000000000023000000000000002d0102050000002000000061000000
*6e00000064000000200104010000000000000000e20000000000000023000000000000002d0219
*00000020000000740000006f000000200000006100000020000000700000007200000065000000
*2d0000006500000078000000690000007300000074000000690000006e00000067000000200000
*00740000007900000070000000650000002e0000000a0000000000000074030102020000004100
*00002001040100000000000000005d0000000000000000000000000000001201020d0000002000
*00007500000073000000690000006e000000670000002000000061000000200000007400000079
*000000700000006501020100000027021d00000073000000200000006200000075000000690000
*006c000000740000002d000000690000006e00000020000000420000006f000000750000006e00
*000064000000650000006400000020000000690000006e0000007300000074000000610000006e
*00000063000000650000002e0000000a3100000000000000ba00000000000000bb000000000000
*00bc00000000000000b700000000000000bd00000000000000be00000000000000bf0000000000
*0000c000000000000000c100000000000000c200000000000000c300000000000000c400000000
*000000c500000000000000c600000000000000c700000000000000c800000000000000c9000000
*00000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce0000
*0000000000cf00000000000000d000000000000000d100000000000000d200000000000000d300
*000000000000d4000000000000004e000000000000004f00000000000000510000000000000052
*000000000000005300000000000000540000000000000055000000000000005600000000000000
*5700000000000000580000000000000059000000000000005b000000000000005c000000000000
*005d00000000000000700000000000000071000000000000007200000000000000730000000000
*000074000000000000007500000000000000760700000000000000740000000000000075000000
*000000007600000000000000700000000000000073000000000000007200000000000000710000
*000000000000000000000000002e000108000000700000006f0000007200000074000000610000
*00620000006c00000065010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c01150000006c000000690000006200000072
*000000610000007200000069000000650000007300000040000000680000006100000073000000
*6b000000650000006c0000006c0000002e0000006f0000007200000067002b00000000000000ba
*00000000000000bb00000000000000bc00000000000000b700000000000000bd00000000000000
*be00000000000000bf00000000000000c000000000000000c100000000000000c2000000000000
*00c300000000000000c400000000000000c500000000000000c600000000000000c70000000000
*0000c800000000000000c900000000000000ca00000000000000cb00000000000000cc00000000
*000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1000000
*00000000d200000000000000d300000000000000d4000000000000004e000000000000004f0000
*000000000050000000000000005100000000000000520000000000000053000000000000005400
*000000000000550000000000000056000000000000005700000000000000580000000000000059
*000000000000005a000000000000005b000000000000005c000000000000000000000000000000
*0016000108000000700000006f000000720000007400000061000000620000006c00000065010c
*0000006500000078000000700000006500000072000000690000006d000000650000006e000000
*74000000610000006c011f00000045000000640000007700000061000000720000006400000020
*0000004b0000006d000000650000007400000074000000200000003c000000650000006b000000
*6d00000065000000740000007400000040000000670000006d00000061000000690000006c0000
*002e000000630000006f0000006d0000003e0100000000000000770301021d0000004d00000069
*0000006e000000690000006d000000610000006c00000020000000630000006f0000006d000000
*700000006c00000065000000740000006500000020000000640000006500000066000000690000
*006e0000006900000074000000690000006f0000006e0000003a00000020010401000000000000
*00007800000000000000000000000000000016010204000000200000006f000000720000002001
*04010000000000000000790000000000000000000000000000001602010000000a220000000000
*0000ba00000000000000bb00000000000000bc00000000000000b700000000000000bd00000000
*000000be00000000000000bf00000000000000c000000000000000c100000000000000c2000000
*00000000c300000000000000c400000000000000c500000000000000c600000000000000c70000
*0000000000c800000000000000c900000000000000ca00000000000000cb00000000000000cc00
*000000000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1
*00000000000000d200000000000000d300000000000000d4000000000000004e00000000000000
*4f000000000000007700000000000000780000000000000079000000000000007a040000000000
*0000770000000000000078000000000000007a0000000000000079000000000000000000000000
*00000017000108000000700000006f000000720000007400000061000000620000006c00000065
*010c0000006500000078000000700000006500000072000000690000006d000000650000006e00
*000074000000610000006c01150000006c00000069000000620000007200000061000000720000
*00690000006500000073000000400000006800000061000000730000006b000000650000006c00
*00006c0000002e0000006f0000007200000067002300000000000000ba00000000000000bb0000
*0000000000bc00000000000000b700000000000000bd00000000000000be00000000000000bf00
*000000000000c000000000000000c100000000000000c200000000000000c300000000000000c4
*00000000000000c500000000000000c600000000000000c700000000000000c800000000000000
*c900000000000000ca00000000000000cb00000000000000cc00000000000000cd000000000000
*00ce00000000000000cf00000000000000d000000000000000d100000000000000d20000000000
*0000d300000000000000d4000000000000004e000000000000004f000000000000007700000000
*000000780000000000000079000000000000007a000000000000007b01000000000000007b0000
*0000000000000000000000000018000108000000700000006f0000007200000074000000610000
*00620000006c00000065010c000000650000007800000070000000650000007200000069000000
*6d000000650000006e00000074000000610000006c01150000006c000000690000006200000072
*000000610000007200000069000000650000007300000040000000680000006100000073000000
*6b000000650000006c0000006c0000002e0000006f0000007200000067002600000000000000ba
*00000000000000bb00000000000000bc00000000000000b700000000000000bd00000000000000
*be00000000000000bf00000000000000c000000000000000c100000000000000c2000000000000
*00c300000000000000c400000000000000c500000000000000c600000000000000c70000000000
*0000c800000000000000c900000000000000ca00000000000000cb00000000000000cc00000000
*000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1000000
*00000000d200000000000000d300000000000000d4000000000000004e000000000000004f0000
*000000000050000000000000007700000000000000780000000000000079000000000000007a00
*0000000000007c000000000000007d000000000000007e03000000000000007c00000000000000
*7d000000000000007e0000000000000000000000000000001900000000002f00000000000000ba
*00000000000000bb00000000000000bc00000000000000b700000000000000bd00000000000000
*be00000000000000bf00000000000000c000000000000000c100000000000000c2000000000000
*00c300000000000000c400000000000000c500000000000000c600000000000000c70000000000
*0000c800000000000000c900000000000000ca00000000000000cb00000000000000cc00000000
*000000cd00000000000000ce00000000000000cf00000000000000d000000000000000d1000000
*00000000d200000000000000d300000000000000d4000000000000004e000000000000004f0000
*000000000051000000000000005200000000000000530000000000000054000000000000005500
*00000000000056000000000000005700000000000000580000000000000059000000000000005b
*000000000000005c000000000000005d0000000000000077000000000000007800000000000000
*79000000000000007a000000000000007f01000000000000007f00000000000000000000000000
*00001a0001140000006e0000006f0000006e0000002d000000700000006f000000720000007400
*000061000000620000006c0000006500000020000000280000004d000000500000005400000043
*0000007300000029010c0000006500000078000000700000006500000072000000690000006d00
*0000650000006e00000074000000610000006c01150000006c0000006900000062000000720000
*006100000072000000690000006500000073000000400000006800000061000000730000006b00
*0000650000006c0000006c0000002e0000006f0000007200000067003200000000000000ba0000
*0000000000bb00000000000000bc00000000000000b700000000000000bd00000000000000be00
*000000000000bf00000000000000c000000000000000c100000000000000c200000000000000c3
*00000000000000c400000000000000c500000000000000c600000000000000c700000000000000
*c800000000000000c900000000000000ca00000000000000cb00000000000000cc000000000000
*00cd00000000000000ce00000000000000cf00000000000000d000000000000000d10000000000
*0000d200000000000000d300000000000000d4000000000000004e000000000000004f00000000
*000000510000000000000052000000000000005300000000000000540000000000000055000000
*0000000056000000000000005700000000000000580000000000000059000000000000005b0000
*00000000005c000000000000005d00000000000000770000000000000078000000000000007900
*0000000000007a000000000000007f000000000000008000000000000000810000000000000082
*030000000000000080000000000000008100000000000000820000000000000000000000000000
*001b0001140000006e0000006f0000006e0000002d000000700000006f00000072000000740000
*0061000000620000006c0000006500000020000000280000004d00000050000000540000004300
*00007300000029010c0000006500000078000000700000006500000072000000690000006d0000
*00650000006e00000074000000610000006c01150000006c000000690000006200000072000000
*6100000072000000690000006500000073000000400000006800000061000000730000006b0000
*00650000006c0000006c0000002e0000006f0000007200000067003200000000000000ba000000
*00000000bb00000000000000bc00000000000000b700000000000000bd00000000000000be0000
*0000000000bf00000000000000c000000000000000c100000000000000c200000000000000c300
*000000000000c400000000000000c500000000000000c600000000000000c700000000000000c8
*00000000000000c900000000000000ca00000000000000cb00000000000000cc00000000000000
*cd00000000000000ce00000000000000cf00000000000000d000000000000000d1000000000000
*00d200000000000000d300000000000000d4000000000000004e000000000000004f0000000000
*000051000000000000005200000000000000530000000000000054000000000000005500000000
*00000056000000000000005700000000000000580000000000000059000000000000005b000000
*000000005c000000000000005d0000000000000077000000000000007800000000000000790000
*00000000007a000000000000007f00000000000000830000000000000084000000000000008503
*000000000000008300000000000000840000000000000085000000000000000000000000000000
*1c0001140000006e0000006f0000006e0000002d000000700000006f0000007200000074000000
*61000000620000006c0000006500000020000000280000004d0000005000000054000000430000
*007300000029010c0000006500000078000000700000006500000072000000690000006d000000
*650000006e00000074000000610000006c01150000006c00000069000000620000007200000061
*00000072000000690000006500000073000000400000006800000061000000730000006b000000
*650000006c0000006c0000002e0000006f00000072000000670300000000000000860b021e0000
*00200000002800000078000000200000002a0000002e000000200000006d000000290000002000
*00002e0000002a0000002000000079000000200000003d0000002000000078000000200000002a
*0000002e00000020000000280000006d000000200000002e0000002a0000002000000079000000
*2900000000000000870b021c00000020000000280000006d000000200000002e0000002a000000
*200000007800000029000000200000002a0000002000000079000000200000003d000000200000
*006d000000200000002e0000002a000000200000002800000078000000200000002a0000002000
*0000790000002900000000000000890b021c000000200000002800000078000000200000002a00
*0000200000007900000029000000200000002a0000002e000000200000006d000000200000003d
*0000002000000078000000200000002a000000200000002800000079000000200000002a000000
*2e000000200000006d000000293400000000000000ba00000000000000bb00000000000000bc00
*000000000000b700000000000000bd00000000000000be00000000000000bf00000000000000c0
*00000000000000c100000000000000c200000000000000c300000000000000c400000000000000
*c500000000000000c600000000000000c700000000000000c800000000000000c9000000000000
*00ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce0000000000
*0000cf00000000000000d000000000000000d100000000000000d200000000000000d300000000
*000000d4000000000000004e000000000000004f00000000000000510000000000000052000000
*000000005300000000000000540000000000000055000000000000005600000000000000570000
*0000000000580000000000000059000000000000005b000000000000005c000000000000005d00
*0000000000007700000000000000780000000000000079000000000000007a000000000000007f
*000000000000008600000000000000870000000000000088000000000000008900000000000000
*8a050000000000000089000000000000008a000000000000008700000000000000880000000000
*0000860000000000000000000000000000001d0001140000006e0000006f0000006e0000002d00
*0000700000006f000000720000007400000061000000620000006c000000650000002000000028
*0000004d0000005000000054000000430000007300000029010c00000065000000780000007000
*00006500000072000000690000006d000000650000006e00000074000000610000006c01150000
*006c00000069000000620000007200000061000000720000006900000065000000730000004000
*00006800000061000000730000006b000000650000006c0000006c0000002e0000006f00000072
*0000006704000000000000008b03010203000000690000006600000020010702010000006d0102
*060000002000000069000000730000002000000061000000200104010000000000000000860000
*000000000000000000000000001c01020500000020000000610000006e00000064000000200107
*020100000066010206000000200000006900000073000000200000006100000020010401000000
*0000000000e50000000000000023000000000000002f0102060000002000000074000000680000
*00650000006e000000200107010202000000660000002001040200000000000000008c00000000
*00000000000000000000001d00000000000000008b0000000000000000000000000000001d0202
*000000200000006d01020600000020000000690000007300000020000000610000002001040100
*00000000000000860000000000000000000000000000001c020900000020000000610000007300
*00002000000077000000650000006c0000006c0000000a000000000000008e0301020200000041
*0000002001040200000000000000008f0000000000000000000000000000001d00000000000000
*008e0000000000000000000000000000001d01020b000000200000007400000075000000720000
*006e0000007300000020000000610000006e00000079000000200104010000000000000000e600
*00000000000023000000000000002f01021100000020000000690000006e000000730000007400
*0000610000006e000000630000006500000020000000690000006e000000740000006f00000020
*00000061000000200104010000000000000000b700000000000000230000000000000024010202
*0000002e0000000a01021600000020000000200000002000000049000000740000002000000061
*0000006c000000730000006f0000002000000070000000720000006f0000007600000069000000
*640000006500000073000000200000006100000020010401000000000000000057000000000000
*0000000000000000000f01021100000020000000690000006e0000007300000074000000610000
*006e000000630000006500000020000000660000006f0000007200000020000000610000006e00
*0000200104010000000000000000e50000000000000023000000000000002f01021a0000002000
*000066000000750000006e00000063000000740000006f00000072000000200000007700000072
*00000061000000700000007000000065000000640000002000000061000000720000006f000000
*750000006e000000640000002000000061000000200104010000000000000000b7000000000000
*002300000000000000240102010000000a01021800000020000000200000002000000061000000
*6e0000006400000020000000610000007300000073000000650000007200000074000000730000
*00200000007400000068000000610000007400000020000000610000006e000000790000002001
*04010000000000000000e60000000000000023000000000000002f01020e000000200000006100
*000070000000700000006c00000069000000650000006400000020000000740000006f00000020
*00000061000000200104010000000000000000b700000000000000230000000000000024010209
*00000020000000660000006f000000720000006d00000073000000200000006100000020010401
*00000000000000005b00000000000000000000000000000011010202000000200000000a021b00
*0000200000002000000020000000750000006e0000006400000065000000720000002000000074
*00000068000000650000007300000065000000200000006f000000700000006500000072000000
*6100000074000000690000006f0000006e000000730000002e0000000a00000000000000910301
*020200000041000000200104020000000000000000920000000000000000000000000000001d00
*00000000000000910000000000000000000000000000001d010218000000200000007500000073
*000000650000007300000020000000610000006e00000020000000670000006c00000075000000
*650000007300000020000000740000006f00000067000000650000007400000068000000650000
*0072000000200104010000000000000000e50000000000000023000000000000002f0102130000
*0020000000610000006300000074000000690000006f0000006e00000073000000200000007700
*000069000000740000006800000020000000280000002a0000003e000000290000000a01021400
*0000200000002000000020000000690000006e0000002000000074000000680000006500000020
*0000006d000000610000006e0000006e0000006500000072000000200000006f00000066000000
*200102090000007400000072000000610000007600000065000000720000007300000065000000
*5f0102060000002000000066000000720000006f0000006d0000002001050d0000004400000061
*00000074000000610000002e000000460000006f0000006c000000640000006100000062000000
*6c0000006501021a0000002e00000020000000410000006e000000790000002000000076000000
*610000006c00000075000000650000007300000020000000720000006500000074000000750000
*00720000006e0000006500000064000000200000006200000079000000200000000a0222000000
*200000002000000020000000720000006500000064000000750000006300000065000000640000
*0020000000610000006300000074000000690000006f0000006e00000073000000200000006100
*000072000000650000002000000064000000690000007300000063000000610000007200000064
*00000065000000640000002e0000000a0000000000000094030102320000004500000066000000
*66000000690000006300000069000000650000006e000000740000006c00000079000000200000
*0061000000760000006f0000006900000064000000200000006e00000065000000650000006400
*00006c0000006500000073000000730000006c0000007900000020000000720000006500000062
*000000690000006e00000064000000690000006e00000067000000200000007700000068000000
*650000006e000000200000007500000073000000690000006e0000006700000020010401000000
*00000000000200000000000000000000000000000001010226000000200000006f0000006e0000
*0020000000610000006e00000020000000610000006300000074000000690000006f0000006e00
*0000200000007400000068000000610000007400000020000000610000006c0000007200000065
*000000610000006400000079000000200000007200000065000000740000007500000072000000
*6e000000730000002000000028000000290000000a023b00000020000000200000002000000041
*000000200000007200000065000000770000007200000069000000740000006500000020000000
*72000000750000006c00000065000000200000006100000075000000740000006f0000006d0000
*0061000000740000006900000063000000610000006c0000006c00000079000000200000006100
*000070000000700000006c00000069000000650000007300000020000000740000006800000069
*00000073000000200000007700000068000000650000006e00000020000000700000006f000000
*730000007300000069000000620000006c000000650000000a4600000000000000ba0000000000
*0000bb00000000000000bc00000000000000b700000000000000bd00000000000000be00000000
*000000bf00000000000000c000000000000000c100000000000000c200000000000000c3000000
*00000000c400000000000000c500000000000000c600000000000000c700000000000000c80000
*0000000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd00
*000000000000ce00000000000000cf00000000000000d000000000000000d100000000000000d2
*00000000000000d300000000000000d40000000000000000000000000000000100000000000000
*020000000000000003000000000000000400000000000000050000000000000006000000000000
*0007000000000000004e000000000000004f000000000000005100000000000000520000000000
*000053000000000000005400000000000000550000000000000056000000000000005700000000
*000000580000000000000059000000000000005b000000000000005c000000000000005d000000
*000000007700000000000000780000000000000079000000000000007a000000000000007f0000
*000000000086000000000000008700000000000000880000000000000089000000000000008a00
*0000000000008b000000000000008c000000000000008d000000000000008e000000000000008f
*000000000000009000000000000000910000000000000092000000000000009300000000000000
*940a000000000000009100000000000000920000000000000093000000000000008e0000000000
*00008f0000000000000090000000000000008b000000000000008c000000000000008d00000000
*000000940000000000000000000000000000001e0001140000006e0000006f0000006e0000002d
*000000700000006f000000720000007400000061000000620000006c0000006500000020000000
*280000004d0000005000000054000000430000007300000029010c000000650000007800000070
*0000006500000072000000690000006d000000650000006e00000074000000610000006c011500
*00006c000000690000006200000072000000610000007200000069000000650000007300000040
*0000006800000061000000730000006b000000650000006c0000006c0000002e0000006f000000
*720000006704000000000000009503010203000000690000006600000020010702010000006d01
*020600000020000000690000007300000020000000610000002001040100000000000000008600
*00000000000000000000000000001c010206000000200000006f00000076000000650000007200
*000020010702010000007201020500000020000000610000006e00000064000000200107020100
*000066010206000000200000006900000073000000200000006100000020010401000000000000
*0000e7000000000000002300000000000000300102060000002000000074000000680000006500
*00006e000000200107010202000000660000002001040200000000000000009600000000000000
*00000000000000001e0000000000000000950000000000000000000000000000001e0202000000
*200000006d01020600000020000000690000007300000020000000610000002001040100000000
*00000000860000000000000000000000000000001c020900000020000000610000007300000020
*00000077000000650000006c0000006c0000000a00000000000000980301020200000041000000
*200104020000000000000000990000000000000000000000000000001e00000000000000009800
*00000000000000000000000000001e01020b000000200000007400000075000000720000006e00
*00007300000020000000610000006e00000079000000200104010000000000000000e800000000
*00000023000000000000003001021100000020000000690000006e000000730000007400000061
*0000006e000000630000006500000020000000690000006e000000740000006f00000020000000
*61000000200104010000000000000000b700000000000000230000000000000024010202000000
*2e0000000a01021600000020000000200000002000000049000000740000002000000061000000
*6c000000730000006f0000002000000070000000720000006f0000007600000069000000640000
*006500000073000000200000006100000020010401000000000000000057000000000000000000
*0000000000000f01021000000020000000690000006e0000007300000074000000610000006e00
*0000630000006500000020000000660000006f0000007200000020000000610000002001040100
*00000000000000e700000000000000230000000000000030010212000000200000007700000072
*00000061000000700000007000000065000000640000002000000061000000720000006f000000
*750000006e000000640000002000000061000000200104010000000000000000b7000000000000
*002300000000000000240102010000000a01021800000020000000200000002000000061000000
*6e0000006400000020000000610000007300000073000000650000007200000074000000730000
*00200000007400000068000000610000007400000020000000610000006e000000790000002001
*04010000000000000000e80000000000000023000000000000003001020e000000200000006100
*000070000000700000006c00000069000000650000006400000020000000740000006f00000020
*00000061000000200104010000000000000000b700000000000000230000000000000024010209
*00000020000000660000006f000000720000006d00000073000000200000006100000020010401
*00000000000000005b00000000000000000000000000000011010202000000200000000a021b00
*0000200000002000000020000000750000006e0000006400000065000000720000002000000074
*00000068000000650000007300000065000000200000006f000000700000006500000072000000
*6100000074000000690000006f0000006e000000730000002e0000000a000000000000009b0301
*0203000000410000006e0000002001040200000000000000009c00000000000000000000000000
*00001e00000000000000009b0000000000000000000000000000001e0102150000002000000075
*00000073000000650000007300000020000000670000006c000000750000006500000073000000
*20000000740000006f000000670000006500000074000000680000006500000072000000200104
*010000000000000000e70000000000000023000000000000003001021300000020000000610000
*006300000074000000690000006f0000006e000000730000002000000077000000690000007400
*00006800000020000000280000003e0000003e000000290000000a010214000000200000002000
*000020000000690000006e00000020000000740000006800000065000000200000006d00000061
*0000006e0000006e0000006500000072000000200000006f000000660000002001040100000000
*00000000e900000000000000230000000000000030010206000000200000006600000072000000
*6f0000006d0000002001050d000000440000006100000074000000610000002e00000046000000
*6f0000006c0000006400000061000000620000006c0000006501021a0000002e00000020000000
*410000006e000000790000002000000076000000610000006c0000007500000065000000730000
*002000000072000000650000007400000075000000720000006e00000065000000640000002000
*00006200000079000000200000000a022200000020000000200000002000000072000000650000
*006400000075000000630000006500000064000000200000006100000063000000740000006900
*00006f0000006e0000007300000020000000610000007200000065000000200000006400000069
*000000730000006300000061000000720000006400000065000000640000002e0000000a000000
*000000009e03010232000000450000006600000066000000690000006300000069000000650000
*006e000000740000006c000000790000002000000061000000760000006f000000690000006400
*0000200000006e0000006500000065000000640000006c0000006500000073000000730000006c
*0000007900000020000000720000006500000062000000690000006e0000006400000069000000
*6e00000067000000200000007700000068000000650000006e0000002000000075000000730000
*00690000006e000000670000002001040100000000000000000200000000000000000000000000
*000001010226000000200000006f0000006e00000020000000610000006e000000200000006100
*00006300000074000000690000006f0000006e0000002000000074000000680000006100000074
*00000020000000610000006c000000720000006500000061000000640000007900000020000000
*72000000650000007400000075000000720000006e000000730000002000000028000000290000
*000a023b0000002000000020000000200000004100000020000000720000006500000077000000
*720000006900000074000000650000002000000072000000750000006c00000065000000200000
*006100000075000000740000006f0000006d000000610000007400000069000000630000006100
*00006c0000006c00000079000000200000006100000070000000700000006c0000006900000065
*000000730000002000000074000000680000006900000073000000200000007700000068000000
*650000006e00000020000000700000006f000000730000007300000069000000620000006c0000
*00650000000a3b00000000000000ba00000000000000bb00000000000000bc00000000000000b7
*00000000000000bd00000000000000be00000000000000bf00000000000000c000000000000000
*c100000000000000c200000000000000c300000000000000c400000000000000c5000000000000
*00c600000000000000c700000000000000c800000000000000c900000000000000ca0000000000
*0000cb00000000000000cc00000000000000cd00000000000000ce00000000000000cf00000000
*000000d000000000000000d100000000000000d200000000000000d300000000000000d4000000
*000000000000000000000000010000000000000002000000000000000300000000000000040000
*00000000000500000000000000060000000000000007000000000000004e000000000000004f00
*000000000000510000000000000052000000000000005300000000000000540000000000000055
*000000000000005600000000000000570000000000000058000000000000005900000000000000
*5b000000000000005c000000000000009500000000000000960000000000000097000000000000
*00980000000000000099000000000000009a000000000000009b000000000000009c0000000000
*00009d000000000000009e0a000000000000009b000000000000009c000000000000009d000000
*000000009e00000000000000950000000000000096000000000000009700000000000000980000
*000000000099000000000000009a0000000000000000000000000000001f0001230000006e0000
*006f0000006e0000002d000000700000006f000000720000007400000061000000620000006c00
*000065000000200000002800000074000000790000007000000065000000200000006600000061
*0000006d000000690000006c0000006900000065000000730000002c000000200000004d000000
*5000000054000000430000007300000029010c0000006500000078000000700000006500000072
*000000690000006d000000650000006e00000074000000610000006c01150000006c0000006900
*000062000000720000006100000072000000690000006500000073000000400000006800000061
*000000730000006b000000650000006c0000006c0000002e0000006f0000007200000067140000
*00000000009f0301020c0000004500000066000000660000006900000063000000690000006500
*00006e000000740000006c00000079000000200104010000000000000000270000000000000000
*000000000000000601020300000020000000610000002001040100000000000000002500000000
*00000000000000000000000601020b000000200000007500000073000000690000006e00000067
*000000200000007400000068000000650000002001040200000000000000009200000000000000
*00000000000000001d0000000000000000910000000000000000000000000000001d0102320000
*00200000006d0000006f0000006e0000006f00000069000000640000002e000000200000004100
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*00000065000000640000002000000076000000650000007200000073000000690000006f000000
*6e000000200000006f0000006600000020000000690000007400000073000000200000006e0000
*00610000006d0000006500000073000000610000006b0000006500000020000000690000006e00
*00002001050d000000440000006100000074000000610000002e000000460000006f0000006c00
*00006400000061000000620000006c0000006502010000000a00000000000000a0030102080000
*00660000006c000000690000007000000070000000650000006400000020010401000000000000
*00009f0000000000000000000000000000001f0102070000002000000061000000730000002000
*0000690000006e0000002001050d000000440000006100000074000000610000002e0000004600
*00006f0000006c0000006400000061000000620000006c0000006502010000000a000000000000
*00a10301020c000000450000006600000066000000690000006300000069000000650000006e00
*0000740000006c0000007900000020010401000000000000000027000000000000000000000000
*000000060102030000002000000061000000200104010000000000000000250000000000000000
*000000000000000601020b000000200000007500000073000000690000006e0000006700000020
*0000007400000068000000650000002001040200000000000000009c0000000000000000000000
*000000001e00000000000000009b0000000000000000000000000000001e010234000000200000
*006d0000006f0000006e0000006f00000069000000640000002e00000020000000410000002000
*00007300000070000000650000006300000069000000610000006c000000690000007a00000065
*000000640000002000000076000000650000007200000073000000690000006f0000006e000000
*200000006f0000006600000020000000690000007400000073000000200000006e000000610000
*006d0000006500000073000000610000006b000000650000002000000066000000720000006f00
*00006d0000002001050d000000440000006100000074000000610000002e000000460000006f00
*00006c0000006400000061000000620000006c0000006501020500000020000000610000006e00
*0000640000002001050d000000430000006f0000006e00000074000000720000006f0000006c00
*00002e0000004d0000006f0000006e000000610000006402010000000a00000000000000a20301
*0208000000660000006c0000006900000070000000700000006500000064000000200104010000
*000000000000a10000000000000000000000000000001f01020700000020000000610000007300
*000020000000690000006e0000002001050d000000440000006100000074000000610000002e00
*0000460000006f0000006c0000006400000061000000620000006c000000650102050000002000
*0000610000006e000000640000002001050d000000430000006f0000006e000000740000007200
*00006f0000006c0000002e0000004d0000006f0000006e000000610000006402010000000a0000
*0000000000a30301020c0000004500000066000000660000006900000063000000690000006500
*00006e000000740000006c00000079000000200104010000000000000000270000000000000000
*000000000000000601020300000020000000610000002001040100000000000000002500000000
*00000000000000000000000601020b000000200000007500000073000000690000006e00000067
*000000200000007400000068000000650000002001040200000000000000003e00000000000000
*00000000000000000900000000000000003d000000000000000000000000000000090102340000
*00200000006d0000006f0000006e0000006f00000069000000640000002e000000200000004100
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*00000065000000640000002000000076000000650000007200000073000000690000006f000000
*6e000000200000006f0000006600000020000000690000007400000073000000200000006e0000
*00610000006d0000006500000073000000610000006b0000006500000020000000660000007200
*00006f0000006d0000002001050d000000440000006100000074000000610000002e0000004600
*00006f0000006c0000006400000061000000620000006c0000006502010000000a000000000000
*00a40301020c000000450000006600000066000000690000006300000069000000650000006e00
*0000740000006c000000790000002001040100000000000000002a000000000000000000000000
*000000060102030000002000000061000000200104010000000000000000250000000000000000
*000000000000000601020b000000200000007500000073000000690000006e0000006700000020
*0000007400000068000000650000002001040200000000000000003e0000000000000000000000
*000000000900000000000000003d00000000000000000000000000000009010234000000200000
*006d0000006f0000006e0000006f00000069000000640000002e00000020000000410000002000
*00007300000070000000650000006300000069000000610000006c000000690000007a00000065
*000000640000002000000076000000650000007200000073000000690000006f0000006e000000
*200000006f0000006600000020000000690000007400000073000000200000006e000000610000
*006d0000006500000073000000610000006b000000650000002000000066000000720000006f00
*00006d0000002001050d000000440000006100000074000000610000002e000000460000006f00
*00006c0000006400000061000000620000006c0000006502010000000a00000000000000a50301
*021c00000041000000200000006600000075000000720000007400000068000000650000007200
*0000200000007300000070000000650000006300000069000000610000006c000000690000007a
*0000006100000074000000690000006f0000006e000000200000006f0000006600000020010507
*000000660000006f0000006c000000640000004d000000610000007002010000000a0000000000
*0000a60301020c000000450000006600000066000000690000006300000069000000650000006e
*000000740000006c000000790000002001040100000000000000002a0000000000000000000000
*000000000601020300000020000000610000002001040100000000000000002500000000000000
*00000000000000000601021e000000200000007400000068000000610000007400000020000000
*630000006f0000006e0000007400000061000000690000006e0000007300000020000000760000
*00610000006c000000750000006500000073000000200000006f00000066000000200000007400
*0000790000007000000065000000200104010000000000000000ea000000000000002800000000
*0000003102010000000a00000000000000a70301020c0000004500000066000000660000006900
*00006300000069000000650000006e000000740000006c00000079000000200104010000000000
*0000002a0000000000000000000000000000000601020300000020000000610000002001040100
*00000000000000250000000000000000000000000000000601021e000000200000007400000068
*000000610000007400000020000000630000006f0000006e000000740000006100000069000000
*6e000000730000002000000076000000610000006c000000750000006500000073000000200000
*006f00000066000000200000007400000079000000700000006500000020010401000000000000
*0000ea0000000000000028000000000000003102010000000a00000000000000a80301020c0000
*00450000006600000066000000690000006300000069000000650000006e000000740000006c00
*000079000000200104010000000000000000270000000000000000000000000000000601020500
*000020000000610000006e00000079000000200104010000000000000000250000000000000000
*0000000000000006024300000020000000630000006800000065000000630000006b0000006900
*00006e0000006700000020000000740000006f0000002000000073000000650000006500000020
*000000690000006600000020000000610000006e00000079000000200000006f00000066000000
*200000006900000074000000730000002000000076000000610000006c00000075000000650000
*0073000000200000006d0000006100000074000000630000006800000020000000740000006800
*00006500000020000000730000007500000070000000700000006c000000690000006500000064
*000000200000007000000072000000650000006400000069000000630000006100000074000000
*650000000a00000000000000a90301020c00000045000000660000006600000069000000630000
*0069000000650000006e000000740000006c000000790000002001040100000000000000002700
*00000000000000000000000000000601020500000020000000610000006e000000790000002001
*040100000000000000002500000000000000000000000000000006024300000020000000630000
*006800000065000000630000006b000000690000006e0000006700000020000000740000006f00
*00002000000073000000650000006500000020000000690000006600000020000000610000006c
*0000006c000000200000006f000000660000002000000069000000740000007300000020000000
*76000000610000006c000000750000006500000073000000200000006d00000061000000740000
*006300000068000000200000007400000068000000650000002000000073000000750000007000
*0000700000006c0000006900000065000000640000002000000070000000720000006500000064
*00000069000000630000006100000074000000650000000a00000000000000aa0301020c000000
*450000006600000066000000690000006300000069000000650000006e000000740000006c0000
*007900000020010401000000000000000027000000000000000000000000000000060102050000
*0020000000610000006e0000007900000020010401000000000000000025000000000000000000
*0000000000000601020b000000200000007500000073000000690000006e000000670000002000
*0000740000006800000065000000200104020000000000000000ca000000000000002300000000
*000000240000000000000000cb0000000000000023000000000000002401020100000020010401
*0000000000000000b70000000000000023000000000000002402010000000a00000000000000ab
*0301020c000000450000006600000066000000690000006300000069000000650000006e000000
*740000006c00000079000000200104010000000000000000270000000000000000000000000000
*000601020500000020000000610000006e00000079000000200104010000000000000000250000
*000000000000000000000000000601020b000000200000007500000073000000690000006e0000
*006700000020000000740000006800000065000000200104020000000000000000cd0000000000
*00002300000000000000240000000000000000ce00000000000000230000000000000024010201
*000000200104010000000000000000b70000000000000023000000000000002402010000000a00
*000000000000ac03010210000000430000006800000065000000630000006b0000002000000074
*0000006f0000002000000073000000650000006500000020000000690000006600000020010401
*0000000000000000a80000000000000000000000000000001f01020f000000200000006d000000
*650000006d000000620000006500000072000000200000006f0000006600000020000000740000
*006800000065000000200104010000000000000000250000000000000000000000000000000602
*1c000000200000006d000000610000007400000063000000680000006500000073000000200000
*0074000000680000006500000020000000730000007500000070000000700000006c0000006900
*000065000000640000002000000076000000610000006c00000075000000650000000a00000000
*000000ad03010242000000430000006800000065000000630000006b0000002000000074000000
*6f000000200000006d000000610000006b00000065000000200000007300000075000000720000
*006500000020000000740000006800000061000000740000002000000074000000680000006500
*000020000000730000007500000070000000700000006c00000069000000650000006400000020
*00000076000000610000006c000000750000006500000020000000690000007300000020000000
*6e0000006f000000740000002000000061000000200000006d000000650000006d000000620000
*006500000072000000200000006f00000066000000200000007400000068000000650000002001
*04010000000000000000250000000000000000000000000000000602010000000a000000000000
*00ae0301020c000000450000006600000066000000690000006300000069000000650000006e00
*0000740000006c0000007900000020010401000000000000000027000000000000000000000000
*0000000601021f0000002000000061000000200000007300000075000000620000007300000065
*00000074000000200000006f000000660000002000000074000000680000006500000020000000
*650000006c000000650000006d000000650000006e000000740000007300000020000000690000
*006e00000020000000610000002001040100000000000000002500000000000000000000000000
*00000602010000000a00000000000000af03010214000000410000002000000073000000700000
*00650000006300000069000000610000006c000000690000007a00000061000000740000006900
*00006f0000006e000000200000006f00000066000000200104010000000000000000ae00000000
*00000000000000000000001f01020b000000200000007500000073000000690000006e00000067
*00000020000000740000006800000065000000200104020000000000000000d000000000000000
*2300000000000000240000000000000000d1000000000000002300000000000000240102010000
*00200104010000000000000000b70000000000000023000000000000002401020f0000002c0000
*0020000000610000006e000000610000006c0000006f000000670000006f000000750000007300
*000020000000740000006f0000002001020e000000440000006100000074000000610000002e00
*00004c0000006900000073000000740000002e00000066000000690000006e0000006402010000
*000a00000000000000b003010214000000410000002000000067000000650000006e0000006500
*000072000000610000006c000000690000007a0000006100000074000000690000006f0000006e
*000000200000006f0000006600000020010213000000440000006100000074000000610000002e
*0000004c0000006900000073000000740000002e0000007200000065000000700000006c000000
*690000006300000061000000740000006501021100000020000000740000006f00000020000000
*610000006e00000020000000610000007200000062000000690000007400000072000000610000
*007200000079000000200104010000000000000000b70000000000000023000000000000002401
*02100000002e000000200000004100000064000000610000007000000074000000650000006400
*00002000000066000000720000006f0000006d000000200000000a01020100000020010c4a0000
*00680000007400000074000000700000003a0000002f0000002f00000061000000750000006700
*000075000000730000007400000073000000730000002e000000620000006c0000006f00000067
*00000073000000700000006f000000740000002e000000630000006f0000006d0000002f000000
*320000003000000030000000380000002f00000030000000370000002f0000006c0000006f0000
*0073000000740000002d000000610000006e000000640000002d000000660000006f0000007500
*00006e000000640000002d00000069000000660000002d000000690000002d0000007700000072
*0000006900000074000000650000002d0000003100000030000000380000002d00000069000000
*6e0000002e00000068000000740000006d0000006c02010000000a00000000000000b103010214
*000000410000002000000067000000650000006e0000006500000072000000610000006c000000
*690000007a0000006100000074000000690000006f0000006e000000200000006f000000660000
*002001020f000000440000006100000074000000610000002e0000004c00000069000000730000
*00740000002e0000006300000079000000630000006c0000006501021100000020000000740000
*006f00000020000000610000006e00000020000000610000007200000062000000690000007400
*000072000000610000007200000079000000200104010000000000000000b70000000000000023
*000000000000002402390000002e000000200000004d0000006100000079000000200000006600
*000061000000690000006c00000020000000740000006f00000020000000740000006500000072
*0000006d000000690000006e00000061000000740000006500000020000000660000006f000000
*7200000020000000730000006f0000006d000000650000002000000076000000610000006c0000
*0075000000650000007300000020000000690000006e00000020000000730000006f0000006d00
*000065000000200000006d0000006f0000006e0000006f0000006900000064000000730000002e
*0000000a00000000000000b203010214000000410000002000000067000000650000006e000000
*6500000072000000610000006c000000690000007a0000006100000074000000690000006f0000
*006e000000200000006f0000006600000020010210000000440000006100000074000000610000
*002e0000004c0000006900000073000000740000002e0000007200000065000000700000006500
*0000610000007401021100000020000000740000006f00000020000000610000006e0000002000
*000061000000720000006200000069000000740000007200000061000000720000007900000020
*0104010000000000000000b70000000000000023000000000000002402390000002e0000002000
*00004d0000006100000079000000200000006600000061000000690000006c0000002000000074
*0000006f000000200000007400000065000000720000006d000000690000006e00000061000000
*740000006500000020000000660000006f0000007200000020000000730000006f0000006d0000
*00650000002000000076000000610000006c000000750000006500000073000000200000006900
*00006e00000020000000730000006f0000006d00000065000000200000006d0000006f0000006e
*0000006f0000006900000064000000730000002e0000000a4700000000000000ba000000000000
*00bb00000000000000bc00000000000000b700000000000000bd00000000000000be0000000000
*0000bf00000000000000c000000000000000c100000000000000c200000000000000c300000000
*000000c400000000000000c500000000000000c600000000000000c700000000000000c8000000
*00000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd0000
*0000000000ce00000000000000cf00000000000000d000000000000000d100000000000000d200
*000000000000d300000000000000d4000000000000000000000000000000010000000000000002
*000000000000000300000000000000040000000000000005000000000000000600000000000000
*07000000000000001c000000000000001d000000000000001e000000000000001f000000000000
*002000000000000000210000000000000022000000000000002300000000000000240000000000
*000025000000000000002600000000000000270000000000000028000000000000002900000000
*0000002a000000000000009f00000000000000a000000000000000a100000000000000a2000000
*00000000a300000000000000a400000000000000a500000000000000a600000000000000a70000
*0000000000a800000000000000a900000000000000aa00000000000000ab00000000000000ac00
*000000000000ad00000000000000ae00000000000000af00000000000000b000000000000000b1
*00000000000000b21400000000000000a100000000000000a2000000000000009f000000000000
*00a000000000000000a600000000000000a700000000000000a800000000000000a90000000000
*0000a300000000000000a400000000000000a500000000000000ac00000000000000ae00000000
*000000af00000000000000aa00000000000000ab00000000000000ad00000000000000b2000000
*00000000b000000000000000b1000000000000000000000000000000200001140000006e000000
*6f0000006e0000002d000000700000006f000000720000007400000061000000620000006c0000
*006500000020000000280000004d0000005000000054000000430000007300000029010c000000
*6500000078000000700000006500000072000000690000006d000000650000006e000000740000
*00610000006c01150000006c000000690000006200000072000000610000007200000069000000
*6500000073000000400000006800000061000000730000006b000000650000006c0000006c0000
*002e0000006f0000007200000067002700000000000000ba00000000000000bb00000000000000
*bc00000000000000b700000000000000bd00000000000000be00000000000000bf000000000000
*00c000000000000000c100000000000000c200000000000000c300000000000000c40000000000
*0000c500000000000000c600000000000000c700000000000000c800000000000000c900000000
*000000ca00000000000000cb00000000000000cc00000000000000cd00000000000000ce000000
*00000000cf00000000000000d000000000000000d100000000000000d200000000000000d30000
*0000000000d4000000000000000000000000000000010000000000000002000000000000000300
*0000000000000400000000000000050000000000000006000000000000000700000000000000b3
*00000000000000b400000000000000b50300000000000000b300000000000000b4000000000000
*00b50000000000000000000000000000002100000000003500000000000000ba00000000000000
*bb00000000000000bc00000000000000b700000000000000bd00000000000000be000000000000
*00bf00000000000000c000000000000000c100000000000000c200000000000000c30000000000
*0000c400000000000000c500000000000000c600000000000000c700000000000000c800000000
*000000c900000000000000ca00000000000000cb00000000000000cc00000000000000cd000000
*00000000ce00000000000000cf00000000000000d000000000000000d100000000000000d20000
*0000000000d300000000000000d4000000000000004e000000000000004f000000000000005100
*000000000000520000000000000053000000000000005400000000000000550000000000000056
*000000000000005700000000000000580000000000000059000000000000005b00000000000000
*5c000000000000005d000000000000007700000000000000780000000000000079000000000000
*007a000000000000007f0000000000000086000000000000008700000000000000880000000000
*000089000000000000008a00000000000000b60100000000000000b600000000000000eb000000
*000000000000000000000000010300000000000000320000000000000000000000000000000100
*000000000000003300000000000000000000000000000001000000000000000034000000000000
*000000000000000000010000000000000000350000000000000000000000000000000100000000
*000000003600000000000000000000000000000001000000000000000037000000000000000000
*000000000000010000000000000000380000000000000000000000000000000100000000000000
*00390000000000000000000000000000000203000000000000003a000000000000000000000000
*0000000200000000000000003b0000000000000000000000000000000200000000000000003c00
*00000000000000000000000000000303000000000000003d000000000000000000000000000000
*0301000000000000003d0000000000000000000000000000000300000000000000003e00000000
*00000000000000000000000403000000000000003f000000000000000000000000000000040100
*0000000000003f0000000000000000000000000000000400000000000000004000000000000000
*000000000000000004030000000000000041000000000000000000000000000000040000000000
*000000420000000000000000000000000000000400000000000000004300000000000000000000
*000000000004030000000000000044000000000000000000000000000000040100000000000000
*440000000000000000000000000000000400000000000000004500000000000000000000000000
*000004030000000000000046000000000000000000000000000000040000000000000000470000
*000000000000000000000000000400000000000000004800000000000000000000000000000005
*0300000000000000490000000000000000000000000000000500000000000000004a0000000000
*000000000000000000000603000000000000004b00000000000000000000000000000006010000
*00000000004b0000000000000000000000000000000600000000000000004c0000000000000000
*000000000000000603000000000000004d00000000000000000000000000000006010000000000
*00004d0000000000000000000000000000000600000000000000004e0000000000000000000000
*000000000603000000000000004f0000000000000000000000000000000601000000000000004f
*000000000000000000000000000000060000000000000000500000000000000000000000000000
*000603000000000000005100000000000000000000000000000006030000000000000052000000
*000000000000000000000000060000000000000000530000000000000000000000000000000600
*000000000000005400000000000000000000000000000006000000000000000055000000000000
*000000000000000000060000000000000000560000000000000000000000000000000703000000
*000000005700000000000000000000000000000007030000000000000058000000000000000000
*000000000000070300000000000000590000000000000000000000000000000700000000000000
*005a0000000000000000000000000000000700000000000000005b000000000000000000000000
*0000000700000000000000005c0000000000000000000000000000000700000000000000005d00
*00000000000000000000000000000700000000000000005e000000000000000000000000000000
*0803000000000000005f0000000000000000000000000000000800000000000000006000000000
*000000000000000000000008030000000000000061000000000000000000000000000000080000
*000000000000620000000000000000000000000000000803000000000000006300000000000000
*000000000000000008030000000000000064000000000000000000000000000000080000000000
*000000650000000000000000000000000000000800000000000000006600000000000000000000
*000000000008000000000000000067000000000000000000000000000000080000000000000000
*680000000000000000000000000000000903000000000000006900000000000000000000000000
*0000090100000000000000690000000000000000000000000000000900000000000000006a0000
*000000000000000000000000000a03000000000000006b0000000000000000000000000000000a
*01000000000000006b0000000000000000000000000000000a00000000000000006c0000000000
*000000000000000000000a00000000000000006d0000000000000000000000000000000a000000
*00000000006e0000000000000000000000000000000b03000000000000006f0000000000000000
*000000000000000b01000000000000006f0000000000000000000000000000000b000000000000
*0000700000000000000000000000000000000c0300000000000000710000000000000000000000
*000000000c0100000000000000710000000000000000000000000000000c030000000000000072
*0000000000000000000000000000000c0100000000000000720000000000000000000000000000
*000c0000000000000000730000000000000000000000000000000c000000000000000074000000
*0000000000000000000000000d0000000000000000750000000000000000000000000000000d00
*00000000000000760000000000000000000000000000000e000000000000000077000000000000
*0000000000000000000f0300000000000000780000000000000000000000000000000f01000000
*00000000780000000000000000000000000000000f000000000000000079000000000000000000
*0000000000000f03000000000000007a0000000000000000000000000000000f01000000000000
*007a0000000000000000000000000000000f00000000000000007b000000000000000000000000
*0000000f03000000000000007c0000000000000000000000000000000f00000000000000007d00
*00000000000000000000000000000f00000000000000007e000000000000000000000000000000
*1000000000000000007f0000000000000000000000000000001103000000000000008000000000
*000000000000000000000011030000000000000081000000000000000000000000000000120300
*000000000000820000000000000000000000000000001303000000000000008300000000000000
*000000000000000013010000000000000083000000000000000000000000000000130000000000
*000000840000000000000000000000000000001303000000000000008500000000000000000000
*000000000013010000000000000085000000000000000000000000000000130000000000000000
*860000000000000000000000000000001303000000000000008700000000000000000000000000
*000013010000000000000087000000000000000000000000000000130000000000000000880000
*000000000000000000000000001303000000000000008900000000000000000000000000000013
*0100000000000000890000000000000000000000000000001300000000000000008a0000000000
*000000000000000000001300000000000000008b00000000000000000000000000000013000000
*00000000008c0000000000000000000000000000001403000000000000008d0000000000000000
*000000000000001401000000000000008d00000000000000000000000000000014000000000000
*00008e0000000000000000000000000000001400000000000000008c0000000000000000000000
*000000001503000000000000008f00000000000000000000000000000015010000000000000090
*0000000000000000000000000000001501000000000000008f0000000000000000000000000000
*001501000000000000009100000000000000000000000000000015030000000000000092000000
*000000000000000000000000150100000000000000920000000000000000000000000000001500
*000000000000009300000000000000000000000000000016030000000000000094000000000000
*000000000000000000160000000000000000950000000000000000000000000000001600000000
*000000009600000000000000000000000000000016000000000000000097000000000000000000
*000000000000170000000000000000980000000000000000000000000000001800000000000000
*00990000000000000000000000000000001800000000000000009a000000000000000000000000
*0000001800000000000000009b0000000000000000000000000000001903000000000000009c00
*00000000000000000000000000001a03000000000000009d000000000000000000000000000000
*1a01000000000000009d0000000000000000000000000000001a00000000000000009e00000000
*00000000000000000000001b03000000000000009f0000000000000000000000000000001b0100
*0000000000009f0000000000000000000000000000001b0000000000000000a000000000000000
*00000000000000001c0300000000000000a10000000000000000000000000000001c0300000000
*000000a20000000000000000000000000000001c0000000000000000a300000000000000000000
*00000000001c0300000000000000a40000000000000000000000000000001c0000000000000000
*a50000000000000000000000000000001d0300000000000000a600000000000000000000000000
*00001d0100000000000000a60000000000000000000000000000001d0000000000000000a70000
*000000000000000000000000001d0300000000000000a80000000000000000000000000000001d
*0100000000000000a80000000000000000000000000000001d0000000000000000a90000000000
*000000000000000000001d0300000000000000aa0000000000000000000000000000001d010000
*0000000000aa0000000000000000000000000000001d0000000000000000ab0000000000000000
*000000000000001d0000000000000000ac0000000000000000000000000000001e030000000000
*0000ad0000000000000000000000000000001e0100000000000000ad0000000000000000000000
*000000001e0000000000000000ae0000000000000000000000000000001e0300000000000000af
*0000000000000000000000000000001e0100000000000000af0000000000000000000000000000
*001e0000000000000000b00000000000000000000000000000001e0300000000000000b1000000
*0000000000000000000000001e0100000000000000b10000000000000000000000000000001e00
*00000000000000b20000000000000000000000000000001e0000000000000000b3000000000000
*0000000000000000001f0000000000000000b40000000000000000000000000000001f00000000
*00000000b50000000000000000000000000000001f0000000000000000b6000000000000000000
*0000000000001f0000000000000000b70000000000000000000000000000001f00000000000000
*00b80000000000000000000000000000001f0000000000000000b9000000000000000000000000
*0000001f0000000000000000ba0000000000000000000000000000001f0000000000000000bb00
*00000000000000000000000000001f0000000000000000bc000000000000000000000000000000
*1f0000000000000000bd0000000000000000000000000000001f0000000000000000be00000000
*00000000000000000000001f0000000000000000bf0000000000000000000000000000001f0000
*000000000000c00000000000000000000000000000001f0000000000000000c100000000000000
*00000000000000001f0000000000000000c20000000000000000000000000000001f0000000000
*000000c30000000000000000000000000000001f0000000000000000c400000000000000000000
*00000000001f0000000000000000980000000000000000000000000000001f0000000000000000
*c50000000000000000000000000000001f0000000000000000c600000000000000000000000000
*0000200300000000000000c7000000000000000000000000000000200100000000000000c70000
*00000000000000000000000000200000000000000000c800000000000000000000000000000021
*0300000000000000c9000000000000002300000000000000240300000000000000ca0000000000
*00002300000000000000250300000000000000cb00000000000000230000000000000026030000
*0000000000cc000000000000002300000000000000240000000000000000cd0000000000000023
*00000000000000240000000000000000ce00000000000000230000000000000024000000000000
*0000cf000000000000002300000000000000240000000000000000d00000000000000023000000
*00000000240100000000000000d1000000000000002300000000000000240300000000000000d1
*000000000000002300000000000000240000000000000000d20000000000000023000000000000
*00240100000000000000d3000000000000002300000000000000240300000000000000d3000000
*000000002300000000000000240000000000000000d40000000000000023000000000000002401
*00000000000000d5000000000000002300000000000000240300000000000000d5000000000000
*002300000000000000240000000000000000d60000000000000023000000000000002401000000
*00000000d7000000000000002300000000000000240300000000000000d7000000000000002300
*000000000000240000000000000000d80000000000000023000000000000002401000000000000
*00d9000000000000002300000000000000240300000000000000d9000000000000002300000000
*000000240000000000000000da000000000000002300000000000000240100000000000000db00
*0000000000002300000000000000240300000000000000db000000000000002300000000000000
*240000000000000000dc000000000000002300000000000000240100000000000000dd00000000
*0000002300000000000000240300000000000000dd000000000000002300000000000000240000
*000000000000de000000000000002300000000000000240100000000000000df00000000000000
*2300000000000000240300000000000000df00000000000000e000000000000000e10300000000
*000000e200000000000000e000000000000000e10000000000000000e300000000000000230000
*0000000000e40300000000000000e5000000000000002800000000000000290300000000000000
*e60000000000000023000000000000002a0000000000000000e700000000000000230000000000
*00002b0300000000000000e80000000000000023000000000000002b0000000000000000e90000
*000000000023000000000000002b0000000000000000ea0000000000000023000000000000002b
*0000000000000000eb0000000000000023000000000000002b0000000000000000ec0000000000
*00002300000000000000ed0000000000000000ee00000000000000230000000000000025010000
*0000000000ef000000000000002300000000000000ed0000000000000000f00000000000000023
*00000000000000f10000000000000000f2000000000000002300000000000000f1000000000000
*0000f3000000000000002300000000000000f40000000000000000770000000000000023000000
*000000002f0300000000000000f50000000000000023000000000000002f0300000000000000f6
*000000000000002300000000000000f70300000000000000f80000000000000023000000000000
*00300300000000000000f9000000000000002300000000000000300000000000000000b6000000
*000000002800000000000000310300000000000000fa00000000000000fb000000000000000d6d
*6f6e6f6964732d302e312e380000000000000013446174612e4d6f6e6f69642e52656475636572
*0000000000000018446174612e4d6f6e6f69642e526564756365722e4368617200000000000000
*18446174612e4d6f6e6f69642e526564756365722e576974680000000000000011446174612e4d
*6f6e6f69642e556e696f6e0000000000000020446174612e4d6f6e6f69642e4c65786963616c2e
*555446382e4465636f6465720000000000000015446174612e4d6f6e6f69642e47656e65726174
*6f720000000000000022446174612e4d6f6e6f69642e4c65786963616c2e536f75726365506f73
*6974696f6e0000000000000019446174612e4d6f6e6f69642e4c65786963616c2e576f72647300
*00000000000010446174612e4d6f6e6f69642e53656c66000000000000001a446174612e4d6f6e
*6f69642e47656e657261746f722e4c5a37380000000000000016446174612e4d6f6e6f69642e46
*726f6d537472696e670000000000000017446174612e4d6f6e6f69642e43617465676f72696361
*6c0000000000000014446174612e4d6f6e6f69642e4164646974697665000000000000001a4461
*74612e4d6f6e6f69642e41646469746976652e5375676172000000000000001a446174612e4d6f
*6e6f69642e4d756c7469706c696361746976650000000000000020446174612e4d6f6e6f69642e
*4d756c7469706c696361746976652e53756761720000000000000013446174612e52696e672e53
*656d692e4e656172000000000000000e446174612e52696e672e53656d69000000000000000f44
*6174612e4d6f6e6f69642e4f72640000000000000017446174612e52696e672e53656d692e5472
*6f706963616c0000000000000012446174612e52696e672e53656d692e4f726400000000000000
*0a446174612e47726f75700000000000000016446174612e47726f75702e436f6d62696e61746f
*72730000000000000010446174612e47726f75702e53756761720000000000000009446174612e
*52696e670000000000000011446174612e52696e672e426f6f6c65616e00000000000000114461
*74612e52696e672e46726f6d4e756d0000000000000010446174612e52696e672e4d6f64756c65
*0000000000000017446174612e4d6f6e6f69642e4170706c696361746976650000000000000011
*446174612e4d6f6e6f69642e4d6f6e61640000000000000017446174612e4d6f6e6f69642e436f
*6d62696e61746f72730000000000000025446174612e4d6f6e6f69642e4c65786963616c2e5275
*6e4c656e677468456e636f64696e670000000000000029446174612e52696e672e4d6f64756c65
*2e4175746f6d61746963446966666572656e74696174696f6e0000000000000015446174612e4d
*6f6e6f69642e496e7374616e636573000000000000000462617365000000000000000b44617461
*2e4d6f6e6f6964000000000000000a446174612e4d61796265000000000000000d446174612e46
*6f6c6461626c650000000000000009446174612e576f726400000000000000086768632d707269
*6d00000000000000094748432e5479706573000000000000000b4748432e556e69636f64650000
*000000000010436f6e74726f6c2e43617465676f72790000000000000008446174612e4f726400
*000000000000075072656c756465000000000000000f446174612e52696e672e53756761720000
*000000000013436f6e74726f6c2e4170706c69636174697665000000000000000d436f6e74726f
*6c2e4d6f6e616400000000000000084748432e426f6f6c00000000000000075265647563657200
*00000000000004756e69740000000000000004736e6f630000000000000004636f6e7300000000
*0000000d666f6c644d6170526564756365000000000000000a666f6c6452656475636500000000
*0000000a72657475726e556e6974000000000000000870757265556e6974000000000000000b43
*68617252656475636572000000000000000866726f6d43686172000000000000000b696e76616c
*696443686172000000000000000b5769746852656475636572000000000000000e776974686f75
*74526564756365720000000000000009556e696f6e57697468000000000000000c676574556e69
*6f6e57697468000000000000000c486173556e696f6e576974680000000000000009756e696f6e
*576974680000000000000009656d707479576974680000000000000005556e696f6e0000000000
*000008676574556e696f6e0000000000000008486173556e696f6e0000000000000005656d7074
*790000000000000005756e696f6e000000000000000455544638000000000000000772756e5554
*463800000000000000054368617238000000000000000867657443686172380000000000000006
*56616c756573000000000000000967657456616c75657300000000000000044b65797300000000
*000000076765744b657973000000000000000947656e657261746f720000000000000004456c65
*6d00000000000000096d617052656475636500000000000000056d6170546f0000000000000007
*6d617046726f6d0000000000000006726564756365000000000000000e536f75726365506f7369
*74696f6e000000000000000c536f75726365436f6c756d6e000000000000000a536f757263654c
*696e6500000000000000076e657874546162000000000000000b73746172744f6646696c650000
*00000000000c736f75726365436f6c756d6e000000000000000a736f757263654c696e65000000
*000000001273686f77536f75726365506f736974696f6e0000000000000007556e6c696e656400
*0000000000000a72756e556e6c696e65640000000000000008556e737061636564000000000000
*000b72756e556e73706163656400000000000000054c696e65730000000000000005576f726473
*000000000000000872756e576f726473000000000000000872756e4c696e657300000000000000
*09776f72647346726f6d00000000000000096c696e657346726f6d000000000000000453656c66
*000000000000000767657453656c6600000000000000044c5a373800000000000000076765744c
*5a373800000000000000066465636f64650000000000000006656e636f6465000000000000000a
*46726f6d537472696e67000000000000000d67657446726f6d537472696e670000000000000003
*4d6f6e000000000000000547456e646f000000000000000867657447456e646f00000000000000
*066765744d6f6e0000000000000004706c757300000000000000047a65726f0000000000000001
*2b0000000000000003457870000000000000000667657445787000000000000000034c6f670000
*0000000000066765744c6f67000000000000000e4d756c7469706c696361746976650000000000
*0000036f6e65000000000000000574696d657300000000000000012a00000000000000104c6566
*7453656d694e65617252696e670000000000000011526967687453656d694e65617252696e6700
*0000000000000853656d6952696e67000000000000000b4d696e5072696f726974790000000000
*00000e6765744d696e5072696f72697479000000000000000b4d61785072696f72697479000000
*000000000e6765744d61785072696f7269747900000000000000034d696e000000000000000667
*65744d696e00000000000000034d617800000000000000066765744d617800000000000000096d
*696e66696e6974790000000000000008696e66696e697479000000000000000854726f70696361
*6c000000000000000b67657454726f706963616c00000000000000085072696f72697479000000
*00000000084d6178426f756e6400000000000000084d696e426f756e6400000000000000054f72
*64657200000000000000086765744f72646572000000000000000547726f757000000000000000
*07676e656761746500000000000000056d696e7573000000000000000967737562747261637400
*000000000000097265706c696361746500000000000000012d00000000000000066e6567617465
*00000000000000087375627472616374000000000000000452696e670000000000000008426f6f
*6c52696e67000000000000000b676574426f6f6c52696e67000000000000000746726f6d4e756d
*000000000000000a67657446726f6d4e756d00000000000000064d6f64756c6500000000000000
*0b52696768744d6f64756c6500000000000000022e2a000000000000000a4c6566744d6f64756c
*6500000000000000022a2e000000000000000d54726176657273616c5769746800000000000000
*1067657454726176657273616c576974680000000000000012577261707065644170706c696361
*746976650000000000000015676574577261707065644170706c69636174697665000000000000
*000954726176657273616c000000000000000c67657454726176657273616c000000000000000d
*736e6f6354726176657273616c000000000000000a416374696f6e57697468000000000000000d
*676574416374696f6e57697468000000000000000c577261707065644d6f6e6164000000000000
*000f676574577261707065644d6f6e61640000000000000006416374696f6e0000000000000009
*676574416374696f6e000000000000000a736e6f63416374696f6e000000000000000974726176
*657273655f0000000000000004666f725f00000000000000056d61704d5f000000000000000566
*6f724d5f0000000000000007666f6c644d61700000000000000004666f6c640000000000000009
*636f6e6361744d61700000000000000003616e6400000000000000026f72000000000000000361
*6e790000000000000003616c6c000000000000000373756d000000000000000770726f64756374
*0000000000000004656c656d00000000000000076e6f74456c656d000000000000000666696c74
*6572000000000000000466696e6400000000000000056379636c65000000000000000672657065
*61740000000000000003524c450000000000000006676574524c45000000000000000144000000
*00000000064d6f6e6f696400000000000000054d617962650000000000000008466f6c6461626c
*6500000000000000076d617070656e6400000000000000076d636f6e6361740000000000000006
*6d656d70747900000000000000076765744475616c00000000000000044475616c000000000000
*0007617070456e646f0000000000000004456e646f0000000000000006676574416c6c00000000
*00000003416c6c0000000000000006676574416e790000000000000003416e7900000000000000
*0667657453756d000000000000000353756d000000000000000a67657450726f64756374000000
*000000000750726f64756374000000000000000867657446697273740000000000000005466972
*737400000000000000076765744c61737400000000000000044c617374000000000000000e6669
*6e676572747265652d302e30000000000000000f446174612e46696e6765725472656500000000
*0000000a46696e6765725472656500000000000000076d65617375726500000000000000084748
*432e576f72640000000000000005576f7264380000000000000004436861720000000000000007
*69735370616365000000000000000843617465676f727900000000000000033e3e3e0000000000
*0000033c3c3c00000000000000012e00000000000000026964000000000000000b4748432e436c
*617373657300000000000000036d696e00000000000000074e6f7468696e670000000000000003
*6d617800000000000000084748432e456e756d00000000000000086d6178426f756e6400000000
*000000086d696e426f756e6400000000000000074748432e4e756d000000000000000b4170706c
*69636174697665000000000000000b416c7465726e617469766500000000000000084748432e42
*61736500000000000000054d6f6e616400000000000000094d6f6e6164506c7573000000000000
*0004426f6f6c
newhex
*
rmfile ./dist/doc/html/monoids/monoids.haddock
binary ./dist/doc/html/monoids/plus.gif
oldhex
*47494638396109000900910000fefefe8282820202020000002c00000000090009000002148c8f
*a00bb6b29c82ca897b5b7871cfce74085200003b
newhex
*
rmfile ./dist/doc/html/monoids/plus.gif
hunk ./dist/doc/html/monoids/src/Data-Group-Combinators.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Group/Combinators.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Group.Combinators</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>-- Utilities for working with Groups that conflict with names from the "Prelude".</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- Intended to be imported qualified.</span>
-<a name="line-13"></a><span class='hs-comment'>--</span>
-<a name="line-14"></a><span class='hs-comment'>-- &gt; import Data.Group.Combinators as Group (replicate)</span>
-<a name="line-15"></a><span class='hs-comment'>--</span>
-<a name="line-16"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
-<a name="line-19"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span>
-<a name="line-21"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>replicate</span><span class='hs-layout'>)</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="replicate"></a><span class='hs-comment'>-- shamelessly stolen from Lennart Augustsson's post: </span>
-<a name="line-27"></a><span class='hs-comment'>-- <a href="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html">http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</a></span>
-<a name="line-28"></a><span class='hs-comment'>-- adapted to groups, which can permit negative exponents</span>
-<a name="line-29"></a><span class='hs-definition'>replicate</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-30"></a><span class='hs-definition'>replicate</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span> 
-<a name="line-31"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>gnegate</span> <span class='hs-varid'>x0</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>negate</span> <span class='hs-varid'>y0</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-33"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span>
-<a name="line-34"></a>    <span class='hs-keyword'>where</span>
-<a name="line-35"></a>        <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> 
-<a name="line-36"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span>
-<a name="line-37"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
-<a name="line-38"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-39"></a>        <span class='hs-varid'>g</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span> 
-<a name="line-40"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span>
-<a name="line-41"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span>
-<a name="line-42"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Group-Combinators.html
hunk ./dist/doc/html/monoids/src/Data-Group-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Group/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Group.Sugar</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>-- Syntactic sugar for working with groups that conflicts with names from the "Prelude".</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- &gt; import Prelude hiding ((-), (+), negate, subtract)</span>
-<a name="line-13"></a><span class='hs-comment'>-- &gt; import Data.Group.Sugar</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>negate</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>subtract</span>
-<a name="line-23"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span> <span class='hs-varid'>negate</span><span class='hs-layout'>,</span> <span class='hs-varid'>subtract</span><span class='hs-layout'>)</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>7</span> <span class='hs-comment'>-</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span>
-<a name="line-32"></a><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minus</span>
-<a name="line-33"></a>
-<a name="line-34"></a><a name="negate"></a><span class='hs-definition'>negate</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span>
-<a name="line-35"></a><span class='hs-definition'>negate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>gnegate</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="subtract"></a><span class='hs-definition'>subtract</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>g</span>
-<a name="line-38"></a><span class='hs-definition'>subtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>gsubtract</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Group-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Group.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Group.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module     : Data.Group</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright  : 2007-2009 Edward Kmett</span>
-<a name="line-5"></a><span class='hs-comment'>-- License    : BSD</span>
-<a name="line-6"></a><span class='hs-comment'>--</span>
-<a name="line-7"></a><span class='hs-comment'>-- Maintainer  : Edward Kmett &lt;ekmett@gmail.com&gt;</span>
-<a name="line-8"></a><span class='hs-comment'>-- Stability   : experimental</span>
-<a name="line-9"></a><span class='hs-comment'>-- Portability : portable</span>
-<a name="line-10"></a><span class='hs-comment'>--</span>
-<a name="line-11"></a><span class='hs-comment'>-- Extends 'Monoid' to support 'Group' operations</span>
-<a name="line-12"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span> 
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Group</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>gnegate</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>gsubtract</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>minus</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>6</span> <span class='hs-varop'>`minus`</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="Group"></a><span class='hs-comment'>-- | Minimal complete definition: 'gnegate' or 'minus'</span>
-<a name="line-29"></a><a name="Group"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyword'>where</span>
-<a name="line-30"></a>    <span class='hs-comment'>-- additive inverse</span>
-<a name="line-31"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-32"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-33"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> 
-<a name="line-34"></a>
-<a name="line-35"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minus</span> <span class='hs-varid'>zero</span>
-<a name="line-36"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>gnegate</span> <span class='hs-varid'>b</span> 
-<a name="line-37"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`gsubtract`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>gnegate</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`plus`</span> <span class='hs-varid'>b</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span> <span class='hs-varop'>.</span> <span class='hs-varid'>negate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getSum</span>
-<a name="line-41"></a>    <span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>Sum</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-comment'>-</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>    
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Fractional</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span> <span class='hs-varop'>.</span> <span class='hs-varid'>negate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getProduct</span>
-<a name="line-45"></a>    <span class='hs-conid'>Product</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>Product</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>/</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>    
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Dual</span> <span class='hs-varop'>.</span> <span class='hs-varid'>gnegate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getDual</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-51"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-varop'>.</span> <span class='hs-varid'>gnegate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getSelf</span>
-<a name="line-52"></a>    <span class='hs-conid'>Self</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-53"></a>
-<a name="line-54"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-55"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varop'>.</span> <span class='hs-varid'>gnegate</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getFromString</span>
-<a name="line-56"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Group.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Additive-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Additive/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Additive.Sugar</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>-- Syntactic sugar for working with a 'Monoid' that conflicts with names from the "Prelude".</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- &gt; import Prelude hiding ((+))</span>
-<a name="line-13"></a><span class='hs-comment'>-- &gt; import Data.Monoid.Additive.Sugar</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>6</span> <span class='hs-varop'>+</span> 
-<a name="line-26"></a>
-<a name="line-27"></a><a name="+"></a><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-28"></a><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Additive-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Additive.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Additive.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Additive</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>-- More easily understood aliases for "mappend" and "mempty" </span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- &gt; import Data.Monoid.Additive</span>
-<a name="line-13"></a><span class='hs-comment'>--</span>
-<a name="line-14"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-17"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span> 
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>plus</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>zero</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>6</span> <span class='hs-varop'>`plus`</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="plus"></a><span class='hs-definition'>plus</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-27"></a><span class='hs-definition'>plus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-28"></a>
-<a name="line-29"></a><a name="zero"></a><span class='hs-definition'>zero</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-30"></a><span class='hs-definition'>zero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Additive.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Applicative.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts, TypeOperators #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Applicative</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- Monoids for working with an 'Applicative' 'Functor'.</span>
-<a name="line-13"></a><span class='hs-comment'>--</span>
-<a name="line-14"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span> 
-<a name="line-17"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Traversal</span><span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span><span class='hs-layout'>,</span><span class='hs-varid'>getTraversal</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WrappedApplicative</span><span class='hs-layout'>(</span><span class='hs-conid'>WrappedApplicative</span><span class='hs-layout'>,</span><span class='hs-varid'>getWrappedApplicative</span><span class='hs-layout'>)</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>TraversalWith</span><span class='hs-layout'>(</span><span class='hs-conid'>TraversalWith</span><span class='hs-layout'>,</span><span class='hs-varid'>getTraversalWith</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>snocTraversal</span>
-<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-27"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span>
-<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-31"></a>
-<a name="line-32"></a><a name="Traversal"></a><span class='hs-comment'>-- | A 'Traversal' uses an glues together 'Applicative' actions with (*&gt;)</span>
-<a name="line-33"></a><a name="Traversal"></a><span class='hs-comment'>--   in the manner of 'traverse_' from "Data.Foldable". Any values returned by </span>
-<a name="line-34"></a><a name="Traversal"></a><span class='hs-comment'>--   reduced actions are discarded.</span>
-<a name="line-35"></a><a name="Traversal"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-38"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-39"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-40"></a>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-42"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-44"></a>    <span class='hs-conid'>Traversal</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Traversal</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>*&gt;</span> <span class='hs-varid'>pure</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-comment'>{-# RULES "unitTraversal" unit = Traversal #-}</span>
-<a name="line-47"></a><span class='hs-comment'>{-# RULES "snocTraversal" snoc = snocTraversal #-}</span>
-<a name="line-48"></a>
-<a name="line-49"></a><a name="snocTraversal"></a><span class='hs-comment'>-- | Efficiently avoid needlessly rebinding when using 'snoc' on an action that already returns ()</span>
-<a name="line-50"></a><span class='hs-comment'>--   A rewrite rule automatically applies this when possible</span>
-<a name="line-51"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Traversal</span> <span class='hs-varid'>f</span>
-<a name="line-52"></a><span class='hs-definition'>snocTraversal</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Traversal</span>
-<a name="line-53"></a>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-comment'>-- | A 'WrappedApplicative' turns any 'Alternative' instance into a 'Monoid'.</span>
-<a name="line-56"></a><span class='hs-comment'>--   It also provides a 'Multiplicative' instance for an 'Applicative' functor wrapped around a 'Monoid'</span>
-<a name="line-57"></a><span class='hs-comment'>--   and asserts that any 'Alternative' applied to a 'Monoid' forms a 'LeftSemiNearRing' </span>
-<a name="line-58"></a><span class='hs-comment'>--   under these operations.</span>
-<a name="line-59"></a>
-<a name="line-60"></a><a name="WrappedApplicative"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedApplicative</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getWrappedApplicative</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-61"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span><span class='hs-conid'>Copointed</span><span class='hs-layout'>)</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>empty</span> 
-<a name="line-65"></a>    <span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedApplicative</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&lt;|&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> 
-<a name="line-66"></a>
-<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-68"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span>
-<a name="line-69"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span>
-<a name="line-70"></a>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-72"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedApplicative</span> <span class='hs-varop'>.</span> <span class='hs-varid'>pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Alternative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedApplicative</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-75"></a>
-<a name="line-76"></a><span class='hs-comment'>-- | if @m@ is a 'Module' and @f@ is a 'Applicative' then @f `TraversalWith` m@ is a 'Module' as well</span>
-<a name="line-77"></a>
-<a name="line-78"></a><a name="TraversalWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>TraversalWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTraversalWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-79"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span><span class='hs-conid'>Applicative</span><span class='hs-layout'>,</span><span class='hs-conid'>Alternative</span><span class='hs-layout'>,</span><span class='hs-conid'>Copointed</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`TraversalWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span>
-<a name="line-83"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span>
-<a name="line-84"></a>
-<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`TraversalWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-86"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fmap</span> <span class='hs-varid'>gnegate</span>
-<a name="line-87"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>minus</span>
-<a name="line-88"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>gsubtract</span>
-<a name="line-89"></a>
-<a name="line-90"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`TraversalWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-91"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`TraversalWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-94"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-95"></a>
-<a name="line-96"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`TraversalWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-97"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varop'>&lt;$&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-98"></a>
-<a name="line-99"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`TraversalWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Applicative.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Categorical.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Categorical.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE GADTs, FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Categorical</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Categorical</span>
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
-<a name="line-17"></a>    <span class='hs-comment'>-- * Generalized Endo</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>GEndo</span><span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span><span class='hs-layout'>,</span> <span class='hs-varid'>getGEndo</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>    <span class='hs-comment'>-- * Monoids as Categories</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Mon</span><span class='hs-layout'>(</span><span class='hs-conid'>Mon</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>getMon</span>
-<a name="line-22"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>id</span><span class='hs-layout'>)</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Category</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="GEndo"></a><span class='hs-comment'>-- | The 'Monoid' of the endomorphisms over some object in an arbitrary 'Category'.</span>
-<a name="line-29"></a><a name="GEndo"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GEndo</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getGEndo</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Category</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>GEndo</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GEndo</span> <span class='hs-varid'>id</span>
-<a name="line-33"></a>    <span class='hs-conid'>GEndo</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>GEndo</span> <span class='hs-varid'>g</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GEndo</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>g</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-comment'>-- | A 'Monoid' is just a 'Category' with one object. </span>
-<a name="line-36"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> <span class='hs-varid'>o</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-conid'>Mon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-varid'>a</span>
-<a name="line-38"></a>
-<a name="line-39"></a><a name="getMon"></a><span class='hs-comment'>-- | Extract the 'Monoid' from its representation as a 'Category'</span>
-<a name="line-40"></a><span class='hs-definition'>getMon</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-41"></a><span class='hs-definition'>getMon</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Category</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>id</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>mempty</span>
-<a name="line-45"></a>    <span class='hs-conid'>Mon</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Mon</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>id</span>
-<a name="line-49"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>.</span><span class='hs-layout'>)</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>Mon</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-52"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Mon</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Categorical.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Combinators.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Combinators.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Combinators</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (type families, MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- Utilities for working with Monoids that conflict with names from the "Prelude",</span>
-<a name="line-13"></a><span class='hs-comment'>-- "Data.Foldable", "Control.Monad" or elsewhere. Intended to be imported qualified.</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-- &gt; import Data.Group.Combinators as Monoid </span>
-<a name="line-16"></a><span class='hs-comment'>--</span>
-<a name="line-17"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span>
-<a name="line-20"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-21"></a>    <span class='hs-comment'>-- * Monadic Reduction</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapM_</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>forM_</span>
-<a name="line-24"></a>    <span class='hs-comment'>-- * Applicative Reduction</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>traverse_</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>for_</span>
-<a name="line-27"></a>    <span class='hs-comment'>-- * Logical Reduction</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>and</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>or</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>any</span>
-<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>all</span>
-<a name="line-32"></a>    <span class='hs-comment'>-- * Monoidal Reduction</span>
-<a name="line-33"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMap</span>
-<a name="line-34"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fold</span>
-<a name="line-35"></a>    <span class='hs-comment'>-- * List-Like Reduction</span>
-<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span>
-<a name="line-37"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>elem</span>
-<a name="line-38"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>filter</span>
-<a name="line-39"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>find</span>
-<a name="line-40"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sum</span>
-<a name="line-41"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>product</span>
-<a name="line-42"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span>
-<a name="line-43"></a>    <span class='hs-comment'>-- * List-Like Monoid Generation</span>
-<a name="line-44"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span>
-<a name="line-45"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span>
-<a name="line-46"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span>
-<a name="line-47"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>
-<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapM_</span><span class='hs-layout'>,</span> <span class='hs-varid'>any</span><span class='hs-layout'>,</span> <span class='hs-varid'>elem</span><span class='hs-layout'>,</span> <span class='hs-varid'>filter</span><span class='hs-layout'>,</span> <span class='hs-varid'>concatMap</span><span class='hs-layout'>,</span> <span class='hs-varid'>and</span><span class='hs-layout'>,</span> <span class='hs-varid'>or</span><span class='hs-layout'>,</span> <span class='hs-varid'>all</span><span class='hs-layout'>,</span> <span class='hs-varid'>sum</span><span class='hs-layout'>,</span> <span class='hs-varid'>product</span><span class='hs-layout'>,</span> <span class='hs-varid'>notElem</span><span class='hs-layout'>,</span> <span class='hs-varid'>replicate</span><span class='hs-layout'>,</span> <span class='hs-varid'>cycle</span><span class='hs-layout'>,</span> <span class='hs-varid'>repeat</span><span class='hs-layout'>)</span>
-<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-54"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-55"></a>
-<a name="line-56"></a><a name="traverse_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Traversal' monoid. A specialized version of its namesake in "Data.Foldable"</span>
-<a name="line-57"></a><span class='hs-definition'>traverse_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-58"></a><span class='hs-definition'>traverse_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getTraversal</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-59"></a>    
-<a name="line-60"></a><a name="for_"></a><span class='hs-comment'>-- | flipped 'traverse_' as in "Data.Foldable"</span>
-<a name="line-61"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-conid'>()</span>
-<a name="line-62"></a><span class='hs-definition'>for_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>traverse_</span>
-<a name="line-63"></a>
-<a name="line-64"></a><a name="mapM_"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Action' monoid. A specialized version of its namesake from "Data.Foldable" and "Control.Monad"</span>
-<a name="line-65"></a><span class='hs-definition'>mapM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-66"></a><span class='hs-definition'>mapM_</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAction</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-67"></a>
-<a name="line-68"></a><a name="forM_"></a><span class='hs-comment'>-- | flipped 'mapM_' as in "Data.Foldable" and "Control.Monad"</span>
-<a name="line-69"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span>
-<a name="line-70"></a><span class='hs-definition'>forM_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varid'>mapM_</span>
-<a name="line-71"></a>
-<a name="line-72"></a><a name="foldMap"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-73"></a><span class='hs-definition'>foldMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-74"></a><span class='hs-definition'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-75"></a>
-<a name="line-76"></a><a name="fold"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' using the 'Self' monoid. A specialized version of its namesake from "Data.Foldable"</span>
-<a name="line-77"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-78"></a><span class='hs-definition'>fold</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-79"></a>
-<a name="line-80"></a><a name="concatMap"></a><span class='hs-comment'>-- | A further specialization of "foldMap"</span>
-<a name="line-81"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>b</span><span class='hs-keyglyph'>]</span>
-<a name="line-82"></a><span class='hs-definition'>concatMap</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="and"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
-<a name="line-85"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-86"></a><span class='hs-definition'>and</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-87"></a>
-<a name="line-88"></a><a name="or"></a><span class='hs-comment'>-- | Efficiently 'reduce' a 'Generator' that contains values of type 'Bool'</span>
-<a name="line-89"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-90"></a><span class='hs-definition'>or</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-91"></a>
-<a name="line-92"></a><a name="any"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if any of its values match the supplied predicate</span>
-<a name="line-93"></a><span class='hs-definition'>any</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-94"></a><span class='hs-definition'>any</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAny</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-95"></a>
-<a name="line-96"></a><a name="all"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' checking to see if all of its values match the supplied predicate</span>
-<a name="line-97"></a><span class='hs-definition'>all</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-98"></a><span class='hs-definition'>all</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getAll</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-99"></a>
-<a name="line-100"></a><a name="sum"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' using the 'Sum' 'Monoid'</span>
-<a name="line-101"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-102"></a><span class='hs-definition'>sum</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSum</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-103"></a>
-<a name="line-104"></a><a name="product"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' any 'Generator' using the 'Product' 'Monoid'</span>
-<a name="line-105"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span>
-<a name="line-106"></a><span class='hs-definition'>product</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getProduct</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-107"></a>
-<a name="line-108"></a><a name="elem"></a><span class='hs-comment'>-- | Check to see if 'any' member of the 'Generator' matches the supplied value</span>
-<a name="line-109"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-110"></a><span class='hs-definition'>elem</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>any</span> <span class='hs-varop'>.</span> <span class='hs-layout'>(</span><span class='hs-varop'>==</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>
-<a name="line-112"></a><a name="notElem"></a><span class='hs-comment'>-- | Check to make sure that the supplied value is not a member of the 'Generator'</span>
-<a name="line-113"></a><span class='hs-definition'>notElem</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Eq</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-114"></a><span class='hs-definition'>notElem</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elem</span> <span class='hs-varid'>x</span>
-<a name="line-115"></a>
-<a name="line-116"></a><a name="filter"></a><span class='hs-comment'>-- | Efficiently 'mapReduce' a subset of the elements in a 'Generator'</span>
-<a name="line-117"></a><span class='hs-definition'>filter</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-118"></a><span class='hs-definition'>filter</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>p</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span>
-<a name="line-120"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-121"></a>
-<a name="line-122"></a><a name="find"></a><span class='hs-comment'>-- | A specialization of 'filter' using the 'First' 'Monoid', analogous to 'Data.List.find'</span>
-<a name="line-123"></a><span class='hs-definition'>find</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-124"></a><span class='hs-definition'>find</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getFirst</span> <span class='hs-varop'>.</span> <span class='hs-varid'>filter</span> <span class='hs-varid'>p</span>
-<a name="line-125"></a>
-<a name="line-126"></a><a name="replicate"></a><span class='hs-comment'>-- | A generalization of 'Data.List.replicate' to an arbitrary 'Monoid'. Adapted from </span>
-<a name="line-127"></a><span class='hs-comment'>-- &lt;<a href="http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html">http://augustss.blogspot.com/2008/07/lost-and-found-if-i-write-108-in.html</a>&gt;</span>
-<a name="line-128"></a><span class='hs-definition'>replicate</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-129"></a><span class='hs-definition'>replicate</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span> 
-<a name="line-130"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span> <span class='hs-comment'>-- error "negative length"</span>
-<a name="line-131"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y0</span> <span class='hs-varop'>==</span> <span class='hs-num'>0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-132"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varid'>x0</span> <span class='hs-varid'>y0</span>
-<a name="line-133"></a>    <span class='hs-keyword'>where</span>
-<a name="line-134"></a>        <span class='hs-varid'>f</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> 
-<a name="line-135"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span>
-<a name="line-136"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span>
-<a name="line-137"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>x</span>
-<a name="line-138"></a>        <span class='hs-varid'>g</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span> 
-<a name="line-139"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>even</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-varid'>z</span>
-<a name="line-140"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>y</span> <span class='hs-varop'>==</span> <span class='hs-num'>1</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span>
-<a name="line-141"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-comment'>-</span> <span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`quot`</span> <span class='hs-num'>2</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span>
-<a name="line-142"></a>
-<a name="line-143"></a><a name="cycle"></a><span class='hs-comment'>-- | A generalization of 'Data.List.cycle' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
-<a name="line-144"></a><span class='hs-definition'>cycle</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-145"></a><span class='hs-definition'>cycle</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs'</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>xs'</span>
-<a name="line-146"></a>
-<a name="line-147"></a><a name="repeat"></a><span class='hs-comment'>-- | A generalization of 'Data.List.repeat' to an arbitrary 'Monoid'. May fail to terminate for some values in some monoids.</span>
-<a name="line-148"></a><span class='hs-definition'>repeat</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-149"></a><span class='hs-definition'>repeat</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-keyword'>where</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>cons</span> <span class='hs-varid'>x</span> <span class='hs-varid'>xs</span> 
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Combinators.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-FromString.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/FromString.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleContexts, FlexibleInstances, MultiParamTypeClasses, UndecidableInstances #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Additive</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (overloaded strings, MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- Transform any 'Char' 'Reducer' into an 'IsString' instance so it can be</span>
-<a name="line-13"></a><span class='hs-comment'>-- used directly with overloaded string literals.</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span> 
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>FromString</span><span class='hs-layout'>(</span><span class='hs-conid'>FromString</span><span class='hs-layout'>,</span><span class='hs-varid'>getFromString</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Instances</span> <span class='hs-conid'>()</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>GHC</span><span class='hs-varop'>.</span><span class='hs-conid'>Exts</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="FromString"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getFromString</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>mempty</span>
-<a name="line-32"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-38"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varop'>.</span> <span class='hs-varid'>reduce</span>
-<a name="line-39"></a>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>FromString</span> <span class='hs-keyword'>where</span>
-<a name="line-41"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>FromString</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getFromString</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>FromString</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-FromString.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator-LZ78.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator/LZ78.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE TypeFamilies, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span><span class='hs-varop'>.</span><span class='hs-conid'>LZ78</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LZ78</span><span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span><span class='hs-layout'>,</span> <span class='hs-varid'>getLZ78</span><span class='hs-layout'>)</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>decode</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>encode</span>
-<a name="line-7"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-8"></a>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-11"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-12"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-13"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-14"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-15"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
-<a name="line-16"></a>
-<a name="line-17"></a><a name="LZ78"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLZ78</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>}</span> 
-<a name="line-18"></a>
-<a name="line-19"></a><a name="emptyDict"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span>
-<a name="line-20"></a><span class='hs-definition'>emptyDict</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-24"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>LZ78</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>emptyDict</span> <span class='hs-varid'>xs</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="mapTo'"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-27"></a><span class='hs-definition'>mapTo'</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>_</span>   <span class='hs-conid'>[]</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span>
-<a name="line-28"></a><span class='hs-definition'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>w</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>ws</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo'</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>s</span> <span class='hs-varop'>|&gt;</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-varid'>ws</span> 
-<a name="line-29"></a>    <span class='hs-keyword'>where</span> 
-<a name="line-30"></a>        <span class='hs-varid'>v</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>index</span> <span class='hs-varid'>s</span> <span class='hs-varid'>w</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    
-<a name="line-32"></a><a name="decode"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span>
-<a name="line-33"></a><span class='hs-definition'>decode</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-34"></a>
-<a name="line-35"></a><a name="encode"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>LZ78</span> <span class='hs-varid'>a</span>
-<a name="line-36"></a><span class='hs-definition'>encode</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LZ78</span> <span class='hs-varop'>.</span> <span class='hs-varid'>encode'</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span> <span class='hs-num'>1</span> <span class='hs-num'>0</span>
-<a name="line-37"></a>
-<a name="line-38"></a><a name="encode'"></a><span class='hs-definition'>encode'</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>a</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-39"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>p</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-40"></a><span class='hs-definition'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>lookup</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-keyword'>of</span>
-<a name="line-41"></a>    <span class='hs-conid'>Just</span> <span class='hs-varid'>p'</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>encode'</span> <span class='hs-varid'>d</span> <span class='hs-varid'>f</span> <span class='hs-varid'>p'</span> <span class='hs-varid'>cs</span>
-<a name="line-42"></a>    <span class='hs-conid'>Nothing</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-conop'>:</span><span class='hs-varid'>encode'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-layout'>(</span><span class='hs-varid'>p</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>succ</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-num'>0</span> <span class='hs-varid'>cs</span>
-<a name="line-43"></a><span class='hs-definition'>encode'</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
-<a name="line-44"></a>
-<a name="line-45"></a><a name="prop_DecodeEncode"></a><span class='hs-definition'>prop_DecodeEncode</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-46"></a><span class='hs-definition'>prop_DecodeEncode</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>decode</span> <span class='hs-layout'>(</span><span class='hs-varid'>encode</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span> <span class='hs-varop'>==</span> <span class='hs-varid'>xs</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Generator-LZ78.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Generator.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Generator.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances, TypeFamilies #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Generator</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- A 'Generator' @c@ is a possibly-specialized container, which contains values of </span>
-<a name="line-13"></a><span class='hs-comment'>-- type 'Elem' @c@, and which knows how to efficiently apply a 'Reducer' to extract</span>
-<a name="line-14"></a><span class='hs-comment'>-- an answer.</span>
-<a name="line-15"></a><span class='hs-comment'>--</span>
-<a name="line-16"></a><span class='hs-comment'>-- Since a 'Generator' is not polymorphic in its contents, it is more specialized</span>
-<a name="line-17"></a><span class='hs-comment'>-- than "Data.Foldable.Foldable", and a 'Reducer' may supply efficient left-to-right</span>
-<a name="line-18"></a><span class='hs-comment'>-- and right-to-left reduction strategies that a 'Generator' may avail itself of.</span>
-<a name="line-19"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-22"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Generator</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapReduce</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapTo</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>mapFrom</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>reduce</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Keys</span><span class='hs-layout'>(</span><span class='hs-conid'>Keys</span><span class='hs-layout'>,</span> <span class='hs-varid'>getKeys</span><span class='hs-layout'>)</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Values</span><span class='hs-layout'>(</span><span class='hs-conid'>Values</span><span class='hs-layout'>,</span> <span class='hs-varid'>getValues</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>(</span><span class='hs-conid'>Char8</span><span class='hs-layout'>,</span> <span class='hs-varid'>getChar8</span><span class='hs-layout'>)</span>
-<a name="line-32"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Array</span> 
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-layout'>(</span><span class='hs-conid'>Text</span><span class='hs-layout'>)</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span> <span class='hs-layout'>(</span><span class='hs-varid'>fold</span><span class='hs-layout'>,</span><span class='hs-varid'>foldMap</span><span class='hs-layout'>)</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Text</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Text</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Strict8</span> <span class='hs-layout'>(</span><span class='hs-varid'>foldl'</span><span class='hs-layout'>)</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy</span> <span class='hs-layout'>(</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>,</span> <span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
-<a name="line-42"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>Char8</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Lazy8</span> <span class='hs-layout'>(</span><span class='hs-varid'>toChunks</span><span class='hs-layout'>)</span>
-<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span><span class='hs-layout'>,</span> <span class='hs-conid'>FingerTree</span><span class='hs-layout'>)</span>
-<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
-<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
-<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
-<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
-<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
-<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Parallel</span><span class='hs-varop'>.</span><span class='hs-conid'>Strategies</span>
-<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-comment'>-- | minimal definition 'mapReduce' or 'mapTo'</span>
-<a name="line-59"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>::</span> <span class='hs-varop'>*</span> 
-<a name="line-61"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-62"></a>    <span class='hs-varid'>mapTo</span>     <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-63"></a>    <span class='hs-varid'>mapFrom</span>   <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-64"></a>
-<a name="line-65"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>mempty</span>
-<a name="line-66"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-67"></a>    <span class='hs-varid'>mapFrom</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-70"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-71"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyword'>where</span>
-<a name="line-74"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Word8</span>
-<a name="line-75"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>Text</span> <span class='hs-keyword'>where</span>
-<a name="line-78"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>Text</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-79"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-83"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-84"></a>
-<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-86"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
-<a name="line-87"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-88"></a>
-<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-90"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>c</span>
-<a name="line-91"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
-<a name="line-94"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-95"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span>
-<a name="line-99"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-100"></a>
-<a name="line-101"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-102"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> 
-<a name="line-107"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>toList</span>
-<a name="line-108"></a>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>i</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>assocs</span>
-<a name="line-112"></a>
-<a name="line-113"></a><a name="Keys"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the keys of an indexed container</span>
-<a name="line-114"></a><a name="Keys"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Keys</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Keys</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getKeys</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-115"></a>
-<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-117"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-118"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-119"></a>
-<a name="line-120"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-121"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span>
-<a name="line-122"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>keys</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-123"></a>
-<a name="line-124"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-125"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Keys</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>i</span>
-<a name="line-126"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>range</span> <span class='hs-varop'>.</span> <span class='hs-varid'>bounds</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getKeys</span>
-<a name="line-127"></a>
-<a name="line-128"></a><a name="Values"></a><span class='hs-comment'>-- | a 'Generator' transformer that asks only for the values contained in an indexed container</span>
-<a name="line-129"></a><a name="Values"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Values</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Values</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getValues</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-130"></a>
-<a name="line-131"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-132"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-133"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-134"></a>
-<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-136"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-137"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-138"></a>
-<a name="line-139"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ix</span> <span class='hs-varid'>i</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-140"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Values</span> <span class='hs-layout'>(</span><span class='hs-conid'>Array</span> <span class='hs-varid'>i</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>e</span>
-<a name="line-141"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-varid'>elems</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getValues</span>
-<a name="line-142"></a>
-<a name="line-143"></a><a name="Char8"></a><span class='hs-comment'>-- | a 'Generator' transformer that treats 'Word8' as 'Char'</span>
-<a name="line-144"></a><a name="Char8"></a><span class='hs-comment'>-- This lets you use a 'ByteString' as a 'Char' source without going through a 'Monoid' transformer like 'UTF8'</span>
-<a name="line-145"></a><a name="Char8"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Char8</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char8</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getChar8</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-146"></a>
-<a name="line-147"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-148"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Strict</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-149"></a>    <span class='hs-varid'>mapTo</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Strict8</span><span class='hs-varop'>.</span><span class='hs-varid'>foldl'</span> <span class='hs-layout'>(</span><span class='hs-keyglyph'>\</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
-<a name="line-150"></a>
-<a name="line-151"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Generator</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-152"></a>    <span class='hs-keyword'>type</span> <span class='hs-conid'>Elem</span> <span class='hs-layout'>(</span><span class='hs-conid'>Char8</span> <span class='hs-conid'>Lazy</span><span class='hs-varop'>.</span><span class='hs-conid'>ByteString</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Char</span>
-<a name="line-153"></a>    <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fold</span> <span class='hs-varop'>.</span> <span class='hs-varid'>parMap</span> <span class='hs-varid'>rwhnf</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>f</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Char8</span><span class='hs-layout'>)</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Lazy8</span><span class='hs-varop'>.</span><span class='hs-varid'>toChunks</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getChar8</span>
-<a name="line-154"></a>
-<a name="line-155"></a><a name="reduce"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Strict.ByteString -&gt; m #-}</span>
-<a name="line-156"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Word8 `Reducer` m) =&gt; Lazy.ByteString -&gt; m #-}</span>
-<a name="line-157"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Strict.ByteString -&gt; m #-}</span>
-<a name="line-158"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Char8 Lazy.ByteString -&gt; m #-}</span>
-<a name="line-159"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (c `Reducer` m) =&gt; [c] -&gt; m #-}</span>
-<a name="line-160"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Generator (FingerTree v e), e `Reducer` m) =&gt; FingerTree v e -&gt; m #-}</span>
-<a name="line-161"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Char `Reducer` m) =&gt; Text -&gt; m #-}</span>
-<a name="line-162"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (e `Reducer` m) =&gt; Seq e -&gt; m #-}</span>
-<a name="line-163"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; IntSet -&gt; m #-}</span>
-<a name="line-164"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (a `Reducer` m) =&gt; Set a -&gt; m #-}</span>
-<a name="line-165"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((Int,v) `Reducer` m) =&gt; IntMap v -&gt; m #-}</span>
-<a name="line-166"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: ((k,v) `Reducer` m) =&gt; Map k v -&gt; m #-}</span>
-<a name="line-167"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (Int `Reducer` m) =&gt; Keys (IntMap v) -&gt; m #-}</span>
-<a name="line-168"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (k `Reducer` m) =&gt; Keys (Map k v) -&gt; m #-}</span>
-<a name="line-169"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (IntMap v) -&gt; m #-}</span>
-<a name="line-170"></a><span class='hs-comment'>{-# SPECIALIZE reduce :: (v `Reducer` m) =&gt; Values (Map k v) -&gt; m #-}</span>
-<a name="line-171"></a><span class='hs-comment'>-- | Apply a 'Reducer' directly to the elements of a 'Generator'</span>
-<a name="line-172"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-173"></a><span class='hs-definition'>reduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Generator.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-RunLengthEncoding.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/RunLengthEncoding.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Lexical.RunLengthEncoding</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- A simple 'Monoid' transformer that turns any monoidal 'Reducer' into a</span>
-<a name="line-13"></a><span class='hs-comment'>-- a reducer that expects to be supplied both a run length @n@ with each item</span>
-<a name="line-14"></a><span class='hs-comment'>-- and which efficiently exponentiates the result of 'unit' @n@ times through </span>
-<a name="line-15"></a><span class='hs-comment'>-- 'replicate'.</span>
-<a name="line-16"></a><span class='hs-comment'>--</span>
-<a name="line-17"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>RunLengthEncoding</span> 
-<a name="line-20"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RLE</span><span class='hs-layout'>(</span><span class='hs-conid'>RLE</span><span class='hs-layout'>,</span><span class='hs-varid'>getRLE</span><span class='hs-layout'>)</span> 
-<a name="line-22"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>replicate</span><span class='hs-layout'>)</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Combinators</span> <span class='hs-layout'>(</span><span class='hs-varid'>replicate</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><a name="RLE"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>n</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getRLE</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>n</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>mempty</span>
-<a name="line-32"></a>    <span class='hs-conid'>RLE</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>RLE</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Integral</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>RLE</span> <span class='hs-varid'>n</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>~</span><span class='hs-layout'>(</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>RLE</span> <span class='hs-varop'>$</span> <span class='hs-varid'>replicate</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>n</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-RunLengthEncoding.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/SourcePosition.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, OverloadedStrings #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Lexical.SourcePosition</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs, OverloadedStrings)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- Incrementally determine locations in a source file through local information</span>
-<a name="line-13"></a><span class='hs-comment'>-- This allows for efficient recomputation of line #s and token locations</span>
-<a name="line-14"></a><span class='hs-comment'>-- while the file is being interactively updated by storing this as a supplemental</span>
-<a name="line-15"></a><span class='hs-comment'>-- measure on a 'FingerTree'.</span>
-<a name="line-16"></a><span class='hs-comment'>--</span>
-<a name="line-17"></a><span class='hs-comment'>-- The general idea is to use this as part of a measure in a 'FingerTree' so you can</span>
-<a name="line-18"></a><span class='hs-comment'>-- use `mappend` to prepend a 'startOfFile' with the file information.</span>
-<a name="line-19"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>SourcePosition</span>
-<a name="line-22"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>nextTab</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourcePosition</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceLine</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>sourceColumn</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>startOfFile</span>
-<a name="line-30"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>showSourcePosition</span>
-<a name="line-31"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>lex</span><span class='hs-layout'>)</span>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Extras</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
-<a name="line-39"></a>
-<a name="line-40"></a><a name="SourceLine"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceLine</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-41"></a><a name="SourceColumn"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>SourceColumn</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Int</span>
-<a name="line-42"></a>
-<a name="line-43"></a><a name="SourcePosition"></a><span class='hs-comment'>-- | A 'Monoid' of partial information about locations in a source file.</span>
-<a name="line-44"></a><a name="SourcePosition"></a><span class='hs-comment'>--   This is polymorphic in the kind of information you want to maintain about each source file.</span>
-<a name="line-45"></a><a name="SourcePosition"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span> 
-<a name="line-46"></a>        <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>file</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-comment'>-- ^ An absolute position in a file is known, or an overriding #line directive has been seen</span>
-<a name="line-47"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Lines</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceLine</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>    <span class='hs-comment'>-- ^ We've seen some carriage returns.</span>
-<a name="line-48"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Columns</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>              <span class='hs-comment'>-- ^ We've only seen part of a line.</span>
-<a name="line-49"></a>        <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Tab</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span> <span class='hs-varop'>!</span><span class='hs-conid'>SourceColumn</span>    <span class='hs-comment'>-- ^ We have an unhandled tab to deal with.</span>
-<a name="line-50"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Eq</span><span class='hs-layout'>)</span>
-<a name="line-51"></a>
-<a name="line-52"></a><a name="nextTab"></a><span class='hs-comment'>-- | Compute the location of the next standard 8-column aligned tab</span>
-<a name="line-53"></a><span class='hs-definition'>nextTab</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-54"></a><span class='hs-definition'>nextTab</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-layout'>(</span><span class='hs-num'>8</span> <span class='hs-comment'>-</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-comment'>-</span><span class='hs-num'>1</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mod`</span> <span class='hs-num'>8</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>g</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-layout'>(</span><span class='hs-varid'>g</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-58"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span>
-<a name="line-59"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span>
-<a name="line-60"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>
-<a name="line-61"></a>
-<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-63"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-64"></a>
-<a name="line-65"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorZero</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-66"></a>    <span class='hs-varid'>fzero</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-67"></a>
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>FunctorPlus</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>fplus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span>
-<a name="line-70"></a>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-72"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-comment'>-- accumulate partial information</span>
-<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-76"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>0</span>
-<a name="line-77"></a>
-<a name="line-78"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-79"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>    <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-81"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span>
-<a name="line-82"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>    <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-84"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-85"></a>    <span class='hs-conid'>Columns</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>y</span>
-<a name="line-86"></a>    <span class='hs-conid'>Tab</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-varid'>d</span>
-<a name="line-87"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Columns</span> <span class='hs-varid'>d</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-88"></a>    <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span>   <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x'</span> <span class='hs-varid'>y'</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-varid'>x</span> <span class='hs-layout'>(</span><span class='hs-varid'>nextTab</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span> <span class='hs-varop'>+</span> <span class='hs-varid'>x'</span><span class='hs-layout'>)</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y'</span><span class='hs-layout'>)</span>
-<a name="line-89"></a>    <span class='hs-keyword'>_</span>         <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pos</span>
-<a name="line-90"></a>
-<a name="line-91"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-92"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-num'>1</span> <span class='hs-num'>1</span>
-<a name="line-93"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tab</span> <span class='hs-num'>0</span> <span class='hs-num'>0</span> 
-<a name="line-94"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span>    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Columns</span> <span class='hs-num'>1</span>
-<a name="line-95"></a>
-<a name="line-96"></a><span class='hs-comment'>-- Indicate that we ignore invalid characters to the UTF8 parser</span>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>file</span><span class='hs-layout'>)</span>
-<a name="line-98"></a>    
-<a name="line-99"></a><a name="startOfFile"></a><span class='hs-comment'>-- | lift information about a source file into a starting 'SourcePosition' for that file</span>
-<a name="line-100"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span>
-<a name="line-101"></a><span class='hs-definition'>startOfFile</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span>
-<a name="line-102"></a>
-<a name="line-103"></a><a name="sourceColumn"></a><span class='hs-comment'>-- | extract partial information about the current column, even in the absence of knowledge of the source file</span>
-<a name="line-104"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceColumn</span>
-<a name="line-105"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-106"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>c</span>
-<a name="line-107"></a><span class='hs-definition'>sourceColumn</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-108"></a>
-<a name="line-109"></a><a name="sourceLine"></a><span class='hs-comment'>-- | extract partial information about the current line number if possible</span>
-<a name="line-110"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Maybe</span> <span class='hs-conid'>SourceLine</span>
-<a name="line-111"></a><span class='hs-definition'>sourceLine</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>l</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Just</span> <span class='hs-varid'>l</span>
-<a name="line-112"></a><span class='hs-definition'>sourceLine</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Nothing</span>
-<a name="line-113"></a>
-<a name="line-114"></a><a name="showSourcePosition"></a><span class='hs-comment'>-- | extract the standard format for an absolute source position</span>
-<a name="line-115"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>SourcePosition</span> <span class='hs-conid'>String</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>String</span>
-<a name="line-116"></a><span class='hs-definition'>showSourcePosition</span> <span class='hs-varid'>pos</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-varid'>point</span> <span class='hs-str'>"-"</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>pos</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-117"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-layout'>(</span><span class='hs-conid'>Pos</span> <span class='hs-varid'>f</span> <span class='hs-varid'>l</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>f</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-str'>":"</span> <span class='hs-varop'>++</span> <span class='hs-varid'>show</span> <span class='hs-varid'>c</span>
-<a name="line-118"></a>    <span class='hs-varid'>showSourcePosition'</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>undefined</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-SourcePosition.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/UTF8/Decoder.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Lexical.UTF8.Decoder</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- UTF8 encoded unicode characters can be parsed both forwards and backwards,</span>
-<a name="line-13"></a><span class='hs-comment'>-- since the start of each 'Char' is clearly marked. This 'Monoid' accumulates</span>
-<a name="line-14"></a><span class='hs-comment'>-- information about the characters represented and reduces that information</span>
-<a name="line-15"></a><span class='hs-comment'>-- using a 'CharReducer', which is just a 'Reducer' 'Monoid' that knows what </span>
-<a name="line-16"></a><span class='hs-comment'>-- it wants to do about an 'invalidChar' -- a  string of 'Word8' values that </span>
-<a name="line-17"></a><span class='hs-comment'>-- don't form a valid UTF8 character.</span>
-<a name="line-18"></a><span class='hs-comment'>--</span>
-<a name="line-19"></a><span class='hs-comment'>-- As this monoid parses chars it just feeds them upstream to the underlying</span>
-<a name="line-20"></a><span class='hs-comment'>-- CharReducer. Efficient left-to-right and right-to-left traversals are </span>
-<a name="line-21"></a><span class='hs-comment'>-- supplied so that a lazy 'ByteString' can be parsed efficiently by </span>
-<a name="line-22"></a><span class='hs-comment'>-- chunking it into strict chunks, and batching the traversals over each</span>
-<a name="line-23"></a><span class='hs-comment'>-- before stitching the edges together.</span>
-<a name="line-24"></a><span class='hs-comment'>--</span>
-<a name="line-25"></a><span class='hs-comment'>-- Because this needs to be a 'Monoid' and should return the exact same result</span>
-<a name="line-26"></a><span class='hs-comment'>-- regardless of forward or backwards parsing, it chooses to parse only </span>
-<a name="line-27"></a><span class='hs-comment'>-- canonical UTF8 unlike most Haskell UTF8 parsers, which will blissfully </span>
-<a name="line-28"></a><span class='hs-comment'>-- accept illegal alternative long encodings of a character. </span>
-<a name="line-29"></a><span class='hs-comment'>--</span>
-<a name="line-30"></a><span class='hs-comment'>-- This actually fixes a potential class of security issues in some scenarios:</span>
-<a name="line-31"></a><span class='hs-comment'>--</span>
-<a name="line-32"></a><span class='hs-comment'>-- &lt;<a href="http://prowebdevelopmentblog.com/content/big-overhaul-java-utf-8-charset">http://prowebdevelopmentblog.com/content/big-overhaul-java-utf-8-charset</a>&gt;</span>
-<a name="line-33"></a><span class='hs-comment'>--</span>
-<a name="line-34"></a><span class='hs-comment'>-- NB: Due to naive use of a list to track the tail of an unfinished character </span>
-<a name="line-35"></a><span class='hs-comment'>-- this may exhibit @O(n^2)@ behavior parsing backwards along an invalid sequence </span>
-<a name="line-36"></a><span class='hs-comment'>-- of a large number of bytes that all claim to be in the tail of a character.</span>
-<a name="line-37"></a><span class='hs-comment'>--</span>
-<a name="line-38"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-39"></a>
-<a name="line-40"></a>
-<a name="line-41"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>UTF8</span><span class='hs-varop'>.</span><span class='hs-conid'>Decoder</span> 
-<a name="line-42"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-43"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UTF8</span>
-<a name="line-44"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runUTF8</span>
-<a name="line-45"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    
-<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Bits</span> <span class='hs-layout'>(</span><span class='hs-varid'>shiftL</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.&amp;.</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>.|.</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-49"></a>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-comment'>-- Incrementally reduce canonical RFC3629 UTF-8 Characters</span>
-<a name="line-56"></a>
-<a name="line-57"></a><a name="H"></a><span class='hs-comment'>-- utf8 characters are at most 4 characters long, so we need only retain state for 3 of them</span>
-<a name="line-58"></a><a name="H"></a><span class='hs-comment'>-- moreover their length is able to be determined a priori, so lets store that intrinsically in the constructor</span>
-<a name="line-59"></a><a name="H"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>H0</span>
-<a name="line-60"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H2_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> 
-<a name="line-61"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-62"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H3_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-63"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_1</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-64"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_2</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-65"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-conid'>H4_3</span> <span class='hs-comment'>{-# UNPACK #-}</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span> <span class='hs-varop'>!</span><span class='hs-conid'>Word8</span>
-<a name="line-66"></a>
-<a name="line-67"></a><a name="T"></a><span class='hs-comment'>-- words expressing the tail of a character, each between 0x80 and 0xbf</span>
-<a name="line-68"></a><a name="T"></a><span class='hs-comment'>-- this is arbitrary length to simplify making the parser truly monoidal</span>
-<a name="line-69"></a><a name="T"></a><span class='hs-comment'>-- this probably means we have O(n^2) worst case performance in the face of very long runs of chars that look like 10xxxxxx</span>
-<a name="line-70"></a><a name="T"></a><span class='hs-keyword'>type</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span>
-<a name="line-71"></a>
-<a name="line-72"></a><a name="UTF8"></a><span class='hs-comment'>-- S is a segment that contains a possible tail of a character, the result of reducing some full characters, and the start of another character</span>
-<a name="line-73"></a><a name="UTF8"></a><span class='hs-comment'>-- T contains a list of bytes each between 0x80 and 0xbf</span>
-<a name="line-74"></a><a name="UTF8"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>T</span> <span class='hs-varid'>m</span> <span class='hs-varop'>!</span><span class='hs-conid'>H</span>
-<a name="line-75"></a>            <span class='hs-keyglyph'>|</span> <span class='hs-conid'>T</span> <span class='hs-conid'>T</span>
-<a name="line-76"></a>
-<a name="line-77"></a><a name="flushH"></a><span class='hs-comment'>-- flush any extra characters in a head, when the next character isn't between 0x80 and 0xbf</span>
-<a name="line-78"></a><span class='hs-definition'>flushH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-79"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-80"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-81"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-82"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-83"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-84"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-keyglyph'>]</span>
-<a name="line-85"></a><span class='hs-definition'>flushH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>x</span> <span class='hs-varid'>y</span> <span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-keyglyph'>]</span>
-<a name="line-86"></a>
-<a name="line-87"></a><a name="flushT"></a><span class='hs-comment'>-- flush a character tail </span>
-<a name="line-88"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-89"></a><span class='hs-definition'>flushT</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-90"></a>
-<a name="line-91"></a><a name="snocH"></a><span class='hs-definition'>snocH</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-92"></a><span class='hs-definition'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-93"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-94"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-95"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-96"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-97"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-98"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-99"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span>
-<a name="line-100"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-101"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-102"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-103"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-104"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-105"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-106"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-107"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-108"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-109"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-110"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-111"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-112"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span>
-<a name="line-113"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-114"></a><span class='hs-definition'>snocH</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span> <span class='hs-varid'>k</span> <span class='hs-varid'>m</span> 
-<a name="line-115"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-116"></a>    <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-117"></a>
-<a name="line-118"></a><a name="mask"></a><span class='hs-definition'>mask</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-119"></a><span class='hs-definition'>mask</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> 
-<a name="line-120"></a>
-<a name="line-121"></a><a name="combine"></a><span class='hs-definition'>combine</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Int</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Int</span>
-<a name="line-122"></a><span class='hs-definition'>combine</span> <span class='hs-varid'>a</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>shiftL</span> <span class='hs-varid'>a</span> <span class='hs-num'>6</span> <span class='hs-varop'>.|.</span> <span class='hs-varid'>fromEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>.&amp;.</span> <span class='hs-num'>0x3f</span><span class='hs-layout'>)</span>
-<a name="line-123"></a>
-<a name="line-124"></a><a name="b1"></a><span class='hs-definition'>b1</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-125"></a><span class='hs-definition'>b1</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>toEnum</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fromEnum</span> <span class='hs-varid'>c</span>
-<a name="line-126"></a>     <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-127"></a>
-<a name="line-128"></a><a name="b2"></a><span class='hs-definition'>b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-129"></a><span class='hs-definition'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x1f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-130"></a>       <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span>
-<a name="line-131"></a>
-<a name="line-132"></a><a name="b3"></a><span class='hs-definition'>b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-133"></a><span class='hs-definition'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x0f</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-134"></a>         <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span>
-<a name="line-135"></a>
-<a name="line-136"></a>
-<a name="line-137"></a><a name="b4"></a><span class='hs-definition'>b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-138"></a><span class='hs-definition'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromChar</span> <span class='hs-layout'>(</span><span class='hs-varid'>toEnum</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>combine</span> <span class='hs-layout'>(</span><span class='hs-varid'>mask</span> <span class='hs-varid'>c</span> <span class='hs-num'>0x07</span><span class='hs-layout'>)</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-139"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-layout'>,</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-layout'>,</span><span class='hs-varid'>f</span><span class='hs-keyglyph'>]</span>
-<a name="line-140"></a>
-<a name="line-141"></a><a name="valid_b2"></a><span class='hs-definition'>valid_b2</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-142"></a><span class='hs-definition'>valid_b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xc2</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xdf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-143"></a>
-<a name="line-144"></a><a name="valid_b3"></a><span class='hs-definition'>valid_b3</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-145"></a><span class='hs-definition'>valid_b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xe0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xa0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span> 
-<a name="line-146"></a>                 <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xe1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xef</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-147"></a>
-<a name="line-148"></a><a name="valid_b4"></a><span class='hs-definition'>valid_b4</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Bool</span>
-<a name="line-149"></a><span class='hs-definition'>valid_b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf0</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x90</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-150"></a>      <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0xf1</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xf3</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span> <span class='hs-varop'>||</span>
-<a name="line-151"></a>                   <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>==</span> <span class='hs-num'>0xf4</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>d</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0x8f</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>e</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>f</span> <span class='hs-varop'>&lt;=</span> <span class='hs-num'>0xbf</span><span class='hs-layout'>)</span>
-<a name="line-152"></a>
-<a name="line-153"></a><a name="consT"></a><span class='hs-definition'>consT</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Word8</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span>
-<a name="line-154"></a><span class='hs-definition'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>h</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span>
-<a name="line-155"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0x80</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b1</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-156"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span><span class='hs-conop'>:</span><span class='hs-varid'>cs</span><span class='hs-layout'>)</span>
-<a name="line-157"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xe0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-158"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-159"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-160"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf0</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-161"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-162"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-163"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-164"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xf5</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyword'>case</span> <span class='hs-varid'>cs</span> <span class='hs-keyword'>of</span>
-<a name="line-165"></a>                        <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-166"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-167"></a>                        <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>h</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> 
-<a name="line-168"></a>                        <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-169"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-170"></a>
-<a name="line-171"></a><a name="invalidChars"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-172"></a><span class='hs-definition'>invalidChars</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldr</span> <span class='hs-layout'>(</span><span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-173"></a>
-<a name="line-174"></a><a name="merge"></a><span class='hs-definition'>merge</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-layout'>(</span><span class='hs-conid'>H</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span>
-<a name="line-175"></a><span class='hs-definition'>merge</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>               <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>cs</span>
-<a name="line-176"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span>
-<a name="line-177"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H2_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>ds</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>ds</span>
-<a name="line-178"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span>
-<a name="line-179"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-180"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-181"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-182"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H3_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>es</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>es</span>
-<a name="line-183"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>         <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span>
-<a name="line-184"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span>
-<a name="line-185"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>d</span><span class='hs-layout'>,</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-186"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_1</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>d</span><span class='hs-conop'>:</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-187"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> 
-<a name="line-188"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>e</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-189"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_2</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>e</span><span class='hs-conop'>:</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-190"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-keyword'>_</span> <span class='hs-varid'>p</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>p</span> <span class='hs-varop'>$</span> <span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span>
-<a name="line-191"></a><span class='hs-definition'>merge</span> <span class='hs-layout'>(</span><span class='hs-conid'>H4_3</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span><span class='hs-conop'>:</span><span class='hs-varid'>fs</span><span class='hs-layout'>)</span> <span class='hs-varid'>k</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>k</span> <span class='hs-varop'>$</span> <span class='hs-varid'>b4</span> <span class='hs-varid'>c</span> <span class='hs-varid'>d</span> <span class='hs-varid'>e</span> <span class='hs-varid'>f</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>invalidChars</span> <span class='hs-varid'>fs</span>
-<a name="line-192"></a>
-<a name="line-193"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-194"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span>
-<a name="line-195"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>d</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>d</span><span class='hs-layout'>)</span>
-<a name="line-196"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>++</span> <span class='hs-varid'>l</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-197"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>id</span> <span class='hs-varid'>flushH</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r</span>
-<a name="line-198"></a>    <span class='hs-varid'>s</span><span class='hs-keyglyph'>@</span><span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span> <span class='hs-keyword'>_</span><span class='hs-layout'>)</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-conid'>[]</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span>
-<a name="line-199"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>c'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>merge</span> <span class='hs-varid'>c</span> <span class='hs-varid'>c'</span> <span class='hs-varid'>k</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-200"></a>        <span class='hs-varid'>k</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span>
-<a name="line-201"></a>
-<a name="line-202"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Word8</span> <span class='hs-layout'>(</span><span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-203"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span>
-<a name="line-204"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-205"></a>    <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-varid'>h</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-206"></a>    <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>     <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span>        <span class='hs-keyglyph'>|</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&gt;=</span> <span class='hs-num'>0x80</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>c</span> <span class='hs-varop'>&lt;</span> <span class='hs-num'>0xc0</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-layout'>(</span><span class='hs-varid'>t</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span><span class='hs-layout'>)</span>
-<a name="line-207"></a>                            <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snocH</span> <span class='hs-conid'>H0</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-varid'>mempty</span>
-<a name="line-208"></a>
-<a name="line-209"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>T</span> <span class='hs-varid'>cs</span>     <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-conid'>[]</span><span class='hs-layout'>)</span> <span class='hs-conid'>H0</span><span class='hs-layout'>)</span> <span class='hs-conid'>T</span>
-<a name="line-210"></a>    <span class='hs-varid'>c</span>       <span class='hs-varop'>`cons`</span> <span class='hs-conid'>S</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>consT</span> <span class='hs-varid'>c</span> <span class='hs-varid'>cs</span> <span class='hs-varid'>k1</span> <span class='hs-varid'>k2</span> <span class='hs-varid'>k3</span> <span class='hs-keyword'>where</span>
-<a name="line-211"></a>        <span class='hs-varid'>k1</span> <span class='hs-varid'>h'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>flushH</span> <span class='hs-varid'>h'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-212"></a>        <span class='hs-varid'>k2</span> <span class='hs-varid'>m'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-layout'>(</span><span class='hs-varid'>m'</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-213"></a>        <span class='hs-varid'>k3</span> <span class='hs-varid'>t'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span>
-<a name="line-214"></a>    
-<a name="line-215"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-216"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>x</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-varid'>h</span>
-<a name="line-217"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>T</span> <span class='hs-varid'>t</span>
-<a name="line-218"></a>
-<a name="line-219"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>UTF8</span> <span class='hs-keyword'>where</span>
-<a name="line-220"></a>    <span class='hs-varid'>point</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>S</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>f</span> <span class='hs-conid'>H0</span>
-<a name="line-221"></a>
-<a name="line-222"></a><a name="runUTF8"></a><span class='hs-definition'>runUTF8</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>UTF8</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-223"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>T</span> <span class='hs-varid'>t</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span>
-<a name="line-224"></a><span class='hs-definition'>runUTF8</span> <span class='hs-layout'>(</span><span class='hs-conid'>S</span> <span class='hs-varid'>t</span> <span class='hs-varid'>m</span> <span class='hs-varid'>h</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flushT</span> <span class='hs-varid'>t</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>flushH</span> <span class='hs-varid'>h</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-UTF8-Decoder.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Lexical/Words.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, FlexibleContexts, GeneralizedNewtypeDeriving, ParallelListComp, TypeFamilies, OverloadedStrings, UndecidableInstances #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Lexical.Words</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs, OverloadedStrings)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- A simple demonstration of tokenizing a 'Generator' into distinct words </span>
-<a name="line-13"></a><span class='hs-comment'>-- and/or lines using a word-parsing 'Monoid' that accumulates partial </span>
-<a name="line-14"></a><span class='hs-comment'>-- information about words and then builds up a token stream.</span>
-<a name="line-15"></a><span class='hs-comment'>--</span>
-<a name="line-16"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Lexical</span><span class='hs-varop'>.</span><span class='hs-conid'>Words</span> 
-<a name="line-19"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-20"></a>    <span class='hs-comment'>-- * Words</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Words</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runWords</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unspaced</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnspaced</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>wordsFrom</span>
-<a name="line-25"></a>    <span class='hs-comment'>-- * Lines</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Lines</span>
-<a name="line-27"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>runLines</span>
-<a name="line-28"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Unlined</span><span class='hs-layout'>(</span><span class='hs-varid'>runUnlined</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>linesFrom</span>
-<a name="line-30"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>String</span>
-<a name="line-33"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-varid'>isSpace</span><span class='hs-layout'>)</span>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Maybe</span> <span class='hs-layout'>(</span><span class='hs-varid'>maybeToList</span><span class='hs-layout'>)</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-36"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-38"></a>
-<a name="line-39"></a><a name="Words"></a><span class='hs-comment'>-- | A 'CharReducer' transformer that breaks a 'Char' 'Generator' into distinct words, feeding a 'Char' 'Reducer' each line in turn</span>
-<a name="line-40"></a><a name="Words"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-43"></a>
-<a name="line-44"></a><a name="runWords"></a><span class='hs-comment'>-- | Extract the matched words from the 'Words' 'Monoid'</span>
-<a name="line-45"></a><span class='hs-definition'>runWords</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Words</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-46"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>m</span>
-<a name="line-47"></a><span class='hs-definition'>runWords</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>l</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-varid'>r</span>
-<a name="line-48"></a>
-<a name="line-49"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-50"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>mempty</span>
-<a name="line-51"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>    <span class='hs-conid'>Chunk</span> <span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>l</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span>
-<a name="line-53"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Chunk</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>r'</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>    <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-varid'>m</span> <span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l'</span> <span class='hs-varid'>m'</span> <span class='hs-varid'>r'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-varid'>l</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>++</span> <span class='hs-varid'>maybeToList</span> <span class='hs-layout'>(</span><span class='hs-varid'>r</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>l'</span><span class='hs-layout'>)</span> <span class='hs-varop'>++</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-varid'>r'</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-58"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Words</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Chunk</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-62"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Segment</span> <span class='hs-varid'>m</span> <span class='hs-varid'>ms</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>ms</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span>
-<a name="line-63"></a>
-<a name="line-64"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-65"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-66"></a>
-<a name="line-67"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-68"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-69"></a>
-<a name="line-70"></a><a name="Lines"></a><span class='hs-comment'>-- | A 'CharReducer' transformer that breaks a 'Char' 'Generator' into distinct lines, feeding a 'Char' 'Reducer' each line in turn.</span>
-<a name="line-71"></a><a name="Lines"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Words</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>)</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-74"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-75"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Chunk</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-78"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>xs</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Lines</span> <span class='hs-varop'>$</span> <span class='hs-conid'>Segment</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>xs</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-conid'>[]</span> <span class='hs-varid'>mempty</span>
-<a name="line-79"></a>
-<a name="line-80"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-81"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-82"></a>
-<a name="line-83"></a><a name="runLines"></a><span class='hs-comment'>-- | Extract the matched lines from the 'Lines' 'Monoid'</span>
-<a name="line-84"></a><span class='hs-definition'>runLines</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Lines</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-85"></a><span class='hs-definition'>runLines</span> <span class='hs-layout'>(</span><span class='hs-conid'>Lines</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runWords</span> <span class='hs-varid'>x</span>
-<a name="line-86"></a>
-<a name="line-87"></a><a name="Unspaced"></a><span class='hs-comment'>-- | A 'CharReducer' transformer that strips out any character matched by `isSpace`</span>
-<a name="line-88"></a><a name="Unspaced"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnspaced</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-89"></a>
-<a name="line-90"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-91"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>isSpace</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-92"></a>           <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-93"></a>
-<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-95"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-99"></a>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-101"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unspaced</span>
-<a name="line-102"></a>
-<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unspaced</span> <span class='hs-keyword'>where</span>
-<a name="line-104"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnspaced</span>
-<a name="line-105"></a>
-<a name="line-106"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unspaced</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-107"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-108"></a>
-<a name="line-109"></a><a name="Unlined"></a><span class='hs-comment'>-- | A 'CharReducer' transformer that strips out newlines</span>
-<a name="line-110"></a><a name="Unlined"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>{</span> <span class='hs-varid'>runUnlined</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>  <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Monoid</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>
-<a name="line-112"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-113"></a>    <span class='hs-varid'>unit</span> <span class='hs-chr'>'\n'</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mempty</span>
-<a name="line-114"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-115"></a>
-<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-117"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-varop'>.</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-118"></a>
-<a name="line-119"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-120"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-121"></a>
-<a name="line-122"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-123"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Unlined</span>
-<a name="line-124"></a>
-<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Unlined</span> <span class='hs-keyword'>where</span>
-<a name="line-126"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>runUnlined</span>
-<a name="line-127"></a>
-<a name="line-128"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>IsString</span> <span class='hs-layout'>(</span><span class='hs-conid'>Unlined</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-129"></a>    <span class='hs-varid'>fromString</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>reduce</span>
-<a name="line-130"></a>
-<a name="line-131"></a><a name="wordsFrom"></a><span class='hs-comment'>-- | Utility function to extract words using accumulator, inside-word, and until-next-word monoids</span>
-<a name="line-132"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-133"></a><span class='hs-definition'>wordsFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-134"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runWords</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-135"></a>
-<a name="line-136"></a><a name="linesFrom"></a><span class='hs-comment'>-- | Utility function to extract lines using accumulator, inside-line, and until-next-line monoids</span>
-<a name="line-137"></a><span class='hs-definition'>linesFrom</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Generator</span> <span class='hs-varid'>c</span><span class='hs-layout'>,</span> <span class='hs-conid'>Elem</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>~</span> <span class='hs-conid'>Char</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Char</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span><span class='hs-keyglyph'>]</span>
-<a name="line-138"></a><span class='hs-definition'>linesFrom</span> <span class='hs-varid'>s</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-keyglyph'>[</span><span class='hs-layout'>(</span><span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>runUnlined</span> <span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>|</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>scanl</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>s</span> <span class='hs-varid'>ls</span> <span class='hs-keyglyph'>|</span> <span class='hs-layout'>(</span><span class='hs-varid'>y</span><span class='hs-layout'>,</span><span class='hs-varid'>z</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>&lt;-</span> <span class='hs-varid'>rs</span> <span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-139"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>ls</span><span class='hs-layout'>,</span><span class='hs-varid'>rs</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unzip</span> <span class='hs-layout'>(</span><span class='hs-varid'>runLines</span> <span class='hs-layout'>(</span><span class='hs-varid'>mapReduce</span> <span class='hs-varid'>id</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Lexical-Words.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Monad.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Monad.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, GeneralizedNewtypeDeriving, FlexibleContexts, TypeOperators #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Applicative</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- 'Monoid' instances for working with a 'Monad'</span>
-<a name="line-13"></a><span class='hs-comment'>--</span>
-<a name="line-14"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> 
-<a name="line-17"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-19"></a>    <span class='hs-comment'>-- * Actions</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Action</span><span class='hs-layout'>(</span><span class='hs-conid'>Action</span><span class='hs-layout'>,</span><span class='hs-varid'>getAction</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>snocAction</span>
-<a name="line-22"></a>    <span class='hs-comment'>-- * Lifting Modules</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>ActionWith</span><span class='hs-layout'>(</span><span class='hs-conid'>ActionWith</span><span class='hs-layout'>,</span><span class='hs-varid'>getActionWith</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>    <span class='hs-comment'>-- * Wrapped Monads</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WrappedMonad</span><span class='hs-layout'>(</span><span class='hs-conid'>WrappedMonad</span><span class='hs-layout'>,</span> <span class='hs-varid'>getWrappedMonad</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span>
-<a name="line-33"></a>
-<a name="line-34"></a><a name="Action"></a><span class='hs-comment'>-- | An 'Action' uses glues together 'Monad' actions with (&gt;&gt;)</span>
-<a name="line-35"></a><a name="Action"></a><span class='hs-comment'>--   in the manner of 'mapM_' from "Data.Foldable". Any values returned by </span>
-<a name="line-36"></a><a name="Action"></a><span class='hs-comment'>--   reduced actions are discarded.</span>
-<a name="line-37"></a><a name="Action"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-layout'>}</span> 
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-44"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>    <span class='hs-varid'>a</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>    <span class='hs-conid'>Action</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Action</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>b</span> <span class='hs-varop'>&gt;&gt;</span> <span class='hs-varid'>return</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-comment'>{-# RULES "unitAction" unit = Action #-}</span>
-<a name="line-49"></a><span class='hs-comment'>{-# RULES "snocAction" snoc = snocAction #-}</span> 
-<a name="line-50"></a>
-<a name="line-51"></a><a name="snocAction"></a><span class='hs-comment'>-- | Efficiently avoid needlessly rebinding when using 'snoc' on an action that already returns ()</span>
-<a name="line-52"></a><span class='hs-comment'>--   A rewrite rule automatically applies this when possible</span>
-<a name="line-53"></a><span class='hs-definition'>snocAction</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-conid'>()</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Action</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-conid'>()</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-conid'>Action</span> <span class='hs-varid'>m</span>
-<a name="line-54"></a><span class='hs-definition'>snocAction</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Action</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-comment'>-- | A 'WrappedMonad' turns any 'MonadPlus' instance into a 'Monoid'.</span>
-<a name="line-57"></a><span class='hs-comment'>--   It also provides a 'Multiplicative' instance for a 'Monad' wrapped around a 'Monoid'</span>
-<a name="line-58"></a><span class='hs-comment'>--   and asserts that any 'MonadPlus' applied to a 'Monoid' forms a 'LeftSemiNearRing' </span>
-<a name="line-59"></a><span class='hs-comment'>--   under these operations.</span>
-<a name="line-60"></a>
-<a name="line-61"></a><a name="WrappedMonad"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedMonad</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getWrappedMonad</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> 
-<a name="line-62"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-63"></a>
-<a name="line-64"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-65"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedMonad</span> <span class='hs-layout'>(</span><span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-66"></a>    <span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedMonad</span> <span class='hs-layout'>(</span><span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-67"></a>    
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mzero</span>
-<a name="line-70"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mplus</span>
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-73"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WrappedMonad</span> <span class='hs-varop'>.</span> <span class='hs-varid'>return</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-74"></a>
-<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>WrappedMonad</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-comment'>-- | if @m@ is a 'Module' over @r@ and @f@ is a 'Monad' then @f `ActionWith` m@ is a 'Module' as well</span>
-<a name="line-78"></a>
-<a name="line-79"></a><a name="ActionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>ActionWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>ActionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getActionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-80"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span><span class='hs-layout'>,</span><span class='hs-conid'>MonadPlus</span><span class='hs-layout'>)</span>
-<a name="line-81"></a>
-<a name="line-82"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`ActionWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-83"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-84"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-85"></a>
-<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`ActionWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-87"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-varid'>gnegate</span>
-<a name="line-88"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>minus</span>
-<a name="line-89"></a>    <span class='hs-varid'>gsubtract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>gsubtract</span>
-<a name="line-90"></a>
-<a name="line-91"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`ActionWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-92"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-93"></a>
-<a name="line-94"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`ActionWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-95"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`ActionWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-98"></a>    <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span>
-<a name="line-99"></a>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monad</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varop'>`ActionWith`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Monad.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Multiplicative/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Multiplicative.Sugar</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>-- Syntactic sugar for working with a 'Multiplicative' monoids that conflicts with names from the "Prelude".</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- &gt; import Prelude hiding ((+),(*))</span>
-<a name="line-13"></a><span class='hs-comment'>-- &gt; import Data.Monoid.Multiplicative.Sugar</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>infixl</span> <span class='hs-num'>7</span> <span class='hs-varop'>*</span>
-<a name="line-28"></a>
-<a name="line-29"></a><a name="*"></a><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span>
-<a name="line-30"></a><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>times</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Multiplicative.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, UndecidableInstances #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Multiplicative</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  portable (but instances use MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- When dealing with a 'Ring' or other structure, you often need a pair of </span>
-<a name="line-13"></a><span class='hs-comment'>-- 'Monoid' instances that are closely related. Making a @newtype@ for one</span>
-<a name="line-14"></a><span class='hs-comment'>-- is unsatisfying and yields an unnatural programming style. </span>
-<a name="line-15"></a><span class='hs-comment'>--</span>
-<a name="line-16"></a><span class='hs-comment'>-- A 'Multiplicative' is a 'Monoid' that is intended for use in a scenario</span>
-<a name="line-17"></a><span class='hs-comment'>-- that can be extended to have another 'Monoid' slot in for addition. This</span>
-<a name="line-18"></a><span class='hs-comment'>-- enables one to use common notation.</span>
-<a name="line-19"></a><span class='hs-comment'>--</span>
-<a name="line-20"></a><span class='hs-comment'>-- Any 'Multiplicative' can be turned into a 'Monoid' using the 'Log' wrapper.</span>
-<a name="line-21"></a><span class='hs-comment'>--</span>
-<a name="line-22"></a><span class='hs-comment'>-- Any 'Monoid' can be turned into a 'Multiplicative' using the 'Exp' wrapper.</span>
-<a name="line-23"></a><span class='hs-comment'>--</span>
-<a name="line-24"></a><span class='hs-comment'>-- Instances are supplied for common Monads of Monoids, in a fashion </span>
-<a name="line-25"></a><span class='hs-comment'>-- which can be extended if the 'Monad' is a 'MonadPlus' to yield a 'LeftSemiNearRing'</span>
-<a name="line-26"></a><span class='hs-comment'>--</span>
-<a name="line-27"></a><span class='hs-comment'>-- Instances are also supplied for common Applicatives of Monoids, in a</span>
-<a name="line-28"></a><span class='hs-comment'>-- fashion which can be extended if the 'Applicative' is 'Alternative' to</span>
-<a name="line-29"></a><span class='hs-comment'>-- yield a 'LeftSemiNearRing'</span>
-<a name="line-30"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span> 
-<a name="line-33"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-34"></a>    <span class='hs-comment'>-- * Multiplicative Monoids</span>
-<a name="line-35"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span>
-<a name="line-36"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>one</span><span class='hs-layout'>,</span> <span class='hs-varid'>times</span>
-<a name="line-37"></a>    <span class='hs-comment'>-- * Multiplicative to Monoid</span>
-<a name="line-38"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Log</span><span class='hs-layout'>(</span><span class='hs-conid'>Log</span><span class='hs-layout'>,</span> <span class='hs-varid'>getLog</span><span class='hs-layout'>)</span>
-<a name="line-39"></a>    <span class='hs-comment'>-- * Monoid to Multiplicative</span>
-<a name="line-40"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Exp</span><span class='hs-layout'>(</span><span class='hs-conid'>Exp</span><span class='hs-layout'>,</span> <span class='hs-varid'>getExp</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-44"></a>
-<a name="line-45"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Concurrent</span><span class='hs-varop'>.</span><span class='hs-conid'>STM</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Cont</span>
-<a name="line-48"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Identity</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-51"></a>
-<a name="line-52"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LRWS</span>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SRWS</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LState</span>
-<a name="line-56"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SState</span>
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LWriter</span>
-<a name="line-59"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SWriter</span>
-<a name="line-60"></a>
-<a name="line-61"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LST</span>
-<a name="line-62"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SST</span>
-<a name="line-63"></a>
-<a name="line-64"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-65"></a>
-<a name="line-66"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Additive</span>
-<a name="line-67"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-68"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-69"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Instances</span> <span class='hs-conid'>()</span>
-<a name="line-70"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ratio</span>
-<a name="line-73"></a>
-<a name="line-74"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-75"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-78"></a>
-<a name="line-79"></a><a name="Multiplicative"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-80"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span>
-<a name="line-81"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-82"></a>
-<a name="line-83"></a><a name="Log"></a><span class='hs-comment'>-- | Convert a 'Multiplicative' into a 'Monoid'. Mnemonic: @Log a + Log b = Log (a * b)@</span>
-<a name="line-84"></a><a name="Log"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getLog</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>
-<a name="line-85"></a>
-<a name="line-86"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Log</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-87"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>one</span>
-<a name="line-88"></a>    <span class='hs-conid'>Log</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Log</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Log</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-89"></a>
-<a name="line-90"></a><a name="Exp"></a><span class='hs-comment'>-- | Convert a 'Monoid' into a 'Multiplicative'. Mnemonic: @Exp a * Exp b = Exp (a + b)@</span>
-<a name="line-91"></a><a name="Exp"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getExp</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span>
-<a name="line-92"></a>
-<a name="line-93"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Exp</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-94"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>mempty</span>
-<a name="line-95"></a>    <span class='hs-conid'>Exp</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Exp</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Exp</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-96"></a>
-<a name="line-97"></a><span class='hs-comment'>-- simple monoid transformer instances</span>
-<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-99"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>one</span>  
-<a name="line-100"></a>    <span class='hs-conid'>Self</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Self</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Self</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-101"></a>
-<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-103"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>one</span>
-<a name="line-104"></a>    <span class='hs-conid'>FromString</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>FromString</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromString</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-105"></a>
-<a name="line-106"></a><span class='hs-comment'>-- the goal of this is that I can make left seminearrings out of any 'Alternative' wrapped around a monoid</span>
-<a name="line-107"></a><span class='hs-comment'>-- in particular its useful for containers</span>
-<a name="line-108"></a>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-111"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-112"></a>
-<a name="line-113"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-114"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-115"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-116"></a>
-<a name="line-117"></a><span class='hs-comment'>-- and things that can't quite be a Monad in Haskell</span>
-<a name="line-118"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-119"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span> <span class='hs-varid'>mempty</span>
-<a name="line-120"></a>    <span class='hs-varid'>xss</span> <span class='hs-varop'>`times`</span> <span class='hs-varid'>yss</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getSelf</span> <span class='hs-varop'>$</span> <span class='hs-varid'>mapReduce</span> <span class='hs-layout'>(</span><span class='hs-varid'>flip</span> <span class='hs-varid'>fmap'</span> <span class='hs-varid'>yss</span> <span class='hs-varop'>.</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>)</span> <span class='hs-varid'>xss</span>
-<a name="line-121"></a>
-<a name="line-122"></a><span class='hs-comment'>-- but it can at least serve as a canonical multiplication for any monad. </span>
-<a name="line-123"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-124"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-125"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-126"></a>
-<a name="line-127"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Identity</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-128"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-129"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-130"></a>
-<a name="line-131"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Cont</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-132"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-133"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-134"></a>
-<a name="line-135"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-136"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-137"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-138"></a>
-<a name="line-139"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-140"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-141"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-142"></a>
-<a name="line-143"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SState</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-144"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-145"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-146"></a>
-<a name="line-147"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LState</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-148"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-149"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-150"></a>
-<a name="line-151"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reader</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-152"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-153"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-154"></a>
-<a name="line-155"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-156"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-157"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-158"></a>
-<a name="line-159"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-160"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-161"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-162"></a>
-<a name="line-163"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>ContT</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-164"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-165"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-166"></a>
-<a name="line-167"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-168"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-169"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-170"></a>
-<a name="line-171"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-172"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-173"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-174"></a>
-<a name="line-175"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-176"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-177"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-178"></a>
-<a name="line-179"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-180"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-181"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-182"></a>
-<a name="line-183"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-184"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-185"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-186"></a>
-<a name="line-187"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-188"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-189"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-190"></a>
-<a name="line-191"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-192"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span> 
-<a name="line-193"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-194"></a>
-<a name="line-195"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>IO</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-196"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-197"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-198"></a>
-<a name="line-199"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>SST</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-200"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-201"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-202"></a>
-<a name="line-203"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>LST</span><span class='hs-varop'>.</span><span class='hs-conid'>ST</span> <span class='hs-varid'>s</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-204"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-205"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-206"></a>
-<a name="line-207"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>STM</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-208"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-209"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-210"></a>
-<a name="line-211"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-212"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varid'>mempty</span>
-<a name="line-213"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftM2</span> <span class='hs-varid'>mappend</span>
-<a name="line-214"></a>
-<a name="line-215"></a><span class='hs-comment'>-- Applicative instances</span>
-<a name="line-216"></a>
-<a name="line-217"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>ZipList</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-218"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>mempty</span>
-<a name="line-219"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>mappend</span>
-<a name="line-220"></a>
-<a name="line-221"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Const</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-222"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varid'>undefined</span>
-<a name="line-223"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>liftA2</span> <span class='hs-varid'>undefined</span>
-<a name="line-224"></a>
-<a name="line-225"></a>
-<a name="line-226"></a><span class='hs-comment'>-- Numeric instances</span>
-<a name="line-227"></a>
-<a name="line-228"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-conid'>Int</span> <span class='hs-keyword'>where</span>
-<a name="line-229"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>1</span>
-<a name="line-230"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-231"></a>
-<a name="line-232"></a>
-<a name="line-233"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-conid'>Integer</span> <span class='hs-keyword'>where</span>
-<a name="line-234"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>1</span>
-<a name="line-235"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-236"></a>
-<a name="line-237"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Integral</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ratio</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-238"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-num'>1</span>
-<a name="line-239"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-240"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Multiplicative.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Ord.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Ord.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>---- |</span>
-<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Monoid.Ord</span>
-<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-7"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-8"></a><span class='hs-comment'>---- Stability   :  experimental</span>
-<a name="line-9"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-10"></a><span class='hs-comment'>----</span>
-<a name="line-11"></a><span class='hs-comment'>---- Some 'Monoid' instances that should probably be in "Data.Monoid".</span>
-<a name="line-12"></a><span class='hs-comment'>----</span>
-<a name="line-13"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-14"></a>
-<a name="line-15"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> 
-<a name="line-16"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-17"></a>    <span class='hs-comment'>-- * Max</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Max</span><span class='hs-layout'>(</span><span class='hs-conid'>Max</span><span class='hs-layout'>,</span><span class='hs-varid'>getMax</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>    <span class='hs-comment'>-- * Min</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Min</span><span class='hs-layout'>(</span><span class='hs-conid'>Min</span><span class='hs-layout'>,</span><span class='hs-varid'>getMin</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-comment'>-- * MaxPriority: Max semigroup w/ added bottom</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MaxPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMaxPriority</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>minfinity</span>
-<a name="line-24"></a>    <span class='hs-comment'>-- * MinPriority: Min semigroup w/ added top</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>MinPriority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span><span class='hs-layout'>,</span><span class='hs-varid'>getMinPriority</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>infinity</span>
-<a name="line-27"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-32"></a>
-<a name="line-33"></a><a name="Max"></a><span class='hs-comment'>-- | The 'Monoid' @('max','minBound')@</span>
-<a name="line-34"></a><a name="Max"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMax</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-varid'>minBound</span>
-<a name="line-38"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-39"></a>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-41"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span> 
-<a name="line-44"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Max</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span>
-<a name="line-47"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Max</span>
-<a name="line-48"></a>
-<a name="line-49"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Max</span> <span class='hs-keyword'>where</span>
-<a name="line-50"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getMax</span>
-<a name="line-51"></a>
-<a name="line-52"></a><a name="Min"></a><span class='hs-comment'>-- | The 'Monoid' given by @('min','maxBound')@</span>
-<a name="line-53"></a><a name="Min"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMin</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-56"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-varid'>maxBound</span>
-<a name="line-57"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-58"></a>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-60"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
-<a name="line-61"></a>
-<a name="line-62"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-63"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Min</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-64"></a>
-<a name="line-65"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-66"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Min</span>
-<a name="line-67"></a>
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Min</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getMin</span>
-<a name="line-70"></a>
-<a name="line-71"></a><a name="minfinity"></a><span class='hs-definition'>minfinity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span>
-<a name="line-72"></a><span class='hs-definition'>minfinity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-73"></a>
-<a name="line-74"></a><a name="MaxPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('max','Nothing')@ over @'Maybe' a@ where 'Nothing' is the bottom element</span>
-<a name="line-75"></a><a name="MaxPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMaxPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-78"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-79"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span>
-<a name="line-83"></a>
-<a name="line-84"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-85"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-88"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-89"></a>
-<a name="line-90"></a><a name="infinity"></a><span class='hs-definition'>infinity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span>
-<a name="line-91"></a><span class='hs-definition'>infinity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-92"></a>
-<a name="line-93"></a><a name="MinPriority"></a><span class='hs-comment'>-- | The 'Monoid' @('min','Nothing')@ over @'Maybe' a@ where 'Nothing' is the top element</span>
-<a name="line-94"></a><a name="MinPriority"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getMinPriority</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-95"></a>
-<a name="line-96"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-97"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
-<a name="line-98"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
-<a name="line-99"></a>    <span class='hs-keyword'>_</span>                    <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
-<a name="line-100"></a>    <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
-<a name="line-101"></a>
-<a name="line-102"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-103"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span>
-<a name="line-104"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-105"></a>
-<a name="line-106"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-107"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span>
-<a name="line-108"></a>
-<a name="line-109"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>MinPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-110"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-111"></a>
-<a name="line-112"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>MinPriority</span> <span class='hs-keyword'>where</span>
-<a name="line-113"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinPriority</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Ord.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/Char.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Reducer.Char</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>Char</span>
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>fromChar</span>
-<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Word</span> <span class='hs-layout'>(</span><span class='hs-conid'>Word8</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>
-<a name="line-24"></a><span class='hs-comment'>-- | Provides a mechanism for the UTF8 'Monoid' to report invalid characters to one or more monoids.</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="CharReducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Char</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Char</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-28"></a>    <span class='hs-varid'>fromChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span>
-<a name="line-29"></a>
-<a name="line-30"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>::</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Word8</span><span class='hs-keyglyph'>]</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-31"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>const</span> <span class='hs-varid'>mempty</span>
-<a name="line-32"></a>
-<a name="line-33"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-34"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-35"></a>
-<a name="line-36"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-37"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m''</span><span class='hs-layout'>,</span> <span class='hs-conid'>CharReducer</span> <span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span>  <span class='hs-conid'>CharReducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>m'</span><span class='hs-layout'>,</span><span class='hs-varid'>m''</span><span class='hs-layout'>,</span><span class='hs-varid'>m'''</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-40"></a>    <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>,</span> <span class='hs-varid'>invalidChar</span> <span class='hs-varid'>bs</span><span class='hs-layout'>)</span>
-<a name="line-41"></a>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>CharReducer</span> <span class='hs-keyglyph'>[</span><span class='hs-conid'>Char</span><span class='hs-keyglyph'>]</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-Char.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer/With.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances, TypeOperators, FlexibleContexts, MultiParamTypeClasses, FlexibleInstances #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Reducer.With</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span><span class='hs-varop'>.</span><span class='hs-conid'>With</span>
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>WithReducer</span><span class='hs-layout'>(</span><span class='hs-conid'>WithReducer</span><span class='hs-layout'>,</span><span class='hs-varid'>withoutReducer</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-comment'>-- | If @m@ is a @c@-"Reducer", then m is @(c `WithReducer` m)@-"Reducer"</span>
-<a name="line-23"></a><span class='hs-comment'>--   This can be used to quickly select a "Reducer" for use as a 'FingerTree'</span>
-<a name="line-24"></a><span class='hs-comment'>--   'measure'.</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="WithReducer"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>WithReducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>WithReducer</span> <span class='hs-layout'>{</span> <span class='hs-varid'>withoutReducer</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-layout'>}</span> 
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>withoutReducer</span> 
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>m</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`WithReducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>    <span class='hs-varid'>measure</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>withoutReducer</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer-With.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Reducer.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE UndecidableInstances , FlexibleContexts , MultiParamTypeClasses , FlexibleInstances , GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Monoid.Reducer</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- A @c@-'Reducer' is a 'Monoid' with a canonical mapping from @c@ to the Monoid.</span>
-<a name="line-13"></a><span class='hs-comment'>-- This 'unit' acts in many ways like 'return' for a 'Monad' but is limited</span>
-<a name="line-14"></a><span class='hs-comment'>-- to a single type.</span>
-<a name="line-15"></a><span class='hs-comment'>--</span>
-<a name="line-16"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-19"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldMapReduce</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>foldReduce</span>
-<a name="line-24"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>pureUnit</span>
-<a name="line-25"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>returnUnit</span>
-<a name="line-26"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Applicative</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span> 
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Instances</span> <span class='hs-conid'>()</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Foldable</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-39"></a>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
-<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
-<a name="line-47"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
-<a name="line-48"></a>
-<a name="line-49"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-52"></a>
-<a name="line-53"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-54"></a>
-<a name="line-55"></a><span class='hs-comment'>--import qualified Data.BitSet as BitSet</span>
-<a name="line-56"></a><span class='hs-comment'>--import Data.BitSet (BitSet)</span>
-<a name="line-57"></a>
-<a name="line-58"></a><a name="Reducer"></a><span class='hs-comment'>-- | This type may be best read infix. A @c `Reducer` m@ is a 'Monoid' @m@ that maps</span>
-<a name="line-59"></a><a name="Reducer"></a><span class='hs-comment'>-- values of type @c@ through @unit@ to values of type @m@. A @c@-'Reducer' may also</span>
-<a name="line-60"></a><a name="Reducer"></a><span class='hs-comment'>-- supply operations which tack-on another @c@ to an existing 'Monoid' @m@ on the left</span>
-<a name="line-61"></a><a name="Reducer"></a><span class='hs-comment'>-- or right. These specialized reductions may be more efficient in some scenarios</span>
-<a name="line-62"></a><a name="Reducer"></a><span class='hs-comment'>-- and are used when appropriate by a 'Generator'. The names 'cons' and 'snoc' work</span>
-<a name="line-63"></a><a name="Reducer"></a><span class='hs-comment'>-- by analogy to the synonymous operations in the list monoid.</span>
-<a name="line-64"></a><a name="Reducer"></a><span class='hs-comment'>--</span>
-<a name="line-65"></a><a name="Reducer"></a><span class='hs-comment'>-- This class deliberately avoids functional-dependencies, so that () can be a @c@-Reducer</span>
-<a name="line-66"></a><a name="Reducer"></a><span class='hs-comment'>-- for all @c@, and so many common reducers can work over multiple types, for instance,</span>
-<a name="line-67"></a><a name="Reducer"></a><span class='hs-comment'>-- First and Last may reduce both @a@ and 'Maybe' @a@. Since a 'Generator' has a fixed element</span>
-<a name="line-68"></a><a name="Reducer"></a><span class='hs-comment'>-- type, the input to the reducer is generally known and extracting from the monoid usually</span>
-<a name="line-69"></a><a name="Reducer"></a><span class='hs-comment'>-- is sufficient to fix the result type. Combinators are available for most scenarios where</span>
-<a name="line-70"></a><a name="Reducer"></a><span class='hs-comment'>-- this is not the case, and the few remaining cases can be handled by using an explicit </span>
-<a name="line-71"></a><a name="Reducer"></a><span class='hs-comment'>-- type annotation.</span>
-<a name="line-72"></a><a name="Reducer"></a><span class='hs-comment'>--</span>
-<a name="line-73"></a><a name="Reducer"></a><span class='hs-comment'>-- Minimal definition: 'unit' or 'snoc'</span>
-<a name="line-74"></a><a name="Reducer"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-75"></a>    <span class='hs-comment'>-- | Convert a value into a 'Monoid'</span>
-<a name="line-76"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-77"></a>    <span class='hs-comment'>-- | Append a value to a 'Monoid' for use in left-to-right reduction</span>
-<a name="line-78"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-79"></a>    <span class='hs-comment'>-- | Prepend a value onto a 'Monoid' for use during right-to-left reduction</span>
-<a name="line-80"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> 
-<a name="line-81"></a>
-<a name="line-82"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>snoc</span> <span class='hs-varid'>mempty</span> 
-<a name="line-83"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-84"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>mappend</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-85"></a>
-<a name="line-86"></a><a name="foldMapReduce"></a><span class='hs-comment'>-- | Apply a 'Reducer' to a 'Foldable' container, after mapping the contents into a suitable form for reduction.</span>
-<a name="line-87"></a><span class='hs-definition'>foldMapReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>e</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-88"></a><span class='hs-definition'>foldMapReduce</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varop'>.</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span>
-<a name="line-89"></a>
-<a name="line-90"></a><a name="foldReduce"></a><span class='hs-comment'>-- | Apply a 'Reducer' to a 'Foldable' mapping each element through 'unit'</span>
-<a name="line-91"></a><span class='hs-definition'>foldReduce</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Foldable</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>e</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>e</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-92"></a><span class='hs-definition'>foldReduce</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>foldMap</span> <span class='hs-varid'>unit</span>
-<a name="line-93"></a>
-<a name="line-94"></a><a name="returnUnit"></a><span class='hs-definition'>returnUnit</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monad</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span> 
-<a name="line-95"></a><span class='hs-definition'>returnUnit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-96"></a>
-<a name="line-97"></a><a name="pureUnit"></a><span class='hs-definition'>pureUnit</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-conid'>Applicative</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>n</span>
-<a name="line-98"></a><span class='hs-definition'>pureUnit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>pure</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-99"></a>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-101"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-102"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-104"></a>
-<a name="line-105"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-106"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-107"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-108"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>)</span>
-<a name="line-109"></a>
-<a name="line-110"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-111"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span><span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-112"></a>    <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>n</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>o</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>,</span> <span class='hs-varid'>p</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span>
-<a name="line-113"></a>    <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span><span class='hs-layout'>,</span><span class='hs-varid'>n</span><span class='hs-layout'>,</span><span class='hs-varid'>o</span><span class='hs-layout'>,</span><span class='hs-varid'>p</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>n</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>o</span><span class='hs-layout'>,</span> <span class='hs-varid'>x</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>p</span><span class='hs-layout'>)</span>
-<a name="line-114"></a>
-<a name="line-115"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>c</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-116"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span>
-<a name="line-117"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conop'>:</span><span class='hs-layout'>)</span>
-<a name="line-118"></a>    <span class='hs-varid'>xs</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>x</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>xs</span> <span class='hs-varop'>++</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>x</span><span class='hs-keyglyph'>]</span>
-<a name="line-119"></a>
-<a name="line-120"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-conid'>()</span> <span class='hs-keyword'>where</span>
-<a name="line-121"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-122"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`snoc`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-123"></a>    <span class='hs-keyword'>_</span> <span class='hs-varop'>`cons`</span> <span class='hs-keyword'>_</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>()</span>
-<a name="line-124"></a>
-<a name="line-125"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>Any</span> <span class='hs-keyword'>where</span>
-<a name="line-126"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Any</span>
-<a name="line-127"></a>
-<a name="line-128"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>All</span> <span class='hs-keyword'>where</span>
-<a name="line-129"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>All</span>
-<a name="line-130"></a>
-<a name="line-131"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Endo</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-132"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Endo</span>
-<a name="line-133"></a>
-<a name="line-134"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Dual</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-135"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Dual</span>
-<a name="line-136"></a>    
-<a name="line-137"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Sum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-138"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Sum</span>
-<a name="line-139"></a>
-<a name="line-140"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Product</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-141"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Product</span>
-<a name="line-142"></a>
-<a name="line-143"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-144"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span>
-<a name="line-145"></a>
-<a name="line-146"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>First</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-147"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>First</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-148"></a>
-<a name="line-149"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-150"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span>
-<a name="line-151"></a>
-<a name="line-152"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Last</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-153"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Last</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-154"></a>
-<a name="line-155"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-156"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>singleton</span>
-<a name="line-157"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>&lt;|</span><span class='hs-layout'>)</span>
-<a name="line-158"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>|&gt;</span><span class='hs-layout'>)</span> 
-<a name="line-159"></a>
-<a name="line-160"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-161"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>return</span> <span class='hs-varop'>.</span> <span class='hs-varid'>unit</span>
-<a name="line-162"></a>
-<a name="line-163"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-164"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Seq</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-165"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-varop'>.&lt;|</span><span class='hs-layout'>)</span>
-<a name="line-166"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-varop'>.|&gt;</span><span class='hs-layout'>)</span>
-<a name="line-167"></a>
-<a name="line-168"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Int</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
-<a name="line-169"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-170"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-171"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-comment'>-- left bias irrelevant</span>
-<a name="line-172"></a>
-<a name="line-173"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-174"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-175"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-176"></a>    <span class='hs-comment'>-- pedantic about order in case 'Eq' doesn't implement structural equality</span>
-<a name="line-177"></a>    <span class='hs-varid'>snoc</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>member</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>s</span> 
-<a name="line-178"></a>             <span class='hs-keyglyph'>|</span> <span class='hs-varid'>otherwise</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span> <span class='hs-varid'>m</span> <span class='hs-varid'>s</span>
-<a name="line-179"></a>
-<a name="line-180"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Int</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-181"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-182"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-183"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varop'>.</span> <span class='hs-varid'>uncurry</span> <span class='hs-varop'>.</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-varop'>$</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span>
-<a name="line-184"></a>
-<a name="line-185"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>k</span><span class='hs-layout'>,</span><span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>v</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-186"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>singleton</span>
-<a name="line-187"></a>    <span class='hs-varid'>cons</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>uncurry</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insert</span>
-<a name="line-188"></a>    <span class='hs-varid'>snoc</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>flip</span> <span class='hs-varop'>.</span> <span class='hs-varid'>uncurry</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>insertWith</span> <span class='hs-varop'>$</span> <span class='hs-varid'>const</span> <span class='hs-varid'>id</span>
-<a name="line-189"></a>
-<a name="line-190"></a><span class='hs-comment'>{-
-<a name="line-191"></a>instance Enum a =&gt; Reducer a (BitSet a) where
-<a name="line-192"></a>    unit m = BitSet.insert m BitSet.empty
-<a name="line-193"></a>-}</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Reducer.html
hunk ./dist/doc/html/monoids/src/Data-Monoid-Union.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Monoid/Union.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE MultiParamTypeClasses, FlexibleInstances, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Union</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-4"></a>    <span class='hs-comment'>-- * Unions of Containers</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>HasUnion</span>
-<a name="line-6"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>empty</span>
-<a name="line-7"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>union</span>
-<a name="line-8"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Union</span><span class='hs-layout'>(</span><span class='hs-conid'>Union</span><span class='hs-layout'>,</span><span class='hs-varid'>getUnion</span><span class='hs-layout'>)</span>
-<a name="line-9"></a>    <span class='hs-comment'>-- * Unions of Containers of Monoids</span>
-<a name="line-10"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>HasUnionWith</span>
-<a name="line-11"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>emptyWith</span>
-<a name="line-12"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>unionWith</span>
-<a name="line-13"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>UnionWith</span><span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span><span class='hs-layout'>,</span><span class='hs-varid'>getUnionWith</span><span class='hs-layout'>)</span>
-<a name="line-14"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>
-<a name="line-16"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntMap</span>
-<a name="line-17"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntMap</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>
-<a name="line-19"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>IntSet</span>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>IntSet</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntSet</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Map</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Map</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Set</span>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Set</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>List</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>List</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-varid'>cons</span><span class='hs-layout'>,</span> <span class='hs-varid'>snoc</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>
-<a name="line-34"></a><a name="HasUnion"></a><span class='hs-comment'>-- | A Container suitable for the 'Union' 'Monoid'</span>
-<a name="line-35"></a><a name="HasUnion"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>HasUnion</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span>
-<a name="line-37"></a>    <span class='hs-comment'>{-# SPECIALIZE union :: IntMap a -&gt; IntMap a -&gt; IntMap a #-}</span>
-<a name="line-38"></a>    <span class='hs-comment'>{-# SPECIALIZE union :: Ord k =&gt; Map k a -&gt; Map k a -&gt; Map k a #-}</span>
-<a name="line-39"></a>    <span class='hs-comment'>{-# SPECIALIZE union :: Eq a =&gt; [a] -&gt; [a] -&gt; [a] #-}</span>
-<a name="line-40"></a>    <span class='hs-comment'>{-# SPECIALIZE union :: Ord a =&gt; Set a -&gt; Set a -&gt; Set a #-}</span>
-<a name="line-41"></a>    <span class='hs-comment'>{-# SPECIALIZE union :: IntSet -&gt; IntSet -&gt; IntSet #-}</span>
-<a name="line-42"></a>    <span class='hs-varid'>union</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>HasUnion</span> <span class='hs-layout'>(</span><span class='hs-conid'>IntMap</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-46"></a>    <span class='hs-varid'>union</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>union</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>HasUnion</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-50"></a>    <span class='hs-varid'>union</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>union</span>
-<a name="line-51"></a>
-<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Eq</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>HasUnion</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>a</span><span class='hs-keyglyph'>]</span> <span class='hs-keyword'>where</span>
-<a name="line-53"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>[]</span>
-<a name="line-54"></a>    <span class='hs-varid'>union</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>List</span><span class='hs-varop'>.</span><span class='hs-varid'>union</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>HasUnion</span> <span class='hs-layout'>(</span><span class='hs-conid'>Set</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-58"></a>    <span class='hs-varid'>union</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Set</span><span class='hs-varop'>.</span><span class='hs-varid'>union</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>HasUnion</span> <span class='hs-conid'>IntSet</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>empty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-62"></a>    <span class='hs-varid'>union</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntSet</span><span class='hs-varop'>.</span><span class='hs-varid'>union</span>
-<a name="line-63"></a>
-<a name="line-64"></a><a name="Union"></a><span class='hs-comment'>-- | The 'Monoid' @('union','empty')@</span>
-<a name="line-65"></a><a name="Union"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>f</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnion</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-layout'>}</span> 
-<a name="line-66"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-67"></a>
-<a name="line-68"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>HasUnion</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-69"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>empty</span>
-<a name="line-70"></a>    <span class='hs-conid'>Union</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>Union</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`union`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-71"></a>
-<a name="line-72"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>HasUnion</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>f</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-73"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
-<a name="line-74"></a>
-<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Union</span> <span class='hs-keyword'>where</span>
-<a name="line-76"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Union</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-77"></a>
-<a name="line-78"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Union</span> <span class='hs-keyword'>where</span> 
-<a name="line-79"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Union</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Union</span> <span class='hs-keyword'>where</span>
-<a name="line-82"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getUnion</span>
-<a name="line-83"></a>
-<a name="line-84"></a><a name="HasUnionWith"></a><span class='hs-comment'>-- | Polymorphic containers that we can supply an operation to handle unions with</span>
-<a name="line-85"></a><a name="HasUnionWith"></a><span class='hs-keyword'>class</span> <span class='hs-conid'>HasUnionWith</span> <span class='hs-varid'>f</span> <span class='hs-keyword'>where</span>
-<a name="line-86"></a>    <span class='hs-comment'>{-# SPECIALIZE unionWith :: (a -&gt; a -&gt; a) -&gt; IntMap a -&gt; IntMap a -&gt; IntMap a #-}</span>
-<a name="line-87"></a>    <span class='hs-comment'>{-# SPECIALIZE unionWith :: Ord k =&gt; (a -&gt; a -&gt; a) -&gt; Map k a -&gt; Map k a -&gt; Map k a #-}</span>
-<a name="line-88"></a>    <span class='hs-varid'>unionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span>
-<a name="line-89"></a>    <span class='hs-varid'>emptyWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span> 
-<a name="line-90"></a>
-<a name="line-91"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>HasUnionWith</span> <span class='hs-conid'>IntMap</span> <span class='hs-keyword'>where</span> 
-<a name="line-92"></a>    <span class='hs-varid'>emptyWith</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-93"></a>    <span class='hs-varid'>unionWith</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>IntMap</span><span class='hs-varop'>.</span><span class='hs-varid'>unionWith</span>
-<a name="line-94"></a>
-<a name="line-95"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>k</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>HasUnionWith</span> <span class='hs-layout'>(</span><span class='hs-conid'>Map</span> <span class='hs-varid'>k</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span> 
-<a name="line-96"></a>    <span class='hs-varid'>emptyWith</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>empty</span>
-<a name="line-97"></a>    <span class='hs-varid'>unionWith</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Map</span><span class='hs-varop'>.</span><span class='hs-varid'>unionWith</span>
-<a name="line-98"></a>
-<a name="line-99"></a>
-<a name="line-100"></a><a name="UnionWith"></a><span class='hs-comment'>-- | The 'Monoid' @('unionWith mappend','empty')@ for containers full of monoids.</span>
-<a name="line-101"></a><a name="UnionWith"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getUnionWith</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span> <span class='hs-layout'>}</span> 
-<a name="line-102"></a>    <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Functor</span><span class='hs-layout'>,</span><span class='hs-conid'>Pointed</span><span class='hs-layout'>,</span><span class='hs-conid'>Monad</span><span class='hs-layout'>)</span>
-<a name="line-103"></a>
-<a name="line-104"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>HasUnionWith</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-105"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>emptyWith</span>
-<a name="line-106"></a>    <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>UnionWith</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span> <span class='hs-layout'>(</span><span class='hs-varid'>unionWith</span> <span class='hs-varid'>mappend</span> <span class='hs-varid'>a</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-107"></a>
-<a name="line-108"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>HasUnionWith</span> <span class='hs-varid'>f</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>UnionWith</span> <span class='hs-varid'>f</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-109"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>UnionWith</span>
-<a name="line-110"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Monoid-Union.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Boolean.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Boolean.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Ring.Boolean</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- A Boolean 'Ring' over 'Bool'. Note well that the 'mappend' of this ring is</span>
-<a name="line-13"></a><span class='hs-comment'>-- symmetric difference and not disjunction like you might expect. To get that </span>
-<a name="line-14"></a><span class='hs-comment'>-- you should use use 'Ord' from "Data.Ring.Semi.Ord.Order" on 'Bool' to get the '&amp;&amp;'/'||'-based </span>
-<a name="line-15"></a><span class='hs-comment'>-- distributive-lattice 'SemiRing'</span>
-<a name="line-16"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Boolean</span>
-<a name="line-19"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>BoolRing</span><span class='hs-layout'>(</span><span class='hs-conid'>BoolRing</span><span class='hs-layout'>,</span> <span class='hs-varid'>getBoolRing</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-22"></a>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="BoolRing"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getBoolRing</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Bool</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyword'>where</span>
-<a name="line-29"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span> <span class='hs-conid'>False</span>
-<a name="line-30"></a>    <span class='hs-conid'>BoolRing</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>BoolRing</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>||</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>not</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Group</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span> <span class='hs-varop'>.</span> <span class='hs-varid'>not</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getBoolRing</span>
-<a name="line-34"></a>
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span> <span class='hs-conid'>True</span>
-<a name="line-37"></a>    <span class='hs-conid'>BoolRing</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>BoolRing</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>&amp;&amp;</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>SemiRing</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ring</span> <span class='hs-conid'>BoolRing</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Bool</span> <span class='hs-conid'>BoolRing</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>BoolRing</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Boolean.html
hunk ./dist/doc/html/monoids/src/Data-Ring-FromNum.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/FromNum.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, MultiParamTypeClasses, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a>
-<a name="line-3"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-4"></a><span class='hs-comment'>-- |</span>
-<a name="line-5"></a><span class='hs-comment'>-- Module      :  Data.Ring.FromNum</span>
-<a name="line-6"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-7"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- A wrapper that lies for you and claims any instance of 'Num' is a 'Ring'.</span>
-<a name="line-13"></a><span class='hs-comment'>-- Who knows, for your type it might even be telling the truth!</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>FromNum</span> 
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>FromNum</span><span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span><span class='hs-layout'>,</span> <span class='hs-varid'>getFromNum</span><span class='hs-layout'>)</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-24"></a>
-<a name="line-25"></a><a name="FromNum"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>FromNum</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getFromNum</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Num</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-28"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>0</span>
-<a name="line-29"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-32"></a>    <span class='hs-varid'>minus</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span>
-<a name="line-33"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>negate</span>
-<a name="line-34"></a>    
-<a name="line-35"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-36"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>1</span>
-<a name="line-37"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span>
-<a name="line-38"></a>
-<a name="line-39"></a><span class='hs-comment'>-- you can assume these, but you're probably lying to yourself</span>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-42"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-43"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-44"></a>    
-<a name="line-45"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-conid'>Integer</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromNum</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-46"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>fromInteger</span>
-<a name="line-47"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-FromNum.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Module-AutomaticDifferentiation.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Module/AutomaticDifferentiation.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span><span class='hs-varop'>.</span><span class='hs-conid'>AutomaticDifferentiation</span> 
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>D</span>
-<a name="line-5"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-6"></a>
-<a name="line-7"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Prelude</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-layout'>(</span><span class='hs-varop'>*</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-varop'>+</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-layout'>(</span><span class='hs-comment'>-</span><span class='hs-layout'>)</span><span class='hs-layout'>,</span><span class='hs-varid'>subtract</span><span class='hs-layout'>,</span><span class='hs-varid'>negate</span><span class='hs-layout'>)</span>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span>
-<a name="line-10"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-11"></a>
-<a name="line-12"></a><a name="D"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-15"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-varid'>mempty</span> <span class='hs-varid'>mempty</span>
-<a name="line-16"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`mappend`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>y</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>+</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>+</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-varid'>one</span> <span class='hs-varid'>zero</span>
-<a name="line-20"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>y</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>*.</span> <span class='hs-varid'>n</span> <span class='hs-varop'>+</span> <span class='hs-varid'>m</span> <span class='hs-varop'>.*</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Group</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-23"></a>    <span class='hs-varid'>gnegate</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>gnegate</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>gnegate</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-24"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`minus`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>y</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`minus`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`gsubtract`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>y</span> <span class='hs-varid'>n</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`gsubtract`</span> <span class='hs-varid'>y</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`gsubtract`</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-26"></a>
-<a name="line-27"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-28"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-29"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>SemiRing</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ring</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Group</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-31"></a>
-<a name="line-32"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-varid'>c</span> <span class='hs-varop'>`Reducer`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>c</span> <span class='hs-layout'>(</span><span class='hs-conid'>D</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-33"></a>    <span class='hs-varid'>unit</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>unit</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-34"></a>    <span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>c</span> <span class='hs-varop'>`cons`</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-35"></a>    <span class='hs-conid'>D</span> <span class='hs-varid'>x</span> <span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>D</span> <span class='hs-layout'>(</span><span class='hs-varid'>x</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-varid'>m</span> <span class='hs-varop'>`snoc`</span> <span class='hs-varid'>c</span><span class='hs-layout'>)</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-comment'>{--
-<a name="line-38"></a>infix 0 &gt;&lt;
-<a name="line-39"></a>
-<a name="line-40"></a>(&gt;&lt;) :: Multiplicatve a =&gt; (a -&gt; a) -&gt; (AD a -&gt; AD a) -&gt; AD a -&gt; AD a
-<a name="line-41"></a>(f &gt;&lt; f') a@(AD a0 a') = D (f a0) (a' * f' a)
-<a name="line-42"></a>
-<a name="line-43"></a>data AD r = AD r (Maybe (AD r))
-<a name="line-44"></a>
-<a name="line-45"></a>instance (Monoid r) =&gt; Monoid (AD r) where
-<a name="line-46"></a>    mempty = K mempty
-<a name="line-47"></a>    AD x m + AD y n = D (x + y) (m + n)
-<a name="line-48"></a>
-<a name="line-49"></a>instance (c `Reducer` r) =&gt; Reducer c (AD r) where
-<a name="line-50"></a>    unit c = c' where c' = AD (unit c) c'
-<a name="line-51"></a>--}</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Module-AutomaticDifferentiation.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Module.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Module.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>-- |</span>
-<a name="line-4"></a><span class='hs-comment'>-- Module      :  Data.Ring.Module</span>
-<a name="line-5"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-6"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-7"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-8"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-9"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-10"></a><span class='hs-comment'>--</span>
-<a name="line-11"></a><span class='hs-comment'>-- Left- and right- modules over rings, semirings, and Seminearrings.</span>
-<a name="line-12"></a><span class='hs-comment'>-- To avoid a proliferation of classes. These only require that there</span>
-<a name="line-13"></a><span class='hs-comment'>-- be an addition and multiplication operation for the 'Ring'</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Module</span> 
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LeftModule</span>
-<a name="line-20"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span>
-<a name="line-21"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RightModule</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Module</span>
-<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-27"></a><span class='hs-comment'>-- import qualified Data.Monoid.Combinators as Monoid</span>
-<a name="line-28"></a>
-<a name="line-29"></a><a name="LeftModule"></a><span class='hs-comment'>-- | @ (x * y) *. m = x * (y *. m) @</span>
-<a name="line-30"></a><a name="LeftModule"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>*.</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-32"></a>    
-<a name="line-33"></a><a name="RightModule"></a><span class='hs-comment'>-- | @ (m .* x) * y = m .* (x * y) @</span>
-<a name="line-34"></a><a name="RightModule"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Monoid</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>r</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-layout'>(</span><span class='hs-varop'>.*</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>r</span> <span class='hs-keyglyph'>-&gt;</span> <span class='hs-varid'>m</span>
-<a name="line-36"></a>
-<a name="line-37"></a><a name="Module"></a><span class='hs-comment'>-- | @ (x *. m) .* y = x *. (m .* y) @</span>
-<a name="line-38"></a><a name="Module"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>LeftModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>RightModule</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Module</span> <span class='hs-varid'>r</span> <span class='hs-varid'>m</span> 
-<a name="line-39"></a>
-<a name="line-40"></a><span class='hs-comment'>-- instance Monoid m =&gt; LeftModule Int m where i *. m = Monoid.replicate m i </span>
-<a name="line-41"></a><span class='hs-comment'>-- instance Monoid m =&gt; RightModule Int m where m .* i = Monoid.replicate m i </span>
-<a name="line-42"></a><span class='hs-comment'>-- instance Monoid m =&gt; Module Int m</span>
-<a name="line-43"></a>    
-<a name="line-44"></a><span class='hs-comment'>-- instance Monoid m =&gt; LeftModule Integer m where i *. m = Monoid.replicate m i </span>
-<a name="line-45"></a><span class='hs-comment'>-- instance Monoid m =&gt; RightModule Integer m where m .* i = Monoid.replicate m i </span>
-<a name="line-46"></a><span class='hs-comment'>-- instance Monoid m =&gt; Module Integer m</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Module.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi-Near.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi/Near.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses, UndecidableInstances #-}</span>
-<a name="line-3"></a>
-<a name="line-4"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-5"></a><span class='hs-comment'>-- |</span>
-<a name="line-6"></a><span class='hs-comment'>-- Module      :  Data.Ring.Semi.Near</span>
-<a name="line-7"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-8"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-9"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-10"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-11"></a><span class='hs-comment'>-- Portability :  portable (instances use MPTCs)</span>
-<a name="line-12"></a><span class='hs-comment'>--</span>
-<a name="line-13"></a><span class='hs-comment'>-- Defines left- and right- seminearrings. Every 'MonadPlus' wrapped around</span>
-<a name="line-14"></a><span class='hs-comment'>-- a 'Monoid' qualifies due to the distributivity of (&gt;&gt;=) over 'mplus'.</span>
-<a name="line-15"></a><span class='hs-comment'>--</span>
-<a name="line-16"></a><span class='hs-comment'>-- See &lt;<a href="http://conway.rutgers.edu/~ccshan/wiki/blog/posts/WordNumbers1/">http://conway.rutgers.edu/~ccshan/wiki/blog/posts/WordNumbers1/</a>&gt;</span>
-<a name="line-17"></a><span class='hs-comment'>--</span>
-<a name="line-18"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-21"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-22"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>LeftSemiNearRing</span>
-<a name="line-23"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>RightSemiNearRing</span>
-<a name="line-24"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-25"></a>
-<a name="line-26"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Reader</span>
-<a name="line-27"></a>
-<a name="line-28"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LRWS</span>
-<a name="line-29"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>RWS</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SRWS</span>
-<a name="line-30"></a>
-<a name="line-31"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LState</span>
-<a name="line-32"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>State</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SState</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Lazy</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>LWriter</span>
-<a name="line-35"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Monad</span><span class='hs-varop'>.</span><span class='hs-conid'>Writer</span><span class='hs-varop'>.</span><span class='hs-conid'>Strict</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>SWriter</span>
-<a name="line-36"></a>
-<a name="line-37"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span>
-<a name="line-38"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>FingerTree</span>
-<a name="line-39"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>FromString</span>
-<a name="line-40"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Self</span>
-<a name="line-41"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Generator</span>
-<a name="line-42"></a>
-<a name="line-43"></a><span class='hs-keyword'>import</span> <span class='hs-keyword'>qualified</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-keyword'>as</span> <span class='hs-conid'>Seq</span>
-<a name="line-44"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Sequence</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span><span class='hs-layout'>)</span>
-<a name="line-45"></a>
-<a name="line-46"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Text</span><span class='hs-varop'>.</span><span class='hs-conid'>Parsec</span><span class='hs-varop'>.</span><span class='hs-conid'>Prim</span>
-<a name="line-47"></a>
-<a name="line-48"></a><a name="RightSemiNearRing"></a><span class='hs-comment'>-- | @(a + b) * c = (a * c) + (b * c)@</span>
-<a name="line-49"></a><a name="RightSemiNearRing"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> 
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-comment'>-- 'Monoid' transformers</span>
-<a name="line-52"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-53"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-54"></a>
-<a name="line-55"></a><a name="LeftSemiNearRing"></a><span class='hs-comment'>-- | @a * (b + c) = (a * b) + (a * c)@</span>
-<a name="line-56"></a><a name="LeftSemiNearRing"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Multiplicative</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> 
-<a name="line-57"></a>
-<a name="line-58"></a><span class='hs-comment'>-- 'Monoid' transformers</span>
-<a name="line-59"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Self</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FromString</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-61"></a>
-<a name="line-62"></a><span class='hs-comment'>-- non-'Monad' instances</span>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Measured</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>FingerTree</span> <span class='hs-varid'>v</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-64"></a>
-<a name="line-65"></a><span class='hs-comment'>-- 'Monad' instances</span>
-<a name="line-66"></a><span class='hs-comment'>-- Every 'MonadPlus' over a 'Monoid' with an appropriate 'Multiplicative' instance</span>
-<a name="line-67"></a><span class='hs-comment'>-- for 'liftM2 mappend' is a 'LeftSemiNearRing' by 'MonadPlus' left-distributivity</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-keyglyph'>[</span><span class='hs-varid'>m</span><span class='hs-keyglyph'>]</span>
-<a name="line-70"></a>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-72"></a>
-<a name="line-73"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>m</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Seq</span> <span class='hs-varid'>m</span><span class='hs-layout'>)</span>
-<a name="line-74"></a>
-<a name="line-75"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Stream</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>t</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ParsecT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>u</span> <span class='hs-varid'>m</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-76"></a>
-<a name="line-77"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-78"></a>
-<a name="line-79"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LState</span><span class='hs-varop'>.</span><span class='hs-conid'>StateT</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-80"></a>
-<a name="line-81"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>ReaderT</span> <span class='hs-varid'>e</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>
-<a name="line-83"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-84"></a>
-<a name="line-85"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LRWS</span><span class='hs-varop'>.</span><span class='hs-conid'>RWST</span> <span class='hs-varid'>r</span> <span class='hs-varid'>w</span> <span class='hs-varid'>s</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-86"></a>
-<a name="line-87"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>SWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-88"></a>
-<a name="line-89"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>MonadPlus</span> <span class='hs-varid'>m</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>w</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>LWriter</span><span class='hs-varop'>.</span><span class='hs-conid'>WriterT</span> <span class='hs-varid'>w</span> <span class='hs-varid'>m</span> <span class='hs-varid'>n</span><span class='hs-layout'>)</span>
-<a name="line-90"></a>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi-Near.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi-Ord.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi/Ord.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, FlexibleContexts, MultiParamTypeClasses, GeneralizedNewtypeDeriving #-}</span>
-<a name="line-2"></a><span class='hs-comment'>----------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>-- |</span>
-<a name="line-4"></a><span class='hs-comment'>-- Module      :  Data.Ring.Semi.Ord</span>
-<a name="line-5"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009, Conal Elliott 2008</span>
-<a name="line-6"></a><span class='hs-comment'>-- License     :  BSD3</span>
-<a name="line-7"></a><span class='hs-comment'>-- </span>
-<a name="line-8"></a><span class='hs-comment'>-- Maintainer  :  ekmett@gmail.com</span>
-<a name="line-9"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-10"></a><span class='hs-comment'>-- </span>
-<a name="line-11"></a><span class='hs-comment'>-- Turn an instance of 'Ord' into a 'SemiRing' over 'max' and 'min'</span>
-<a name="line-12"></a><span class='hs-comment'>------------------------------------------------------------------------</span>
-<a name="line-13"></a>
-<a name="line-14"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span>
-<a name="line-15"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-16"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Order</span><span class='hs-layout'>(</span><span class='hs-conid'>Order</span><span class='hs-layout'>,</span><span class='hs-varid'>getOrder</span><span class='hs-layout'>)</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Priority</span><span class='hs-layout'>(</span><span class='hs-conid'>MinBound</span><span class='hs-layout'>,</span><span class='hs-conid'>Priority</span><span class='hs-layout'>,</span><span class='hs-conid'>MaxBound</span><span class='hs-layout'>)</span>
-<a name="line-18"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-19"></a>
-<a name="line-20"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Test</span><span class='hs-varop'>.</span><span class='hs-conid'>QuickCheck</span>
-<a name="line-21"></a><span class='hs-comment'>-- import Control.Applicative</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span>
-<a name="line-25"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-26"></a>
-<a name="line-27"></a><a name="Order"></a><span class='hs-comment'>-- | A 'SemiRing' using a type's built-in Bounded instance.</span>
-<a name="line-28"></a><a name="Order"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Order</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getOrder</span> <span class='hs-keyglyph'>::</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Ord</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Bounded</span><span class='hs-layout'>,</span><span class='hs-conid'>Arbitrary</span><span class='hs-layout'>)</span>
-<a name="line-29"></a>
-<a name="line-30"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-31"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-32"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minBound</span>
-<a name="line-33"></a>
-<a name="line-34"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-35"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-36"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maxBound</span>
-<a name="line-37"></a>    
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-39"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-40"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-41"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Bounded</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-42"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Order</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-46"></a>
-<a name="line-47"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-48"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Order</span>
-<a name="line-49"></a>
-<a name="line-50"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Copointed</span> <span class='hs-conid'>Order</span> <span class='hs-keyword'>where</span>
-<a name="line-51"></a>    <span class='hs-varid'>extract</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>getOrder</span>
-<a name="line-52"></a>
-<a name="line-53"></a><a name="Priority"></a><span class='hs-comment'>-- | A 'SemiRing' which adds 'minBound' and 'maxBound' to a pre-existing type.</span>
-<a name="line-54"></a><a name="Priority"></a><span class='hs-keyword'>data</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>|</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>)</span>
-<a name="line-55"></a>
-<a name="line-56"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Bounded</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-57"></a>    <span class='hs-varid'>minBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-58"></a>    <span class='hs-varid'>maxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-62"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MinBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-63"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>&lt;=</span> <span class='hs-varid'>b</span>
-<a name="line-64"></a>  <span class='hs-conid'>Priority</span> <span class='hs-keyword'>_</span> <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-65"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-conid'>MaxBound</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>True</span>
-<a name="line-66"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>&lt;=</span> <span class='hs-keyword'>_</span>         <span class='hs-keyglyph'>=</span> <span class='hs-conid'>False</span>
-<a name="line-67"></a>
-<a name="line-68"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-69"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-70"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`min`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-71"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`min`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
-<a name="line-72"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`min`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-73"></a>  
-<a name="line-74"></a>  <span class='hs-conid'>MinBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-varid'>v</span>          <span class='hs-keyglyph'>=</span> <span class='hs-varid'>v</span>
-<a name="line-75"></a>  <span class='hs-varid'>u</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MinBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-varid'>u</span>
-<a name="line-76"></a>  <span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>b</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>`max`</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-77"></a>  <span class='hs-keyword'>_</span>          <span class='hs-varop'>`max`</span> <span class='hs-conid'>MaxBound</span>   <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-78"></a>  <span class='hs-conid'>MaxBound</span>   <span class='hs-varop'>`max`</span> <span class='hs-keyword'>_</span>          <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-79"></a>
-<a name="line-80"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Arbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-81"></a>  <span class='hs-varid'>arbitrary</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>frequency</span> <span class='hs-keyglyph'>[</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MinBound</span><span class='hs-layout'>)</span>
-<a name="line-82"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>10</span><span class='hs-layout'>,</span> <span class='hs-varid'>fmap</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>arbitrary</span><span class='hs-layout'>)</span>
-<a name="line-83"></a>                        <span class='hs-layout'>,</span> <span class='hs-layout'>(</span><span class='hs-num'>1</span> <span class='hs-layout'>,</span><span class='hs-varid'>return</span> <span class='hs-conid'>MaxBound</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>]</span>
-<a name="line-84"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MinBound</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-num'>0</span>
-<a name="line-85"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-num'>1</span> <span class='hs-varop'>.</span> <span class='hs-varid'>coarbitrary</span> <span class='hs-varid'>a</span>
-<a name="line-86"></a>  <span class='hs-varid'>coarbitrary</span> <span class='hs-conid'>MaxBound</span>    <span class='hs-keyglyph'>=</span> <span class='hs-varid'>variant</span> <span class='hs-num'>2</span>
-<a name="line-87"></a>
-<a name="line-88"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-89"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>max</span>
-<a name="line-90"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>minBound</span>
-<a name="line-91"></a>
-<a name="line-92"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-93"></a>    <span class='hs-varid'>times</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-94"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>maxBound</span>
-<a name="line-95"></a>
-<a name="line-96"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-97"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-98"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-99"></a>
-<a name="line-100"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-101"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
-<a name="line-102"></a>
-<a name="line-103"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-104"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-105"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
-<a name="line-106"></a>
-<a name="line-107"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-108"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-conid'>Nothing</span><span class='hs-layout'>)</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-109"></a>    <span class='hs-varid'>unit</span> <span class='hs-layout'>(</span><span class='hs-conid'>MaxPriority</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>x</span><span class='hs-layout'>)</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-varid'>x</span>
-<a name="line-110"></a>
-<a name="line-111"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
-<a name="line-112"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MaxBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MaxBound</span>
-<a name="line-113"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Priority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span> <span class='hs-layout'>(</span><span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-114"></a>    <span class='hs-varid'>fmap</span> <span class='hs-keyword'>_</span> <span class='hs-conid'>MinBound</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>MinBound</span>
-<a name="line-115"></a>
-<a name="line-116"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Priority</span> <span class='hs-keyword'>where</span>
-<a name="line-117"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Priority</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi-Ord.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi-Tropical.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi/Tropical.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# LANGUAGE FlexibleInstances, MultiParamTypeClasses #-}</span>
-<a name="line-2"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-3"></a><span class='hs-comment'>---- |</span>
-<a name="line-4"></a><span class='hs-comment'>---- Module      :  Data.Ring.Semi.Tropical</span>
-<a name="line-5"></a><span class='hs-comment'>---- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-6"></a><span class='hs-comment'>---- License     :  BSD-style</span>
-<a name="line-7"></a><span class='hs-comment'>---- Maintainer  :  libraries@haskell.org</span>
-<a name="line-8"></a><span class='hs-comment'>---- Stability   :  experimental</span>
-<a name="line-9"></a><span class='hs-comment'>---- Portability :  portable</span>
-<a name="line-10"></a><span class='hs-comment'>----</span>
-<a name="line-11"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Tropical</span>
-<a name="line-14"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span>
-<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-16"></a>    <span class='hs-comment'>-- * Tropical Semirings</span>
-<a name="line-17"></a>    <span class='hs-layout'>,</span> <span class='hs-varid'>infinity</span>
-<a name="line-18"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Tropical</span><span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span><span class='hs-layout'>,</span><span class='hs-varid'>getTropical</span><span class='hs-layout'>)</span>
-<a name="line-19"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-20"></a>
-<a name="line-21"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Control</span><span class='hs-varop'>.</span><span class='hs-conid'>Functor</span><span class='hs-varop'>.</span><span class='hs-conid'>Pointed</span>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Reducer</span><span class='hs-layout'>,</span> <span class='hs-varid'>unit</span><span class='hs-layout'>,</span> <span class='hs-conid'>Monoid</span><span class='hs-layout'>,</span> <span class='hs-varid'>mappend</span><span class='hs-layout'>,</span> <span class='hs-varid'>mempty</span><span class='hs-layout'>)</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-24"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>hiding</span> <span class='hs-layout'>(</span><span class='hs-varid'>infinity</span><span class='hs-layout'>)</span>
-<a name="line-25"></a>
-<a name="line-26"></a><a name="infinity"></a><span class='hs-definition'>infinity</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span>
-<a name="line-27"></a><span class='hs-definition'>infinity</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span>
-<a name="line-28"></a>
-<a name="line-29"></a><span class='hs-comment'>-- | The 'SemiRing' @('min','+')@ over @'a' extended with 'infinity'@.</span>
-<a name="line-30"></a><span class='hs-comment'>--   When @a@ has a Num instance with an addition that respects order, then this is </span>
-<a name="line-31"></a><span class='hs-comment'>--   transformed into a tropical semiring. It is assumed that 0 is the least element</span>
-<a name="line-32"></a><span class='hs-comment'>--   of a.</span>
-<a name="line-33"></a><span class='hs-comment'>--</span>
-<a name="line-34"></a><span class='hs-comment'>--   &lt;<a href="http://hal.archives-ouvertes.fr/docs/00/11/37/79/PDF/Tropical.pdf">http://hal.archives-ouvertes.fr/docs/00/11/37/79/PDF/Tropical.pdf</a>&gt;</span>
-<a name="line-35"></a>
-<a name="line-36"></a><a name="Tropical"></a><span class='hs-keyword'>newtype</span> <span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span> <span class='hs-layout'>{</span> <span class='hs-varid'>getTropical</span> <span class='hs-keyglyph'>::</span> <span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span> <span class='hs-layout'>}</span> <span class='hs-keyword'>deriving</span> <span class='hs-layout'>(</span><span class='hs-conid'>Eq</span><span class='hs-layout'>,</span><span class='hs-conid'>Show</span><span class='hs-layout'>,</span><span class='hs-conid'>Read</span><span class='hs-layout'>)</span>
-<a name="line-37"></a>
-<a name="line-38"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ord</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-39"></a>    <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>EQ</span>
-<a name="line-40"></a>    <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span>  <span class='hs-varop'>`compare`</span> <span class='hs-keyword'>_</span>                    <span class='hs-keyglyph'>=</span> <span class='hs-conid'>GT</span>
-<a name="line-41"></a>    <span class='hs-keyword'>_</span>                 <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span>  <span class='hs-keyglyph'>=</span> <span class='hs-conid'>LT</span>
-<a name="line-42"></a>    <span class='hs-conid'>Tropical</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`compare`</span> <span class='hs-conid'>Tropical</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>a</span> <span class='hs-varop'>`compare`</span> <span class='hs-varid'>b</span>
-<a name="line-43"></a>
-<a name="line-44"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Monoid</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-45"></a>    <span class='hs-varid'>mempty</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>infinity</span>
-<a name="line-46"></a>    <span class='hs-varid'>mappend</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>min</span>
-<a name="line-47"></a>
-<a name="line-48"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-varid'>a</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-49"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-50"></a>
-<a name="line-51"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>Maybe</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-52"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span>
-<a name="line-53"></a>
-<a name="line-54"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Reducer</span> <span class='hs-layout'>(</span><span class='hs-conid'>MinPriority</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-55"></a>    <span class='hs-varid'>unit</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span> <span class='hs-varop'>.</span> <span class='hs-varid'>getMinPriority</span>
-<a name="line-56"></a>
-<a name="line-57"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Functor</span> <span class='hs-conid'>Tropical</span> <span class='hs-keyword'>where</span>
-<a name="line-58"></a>    <span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span> <span class='hs-layout'>(</span><span class='hs-varid'>fmap</span> <span class='hs-varid'>f</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-59"></a>
-<a name="line-60"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Pointed</span> <span class='hs-conid'>Tropical</span> <span class='hs-keyword'>where</span>
-<a name="line-61"></a>    <span class='hs-varid'>point</span> <span class='hs-keyglyph'>=</span> <span class='hs-conid'>Tropical</span> <span class='hs-varop'>.</span> <span class='hs-conid'>Just</span>
-<a name="line-62"></a>
-<a name="line-63"></a><span class='hs-keyword'>instance</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Multiplicative</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-64"></a>    <span class='hs-varid'>one</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span> <span class='hs-varop'>$</span> <span class='hs-varid'>fromInteger</span> <span class='hs-num'>0</span>
-<a name="line-65"></a>    <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span> <span class='hs-varop'>`times`</span> <span class='hs-keyword'>_</span>       <span class='hs-keyglyph'>=</span> <span class='hs-varid'>infinity</span>
-<a name="line-66"></a>    <span class='hs-conid'>Tropical</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-varop'>`times`</span> <span class='hs-conid'>Tropical</span> <span class='hs-layout'>(</span><span class='hs-conid'>Just</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=</span> <span class='hs-varid'>point</span> <span class='hs-layout'>(</span><span class='hs-varid'>a</span> <span class='hs-varop'>+</span> <span class='hs-varid'>b</span><span class='hs-layout'>)</span>
-<a name="line-67"></a>    <span class='hs-keyword'>_</span>  <span class='hs-varop'>`times`</span> <span class='hs-conid'>Tropical</span> <span class='hs-conid'>Nothing</span>      <span class='hs-keyglyph'>=</span> <span class='hs-varid'>infinity</span>
-<a name="line-68"></a>
-<a name="line-69"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-70"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>RightSemiNearRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-<a name="line-71"></a><span class='hs-keyword'>instance</span> <span class='hs-layout'>(</span><span class='hs-conid'>Ord</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>Num</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-layout'>(</span><span class='hs-conid'>Tropical</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi-Tropical.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Semi.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Semi.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Ring.Semi</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  non-portable (MPTCs)</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>--</span>
-<a name="line-11"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-12"></a>
-<a name="line-13"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-14"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-15"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>SemiRing</span>
-<a name="line-16"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-17"></a>
-<a name="line-18"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-19"></a>
-<a name="line-20"></a><a name="SemiRing"></a><span class='hs-comment'>-- | A 'SemiRing' is an instance of both 'Multiplicative' and 'Monoid' where </span>
-<a name="line-21"></a><a name="SemiRing"></a><span class='hs-comment'>--   'times' distributes over 'plus'.</span>
-<a name="line-22"></a><a name="SemiRing"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>RightSemiNearRing</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>LeftSemiNearRing</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>SemiRing</span> <span class='hs-varid'>a</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Semi.html
hunk ./dist/doc/html/monoids/src/Data-Ring-Sugar.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring/Sugar.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-2"></a><span class='hs-comment'>-- |</span>
-<a name="line-3"></a><span class='hs-comment'>-- Module      :  Data.Ring.Sugar</span>
-<a name="line-4"></a><span class='hs-comment'>-- Copyright   :  (c) Edward Kmett 2009</span>
-<a name="line-5"></a><span class='hs-comment'>-- License     :  BSD-style</span>
-<a name="line-6"></a><span class='hs-comment'>-- Maintainer  :  libraries@haskell.org</span>
-<a name="line-7"></a><span class='hs-comment'>-- Stability   :  experimental</span>
-<a name="line-8"></a><span class='hs-comment'>-- Portability :  portable</span>
-<a name="line-9"></a><span class='hs-comment'>--</span>
-<a name="line-10"></a><span class='hs-comment'>-- Syntactic sugar for working with rings that conflicts with names from the "Prelude".</span>
-<a name="line-11"></a><span class='hs-comment'>--</span>
-<a name="line-12"></a><span class='hs-comment'>-- &gt; import Prelude hiding ((-), (+), (*), negate, subtract)</span>
-<a name="line-13"></a><span class='hs-comment'>-- &gt; import Data.Ring.Sugar</span>
-<a name="line-14"></a><span class='hs-comment'>--</span>
-<a name="line-15"></a><span class='hs-comment'>-----------------------------------------------------------------------------</span>
-<a name="line-16"></a>
-<a name="line-17"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span> 
-<a name="line-18"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-19"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-<a name="line-20"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-21"></a>
-<a name="line-22"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Monoid</span><span class='hs-varop'>.</span><span class='hs-conid'>Multiplicative</span><span class='hs-varop'>.</span><span class='hs-conid'>Sugar</span>
-<a name="line-23"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span><span class='hs-varop'>.</span><span class='hs-conid'>Near</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring-Sugar.html
hunk ./dist/doc/html/monoids/src/Data-Ring.html 1
-<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
-<html>
-<head>
-<!-- Generated by HsColour, http://www.cs.york.ac.uk/fp/darcs/hscolour/ -->
-<title>Data/Ring.hs</title>
-<link type='text/css' rel='stylesheet' href='hscolour.css' />
-</head>
-<body>
-<pre><a name="line-1"></a><span class='hs-comment'>{-# OPTIONS_GHC -fno-warn-orphans #-}</span>
-<a name="line-2"></a><span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span>
-<a name="line-3"></a>    <span class='hs-layout'>(</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-4"></a>    <span class='hs-layout'>,</span> <span class='hs-keyword'>module</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-5"></a>    <span class='hs-layout'>,</span> <span class='hs-conid'>Ring</span>
-<a name="line-6"></a>    <span class='hs-layout'>)</span> <span class='hs-keyword'>where</span>
-<a name="line-7"></a>
-<a name="line-8"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Group</span>
-<a name="line-9"></a><span class='hs-keyword'>import</span> <span class='hs-conid'>Data</span><span class='hs-varop'>.</span><span class='hs-conid'>Ring</span><span class='hs-varop'>.</span><span class='hs-conid'>Semi</span>
-<a name="line-10"></a>
-<a name="line-11"></a><a name="Ring"></a><span class='hs-keyword'>class</span> <span class='hs-layout'>(</span><span class='hs-conid'>Group</span> <span class='hs-varid'>a</span><span class='hs-layout'>,</span> <span class='hs-conid'>SemiRing</span> <span class='hs-varid'>a</span><span class='hs-layout'>)</span> <span class='hs-keyglyph'>=&gt;</span> <span class='hs-conid'>Ring</span> <span class='hs-varid'>a</span>
-</pre></body>
-</html>
rmfile ./dist/doc/html/monoids/src/Data-Ring.html
hunk ./dist/doc/html/monoids/src/hscolour.css 1
-.hs-keyglyph, .hs-layout {color: red;}
-.hs-keyword {color: blue;}
-.hs-comment, .hs-comment a {color: green;}
-.hs-str, .hs-chr {color: teal;}
-.hs-keyword, .hs-conid, .hs-varid, .hs-conop, .hs-varop, .hs-num, .hs-cpp, .hs-sel, .hs-definition {}
rmfile ./dist/doc/html/monoids/src/hscolour.css
rmdir ./dist/doc/html/monoids/src
rmdir ./dist/doc/html/monoids
rmdir ./dist/doc/html
rmdir ./dist/doc
rmdir ./dist
hunk ./monoids.cabal 2
 name:		    monoids
-version:	    0.1.8
+version:	    0.1.7
 license:	    BSD3
 license-file:   LICENSE
 author:		    Edward A. Kmett
}

Context:

[auto
ekmett@gmail.com**20090329041010] 
[version #
ekmett@gmail.com**20090329032119] 
[removed old documentation
ekmett@gmail.com**20090329031117] 
[added Forward AD and an LZ78 Generator
ekmett@gmail.com**20090329012728] 
[tropical semirings
ekmett@gmail.com**20090328184404] 
[tropical semirings
ekmett@gmail.com**20090328184336] 
[typo
ekmett@gmail.com**20090328105231] 
[a ton of documentation
ekmett@gmail.com**20090328104147] 
[added fold. documentation clean
ekmett@gmail.com**20090328100455] 
[documentation
ekmett@gmail.com**20090328091810] 
[started putting proper headers on things
ekmett@gmail.com**20090328075224] 
[fixed some rings
ekmett@gmail.com**20090328062623] 
[massive restructuring
ekmett@gmail.com**20090328062217] 
[added parsing monoid
ekmett@gmail.com**20090327211051] 
[new combinators
ekmett@gmail.com**20090327201059] 
[restructured namespace to move Data.Monoid.Generator.Combinators into Data.Monoid.Combinators. Added RLE
ekmett@gmail.com**20090327193152] 
[added Boolean Rings
ekmett@gmail.com**20090327185113] 
[added Data.Array Generators
ekmett@gmail.com**20090327101045] 
[killed documentation
ekmett@gmail.com**20090327091552] 
[ring restructuring and documentation
ekmett@gmail.com**20090327090844] 
[change of the way we store Data.Ring to move more into the single namespace
ekmett@gmail.com**20090327085823] 
[documentation
ekmett@gmail.com**20090327081650] 
[started towards bitsets documentation
ekmett@gmail.com**20090327081628] 
[started towards Data.BitSet
ekmett@gmail.com**20090327081603] 
[documentation
ekmett@gmail.com**20090327073655] 
[simplified data.monoid.categorical
ekmett@gmail.com**20090327073632] 
[documentation fix
ekmett@gmail.com**20090327073326] 
[split out Data.Ring
ekmett@gmail.com**20090327073223] 
[data.monoid.monad.* cleanup
ekmett@gmail.com**20090327070420] 
[a ton of Data.Monoid.Monad.* instances
ekmett@gmail.com**20090327065253] 
[Data.Monoid.Monad.*
ekmett@gmail.com**20090327061256] 
[additional seminearrings, cosmetic changes
ekmett@gmail.com**20090327053541] 
[Seminearring Seq
ekmett@gmail.com**20090327052349] 
[generator improvements
ekmett@gmail.com**20090327052053] 
[documentation
ekmett@gmail.com**20090327051247] 
[more generators
ekmett@gmail.com**20090327051226] 
[removed redundant Union newtypes
ekmett@gmail.com**20090327043651] 
[documentation
ekmett@gmail.com**20090327043314] 
[Data.IntMap and Data.Map
ekmett@gmail.com**20090327043300] 
[Data.IntSet
ekmett@gmail.com**20090327041957] 
[Data.Set
ekmett@gmail.com**20090327041621] 
[added Data.Sequence
ekmett@gmail.com**20090327040022] 
[documentation
ekmett@gmail.com**20090327004201] 
[FromString propagation
ekmett@gmail.com**20090327004135] 
[split Self, added FromString
ekmett@gmail.com**20090327003859] 
[modified reducer sugar
ekmett@gmail.com**20090327001901] 
[documentation
ekmett@gmail.com**20090327001701] 
[Trying to get the IsString instance to show up
ekmett@gmail.com**20090327001629] 
[added find to Data.Monoid.Generator
ekmett@gmail.com**20090327001612] 
[documentation
ekmett@gmail.com**20090327001246] 
[added foldReduce to Data.Monoid.Reducer
ekmett@gmail.com**20090327001218] 
[foldMap' filter and find added to Data.Monoid.Generator.Combinators
ekmett@gmail.com**20090327000800] 
[documentation
ekmett@gmail.com**20090326234749] 
[exposed Mon from Data.Monoid.Categorical
ekmett@gmail.com**20090326234723] 
[documentation
ekmett@gmail.com**20090326234248] 
[massive restructuring and additional sugar
ekmett@gmail.com**20090326234203] 
[added a couple more monoids for applicative and monad
ekmett@gmail.com**20090325084732] 
[extra classes for data.monoid.ord
ekmett@gmail.com**20090325083138] 
[doc fixup
ekmett@gmail.com**20090325082330] 
[cleanup on data.monoid.generator.methods
ekmett@gmail.com**20090325082224] 
[data.monoid.generator cleanup
ekmett@gmail.com**20090325073324] 
[added members to Data.Monoid.Generator export list
ekmett@gmail.com**20090325071438] 
[documentation change to reflect new project name
ekmett@gmail.com**20090325070736] 
[widened scope. added more common monoids
ekmett@gmail.com**20090325070459] 
[doc cleanup
ekmett@gmail.com**20090323050823] 
[documentation fixup for Data.Monoid.Ord
ekmett@gmail.com**20090323050613] 
[added min priority monoids as well
ekmett@gmail.com**20090323050416] 
[improved haddock on Data.Monoid.Ord
ekmett@gmail.com**20090323045109] 
[added Data.Monoid.Ord to correct for the lack of Priority, Min, and Max monoids
ekmett@gmail.com**20090323043643] 
[added syntax highlighted documentation to archive
ekmett@gmail.com**20090322210732] 
[embedding documentation so its easier to push up to comonad.com, will probably revert
ekmett@gmail.com**20090322210031] 
[reorganized namespaces. new Generator scheme
ekmett@gmail.com**20090322205657] 
[More robust generator scheme
ekmett@gmail.com**20090322194105] 
[refactored Data.Monoid.Lexical to split out Data.Monoid.Lexical.Generator and Data.Monoid.Lexical.WithLexer
ekmett@gmail.com**20090322163256] 
[added a simple example of usage
ekmett@gmail.com**20090322155602] 
[lines start at character 1, not 0
ekmett@gmail.com**20090322153650] 
[added instance Lexer c ()
ekmett@gmail.com**20090322153528] 
[cleanup
ekmett@gmail.com**20090322153514] 
[splitting Lexer into Lexer and Generator let us generalize the list instance
ekmett@gmail.com**20090322152951] 
[literate setup
ekmett@gmail.com**20090322152330] 
[lexical-monoids package created
ekmett@gmail.com**20090322151615] 
Patch bundle hash:
137ba5ccbb578d2ac90404b31b48695e60bc4055
